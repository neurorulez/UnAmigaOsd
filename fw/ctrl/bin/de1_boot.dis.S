
bin/de1_boot.or32:     file format elf32-or32
bin/de1_boot.or32
architecture: or32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00400028

Program Header:
    LOAD off    0x00002000 vaddr 0x00400000 paddr 0x00400000 align 2**13
         filesz 0x0001a34c memsz 0x00021cc0 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors      00000028  00400000  00400000  00002000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         00016ce0  00400028  00400028  00002028  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002e34  00416d08  00416d08  00018d08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .data         00000810  00419b3c  00419b3c  0001bb3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00006974  0041a34c  0041a34c  0001c34c  2**2
                  ALLOC
  5 .stack        00001000  00420cc0  00420cc0  0001c34c  2**0
                  ALLOC
  6 .debug_abbrev 00000624  00000000  00000000  0001c34c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000784e  00000000  00000000  0001c970  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000c995  00000000  00000000  000241be  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a14  00000000  00000000  00030b54  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000748a  00000000  00000000  00031568  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubnames 0000001b  00000000  00000000  000389f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000639  00000000  00000000  00038a0d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_aranges 00000020  00000000  00000000  00039046  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000a10  00000000  00000000  00039066  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00001c9a  00000000  00000000  00039a76  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .comment      00000051  00000000  00000000  0003b710  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00400000 l    d  .vectors	00000000 .vectors
00400028 l    d  .text	00000000 .text
00416d08 l    d  .rodata	00000000 .rodata
00419b3c l    d  .data	00000000 .data
0041a34c l    d  .bss	00000000 .bss
00420cc0 l    d  .stack	00000000 .stack
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_pubtypes	00000000 .debug_pubtypes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00421cc0 l       .stack	00000000 _stack
00400004 l       .vectors	00000000 _reset
00400004 l       .vectors	00000000 real_reset
0040003c l       .text	00000000 bss_init_start
00400058 l       .text	00000000 bss_init_end
00000000 l    df *ABS*	00000000 memcmp.c
00400280 l     F .text	00000030 memcpy
004002b0 l     F .text	0000001c tolower
004002cc l     F .text	00000028 strcpy
004002f4 l     F .text	00000020 strlen
00400314 l     F .text	00000058 strncmp
0040036c l     F .text	0000006c strncpy
004003d8 l     F .text	00000b50 vsnprintf
00417734 l     O .rodata	00000011 lcdigits.16665
00417720 l     O .rodata	00000011 ucdigits.16666
00400f28 l     F .text	00000018 GetTimer
00400f40 l     F .text	0000001c CheckTimer
00400f5c l     F .text	00000990 BootUploadLogo
004095a4 l     F .text	00000044 RAOpen
004056a4 l     F .text	00000164 RARead
0041a4dc l     O .bss	00000400 sector_buffer.20952
004018ec l     F .text	00000408 BootUploadBall
00401cf4 l     F .text	00000f08 BootUploadCopper
00402bfc l     F .text	0000003c SwapEndianL
00402c38 l     F .text	00000054 SwapPartitionBytes
0041a498 l     O .bss	00000040 partitions.20931
00402c8c l     F .text	00000040 lfn_checksum
00402ccc l     F .text	00000154 CompareDirEntries
00402e20 l     F .text	00000020 ChangeDirectory
0041a354 l     O .bss	00000004 iCurrentDirectory.26227
0041a358 l     O .bss	00000004 iPreviousDirectory.26228
00402e40 l     F .text	00000068 GetFPGAStatus
00402ea8 l     F .text	000000d8 WriteTaskFile
00402f80 l     F .text	00000068 WriteStatus
00402fe8 l     F .text	000000b0 BuildHardfileIndex
0040533c l     F .text	0000020c FileSeek
00403098 l     F .text	000000a4 HardFileSeek
0041a8e0 l     O .bss	00000004 cluster_mask.20954
0041a351 l     O .bss	00000001 fat32.20955
0040313c l     F .text	0000006c DebugMessage
00420a64 l     O .bss	00000001 debugptr.39718
00420a68 l     O .bss	00000101 debuglines.39717
004031a8 l     F .text	00000078 RDBChecksum.33881
00403220 l     F .text	00000068 MMC_CRC
0041fd5c l     O .bss	00000001 crc.42301
00403288 l     F .text	0000012c MMC_Command
0041fd64 l     O .bss	00000001 response.42303
004033b4 l     F .text	0000003c quickrand.44673
00420a60 l     O .bss	00000004 prev.44675
004033f0 l     F .text	0000020c OsdSetTitle
00420a5c l     O .bss	00000004 arrow.44692
00419b3c l     O .data	00000800 charfont.44463
00420a1c l     O .bss	00000040 titlebuffer.44693
004035fc l     F .text	000007f4 OsdWriteOffset
00403df0 l     F .text	00000018 OsdWrite
00403e08 l     F .text	00000040 OsdEnable
00403e48 l     F .text	0000012c InfoMessage
0041a389 l     O .bss	00000001 menustate.39675
0041fd28 l     O .bss	00000004 menu_timer.39679
00403f74 l     F .text	00000048 OsdDisable
00403fbc l     F .text	00000054 ConfigVideo
00404010 l     F .text	00000038 ConfigMemory
00404048 l     F .text	0000003c ConfigCPU
00404084 l     F .text	00000038 ConfigChipset
004040bc l     F .text	00000044 ConfigFloppy
00404100 l     F .text	00000070 ConfigIDE
00404170 l     F .text	0000014c OsdGetCtrl
00420a14 l     O .bss	00000004 delay.44890
00420a18 l     O .bss	00000001 c2.44889
00420a10 l     O .bss	00000004 repeat.44891
00420a0c l     O .bss	00000001 repeat2.44892
00417384 l     O .rodata	00000080 keycode_table.44651
004042bc l     F .text	00000040 ScrollReset
00420a04 l     O .bss	00000004 scroll_timer.44690
00420a08 l     O .bss	00000004 scroll_offset.44689
004042fc l     F .text	00000128 scani
00404424 l     F .text	00000060 next_word
00404484 l     F .text	00000028 sprintf
004044ac l     F .text	00000194 ErrorMessage
0041cd18 l     O .bss	00000028 s.23738
00404640 l     F .text	00000054 SetConfigurationFilename
0041cd40 l     O .bss	0000000c configfilename.23739
00404694 l     F .text	00000068 printf
0041a398 l     O .bss	00000100 buf.5054
004046fc l     F .text	000001d8 MMC_Write
0041fd65 l     O .bss	00000001 CardType.42304
0041fd60 l     O .bss	00000004 timeout.42302
004048d4 l     F .text	00000088 FileWrite
0041dc8c l     O .bss	00000004 data_start.26208
0041a8dc l     O .bss	00000001 cluster_size.20953
0040495c l     F .text	00000320 MMC_ReadMultiple
00404c7c l     F .text	00000104 FileReadEx
00404d80 l     F .text	0000034c GetHardfileGeometry
00417404 l     O .rodata	00000010 C.834.54175
0041a8e8 l     O .bss	00000010 CSDData.22208
004050cc l     F .text	000001e8 MMC_Read
004052b4 l     F .text	00000088 FileRead
0041dca4 l     O .bss	00000200 fat_buffer.26220
0041dea4 l     O .bss	00000004 buffered_fat_index.26221
0041dc88 l     O .bss	00000004 fat_start.26207
00405548 l     F .text	0000015c FileNextSector
00405808 l     F .text	00000114 GetFATLink
0040591c l     F .text	000004bc MMC_Init
00405dd8 l     F .text	00000314 OpenHardfile
0041ccac l     O .bss	0000006c config.22631
0041a8f8 l     O .bss	00002288 hdf.22483
004092d0 l     F .text	000002d4 FileOpen
004060ec l     F .text	00000028 BootPrint
00406114 l     F .text	0000003c bprintfl
00406150 l     F .text	00000c18 WriteTrack
0041cb80 l     O .bss	0000012c file.22630
0041a8e4 l     O .bss	00000001 Error.22104
00406d68 l     F .text	00000134 FindSync
00406e9c l     F .text	000001ec UpdateEntry
00407088 l     F .text	00000548 FileCreate
0041dc90 l     O .bss	00000004 root_directory_cluster.26209
0041dc94 l     O .bss	00000004 root_directory_start.26210
0041dc98 l     O .bss	00000004 root_directory_size.26211
0041dca0 l     O .bss	00000004 fat_size.26216
0041dc9c l     O .bss	00000001 fat_number.26212
004075d0 l     F .text	00001c44 ScanDirectory
00420bb8 l     O .bss	00000105 lfn.26344
0041a352 l     O .bss	00000001 nDirEntries.26225
0041a353 l     O .bss	00000001 iSelectedEntry.26226
0041e7d0 l     O .bss	00000008 sort_table.26224
0041e6d0 l     O .bss	00000100 DirEntry.26223
0041dea8 l     O .bss	00000828 DirEntryLFN.26222
0041f100 l     O .bss	00000008 t_sort_table.26231
0041f000 l     O .bss	00000100 t_DirEntry.26230
0041e7d8 l     O .bss	00000828 t_DirEntryLFN.26229
00409214 l     F .text	000000bc SelectFile
0041a394 l     O .bss	00000004 fs_pFileExt.39713
0041fd59 l     O .bss	00000001 fs_Options.39714
0041fd5a l     O .bss	00000001 fs_MenuSelect.39715
0041fd5b l     O .bss	00000001 fs_MenuCancel.39716
004095e8 l     F .text	00000790 FindDrive
0041dc84 l     O .bss	00000004 boot_sector.26206
0041a4d8 l     O .bss	00000004 partitioncount.20932
0041dc80 l     O .bss	00000001 fattype.26204
0041dc9e l     O .bss	00000002 dir_entries.26215
00409d78 l     F .text	00000838 UploadKickstart
0041cd4c l     O .bss	00000c00 romkey.23741
0041d94c l     O .bss	00000334 romfile.23742
0040a5b0 l     F .text	000002f8 BootPrintEx
0041a348 l     O .data	00000004 adr.21086
00417420 l     O .rodata	00000300 boot_font.21009
0040a8a8 l     F .text	0000008c FatalError
0040a934 l     F .text	00000064 OsdReset.clone.0
0040a998 l     F .text	0000186c HandleHDD.clone.1
0041a350 l     O .bss	00000001 DebugMode.22632
0041a360 l     O .bss	00000028 debugmsg2.22482
0040c204 l     F .text	0000018c HandleFpga
0041a388 l     O .bss	00000001 led.36871
0041a35c l     O .bss	00000001 drives.28702
0041f108 l     O .bss	00000af0 df.28704
0040e464 l     F .text	0000058c ReadTrack
0040c390 l     F .text	0000008c txbuf_emit.50045.clone.2
004209c0 l     O .bss	00000001 txln.50009
004209b8 l     O .bss	00000008 txbuf.50002
004209b4 l     O .bss	00000001 txrp.50007
0040c41c l     F .text	0000008c txbuf_put.50049
004209b5 l     O .bss	00000001 txwp.50005
0040c4a8 l     F .text	00000040 txbuf_puts.50053
0040c4e8 l     F .text	00000040 mon_illcmd.50060
00420971 l     O .bss	00000001 rxwp.50006
0040c528 l     F .text	0000091c HandleSerial
00420968 l     O .bss	00000004 mon_en.50011
00420974 l     O .bss	00000040 rxbuf.50003
00420970 l     O .bss	00000001 rxrp.50008
0042096c l     O .bss	00000004 mon_step.50012
004209c4 l     O .bss	00000040 stbuf.50004
0041a34c l     O .bss	00000004 rstval.5034
0040ce44 l     F .text	00000040 strcat.clone.3
0040ce84 l     F .text	0000006c strncat.clone.4
0040cef0 l     F .text	0000021c BootClearScreen.clone.5
0040d10c l     F .text	00000030 ConfigurationExists.clone.6
0040d13c l     F .text	00001328 LoadConfiguration.clone.7
00417414 l     O .rodata	00000009 config_id.23835
00416e7c l     O .rodata	00000010 config_memory_chip_msg.22574
00416e8c l     O .rodata	00000010 config_memory_slow_msg.22575
00416ea8 l     O .rodata	00000010 config_memory_fast_msg.22576
0040e9f0 l     F .text	00000144 GetHDFFileType.clone.10
0041fbf8 l     O .bss	0000012c rdbfile.34114
0040eb34 l     F .text	00000310 OsdDrawLogo.clone.11
00416f14 l     O .rodata	0000046f logodata.44464
00420168 l     O .bss	00000800 framebuffer.44658
0040ee44 l     F .text	00000404 ScrollText
00420b7d l     O .bss	00000001 ctrl.39751
00420b7c l     O .bss	00000001 lalt.39752
0041a390 l     O .bss	00000001 config_autofire.39712
00416f04 l     O .rodata	00000010 config_autofire_msg.39703
00420b74 l     O .bss	00000004 helptext.39755
00420b70 l     O .bss	00000001 helpstate.39756
0041a38a l     O .bss	00000001 menusub.39677
0041a38c l     O .bss	00000004 menumask.39678
00420b78 l     O .bss	00000004 helptext_timer.39754
0041fd24 l     O .bss	00000001 parentstate.39676
00420b80 l     O .bss	00000038 t_hardfile.39750
0041fd54 l     O .bss	00000005 DiskInfo.39693
0041fd68 l     O .bss	00000400 stars.44657
0041fd2c l     O .bss	00000028 DirEntryInfo.39692
0041a340 l     O .data	00000006 info.39856
0041a33c l     O .data	00000004 template.39857
00420b6c l     O .bss	00000004 len.39848
00416eb8 l     O .rodata	00000010 config_cpu_msg.39700
00416ee4 l     O .rodata	00000020 config_chipset_msg.39702
00416ec8 l     O .rodata	0000001c config_hdf_msg.39701
00416e6c l     O .rodata	00000010 config_filter_msg.22573
00416e9c l     O .rodata	0000000c config_scanlines_msg.39698
00400000 g       *ABS*	00000000 __ram_start
004000a4 g       .text	00000000 __udivsi3
0047effc g       *ABS*	00000000 _heap_end
00420cc0 g       .bss	00000000 __bss_end
00419b3c g       *ABS*	00000000 __data_ram
00400208 g       .text	00000000 __umodsi3
00080000 g       *ABS*	00000000 __ram_length
0001a34c g       *ABS*	00000000 __rom_size
0041a34c g       .data	00000000 __data_end
00400068 g       .text	00000000 __mulsi3
0041a34c g       .bss	00000000 __bss_start
0040f248 g     F .text	00007ac0 main
004001a0 g       .text	00000000 __divsi3
0047fffc g       *ABS*	00000000 __stack
00400228 g       .text	00000000 __modsi3
00419b3c g       .data	00000000 __data_start



Disassembly of section .vectors:

00400000 <_reset-0x4>:
  400000:	00 01 a3 4c 	l.j 468d30 <_stack+0x47070>

00400004 <_reset>:
  400004:	15 00 00 01 	l.nop 0x1
  400008:	15 00 00 02 	l.nop 0x2
  40000c:	15 00 00 03 	l.nop 0x3
  400010:	15 00 00 04 	l.nop 0x4
  400014:	18 00 00 00 	l.movhi r0,0x0
  400018:	9c 60 00 01 	l.addi r3,r0,0x1
  40001c:	c0 00 18 11 	l.mtspr r0,r3,0x11
  400020:	18 20 00 47 	l.movhi r1,0x47
  400024:	a8 21 ff fc 	l.ori r1,r1,0xfffc

Disassembly of section .text:

00400028 <bss_init_start-0x14>:
  400028:	15 00 00 00 	l.nop 0x0
  40002c:	18 40 00 41 	l.movhi r2,0x41
  400030:	a8 42 a3 4c 	l.ori r2,r2,0xa34c
  400034:	18 60 00 42 	l.movhi r3,0x42
  400038:	a8 63 0c c0 	l.ori r3,r3,0xcc0

0040003c <bss_init_start>:
  40003c:	e4 62 18 00 	l.sfgeu r2,r3
  400040:	10 00 00 06 	l.bf 400058 <bss_init_end>
  400044:	15 00 00 00 	l.nop 0x0
  400048:	d4 02 00 00 	l.sw 0x0(r2),r0
  40004c:	9c 42 00 04 	l.addi r2,r2,0x4
  400050:	0f ff ff fb 	l.bnf 40003c <bss_init_start>
  400054:	15 00 00 00 	l.nop 0x0

00400058 <bss_init_end>:
  400058:	18 60 00 40 	l.movhi r3,0x40
  40005c:	a8 63 f2 48 	l.ori r3,r3,0xf248
  400060:	44 00 18 00 	l.jr r3
  400064:	15 00 00 00 	l.nop 0x0

00400068 <__mulsi3>:
  400068:	9d 60 00 00 	l.addi r11,r0,0x0
  40006c:	e4 23 58 00 	l.sfne r3,r11
  400070:	0c 00 00 0b 	l.bnf 40009c <__mulsi3+0x34>
  400074:	a8 a3 00 00 	l.ori r5,r3,0x0
  400078:	9c c0 00 00 	l.addi r6,r0,0x0
  40007c:	a4 65 00 01 	l.andi r3,r5,0x1
  400080:	e4 03 30 00 	l.sfeq r3,r6
  400084:	10 00 00 03 	l.bf 400090 <__mulsi3+0x28>
  400088:	b8 a5 00 41 	l.srli r5,r5,0x1
  40008c:	e1 6b 20 00 	l.add r11,r11,r4
  400090:	e4 25 30 00 	l.sfne r5,r6
  400094:	13 ff ff fa 	l.bf 40007c <__mulsi3+0x14>
  400098:	b8 84 00 01 	l.slli r4,r4,0x1
  40009c:	44 00 48 00 	l.jr r9
  4000a0:	15 00 00 00 	l.nop 0x0

004000a4 <__udivsi3>:
  4000a4:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  4000a8:	d4 01 48 00 	l.sw 0x0(r1),r9
  4000ac:	9d 60 00 00 	l.addi r11,r0,0x0
  4000b0:	9d 04 00 00 	l.addi r8,r4,0x0
  4000b4:	9c a3 00 00 	l.addi r5,r3,0x0
  4000b8:	e4 28 58 00 	l.sfne r8,r11
  4000bc:	0c 00 00 36 	l.bnf 400194 <__udivsi3+0xf0>
  4000c0:	9c e0 00 00 	l.addi r7,r0,0x0
  4000c4:	e4 48 28 00 	l.sfgtu r8,r5
  4000c8:	10 00 00 32 	l.bf 400190 <__udivsi3+0xec>
  4000cc:	e4 08 28 00 	l.sfeq r8,r5
  4000d0:	10 00 00 2e 	l.bf 400188 <__udivsi3+0xe4>
  4000d4:	e4 8b 40 00 	l.sfltu r11,r8
  4000d8:	0c 00 00 0d 	l.bnf 40010c <__udivsi3+0x68>
  4000dc:	9d a0 00 20 	l.addi r13,r0,0x20
  4000e0:	19 20 80 00 	l.movhi r9,0x8000
  4000e4:	9c c0 ff ff 	l.addi r6,r0,0xffffffff
  4000e8:	e0 65 48 03 	l.and r3,r5,r9
  4000ec:	b8 87 00 01 	l.slli r4,r7,0x1
  4000f0:	9d e5 00 00 	l.addi r15,r5,0x0
  4000f4:	b8 63 00 5f 	l.srli r3,r3,0x1f
  4000f8:	e1 ad 30 00 	l.add r13,r13,r6
  4000fc:	e0 e4 18 04 	l.or r7,r4,r3
  400100:	e4 87 40 00 	l.sfltu r7,r8
  400104:	13 ff ff f9 	l.bf 4000e8 <__udivsi3+0x44>
  400108:	b8 a5 00 01 	l.slli r5,r5,0x1
  40010c:	b8 e7 00 41 	l.srli r7,r7,0x1
  400110:	9d ad 00 01 	l.addi r13,r13,0x1
  400114:	9d 20 00 00 	l.addi r9,r0,0x0
  400118:	e4 89 68 00 	l.sfltu r9,r13
  40011c:	0c 00 00 1e 	l.bnf 400194 <__udivsi3+0xf0>
  400120:	9c af 00 00 	l.addi r5,r15,0x0
  400124:	19 e0 80 00 	l.movhi r15,0x8000
  400128:	9e 20 00 00 	l.addi r17,r0,0x0
  40012c:	e0 65 78 03 	l.and r3,r5,r15
  400130:	b8 87 00 01 	l.slli r4,r7,0x1
  400134:	b8 63 00 5f 	l.srli r3,r3,0x1f
  400138:	e0 e4 18 04 	l.or r7,r4,r3
  40013c:	e0 c7 40 02 	l.sub r6,r7,r8
  400140:	e0 66 78 03 	l.and r3,r6,r15
  400144:	b8 63 00 5f 	l.srli r3,r3,0x1f
  400148:	9c 80 00 00 	l.addi r4,r0,0x0
  40014c:	e4 23 20 00 	l.sfne r3,r4
  400150:	10 00 00 03 	l.bf 40015c <__udivsi3+0xb8>
  400154:	b8 6b 00 01 	l.slli r3,r11,0x1
  400158:	9c 80 00 01 	l.addi r4,r0,0x1
  40015c:	b8 a5 00 01 	l.slli r5,r5,0x1
  400160:	e4 24 88 00 	l.sfne r4,r17
  400164:	0c 00 00 03 	l.bnf 400170 <__udivsi3+0xcc>
  400168:	e1 63 20 04 	l.or r11,r3,r4
  40016c:	9c e6 00 00 	l.addi r7,r6,0x0
  400170:	9d 29 00 01 	l.addi r9,r9,0x1
  400174:	e4 89 68 00 	l.sfltu r9,r13
  400178:	13 ff ff ed 	l.bf 40012c <__udivsi3+0x88>
  40017c:	15 00 00 00 	l.nop 0x0
  400180:	00 00 00 05 	l.j 400194 <__udivsi3+0xf0>
  400184:	15 00 00 00 	l.nop 0x0
  400188:	00 00 00 03 	l.j 400194 <__udivsi3+0xf0>
  40018c:	9d 60 00 01 	l.addi r11,r0,0x1
  400190:	9c e5 00 00 	l.addi r7,r5,0x0
  400194:	85 21 00 00 	l.lwz r9,0x0(r1)
  400198:	44 00 48 00 	l.jr r9
  40019c:	9c 21 00 04 	l.addi r1,r1,0x4

004001a0 <__divsi3>:
  4001a0:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
  4001a4:	d4 01 48 00 	l.sw 0x0(r1),r9
  4001a8:	d4 01 50 04 	l.sw 0x4(r1),r10
  4001ac:	9c a3 00 00 	l.addi r5,r3,0x0
  4001b0:	9d 40 00 00 	l.addi r10,r0,0x0
  4001b4:	e5 85 50 00 	l.sflts r5,r10
  4001b8:	0c 00 00 04 	l.bnf 4001c8 <__divsi3+0x28>
  4001bc:	9c 60 00 00 	l.addi r3,r0,0x0
  4001c0:	9d 40 00 01 	l.addi r10,r0,0x1
  4001c4:	e0 a0 28 02 	l.sub r5,r0,r5
  4001c8:	e5 84 18 00 	l.sflts r4,r3
  4001cc:	0c 00 00 04 	l.bnf 4001dc <__divsi3+0x3c>
  4001d0:	15 00 00 00 	l.nop 0x0
  4001d4:	9d 4a 00 01 	l.addi r10,r10,0x1
  4001d8:	e0 80 20 02 	l.sub r4,r0,r4
  4001dc:	07 ff ff b2 	l.jal 4000a4 <__udivsi3>
  4001e0:	9c 65 00 00 	l.addi r3,r5,0x0
  4001e4:	9c 60 00 01 	l.addi r3,r0,0x1
  4001e8:	e4 0a 18 00 	l.sfeq r10,r3
  4001ec:	0c 00 00 03 	l.bnf 4001f8 <__divsi3+0x58>
  4001f0:	15 00 00 00 	l.nop 0x0
  4001f4:	e1 60 58 02 	l.sub r11,r0,r11
  4001f8:	85 21 00 00 	l.lwz r9,0x0(r1)
  4001fc:	85 41 00 04 	l.lwz r10,0x4(r1)
  400200:	44 00 48 00 	l.jr r9
  400204:	9c 21 00 08 	l.addi r1,r1,0x8

00400208 <__umodsi3>:
  400208:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  40020c:	d4 01 48 00 	l.sw 0x0(r1),r9
  400210:	07 ff ff a5 	l.jal 4000a4 <__udivsi3>
  400214:	15 00 00 00 	l.nop 0x0
  400218:	9d 67 00 00 	l.addi r11,r7,0x0
  40021c:	85 21 00 00 	l.lwz r9,0x0(r1)
  400220:	44 00 48 00 	l.jr r9
  400224:	9c 21 00 04 	l.addi r1,r1,0x4

00400228 <__modsi3>:
  400228:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
  40022c:	d4 01 48 00 	l.sw 0x0(r1),r9
  400230:	d4 01 50 04 	l.sw 0x4(r1),r10
  400234:	e5 83 00 00 	l.sflts r3,r0
  400238:	0c 00 00 04 	l.bnf 400248 <__modsi3+0x20>
  40023c:	9d 40 00 00 	l.addi r10,r0,0x0
  400240:	9d 40 00 01 	l.addi r10,r0,0x1
  400244:	e0 60 18 02 	l.sub r3,r0,r3
  400248:	e5 84 00 00 	l.sflts r4,r0
  40024c:	0c 00 00 03 	l.bnf 400258 <__modsi3+0x30>
  400250:	15 00 00 00 	l.nop 0x0
  400254:	e0 80 20 02 	l.sub r4,r0,r4
  400258:	07 ff ff 93 	l.jal 4000a4 <__udivsi3>
  40025c:	15 00 00 00 	l.nop 0x0
  400260:	bc 0a 00 01 	l.sfeqi r10,0x1
  400264:	0c 00 00 03 	l.bnf 400270 <__modsi3+0x48>
  400268:	9d 67 00 00 	l.addi r11,r7,0x0
  40026c:	e1 60 58 02 	l.sub r11,r0,r11
  400270:	85 21 00 00 	l.lwz r9,0x0(r1)
  400274:	85 41 00 04 	l.lwz r10,0x4(r1)
  400278:	44 00 48 00 	l.jr r9
  40027c:	9c 21 00 08 	l.addi r1,r1,0x8

00400280 <memcpy>:
	size_t nq = n >> 3;
	asm volatile ("cld ; rep ; movsq ; movl %3,%%ecx ; rep ; movsb":"+c"
		      (nq), "+S"(p), "+D"(q)
		      :"r"((uint32_t) (n & 7)));
#else
	while (n--) {
  400280:	00 00 00 07 	l.j 40029c <memcpy+0x1c>
  400284:	9c c0 00 00 	l.addi r6,r0,0x0

_BEGIN_STD_C

_PTR 	 _EXFUN(memchr,(const _PTR, int, size_t));
int 	 _EXFUN(memcmp,(const _PTR, const _PTR, size_t));
_PTR 	 _EXFUN(memcpy,(_PTR, const _PTR, size_t));
  400288:	e0 e3 30 00 	l.add r7,r3,r6
		*q++ = *p++;
  40028c:	8d 08 00 00 	l.lbz r8,0x0(r8)
  400290:	9c c6 00 01 	l.addi r6,r6,0x1
  400294:	d8 07 40 00 	l.sb 0x0(r7),r8
  400298:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
	size_t nq = n >> 3;
	asm volatile ("cld ; rep ; movsq ; movl %3,%%ecx ; rep ; movsb":"+c"
		      (nq), "+S"(p), "+D"(q)
		      :"r"((uint32_t) (n & 7)));
#else
	while (n--) {
  40029c:	bc 25 00 00 	l.sfnei r5,0x0
  4002a0:	13 ff ff fa 	l.bf 400288 <memcpy+0x8>
  4002a4:	e1 04 30 00 	l.add r8,r4,r6
		*q++ = *p++;
	}
#endif

	return dst;
}
  4002a8:	44 00 48 00 	l.jr r9
  4002ac:	a9 63 00 00 	l.ori r11,r3,0x0

004002b0 <tolower>:
	return 0;
}

int tolower(int c)
{
	if((c>='A')&&(c<='Z')) {
  4002b0:	9c 83 ff bf 	l.addi r4,r3,0xffffffbf
  4002b4:	bc 44 00 19 	l.sfgtui r4,0x19
  4002b8:	10 00 00 03 	l.bf 4002c4 <tolower+0x14>
  4002bc:	15 00 00 00 	l.nop 0x0
		return c + 'a' - 'A';
  4002c0:	9c 63 00 20 	l.addi r3,r3,0x20
	} else {
		return c;
	}
}
  4002c4:	44 00 48 00 	l.jr r9
  4002c8:	a9 63 00 00 	l.ori r11,r3,0x0

004002cc <strcpy>:
 */

#include <string.h>

char *strcpy(char *dst, const char *src)
{
  4002cc:	9c a0 00 00 	l.addi r5,r0,0x0
_PTR	 _EXFUN(memset,(_PTR, int, size_t));
char 	*_EXFUN(strcat,(char *, const char *));
char 	*_EXFUN(strchr,(const char *, int));
int	 _EXFUN(strcmp,(const char *, const char *));
int	 _EXFUN(strcoll,(const char *, const char *));
char 	*_EXFUN(strcpy,(char *, const char *));
  4002d0:	e0 c4 28 00 	l.add r6,r4,r5
  4002d4:	e0 e3 28 00 	l.add r7,r3,r5
	char *q = dst;
	const char *p = src;
	char ch;

	do {
		*q++ = ch = *p++;
  4002d8:	90 c6 00 00 	l.lbs r6,0x0(r6)
  4002dc:	d8 07 30 00 	l.sb 0x0(r7),r6
	} while (ch);
  4002e0:	bc 26 00 00 	l.sfnei r6,0x0
  4002e4:	13 ff ff fb 	l.bf 4002d0 <strcpy+0x4>
  4002e8:	9c a5 00 01 	l.addi r5,r5,0x1

	return dst;
}
  4002ec:	44 00 48 00 	l.jr r9
  4002f0:	a9 63 00 00 	l.ori r11,r3,0x0

004002f4 <strlen>:
 */

#include <string.h>

size_t strlen(const char *s)
{
  4002f4:	a8 83 00 00 	l.ori r4,r3,0x0
	const char *ss = s;
	while (*ss)
  4002f8:	90 a4 00 00 	l.lbs r5,0x0(r4)
  4002fc:	bc 25 00 00 	l.sfnei r5,0x0
  400300:	13 ff ff fe 	l.bf 4002f8 <strlen+0x4>
  400304:	9c 84 00 01 	l.addi r4,r4,0x1
  400308:	9c 84 ff ff 	l.addi r4,r4,0xffffffff
		ss++;
	return ss - s;
}
  40030c:	44 00 48 00 	l.jr r9
  400310:	e1 64 18 02 	l.sub r11,r4,r3

00400314 <strncmp>:
	const unsigned char *c1 = (const unsigned char *)s1;
	const unsigned char *c2 = (const unsigned char *)s2;
	unsigned char ch;
	int d = 0;

	while (n--) {
  400314:	9c c0 00 00 	l.addi r6,r0,0x0
  400318:	00 00 00 10 	l.j 400358 <strncmp+0x44>
  40031c:	a9 66 00 00 	l.ori r11,r6,0x0
size_t	 _EXFUN(strcspn,(const char *, const char *));
char 	*_EXFUN(strerror,(int));
size_t	 _EXFUN(strlen,(const char *));
char 	*_EXFUN(strncat,(char *, const char *, size_t));
int	 _EXFUN(strncmp,(const char *, const char *, size_t));
  400320:	e0 e3 30 00 	l.add r7,r3,r6
		d = (int)(ch = *c1++) - (int)*c2++;
  400324:	8d 68 00 00 	l.lbz r11,0x0(r8)
  400328:	8c e7 00 00 	l.lbz r7,0x0(r7)
  40032c:	e1 67 58 02 	l.sub r11,r7,r11
  400330:	9c c6 00 01 	l.addi r6,r6,0x1
		if (d || !ch)
  400334:	e1 00 58 02 	l.sub r8,r0,r11
  400338:	e1 08 58 04 	l.or r8,r8,r11
  40033c:	bd 88 00 00 	l.sfltsi r8,0x0
  400340:	10 00 00 09 	l.bf 400364 <strncmp+0x50>
  400344:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  400348:	9c e7 ff ff 	l.addi r7,r7,0xffffffff
  40034c:	bd 87 00 00 	l.sfltsi r7,0x0
  400350:	10 00 00 05 	l.bf 400364 <strncmp+0x50>
  400354:	15 00 00 00 	l.nop 0x0
	const unsigned char *c1 = (const unsigned char *)s1;
	const unsigned char *c2 = (const unsigned char *)s2;
	unsigned char ch;
	int d = 0;

	while (n--) {
  400358:	bc 25 00 00 	l.sfnei r5,0x0
  40035c:	13 ff ff f1 	l.bf 400320 <strncmp+0xc>
  400360:	e1 04 30 00 	l.add r8,r4,r6
		if (d || !ch)
			break;
	}

	return d;
}
  400364:	44 00 48 00 	l.jr r9
  400368:	15 00 00 00 	l.nop 0x0

0040036c <strncpy>:
 */

#include <string.h>

char *strncpy(char *dst, const char *src, size_t n)
{
  40036c:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
	char *q = dst;
  400370:	a8 c3 00 00 	l.ori r6,r3,0x0
	const char *p = src;
	char ch;

	while (n) {
  400374:	00 00 00 09 	l.j 400398 <strncpy+0x2c>
  400378:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
		n--;
		*q++ = ch = *p++;
  40037c:	90 e4 00 00 	l.lbs r7,0x0(r4)
  400380:	d8 06 38 00 	l.sb 0x0(r6),r7
	char *q = dst;
	const char *p = src;
	char ch;

	while (n) {
		n--;
  400384:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
		*q++ = ch = *p++;
		if (!ch)
  400388:	bc 07 00 00 	l.sfeqi r7,0x0
  40038c:	10 00 00 0c 	l.bf 4003bc <strncpy+0x50>
  400390:	9c c6 00 01 	l.addi r6,r6,0x1
	const char *p = src;
	char ch;

	while (n) {
		n--;
		*q++ = ch = *p++;
  400394:	9c 84 00 01 	l.addi r4,r4,0x1
{
	char *q = dst;
	const char *p = src;
	char ch;

	while (n) {
  400398:	bc 25 00 00 	l.sfnei r5,0x0
  40039c:	13 ff ff f8 	l.bf 40037c <strncpy+0x10>
  4003a0:	15 00 00 00 	l.nop 0x0

	/* The specs say strncpy() fills the entire buffer with NUL.  Sigh. */
	memset(q, 0, n);

	return dst;
}
  4003a4:	00 00 00 0a 	l.j 4003cc <strncpy+0x60>
  4003a8:	9c 21 00 04 	l.addi r1,r1,0x4
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
		*q++ = c;
  4003ac:	9c 40 00 00 	l.addi r2,r0,0x0
  4003b0:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  4003b4:	d8 06 10 00 	l.sb 0x0(r6),r2
  4003b8:	9c c6 00 01 	l.addi r6,r6,0x1
	asm volatile ("cld ; rep ; stosq ; movl %3,%%ecx ; rep ; stosb"
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
  4003bc:	bc 25 00 00 	l.sfnei r5,0x0
  4003c0:	13 ff ff fb 	l.bf 4003ac <strncpy+0x40>
  4003c4:	15 00 00 00 	l.nop 0x0
  4003c8:	9c 21 00 04 	l.addi r1,r1,0x4
  4003cc:	a9 63 00 00 	l.ori r11,r3,0x0
  4003d0:	44 00 48 00 	l.jr r9
  4003d4:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

004003d8 <vsnprintf>:
		st_normal,	/* Ground state */
		st_flags,	/* Special flags */
		st_width,	/* Field width */
		st_prec,	/* Field precision */
		st_modifiers	/* Length or conversion modifiers */
	} state = st_normal;
  4003d8:	9c e0 00 00 	l.addi r7,r0,0x0

	return o;
}

int vsnprintf(char *buffer, size_t n, const char *format, va_list ap)
{
  4003dc:	d7 e1 17 d4 	l.sw 0xffffffd4(r1),r2
  4003e0:	d7 e1 77 d8 	l.sw 0xffffffd8(r1),r14
  4003e4:	d7 e1 87 dc 	l.sw 0xffffffdc(r1),r16
  4003e8:	d7 e1 97 e0 	l.sw 0xffffffe0(r1),r18
  4003ec:	d7 e1 a7 e4 	l.sw 0xffffffe4(r1),r20
  4003f0:	d7 e1 b7 e8 	l.sw 0xffffffe8(r1),r22
  4003f4:	d7 e1 c7 ec 	l.sw 0xffffffec(r1),r24
  4003f8:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  4003fc:	d7 e1 d7 f0 	l.sw 0xfffffff0(r1),r26
  400400:	d7 e1 e7 f4 	l.sw 0xfffffff4(r1),r28
  400404:	d7 e1 f7 f8 	l.sw 0xfffffff8(r1),r30
  400408:	9c 21 ff 9c 	l.addi r1,r1,0xffffff9c
  40040c:	a8 46 00 00 	l.ori r2,r6,0x0
  400410:	d4 01 18 2c 	l.sw 0x2c(r1),r3
  400414:	d4 01 20 08 	l.sw 0x8(r1),r4
	const char *p = format;
	char ch;
	char *q = buffer;
  400418:	aa c3 00 00 	l.ori r22,r3,0x0
	int rank = rank_int;	/* Default rank */
	int width = 0;
	int prec = -1;
	int base;
	size_t sz;
	enum flags flags = 0;
  40041c:	a9 c7 00 00 	l.ori r14,r7,0x0
	char *q = buffer;
	size_t o = 0;		/* Number of characters output */
	uintmax_t val = 0;
	int rank = rank_int;	/* Default rank */
	int width = 0;
	int prec = -1;
  400420:	9f 00 ff ff 	l.addi r24,r0,0xffffffff
	char ch;
	char *q = buffer;
	size_t o = 0;		/* Number of characters output */
	uintmax_t val = 0;
	int rank = rank_int;	/* Default rank */
	int width = 0;
  400424:	aa 87 00 00 	l.ori r20,r7,0x0
	const char *p = format;
	char ch;
	char *q = buffer;
	size_t o = 0;		/* Number of characters output */
	uintmax_t val = 0;
	int rank = rank_int;	/* Default rank */
  400428:	aa 07 00 00 	l.ori r16,r7,0x0
	} state = st_normal;
	const char *sarg;	/* %s string argument */
	char carg;		/* %c char argument */
	int slen;		/* String length */

	while ((ch = *p++)) {
  40042c:	00 00 02 a0 	l.j 400eac <vsnprintf+0xad4>
  400430:	aa 47 00 00 	l.ori r18,r7,0x0
		switch (state) {
  400434:	bc 47 00 04 	l.sfgtui r7,0x4
  400438:	10 00 02 9c 	l.bf 400ea8 <vsnprintf+0xad0>
  40043c:	18 80 00 41 	l.movhi r4,0x41
  400440:	b8 67 00 02 	l.slli r3,r7,0x2
  400444:	a8 84 6d 08 	l.ori r4,r4,0x6d08
  400448:	e0 63 20 00 	l.add r3,r3,r4
  40044c:	84 63 00 00 	l.lwz r3,0x0(r3)
  400450:	44 00 18 00 	l.jr r3
  400454:	15 00 00 00 	l.nop 0x0
		case st_normal:
			if (ch == '%') {
  400458:	bc 06 00 25 	l.sfeqi r6,0x25
  40045c:	10 00 02 84 	l.bf 400e6c <vsnprintf+0xa94>
  400460:	84 a1 00 08 	l.lwz r5,0x8(r1)
				flags = 0;
				rank = rank_int;
				width = 0;
				prec = -1;
			} else {
				EMIT(ch);
  400464:	e4 72 28 00 	l.sfgeu r18,r5
  400468:	10 00 00 04 	l.bf 400478 <vsnprintf+0xa0>
  40046c:	15 00 00 00 	l.nop 0x0
  400470:	d8 16 30 00 	l.sb 0x0(r22),r6
  400474:	9e d6 00 01 	l.addi r22,r22,0x1
  400478:	00 00 02 8c 	l.j 400ea8 <vsnprintf+0xad0>
  40047c:	9e 52 00 01 	l.addi r18,r18,0x1
			}
			break;

		case st_flags:
			switch (ch) {
  400480:	9c c6 ff e0 	l.addi r6,r6,0xffffffe0
  400484:	a4 c6 00 ff 	l.andi r6,r6,0xff
  400488:	bc 46 00 10 	l.sfgtui r6,0x10
  40048c:	10 00 02 7e 	l.bf 400e84 <vsnprintf+0xaac>
  400490:	18 60 00 41 	l.movhi r3,0x41
  400494:	b8 c6 00 02 	l.slli r6,r6,0x2
  400498:	a8 63 6d 1c 	l.ori r3,r3,0x6d1c
  40049c:	e0 c6 18 00 	l.add r6,r6,r3
  4004a0:	84 66 00 00 	l.lwz r3,0x0(r6)
  4004a4:	44 00 18 00 	l.jr r3
  4004a8:	15 00 00 00 	l.nop 0x0
			case '-':
				flags |= FL_MINUS;
				break;
			case '+':
				flags |= FL_PLUS;
				break;
  4004ac:	00 00 02 7f 	l.j 400ea8 <vsnprintf+0xad0>
  4004b0:	a9 ce 00 04 	l.ori r14,r14,0x4
			case '\'':
				flags |= FL_TICK;
				break;
  4004b4:	00 00 02 7d 	l.j 400ea8 <vsnprintf+0xad0>
  4004b8:	a9 ce 00 08 	l.ori r14,r14,0x8
			case ' ':
				flags |= FL_SPACE;
				break;
  4004bc:	00 00 02 7b 	l.j 400ea8 <vsnprintf+0xad0>
  4004c0:	a9 ce 00 10 	l.ori r14,r14,0x10
			case '#':
				flags |= FL_HASH;
				break;
  4004c4:	00 00 02 79 	l.j 400ea8 <vsnprintf+0xad0>
  4004c8:	a9 ce 00 20 	l.ori r14,r14,0x20
			case '0':
				flags |= FL_ZERO;
				break;
  4004cc:	00 00 02 77 	l.j 400ea8 <vsnprintf+0xad0>
  4004d0:	a9 ce 00 01 	l.ori r14,r14,0x1
				break;
			}
			break;

		case st_width:
			if (ch >= '0' && ch <= '9') {
  4004d4:	9c 66 ff d0 	l.addi r3,r6,0xffffffd0
  4004d8:	a4 63 00 ff 	l.andi r3,r3,0xff
  4004dc:	bc 43 00 09 	l.sfgtui r3,0x9
  4004e0:	10 00 00 08 	l.bf 400500 <vsnprintf+0x128>
  4004e4:	bc 26 00 2a 	l.sfnei r6,0x2a
				width = width * 10 + (ch - '0');
  4004e8:	e0 74 a0 00 	l.add r3,r20,r20
  4004ec:	ba 94 00 03 	l.slli r20,r20,0x3
  4004f0:	e2 83 a0 00 	l.add r20,r3,r20
  4004f4:	9e 94 ff d0 	l.addi r20,r20,0xffffffd0
  4004f8:	00 00 02 6c 	l.j 400ea8 <vsnprintf+0xad0>
  4004fc:	e2 94 30 00 	l.add r20,r20,r6
			} else if (ch == '*') {
  400500:	10 00 00 09 	l.bf 400524 <vsnprintf+0x14c>
  400504:	bc 26 00 2e 	l.sfnei r6,0x2e
				width = va_arg(ap, int);
  400508:	86 82 00 00 	l.lwz r20,0x0(r2)
				if (width < 0) {
  40050c:	bd 74 00 00 	l.sfgesi r20,0x0
  400510:	10 00 02 66 	l.bf 400ea8 <vsnprintf+0xad0>
  400514:	9c 42 00 04 	l.addi r2,r2,0x4
					width = -width;
  400518:	e2 80 a0 02 	l.sub r20,r0,r20
					flags |= FL_MINUS;
  40051c:	00 00 02 63 	l.j 400ea8 <vsnprintf+0xad0>
  400520:	a9 ce 00 02 	l.ori r14,r14,0x2
				}
			} else if (ch == '.') {
  400524:	10 00 02 5b 	l.bf 400e90 <vsnprintf+0xab8>
  400528:	15 00 00 00 	l.nop 0x0
				prec = 0;	/* Precision given */
				state = st_prec;
  40052c:	9c e0 00 03 	l.addi r7,r0,0x3
				if (width < 0) {
					width = -width;
					flags |= FL_MINUS;
				}
			} else if (ch == '.') {
				prec = 0;	/* Precision given */
  400530:	00 00 02 5e 	l.j 400ea8 <vsnprintf+0xad0>
  400534:	9f 00 00 00 	l.addi r24,r0,0x0
				p--;	/* Process this character again */
			}
			break;

		case st_prec:
			if (ch >= '0' && ch <= '9') {
  400538:	9c 66 ff d0 	l.addi r3,r6,0xffffffd0
  40053c:	a4 63 00 ff 	l.andi r3,r3,0xff
  400540:	bc 43 00 09 	l.sfgtui r3,0x9
  400544:	10 00 00 08 	l.bf 400564 <vsnprintf+0x18c>
  400548:	bc 26 00 2a 	l.sfnei r6,0x2a
				prec = prec * 10 + (ch - '0');
  40054c:	e0 78 c0 00 	l.add r3,r24,r24
  400550:	bb 18 00 03 	l.slli r24,r24,0x3
  400554:	e3 03 c0 00 	l.add r24,r3,r24
  400558:	9f 18 ff d0 	l.addi r24,r24,0xffffffd0
  40055c:	00 00 02 53 	l.j 400ea8 <vsnprintf+0xad0>
  400560:	e3 18 30 00 	l.add r24,r24,r6
			} else if (ch == '*') {
  400564:	10 00 02 4b 	l.bf 400e90 <vsnprintf+0xab8>
  400568:	9c 62 00 04 	l.addi r3,r2,0x4
				prec = va_arg(ap, int);
  40056c:	87 02 00 00 	l.lwz r24,0x0(r2)
				if (prec < 0)
  400570:	bd 98 00 00 	l.sfltsi r24,0x0
  400574:	0c 00 02 4d 	l.bnf 400ea8 <vsnprintf+0xad0>
  400578:	a8 43 00 00 	l.ori r2,r3,0x0
					prec = -1;
  40057c:	00 00 02 48 	l.j 400e9c <vsnprintf+0xac4>
  400580:	9f 00 ff ff 	l.addi r24,r0,0xffffffff
				p--;	/* Process this character again */
			}
			break;

		case st_modifiers:
			switch (ch) {
  400584:	bc 06 00 6c 	l.sfeqi r6,0x6c
  400588:	10 00 00 17 	l.bf 4005e4 <vsnprintf+0x20c>
  40058c:	bd 46 00 6c 	l.sfgtsi r6,0x6c
  400590:	10 00 00 09 	l.bf 4005b4 <vsnprintf+0x1dc>
  400594:	bc 06 00 74 	l.sfeqi r6,0x74
  400598:	bc 06 00 68 	l.sfeqi r6,0x68
  40059c:	10 00 00 10 	l.bf 4005dc <vsnprintf+0x204>
  4005a0:	bc 06 00 6a 	l.sfeqi r6,0x6a
  4005a4:	10 00 00 0c 	l.bf 4005d4 <vsnprintf+0x1fc>
  4005a8:	bc 06 00 4c 	l.sfeqi r6,0x4c
  4005ac:	00 00 00 06 	l.j 4005c4 <vsnprintf+0x1ec>
  4005b0:	15 00 00 00 	l.nop 0x0
  4005b4:	10 00 02 3c 	l.bf 400ea4 <vsnprintf+0xacc>
  4005b8:	bc 06 00 7a 	l.sfeqi r6,0x7a
  4005bc:	10 00 02 3a 	l.bf 400ea4 <vsnprintf+0xacc>
  4005c0:	bc 06 00 71 	l.sfeqi r6,0x71
  4005c4:	0c 00 00 0c 	l.bnf 4005f4 <vsnprintf+0x21c>
  4005c8:	bd b0 00 02 	l.sflesi r16,0x2
			case 't':
				rank = PTRDIFF_T_RANK;
				break;
			case 'L':
			case 'q':
				rank += 2;
  4005cc:	00 00 00 08 	l.j 4005ec <vsnprintf+0x214>
  4005d0:	9e 10 00 02 	l.addi r16,r16,0x2
				break;
			case 'l':
				rank++;	/* Longer rank */
				break;
			case 'j':
				rank = INTMAX_RANK;
  4005d4:	00 00 02 35 	l.j 400ea8 <vsnprintf+0xad0>
  4005d8:	9e 00 00 02 	l.addi r16,r0,0x2
		case st_modifiers:
			switch (ch) {
				/* Length modifiers - nonterminal sequences */
			case 'h':
				rank--;	/* Shorter rank */
				break;
  4005dc:	00 00 02 33 	l.j 400ea8 <vsnprintf+0xad0>
  4005e0:	9e 10 ff ff 	l.addi r16,r16,0xffffffff
			case 'l':
				rank++;	/* Longer rank */
				break;
  4005e4:	00 00 02 31 	l.j 400ea8 <vsnprintf+0xad0>
  4005e8:	9e 10 00 01 	l.addi r16,r16,0x1
				rank = PTRDIFF_T_RANK;
				break;
			case 'L':
			case 'q':
				rank += 2;
				break;
  4005ec:	00 00 02 30 	l.j 400eac <vsnprintf+0xad4>
  4005f0:	84 a1 00 20 	l.lwz r5,0x20(r1)
  4005f4:	10 00 00 04 	l.bf 400604 <vsnprintf+0x22c>
  4005f8:	bd 70 ff fe 	l.sfgesi r16,0xfffffffe
  4005fc:	9e 00 00 02 	l.addi r16,r0,0x2
  400600:	bd 70 ff fe 	l.sfgesi r16,0xfffffffe
  400604:	10 00 00 03 	l.bf 400610 <vsnprintf+0x238>
  400608:	bc 06 00 6e 	l.sfeqi r6,0x6e
  40060c:	9e 00 ff fe 	l.addi r16,r0,0xfffffffe
				if (rank < MIN_RANK)
					rank = MIN_RANK;
				else if (rank > MAX_RANK)
					rank = MAX_RANK;

				switch (ch) {
  400610:	10 00 01 ea 	l.bf 400db8 <vsnprintf+0x9e0>
  400614:	bd 46 00 6e 	l.sfgtsi r6,0x6e
  400618:	10 00 00 14 	l.bf 400668 <vsnprintf+0x290>
  40061c:	bc 06 00 73 	l.sfeqi r6,0x73
  400620:	bc 06 00 63 	l.sfeqi r6,0x63
  400624:	10 00 01 7e 	l.bf 400c1c <vsnprintf+0x844>
  400628:	bd 46 00 63 	l.sfgtsi r6,0x63
  40062c:	10 00 00 09 	l.bf 400650 <vsnprintf+0x278>
  400630:	bc 06 00 64 	l.sfeqi r6,0x64
  400634:	bc 06 00 50 	l.sfeqi r6,0x50
  400638:	10 00 00 1f 	l.bf 4006b4 <vsnprintf+0x2dc>
  40063c:	bc 06 00 58 	l.sfeqi r6,0x58
  400640:	0c 00 02 04 	l.bnf 400e50 <vsnprintf+0xa78>
  400644:	84 61 00 08 	l.lwz r3,0x8(r1)
					goto is_unsigned;
				case 'u':	/* Unsigned decimal */
					base = 10;
					goto is_unsigned;
				case 'X':	/* Upper case hexadecimal */
					flags |= FL_UPPER;
  400648:	00 00 00 3c 	l.j 400738 <vsnprintf+0x360>
  40064c:	a9 ce 00 80 	l.ori r14,r14,0x80
				if (rank < MIN_RANK)
					rank = MIN_RANK;
				else if (rank > MAX_RANK)
					rank = MAX_RANK;

				switch (ch) {
  400650:	10 00 00 20 	l.bf 4006d0 <vsnprintf+0x2f8>
  400654:	bc 06 00 69 	l.sfeqi r6,0x69
  400658:	0c 00 01 fe 	l.bnf 400e50 <vsnprintf+0xa78>
  40065c:	84 61 00 08 	l.lwz r3,0x8(r1)
					goto is_integer;

				case 'd':	/* Signed decimal output */
				case 'i':
					base = 10;
					flags |= FL_SIGNED;
  400660:	00 00 00 1d 	l.j 4006d4 <vsnprintf+0x2fc>
  400664:	a9 ce 00 40 	l.ori r14,r14,0x40
				if (rank < MIN_RANK)
					rank = MIN_RANK;
				else if (rank > MAX_RANK)
					rank = MAX_RANK;

				switch (ch) {
  400668:	10 00 01 73 	l.bf 400c34 <vsnprintf+0x85c>
  40066c:	bd 46 00 73 	l.sfgtsi r6,0x73
  400670:	10 00 00 09 	l.bf 400694 <vsnprintf+0x2bc>
  400674:	bc 06 00 75 	l.sfeqi r6,0x75
  400678:	bc 06 00 6f 	l.sfeqi r6,0x6f
  40067c:	10 00 00 0c 	l.bf 4006ac <vsnprintf+0x2d4>
  400680:	bc 06 00 70 	l.sfeqi r6,0x70
  400684:	0c 00 01 f3 	l.bnf 400e50 <vsnprintf+0xa78>
  400688:	84 61 00 08 	l.lwz r3,0x8(r1)
					/* fall through */
				case 'p':	/* Pointer */
					base = 16;
					prec = (CHAR_BIT*sizeof(void *)+3)/4;
					flags |= FL_HASH;
					val = (uintmax_t)(uintptr_t)
  40068c:	00 00 00 0c 	l.j 4006bc <vsnprintf+0x2e4>
  400690:	84 a2 00 00 	l.lwz r5,0x0(r2)
				if (rank < MIN_RANK)
					rank = MIN_RANK;
				else if (rank > MAX_RANK)
					rank = MAX_RANK;

				switch (ch) {
  400694:	10 00 00 27 	l.bf 400730 <vsnprintf+0x358>
  400698:	bc 06 00 78 	l.sfeqi r6,0x78
  40069c:	0c 00 01 ed 	l.bnf 400e50 <vsnprintf+0xa78>
  4006a0:	84 61 00 08 	l.lwz r3,0x8(r1)
					goto is_unsigned;
				case 'X':	/* Upper case hexadecimal */
					flags |= FL_UPPER;
					/* fall through */
				case 'x':	/* Hexadecimal */
					base = 16;
  4006a4:	00 00 00 26 	l.j 40073c <vsnprintf+0x364>
  4006a8:	9f 40 00 10 	l.addi r26,r0,0x10
							   signed long long);
						break;
					}
					goto is_integer;
				case 'o':	/* Octal */
					base = 8;
  4006ac:	00 00 00 24 	l.j 40073c <vsnprintf+0x364>
  4006b0:	9f 40 00 08 	l.addi r26,r0,0x8
				else if (rank > MAX_RANK)
					rank = MAX_RANK;

				switch (ch) {
				case 'P':	/* Upper case pointer */
					flags |= FL_UPPER;
  4006b4:	a9 ce 00 80 	l.ori r14,r14,0x80
					/* fall through */
				case 'p':	/* Pointer */
					base = 16;
					prec = (CHAR_BIT*sizeof(void *)+3)/4;
					flags |= FL_HASH;
					val = (uintmax_t)(uintptr_t)
  4006b8:	84 a2 00 00 	l.lwz r5,0x0(r2)
					flags |= FL_UPPER;
					/* fall through */
				case 'p':	/* Pointer */
					base = 16;
					prec = (CHAR_BIT*sizeof(void *)+3)/4;
					flags |= FL_HASH;
  4006bc:	a9 ce 00 20 	l.ori r14,r14,0x20
					val = (uintmax_t)(uintptr_t)
						va_arg(ap, void *);
  4006c0:	9c 42 00 04 	l.addi r2,r2,0x4
				switch (ch) {
				case 'P':	/* Upper case pointer */
					flags |= FL_UPPER;
					/* fall through */
				case 'p':	/* Pointer */
					base = 16;
  4006c4:	9f 40 00 10 	l.addi r26,r0,0x10
					prec = (CHAR_BIT*sizeof(void *)+3)/4;
					flags |= FL_HASH;
					val = (uintmax_t)(uintptr_t)
						va_arg(ap, void *);
					goto is_integer;
  4006c8:	00 00 00 35 	l.j 40079c <vsnprintf+0x3c4>
  4006cc:	9f 00 00 08 	l.addi r24,r0,0x8

				case 'd':	/* Signed decimal output */
				case 'i':
					base = 10;
					flags |= FL_SIGNED;
  4006d0:	a9 ce 00 40 	l.ori r14,r14,0x40
					switch (rank) {
  4006d4:	bc 10 00 00 	l.sfeqi r16,0x0
  4006d8:	10 00 00 10 	l.bf 400718 <vsnprintf+0x340>
  4006dc:	bd 50 00 00 	l.sfgtsi r16,0x0
  4006e0:	10 00 00 07 	l.bf 4006fc <vsnprintf+0x324>
  4006e4:	bc 10 00 01 	l.sfeqi r16,0x1
  4006e8:	bc 10 ff ff 	l.sfeqi r16,0xffffffff
  4006ec:	0c 00 00 08 	l.bnf 40070c <vsnprintf+0x334>
  4006f0:	15 00 00 00 	l.nop 0x0
						val = (uintmax_t)(intmax_t)
							(signed char)
							va_arg(ap, signed int);
						break;
					case rank_short:
						val = (uintmax_t)(intmax_t)
  4006f4:	00 00 00 07 	l.j 400710 <vsnprintf+0x338>
  4006f8:	98 a2 00 02 	l.lhs r5,0x2(r2)

				case 'd':	/* Signed decimal output */
				case 'i':
					base = 10;
					flags |= FL_SIGNED;
					switch (rank) {
  4006fc:	10 00 00 07 	l.bf 400718 <vsnprintf+0x340>
  400700:	bc 10 00 02 	l.sfeqi r16,0x2
  400704:	10 00 00 07 	l.bf 400720 <vsnprintf+0x348>
  400708:	15 00 00 00 	l.nop 0x0
  40070c:	90 a2 00 03 	l.lbs r5,0x3(r2)
							va_arg(ap, signed int);
						break;
					case rank_short:
						val = (uintmax_t)(intmax_t)
							(signed short)
							va_arg(ap, signed int);
  400710:	00 00 00 06 	l.j 400728 <vsnprintf+0x350>
  400714:	9c 42 00 04 	l.addi r2,r2,0x4
					case rank_int:
						val = (uintmax_t)(intmax_t)
						    va_arg(ap, signed int);
						break;
					case rank_long:
						val = (uintmax_t)(intmax_t)
  400718:	03 ff ff fe 	l.j 400710 <vsnprintf+0x338>
  40071c:	84 a2 00 00 	l.lwz r5,0x0(r2)
						    va_arg(ap, signed long);
						break;
					case rank_longlong:
						val = (uintmax_t)(intmax_t)
  400720:	84 a2 00 04 	l.lwz r5,0x4(r2)
  400724:	9c 42 00 08 	l.addi r2,r2,0x8
						    va_arg(ap,
							   signed long long);
						break;
  400728:	00 00 00 1d 	l.j 40079c <vsnprintf+0x3c4>
  40072c:	9f 40 00 0a 	l.addi r26,r0,0xa
				case 'o':	/* Octal */
					base = 8;
					goto is_unsigned;
				case 'u':	/* Unsigned decimal */
					base = 10;
					goto is_unsigned;
  400730:	00 00 00 03 	l.j 40073c <vsnprintf+0x364>
  400734:	9f 40 00 0a 	l.addi r26,r0,0xa
				case 'X':	/* Upper case hexadecimal */
					flags |= FL_UPPER;
					/* fall through */
				case 'x':	/* Hexadecimal */
					base = 16;
  400738:	9f 40 00 10 	l.addi r26,r0,0x10
					goto is_unsigned;

				is_unsigned:
					switch (rank) {
  40073c:	bc 10 00 00 	l.sfeqi r16,0x0
  400740:	10 00 00 12 	l.bf 400788 <vsnprintf+0x3b0>
  400744:	bd 50 00 00 	l.sfgtsi r16,0x0
  400748:	10 00 00 07 	l.bf 400764 <vsnprintf+0x38c>
  40074c:	bc 10 00 01 	l.sfeqi r16,0x1
  400750:	bc 10 ff ff 	l.sfeqi r16,0xffffffff
  400754:	0c 00 00 08 	l.bnf 400774 <vsnprintf+0x39c>
  400758:	15 00 00 00 	l.nop 0x0
							va_arg(ap, unsigned
							       int);
						break;
					case rank_short:
						val = (uintmax_t)
							(unsigned short)
  40075c:	00 00 00 09 	l.j 400780 <vsnprintf+0x3a8>
  400760:	84 a2 00 00 	l.lwz r5,0x0(r2)
				case 'x':	/* Hexadecimal */
					base = 16;
					goto is_unsigned;

				is_unsigned:
					switch (rank) {
  400764:	10 00 00 09 	l.bf 400788 <vsnprintf+0x3b0>
  400768:	bc 10 00 02 	l.sfeqi r16,0x2
  40076c:	10 00 00 0a 	l.bf 400794 <vsnprintf+0x3bc>
  400770:	15 00 00 00 	l.nop 0x0
					case rank_char:
						val = (uintmax_t)
							(unsigned char)
  400774:	84 a2 00 00 	l.lwz r5,0x0(r2)
					goto is_unsigned;

				is_unsigned:
					switch (rank) {
					case rank_char:
						val = (uintmax_t)
  400778:	00 00 00 05 	l.j 40078c <vsnprintf+0x3b4>
  40077c:	a4 a5 00 ff 	l.andi r5,r5,0xff
							(unsigned char)
							va_arg(ap, unsigned
							       int);
						break;
					case rank_short:
						val = (uintmax_t)
  400780:	00 00 00 03 	l.j 40078c <vsnprintf+0x3b4>
  400784:	a4 a5 ff ff 	l.andi r5,r5,0xffff
						val = (uintmax_t)
							va_arg(ap, unsigned
							       int);
						break;
					case rank_long:
						val = (uintmax_t)
  400788:	84 a2 00 00 	l.lwz r5,0x0(r2)
							va_arg(ap, unsigned
							       long);
						break;
  40078c:	00 00 00 04 	l.j 40079c <vsnprintf+0x3c4>
  400790:	9c 42 00 04 	l.addi r2,r2,0x4
					case rank_longlong:
						val = (uintmax_t)
  400794:	84 a2 00 04 	l.lwz r5,0x4(r2)
  400798:	9c 42 00 08 	l.addi r2,r2,0x8
						break;
					}
					/* fall through */

				is_integer:
					sz = format_int(q, (o < n) ? n - o : 0,
  40079c:	84 81 00 08 	l.lwz r4,0x8(r1)
  4007a0:	e4 72 20 00 	l.sfgeu r18,r4
  4007a4:	10 00 00 03 	l.bf 4007b0 <vsnprintf+0x3d8>
  4007a8:	9f 80 00 00 	l.addi r28,r0,0x0
  4007ac:	e3 84 90 02 	l.sub r28,r4,r18
	int minus = 0;
	int ndigits = 0, nchars;
	int tickskip, b4tick;

	/* Select type of digits */
	digits = (flags & FL_UPPER) ? ucdigits : lcdigits;
  4007b0:	18 e0 00 41 	l.movhi r7,0x41
  4007b4:	a4 ce 00 80 	l.andi r6,r14,0x80
  4007b8:	a8 e7 77 34 	l.ori r7,r7,0x7734
						break;
					}
					/* fall through */

				is_integer:
					sz = format_int(q, (o < n) ? n - o : 0,
  4007bc:	d4 01 28 1c 	l.sw 0x1c(r1),r5
	int minus = 0;
	int ndigits = 0, nchars;
	int tickskip, b4tick;

	/* Select type of digits */
	digits = (flags & FL_UPPER) ? ucdigits : lcdigits;
  4007c0:	d4 01 30 10 	l.sw 0x10(r1),r6
  4007c4:	bc 06 00 00 	l.sfeqi r6,0x0
  4007c8:	10 00 00 05 	l.bf 4007dc <vsnprintf+0x404>
  4007cc:	d4 01 38 28 	l.sw 0x28(r1),r7
  4007d0:	18 60 00 41 	l.movhi r3,0x41
  4007d4:	a8 63 77 20 	l.ori r3,r3,0x7720
  4007d8:	d4 01 18 28 	l.sw 0x28(r1),r3

	/* If signed, separate out the minus */
	if (flags & FL_SIGNED && (long) val < 0) {
  4007dc:	bd 65 00 00 	l.sfgesi r5,0x0
  4007e0:	10 00 00 0a 	l.bf 400808 <vsnprintf+0x430>
  4007e4:	b8 6e 00 46 	l.srli r3,r14,0x6
  4007e8:	a4 63 00 01 	l.andi r3,r3,0x1
  4007ec:	bc 03 00 00 	l.sfeqi r3,0x0
  4007f0:	10 00 00 06 	l.bf 400808 <vsnprintf+0x430>
  4007f4:	e0 a0 28 02 	l.sub r5,r0,r5
		minus = 1;
  4007f8:	9c 80 00 01 	l.addi r4,r0,0x1
		val = (unsigned long) (-(long) val);
  4007fc:	d4 01 28 1c 	l.sw 0x1c(r1),r5
	/* Select type of digits */
	digits = (flags & FL_UPPER) ? ucdigits : lcdigits;

	/* If signed, separate out the minus */
	if (flags & FL_SIGNED && (long) val < 0) {
		minus = 1;
  400800:	00 00 00 04 	l.j 400810 <vsnprintf+0x438>
  400804:	d4 01 20 0c 	l.sw 0xc(r1),r4
	size_t o = 0, oo;
	static const char lcdigits[] = "0123456789abcdef";
	static const char ucdigits[] = "0123456789ABCDEF";
	const char *digits;
	unsigned long tmpval;
	int minus = 0;
  400808:	9c a0 00 00 	l.addi r5,r0,0x0
  40080c:	d4 01 28 0c 	l.sw 0xc(r1),r5
	int ndigits = 0, nchars;
  400810:	9c c0 00 00 	l.addi r6,r0,0x0
	/* Select type of digits */
	digits = (flags & FL_UPPER) ? ucdigits : lcdigits;

	/* If signed, separate out the minus */
	if (flags & FL_SIGNED && (long) val < 0) {
		minus = 1;
  400814:	85 61 00 1c 	l.lwz r11,0x1c(r1)
	static const char lcdigits[] = "0123456789abcdef";
	static const char ucdigits[] = "0123456789ABCDEF";
	const char *digits;
	unsigned long tmpval;
	int minus = 0;
	int ndigits = 0, nchars;
  400818:	00 00 00 07 	l.j 400834 <vsnprintf+0x45c>
  40081c:	d4 01 30 00 	l.sw 0x0(r1),r6
	}

	/* Count the number of digits needed.  This returns zero for 0. */
	tmpval = val;
	while (tmpval) {
		tmpval /= base;
  400820:	07 ff fe 21 	l.jal 4000a4 <__udivsi3>
  400824:	a8 9a 00 00 	l.ori r4,r26,0x0
		ndigits++;
  400828:	84 e1 00 00 	l.lwz r7,0x0(r1)
  40082c:	9c e7 00 01 	l.addi r7,r7,0x1
  400830:	d4 01 38 00 	l.sw 0x0(r1),r7
		val = (unsigned long) (-(long) val);
	}

	/* Count the number of digits needed.  This returns zero for 0. */
	tmpval = val;
	while (tmpval) {
  400834:	bc 2b 00 00 	l.sfnei r11,0x0
  400838:	13 ff ff fa 	l.bf 400820 <vsnprintf+0x448>
  40083c:	a8 6b 00 00 	l.ori r3,r11,0x0
		ndigits++;
	}

	/* Adjust ndigits for size of output */

	if (flags & FL_HASH && base == 8) {
  400840:	b8 8e 00 45 	l.srli r4,r14,0x5
  400844:	a4 84 00 01 	l.andi r4,r4,0x1
  400848:	bc 04 00 00 	l.sfeqi r4,0x0
  40084c:	10 00 00 0b 	l.bf 400878 <vsnprintf+0x4a0>
  400850:	d4 01 20 14 	l.sw 0x14(r1),r4
  400854:	bc 3a 00 08 	l.sfnei r26,0x8
  400858:	10 00 00 09 	l.bf 40087c <vsnprintf+0x4a4>
  40085c:	ab d8 00 00 	l.ori r30,r24,0x0
		if (prec < ndigits + 1)
  400860:	84 61 00 00 	l.lwz r3,0x0(r1)
  400864:	e5 83 c0 00 	l.sflts r3,r24
  400868:	10 00 00 06 	l.bf 400880 <vsnprintf+0x4a8>
  40086c:	84 81 00 00 	l.lwz r4,0x0(r1)
			prec = ndigits + 1;
  400870:	00 00 00 04 	l.j 400880 <vsnprintf+0x4a8>
  400874:	9f c3 00 01 	l.addi r30,r3,0x1
		ndigits++;
	}

	/* Adjust ndigits for size of output */

	if (flags & FL_HASH && base == 8) {
  400878:	ab d8 00 00 	l.ori r30,r24,0x0
		if (prec < ndigits + 1)
			prec = ndigits + 1;
	}

	if (ndigits < prec) {
  40087c:	84 81 00 00 	l.lwz r4,0x0(r1)
  400880:	e5 84 f0 00 	l.sflts r4,r30
  400884:	10 00 00 08 	l.bf 4008a4 <vsnprintf+0x4cc>
  400888:	a4 6e 00 08 	l.andi r3,r14,0x8
		ndigits = prec;	/* Mandatory number padding */
	} else if (val == 0) {
  40088c:	84 a1 00 1c 	l.lwz r5,0x1c(r1)
  400890:	bc 05 00 00 	l.sfeqi r5,0x0
  400894:	10 00 00 04 	l.bf 4008a4 <vsnprintf+0x4cc>
  400898:	9f c0 00 01 	l.addi r30,r0,0x1
  40089c:	ab c4 00 00 	l.ori r30,r4,0x0
		ndigits = 1;	/* Zero still requires space */
	}

	/* For ', figure out what the skip should be */
	if (flags & FL_TICK) {
  4008a0:	a4 6e 00 08 	l.andi r3,r14,0x8
  4008a4:	bc 03 00 00 	l.sfeqi r3,0x0
  4008a8:	10 00 00 08 	l.bf 4008c8 <vsnprintf+0x4f0>
  4008ac:	d4 01 f0 04 	l.sw 0x4(r1),r30
		tickskip = (base == 16) ? 4 : 3;
  4008b0:	9c c0 00 03 	l.addi r6,r0,0x3
  4008b4:	bc 3a 00 10 	l.sfnei r26,0x10
  4008b8:	10 00 00 04 	l.bf 4008c8 <vsnprintf+0x4f0>
  4008bc:	d4 01 30 04 	l.sw 0x4(r1),r6
  4008c0:	9c e0 00 04 	l.addi r7,r0,0x4
  4008c4:	d4 01 38 04 	l.sw 0x4(r1),r7
	} else {
		tickskip = ndigits;	/* No tick marks */
	}

	/* Tick marks aren't digits, but generated by the number converter */
	ndigits += (ndigits - 1) / tickskip;
  4008c8:	9c 7e ff ff 	l.addi r3,r30,0xffffffff
  4008cc:	07 ff fe 35 	l.jal 4001a0 <__divsi3>
  4008d0:	84 81 00 04 	l.lwz r4,0x4(r1)
  4008d4:	e3 cb f0 00 	l.add r30,r11,r30

	/* Now compute the number of nondigits */
	nchars = ndigits;

	if (minus || (flags & (FL_PLUS | FL_SPACE)))
  4008d8:	84 61 00 0c 	l.lwz r3,0xc(r1)
  4008dc:	bc 23 00 00 	l.sfnei r3,0x0
  4008e0:	10 00 00 06 	l.bf 4008f8 <vsnprintf+0x520>
  4008e4:	d4 01 f0 00 	l.sw 0x0(r1),r30
  4008e8:	a4 6e 00 14 	l.andi r3,r14,0x14
  4008ec:	bc 03 00 00 	l.sfeqi r3,0x0
  4008f0:	10 00 00 05 	l.bf 400904 <vsnprintf+0x52c>
  4008f4:	d4 01 f0 18 	l.sw 0x18(r1),r30
		nchars++;	/* Need space for sign */
  4008f8:	84 81 00 00 	l.lwz r4,0x0(r1)
  4008fc:	9c 84 00 01 	l.addi r4,r4,0x1
  400900:	d4 01 20 18 	l.sw 0x18(r1),r4
	if ((flags & FL_HASH) && base == 16) {
  400904:	ac 7a 00 10 	l.xori r3,r26,0x10
  400908:	84 a1 00 14 	l.lwz r5,0x14(r1)
  40090c:	e0 80 18 02 	l.sub r4,r0,r3
  400910:	e0 84 18 04 	l.or r4,r4,r3
  400914:	ac 84 ff ff 	l.xori r4,r4,0xffffffff
  400918:	b8 84 00 5f 	l.srli r4,r4,0x1f
  40091c:	e0 85 20 03 	l.and r4,r5,r4
  400920:	bc 04 00 00 	l.sfeqi r4,0x0
  400924:	10 00 00 06 	l.bf 40093c <vsnprintf+0x564>
  400928:	84 e1 00 18 	l.lwz r7,0x18(r1)
		nchars += 2;	/* Add 0x for hex */
  40092c:	84 c1 00 18 	l.lwz r6,0x18(r1)
  400930:	9c c6 00 02 	l.addi r6,r6,0x2
  400934:	d4 01 30 18 	l.sw 0x18(r1),r6
	}

	/* Emit early space padding */
	if (!(flags & (FL_MINUS | FL_ZERO)) && width > nchars) {
  400938:	84 e1 00 18 	l.lwz r7,0x18(r1)
  40093c:	a4 6e 00 03 	l.andi r3,r14,0x3
  400940:	e5 54 38 00 	l.sfgts r20,r7
  400944:	10 00 00 03 	l.bf 400950 <vsnprintf+0x578>
  400948:	9c a0 00 01 	l.addi r5,r0,0x1
  40094c:	9c a0 00 00 	l.addi r5,r0,0x0
  400950:	a4 a5 00 ff 	l.andi r5,r5,0xff
  400954:	bc 05 00 00 	l.sfeqi r5,0x0
  400958:	10 00 00 13 	l.bf 4009a4 <vsnprintf+0x5cc>
  40095c:	ab d4 00 00 	l.ori r30,r20,0x0
  400960:	bc 23 00 00 	l.sfnei r3,0x0
  400964:	10 00 00 11 	l.bf 4009a8 <vsnprintf+0x5d0>
  400968:	a8 b6 00 00 	l.ori r5,r22,0x0
  40096c:	ab d4 00 00 	l.ori r30,r20,0x0
  400970:	9c c0 00 00 	l.addi r6,r0,0x0
		while (width > nchars) {
			EMIT(' ');
  400974:	e4 66 e0 00 	l.sfgeu r6,r28
  400978:	10 00 00 04 	l.bf 400988 <vsnprintf+0x5b0>
  40097c:	9c e0 00 20 	l.addi r7,r0,0x20
  400980:	d8 05 38 00 	l.sb 0x0(r5),r7
  400984:	9c a5 00 01 	l.addi r5,r5,0x1
			width--;
  400988:	9f de ff ff 	l.addi r30,r30,0xffffffff
		nchars += 2;	/* Add 0x for hex */
	}

	/* Emit early space padding */
	if (!(flags & (FL_MINUS | FL_ZERO)) && width > nchars) {
		while (width > nchars) {
  40098c:	84 e1 00 18 	l.lwz r7,0x18(r1)
  400990:	e5 5e 38 00 	l.sfgts r30,r7
  400994:	13 ff ff f8 	l.bf 400974 <vsnprintf+0x59c>
  400998:	9c c6 00 01 	l.addi r6,r6,0x1
			width--;
		}
	}

	/* Emit nondigits */
	if (minus)
  40099c:	00 00 00 05 	l.j 4009b0 <vsnprintf+0x5d8>
  4009a0:	84 e1 00 0c 	l.lwz r7,0xc(r1)
	if ((flags & FL_HASH) && base == 16) {
		nchars += 2;	/* Add 0x for hex */
	}

	/* Emit early space padding */
	if (!(flags & (FL_MINUS | FL_ZERO)) && width > nchars) {
  4009a4:	a8 b6 00 00 	l.ori r5,r22,0x0
static size_t
format_int(char *q, size_t n, unsigned long val, enum flags flags,
	   int base, int width, int prec)
{
	char *qq;
	size_t o = 0, oo;
  4009a8:	9c c0 00 00 	l.addi r6,r0,0x0
			width--;
		}
	}

	/* Emit nondigits */
	if (minus)
  4009ac:	84 e1 00 0c 	l.lwz r7,0xc(r1)
  4009b0:	bc 07 00 00 	l.sfeqi r7,0x0
  4009b4:	10 00 00 07 	l.bf 4009d0 <vsnprintf+0x5f8>
  4009b8:	a4 ee 00 04 	l.andi r7,r14,0x4
		EMIT('-');
  4009bc:	e4 66 e0 00 	l.sfgeu r6,r28
  4009c0:	0c 00 00 12 	l.bnf 400a08 <vsnprintf+0x630>
  4009c4:	9c e0 00 2d 	l.addi r7,r0,0x2d
	else if (flags & FL_PLUS)
		EMIT('+');
	else if (flags & FL_SPACE)
		EMIT(' ');
  4009c8:	00 00 00 13 	l.j 400a14 <vsnprintf+0x63c>
  4009cc:	9c c6 00 01 	l.addi r6,r6,0x1
	}

	/* Emit nondigits */
	if (minus)
		EMIT('-');
	else if (flags & FL_PLUS)
  4009d0:	bc 07 00 00 	l.sfeqi r7,0x0
  4009d4:	10 00 00 07 	l.bf 4009f0 <vsnprintf+0x618>
  4009d8:	a4 ee 00 10 	l.andi r7,r14,0x10
		EMIT('+');
  4009dc:	e4 66 e0 00 	l.sfgeu r6,r28
  4009e0:	0c 00 00 0a 	l.bnf 400a08 <vsnprintf+0x630>
  4009e4:	9c e0 00 2b 	l.addi r7,r0,0x2b
	else if (flags & FL_SPACE)
		EMIT(' ');
  4009e8:	00 00 00 0b 	l.j 400a14 <vsnprintf+0x63c>
  4009ec:	9c c6 00 01 	l.addi r6,r6,0x1
	/* Emit nondigits */
	if (minus)
		EMIT('-');
	else if (flags & FL_PLUS)
		EMIT('+');
	else if (flags & FL_SPACE)
  4009f0:	bc 07 00 00 	l.sfeqi r7,0x0
  4009f4:	10 00 00 09 	l.bf 400a18 <vsnprintf+0x640>
  4009f8:	bc 04 00 00 	l.sfeqi r4,0x0
		EMIT(' ');
  4009fc:	e4 66 e0 00 	l.sfgeu r6,r28
  400a00:	10 00 00 04 	l.bf 400a10 <vsnprintf+0x638>
  400a04:	9c e0 00 20 	l.addi r7,r0,0x20
  400a08:	d8 05 38 00 	l.sb 0x0(r5),r7
  400a0c:	9c a5 00 01 	l.addi r5,r5,0x1
  400a10:	9c c6 00 01 	l.addi r6,r6,0x1

	if ((flags & FL_HASH) && base == 16) {
  400a14:	bc 04 00 00 	l.sfeqi r4,0x0
  400a18:	10 00 00 13 	l.bf 400a64 <vsnprintf+0x68c>
  400a1c:	84 e1 00 00 	l.lwz r7,0x0(r1)
		EMIT('0');
  400a20:	e4 66 e0 00 	l.sfgeu r6,r28
  400a24:	10 00 00 04 	l.bf 400a34 <vsnprintf+0x65c>
  400a28:	9c 80 00 30 	l.addi r4,r0,0x30
  400a2c:	d8 05 20 00 	l.sb 0x0(r5),r4
  400a30:	9c a5 00 01 	l.addi r5,r5,0x1
  400a34:	9c c6 00 01 	l.addi r6,r6,0x1
		EMIT((flags & FL_UPPER) ? 'X' : 'x');
  400a38:	e4 66 e0 00 	l.sfgeu r6,r28
  400a3c:	10 00 00 08 	l.bf 400a5c <vsnprintf+0x684>
  400a40:	84 e1 00 10 	l.lwz r7,0x10(r1)
  400a44:	bc 07 00 00 	l.sfeqi r7,0x0
  400a48:	10 00 00 03 	l.bf 400a54 <vsnprintf+0x67c>
  400a4c:	9c 80 00 78 	l.addi r4,r0,0x78
  400a50:	9c 80 00 58 	l.addi r4,r0,0x58
  400a54:	d8 05 20 00 	l.sb 0x0(r5),r4
  400a58:	9c a5 00 01 	l.addi r5,r5,0x1
  400a5c:	9c c6 00 01 	l.addi r6,r6,0x1
	}

	/* Emit zero padding */
	if ((flags & (FL_MINUS | FL_ZERO)) == FL_ZERO && width > ndigits) {
  400a60:	84 e1 00 00 	l.lwz r7,0x0(r1)
  400a64:	e5 5e 38 00 	l.sfgts r30,r7
  400a68:	10 00 00 03 	l.bf 400a74 <vsnprintf+0x69c>
  400a6c:	9c 80 00 01 	l.addi r4,r0,0x1
  400a70:	9c 80 00 00 	l.addi r4,r0,0x0
  400a74:	a4 84 00 ff 	l.andi r4,r4,0xff
  400a78:	bc 04 00 00 	l.sfeqi r4,0x0
  400a7c:	10 00 00 12 	l.bf 400ac4 <vsnprintf+0x6ec>
  400a80:	84 e1 00 00 	l.lwz r7,0x0(r1)
  400a84:	bc 23 00 01 	l.sfnei r3,0x1
  400a88:	10 00 00 10 	l.bf 400ac8 <vsnprintf+0x6f0>
  400a8c:	84 61 00 04 	l.lwz r3,0x4(r1)
		while (width > nchars) {
  400a90:	00 00 00 09 	l.j 400ab4 <vsnprintf+0x6dc>
  400a94:	84 81 00 18 	l.lwz r4,0x18(r1)
			EMIT('0');
  400a98:	10 00 00 04 	l.bf 400aa8 <vsnprintf+0x6d0>
  400a9c:	9c 60 00 30 	l.addi r3,r0,0x30
  400aa0:	d8 05 18 00 	l.sb 0x0(r5),r3
  400aa4:	9c a5 00 01 	l.addi r5,r5,0x1
  400aa8:	9c c6 00 01 	l.addi r6,r6,0x1
			width--;
  400aac:	9f de ff ff 	l.addi r30,r30,0xffffffff
		EMIT((flags & FL_UPPER) ? 'X' : 'x');
	}

	/* Emit zero padding */
	if ((flags & (FL_MINUS | FL_ZERO)) == FL_ZERO && width > ndigits) {
		while (width > nchars) {
  400ab0:	84 81 00 18 	l.lwz r4,0x18(r1)
  400ab4:	e5 5e 20 00 	l.sfgts r30,r4
  400ab8:	13 ff ff f8 	l.bf 400a98 <vsnprintf+0x6c0>
  400abc:	e4 66 e0 00 	l.sfgeu r6,r28
			width--;
		}
	}

	/* Generate the number.  This is done from right to left. */
	q += ndigits;		/* Advance the pointer to end of number */
  400ac0:	84 e1 00 00 	l.lwz r7,0x0(r1)
			qq--;
			oo--;
			ndigits--;
			if (oo < n)
				*qq = '_';
			b4tick = tickskip - 1;
  400ac4:	84 61 00 04 	l.lwz r3,0x4(r1)
			width--;
		}
	}

	/* Generate the number.  This is done from right to left. */
	q += ndigits;		/* Advance the pointer to end of number */
  400ac8:	e0 a5 38 00 	l.add r5,r5,r7
	o += ndigits;
  400acc:	e0 c6 38 00 	l.add r6,r6,r7
			qq--;
			oo--;
			ndigits--;
			if (oo < n)
				*qq = '_';
			b4tick = tickskip - 1;
  400ad0:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
			width--;
		}
	}

	/* Generate the number.  This is done from right to left. */
	q += ndigits;		/* Advance the pointer to end of number */
  400ad4:	d4 01 28 24 	l.sw 0x24(r1),r5
	o += ndigits;
  400ad8:	d4 01 30 14 	l.sw 0x14(r1),r6
	qq = q;
	oo = o;			/* Temporary values */
  400adc:	d4 01 30 10 	l.sw 0x10(r1),r6
	}

	/* Generate the number.  This is done from right to left. */
	q += ndigits;		/* Advance the pointer to end of number */
	o += ndigits;
	qq = q;
  400ae0:	d4 01 28 0c 	l.sw 0xc(r1),r5
			qq--;
			oo--;
			ndigits--;
			if (oo < n)
				*qq = '_';
			b4tick = tickskip - 1;
  400ae4:	00 00 00 2d 	l.j 400b98 <vsnprintf+0x7c0>
  400ae8:	d4 01 18 30 	l.sw 0x30(r1),r3
	qq = q;
	oo = o;			/* Temporary values */

	b4tick = tickskip;
	while (ndigits > 0) {
		if (!b4tick--) {
  400aec:	84 81 00 04 	l.lwz r4,0x4(r1)
  400af0:	bc 04 00 00 	l.sfeqi r4,0x0
  400af4:	10 00 00 04 	l.bf 400b04 <vsnprintf+0x72c>
  400af8:	84 a1 00 0c 	l.lwz r5,0xc(r1)
  400afc:	00 00 00 10 	l.j 400b3c <vsnprintf+0x764>
  400b00:	9c 84 ff ff 	l.addi r4,r4,0xffffffff
			qq--;
			oo--;
  400b04:	84 c1 00 10 	l.lwz r6,0x10(r1)
			ndigits--;
  400b08:	84 e1 00 00 	l.lwz r7,0x0(r1)

	b4tick = tickskip;
	while (ndigits > 0) {
		if (!b4tick--) {
			qq--;
			oo--;
  400b0c:	9c c6 ff ff 	l.addi r6,r6,0xffffffff
	oo = o;			/* Temporary values */

	b4tick = tickskip;
	while (ndigits > 0) {
		if (!b4tick--) {
			qq--;
  400b10:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
			oo--;
			ndigits--;
  400b14:	9c e7 ff ff 	l.addi r7,r7,0xffffffff
	oo = o;			/* Temporary values */

	b4tick = tickskip;
	while (ndigits > 0) {
		if (!b4tick--) {
			qq--;
  400b18:	d4 01 28 0c 	l.sw 0xc(r1),r5
			oo--;
  400b1c:	d4 01 30 10 	l.sw 0x10(r1),r6
			ndigits--;
			if (oo < n)
  400b20:	e4 66 e0 00 	l.sfgeu r6,r28
  400b24:	10 00 00 04 	l.bf 400b34 <vsnprintf+0x75c>
  400b28:	d4 01 38 00 	l.sw 0x0(r1),r7
				*qq = '_';
  400b2c:	9c 60 00 5f 	l.addi r3,r0,0x5f
  400b30:	d8 05 18 00 	l.sb 0x0(r5),r3
			b4tick = tickskip - 1;
  400b34:	84 81 00 30 	l.lwz r4,0x30(r1)
		}
		qq--;
  400b38:	84 a1 00 0c 	l.lwz r5,0xc(r1)
		oo--;
  400b3c:	84 c1 00 10 	l.lwz r6,0x10(r1)
		ndigits--;
  400b40:	84 e1 00 00 	l.lwz r7,0x0(r1)
			if (oo < n)
				*qq = '_';
			b4tick = tickskip - 1;
		}
		qq--;
		oo--;
  400b44:	9c c6 ff ff 	l.addi r6,r6,0xffffffff
			ndigits--;
			if (oo < n)
				*qq = '_';
			b4tick = tickskip - 1;
		}
		qq--;
  400b48:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
		oo--;
		ndigits--;
  400b4c:	9c e7 ff ff 	l.addi r7,r7,0xffffffff
			qq--;
			oo--;
			ndigits--;
			if (oo < n)
				*qq = '_';
			b4tick = tickskip - 1;
  400b50:	d4 01 20 04 	l.sw 0x4(r1),r4
		}
		qq--;
  400b54:	d4 01 28 0c 	l.sw 0xc(r1),r5
		oo--;
  400b58:	d4 01 30 10 	l.sw 0x10(r1),r6
		ndigits--;
		if (oo < n)
  400b5c:	e4 66 e0 00 	l.sfgeu r6,r28
  400b60:	10 00 00 0a 	l.bf 400b88 <vsnprintf+0x7b0>
  400b64:	d4 01 38 00 	l.sw 0x0(r1),r7
			*qq = digits[val % base];
  400b68:	84 61 00 1c 	l.lwz r3,0x1c(r1)
  400b6c:	07 ff fd a7 	l.jal 400208 <__umodsi3>
  400b70:	a8 9a 00 00 	l.ori r4,r26,0x0
  400b74:	84 61 00 28 	l.lwz r3,0x28(r1)
  400b78:	84 81 00 0c 	l.lwz r4,0xc(r1)
  400b7c:	e1 63 58 00 	l.add r11,r3,r11
  400b80:	8d 6b 00 00 	l.lbz r11,0x0(r11)
  400b84:	d8 04 58 00 	l.sb 0x0(r4),r11
		val /= base;
  400b88:	84 61 00 1c 	l.lwz r3,0x1c(r1)
  400b8c:	07 ff fd 46 	l.jal 4000a4 <__udivsi3>
  400b90:	a8 9a 00 00 	l.ori r4,r26,0x0
  400b94:	d4 01 58 1c 	l.sw 0x1c(r1),r11
	o += ndigits;
	qq = q;
	oo = o;			/* Temporary values */

	b4tick = tickskip;
	while (ndigits > 0) {
  400b98:	84 a1 00 00 	l.lwz r5,0x0(r1)
  400b9c:	bd 45 00 00 	l.sfgtsi r5,0x0
  400ba0:	13 ff ff d3 	l.bf 400aec <vsnprintf+0x714>
  400ba4:	b8 8e 00 41 	l.srli r4,r14,0x1
			*qq = digits[val % base];
		val /= base;
	}

	/* Emit late space padding */
	while ((flags & FL_MINUS) && width > nchars) {
  400ba8:	00 00 00 0e 	l.j 400be0 <vsnprintf+0x808>
  400bac:	a4 84 00 01 	l.andi r4,r4,0x1
		EMIT(' ');
  400bb0:	e4 66 e0 00 	l.sfgeu r6,r28
  400bb4:	10 00 00 08 	l.bf 400bd4 <vsnprintf+0x7fc>
  400bb8:	84 a1 00 14 	l.lwz r5,0x14(r1)
  400bbc:	84 e1 00 24 	l.lwz r7,0x24(r1)
  400bc0:	9c 60 00 20 	l.addi r3,r0,0x20
  400bc4:	d8 07 18 00 	l.sb 0x0(r7),r3
  400bc8:	9c e7 00 01 	l.addi r7,r7,0x1
  400bcc:	d4 01 38 24 	l.sw 0x24(r1),r7
  400bd0:	84 a1 00 14 	l.lwz r5,0x14(r1)
		width--;
  400bd4:	9f de ff ff 	l.addi r30,r30,0xffffffff
		val /= base;
	}

	/* Emit late space padding */
	while ((flags & FL_MINUS) && width > nchars) {
		EMIT(' ');
  400bd8:	9c a5 00 01 	l.addi r5,r5,0x1
  400bdc:	d4 01 28 14 	l.sw 0x14(r1),r5
			*qq = digits[val % base];
		val /= base;
	}

	/* Emit late space padding */
	while ((flags & FL_MINUS) && width > nchars) {
  400be0:	84 c1 00 18 	l.lwz r6,0x18(r1)
  400be4:	e5 5e 30 00 	l.sfgts r30,r6
  400be8:	10 00 00 03 	l.bf 400bf4 <vsnprintf+0x81c>
  400bec:	9c 60 00 01 	l.addi r3,r0,0x1
  400bf0:	9c 60 00 00 	l.addi r3,r0,0x0
  400bf4:	a4 63 00 ff 	l.andi r3,r3,0xff
  400bf8:	bc 03 00 00 	l.sfeqi r3,0x0
  400bfc:	10 00 00 04 	l.bf 400c0c <vsnprintf+0x834>
  400c00:	bc 24 00 00 	l.sfnei r4,0x0
  400c04:	13 ff ff eb 	l.bf 400bb0 <vsnprintf+0x7d8>
  400c08:	84 c1 00 14 	l.lwz r6,0x14(r1)

				is_integer:
					sz = format_int(q, (o < n) ? n - o : 0,
							val, flags, base,
							width, prec);
					q += sz;
  400c0c:	84 e1 00 14 	l.lwz r7,0x14(r1)
  400c10:	e2 d6 38 00 	l.add r22,r22,r7
					o += sz;
  400c14:	00 00 00 87 	l.j 400e30 <vsnprintf+0xa58>
  400c18:	e2 52 38 00 	l.add r18,r18,r7
					break;

				case 'c':	/* Character */
					carg = (char)va_arg(ap, int);
  400c1c:	84 62 00 00 	l.lwz r3,0x0(r2)
					sarg = &carg;
					slen = 1;
  400c20:	9d 60 00 01 	l.addi r11,r0,0x1
					q += sz;
					o += sz;
					break;

				case 'c':	/* Character */
					carg = (char)va_arg(ap, int);
  400c24:	d8 01 18 37 	l.sb 0x37(r1),r3
  400c28:	9c 42 00 04 	l.addi r2,r2,0x4
					sarg = &carg;
					slen = 1;
					goto is_string;
  400c2c:	00 00 00 0b 	l.j 400c58 <vsnprintf+0x880>
  400c30:	9f 41 00 37 	l.addi r26,r1,0x37
				case 's':	/* String */
					sarg = va_arg(ap, const char *);
  400c34:	87 42 00 00 	l.lwz r26,0x0(r2)
					sarg = sarg ? sarg : "(null)";
  400c38:	bc 3a 00 00 	l.sfnei r26,0x0
  400c3c:	10 00 00 04 	l.bf 400c4c <vsnprintf+0x874>
  400c40:	9f 82 00 04 	l.addi r28,r2,0x4
  400c44:	1b 40 00 41 	l.movhi r26,0x41
  400c48:	ab 5a 77 48 	l.ori r26,r26,0x7748
					slen = strlen(sarg);
  400c4c:	a8 7a 00 00 	l.ori r3,r26,0x0
  400c50:	07 ff fd a9 	l.jal 4002f4 <strlen>
  400c54:	a8 5c 00 00 	l.ori r2,r28,0x0
				is_string:
					{
						char sch;
						int i;

						if (prec != -1 && slen > prec)
  400c58:	e5 4b c0 00 	l.sfgts r11,r24
  400c5c:	10 00 00 03 	l.bf 400c68 <vsnprintf+0x890>
  400c60:	9c 60 00 01 	l.addi r3,r0,0x1
  400c64:	9c 60 00 00 	l.addi r3,r0,0x0
  400c68:	a4 63 00 ff 	l.andi r3,r3,0xff
  400c6c:	bc 03 00 00 	l.sfeqi r3,0x0
  400c70:	10 00 00 0a 	l.bf 400c98 <vsnprintf+0x8c0>
  400c74:	e5 b4 58 00 	l.sfles r20,r11
  400c78:	ac 78 ff ff 	l.xori r3,r24,0xffffffff
  400c7c:	e0 80 18 02 	l.sub r4,r0,r3
  400c80:	e0 64 18 04 	l.or r3,r4,r3
  400c84:	bd 63 00 00 	l.sfgesi r3,0x0
  400c88:	10 00 00 04 	l.bf 400c98 <vsnprintf+0x8c0>
  400c8c:	e5 b4 58 00 	l.sfles r20,r11
  400c90:	a9 78 00 00 	l.ori r11,r24,0x0
							slen = prec;

						if (width > slen
  400c94:	e5 b4 58 00 	l.sfles r20,r11
  400c98:	10 00 00 1f 	l.bf 400d14 <vsnprintf+0x93c>
  400c9c:	a8 8b 00 00 	l.ori r4,r11,0x0
						    && !(flags & FL_MINUS)) {
  400ca0:	a4 6e 00 02 	l.andi r3,r14,0x2
  400ca4:	bc 23 00 00 	l.sfnei r3,0x0
  400ca8:	10 00 00 26 	l.bf 400d40 <vsnprintf+0x968>
  400cac:	9c a0 00 00 	l.addi r5,r0,0x0
							char pad =
							    (flags & FL_ZERO) ?
  400cb0:	a4 8e 00 01 	l.andi r4,r14,0x1
						if (prec != -1 && slen > prec)
							slen = prec;

						if (width > slen
						    && !(flags & FL_MINUS)) {
							char pad =
  400cb4:	bc 04 00 00 	l.sfeqi r4,0x0
  400cb8:	10 00 00 03 	l.bf 400cc4 <vsnprintf+0x8ec>
  400cbc:	9c 60 00 20 	l.addi r3,r0,0x20
  400cc0:	9c 60 00 30 	l.addi r3,r0,0x30
  400cc4:	a8 b4 00 00 	l.ori r5,r20,0x0
  400cc8:	a8 92 00 00 	l.ori r4,r18,0x0
							    (flags & FL_ZERO) ?
							    '0' : ' ';
							while (width > slen) {
								EMIT(pad);
  400ccc:	84 c1 00 08 	l.lwz r6,0x8(r1)
  400cd0:	e4 64 30 00 	l.sfgeu r4,r6
  400cd4:	10 00 00 04 	l.bf 400ce4 <vsnprintf+0x90c>
  400cd8:	15 00 00 00 	l.nop 0x0
  400cdc:	d8 16 18 00 	l.sb 0x0(r22),r3
  400ce0:	9e d6 00 01 	l.addi r22,r22,0x1
								width--;
  400ce4:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
						if (width > slen
						    && !(flags & FL_MINUS)) {
							char pad =
							    (flags & FL_ZERO) ?
							    '0' : ' ';
							while (width > slen) {
  400ce8:	e5 45 58 00 	l.sfgts r5,r11
  400cec:	13 ff ff f8 	l.bf 400ccc <vsnprintf+0x8f4>
  400cf0:	9c 84 00 01 	l.addi r4,r4,0x1
               _ATTRIBUTE ((__format__ (__printf__, 2, 0))));
int	_EXFUN(vsiscanf, (const char *, const char *, __VALIST)
               _ATTRIBUTE ((__format__ (__scanf__, 2, 0))));
int	_EXFUN(vsniprintf, (char *, size_t, const char *, __VALIST)
               _ATTRIBUTE ((__format__ (__printf__, 3, 0))));
int	_EXFUN(vsnprintf, (char *, size_t, const char *, __VALIST)
  400cf4:	9c e0 00 01 	l.addi r7,r0,0x1
  400cf8:	e2 54 90 00 	l.add r18,r20,r18
  400cfc:	9c 74 ff ff 	l.addi r3,r20,0xffffffff
  400d00:	e2 87 a0 02 	l.sub r20,r7,r20
  400d04:	e2 52 58 02 	l.sub r18,r18,r11
  400d08:	e2 94 58 00 	l.add r20,r20,r11
  400d0c:	e2 83 a0 00 	l.add r20,r3,r20
								EMIT(pad);
								width--;
							}
						}
						for (i = slen; i; i--) {
  400d10:	a8 8b 00 00 	l.ori r4,r11,0x0
  400d14:	00 00 00 0b 	l.j 400d40 <vsnprintf+0x968>
  400d18:	9c a0 00 00 	l.addi r5,r0,0x0
							sch = *sarg++;
							EMIT(sch);
  400d1c:	e0 c5 90 00 	l.add r6,r5,r18
  400d20:	84 e1 00 08 	l.lwz r7,0x8(r1)
  400d24:	e4 66 38 00 	l.sfgeu r6,r7
  400d28:	10 00 00 04 	l.bf 400d38 <vsnprintf+0x960>
  400d2c:	90 63 00 00 	l.lbs r3,0x0(r3)
  400d30:	d8 16 18 00 	l.sb 0x0(r22),r3
  400d34:	9e d6 00 01 	l.addi r22,r22,0x1
							while (width > slen) {
								EMIT(pad);
								width--;
							}
						}
						for (i = slen; i; i--) {
  400d38:	9c 84 ff ff 	l.addi r4,r4,0xffffffff
  400d3c:	9c a5 00 01 	l.addi r5,r5,0x1
  400d40:	bc 24 00 00 	l.sfnei r4,0x0
  400d44:	13 ff ff f6 	l.bf 400d1c <vsnprintf+0x944>
  400d48:	e0 7a 28 00 	l.add r3,r26,r5
  400d4c:	e2 52 58 00 	l.add r18,r18,r11
							sch = *sarg++;
							EMIT(sch);
						}
						if (width > slen
  400d50:	e5 b4 58 00 	l.sfles r20,r11
  400d54:	10 00 00 55 	l.bf 400ea8 <vsnprintf+0xad0>
  400d58:	a8 e4 00 00 	l.ori r7,r4,0x0
						    && (flags & FL_MINUS)) {
  400d5c:	a4 6e 00 02 	l.andi r3,r14,0x2
  400d60:	bc 03 00 00 	l.sfeqi r3,0x0
  400d64:	10 00 00 52 	l.bf 400eac <vsnprintf+0xad4>
  400d68:	84 a1 00 20 	l.lwz r5,0x20(r1)
  400d6c:	a8 b4 00 00 	l.ori r5,r20,0x0
  400d70:	a8 92 00 00 	l.ori r4,r18,0x0
							while (width > slen) {
								EMIT(' ');
  400d74:	84 61 00 08 	l.lwz r3,0x8(r1)
  400d78:	e4 64 18 00 	l.sfgeu r4,r3
  400d7c:	10 00 00 04 	l.bf 400d8c <vsnprintf+0x9b4>
  400d80:	9c c0 00 20 	l.addi r6,r0,0x20
  400d84:	d8 16 30 00 	l.sb 0x0(r22),r6
  400d88:	9e d6 00 01 	l.addi r22,r22,0x1
								width--;
  400d8c:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
							sch = *sarg++;
							EMIT(sch);
						}
						if (width > slen
						    && (flags & FL_MINUS)) {
							while (width > slen) {
  400d90:	e5 45 58 00 	l.sfgts r5,r11
  400d94:	13 ff ff f8 	l.bf 400d74 <vsnprintf+0x99c>
  400d98:	9c 84 00 01 	l.addi r4,r4,0x1
  400d9c:	e2 54 90 00 	l.add r18,r20,r18
  400da0:	9c 74 ff ff 	l.addi r3,r20,0xffffffff
  400da4:	e2 52 58 02 	l.sub r18,r18,r11
  400da8:	9d 6b 00 01 	l.addi r11,r11,0x1
  400dac:	e2 8b a0 02 	l.sub r20,r11,r20
  400db0:	00 00 00 20 	l.j 400e30 <vsnprintf+0xa58>
  400db4:	e2 83 a0 00 	l.add r20,r3,r20
				case 'n':
					{
						/* Output the number of
						   characters written */

						switch (rank) {
  400db8:	bc 10 00 00 	l.sfeqi r16,0x0
  400dbc:	10 00 00 16 	l.bf 400e14 <vsnprintf+0xa3c>
  400dc0:	a8 f0 00 00 	l.ori r7,r16,0x0
  400dc4:	bd 50 00 00 	l.sfgtsi r16,0x0
  400dc8:	10 00 00 07 	l.bf 400de4 <vsnprintf+0xa0c>
  400dcc:	bc 10 00 01 	l.sfeqi r16,0x1
  400dd0:	bc 10 ff ff 	l.sfeqi r16,0xffffffff
  400dd4:	0c 00 00 08 	l.bnf 400df4 <vsnprintf+0xa1c>
  400dd8:	15 00 00 00 	l.nop 0x0
							*va_arg(ap,
								signed char *)
								= o;
							break;
						case rank_short:
							*va_arg(ap,
  400ddc:	00 00 00 0c 	l.j 400e0c <vsnprintf+0xa34>
  400de0:	84 62 00 00 	l.lwz r3,0x0(r2)
				case 'n':
					{
						/* Output the number of
						   characters written */

						switch (rank) {
  400de4:	10 00 00 10 	l.bf 400e24 <vsnprintf+0xa4c>
  400de8:	bc 10 00 02 	l.sfeqi r16,0x2
  400dec:	10 00 00 13 	l.bf 400e38 <vsnprintf+0xa60>
  400df0:	15 00 00 00 	l.nop 0x0
						case rank_char:
							*va_arg(ap,
  400df4:	84 62 00 00 	l.lwz r3,0x0(r2)
				break;
			default:
				/* Output modifiers - terminal sequences */

				/* Next state will be normal */
				state = st_normal;
  400df8:	9c e0 00 00 	l.addi r7,r0,0x0

						switch (rank) {
						case rank_char:
							*va_arg(ap,
								signed char *)
								= o;
  400dfc:	d8 03 90 00 	l.sb 0x0(r3),r18
						/* Output the number of
						   characters written */

						switch (rank) {
						case rank_char:
							*va_arg(ap,
  400e00:	9c 42 00 04 	l.addi r2,r2,0x4
								signed char *)
								= o;
							break;
  400e04:	00 00 00 29 	l.j 400ea8 <vsnprintf+0xad0>
  400e08:	9e 00 ff fe 	l.addi r16,r0,0xfffffffe
						case rank_short:
							*va_arg(ap,
								signed short *)
								= o;
  400e0c:	00 00 00 08 	l.j 400e2c <vsnprintf+0xa54>
  400e10:	dc 03 90 00 	l.sh 0x0(r3),r18
							break;
						case rank_int:
							*va_arg(ap,
  400e14:	84 62 00 00 	l.lwz r3,0x0(r2)
								signed int *)
								= o;
  400e18:	d4 03 90 00 	l.sw 0x0(r3),r18
							break;
  400e1c:	00 00 00 23 	l.j 400ea8 <vsnprintf+0xad0>
  400e20:	9c 42 00 04 	l.addi r2,r2,0x4
						case rank_long:
							*va_arg(ap,
  400e24:	84 62 00 00 	l.lwz r3,0x0(r2)
								signed long *)
								= o;
  400e28:	d4 03 90 00 	l.sw 0x0(r3),r18
							*va_arg(ap,
								signed int *)
								= o;
							break;
						case rank_long:
							*va_arg(ap,
  400e2c:	9c 42 00 04 	l.addi r2,r2,0x4
								signed long *)
								= o;
							break;
  400e30:	00 00 00 1e 	l.j 400ea8 <vsnprintf+0xad0>
  400e34:	9c e0 00 00 	l.addi r7,r0,0x0
						case rank_longlong:
							*va_arg(ap,
  400e38:	84 62 00 00 	l.lwz r3,0x0(r2)
								signed long long *)
								= o;
  400e3c:	9c e0 00 00 	l.addi r7,r0,0x0
  400e40:	d4 03 90 04 	l.sw 0x4(r3),r18
  400e44:	d4 03 38 00 	l.sw 0x0(r3),r7
							break;
  400e48:	00 00 00 18 	l.j 400ea8 <vsnprintf+0xad0>
  400e4c:	9c 42 00 04 	l.addi r2,r2,0x4
						}
					}
					break;

				default:	/* Anything else, including % */
					EMIT(ch);
  400e50:	e4 72 18 00 	l.sfgeu r18,r3
  400e54:	10 00 00 04 	l.bf 400e64 <vsnprintf+0xa8c>
  400e58:	15 00 00 00 	l.nop 0x0
  400e5c:	d8 16 30 00 	l.sb 0x0(r22),r6
  400e60:	9e d6 00 01 	l.addi r22,r22,0x1
  400e64:	03 ff ff f3 	l.j 400e30 <vsnprintf+0xa58>
  400e68:	9e 52 00 01 	l.addi r18,r18,0x1
	while ((ch = *p++)) {
		switch (state) {
		case st_normal:
			if (ch == '%') {
				state = st_flags;
				flags = 0;
  400e6c:	9d c0 00 00 	l.addi r14,r0,0x0

	while ((ch = *p++)) {
		switch (state) {
		case st_normal:
			if (ch == '%') {
				state = st_flags;
  400e70:	9c e0 00 01 	l.addi r7,r0,0x1
				flags = 0;
				rank = rank_int;
				width = 0;
				prec = -1;
  400e74:	9f 00 ff ff 	l.addi r24,r0,0xffffffff
		case st_normal:
			if (ch == '%') {
				state = st_flags;
				flags = 0;
				rank = rank_int;
				width = 0;
  400e78:	aa 8e 00 00 	l.ori r20,r14,0x0
		switch (state) {
		case st_normal:
			if (ch == '%') {
				state = st_flags;
				flags = 0;
				rank = rank_int;
  400e7c:	00 00 00 0b 	l.j 400ea8 <vsnprintf+0xad0>
  400e80:	aa 0e 00 00 	l.ori r16,r14,0x0
				EMIT(ch);
			}
			break;

		case st_flags:
			switch (ch) {
  400e84:	d4 01 28 20 	l.sw 0x20(r1),r5
				break;
			case '0':
				flags |= FL_ZERO;
				break;
			default:
				state = st_width;
  400e88:	00 00 00 08 	l.j 400ea8 <vsnprintf+0xad0>
  400e8c:	9c e0 00 02 	l.addi r7,r0,0x2
			break;

		case st_prec:
			if (ch >= '0' && ch <= '9') {
				prec = prec * 10 + (ch - '0');
			} else if (ch == '*') {
  400e90:	d4 01 28 20 	l.sw 0x20(r1),r5
				prec = va_arg(ap, int);
				if (prec < 0)
					prec = -1;
			} else {
				state = st_modifiers;
  400e94:	00 00 00 05 	l.j 400ea8 <vsnprintf+0xad0>
  400e98:	9c e0 00 04 	l.addi r7,r0,0x4
			if (ch >= '0' && ch <= '9') {
				prec = prec * 10 + (ch - '0');
			} else if (ch == '*') {
				prec = va_arg(ap, int);
				if (prec < 0)
					prec = -1;
  400e9c:	00 00 00 04 	l.j 400eac <vsnprintf+0xad4>
  400ea0:	84 a1 00 20 	l.lwz r5,0x20(r1)
				break;
			case 'j':
				rank = INTMAX_RANK;
				break;
			case 'z':
				rank = SIZE_T_RANK;
  400ea4:	9e 00 00 01 	l.addi r16,r0,0x1
			if (ch >= '0' && ch <= '9') {
				prec = prec * 10 + (ch - '0');
			} else if (ch == '*') {
				prec = va_arg(ap, int);
				if (prec < 0)
					prec = -1;
  400ea8:	84 a1 00 20 	l.lwz r5,0x20(r1)
	} state = st_normal;
	const char *sarg;	/* %s string argument */
	char carg;		/* %c char argument */
	int slen;		/* String length */

	while ((ch = *p++)) {
  400eac:	9c 85 00 01 	l.addi r4,r5,0x1
  400eb0:	90 c5 00 00 	l.lbs r6,0x0(r5)
  400eb4:	bc 26 00 00 	l.sfnei r6,0x0
  400eb8:	13 ff fd 5f 	l.bf 400434 <vsnprintf+0x5c>
  400ebc:	d4 01 20 20 	l.sw 0x20(r1),r4
			}
		}
	}

	/* Null-terminate the string */
	if (o < n)
  400ec0:	84 a1 00 08 	l.lwz r5,0x8(r1)
  400ec4:	e4 72 28 00 	l.sfgeu r18,r5
  400ec8:	10 00 00 04 	l.bf 400ed8 <vsnprintf+0xb00>
  400ecc:	15 00 00 00 	l.nop 0x0
		*q = '\0';	/* No overflow */
  400ed0:	00 00 00 08 	l.j 400ef0 <vsnprintf+0xb18>
  400ed4:	d8 16 30 00 	l.sb 0x0(r22),r6
	else if (n > 0)
  400ed8:	84 e1 00 08 	l.lwz r7,0x8(r1)
  400edc:	bc 07 00 00 	l.sfeqi r7,0x0
  400ee0:	10 00 00 04 	l.bf 400ef0 <vsnprintf+0xb18>
  400ee4:	84 61 00 2c 	l.lwz r3,0x2c(r1)
		buffer[n - 1] = '\0';	/* Overflow - terminate at end of buffer */
  400ee8:	e0 43 38 00 	l.add r2,r3,r7
  400eec:	db e2 37 ff 	l.sb 0xffffffff(r2),r6

	return o;
}
  400ef0:	9c 21 00 64 	l.addi r1,r1,0x64
  400ef4:	a9 72 00 00 	l.ori r11,r18,0x0
  400ef8:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  400efc:	84 41 ff d4 	l.lwz r2,0xffffffd4(r1)
  400f00:	85 c1 ff d8 	l.lwz r14,0xffffffd8(r1)
  400f04:	86 01 ff dc 	l.lwz r16,0xffffffdc(r1)
  400f08:	86 41 ff e0 	l.lwz r18,0xffffffe0(r1)
  400f0c:	86 81 ff e4 	l.lwz r20,0xffffffe4(r1)
  400f10:	86 c1 ff e8 	l.lwz r22,0xffffffe8(r1)
  400f14:	87 01 ff ec 	l.lwz r24,0xffffffec(r1)
  400f18:	87 41 ff f0 	l.lwz r26,0xfffffff0(r1)
  400f1c:	87 81 ff f4 	l.lwz r28,0xfffffff4(r1)
  400f20:	44 00 48 00 	l.jr r9
  400f24:	87 c1 ff f8 	l.lwz r30,0xfffffff8(r1)

00400f28 <GetTimer>:
//// timer ////
unsigned long GetTimer(unsigned long offset)
{
  DEBUG_FUNC_IN(DEBUG_F_HARDWARE | DEBUG_L3);

  unsigned long systimer = TIMER_get();
  400f28:	18 80 00 80 	l.movhi r4,0x80
  400f2c:	a8 84 00 18 	l.ori r4,r4,0x18
  400f30:	84 84 00 00 	l.lwz r4,0x0(r4)
  systimer = systimer<< 16;
  systimer += offset << 16;
  400f34:	e0 63 20 00 	l.add r3,r3,r4
  return (systimer); // valid bits [31:16]

  DEBUG_FUNC_OUT(DEBUG_F_HARDWARE | DEBUG_L3);
}
  400f38:	44 00 48 00 	l.jr r9
  400f3c:	b9 63 00 10 	l.slli r11,r3,0x10

00400f40 <CheckTimer>:

unsigned long CheckTimer(unsigned long time)
{
  DEBUG_FUNC_IN(DEBUG_F_HARDWARE | DEBUG_L3);

  unsigned long systimer = TIMER_get();
  400f40:	18 80 00 80 	l.movhi r4,0x80
  400f44:	a8 84 00 18 	l.ori r4,r4,0x18
  400f48:	84 84 00 00 	l.lwz r4,0x0(r4)
  systimer = systimer<< 16;
  400f4c:	b8 84 00 10 	l.slli r4,r4,0x10
  time -= systimer;
  400f50:	e0 63 20 02 	l.sub r3,r3,r4
  if(time & 0x80000000) return(1);
  return(0);

  DEBUG_FUNC_OUT(DEBUG_F_HARDWARE | DEBUG_L3);
}
  400f54:	44 00 48 00 	l.jr r9
  400f58:	b9 63 00 5f 	l.srli r11,r3,0x1f

00400f5c <BootUploadLogo>:
}


//// BootUploadLogo() ////
void BootUploadLogo()
{
  400f5c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  400f60:	d7 e1 17 d4 	l.sw 0xffffffd4(r1),r2
  400f64:	d7 e1 77 d8 	l.sw 0xffffffd8(r1),r14
  400f68:	d7 e1 87 dc 	l.sw 0xffffffdc(r1),r16
  400f6c:	d7 e1 97 e0 	l.sw 0xffffffe0(r1),r18
  400f70:	d7 e1 a7 e4 	l.sw 0xffffffe4(r1),r20
  400f74:	d7 e1 b7 e8 	l.sw 0xffffffe8(r1),r22
  400f78:	d7 e1 c7 ec 	l.sw 0xffffffec(r1),r24
  400f7c:	d7 e1 d7 f0 	l.sw 0xfffffff0(r1),r26
  400f80:	d7 e1 e7 f4 	l.sw 0xfffffff4(r1),r28
  400f84:	d7 e1 f7 f8 	l.sw 0xfffffff8(r1),r30
  RAFile file;
  int x,y;
  int i=0;
  int adr;

  if (RAOpen(&file, LOGO_FILE)) {
  400f88:	18 80 00 41 	l.movhi r4,0x41
}


//// BootUploadLogo() ////
void BootUploadLogo()
{
  400f8c:	9c 21 fc a0 	l.addi r1,r1,0xfffffca0
  RAFile file;
  int x,y;
  int i=0;
  int adr;

  if (RAOpen(&file, LOGO_FILE)) {
  400f90:	a8 84 77 4f 	l.ori r4,r4,0x774f
  400f94:	04 00 21 84 	l.jal 4095a4 <RAOpen>
  400f98:	a8 61 00 00 	l.ori r3,r1,0x0
  400f9c:	bc 0b 00 00 	l.sfeqi r11,0x0
  400fa0:	10 00 02 46 	l.bf 4018b8 <BootUploadLogo+0x95c>
  400fa4:	1b 40 00 40 	l.movhi r26,0x40
    RARead(&file, sector_buffer, 512);
  400fa8:	18 80 00 41 	l.movhi r4,0x41
  400fac:	a8 61 00 00 	l.ori r3,r1,0x0
  400fb0:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  400fb4:	9c a0 02 00 	l.addi r5,r0,0x200
  400fb8:	ab 5a 56 a4 	l.ori r26,r26,0x56a4
  400fbc:	48 00 d0 00 	l.jalr r26
  400fc0:	18 40 00 80 	l.movhi r2,0x80
    MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET);
  400fc4:	ab 02 00 20 	l.ori r24,r2,0x20
  400fc8:	9c e0 00 44 	l.addi r7,r0,0x44
  400fcc:	a9 c2 00 24 	l.ori r14,r2,0x24
  400fd0:	9c c0 00 1c 	l.addi r6,r0,0x1c
  400fd4:	d4 18 38 00 	l.sw 0x0(r24),r7
  400fd8:	d4 0e 30 00 	l.sw 0x0(r14),r6
  400fdc:	9c 80 00 08 	l.addi r4,r0,0x8
  400fe0:	84 6e 00 00 	l.lwz r3,0x0(r14)
  400fe4:	9c 60 00 18 	l.addi r3,r0,0x18
  400fe8:	1a 00 00 08 	l.movhi r16,0x8
  400fec:	d4 0e 18 00 	l.sw 0x0(r14),r3
  400ff0:	aa 50 14 68 	l.ori r18,r16,0x1468
  400ff4:	84 6e 00 00 	l.lwz r3,0x0(r14)
  400ff8:	9c 60 00 14 	l.addi r3,r0,0x14
    adr = SCREEN_BPL1+LOGO_OFFSET;
  400ffc:	aa 10 14 18 	l.ori r16,r16,0x1418
  int i=0;
  int adr;

  if (RAOpen(&file, LOGO_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET);
  401000:	d4 0e 18 00 	l.sw 0x0(r14),r3
//// BootUploadLogo() ////
void BootUploadLogo()
{
  RAFile file;
  int x,y;
  int i=0;
  401004:	9c a0 00 00 	l.addi r5,r0,0x0
  int adr;

  if (RAOpen(&file, LOGO_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET);
  401008:	84 6e 00 00 	l.lwz r3,0x0(r14)
  40100c:	d4 0e 20 00 	l.sw 0x0(r14),r4
    adr = SCREEN_BPL1+LOGO_OFFSET;
    for (y=0; y<LOGO_HEIGHT; y++) {
      for (x=0; x<LOGO_WIDTH/16; x++) {
        if (i == 512) {
          MEM_UPLOAD_FINI();
  401010:	e0 42 30 04 	l.or r2,r2,r6
  int i=0;
  int adr;

  if (RAOpen(&file, LOGO_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET);
  401014:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401018:	9c 60 00 00 	l.addi r3,r0,0x0
        SPIN(); SPIN(); SPIN(); SPIN();
        //for (tmp=0; tmp<0x80000; tmp++);
        //printf("i=%03d  x=%03d  y=%03d  dat[0]=0x%08x  dat[1]=0x%08x\r", i, x, y, sector_buffer[i], sector_buffer[i+1]);
        adr += 2;
      }
      MEM_UPLOAD_FINI();
  40101c:	aa 98 00 00 	l.ori r20,r24,0x0
  int i=0;
  int adr;

  if (RAOpen(&file, LOGO_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET);
  401020:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401024:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401028:	9e c0 00 0d 	l.addi r22,r0,0xd
    adr = SCREEN_BPL1+LOGO_OFFSET;
    for (y=0; y<LOGO_HEIGHT; y++) {
      for (x=0; x<LOGO_WIDTH/16; x++) {
        if (i == 512) {
  40102c:	bc 25 02 00 	l.sfnei r5,0x200
  401030:	10 00 00 4b 	l.bf 40115c <BootUploadLogo+0x200>
  401034:	9c 80 00 40 	l.addi r4,r0,0x40
          MEM_UPLOAD_FINI();
  401038:	d4 18 20 00 	l.sw 0x0(r24),r4
          RARead(&file, sector_buffer, 512);
  40103c:	18 80 00 41 	l.movhi r4,0x41
    MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET);
    adr = SCREEN_BPL1+LOGO_OFFSET;
    for (y=0; y<LOGO_HEIGHT; y++) {
      for (x=0; x<LOGO_WIDTH/16; x++) {
        if (i == 512) {
          MEM_UPLOAD_FINI();
  401040:	84 62 00 00 	l.lwz r3,0x0(r2)
  401044:	84 62 00 00 	l.lwz r3,0x0(r2)
  401048:	84 62 00 00 	l.lwz r3,0x0(r2)
  40104c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401050:	84 62 00 00 	l.lwz r3,0x0(r2)
  401054:	84 62 00 00 	l.lwz r3,0x0(r2)
  401058:	84 62 00 00 	l.lwz r3,0x0(r2)
  40105c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401060:	84 62 00 00 	l.lwz r3,0x0(r2)
  401064:	84 62 00 00 	l.lwz r3,0x0(r2)
  401068:	84 62 00 00 	l.lwz r3,0x0(r2)
  40106c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401070:	84 62 00 00 	l.lwz r3,0x0(r2)
  401074:	84 62 00 00 	l.lwz r3,0x0(r2)
  401078:	84 62 00 00 	l.lwz r3,0x0(r2)
  40107c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401080:	84 62 00 00 	l.lwz r3,0x0(r2)
  401084:	84 62 00 00 	l.lwz r3,0x0(r2)
  401088:	84 62 00 00 	l.lwz r3,0x0(r2)
  40108c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401090:	84 62 00 00 	l.lwz r3,0x0(r2)
  401094:	84 62 00 00 	l.lwz r3,0x0(r2)
  401098:	84 62 00 00 	l.lwz r3,0x0(r2)
  40109c:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010a0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010a4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010a8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010ac:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010b0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010b4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010b8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010bc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010c0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010c4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010c8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010cc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010d0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010d4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010d8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010dc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010e0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010e4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010e8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010ec:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010f0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010f4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010f8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4010fc:	84 62 00 00 	l.lwz r3,0x0(r2)
          RARead(&file, sector_buffer, 512);
  401100:	a8 61 00 00 	l.ori r3,r1,0x0
  401104:	48 00 d0 00 	l.jalr r26
  401108:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
          MEM_UPLOAD_INIT(adr);
  40110c:	9c 60 00 44 	l.addi r3,r0,0x44
  401110:	9c 80 00 1c 	l.addi r4,r0,0x1c
  401114:	d4 18 18 00 	l.sw 0x0(r24),r3
  401118:	d4 0e 20 00 	l.sw 0x0(r14),r4
          i = 0;
  40111c:	9c a0 00 00 	l.addi r5,r0,0x0
    for (y=0; y<LOGO_HEIGHT; y++) {
      for (x=0; x<LOGO_WIDTH/16; x++) {
        if (i == 512) {
          MEM_UPLOAD_FINI();
          RARead(&file, sector_buffer, 512);
          MEM_UPLOAD_INIT(adr);
  401120:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401124:	a4 70 00 ff 	l.andi r3,r16,0xff
  401128:	d4 0e 18 00 	l.sw 0x0(r14),r3
  40112c:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401130:	b8 70 00 88 	l.srai r3,r16,0x8
  401134:	a4 63 00 ff 	l.andi r3,r3,0xff
  401138:	d4 0e 18 00 	l.sw 0x0(r14),r3
  40113c:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401140:	b8 70 00 90 	l.srai r3,r16,0x10
  401144:	a4 63 00 ff 	l.andi r3,r3,0xff
  401148:	d4 0e 18 00 	l.sw 0x0(r14),r3
  40114c:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401150:	b8 70 00 58 	l.srli r3,r16,0x18
  401154:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401158:	84 6e 00 00 	l.lwz r3,0x0(r14)
          i = 0;
        }
        SPI(sector_buffer[i++]);
  40115c:	18 80 00 41 	l.movhi r4,0x41
        SPI(sector_buffer[i++]);
        SPIN(); SPIN(); SPIN(); SPIN();
  401160:	9e d6 ff ff 	l.addi r22,r22,0xffffffff
          MEM_UPLOAD_FINI();
          RARead(&file, sector_buffer, 512);
          MEM_UPLOAD_INIT(adr);
          i = 0;
        }
        SPI(sector_buffer[i++]);
  401164:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  if (RAOpen(&file, LOGO_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET);
    adr = SCREEN_BPL1+LOGO_OFFSET;
    for (y=0; y<LOGO_HEIGHT; y++) {
      for (x=0; x<LOGO_WIDTH/16; x++) {
  401168:	bc 36 00 00 	l.sfnei r22,0x0
          MEM_UPLOAD_FINI();
          RARead(&file, sector_buffer, 512);
          MEM_UPLOAD_INIT(adr);
          i = 0;
        }
        SPI(sector_buffer[i++]);
  40116c:	e0 65 20 00 	l.add r3,r5,r4
  401170:	8c 63 00 00 	l.lbz r3,0x0(r3)
  401174:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401178:	9c 65 00 01 	l.addi r3,r5,0x1
  40117c:	84 8e 00 00 	l.lwz r4,0x0(r14)
        SPI(sector_buffer[i++]);
  401180:	18 80 00 41 	l.movhi r4,0x41
  401184:	9c a5 00 02 	l.addi r5,r5,0x2
  401188:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  40118c:	e0 63 20 00 	l.add r3,r3,r4
  401190:	8c 63 00 00 	l.lbz r3,0x0(r3)
  401194:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401198:	84 6e 00 00 	l.lwz r3,0x0(r14)
        SPIN(); SPIN(); SPIN(); SPIN();
  40119c:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011a0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011a4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011a8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011ac:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011b0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011b4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011b8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011bc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011c0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011c4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011c8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011cc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011d0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011d4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011d8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011dc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011e0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011e4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011e8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011ec:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011f0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011f4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011f8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4011fc:	84 62 00 00 	l.lwz r3,0x0(r2)
  401200:	84 62 00 00 	l.lwz r3,0x0(r2)
  401204:	84 62 00 00 	l.lwz r3,0x0(r2)
  401208:	84 62 00 00 	l.lwz r3,0x0(r2)
  40120c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401210:	84 62 00 00 	l.lwz r3,0x0(r2)
  401214:	84 62 00 00 	l.lwz r3,0x0(r2)
  401218:	84 62 00 00 	l.lwz r3,0x0(r2)
  40121c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401220:	84 62 00 00 	l.lwz r3,0x0(r2)
  401224:	84 62 00 00 	l.lwz r3,0x0(r2)
  401228:	84 62 00 00 	l.lwz r3,0x0(r2)
  40122c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401230:	84 62 00 00 	l.lwz r3,0x0(r2)
  401234:	84 62 00 00 	l.lwz r3,0x0(r2)
  401238:	84 62 00 00 	l.lwz r3,0x0(r2)
  40123c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401240:	84 62 00 00 	l.lwz r3,0x0(r2)
  401244:	84 62 00 00 	l.lwz r3,0x0(r2)
  401248:	84 62 00 00 	l.lwz r3,0x0(r2)
  40124c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401250:	84 62 00 00 	l.lwz r3,0x0(r2)
  401254:	84 62 00 00 	l.lwz r3,0x0(r2)
  401258:	84 62 00 00 	l.lwz r3,0x0(r2)
  if (RAOpen(&file, LOGO_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET);
    adr = SCREEN_BPL1+LOGO_OFFSET;
    for (y=0; y<LOGO_HEIGHT; y++) {
      for (x=0; x<LOGO_WIDTH/16; x++) {
  40125c:	13 ff ff 74 	l.bf 40102c <BootUploadLogo+0xd0>
  401260:	9e 10 00 02 	l.addi r16,r16,0x2
        SPIN(); SPIN(); SPIN(); SPIN();
        //for (tmp=0; tmp<0x80000; tmp++);
        //printf("i=%03d  x=%03d  y=%03d  dat[0]=0x%08x  dat[1]=0x%08x\r", i, x, y, sector_buffer[i], sector_buffer[i+1]);
        adr += 2;
      }
      MEM_UPLOAD_FINI();
  401264:	9c c0 00 40 	l.addi r6,r0,0x40
      MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8));
  401268:	9f c0 00 44 	l.addi r30,r0,0x44
        SPIN(); SPIN(); SPIN(); SPIN();
        //for (tmp=0; tmp<0x80000; tmp++);
        //printf("i=%03d  x=%03d  y=%03d  dat[0]=0x%08x  dat[1]=0x%08x\r", i, x, y, sector_buffer[i], sector_buffer[i+1]);
        adr += 2;
      }
      MEM_UPLOAD_FINI();
  40126c:	d4 14 30 00 	l.sw 0x0(r20),r6
      MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8));
  401270:	9f 80 00 1c 	l.addi r28,r0,0x1c
        SPIN(); SPIN(); SPIN(); SPIN();
        //for (tmp=0; tmp<0x80000; tmp++);
        //printf("i=%03d  x=%03d  y=%03d  dat[0]=0x%08x  dat[1]=0x%08x\r", i, x, y, sector_buffer[i], sector_buffer[i+1]);
        adr += 2;
      }
      MEM_UPLOAD_FINI();
  401274:	84 62 00 00 	l.lwz r3,0x0(r2)
  401278:	84 62 00 00 	l.lwz r3,0x0(r2)
  40127c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401280:	84 62 00 00 	l.lwz r3,0x0(r2)
  401284:	84 62 00 00 	l.lwz r3,0x0(r2)
  401288:	84 62 00 00 	l.lwz r3,0x0(r2)
  40128c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401290:	84 62 00 00 	l.lwz r3,0x0(r2)
  401294:	84 62 00 00 	l.lwz r3,0x0(r2)
  401298:	84 62 00 00 	l.lwz r3,0x0(r2)
  40129c:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012a0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012a4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012a8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012ac:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012b0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012b4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012b8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012bc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012c0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012c4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012c8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012cc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012d0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012d4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012d8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012dc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012e0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012e4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012e8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012ec:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012f0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012f4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012f8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4012fc:	84 62 00 00 	l.lwz r3,0x0(r2)
  401300:	84 62 00 00 	l.lwz r3,0x0(r2)
  401304:	84 62 00 00 	l.lwz r3,0x0(r2)
  401308:	84 62 00 00 	l.lwz r3,0x0(r2)
  40130c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401310:	84 62 00 00 	l.lwz r3,0x0(r2)
  401314:	84 62 00 00 	l.lwz r3,0x0(r2)
  401318:	84 62 00 00 	l.lwz r3,0x0(r2)
  40131c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401320:	84 62 00 00 	l.lwz r3,0x0(r2)
  401324:	84 62 00 00 	l.lwz r3,0x0(r2)
  401328:	84 62 00 00 	l.lwz r3,0x0(r2)
  40132c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401330:	84 62 00 00 	l.lwz r3,0x0(r2)
      MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8));
  401334:	d4 14 f0 00 	l.sw 0x0(r20),r30
  401338:	d4 0e e0 00 	l.sw 0x0(r14),r28
  40133c:	9c 80 00 08 	l.addi r4,r0,0x8
  401340:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401344:	a4 72 00 ff 	l.andi r3,r18,0xff
        SPIN(); SPIN(); SPIN(); SPIN();
        //for (tmp=0; tmp<0x80000; tmp++);
        //printf("i=%03d  x=%03d  y=%03d  dat[0]=0x%08x  dat[1]=0x%08x\r", i, x, y, sector_buffer[i], sector_buffer[i+1]);
        adr += 2;
      }
      MEM_UPLOAD_FINI();
  401348:	aa 12 00 00 	l.ori r16,r18,0x0
      MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8));
  40134c:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401350:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401354:	b8 72 00 88 	l.srai r3,r18,0x8
  401358:	9e 52 00 50 	l.addi r18,r18,0x50
  40135c:	a4 63 00 ff 	l.andi r3,r3,0xff
  401360:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401364:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401368:	d4 0e 20 00 	l.sw 0x0(r14),r4
  40136c:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401370:	d4 0e b0 00 	l.sw 0x0(r14),r22
  401374:	84 6e 00 00 	l.lwz r3,0x0(r14)

  if (RAOpen(&file, LOGO_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET);
    adr = SCREEN_BPL1+LOGO_OFFSET;
    for (y=0; y<LOGO_HEIGHT; y++) {
  401378:	18 60 00 08 	l.movhi r3,0x8
  40137c:	a8 63 1e 68 	l.ori r3,r3,0x1e68
  401380:	e4 12 18 00 	l.sfeq r18,r3
  401384:	10 00 00 04 	l.bf 401394 <BootUploadLogo+0x438>
  401388:	15 00 00 00 	l.nop 0x0
}


//// BootUploadLogo() ////
void BootUploadLogo()
{
  40138c:	03 ff ff 28 	l.j 40102c <BootUploadLogo+0xd0>
  401390:	9e c0 00 0d 	l.addi r22,r0,0xd
      }
      MEM_UPLOAD_FINI();
      MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8));
      adr = SCREEN_BPL1+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8);
    }
    MEM_UPLOAD_FINI();
  401394:	d4 14 30 00 	l.sw 0x0(r20),r6
    MEM_UPLOAD_INIT(SCREEN_BPL2+LOGO_OFFSET);
  401398:	1a 00 00 08 	l.movhi r16,0x8
      }
      MEM_UPLOAD_FINI();
      MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8));
      adr = SCREEN_BPL1+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8);
    }
    MEM_UPLOAD_FINI();
  40139c:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013a0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013a4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013a8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013ac:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013b0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013b4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013b8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013bc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013c0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013c4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013c8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013cc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013d0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013d4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013d8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013dc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013e0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013e4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013e8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013ec:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013f0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013f4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013f8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4013fc:	84 62 00 00 	l.lwz r3,0x0(r2)
  401400:	84 62 00 00 	l.lwz r3,0x0(r2)
  401404:	84 62 00 00 	l.lwz r3,0x0(r2)
  401408:	84 62 00 00 	l.lwz r3,0x0(r2)
  40140c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401410:	84 62 00 00 	l.lwz r3,0x0(r2)
  401414:	84 62 00 00 	l.lwz r3,0x0(r2)
  401418:	84 62 00 00 	l.lwz r3,0x0(r2)
  40141c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401420:	84 62 00 00 	l.lwz r3,0x0(r2)
  401424:	84 62 00 00 	l.lwz r3,0x0(r2)
  401428:	84 62 00 00 	l.lwz r3,0x0(r2)
  40142c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401430:	84 62 00 00 	l.lwz r3,0x0(r2)
  401434:	84 62 00 00 	l.lwz r3,0x0(r2)
  401438:	84 62 00 00 	l.lwz r3,0x0(r2)
  40143c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401440:	84 62 00 00 	l.lwz r3,0x0(r2)
  401444:	84 62 00 00 	l.lwz r3,0x0(r2)
  401448:	84 62 00 00 	l.lwz r3,0x0(r2)
  40144c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401450:	84 62 00 00 	l.lwz r3,0x0(r2)
  401454:	84 62 00 00 	l.lwz r3,0x0(r2)
  401458:	84 62 00 00 	l.lwz r3,0x0(r2)
    MEM_UPLOAD_INIT(SCREEN_BPL2+LOGO_OFFSET);
  40145c:	d4 14 f0 00 	l.sw 0x0(r20),r30
  401460:	d4 0e e0 00 	l.sw 0x0(r14),r28
  401464:	aa 50 64 68 	l.ori r18,r16,0x6468
  401468:	84 6e 00 00 	l.lwz r3,0x0(r14)
  40146c:	9c 60 00 18 	l.addi r3,r0,0x18
    adr = SCREEN_BPL2+LOGO_OFFSET;
  401470:	aa 10 64 18 	l.ori r16,r16,0x6418
      MEM_UPLOAD_FINI();
      MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8));
      adr = SCREEN_BPL1+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8);
    }
    MEM_UPLOAD_FINI();
    MEM_UPLOAD_INIT(SCREEN_BPL2+LOGO_OFFSET);
  401474:	d4 0e 18 00 	l.sw 0x0(r14),r3
        SPI(sector_buffer[i++]);
        SPI(sector_buffer[i++]);
        SPIN(); SPIN(); SPIN(); SPIN();
        adr += 2;
      }
      MEM_UPLOAD_FINI();
  401478:	ab 14 00 00 	l.ori r24,r20,0x0
      MEM_UPLOAD_FINI();
      MEM_UPLOAD_INIT(SCREEN_BPL1+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8));
      adr = SCREEN_BPL1+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8);
    }
    MEM_UPLOAD_FINI();
    MEM_UPLOAD_INIT(SCREEN_BPL2+LOGO_OFFSET);
  40147c:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401480:	9c 60 00 64 	l.addi r3,r0,0x64
  401484:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401488:	84 6e 00 00 	l.lwz r3,0x0(r14)
  40148c:	d4 0e 20 00 	l.sw 0x0(r14),r4
  401490:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401494:	d4 0e b0 00 	l.sw 0x0(r14),r22
  401498:	84 6e 00 00 	l.lwz r3,0x0(r14)
  40149c:	9e c0 00 0d 	l.addi r22,r0,0xd
    adr = SCREEN_BPL2+LOGO_OFFSET;
    for (y=0; y<LOGO_HEIGHT; y++) {
      for (x=0; x<LOGO_WIDTH/16; x++) {
        if (i == 512) {
  4014a0:	bc 25 02 00 	l.sfnei r5,0x200
  4014a4:	10 00 00 49 	l.bf 4015c8 <BootUploadLogo+0x66c>
  4014a8:	9c 80 00 40 	l.addi r4,r0,0x40
          MEM_UPLOAD_FINI();
  4014ac:	d4 14 20 00 	l.sw 0x0(r20),r4
          RARead(&file, sector_buffer, 512);
  4014b0:	18 80 00 41 	l.movhi r4,0x41
    MEM_UPLOAD_INIT(SCREEN_BPL2+LOGO_OFFSET);
    adr = SCREEN_BPL2+LOGO_OFFSET;
    for (y=0; y<LOGO_HEIGHT; y++) {
      for (x=0; x<LOGO_WIDTH/16; x++) {
        if (i == 512) {
          MEM_UPLOAD_FINI();
  4014b4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014b8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014bc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014c0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014c4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014c8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014cc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014d0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014d4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014d8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014dc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014e0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014e4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014e8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014ec:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014f0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014f4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014f8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4014fc:	84 62 00 00 	l.lwz r3,0x0(r2)
  401500:	84 62 00 00 	l.lwz r3,0x0(r2)
  401504:	84 62 00 00 	l.lwz r3,0x0(r2)
  401508:	84 62 00 00 	l.lwz r3,0x0(r2)
  40150c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401510:	84 62 00 00 	l.lwz r3,0x0(r2)
  401514:	84 62 00 00 	l.lwz r3,0x0(r2)
  401518:	84 62 00 00 	l.lwz r3,0x0(r2)
  40151c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401520:	84 62 00 00 	l.lwz r3,0x0(r2)
  401524:	84 62 00 00 	l.lwz r3,0x0(r2)
  401528:	84 62 00 00 	l.lwz r3,0x0(r2)
  40152c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401530:	84 62 00 00 	l.lwz r3,0x0(r2)
  401534:	84 62 00 00 	l.lwz r3,0x0(r2)
  401538:	84 62 00 00 	l.lwz r3,0x0(r2)
  40153c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401540:	84 62 00 00 	l.lwz r3,0x0(r2)
  401544:	84 62 00 00 	l.lwz r3,0x0(r2)
  401548:	84 62 00 00 	l.lwz r3,0x0(r2)
  40154c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401550:	84 62 00 00 	l.lwz r3,0x0(r2)
  401554:	84 62 00 00 	l.lwz r3,0x0(r2)
  401558:	84 62 00 00 	l.lwz r3,0x0(r2)
  40155c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401560:	84 62 00 00 	l.lwz r3,0x0(r2)
  401564:	84 62 00 00 	l.lwz r3,0x0(r2)
  401568:	84 62 00 00 	l.lwz r3,0x0(r2)
  40156c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401570:	84 62 00 00 	l.lwz r3,0x0(r2)
          RARead(&file, sector_buffer, 512);
  401574:	a8 61 00 00 	l.ori r3,r1,0x0
  401578:	48 00 d0 00 	l.jalr r26
  40157c:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
          MEM_UPLOAD_INIT(adr);
  401580:	d4 14 f0 00 	l.sw 0x0(r20),r30
  401584:	d4 0e e0 00 	l.sw 0x0(r14),r28
          i = 0;
  401588:	9c a0 00 00 	l.addi r5,r0,0x0
    for (y=0; y<LOGO_HEIGHT; y++) {
      for (x=0; x<LOGO_WIDTH/16; x++) {
        if (i == 512) {
          MEM_UPLOAD_FINI();
          RARead(&file, sector_buffer, 512);
          MEM_UPLOAD_INIT(adr);
  40158c:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401590:	a4 70 00 ff 	l.andi r3,r16,0xff
  401594:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401598:	84 6e 00 00 	l.lwz r3,0x0(r14)
  40159c:	b8 70 00 88 	l.srai r3,r16,0x8
  4015a0:	a4 63 00 ff 	l.andi r3,r3,0xff
  4015a4:	d4 0e 18 00 	l.sw 0x0(r14),r3
  4015a8:	84 6e 00 00 	l.lwz r3,0x0(r14)
  4015ac:	b8 70 00 90 	l.srai r3,r16,0x10
  4015b0:	a4 63 00 ff 	l.andi r3,r3,0xff
  4015b4:	d4 0e 18 00 	l.sw 0x0(r14),r3
  4015b8:	84 6e 00 00 	l.lwz r3,0x0(r14)
  4015bc:	b8 70 00 58 	l.srli r3,r16,0x18
  4015c0:	d4 0e 18 00 	l.sw 0x0(r14),r3
  4015c4:	84 6e 00 00 	l.lwz r3,0x0(r14)
          i = 0;
        }
        SPI(sector_buffer[i++]);
  4015c8:	18 80 00 41 	l.movhi r4,0x41
        SPI(sector_buffer[i++]);
        SPIN(); SPIN(); SPIN(); SPIN();
  4015cc:	9e d6 ff ff 	l.addi r22,r22,0xffffffff
          MEM_UPLOAD_FINI();
          RARead(&file, sector_buffer, 512);
          MEM_UPLOAD_INIT(adr);
          i = 0;
        }
        SPI(sector_buffer[i++]);
  4015d0:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
    }
    MEM_UPLOAD_FINI();
    MEM_UPLOAD_INIT(SCREEN_BPL2+LOGO_OFFSET);
    adr = SCREEN_BPL2+LOGO_OFFSET;
    for (y=0; y<LOGO_HEIGHT; y++) {
      for (x=0; x<LOGO_WIDTH/16; x++) {
  4015d4:	bc 36 00 00 	l.sfnei r22,0x0
          MEM_UPLOAD_FINI();
          RARead(&file, sector_buffer, 512);
          MEM_UPLOAD_INIT(adr);
          i = 0;
        }
        SPI(sector_buffer[i++]);
  4015d8:	e0 65 20 00 	l.add r3,r5,r4
  4015dc:	8c 63 00 00 	l.lbz r3,0x0(r3)
  4015e0:	d4 0e 18 00 	l.sw 0x0(r14),r3
  4015e4:	9c 65 00 01 	l.addi r3,r5,0x1
  4015e8:	84 8e 00 00 	l.lwz r4,0x0(r14)
        SPI(sector_buffer[i++]);
  4015ec:	18 80 00 41 	l.movhi r4,0x41
  4015f0:	9c a5 00 02 	l.addi r5,r5,0x2
  4015f4:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  4015f8:	e0 63 20 00 	l.add r3,r3,r4
  4015fc:	8c 63 00 00 	l.lbz r3,0x0(r3)
  401600:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401604:	84 6e 00 00 	l.lwz r3,0x0(r14)
        SPIN(); SPIN(); SPIN(); SPIN();
  401608:	84 62 00 00 	l.lwz r3,0x0(r2)
  40160c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401610:	84 62 00 00 	l.lwz r3,0x0(r2)
  401614:	84 62 00 00 	l.lwz r3,0x0(r2)
  401618:	84 62 00 00 	l.lwz r3,0x0(r2)
  40161c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401620:	84 62 00 00 	l.lwz r3,0x0(r2)
  401624:	84 62 00 00 	l.lwz r3,0x0(r2)
  401628:	84 62 00 00 	l.lwz r3,0x0(r2)
  40162c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401630:	84 62 00 00 	l.lwz r3,0x0(r2)
  401634:	84 62 00 00 	l.lwz r3,0x0(r2)
  401638:	84 62 00 00 	l.lwz r3,0x0(r2)
  40163c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401640:	84 62 00 00 	l.lwz r3,0x0(r2)
  401644:	84 62 00 00 	l.lwz r3,0x0(r2)
  401648:	84 62 00 00 	l.lwz r3,0x0(r2)
  40164c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401650:	84 62 00 00 	l.lwz r3,0x0(r2)
  401654:	84 62 00 00 	l.lwz r3,0x0(r2)
  401658:	84 62 00 00 	l.lwz r3,0x0(r2)
  40165c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401660:	84 62 00 00 	l.lwz r3,0x0(r2)
  401664:	84 62 00 00 	l.lwz r3,0x0(r2)
  401668:	84 62 00 00 	l.lwz r3,0x0(r2)
  40166c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401670:	84 62 00 00 	l.lwz r3,0x0(r2)
  401674:	84 62 00 00 	l.lwz r3,0x0(r2)
  401678:	84 62 00 00 	l.lwz r3,0x0(r2)
  40167c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401680:	84 62 00 00 	l.lwz r3,0x0(r2)
  401684:	84 62 00 00 	l.lwz r3,0x0(r2)
  401688:	84 62 00 00 	l.lwz r3,0x0(r2)
  40168c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401690:	84 62 00 00 	l.lwz r3,0x0(r2)
  401694:	84 62 00 00 	l.lwz r3,0x0(r2)
  401698:	84 62 00 00 	l.lwz r3,0x0(r2)
  40169c:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016a0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016a4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016a8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016ac:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016b0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016b4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016b8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016bc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016c0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016c4:	84 62 00 00 	l.lwz r3,0x0(r2)
    }
    MEM_UPLOAD_FINI();
    MEM_UPLOAD_INIT(SCREEN_BPL2+LOGO_OFFSET);
    adr = SCREEN_BPL2+LOGO_OFFSET;
    for (y=0; y<LOGO_HEIGHT; y++) {
      for (x=0; x<LOGO_WIDTH/16; x++) {
  4016c8:	13 ff ff 76 	l.bf 4014a0 <BootUploadLogo+0x544>
  4016cc:	9e 10 00 02 	l.addi r16,r16,0x2
        SPI(sector_buffer[i++]);
        SPI(sector_buffer[i++]);
        SPIN(); SPIN(); SPIN(); SPIN();
        adr += 2;
      }
      MEM_UPLOAD_FINI();
  4016d0:	9c 60 00 40 	l.addi r3,r0,0x40
      MEM_UPLOAD_INIT(SCREEN_BPL2+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8));
  4016d4:	9c 80 00 08 	l.addi r4,r0,0x8
        SPI(sector_buffer[i++]);
        SPI(sector_buffer[i++]);
        SPIN(); SPIN(); SPIN(); SPIN();
        adr += 2;
      }
      MEM_UPLOAD_FINI();
  4016d8:	d4 18 18 00 	l.sw 0x0(r24),r3
  4016dc:	aa 12 00 00 	l.ori r16,r18,0x0
  4016e0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016e4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016e8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016ec:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016f0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016f4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016f8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4016fc:	84 62 00 00 	l.lwz r3,0x0(r2)
  401700:	84 62 00 00 	l.lwz r3,0x0(r2)
  401704:	84 62 00 00 	l.lwz r3,0x0(r2)
  401708:	84 62 00 00 	l.lwz r3,0x0(r2)
  40170c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401710:	84 62 00 00 	l.lwz r3,0x0(r2)
  401714:	84 62 00 00 	l.lwz r3,0x0(r2)
  401718:	84 62 00 00 	l.lwz r3,0x0(r2)
  40171c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401720:	84 62 00 00 	l.lwz r3,0x0(r2)
  401724:	84 62 00 00 	l.lwz r3,0x0(r2)
  401728:	84 62 00 00 	l.lwz r3,0x0(r2)
  40172c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401730:	84 62 00 00 	l.lwz r3,0x0(r2)
  401734:	84 62 00 00 	l.lwz r3,0x0(r2)
  401738:	84 62 00 00 	l.lwz r3,0x0(r2)
  40173c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401740:	84 62 00 00 	l.lwz r3,0x0(r2)
  401744:	84 62 00 00 	l.lwz r3,0x0(r2)
  401748:	84 62 00 00 	l.lwz r3,0x0(r2)
  40174c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401750:	84 62 00 00 	l.lwz r3,0x0(r2)
  401754:	84 62 00 00 	l.lwz r3,0x0(r2)
  401758:	84 62 00 00 	l.lwz r3,0x0(r2)
  40175c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401760:	84 62 00 00 	l.lwz r3,0x0(r2)
  401764:	84 62 00 00 	l.lwz r3,0x0(r2)
  401768:	84 62 00 00 	l.lwz r3,0x0(r2)
  40176c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401770:	84 62 00 00 	l.lwz r3,0x0(r2)
  401774:	84 62 00 00 	l.lwz r3,0x0(r2)
  401778:	84 62 00 00 	l.lwz r3,0x0(r2)
  40177c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401780:	84 62 00 00 	l.lwz r3,0x0(r2)
  401784:	84 62 00 00 	l.lwz r3,0x0(r2)
  401788:	84 62 00 00 	l.lwz r3,0x0(r2)
  40178c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401790:	84 62 00 00 	l.lwz r3,0x0(r2)
  401794:	84 62 00 00 	l.lwz r3,0x0(r2)
  401798:	84 62 00 00 	l.lwz r3,0x0(r2)
  40179c:	84 62 00 00 	l.lwz r3,0x0(r2)
      MEM_UPLOAD_INIT(SCREEN_BPL2+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8));
  4017a0:	d4 18 f0 00 	l.sw 0x0(r24),r30
  4017a4:	d4 0e e0 00 	l.sw 0x0(r14),r28
  4017a8:	84 6e 00 00 	l.lwz r3,0x0(r14)
  4017ac:	a4 72 00 ff 	l.andi r3,r18,0xff
  4017b0:	d4 0e 18 00 	l.sw 0x0(r14),r3
  4017b4:	84 6e 00 00 	l.lwz r3,0x0(r14)
  4017b8:	b8 72 00 88 	l.srai r3,r18,0x8
  4017bc:	9e 52 00 50 	l.addi r18,r18,0x50
  4017c0:	a4 63 00 ff 	l.andi r3,r3,0xff
  4017c4:	d4 0e 18 00 	l.sw 0x0(r14),r3
  4017c8:	84 6e 00 00 	l.lwz r3,0x0(r14)
  4017cc:	d4 0e 20 00 	l.sw 0x0(r14),r4
  4017d0:	84 6e 00 00 	l.lwz r3,0x0(r14)
  4017d4:	d4 0e b0 00 	l.sw 0x0(r14),r22
  4017d8:	84 6e 00 00 	l.lwz r3,0x0(r14)
      adr = SCREEN_BPL1+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8);
    }
    MEM_UPLOAD_FINI();
    MEM_UPLOAD_INIT(SCREEN_BPL2+LOGO_OFFSET);
    adr = SCREEN_BPL2+LOGO_OFFSET;
    for (y=0; y<LOGO_HEIGHT; y++) {
  4017dc:	18 60 00 08 	l.movhi r3,0x8
  4017e0:	a8 63 6e 68 	l.ori r3,r3,0x6e68
  4017e4:	e4 12 18 00 	l.sfeq r18,r3
  4017e8:	0f ff ff 2e 	l.bnf 4014a0 <BootUploadLogo+0x544>
  4017ec:	9e c0 00 0d 	l.addi r22,r0,0xd
      }
      MEM_UPLOAD_FINI();
      MEM_UPLOAD_INIT(SCREEN_BPL2+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8));
      adr = SCREEN_BPL2+LOGO_OFFSET+(y+1)*(SCREEN_WIDTH/8);
    }
    MEM_UPLOAD_FINI();
  4017f0:	9c 60 00 40 	l.addi r3,r0,0x40
  4017f4:	d4 18 18 00 	l.sw 0x0(r24),r3
  4017f8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4017fc:	84 62 00 00 	l.lwz r3,0x0(r2)
  401800:	84 62 00 00 	l.lwz r3,0x0(r2)
  401804:	84 62 00 00 	l.lwz r3,0x0(r2)
  401808:	84 62 00 00 	l.lwz r3,0x0(r2)
  40180c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401810:	84 62 00 00 	l.lwz r3,0x0(r2)
  401814:	84 62 00 00 	l.lwz r3,0x0(r2)
  401818:	84 62 00 00 	l.lwz r3,0x0(r2)
  40181c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401820:	84 62 00 00 	l.lwz r3,0x0(r2)
  401824:	84 62 00 00 	l.lwz r3,0x0(r2)
  401828:	84 62 00 00 	l.lwz r3,0x0(r2)
  40182c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401830:	84 62 00 00 	l.lwz r3,0x0(r2)
  401834:	84 62 00 00 	l.lwz r3,0x0(r2)
  401838:	84 62 00 00 	l.lwz r3,0x0(r2)
  40183c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401840:	84 62 00 00 	l.lwz r3,0x0(r2)
  401844:	84 62 00 00 	l.lwz r3,0x0(r2)
  401848:	84 62 00 00 	l.lwz r3,0x0(r2)
  40184c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401850:	84 62 00 00 	l.lwz r3,0x0(r2)
  401854:	84 62 00 00 	l.lwz r3,0x0(r2)
  401858:	84 62 00 00 	l.lwz r3,0x0(r2)
  40185c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401860:	84 62 00 00 	l.lwz r3,0x0(r2)
  401864:	84 62 00 00 	l.lwz r3,0x0(r2)
  401868:	84 62 00 00 	l.lwz r3,0x0(r2)
  40186c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401870:	84 62 00 00 	l.lwz r3,0x0(r2)
  401874:	84 62 00 00 	l.lwz r3,0x0(r2)
  401878:	84 62 00 00 	l.lwz r3,0x0(r2)
  40187c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401880:	84 62 00 00 	l.lwz r3,0x0(r2)
  401884:	84 62 00 00 	l.lwz r3,0x0(r2)
  401888:	84 62 00 00 	l.lwz r3,0x0(r2)
  40188c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401890:	84 62 00 00 	l.lwz r3,0x0(r2)
  401894:	84 62 00 00 	l.lwz r3,0x0(r2)
  401898:	84 62 00 00 	l.lwz r3,0x0(r2)
  40189c:	84 62 00 00 	l.lwz r3,0x0(r2)
  4018a0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4018a4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4018a8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4018ac:	84 62 00 00 	l.lwz r3,0x0(r2)
  4018b0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4018b4:	84 42 00 00 	l.lwz r2,0x0(r2)
  }
}
  4018b8:	9c 21 03 60 	l.addi r1,r1,0x360
  4018bc:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  4018c0:	84 41 ff d4 	l.lwz r2,0xffffffd4(r1)
  4018c4:	85 c1 ff d8 	l.lwz r14,0xffffffd8(r1)
  4018c8:	86 01 ff dc 	l.lwz r16,0xffffffdc(r1)
  4018cc:	86 41 ff e0 	l.lwz r18,0xffffffe0(r1)
  4018d0:	86 81 ff e4 	l.lwz r20,0xffffffe4(r1)
  4018d4:	86 c1 ff e8 	l.lwz r22,0xffffffe8(r1)
  4018d8:	87 01 ff ec 	l.lwz r24,0xffffffec(r1)
  4018dc:	87 41 ff f0 	l.lwz r26,0xfffffff0(r1)
  4018e0:	87 81 ff f4 	l.lwz r28,0xfffffff4(r1)
  4018e4:	44 00 48 00 	l.jr r9
  4018e8:	87 c1 ff f8 	l.lwz r30,0xfffffff8(r1)

004018ec <BootUploadBall>:


//// BootUploadBall() ////
void BootUploadBall()
{
  4018ec:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  4018f0:	d7 e1 17 d8 	l.sw 0xffffffd8(r1),r2
  4018f4:	d7 e1 77 dc 	l.sw 0xffffffdc(r1),r14
  4018f8:	d7 e1 87 e0 	l.sw 0xffffffe0(r1),r16
  4018fc:	d7 e1 97 e4 	l.sw 0xffffffe4(r1),r18
  401900:	d7 e1 a7 e8 	l.sw 0xffffffe8(r1),r20
  401904:	d7 e1 b7 ec 	l.sw 0xffffffec(r1),r22
  401908:	d7 e1 c7 f0 	l.sw 0xfffffff0(r1),r24
  40190c:	d7 e1 d7 f4 	l.sw 0xfffffff4(r1),r26
  401910:	d7 e1 e7 f8 	l.sw 0xfffffff8(r1),r28
  RAFile file;
  int x;
  int i=0;
  int adr;

  if (RAOpen(&file, BALL_FILE)) {
  401914:	18 80 00 41 	l.movhi r4,0x41
}


//// BootUploadBall() ////
void BootUploadBall()
{
  401918:	9c 21 fc a4 	l.addi r1,r1,0xfffffca4
  RAFile file;
  int x;
  int i=0;
  int adr;

  if (RAOpen(&file, BALL_FILE)) {
  40191c:	a8 84 77 5b 	l.ori r4,r4,0x775b
  401920:	04 00 1f 21 	l.jal 4095a4 <RAOpen>
  401924:	a8 61 00 00 	l.ori r3,r1,0x0
  401928:	bc 0b 00 00 	l.sfeqi r11,0x0
  40192c:	10 00 00 e6 	l.bf 401cc4 <BootUploadBall+0x3d8>
  401930:	1a c0 00 40 	l.movhi r22,0x40
    RARead(&file, sector_buffer, 512);
  401934:	18 80 00 41 	l.movhi r4,0x41
  401938:	a8 61 00 00 	l.ori r3,r1,0x0
  40193c:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  401940:	9c a0 02 00 	l.addi r5,r0,0x200
  401944:	aa d6 56 a4 	l.ori r22,r22,0x56a4
  401948:	48 00 b0 00 	l.jalr r22
  40194c:	18 40 00 80 	l.movhi r2,0x80
    MEM_UPLOAD_INIT(BALL_ADDRESS);
  401950:	aa 82 00 20 	l.ori r20,r2,0x20
  401954:	9c c0 00 44 	l.addi r6,r0,0x44
  401958:	a9 c2 00 24 	l.ori r14,r2,0x24
  40195c:	9c 80 00 1c 	l.addi r4,r0,0x1c
  401960:	d4 14 30 00 	l.sw 0x0(r20),r6
  401964:	d4 0e 20 00 	l.sw 0x0(r14),r4
    adr = BALL_ADDRESS;
  401968:	1a 00 00 08 	l.movhi r16,0x8
  int i=0;
  int adr;

  if (RAOpen(&file, BALL_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(BALL_ADDRESS);
  40196c:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401970:	9c 60 00 00 	l.addi r3,r0,0x0
    adr = BALL_ADDRESS;
  401974:	aa 10 a0 00 	l.ori r16,r16,0xa000
  int i=0;
  int adr;

  if (RAOpen(&file, BALL_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(BALL_ADDRESS);
  401978:	d4 0e 18 00 	l.sw 0x0(r14),r3
//// BootUploadBall() ////
void BootUploadBall()
{
  RAFile file;
  int x;
  int i=0;
  40197c:	9c a0 00 00 	l.addi r5,r0,0x0
  int adr;

  if (RAOpen(&file, BALL_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(BALL_ADDRESS);
  401980:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401984:	9c 60 00 a0 	l.addi r3,r0,0xa0
        MEM_UPLOAD_INIT(adr);
        i = 0;
      }
      SPI(sector_buffer[i++]);
      SPI(sector_buffer[i++]);
      SPIN(); SPIN(); SPIN(); SPIN();
  401988:	e0 42 20 04 	l.or r2,r2,r4
  int i=0;
  int adr;

  if (RAOpen(&file, BALL_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(BALL_ADDRESS);
  40198c:	d4 0e 18 00 	l.sw 0x0(r14),r3
    adr = BALL_ADDRESS;
    for (x=0; x<BALL_SIZE/2; x++) {
      if (i == 512) {
        MEM_UPLOAD_FINI();
  401990:	9f 80 00 40 	l.addi r28,r0,0x40
  int i=0;
  int adr;

  if (RAOpen(&file, BALL_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(BALL_ADDRESS);
  401994:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401998:	9c 60 00 08 	l.addi r3,r0,0x8
    adr = BALL_ADDRESS;
    for (x=0; x<BALL_SIZE/2; x++) {
      if (i == 512) {
        MEM_UPLOAD_FINI();
        RARead(&file, sector_buffer, 512);
        MEM_UPLOAD_INIT(adr);
  40199c:	ab 46 00 00 	l.ori r26,r6,0x0
  int i=0;
  int adr;

  if (RAOpen(&file, BALL_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(BALL_ADDRESS);
  4019a0:	d4 0e 18 00 	l.sw 0x0(r14),r3
    adr = BALL_ADDRESS;
    for (x=0; x<BALL_SIZE/2; x++) {
      if (i == 512) {
        MEM_UPLOAD_FINI();
        RARead(&file, sector_buffer, 512);
        MEM_UPLOAD_INIT(adr);
  4019a4:	ab 04 00 00 	l.ori r24,r4,0x0
  int i=0;
  int adr;

  if (RAOpen(&file, BALL_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(BALL_ADDRESS);
  4019a8:	84 6e 00 00 	l.lwz r3,0x0(r14)
  4019ac:	9c 60 00 00 	l.addi r3,r0,0x0
  4019b0:	d4 0e 18 00 	l.sw 0x0(r14),r3
  4019b4:	84 6e 00 00 	l.lwz r3,0x0(r14)
        MEM_UPLOAD_FINI();
        RARead(&file, sector_buffer, 512);
        MEM_UPLOAD_INIT(adr);
        i = 0;
      }
      SPI(sector_buffer[i++]);
  4019b8:	00 00 00 4d 	l.j 401aec <BootUploadBall+0x200>
  4019bc:	18 80 00 41 	l.movhi r4,0x41
  if (RAOpen(&file, BALL_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(BALL_ADDRESS);
    adr = BALL_ADDRESS;
    for (x=0; x<BALL_SIZE/2; x++) {
      if (i == 512) {
  4019c0:	bc 25 02 00 	l.sfnei r5,0x200
  4019c4:	10 00 00 49 	l.bf 401ae8 <BootUploadBall+0x1fc>
  4019c8:	9e 10 00 02 	l.addi r16,r16,0x2
        MEM_UPLOAD_FINI();
  4019cc:	d4 14 e0 00 	l.sw 0x0(r20),r28
        RARead(&file, sector_buffer, 512);
  4019d0:	18 80 00 41 	l.movhi r4,0x41
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(BALL_ADDRESS);
    adr = BALL_ADDRESS;
    for (x=0; x<BALL_SIZE/2; x++) {
      if (i == 512) {
        MEM_UPLOAD_FINI();
  4019d4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4019d8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4019dc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4019e0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4019e4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4019e8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4019ec:	84 62 00 00 	l.lwz r3,0x0(r2)
  4019f0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4019f4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4019f8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4019fc:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a00:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a04:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a08:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a0c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a10:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a14:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a18:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a1c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a20:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a24:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a28:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a2c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a30:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a34:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a38:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a3c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a40:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a44:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a48:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a4c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a50:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a54:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a58:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a5c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a60:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a64:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a68:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a6c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a70:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a74:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a78:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a7c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a80:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a84:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a88:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a8c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401a90:	84 62 00 00 	l.lwz r3,0x0(r2)
        RARead(&file, sector_buffer, 512);
  401a94:	a8 61 00 00 	l.ori r3,r1,0x0
  401a98:	48 00 b0 00 	l.jalr r22
  401a9c:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
        MEM_UPLOAD_INIT(adr);
  401aa0:	d4 14 d0 00 	l.sw 0x0(r20),r26
  401aa4:	d4 0e c0 00 	l.sw 0x0(r14),r24
        i = 0;
  401aa8:	9c a0 00 00 	l.addi r5,r0,0x0
    adr = BALL_ADDRESS;
    for (x=0; x<BALL_SIZE/2; x++) {
      if (i == 512) {
        MEM_UPLOAD_FINI();
        RARead(&file, sector_buffer, 512);
        MEM_UPLOAD_INIT(adr);
  401aac:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401ab0:	a4 70 00 ff 	l.andi r3,r16,0xff
  401ab4:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401ab8:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401abc:	b8 70 00 88 	l.srai r3,r16,0x8
  401ac0:	a4 63 00 ff 	l.andi r3,r3,0xff
  401ac4:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401ac8:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401acc:	b8 70 00 90 	l.srai r3,r16,0x10
  401ad0:	a4 63 00 ff 	l.andi r3,r3,0xff
  401ad4:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401ad8:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401adc:	b8 70 00 58 	l.srli r3,r16,0x18
  401ae0:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401ae4:	84 6e 00 00 	l.lwz r3,0x0(r14)
        i = 0;
      }
      SPI(sector_buffer[i++]);
  401ae8:	18 80 00 41 	l.movhi r4,0x41
  401aec:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  401af0:	e0 65 20 00 	l.add r3,r5,r4
  401af4:	8c 63 00 00 	l.lbz r3,0x0(r3)
  401af8:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401afc:	9c 65 00 01 	l.addi r3,r5,0x1
  401b00:	84 8e 00 00 	l.lwz r4,0x0(r14)
      SPI(sector_buffer[i++]);
  401b04:	18 80 00 41 	l.movhi r4,0x41
  401b08:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  401b0c:	e0 63 20 00 	l.add r3,r3,r4
  401b10:	8c 63 00 00 	l.lbz r3,0x0(r3)
  401b14:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401b18:	84 6e 00 00 	l.lwz r3,0x0(r14)
      SPIN(); SPIN(); SPIN(); SPIN();
  401b1c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b20:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b24:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b28:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b2c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b30:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b34:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b38:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b3c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b40:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b44:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b48:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b4c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b50:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b54:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b58:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b5c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b60:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b64:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b68:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b6c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b70:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b74:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b78:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b7c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b80:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b84:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b88:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b8c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b90:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b94:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b98:	84 62 00 00 	l.lwz r3,0x0(r2)
  401b9c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401ba0:	84 62 00 00 	l.lwz r3,0x0(r2)
  401ba4:	84 62 00 00 	l.lwz r3,0x0(r2)
  401ba8:	84 62 00 00 	l.lwz r3,0x0(r2)
  401bac:	84 62 00 00 	l.lwz r3,0x0(r2)
  401bb0:	84 62 00 00 	l.lwz r3,0x0(r2)
  401bb4:	84 62 00 00 	l.lwz r3,0x0(r2)
  401bb8:	84 62 00 00 	l.lwz r3,0x0(r2)
  401bbc:	84 62 00 00 	l.lwz r3,0x0(r2)
  401bc0:	84 62 00 00 	l.lwz r3,0x0(r2)
  401bc4:	84 62 00 00 	l.lwz r3,0x0(r2)
  401bc8:	84 62 00 00 	l.lwz r3,0x0(r2)
  401bcc:	84 62 00 00 	l.lwz r3,0x0(r2)
  401bd0:	84 62 00 00 	l.lwz r3,0x0(r2)
  401bd4:	84 62 00 00 	l.lwz r3,0x0(r2)
  401bd8:	84 62 00 00 	l.lwz r3,0x0(r2)

  if (RAOpen(&file, BALL_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(BALL_ADDRESS);
    adr = BALL_ADDRESS;
    for (x=0; x<BALL_SIZE/2; x++) {
  401bdc:	18 60 00 08 	l.movhi r3,0x8
  401be0:	a8 63 df fe 	l.ori r3,r3,0xdffe
  401be4:	e4 30 18 00 	l.sfne r16,r3
  401be8:	13 ff ff 76 	l.bf 4019c0 <BootUploadBall+0xd4>
  401bec:	9c a5 00 02 	l.addi r5,r5,0x2
  401bf0:	9c a5 ff fe 	l.addi r5,r5,0xfffffffe
      SPI(sector_buffer[i++]);
      SPI(sector_buffer[i++]);
      SPIN(); SPIN(); SPIN(); SPIN();
      adr += 2;
    }
    MEM_UPLOAD_FINI();
  401bf4:	18 60 00 80 	l.movhi r3,0x80
  401bf8:	9c 80 00 40 	l.addi r4,r0,0x40
  401bfc:	a8 63 00 20 	l.ori r3,r3,0x20
  401c00:	d4 03 20 00 	l.sw 0x0(r3),r4
  401c04:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c08:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c0c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c10:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c14:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c18:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c1c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c20:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c24:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c28:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c2c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c30:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c34:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c38:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c3c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c40:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c44:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c48:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c4c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c50:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c54:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c58:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c5c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c60:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c64:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c68:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c6c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c70:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c74:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c78:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c7c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c80:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c84:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c88:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c8c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c90:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c94:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c98:	84 62 00 00 	l.lwz r3,0x0(r2)
  401c9c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401ca0:	84 62 00 00 	l.lwz r3,0x0(r2)
  401ca4:	84 62 00 00 	l.lwz r3,0x0(r2)
  401ca8:	84 62 00 00 	l.lwz r3,0x0(r2)
  401cac:	84 62 00 00 	l.lwz r3,0x0(r2)
  401cb0:	84 62 00 00 	l.lwz r3,0x0(r2)
  401cb4:	84 62 00 00 	l.lwz r3,0x0(r2)
  401cb8:	84 62 00 00 	l.lwz r3,0x0(r2)
  401cbc:	84 62 00 00 	l.lwz r3,0x0(r2)
  401cc0:	84 42 00 00 	l.lwz r2,0x0(r2)
  }
}
  401cc4:	9c 21 03 5c 	l.addi r1,r1,0x35c
  401cc8:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  401ccc:	84 41 ff d8 	l.lwz r2,0xffffffd8(r1)
  401cd0:	85 c1 ff dc 	l.lwz r14,0xffffffdc(r1)
  401cd4:	86 01 ff e0 	l.lwz r16,0xffffffe0(r1)
  401cd8:	86 41 ff e4 	l.lwz r18,0xffffffe4(r1)
  401cdc:	86 81 ff e8 	l.lwz r20,0xffffffe8(r1)
  401ce0:	86 c1 ff ec 	l.lwz r22,0xffffffec(r1)
  401ce4:	87 01 ff f0 	l.lwz r24,0xfffffff0(r1)
  401ce8:	87 41 ff f4 	l.lwz r26,0xfffffff4(r1)
  401cec:	44 00 48 00 	l.jr r9
  401cf0:	87 81 ff f8 	l.lwz r28,0xfffffff8(r1)

00401cf4 <BootUploadCopper>:


//// BootUploadCopper() ////
void BootUploadCopper()
{
  401cf4:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  401cf8:	d7 e1 17 d8 	l.sw 0xffffffd8(r1),r2
  401cfc:	d7 e1 77 dc 	l.sw 0xffffffdc(r1),r14
  401d00:	d7 e1 87 e0 	l.sw 0xffffffe0(r1),r16
  401d04:	d7 e1 97 e4 	l.sw 0xffffffe4(r1),r18
  401d08:	d7 e1 a7 e8 	l.sw 0xffffffe8(r1),r20
  401d0c:	d7 e1 b7 ec 	l.sw 0xffffffec(r1),r22
  401d10:	d7 e1 c7 f0 	l.sw 0xfffffff0(r1),r24
  401d14:	d7 e1 d7 f4 	l.sw 0xfffffff4(r1),r26
  401d18:	d7 e1 e7 f8 	l.sw 0xfffffff8(r1),r28
  RAFile file;
  int x;
  int i=0;
  int adr;

  if (RAOpen(&file, COPPER_FILE)) {
  401d1c:	18 80 00 41 	l.movhi r4,0x41
}


//// BootUploadCopper() ////
void BootUploadCopper()
{
  401d20:	9c 21 fc a4 	l.addi r1,r1,0xfffffca4
  RAFile file;
  int x;
  int i=0;
  int adr;

  if (RAOpen(&file, COPPER_FILE)) {
  401d24:	a8 84 77 67 	l.ori r4,r4,0x7767
  401d28:	04 00 1e 1f 	l.jal 4095a4 <RAOpen>
  401d2c:	a8 61 00 00 	l.ori r3,r1,0x0
  401d30:	bc 0b 00 00 	l.sfeqi r11,0x0
  401d34:	10 00 00 e9 	l.bf 4020d8 <BootUploadCopper+0x3e4>
  401d38:	18 60 00 80 	l.movhi r3,0x80
    RARead(&file, sector_buffer, 512);
  401d3c:	1a c0 00 40 	l.movhi r22,0x40
  401d40:	18 80 00 41 	l.movhi r4,0x41
  401d44:	a8 61 00 00 	l.ori r3,r1,0x0
  401d48:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  401d4c:	9c a0 02 00 	l.addi r5,r0,0x200
  401d50:	aa d6 56 a4 	l.ori r22,r22,0x56a4
  401d54:	48 00 b0 00 	l.jalr r22
  401d58:	18 40 00 80 	l.movhi r2,0x80
    MEM_UPLOAD_INIT(COPPER_ADDRESS);
  401d5c:	aa 82 00 20 	l.ori r20,r2,0x20
  401d60:	9c c0 00 44 	l.addi r6,r0,0x44
  401d64:	a9 c2 00 24 	l.ori r14,r2,0x24
  401d68:	9c 80 00 1c 	l.addi r4,r0,0x1c
  401d6c:	d4 14 30 00 	l.sw 0x0(r20),r6
  401d70:	d4 0e 20 00 	l.sw 0x0(r14),r4
    adr = COPPER_ADDRESS;
  401d74:	1a 00 00 08 	l.movhi r16,0x8
  int i=0;
  int adr;

  if (RAOpen(&file, COPPER_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(COPPER_ADDRESS);
  401d78:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401d7c:	9c 60 00 80 	l.addi r3,r0,0x80
    adr = COPPER_ADDRESS;
  401d80:	aa 10 e6 80 	l.ori r16,r16,0xe680
  int i=0;
  int adr;

  if (RAOpen(&file, COPPER_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(COPPER_ADDRESS);
  401d84:	d4 0e 18 00 	l.sw 0x0(r14),r3
//// BootUploadCopper() ////
void BootUploadCopper()
{
  RAFile file;
  int x;
  int i=0;
  401d88:	9c a0 00 00 	l.addi r5,r0,0x0
  int adr;

  if (RAOpen(&file, COPPER_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(COPPER_ADDRESS);
  401d8c:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401d90:	9c 60 00 e6 	l.addi r3,r0,0xe6
        MEM_UPLOAD_INIT(adr);
        i = 0;
      }
      SPI(sector_buffer[i++]);
      SPI(sector_buffer[i++]);
      SPIN(); SPIN(); SPIN(); SPIN();
  401d94:	e0 42 20 04 	l.or r2,r2,r4
  int i=0;
  int adr;

  if (RAOpen(&file, COPPER_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(COPPER_ADDRESS);
  401d98:	d4 0e 18 00 	l.sw 0x0(r14),r3
    adr = COPPER_ADDRESS;
    for (x=0; x<COPPER_SIZE/2; x++) {
      if (i == 512) {
        MEM_UPLOAD_FINI();
  401d9c:	9f 80 00 40 	l.addi r28,r0,0x40
  int i=0;
  int adr;

  if (RAOpen(&file, COPPER_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(COPPER_ADDRESS);
  401da0:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401da4:	9c 60 00 08 	l.addi r3,r0,0x8
    adr = COPPER_ADDRESS;
    for (x=0; x<COPPER_SIZE/2; x++) {
      if (i == 512) {
        MEM_UPLOAD_FINI();
        RARead(&file, sector_buffer, 512);
        MEM_UPLOAD_INIT(adr);
  401da8:	ab 46 00 00 	l.ori r26,r6,0x0
  int i=0;
  int adr;

  if (RAOpen(&file, COPPER_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(COPPER_ADDRESS);
  401dac:	d4 0e 18 00 	l.sw 0x0(r14),r3
    adr = COPPER_ADDRESS;
    for (x=0; x<COPPER_SIZE/2; x++) {
      if (i == 512) {
        MEM_UPLOAD_FINI();
        RARead(&file, sector_buffer, 512);
        MEM_UPLOAD_INIT(adr);
  401db0:	ab 04 00 00 	l.ori r24,r4,0x0
  int i=0;
  int adr;

  if (RAOpen(&file, COPPER_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(COPPER_ADDRESS);
  401db4:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401db8:	9c 60 00 00 	l.addi r3,r0,0x0
  401dbc:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401dc0:	84 6e 00 00 	l.lwz r3,0x0(r14)
        MEM_UPLOAD_FINI();
        RARead(&file, sector_buffer, 512);
        MEM_UPLOAD_INIT(adr);
        i = 0;
      }
      SPI(sector_buffer[i++]);
  401dc4:	00 00 00 4d 	l.j 401ef8 <BootUploadCopper+0x204>
  401dc8:	18 80 00 41 	l.movhi r4,0x41
  if (RAOpen(&file, COPPER_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(COPPER_ADDRESS);
    adr = COPPER_ADDRESS;
    for (x=0; x<COPPER_SIZE/2; x++) {
      if (i == 512) {
  401dcc:	bc 25 02 00 	l.sfnei r5,0x200
  401dd0:	10 00 00 49 	l.bf 401ef4 <BootUploadCopper+0x200>
  401dd4:	9e 10 00 02 	l.addi r16,r16,0x2
        MEM_UPLOAD_FINI();
  401dd8:	d4 14 e0 00 	l.sw 0x0(r20),r28
        RARead(&file, sector_buffer, 512);
  401ddc:	18 80 00 41 	l.movhi r4,0x41
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(COPPER_ADDRESS);
    adr = COPPER_ADDRESS;
    for (x=0; x<COPPER_SIZE/2; x++) {
      if (i == 512) {
        MEM_UPLOAD_FINI();
  401de0:	84 62 00 00 	l.lwz r3,0x0(r2)
  401de4:	84 62 00 00 	l.lwz r3,0x0(r2)
  401de8:	84 62 00 00 	l.lwz r3,0x0(r2)
  401dec:	84 62 00 00 	l.lwz r3,0x0(r2)
  401df0:	84 62 00 00 	l.lwz r3,0x0(r2)
  401df4:	84 62 00 00 	l.lwz r3,0x0(r2)
  401df8:	84 62 00 00 	l.lwz r3,0x0(r2)
  401dfc:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e00:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e04:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e08:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e0c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e10:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e14:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e18:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e1c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e20:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e24:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e28:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e2c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e30:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e34:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e38:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e3c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e40:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e44:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e48:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e4c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e50:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e54:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e58:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e5c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e60:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e64:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e68:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e6c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e70:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e74:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e78:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e7c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e80:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e84:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e88:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e8c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e90:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e94:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e98:	84 62 00 00 	l.lwz r3,0x0(r2)
  401e9c:	84 62 00 00 	l.lwz r3,0x0(r2)
        RARead(&file, sector_buffer, 512);
  401ea0:	a8 61 00 00 	l.ori r3,r1,0x0
  401ea4:	48 00 b0 00 	l.jalr r22
  401ea8:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
        MEM_UPLOAD_INIT(adr);
  401eac:	d4 14 d0 00 	l.sw 0x0(r20),r26
  401eb0:	d4 0e c0 00 	l.sw 0x0(r14),r24
        i = 0;
  401eb4:	9c a0 00 00 	l.addi r5,r0,0x0
    adr = COPPER_ADDRESS;
    for (x=0; x<COPPER_SIZE/2; x++) {
      if (i == 512) {
        MEM_UPLOAD_FINI();
        RARead(&file, sector_buffer, 512);
        MEM_UPLOAD_INIT(adr);
  401eb8:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401ebc:	a4 70 00 ff 	l.andi r3,r16,0xff
  401ec0:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401ec4:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401ec8:	b8 70 00 88 	l.srai r3,r16,0x8
  401ecc:	a4 63 00 ff 	l.andi r3,r3,0xff
  401ed0:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401ed4:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401ed8:	b8 70 00 90 	l.srai r3,r16,0x10
  401edc:	a4 63 00 ff 	l.andi r3,r3,0xff
  401ee0:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401ee4:	84 6e 00 00 	l.lwz r3,0x0(r14)
  401ee8:	b8 70 00 58 	l.srli r3,r16,0x18
  401eec:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401ef0:	84 6e 00 00 	l.lwz r3,0x0(r14)
        i = 0;
      }
      SPI(sector_buffer[i++]);
  401ef4:	18 80 00 41 	l.movhi r4,0x41
  401ef8:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  401efc:	e0 65 20 00 	l.add r3,r5,r4
  401f00:	8c 63 00 00 	l.lbz r3,0x0(r3)
  401f04:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401f08:	9c 65 00 01 	l.addi r3,r5,0x1
  401f0c:	84 8e 00 00 	l.lwz r4,0x0(r14)
      SPI(sector_buffer[i++]);
  401f10:	18 80 00 41 	l.movhi r4,0x41
  401f14:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  401f18:	e0 63 20 00 	l.add r3,r3,r4
  401f1c:	8c 63 00 00 	l.lbz r3,0x0(r3)
  401f20:	d4 0e 18 00 	l.sw 0x0(r14),r3
  401f24:	84 6e 00 00 	l.lwz r3,0x0(r14)
      SPIN(); SPIN(); SPIN(); SPIN();
  401f28:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f2c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f30:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f34:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f38:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f3c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f40:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f44:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f48:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f4c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f50:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f54:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f58:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f5c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f60:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f64:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f68:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f6c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f70:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f74:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f78:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f7c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f80:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f84:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f88:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f8c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f90:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f94:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f98:	84 62 00 00 	l.lwz r3,0x0(r2)
  401f9c:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fa0:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fa4:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fa8:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fac:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fb0:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fb4:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fb8:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fbc:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fc0:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fc4:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fc8:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fcc:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fd0:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fd4:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fd8:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fdc:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fe0:	84 62 00 00 	l.lwz r3,0x0(r2)
  401fe4:	84 62 00 00 	l.lwz r3,0x0(r2)

  if (RAOpen(&file, COPPER_FILE)) {
    RARead(&file, sector_buffer, 512);
    MEM_UPLOAD_INIT(COPPER_ADDRESS);
    adr = COPPER_ADDRESS;
    for (x=0; x<COPPER_SIZE/2; x++) {
  401fe8:	18 60 00 08 	l.movhi r3,0x8
  401fec:	a8 63 e9 da 	l.ori r3,r3,0xe9da
  401ff0:	e4 30 18 00 	l.sfne r16,r3
  401ff4:	13 ff ff 76 	l.bf 401dcc <BootUploadCopper+0xd8>
  401ff8:	9c a5 00 02 	l.addi r5,r5,0x2
  401ffc:	9c a5 ff fe 	l.addi r5,r5,0xfffffffe
      SPI(sector_buffer[i++]);
      SPI(sector_buffer[i++]);
      SPIN(); SPIN(); SPIN(); SPIN();
      adr += 2;
    }
    MEM_UPLOAD_FINI();
  402000:	18 60 00 80 	l.movhi r3,0x80
  402004:	9c 80 00 40 	l.addi r4,r0,0x40
  402008:	a8 63 00 20 	l.ori r3,r3,0x20
  40200c:	d4 03 20 00 	l.sw 0x0(r3),r4
  402010:	84 62 00 00 	l.lwz r3,0x0(r2)
  402014:	84 62 00 00 	l.lwz r3,0x0(r2)
  402018:	84 62 00 00 	l.lwz r3,0x0(r2)
  40201c:	84 62 00 00 	l.lwz r3,0x0(r2)
  402020:	84 62 00 00 	l.lwz r3,0x0(r2)
  402024:	84 62 00 00 	l.lwz r3,0x0(r2)
  402028:	84 62 00 00 	l.lwz r3,0x0(r2)
  40202c:	84 62 00 00 	l.lwz r3,0x0(r2)
  402030:	84 62 00 00 	l.lwz r3,0x0(r2)
  402034:	84 62 00 00 	l.lwz r3,0x0(r2)
  402038:	84 62 00 00 	l.lwz r3,0x0(r2)
  40203c:	84 62 00 00 	l.lwz r3,0x0(r2)
  402040:	84 62 00 00 	l.lwz r3,0x0(r2)
  402044:	84 62 00 00 	l.lwz r3,0x0(r2)
  402048:	84 62 00 00 	l.lwz r3,0x0(r2)
  40204c:	84 62 00 00 	l.lwz r3,0x0(r2)
  402050:	84 62 00 00 	l.lwz r3,0x0(r2)
  402054:	84 62 00 00 	l.lwz r3,0x0(r2)
  402058:	84 62 00 00 	l.lwz r3,0x0(r2)
  40205c:	84 62 00 00 	l.lwz r3,0x0(r2)
  402060:	84 62 00 00 	l.lwz r3,0x0(r2)
  402064:	84 62 00 00 	l.lwz r3,0x0(r2)
  402068:	84 62 00 00 	l.lwz r3,0x0(r2)
  40206c:	84 62 00 00 	l.lwz r3,0x0(r2)
  402070:	84 62 00 00 	l.lwz r3,0x0(r2)
  402074:	84 62 00 00 	l.lwz r3,0x0(r2)
  402078:	84 62 00 00 	l.lwz r3,0x0(r2)
  40207c:	84 62 00 00 	l.lwz r3,0x0(r2)
  402080:	84 62 00 00 	l.lwz r3,0x0(r2)
  402084:	84 62 00 00 	l.lwz r3,0x0(r2)
  402088:	84 62 00 00 	l.lwz r3,0x0(r2)
  40208c:	84 62 00 00 	l.lwz r3,0x0(r2)
  402090:	84 62 00 00 	l.lwz r3,0x0(r2)
  402094:	84 62 00 00 	l.lwz r3,0x0(r2)
  402098:	84 62 00 00 	l.lwz r3,0x0(r2)
  40209c:	84 62 00 00 	l.lwz r3,0x0(r2)
  4020a0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4020a4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4020a8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4020ac:	84 62 00 00 	l.lwz r3,0x0(r2)
  4020b0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4020b4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4020b8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4020bc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4020c0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4020c4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4020c8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4020cc:	84 42 00 00 	l.lwz r2,0x0(r2)
    MEM_WRITE16(0x00e6); MEM_WRITE16(0x5000);
    MEM_WRITE16(0x0100); MEM_WRITE16(0xa200);
    MEM_WRITE16(0xffff); MEM_WRITE16(0xfffe);
    MEM_UPLOAD_FINI();
  }
}
  4020d0:	00 00 02 c0 	l.j 402bd0 <BootUploadCopper+0xedc>
  4020d4:	9c 21 03 5c 	l.addi r1,r1,0x35c
      SPIN(); SPIN(); SPIN(); SPIN();
      adr += 2;
    }
    MEM_UPLOAD_FINI();
  } else {
    MEM_UPLOAD_INIT(COPPER_ADDRESS);
  4020d8:	9c 40 00 44 	l.addi r2,r0,0x44
  4020dc:	a8 a3 00 20 	l.ori r5,r3,0x20
  4020e0:	9c 80 00 1c 	l.addi r4,r0,0x1c
  4020e4:	d4 05 10 00 	l.sw 0x0(r5),r2
  4020e8:	a8 43 00 24 	l.ori r2,r3,0x24
  4020ec:	9c c0 00 e6 	l.addi r6,r0,0xe6
  4020f0:	d4 02 20 00 	l.sw 0x0(r2),r4
    MEM_WRITE16(0x00e0); MEM_WRITE16(0x0008);
  4020f4:	a8 63 00 1c 	l.ori r3,r3,0x1c
      SPIN(); SPIN(); SPIN(); SPIN();
      adr += 2;
    }
    MEM_UPLOAD_FINI();
  } else {
    MEM_UPLOAD_INIT(COPPER_ADDRESS);
  4020f8:	84 82 00 00 	l.lwz r4,0x0(r2)
  4020fc:	9c 80 00 80 	l.addi r4,r0,0x80
  402100:	d4 02 20 00 	l.sw 0x0(r2),r4
  402104:	84 82 00 00 	l.lwz r4,0x0(r2)
  402108:	d4 02 30 00 	l.sw 0x0(r2),r6
  40210c:	84 82 00 00 	l.lwz r4,0x0(r2)
  402110:	9c 80 00 08 	l.addi r4,r0,0x8
  402114:	d4 02 20 00 	l.sw 0x0(r2),r4
  402118:	84 e2 00 00 	l.lwz r7,0x0(r2)
  40211c:	d4 02 58 00 	l.sw 0x0(r2),r11
  402120:	84 e2 00 00 	l.lwz r7,0x0(r2)
    MEM_WRITE16(0x00e0); MEM_WRITE16(0x0008);
  402124:	d4 02 58 00 	l.sw 0x0(r2),r11
  402128:	84 e2 00 00 	l.lwz r7,0x0(r2)
  40212c:	9c e0 00 e0 	l.addi r7,r0,0xe0
  402130:	d4 02 38 00 	l.sw 0x0(r2),r7
  402134:	84 e2 00 00 	l.lwz r7,0x0(r2)
  402138:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40213c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402140:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402144:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402148:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40214c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402150:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402154:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402158:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40215c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402160:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402164:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402168:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40216c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402170:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402174:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402178:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40217c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402180:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402184:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402188:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40218c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402190:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402194:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402198:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40219c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021a0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021a4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021a8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021ac:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021b0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021b4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021b8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021bc:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021c0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021c4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021c8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021cc:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021d0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021d4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021d8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021dc:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021e0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021e4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021e8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021ec:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021f0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021f4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4021f8:	d4 02 58 00 	l.sw 0x0(r2),r11
  4021fc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  402200:	d4 02 20 00 	l.sw 0x0(r2),r4
  402204:	84 e2 00 00 	l.lwz r7,0x0(r2)
  402208:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40220c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402210:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402214:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402218:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40221c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402220:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402224:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402228:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40222c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402230:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402234:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402238:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40223c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402240:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402244:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402248:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40224c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402250:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402254:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402258:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40225c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402260:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402264:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402268:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40226c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402270:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402274:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402278:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40227c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402280:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402284:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402288:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40228c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402290:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402294:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402298:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40229c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022a0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022a4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022a8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022ac:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022b0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022b4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022b8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022bc:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022c0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022c4:	84 e3 00 00 	l.lwz r7,0x0(r3)
    MEM_WRITE16(0x00e2); MEM_WRITE16(0x0000);
  4022c8:	d4 02 58 00 	l.sw 0x0(r2),r11
  4022cc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4022d0:	9c e0 00 e2 	l.addi r7,r0,0xe2
  4022d4:	d4 02 38 00 	l.sw 0x0(r2),r7
  4022d8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4022dc:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022e0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022e4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022e8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022ec:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022f0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022f4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022f8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4022fc:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402300:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402304:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402308:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40230c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402310:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402314:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402318:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40231c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402320:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402324:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402328:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40232c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402330:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402334:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402338:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40233c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402340:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402344:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402348:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40234c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402350:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402354:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402358:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40235c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402360:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402364:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402368:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40236c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402370:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402374:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402378:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40237c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402380:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402384:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402388:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40238c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402390:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402394:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402398:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40239c:	d4 02 58 00 	l.sw 0x0(r2),r11
  4023a0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4023a4:	d4 02 58 00 	l.sw 0x0(r2),r11
  4023a8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4023ac:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023b0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023b4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023b8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023bc:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023c0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023c4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023c8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023cc:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023d0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023d4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023d8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023dc:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023e0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023e4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023e8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023ec:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023f0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023f4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023f8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4023fc:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402400:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402404:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402408:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40240c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402410:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402414:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402418:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40241c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402420:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402424:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402428:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40242c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402430:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402434:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402438:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40243c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402440:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402444:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402448:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40244c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402450:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402454:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402458:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40245c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402460:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402464:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402468:	84 e3 00 00 	l.lwz r7,0x0(r3)
    MEM_WRITE16(0x00e4); MEM_WRITE16(0x0008);
  40246c:	d4 02 58 00 	l.sw 0x0(r2),r11
  402470:	84 e2 00 00 	l.lwz r7,0x0(r2)
  402474:	9c e0 00 e4 	l.addi r7,r0,0xe4
  402478:	d4 02 38 00 	l.sw 0x0(r2),r7
  40247c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  402480:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402484:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402488:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40248c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402490:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402494:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402498:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40249c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024a0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024a4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024a8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024ac:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024b0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024b4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024b8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024bc:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024c0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024c4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024c8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024cc:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024d0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024d4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024d8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024dc:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024e0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024e4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024e8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024ec:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024f0:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024f4:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024f8:	84 e3 00 00 	l.lwz r7,0x0(r3)
  4024fc:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402500:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402504:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402508:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40250c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402510:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402514:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402518:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40251c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402520:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402524:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402528:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40252c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402530:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402534:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402538:	84 e3 00 00 	l.lwz r7,0x0(r3)
  40253c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  402540:	d4 02 58 00 	l.sw 0x0(r2),r11
  402544:	84 e2 00 00 	l.lwz r7,0x0(r2)
  402548:	d4 02 20 00 	l.sw 0x0(r2),r4
  40254c:	84 82 00 00 	l.lwz r4,0x0(r2)
  402550:	84 83 00 00 	l.lwz r4,0x0(r3)
  402554:	84 83 00 00 	l.lwz r4,0x0(r3)
  402558:	84 83 00 00 	l.lwz r4,0x0(r3)
  40255c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402560:	84 83 00 00 	l.lwz r4,0x0(r3)
  402564:	84 83 00 00 	l.lwz r4,0x0(r3)
  402568:	84 83 00 00 	l.lwz r4,0x0(r3)
  40256c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402570:	84 83 00 00 	l.lwz r4,0x0(r3)
  402574:	84 83 00 00 	l.lwz r4,0x0(r3)
  402578:	84 83 00 00 	l.lwz r4,0x0(r3)
  40257c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402580:	84 83 00 00 	l.lwz r4,0x0(r3)
  402584:	84 83 00 00 	l.lwz r4,0x0(r3)
  402588:	84 83 00 00 	l.lwz r4,0x0(r3)
  40258c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402590:	84 83 00 00 	l.lwz r4,0x0(r3)
  402594:	84 83 00 00 	l.lwz r4,0x0(r3)
  402598:	84 83 00 00 	l.lwz r4,0x0(r3)
  40259c:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025a0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025a4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025a8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025ac:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025b0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025b4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025b8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025bc:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025c0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025c4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025c8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025cc:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025d0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025d4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025d8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025dc:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025e0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025e4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025e8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025ec:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025f0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025f4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025f8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4025fc:	84 83 00 00 	l.lwz r4,0x0(r3)
  402600:	84 83 00 00 	l.lwz r4,0x0(r3)
  402604:	84 83 00 00 	l.lwz r4,0x0(r3)
  402608:	84 83 00 00 	l.lwz r4,0x0(r3)
  40260c:	84 83 00 00 	l.lwz r4,0x0(r3)
    MEM_WRITE16(0x00e6); MEM_WRITE16(0x5000);
  402610:	d4 02 58 00 	l.sw 0x0(r2),r11
  402614:	84 82 00 00 	l.lwz r4,0x0(r2)
  402618:	d4 02 30 00 	l.sw 0x0(r2),r6
  40261c:	84 82 00 00 	l.lwz r4,0x0(r2)
  402620:	84 83 00 00 	l.lwz r4,0x0(r3)
  402624:	84 83 00 00 	l.lwz r4,0x0(r3)
  402628:	84 83 00 00 	l.lwz r4,0x0(r3)
  40262c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402630:	84 83 00 00 	l.lwz r4,0x0(r3)
  402634:	84 83 00 00 	l.lwz r4,0x0(r3)
  402638:	84 83 00 00 	l.lwz r4,0x0(r3)
  40263c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402640:	84 83 00 00 	l.lwz r4,0x0(r3)
  402644:	84 83 00 00 	l.lwz r4,0x0(r3)
  402648:	84 83 00 00 	l.lwz r4,0x0(r3)
  40264c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402650:	84 83 00 00 	l.lwz r4,0x0(r3)
  402654:	84 83 00 00 	l.lwz r4,0x0(r3)
  402658:	84 83 00 00 	l.lwz r4,0x0(r3)
  40265c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402660:	84 83 00 00 	l.lwz r4,0x0(r3)
  402664:	84 83 00 00 	l.lwz r4,0x0(r3)
  402668:	84 83 00 00 	l.lwz r4,0x0(r3)
  40266c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402670:	84 83 00 00 	l.lwz r4,0x0(r3)
  402674:	84 83 00 00 	l.lwz r4,0x0(r3)
  402678:	84 83 00 00 	l.lwz r4,0x0(r3)
  40267c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402680:	84 83 00 00 	l.lwz r4,0x0(r3)
  402684:	84 83 00 00 	l.lwz r4,0x0(r3)
  402688:	84 83 00 00 	l.lwz r4,0x0(r3)
  40268c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402690:	84 83 00 00 	l.lwz r4,0x0(r3)
  402694:	84 83 00 00 	l.lwz r4,0x0(r3)
  402698:	84 83 00 00 	l.lwz r4,0x0(r3)
  40269c:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026a0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026a4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026a8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026ac:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026b0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026b4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026b8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026bc:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026c0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026c4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026c8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026cc:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026d0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026d4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026d8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026dc:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026e0:	9c 80 00 50 	l.addi r4,r0,0x50
  4026e4:	d4 02 20 00 	l.sw 0x0(r2),r4
  4026e8:	84 82 00 00 	l.lwz r4,0x0(r2)
  4026ec:	d4 02 58 00 	l.sw 0x0(r2),r11
  4026f0:	84 82 00 00 	l.lwz r4,0x0(r2)
  4026f4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026f8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4026fc:	84 83 00 00 	l.lwz r4,0x0(r3)
  402700:	84 83 00 00 	l.lwz r4,0x0(r3)
  402704:	84 83 00 00 	l.lwz r4,0x0(r3)
  402708:	84 83 00 00 	l.lwz r4,0x0(r3)
  40270c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402710:	84 83 00 00 	l.lwz r4,0x0(r3)
  402714:	84 83 00 00 	l.lwz r4,0x0(r3)
  402718:	84 83 00 00 	l.lwz r4,0x0(r3)
  40271c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402720:	84 83 00 00 	l.lwz r4,0x0(r3)
  402724:	84 83 00 00 	l.lwz r4,0x0(r3)
  402728:	84 83 00 00 	l.lwz r4,0x0(r3)
  40272c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402730:	84 83 00 00 	l.lwz r4,0x0(r3)
  402734:	84 83 00 00 	l.lwz r4,0x0(r3)
  402738:	84 83 00 00 	l.lwz r4,0x0(r3)
  40273c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402740:	84 83 00 00 	l.lwz r4,0x0(r3)
  402744:	84 83 00 00 	l.lwz r4,0x0(r3)
  402748:	84 83 00 00 	l.lwz r4,0x0(r3)
  40274c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402750:	84 83 00 00 	l.lwz r4,0x0(r3)
  402754:	84 83 00 00 	l.lwz r4,0x0(r3)
  402758:	84 83 00 00 	l.lwz r4,0x0(r3)
  40275c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402760:	84 83 00 00 	l.lwz r4,0x0(r3)
  402764:	84 83 00 00 	l.lwz r4,0x0(r3)
  402768:	84 83 00 00 	l.lwz r4,0x0(r3)
  40276c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402770:	84 83 00 00 	l.lwz r4,0x0(r3)
  402774:	84 83 00 00 	l.lwz r4,0x0(r3)
  402778:	84 83 00 00 	l.lwz r4,0x0(r3)
  40277c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402780:	84 83 00 00 	l.lwz r4,0x0(r3)
  402784:	84 83 00 00 	l.lwz r4,0x0(r3)
  402788:	84 83 00 00 	l.lwz r4,0x0(r3)
  40278c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402790:	84 83 00 00 	l.lwz r4,0x0(r3)
  402794:	84 83 00 00 	l.lwz r4,0x0(r3)
  402798:	84 83 00 00 	l.lwz r4,0x0(r3)
  40279c:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027a0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027a4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027a8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027ac:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027b0:	84 83 00 00 	l.lwz r4,0x0(r3)
    MEM_WRITE16(0x0100); MEM_WRITE16(0xa200);
  4027b4:	9c 80 00 01 	l.addi r4,r0,0x1
  4027b8:	d4 02 20 00 	l.sw 0x0(r2),r4
  4027bc:	84 82 00 00 	l.lwz r4,0x0(r2)
  4027c0:	d4 02 58 00 	l.sw 0x0(r2),r11
  4027c4:	84 82 00 00 	l.lwz r4,0x0(r2)
  4027c8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027cc:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027d0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027d4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027d8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027dc:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027e0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027e4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027e8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027ec:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027f0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027f4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027f8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4027fc:	84 83 00 00 	l.lwz r4,0x0(r3)
  402800:	84 83 00 00 	l.lwz r4,0x0(r3)
  402804:	84 83 00 00 	l.lwz r4,0x0(r3)
  402808:	84 83 00 00 	l.lwz r4,0x0(r3)
  40280c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402810:	84 83 00 00 	l.lwz r4,0x0(r3)
  402814:	84 83 00 00 	l.lwz r4,0x0(r3)
  402818:	84 83 00 00 	l.lwz r4,0x0(r3)
  40281c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402820:	84 83 00 00 	l.lwz r4,0x0(r3)
  402824:	84 83 00 00 	l.lwz r4,0x0(r3)
  402828:	84 83 00 00 	l.lwz r4,0x0(r3)
  40282c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402830:	84 83 00 00 	l.lwz r4,0x0(r3)
  402834:	84 83 00 00 	l.lwz r4,0x0(r3)
  402838:	84 83 00 00 	l.lwz r4,0x0(r3)
  40283c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402840:	84 83 00 00 	l.lwz r4,0x0(r3)
  402844:	84 83 00 00 	l.lwz r4,0x0(r3)
  402848:	84 83 00 00 	l.lwz r4,0x0(r3)
  40284c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402850:	84 83 00 00 	l.lwz r4,0x0(r3)
  402854:	84 83 00 00 	l.lwz r4,0x0(r3)
  402858:	84 83 00 00 	l.lwz r4,0x0(r3)
  40285c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402860:	84 83 00 00 	l.lwz r4,0x0(r3)
  402864:	84 83 00 00 	l.lwz r4,0x0(r3)
  402868:	84 83 00 00 	l.lwz r4,0x0(r3)
  40286c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402870:	84 83 00 00 	l.lwz r4,0x0(r3)
  402874:	84 83 00 00 	l.lwz r4,0x0(r3)
  402878:	84 83 00 00 	l.lwz r4,0x0(r3)
  40287c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402880:	84 83 00 00 	l.lwz r4,0x0(r3)
  402884:	84 83 00 00 	l.lwz r4,0x0(r3)
  402888:	9c 80 00 a2 	l.addi r4,r0,0xa2
  40288c:	d4 02 20 00 	l.sw 0x0(r2),r4
  402890:	84 82 00 00 	l.lwz r4,0x0(r2)
  402894:	d4 02 58 00 	l.sw 0x0(r2),r11
  402898:	84 82 00 00 	l.lwz r4,0x0(r2)
  40289c:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028a0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028a4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028a8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028ac:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028b0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028b4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028b8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028bc:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028c0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028c4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028c8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028cc:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028d0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028d4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028d8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028dc:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028e0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028e4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028e8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028ec:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028f0:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028f4:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028f8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4028fc:	84 83 00 00 	l.lwz r4,0x0(r3)
  402900:	84 83 00 00 	l.lwz r4,0x0(r3)
  402904:	84 83 00 00 	l.lwz r4,0x0(r3)
  402908:	84 83 00 00 	l.lwz r4,0x0(r3)
  40290c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402910:	84 83 00 00 	l.lwz r4,0x0(r3)
  402914:	84 83 00 00 	l.lwz r4,0x0(r3)
  402918:	84 83 00 00 	l.lwz r4,0x0(r3)
  40291c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402920:	84 83 00 00 	l.lwz r4,0x0(r3)
  402924:	84 83 00 00 	l.lwz r4,0x0(r3)
  402928:	84 83 00 00 	l.lwz r4,0x0(r3)
  40292c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402930:	84 83 00 00 	l.lwz r4,0x0(r3)
  402934:	84 83 00 00 	l.lwz r4,0x0(r3)
  402938:	84 83 00 00 	l.lwz r4,0x0(r3)
  40293c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402940:	84 83 00 00 	l.lwz r4,0x0(r3)
  402944:	84 83 00 00 	l.lwz r4,0x0(r3)
  402948:	84 83 00 00 	l.lwz r4,0x0(r3)
  40294c:	84 83 00 00 	l.lwz r4,0x0(r3)
  402950:	84 83 00 00 	l.lwz r4,0x0(r3)
  402954:	84 83 00 00 	l.lwz r4,0x0(r3)
  402958:	84 83 00 00 	l.lwz r4,0x0(r3)
    MEM_WRITE16(0xffff); MEM_WRITE16(0xfffe);
  40295c:	9c 80 00 ff 	l.addi r4,r0,0xff
  402960:	d4 02 20 00 	l.sw 0x0(r2),r4
  402964:	84 c2 00 00 	l.lwz r6,0x0(r2)
  402968:	d4 02 20 00 	l.sw 0x0(r2),r4
  40296c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  402970:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402974:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402978:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40297c:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402980:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402984:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402988:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40298c:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402990:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402994:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402998:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40299c:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029a0:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029a4:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029a8:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029ac:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029b0:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029b4:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029b8:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029bc:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029c0:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029c4:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029c8:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029cc:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029d0:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029d4:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029d8:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029dc:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029e0:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029e4:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029e8:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029ec:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029f0:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029f4:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029f8:	84 c3 00 00 	l.lwz r6,0x0(r3)
  4029fc:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402a00:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402a04:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402a08:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402a0c:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402a10:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402a14:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402a18:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402a1c:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402a20:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402a24:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402a28:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402a2c:	84 c3 00 00 	l.lwz r6,0x0(r3)
  402a30:	d4 02 20 00 	l.sw 0x0(r2),r4
  402a34:	84 82 00 00 	l.lwz r4,0x0(r2)
  402a38:	9c 80 00 fe 	l.addi r4,r0,0xfe
  402a3c:	d4 02 20 00 	l.sw 0x0(r2),r4
  402a40:	84 42 00 00 	l.lwz r2,0x0(r2)
  402a44:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a48:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a4c:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a50:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a54:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a58:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a5c:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a60:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a64:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a68:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a6c:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a70:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a74:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a78:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a7c:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a80:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a84:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a88:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a8c:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a90:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a94:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a98:	84 43 00 00 	l.lwz r2,0x0(r3)
  402a9c:	84 43 00 00 	l.lwz r2,0x0(r3)
  402aa0:	84 43 00 00 	l.lwz r2,0x0(r3)
  402aa4:	84 43 00 00 	l.lwz r2,0x0(r3)
  402aa8:	84 43 00 00 	l.lwz r2,0x0(r3)
  402aac:	84 43 00 00 	l.lwz r2,0x0(r3)
  402ab0:	84 43 00 00 	l.lwz r2,0x0(r3)
  402ab4:	84 43 00 00 	l.lwz r2,0x0(r3)
  402ab8:	84 43 00 00 	l.lwz r2,0x0(r3)
  402abc:	84 43 00 00 	l.lwz r2,0x0(r3)
  402ac0:	84 43 00 00 	l.lwz r2,0x0(r3)
  402ac4:	84 43 00 00 	l.lwz r2,0x0(r3)
  402ac8:	84 43 00 00 	l.lwz r2,0x0(r3)
  402acc:	84 43 00 00 	l.lwz r2,0x0(r3)
  402ad0:	84 43 00 00 	l.lwz r2,0x0(r3)
  402ad4:	84 43 00 00 	l.lwz r2,0x0(r3)
  402ad8:	84 43 00 00 	l.lwz r2,0x0(r3)
  402adc:	84 43 00 00 	l.lwz r2,0x0(r3)
  402ae0:	84 43 00 00 	l.lwz r2,0x0(r3)
  402ae4:	84 43 00 00 	l.lwz r2,0x0(r3)
  402ae8:	84 43 00 00 	l.lwz r2,0x0(r3)
  402aec:	84 43 00 00 	l.lwz r2,0x0(r3)
  402af0:	84 43 00 00 	l.lwz r2,0x0(r3)
  402af4:	84 43 00 00 	l.lwz r2,0x0(r3)
  402af8:	84 43 00 00 	l.lwz r2,0x0(r3)
  402afc:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b00:	84 43 00 00 	l.lwz r2,0x0(r3)
    MEM_UPLOAD_FINI();
  402b04:	9c 40 00 40 	l.addi r2,r0,0x40
  402b08:	d4 05 10 00 	l.sw 0x0(r5),r2
  402b0c:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b10:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b14:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b18:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b1c:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b20:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b24:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b28:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b2c:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b30:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b34:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b38:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b3c:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b40:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b44:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b48:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b4c:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b50:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b54:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b58:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b5c:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b60:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b64:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b68:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b6c:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b70:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b74:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b78:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b7c:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b80:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b84:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b88:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b8c:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b90:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b94:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b98:	84 43 00 00 	l.lwz r2,0x0(r3)
  402b9c:	84 43 00 00 	l.lwz r2,0x0(r3)
  402ba0:	84 43 00 00 	l.lwz r2,0x0(r3)
  402ba4:	84 43 00 00 	l.lwz r2,0x0(r3)
  402ba8:	84 43 00 00 	l.lwz r2,0x0(r3)
  402bac:	84 43 00 00 	l.lwz r2,0x0(r3)
  402bb0:	84 43 00 00 	l.lwz r2,0x0(r3)
  402bb4:	84 43 00 00 	l.lwz r2,0x0(r3)
  402bb8:	84 43 00 00 	l.lwz r2,0x0(r3)
  402bbc:	84 43 00 00 	l.lwz r2,0x0(r3)
  402bc0:	84 43 00 00 	l.lwz r2,0x0(r3)
  402bc4:	84 43 00 00 	l.lwz r2,0x0(r3)
  402bc8:	84 43 00 00 	l.lwz r2,0x0(r3)
  }
}
  402bcc:	9c 21 03 5c 	l.addi r1,r1,0x35c
  402bd0:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  402bd4:	84 41 ff d8 	l.lwz r2,0xffffffd8(r1)
  402bd8:	85 c1 ff dc 	l.lwz r14,0xffffffdc(r1)
  402bdc:	86 01 ff e0 	l.lwz r16,0xffffffe0(r1)
  402be0:	86 41 ff e4 	l.lwz r18,0xffffffe4(r1)
  402be4:	86 81 ff e8 	l.lwz r20,0xffffffe8(r1)
  402be8:	86 c1 ff ec 	l.lwz r22,0xffffffec(r1)
  402bec:	87 01 ff f0 	l.lwz r24,0xfffffff0(r1)
  402bf0:	87 41 ff f4 	l.lwz r26,0xfffffff4(r1)
  402bf4:	44 00 48 00 	l.jr r9
  402bf8:	87 81 ff f8 	l.lwz r28,0xfffffff8(r1)

00402bfc <SwapEndianL>:
	unsigned char c[4];
	c[0] = (unsigned char)(l & 0xff);
	c[1] = (unsigned char)((l >> 8) & 0xff);
	c[2] = (unsigned char)((l >> 16) & 0xff);
	c[3] = (unsigned char)((l >> 24) & 0xff);
	return((c[0]<<24)+(c[1]<<16)+(c[2]<<8)+c[3]);
  402bfc:	b8 83 00 18 	l.slli r4,r3,0x18
  402c00:	b9 63 00 58 	l.srli r11,r3,0x18
extern unsigned long GetTimer(unsigned long);
extern void ErrorMessage(const char *message, unsigned char code);


unsigned long SwapEndianL(unsigned long l)
{
  402c04:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
	unsigned char c[4];
	c[0] = (unsigned char)(l & 0xff);
	c[1] = (unsigned char)((l >> 8) & 0xff);
	c[2] = (unsigned char)((l >> 16) & 0xff);
	c[3] = (unsigned char)((l >> 24) & 0xff);
	return((c[0]<<24)+(c[1]<<16)+(c[2]<<8)+c[3]);
  402c08:	18 40 00 ff 	l.movhi r2,0xff
  402c0c:	e1 6b 20 00 	l.add r11,r11,r4
  402c10:	b8 83 00 08 	l.slli r4,r3,0x8
  402c14:	b8 63 00 48 	l.srli r3,r3,0x8
extern unsigned long GetTimer(unsigned long);
extern void ErrorMessage(const char *message, unsigned char code);


unsigned long SwapEndianL(unsigned long l)
{
  402c18:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
	unsigned char c[4];
	c[0] = (unsigned char)(l & 0xff);
	c[1] = (unsigned char)((l >> 8) & 0xff);
	c[2] = (unsigned char)((l >> 16) & 0xff);
	c[3] = (unsigned char)((l >> 24) & 0xff);
	return((c[0]<<24)+(c[1]<<16)+(c[2]<<8)+c[3]);
  402c1c:	e0 84 10 03 	l.and r4,r4,r2
  402c20:	a4 63 ff 00 	l.andi r3,r3,0xff00
  402c24:	e1 6b 20 00 	l.add r11,r11,r4

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L3);
}
  402c28:	9c 21 00 04 	l.addi r1,r1,0x4
  402c2c:	e1 6b 18 00 	l.add r11,r11,r3
  402c30:	44 00 48 00 	l.jr r9
  402c34:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

00402c38 <SwapPartitionBytes>:


void SwapPartitionBytes(int i)
{
  402c38:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L1);

	// We don't bother to byteswap the CHS geometry fields since we don't use them.
	partitions[i].startlba=SwapEndianL(partitions[i].startlba);
  402c3c:	b8 43 00 04 	l.slli r2,r3,0x4
  402c40:	18 60 00 41 	l.movhi r3,0x41
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L3);
}


void SwapPartitionBytes(int i)
{
  402c44:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L1);

	// We don't bother to byteswap the CHS geometry fields since we don't use them.
	partitions[i].startlba=SwapEndianL(partitions[i].startlba);
  402c48:	a8 63 a4 98 	l.ori r3,r3,0xa498
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L3);
}


void SwapPartitionBytes(int i)
{
  402c4c:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L1);

	// We don't bother to byteswap the CHS geometry fields since we don't use them.
	partitions[i].startlba=SwapEndianL(partitions[i].startlba);
  402c50:	e0 42 18 00 	l.add r2,r2,r3
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L3);
}


void SwapPartitionBytes(int i)
{
  402c54:	9c 21 ff f4 	l.addi r1,r1,0xfffffff4
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L1);

	// We don't bother to byteswap the CHS geometry fields since we don't use them.
	partitions[i].startlba=SwapEndianL(partitions[i].startlba);
  402c58:	9d c2 00 08 	l.addi r14,r2,0x8
	partitions[i].sectors=SwapEndianL(partitions[i].sectors);
  402c5c:	9c 42 00 0c 	l.addi r2,r2,0xc
void SwapPartitionBytes(int i)
{
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L1);

	// We don't bother to byteswap the CHS geometry fields since we don't use them.
	partitions[i].startlba=SwapEndianL(partitions[i].startlba);
  402c60:	07 ff ff e7 	l.jal 402bfc <SwapEndianL>
  402c64:	84 6e 00 00 	l.lwz r3,0x0(r14)
  402c68:	d4 0e 58 00 	l.sw 0x0(r14),r11
	partitions[i].sectors=SwapEndianL(partitions[i].sectors);
  402c6c:	07 ff ff e4 	l.jal 402bfc <SwapEndianL>
  402c70:	84 62 00 00 	l.lwz r3,0x0(r2)
  402c74:	d4 02 58 00 	l.sw 0x0(r2),r11

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L1);
}
  402c78:	9c 21 00 0c 	l.addi r1,r1,0xc
  402c7c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  402c80:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
  402c84:	44 00 48 00 	l.jr r9
  402c88:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

00402c8c <lfn_checksum>:
unsigned char lfn_checksum(unsigned char *pName)
{
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

    unsigned char i = 11;
    unsigned char checksum = 0;
  402c8c:	9d 60 00 00 	l.addi r11,r0,0x0

    while (i--)
  402c90:	00 00 00 08 	l.j 402cb0 <lfn_checksum+0x24>
  402c94:	9c 80 00 0b 	l.addi r4,r0,0xb
        checksum = ((checksum & 1) << 7) + (checksum >> 1) + *pName++;
  402c98:	8c c3 00 00 	l.lbz r6,0x0(r3)
  402c9c:	b9 6b 00 41 	l.srli r11,r11,0x1
  402ca0:	9c 63 00 01 	l.addi r3,r3,0x1
  402ca4:	e1 6b 30 00 	l.add r11,r11,r6
  402ca8:	e1 6b 28 00 	l.add r11,r11,r5
  402cac:	a5 6b 00 ff 	l.andi r11,r11,0xff
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

    unsigned char i = 11;
    unsigned char checksum = 0;

    while (i--)
  402cb0:	9c 84 ff ff 	l.addi r4,r4,0xffffffff
  402cb4:	a4 84 00 ff 	l.andi r4,r4,0xff
  402cb8:	bc 24 00 ff 	l.sfnei r4,0xff
  402cbc:	13 ff ff f7 	l.bf 402c98 <lfn_checksum+0xc>
  402cc0:	b8 ab 00 07 	l.slli r5,r11,0x7
        checksum = ((checksum & 1) << 7) + (checksum >> 1) + *pName++;

    return checksum;

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}
  402cc4:	44 00 48 00 	l.jr r9
  402cc8:	15 00 00 00 	l.nop 0x0

00402ccc <CompareDirEntries>:
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L3);
}


int CompareDirEntries(DIRENTRY *pDirEntry1, char *pLFN1, DIRENTRY *pDirEntry2, char *pLFN2)
{
  402ccc:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  402cd0:	d7 e1 17 dc 	l.sw 0xffffffdc(r1),r2
  402cd4:	d7 e1 77 e0 	l.sw 0xffffffe0(r1),r14
  402cd8:	d7 e1 87 e4 	l.sw 0xffffffe4(r1),r16
  402cdc:	d7 e1 97 e8 	l.sw 0xffffffe8(r1),r18
  402ce0:	d7 e1 a7 ec 	l.sw 0xffffffec(r1),r20
  402ce4:	d7 e1 b7 f0 	l.sw 0xfffffff0(r1),r22
  402ce8:	d7 e1 c7 f4 	l.sw 0xfffffff4(r1),r24
  402cec:	d7 e1 d7 f8 	l.sw 0xfffffff8(r1),r26
  402cf0:	9c 21 ff dc 	l.addi r1,r1,0xffffffdc

    const char *pStr1, *pStr2;
    int len;
    int rc;

    if ((pDirEntry1->Attributes & ATTR_DIRECTORY) && !(pDirEntry2->Attributes & ATTR_DIRECTORY)) // directories first
  402cf4:	8c 43 00 0b 	l.lbz r2,0xb(r3)
  402cf8:	a4 42 00 10 	l.andi r2,r2,0x10
  402cfc:	bc 02 00 00 	l.sfeqi r2,0x0
  402d00:	10 00 00 08 	l.bf 402d20 <CompareDirEntries+0x54>
  402d04:	8c 45 00 0b 	l.lbz r2,0xb(r5)
  402d08:	a4 42 00 10 	l.andi r2,r2,0x10
  402d0c:	bc 02 00 00 	l.sfeqi r2,0x0
  402d10:	0c 00 00 08 	l.bnf 402d30 <CompareDirEntries+0x64>
  402d14:	9d 60 ff ff 	l.addi r11,r0,0xffffffff
        }
    }
    return(rc);

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}
  402d18:	00 00 00 38 	l.j 402df8 <CompareDirEntries+0x12c>
  402d1c:	9c 21 00 24 	l.addi r1,r1,0x24
    int rc;

    if ((pDirEntry1->Attributes & ATTR_DIRECTORY) && !(pDirEntry2->Attributes & ATTR_DIRECTORY)) // directories first
       return -1;

    if (!(pDirEntry1->Attributes & ATTR_DIRECTORY) && (pDirEntry2->Attributes & ATTR_DIRECTORY)) // directories first
  402d20:	a4 42 00 10 	l.andi r2,r2,0x10
  402d24:	bc 22 00 00 	l.sfnei r2,0x0
  402d28:	10 00 00 33 	l.bf 402df4 <CompareDirEntries+0x128>
  402d2c:	9d 60 00 01 	l.addi r11,r0,0x1
       return 1;

    len = 260;
    if (*pLFN1)
  402d30:	92 44 00 00 	l.lbs r18,0x0(r4)
  402d34:	bc 32 00 00 	l.sfnei r18,0x0
  402d38:	10 00 00 04 	l.bf 402d48 <CompareDirEntries+0x7c>
  402d3c:	aa 83 00 00 	l.ori r20,r3,0x0
       pStr1 = pLFN1;
    else
    {
        pStr1 = (const char*)pDirEntry1->Name;
        len = 11;
  402d40:	00 00 00 04 	l.j 402d50 <CompareDirEntries+0x84>
  402d44:	9e 00 00 0b 	l.addi r16,r0,0xb

    if (!(pDirEntry1->Attributes & ATTR_DIRECTORY) && (pDirEntry2->Attributes & ATTR_DIRECTORY)) // directories first
       return 1;

    len = 260;
    if (*pLFN1)
  402d48:	aa 84 00 00 	l.ori r20,r4,0x0
       return -1;

    if (!(pDirEntry1->Attributes & ATTR_DIRECTORY) && (pDirEntry2->Attributes & ATTR_DIRECTORY)) // directories first
       return 1;

    len = 260;
  402d4c:	9e 00 01 04 	l.addi r16,r0,0x104
    {
        pStr1 = (const char*)pDirEntry1->Name;
        len = 11;
    }

    if (*pLFN2)
  402d50:	91 c6 00 00 	l.lbs r14,0x0(r6)
  402d54:	bc 2e 00 00 	l.sfnei r14,0x0
  402d58:	10 00 00 04 	l.bf 402d68 <CompareDirEntries+0x9c>
  402d5c:	aa c6 00 00 	l.ori r22,r6,0x0
       pStr2 = pLFN2;
    else
    {
        pStr2 = (const char*)pDirEntry2->Name;
  402d60:	aa c5 00 00 	l.ori r22,r5,0x0
        len = 11;
  402d64:	9e 00 00 0b 	l.addi r16,r0,0xb
    }

    rc = _strnicmp(pStr1, pStr2, len);
  402d68:	9c 40 00 00 	l.addi r2,r0,0x0

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L3);
}


int CompareDirEntries(DIRENTRY *pDirEntry1, char *pLFN1, DIRENTRY *pDirEntry2, char *pLFN2)
  402d6c:	e0 74 10 00 	l.add r3,r20,r2
    char c1, c2;
    int v;

    do
    {
        c1 = *s1++;
  402d70:	93 03 00 00 	l.lbs r24,0x0(r3)
        c2 = *s2++;
        v = (unsigned int)tolower(c1) - (unsigned int)tolower(c2);
  402d74:	07 ff f5 4f 	l.jal 4002b0 <tolower>
  402d78:	a8 78 00 00 	l.ori r3,r24,0x0

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L3);
}


int CompareDirEntries(DIRENTRY *pDirEntry1, char *pLFN1, DIRENTRY *pDirEntry2, char *pLFN2)
  402d7c:	e0 76 10 00 	l.add r3,r22,r2

    do
    {
        c1 = *s1++;
        c2 = *s2++;
        v = (unsigned int)tolower(c1) - (unsigned int)tolower(c2);
  402d80:	ab 4b 00 00 	l.ori r26,r11,0x0
  402d84:	07 ff f5 4b 	l.jal 4002b0 <tolower>
  402d88:	90 63 00 00 	l.lbs r3,0x0(r3)
  402d8c:	e1 7a 58 02 	l.sub r11,r26,r11
    }
    while (v == 0 && c1 != '\0' && --n > 0);
  402d90:	e0 60 58 02 	l.sub r3,r0,r11
  402d94:	e0 63 58 04 	l.or r3,r3,r11
  402d98:	bd 83 00 00 	l.sfltsi r3,0x0
  402d9c:	10 00 00 0a 	l.bf 402dc4 <CompareDirEntries+0xf8>
  402da0:	a7 18 00 ff 	l.andi r24,r24,0xff
  402da4:	bc 18 00 00 	l.sfeqi r24,0x0
  402da8:	10 00 00 07 	l.bf 402dc4 <CompareDirEntries+0xf8>
  402dac:	9c 42 00 01 	l.addi r2,r2,0x1
  402db0:	e4 30 10 00 	l.sfne r16,r2
  402db4:	13 ff ff ef 	l.bf 402d70 <CompareDirEntries+0xa4>
  402db8:	e0 74 10 00 	l.add r3,r20,r2

    rc = _strnicmp(pStr1, pStr2, len);

    if (rc == 0) // it might happen that both strings are equal when one is a long name and other not
    {
        if (*pLFN1)
  402dbc:	00 00 00 05 	l.j 402dd0 <CompareDirEntries+0x104>
  402dc0:	bc 12 00 00 	l.sfeqi r18,0x0
        len = 11;
    }

    rc = _strnicmp(pStr1, pStr2, len);

    if (rc == 0) // it might happen that both strings are equal when one is a long name and other not
  402dc4:	bc 2b 00 00 	l.sfnei r11,0x0
  402dc8:	10 00 00 0b 	l.bf 402df4 <CompareDirEntries+0x128>
  402dcc:	bc 12 00 00 	l.sfeqi r18,0x0
    {
        if (*pLFN1)
  402dd0:	10 00 00 06 	l.bf 402de8 <CompareDirEntries+0x11c>
  402dd4:	bc 2e 00 00 	l.sfnei r14,0x0
    const char *pStr1, *pStr2;
    int len;
    int rc;

    if ((pDirEntry1->Attributes & ATTR_DIRECTORY) && !(pDirEntry2->Attributes & ATTR_DIRECTORY)) // directories first
       return -1;
  402dd8:	a5 6e 00 ff 	l.andi r11,r14,0xff
  402ddc:	9d 6b ff ff 	l.addi r11,r11,0xffffffff
  402de0:	00 00 00 05 	l.j 402df4 <CompareDirEntries+0x128>
  402de4:	b9 6b 00 5f 	l.srli r11,r11,0x1f
            if (!*pLFN2) // first string long, second short
                rc = 1;
        }
        else
        {
            if (*pLFN2) // first string short, second long
  402de8:	10 00 00 03 	l.bf 402df4 <CompareDirEntries+0x128>
  402dec:	9d 60 ff ff 	l.addi r11,r0,0xffffffff
  402df0:	a9 6e 00 00 	l.ori r11,r14,0x0
        }
    }
    return(rc);

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}
  402df4:	9c 21 00 24 	l.addi r1,r1,0x24
  402df8:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  402dfc:	84 41 ff dc 	l.lwz r2,0xffffffdc(r1)
  402e00:	85 c1 ff e0 	l.lwz r14,0xffffffe0(r1)
  402e04:	86 01 ff e4 	l.lwz r16,0xffffffe4(r1)
  402e08:	86 41 ff e8 	l.lwz r18,0xffffffe8(r1)
  402e0c:	86 81 ff ec 	l.lwz r20,0xffffffec(r1)
  402e10:	86 c1 ff f0 	l.lwz r22,0xfffffff0(r1)
  402e14:	87 01 ff f4 	l.lwz r24,0xfffffff4(r1)
  402e18:	44 00 48 00 	l.jr r9
  402e1c:	87 41 ff f8 	l.lwz r26,0xfffffff8(r1)

00402e20 <ChangeDirectory>:

void ChangeDirectory(unsigned long iStartCluster)
{
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L1);

    iPreviousDirectory = iCurrentDirectory;
  402e20:	18 80 00 41 	l.movhi r4,0x41
  402e24:	18 a0 00 41 	l.movhi r5,0x41
  402e28:	a8 84 a3 54 	l.ori r4,r4,0xa354
  402e2c:	a8 a5 a3 58 	l.ori r5,r5,0xa358
  402e30:	84 c4 00 00 	l.lwz r6,0x0(r4)
    iCurrentDirectory = iStartCluster;
  402e34:	d4 04 18 00 	l.sw 0x0(r4),r3

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L1);
}
  402e38:	44 00 48 00 	l.jr r9
  402e3c:	d4 05 30 00 	l.sw 0x0(r5),r6

00402e40 <GetFPGAStatus>:
{
  DEBUG_FUNC_IN(DEBUG_F_FPGA | DEBUG_L2);

    unsigned char status;

    EnableFpga();
  402e40:	18 60 00 80 	l.movhi r3,0x80
  402e44:	9c a0 00 22 	l.addi r5,r0,0x22
  402e48:	a8 83 00 20 	l.ori r4,r3,0x20
  DEBUG_FUNC_OUT(DEBUG_F_FPGA | DEBUG_L0);
}


unsigned char GetFPGAStatus(void)
{
  402e4c:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  DEBUG_FUNC_IN(DEBUG_F_FPGA | DEBUG_L2);

    unsigned char status;

    EnableFpga();
    status = SPI(0);
  402e50:	a8 63 00 24 	l.ori r3,r3,0x24
  402e54:	9c 40 00 00 	l.addi r2,r0,0x0
{
  DEBUG_FUNC_IN(DEBUG_F_FPGA | DEBUG_L2);

    unsigned char status;

    EnableFpga();
  402e58:	d4 04 28 00 	l.sw 0x0(r4),r5
    status = SPI(0);
  402e5c:	d4 03 10 00 	l.sw 0x0(r3),r2
  DEBUG_FUNC_OUT(DEBUG_F_FPGA | DEBUG_L0);
}


unsigned char GetFPGAStatus(void)
{
  402e60:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  DEBUG_FUNC_IN(DEBUG_F_FPGA | DEBUG_L2);

    unsigned char status;

    EnableFpga();
    status = SPI(0);
  402e64:	85 63 00 00 	l.lwz r11,0x0(r3)
    SPI(0);
  402e68:	d4 03 10 00 	l.sw 0x0(r3),r2
    DisableFpga();

    return status;

  DEBUG_FUNC_OUT(DEBUG_F_FPGA | DEBUG_L2);
}
  402e6c:	a5 6b 00 ff 	l.andi r11,r11,0xff

    unsigned char status;

    EnableFpga();
    status = SPI(0);
    SPI(0);
  402e70:	84 a3 00 00 	l.lwz r5,0x0(r3)
    SPI(0);
  402e74:	d4 03 10 00 	l.sw 0x0(r3),r2
  402e78:	84 a3 00 00 	l.lwz r5,0x0(r3)
    SPI(0);
  402e7c:	d4 03 10 00 	l.sw 0x0(r3),r2
  402e80:	84 a3 00 00 	l.lwz r5,0x0(r3)
    SPI(0);
  402e84:	d4 03 10 00 	l.sw 0x0(r3),r2
  402e88:	84 a3 00 00 	l.lwz r5,0x0(r3)
    SPI(0);
  402e8c:	d4 03 10 00 	l.sw 0x0(r3),r2
  402e90:	84 63 00 00 	l.lwz r3,0x0(r3)
    DisableFpga();
  402e94:	9c 60 00 20 	l.addi r3,r0,0x20
  402e98:	d4 04 18 00 	l.sw 0x0(r4),r3

    return status;

  DEBUG_FUNC_OUT(DEBUG_F_FPGA | DEBUG_L2);
}
  402e9c:	9c 21 00 04 	l.addi r1,r1,0x4
  402ea0:	44 00 48 00 	l.jr r9
  402ea4:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

00402ea8 <WriteTaskFile>:

void WriteTaskFile(unsigned char error, unsigned char sector_count, unsigned char sector_number, unsigned char cylinder_low, unsigned char cylinder_high, unsigned char drive_head)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    EnableFpga();
  402ea8:	19 60 00 80 	l.movhi r11,0x80
  402eac:	9d a0 00 22 	l.addi r13,r0,0x22
  402eb0:	a9 8b 00 20 	l.ori r12,r11,0x20
  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


void WriteTaskFile(unsigned char error, unsigned char sector_count, unsigned char sector_number, unsigned char cylinder_low, unsigned char cylinder_high, unsigned char drive_head)
{
  402eb4:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    EnableFpga();

    SPI(CMD_IDE_REGS_WR); // write task file registers command
  402eb8:	a9 6b 00 24 	l.ori r11,r11,0x24

void WriteTaskFile(unsigned char error, unsigned char sector_count, unsigned char sector_number, unsigned char cylinder_low, unsigned char cylinder_high, unsigned char drive_head)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    EnableFpga();
  402ebc:	d4 0c 68 00 	l.sw 0x0(r12),r13

    SPI(CMD_IDE_REGS_WR); // write task file registers command
  402ec0:	9d a0 00 90 	l.addi r13,r0,0x90
    SPI(0x00);
  402ec4:	9c 40 00 00 	l.addi r2,r0,0x0
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    EnableFpga();

    SPI(CMD_IDE_REGS_WR); // write task file registers command
  402ec8:	d4 0b 68 00 	l.sw 0x0(r11),r13
  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


void WriteTaskFile(unsigned char error, unsigned char sector_count, unsigned char sector_number, unsigned char cylinder_low, unsigned char cylinder_high, unsigned char drive_head)
{
  402ecc:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    EnableFpga();

    SPI(CMD_IDE_REGS_WR); // write task file registers command
  402ed0:	85 ab 00 00 	l.lwz r13,0x0(r11)
    SPI(0x00);
  402ed4:	d4 0b 10 00 	l.sw 0x0(r11),r2
  402ed8:	85 ab 00 00 	l.lwz r13,0x0(r11)
    SPI(0x00); // dummy
  402edc:	d4 0b 10 00 	l.sw 0x0(r11),r2
  402ee0:	85 ab 00 00 	l.lwz r13,0x0(r11)
    SPI(0x00);
  402ee4:	d4 0b 10 00 	l.sw 0x0(r11),r2
  402ee8:	85 ab 00 00 	l.lwz r13,0x0(r11)
    SPI(0x00); // dummy
  402eec:	d4 0b 10 00 	l.sw 0x0(r11),r2
  402ef0:	85 ab 00 00 	l.lwz r13,0x0(r11)
    SPI(0x00);
  402ef4:	d4 0b 10 00 	l.sw 0x0(r11),r2
  402ef8:	85 ab 00 00 	l.lwz r13,0x0(r11)



    SPI(0x00); // dummy
  402efc:	d4 0b 10 00 	l.sw 0x0(r11),r2
  402f00:	85 ab 00 00 	l.lwz r13,0x0(r11)

    SPI(0x00);
  402f04:	d4 0b 10 00 	l.sw 0x0(r11),r2
  402f08:	85 ab 00 00 	l.lwz r13,0x0(r11)
    SPI(0x00);
  402f0c:	d4 0b 10 00 	l.sw 0x0(r11),r2
  402f10:	85 ab 00 00 	l.lwz r13,0x0(r11)
    SPI(error); // error
  402f14:	d4 0b 18 00 	l.sw 0x0(r11),r3
  402f18:	84 6b 00 00 	l.lwz r3,0x0(r11)
    SPI(0x00);
  402f1c:	d4 0b 10 00 	l.sw 0x0(r11),r2
  402f20:	84 6b 00 00 	l.lwz r3,0x0(r11)
    SPI(sector_count); // sector count
  402f24:	d4 0b 20 00 	l.sw 0x0(r11),r4
  402f28:	84 6b 00 00 	l.lwz r3,0x0(r11)
    SPI(0x00);
  402f2c:	d4 0b 10 00 	l.sw 0x0(r11),r2
  402f30:	84 6b 00 00 	l.lwz r3,0x0(r11)
    SPI(sector_number); //sector number
  402f34:	d4 0b 28 00 	l.sw 0x0(r11),r5
  402f38:	84 6b 00 00 	l.lwz r3,0x0(r11)
    SPI(0x00);
  402f3c:	d4 0b 10 00 	l.sw 0x0(r11),r2
  402f40:	84 6b 00 00 	l.lwz r3,0x0(r11)
    SPI(cylinder_low); // cylinder low
  402f44:	d4 0b 30 00 	l.sw 0x0(r11),r6
  402f48:	84 6b 00 00 	l.lwz r3,0x0(r11)
    SPI(0x00);
  402f4c:	d4 0b 10 00 	l.sw 0x0(r11),r2
  402f50:	84 6b 00 00 	l.lwz r3,0x0(r11)
    SPI(cylinder_high); // cylinder high
  402f54:	d4 0b 38 00 	l.sw 0x0(r11),r7
  402f58:	84 6b 00 00 	l.lwz r3,0x0(r11)
    SPI(0x00);
  402f5c:	d4 0b 10 00 	l.sw 0x0(r11),r2
  402f60:	84 6b 00 00 	l.lwz r3,0x0(r11)
    SPI(drive_head); // drive/head
  402f64:	d4 0b 40 00 	l.sw 0x0(r11),r8
  402f68:	84 6b 00 00 	l.lwz r3,0x0(r11)

    DisableFpga();
  402f6c:	9c 60 00 20 	l.addi r3,r0,0x20
  402f70:	d4 0c 18 00 	l.sw 0x0(r12),r3

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}
  402f74:	9c 21 00 04 	l.addi r1,r1,0x4
  402f78:	44 00 48 00 	l.jr r9
  402f7c:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

00402f80 <WriteStatus>:

void WriteStatus(unsigned char status)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    EnableFpga();
  402f80:	18 80 00 80 	l.movhi r4,0x80
  402f84:	9c c0 00 22 	l.addi r6,r0,0x22
  402f88:	a8 a4 00 20 	l.ori r5,r4,0x20
  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


void WriteStatus(unsigned char status)
{
  402f8c:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    EnableFpga();
  402f90:	d4 05 30 00 	l.sw 0x0(r5),r6

    SPI(CMD_IDE_STATUS_WR);
  402f94:	a8 84 00 24 	l.ori r4,r4,0x24
  402f98:	9c c0 00 f0 	l.addi r6,r0,0xf0
    SPI(status);
    SPI(0x00);
  402f9c:	9c 40 00 00 	l.addi r2,r0,0x0
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    EnableFpga();

    SPI(CMD_IDE_STATUS_WR);
  402fa0:	d4 04 30 00 	l.sw 0x0(r4),r6
  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


void WriteStatus(unsigned char status)
{
  402fa4:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    EnableFpga();

    SPI(CMD_IDE_STATUS_WR);
  402fa8:	84 c4 00 00 	l.lwz r6,0x0(r4)
    SPI(status);
  402fac:	d4 04 18 00 	l.sw 0x0(r4),r3
  402fb0:	84 64 00 00 	l.lwz r3,0x0(r4)
    SPI(0x00);
  402fb4:	d4 04 10 00 	l.sw 0x0(r4),r2
  402fb8:	84 64 00 00 	l.lwz r3,0x0(r4)
    SPI(0x00);
  402fbc:	d4 04 10 00 	l.sw 0x0(r4),r2
  402fc0:	84 64 00 00 	l.lwz r3,0x0(r4)
    SPI(0x00);
  402fc4:	d4 04 10 00 	l.sw 0x0(r4),r2
  402fc8:	84 64 00 00 	l.lwz r3,0x0(r4)
    SPI(0x00);
  402fcc:	d4 04 10 00 	l.sw 0x0(r4),r2
  402fd0:	84 64 00 00 	l.lwz r3,0x0(r4)

    DisableFpga();
  402fd4:	9c 60 00 20 	l.addi r3,r0,0x20
  402fd8:	d4 05 18 00 	l.sw 0x0(r5),r3

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}
  402fdc:	9c 21 00 04 	l.addi r1,r1,0x4
  402fe0:	44 00 48 00 	l.jr r9
  402fe4:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

00402fe8 <BuildHardfileIndex>:
  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L1);
}


void BuildHardfileIndex(hdfTYPE *pHDF)
{
  402fe8:	d7 e1 17 e8 	l.sw 0xffffffe8(r1),r2
  402fec:	d7 e1 77 ec 	l.sw 0xffffffec(r1),r14
  402ff0:	d7 e1 97 f4 	l.sw 0xfffffff4(r1),r18
  402ff4:	d7 e1 a7 f8 	l.sw 0xfffffff8(r1),r20
  402ff8:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  402ffc:	d7 e1 87 f0 	l.sw 0xfffffff0(r1),r16
  403000:	a8 43 00 00 	l.ori r2,r3,0x0
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

    // builds index to speed up hard file seek

    fileTYPE *file = &pHDF->file;
  403004:	9e 83 00 04 	l.addi r20,r3,0x4
    unsigned long *index = pHDF->index;
  403008:	9e 43 01 40 	l.addi r18,r3,0x140
    unsigned long i;
    unsigned long j;

    pHDF->index_size = 16; // indexing size
  40300c:	9c 60 00 10 	l.addi r3,r0,0x10
  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L1);
}


void BuildHardfileIndex(hdfTYPE *pHDF)
{
  403010:	9c 21 ff e8 	l.addi r1,r1,0xffffffe8
    fileTYPE *file = &pHDF->file;
    unsigned long *index = pHDF->index;
    unsigned long i;
    unsigned long j;

    pHDF->index_size = 16; // indexing size
  403014:	d4 42 19 40 	l.sw 0x1140(r2),r3
    j = 1 << pHDF->index_size;
    i = pHDF->file.size >> 10; // divided by index table size (1024)
  403018:	84 62 00 1c 	l.lwz r3,0x1c(r2)
    unsigned long *index = pHDF->index;
    unsigned long i;
    unsigned long j;

    pHDF->index_size = 16; // indexing size
    j = 1 << pHDF->index_size;
  40301c:	19 c0 00 01 	l.movhi r14,0x1
    i = pHDF->file.size >> 10; // divided by index table size (1024)
    while (j < i) // find greater or equal power of two
  403020:	00 00 00 06 	l.j 403038 <BuildHardfileIndex+0x50>
  403024:	b8 63 00 4a 	l.srli r3,r3,0xa
    {
        j <<= 1;
        pHDF->index_size++;
  403028:	84 82 11 40 	l.lwz r4,0x1140(r2)
    pHDF->index_size = 16; // indexing size
    j = 1 << pHDF->index_size;
    i = pHDF->file.size >> 10; // divided by index table size (1024)
    while (j < i) // find greater or equal power of two
    {
        j <<= 1;
  40302c:	e1 ce 70 00 	l.add r14,r14,r14
        pHDF->index_size++;
  403030:	9c 84 00 01 	l.addi r4,r4,0x1
  403034:	d4 42 21 40 	l.sw 0x1140(r2),r4
    unsigned long j;

    pHDF->index_size = 16; // indexing size
    j = 1 << pHDF->index_size;
    i = pHDF->file.size >> 10; // divided by index table size (1024)
    while (j < i) // find greater or equal power of two
  403038:	e4 8e 18 00 	l.sfltu r14,r3
  40303c:	13 ff ff fb 	l.bf 403028 <BuildHardfileIndex+0x40>
  403040:	9e 00 00 00 	l.addi r16,r0,0x0
    {
        j <<= 1;
        pHDF->index_size++;
    }

    for (i = 0; i < file->size; i += j)
  403044:	00 00 00 0a 	l.j 40306c <BuildHardfileIndex+0x84>
  403048:	84 62 00 1c 	l.lwz r3,0x1c(r2)
    {
        FileSeek(file, i >> 9, SEEK_SET); // FileSeek seeks in 512-byte sectors
  40304c:	a8 74 00 00 	l.ori r3,r20,0x0
  403050:	9c a0 00 00 	l.addi r5,r0,0x0
  403054:	04 00 08 ba 	l.jal 40533c <FileSeek>
  403058:	e2 10 70 00 	l.add r16,r16,r14
        *index++ = file->cluster;
  40305c:	84 62 00 20 	l.lwz r3,0x20(r2)
  403060:	d4 12 18 00 	l.sw 0x0(r18),r3
  403064:	9e 52 00 04 	l.addi r18,r18,0x4
    {
        j <<= 1;
        pHDF->index_size++;
    }

    for (i = 0; i < file->size; i += j)
  403068:	84 62 00 1c 	l.lwz r3,0x1c(r2)
  40306c:	e4 90 18 00 	l.sfltu r16,r3
  403070:	13 ff ff f7 	l.bf 40304c <BuildHardfileIndex+0x64>
  403074:	b8 90 00 49 	l.srli r4,r16,0x9
        FileSeek(file, i >> 9, SEEK_SET); // FileSeek seeks in 512-byte sectors
        *index++ = file->cluster;
    }

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L1);
}
  403078:	9c 21 00 18 	l.addi r1,r1,0x18
  40307c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  403080:	84 41 ff e8 	l.lwz r2,0xffffffe8(r1)
  403084:	85 c1 ff ec 	l.lwz r14,0xffffffec(r1)
  403088:	86 01 ff f0 	l.lwz r16,0xfffffff0(r1)
  40308c:	86 41 ff f4 	l.lwz r18,0xfffffff4(r1)
  403090:	44 00 48 00 	l.jr r9
  403094:	86 81 ff f8 	l.lwz r20,0xfffffff8(r1)

00403098 <HardFileSeek>:


unsigned char HardFileSeek(hdfTYPE *pHDF, unsigned long lba)
{
  403098:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    if ((pHDF->file.sector ^ lba) & cluster_mask)
  40309c:	18 e0 00 41 	l.movhi r7,0x41
  4030a0:	84 c3 00 18 	l.lwz r6,0x18(r3)
  4030a4:	a8 e7 a8 e0 	l.ori r7,r7,0xa8e0
  4030a8:	e0 a4 30 05 	l.xor r5,r4,r6
  4030ac:	84 e7 00 00 	l.lwz r7,0x0(r7)
  4030b0:	e1 05 38 03 	l.and r8,r5,r7
  4030b4:	bc 08 00 00 	l.sfeqi r8,0x0
  4030b8:	10 00 00 1c 	l.bf 403128 <HardFileSeek+0x90>
  4030bc:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
    { // different clusters
        if ((pHDF->file.sector > lba) || ((pHDF->file.sector ^ lba) & (cluster_mask << (fat32 ? 7 : 8)))) // 7: 128 FAT32 links per sector, 8: 256 FAT16 links per sector
  4030c0:	e4 46 20 00 	l.sfgtu r6,r4
  4030c4:	10 00 00 0d 	l.bf 4030f8 <HardFileSeek+0x60>
  4030c8:	18 c0 00 41 	l.movhi r6,0x41
  4030cc:	a8 c6 a3 51 	l.ori r6,r6,0xa351
  4030d0:	8d 06 00 00 	l.lbz r8,0x0(r6)
  4030d4:	bc 08 00 00 	l.sfeqi r8,0x0
  4030d8:	10 00 00 03 	l.bf 4030e4 <HardFileSeek+0x4c>
  4030dc:	9c c0 00 08 	l.addi r6,r0,0x8
  4030e0:	9c c0 00 07 	l.addi r6,r0,0x7
  4030e4:	e0 c7 30 08 	l.sll r6,r7,r6
  4030e8:	e0 a6 28 03 	l.and r5,r6,r5
  4030ec:	bc 05 00 00 	l.sfeqi r5,0x0
  4030f0:	10 00 00 0e 	l.bf 403128 <HardFileSeek+0x90>
  4030f4:	15 00 00 00 	l.nop 0x0
        { // requested cluster lies before current pointer position or in different FAT sector
            pHDF->file.cluster = pHDF->index[lba >> (pHDF->index_size - 9)];// minus 9 because lba is in 512-byte sectors
  4030f8:	84 a3 11 40 	l.lwz r5,0x1140(r3)
  4030fc:	9c a5 ff f7 	l.addi r5,r5,0xfffffff7
  403100:	e0 c4 28 48 	l.srl r6,r4,r5
  403104:	9c c6 00 50 	l.addi r6,r6,0x50
  403108:	b8 c6 00 02 	l.slli r6,r6,0x2
  40310c:	e0 c3 30 00 	l.add r6,r3,r6
  403110:	84 c6 00 00 	l.lwz r6,0x0(r6)
  403114:	d4 03 30 20 	l.sw 0x20(r3),r6
            pHDF->file.sector = lba & (-1 << (pHDF->index_size - 9));
  403118:	9c c0 ff ff 	l.addi r6,r0,0xffffffff
  40311c:	e0 a6 28 08 	l.sll r5,r6,r5
  403120:	e0 a5 20 03 	l.and r5,r5,r4
  403124:	d4 03 28 18 	l.sw 0x18(r3),r5
        }
    }
    return FileSeek(&pHDF->file, lba, SEEK_SET);

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}
  403128:	9c 21 00 04 	l.addi r1,r1,0x4
        { // requested cluster lies before current pointer position or in different FAT sector
            pHDF->file.cluster = pHDF->index[lba >> (pHDF->index_size - 9)];// minus 9 because lba is in 512-byte sectors
            pHDF->file.sector = lba & (-1 << (pHDF->index_size - 9));
        }
    }
    return FileSeek(&pHDF->file, lba, SEEK_SET);
  40312c:	9c 63 00 04 	l.addi r3,r3,0x4

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}
  403130:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
        { // requested cluster lies before current pointer position or in different FAT sector
            pHDF->file.cluster = pHDF->index[lba >> (pHDF->index_size - 9)];// minus 9 because lba is in 512-byte sectors
            pHDF->file.sector = lba & (-1 << (pHDF->index_size - 9));
        }
    }
    return FileSeek(&pHDF->file, lba, SEEK_SET);
  403134:	00 00 08 82 	l.j 40533c <FileSeek>
  403138:	9c a0 00 00 	l.addi r5,r0,0x0

0040313c <DebugMessage>:
  DEBUG_FUNC_OUT(DEBUG_F_MENU | DEBUG_L1);
}


void DebugMessage(char *message)
{
  40313c:	d7 e1 17 f0 	l.sw 0xfffffff0(r1),r2
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L1);

	strncpy(&debuglines[debugptr*32],message,31);
  403140:	18 40 00 42 	l.movhi r2,0x42
  DEBUG_FUNC_OUT(DEBUG_F_MENU | DEBUG_L1);
}


void DebugMessage(char *message)
{
  403144:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  403148:	d7 e1 87 f8 	l.sw 0xfffffff8(r1),r16
  40314c:	d7 e1 77 f4 	l.sw 0xfffffff4(r1),r14
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L1);

	strncpy(&debuglines[debugptr*32],message,31);
  403150:	a8 42 0a 64 	l.ori r2,r2,0xa64
  DEBUG_FUNC_OUT(DEBUG_F_MENU | DEBUG_L1);
}


void DebugMessage(char *message)
{
  403154:	a8 83 00 00 	l.ori r4,r3,0x0
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L1);

	strncpy(&debuglines[debugptr*32],message,31);
  403158:	91 c2 00 00 	l.lbs r14,0x0(r2)
  40315c:	18 60 00 42 	l.movhi r3,0x42
  403160:	ba 0e 00 05 	l.slli r16,r14,0x5
  403164:	a8 63 0a 68 	l.ori r3,r3,0xa68
  DEBUG_FUNC_OUT(DEBUG_F_MENU | DEBUG_L1);
}


void DebugMessage(char *message)
{
  403168:	9c 21 ff f0 	l.addi r1,r1,0xfffffff0
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L1);

	strncpy(&debuglines[debugptr*32],message,31);
  40316c:	e2 10 18 00 	l.add r16,r16,r3
  403170:	9c a0 00 1f 	l.addi r5,r0,0x1f
  403174:	a8 70 00 00 	l.ori r3,r16,0x0
  403178:	07 ff f4 7d 	l.jal 40036c <strncpy>
  40317c:	9d ce 00 01 	l.addi r14,r14,0x1
	debuglines[debugptr*32+31]=0;
	debugptr=(debugptr+1)&7;
  403180:	a5 ce 00 07 	l.andi r14,r14,0x7
void DebugMessage(char *message)
{
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L1);

	strncpy(&debuglines[debugptr*32],message,31);
	debuglines[debugptr*32+31]=0;
  403184:	9c 60 00 00 	l.addi r3,r0,0x0
	debugptr=(debugptr+1)&7;
  403188:	d8 02 70 00 	l.sb 0x0(r2),r14
void DebugMessage(char *message)
{
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L1);

	strncpy(&debuglines[debugptr*32],message,31);
	debuglines[debugptr*32+31]=0;
  40318c:	d8 10 18 1f 	l.sb 0x1f(r16),r3
	debugptr=(debugptr+1)&7;

  DEBUG_FUNC_OUT(DEBUG_F_MENU | DEBUG_L1);
}
  403190:	9c 21 00 10 	l.addi r1,r1,0x10
  403194:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  403198:	84 41 ff f0 	l.lwz r2,0xfffffff0(r1)
  40319c:	85 c1 ff f4 	l.lwz r14,0xfffffff4(r1)
  4031a0:	44 00 48 00 	l.jr r9
  4031a4:	86 01 ff f8 	l.lwz r16,0xfffffff8(r1)

004031a8 <RDBChecksum.33881>:
//    }
//}


static void RDBChecksum(unsigned long *p)
{
  4031a8:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
  4031ac:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  4031b0:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
  4031b4:	a8 43 00 00 	l.ori r2,r3,0x0
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

	unsigned long count=p[1];
  4031b8:	85 c3 00 04 	l.lwz r14,0x4(r3)
	unsigned long c2;
	long result=0;
	DebugMessage("Generating checksum");
  4031bc:	18 60 00 41 	l.movhi r3,0x41
//    }
//}


static void RDBChecksum(unsigned long *p)
{
  4031c0:	9c 21 ff f4 	l.addi r1,r1,0xfffffff4
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

	unsigned long count=p[1];
	unsigned long c2;
	long result=0;
	DebugMessage("Generating checksum");
  4031c4:	07 ff ff de 	l.jal 40313c <DebugMessage>
  4031c8:	a8 63 77 73 	l.ori r3,r3,0x7773
	p[2]=0;
  4031cc:	9c 60 00 00 	l.addi r3,r0,0x0
  4031d0:	9c c2 00 08 	l.addi r6,r2,0x8
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

	unsigned long count=p[1];
	unsigned long c2;
	long result=0;
  4031d4:	9c 80 00 00 	l.addi r4,r0,0x0
	DebugMessage("Generating checksum");
	p[2]=0;
  4031d8:	d4 06 18 00 	l.sw 0x0(r6),r3
	for(c2=0;c2<count;++c2)
  4031dc:	a8 a4 00 00 	l.ori r5,r4,0x0
  4031e0:	00 00 00 06 	l.j 4031f8 <RDBChecksum.33881+0x50>
  4031e4:	a8 62 00 00 	l.ori r3,r2,0x0
		result+=p[c2];
  4031e8:	84 43 00 00 	l.lwz r2,0x0(r3)
	unsigned long count=p[1];
	unsigned long c2;
	long result=0;
	DebugMessage("Generating checksum");
	p[2]=0;
	for(c2=0;c2<count;++c2)
  4031ec:	9c a5 00 01 	l.addi r5,r5,0x1
		result+=p[c2];
  4031f0:	e0 84 10 00 	l.add r4,r4,r2
	unsigned long count=p[1];
	unsigned long c2;
	long result=0;
	DebugMessage("Generating checksum");
	p[2]=0;
	for(c2=0;c2<count;++c2)
  4031f4:	9c 63 00 04 	l.addi r3,r3,0x4
  4031f8:	e4 85 70 00 	l.sfltu r5,r14
  4031fc:	13 ff ff fb 	l.bf 4031e8 <RDBChecksum.33881+0x40>
  403200:	15 00 00 00 	l.nop 0x0
		result+=p[c2];
	p[2]=(unsigned long)-result;
  403204:	e0 80 20 02 	l.sub r4,r0,r4
  403208:	d4 06 20 00 	l.sw 0x0(r6),r4

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L1);
}
  40320c:	9c 21 00 0c 	l.addi r1,r1,0xc
  403210:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  403214:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
  403218:	44 00 48 00 	l.jr r9
  40321c:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

00403220 <MMC_CRC>:
void MMC_CRC(unsigned char c)
{
  DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L2);
    unsigned char i;

    for (i = 0; i < 8; i++)
  403220:	18 80 00 41 	l.movhi r4,0x41
  403224:	9c a0 00 00 	l.addi r5,r0,0x0
  403228:	a8 84 fd 5c 	l.ori r4,r4,0xfd5c
  40322c:	8c 84 00 00 	l.lbz r4,0x0(r4)
    {
        crc <<= 1;
        if (c & 0x80)
  403230:	b8 c3 00 18 	l.slli r6,r3,0x18
  DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L2);
    unsigned char i;

    for (i = 0; i < 8; i++)
    {
        crc <<= 1;
  403234:	e0 84 20 00 	l.add r4,r4,r4
        if (c & 0x80)
  403238:	bd 66 00 00 	l.sfgesi r6,0x0
  40323c:	10 00 00 03 	l.bf 403248 <MMC_CRC+0x28>
  403240:	a4 84 00 ff 	l.andi r4,r4,0xff
            crc ^= 0x09;
  403244:	ac 84 00 09 	l.xori r4,r4,0x9
        if (crc & 0x80)
  403248:	b8 c4 00 18 	l.slli r6,r4,0x18
  40324c:	bd 66 00 00 	l.sfgesi r6,0x0
  403250:	10 00 00 03 	l.bf 40325c <MMC_CRC+0x3c>
  403254:	15 00 00 00 	l.nop 0x0
            crc ^= 0x09;
  403258:	ac 84 00 09 	l.xori r4,r4,0x9
void MMC_CRC(unsigned char c)
{
  DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L2);
    unsigned char i;

    for (i = 0; i < 8; i++)
  40325c:	9c a5 00 01 	l.addi r5,r5,0x1
  403260:	a4 a5 00 ff 	l.andi r5,r5,0xff
  403264:	bc 05 00 08 	l.sfeqi r5,0x8
  403268:	10 00 00 04 	l.bf 403278 <MMC_CRC+0x58>
  40326c:	e0 63 18 00 	l.add r3,r3,r3
        crc <<= 1;
        if (c & 0x80)
            crc ^= 0x09;
        if (crc & 0x80)
            crc ^= 0x09;
        c <<= 1;
  403270:	03 ff ff f0 	l.j 403230 <MMC_CRC+0x10>
  403274:	a4 63 00 ff 	l.andi r3,r3,0xff
  403278:	18 60 00 41 	l.movhi r3,0x41
  40327c:	a8 63 fd 5c 	l.ori r3,r3,0xfd5c
    }
  DEBUG_FUNC_OUT(DEBUG_F_MMC | DEBUG_L2);
}
  403280:	44 00 48 00 	l.jr r9
  403284:	d8 03 20 00 	l.sb 0x0(r3),r4

00403288 <MMC_Command>:
}


// MMC command
unsigned char MMC_Command(unsigned char cmd, unsigned long arg)
{
  403288:	d7 e1 87 f4 	l.sw 0xfffffff4(r1),r16
  DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L2);

    unsigned char c;

    crc = 0;
  40328c:	1a 00 00 41 	l.movhi r16,0x41
}


// MMC command
unsigned char MMC_Command(unsigned char cmd, unsigned long arg)
{
  403290:	d7 e1 17 ec 	l.sw 0xffffffec(r1),r2
  DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L2);

    unsigned char c;

    crc = 0;
  403294:	aa 10 fd 5c 	l.ori r16,r16,0xfd5c
  403298:	9c 40 00 00 	l.addi r2,r0,0x0
}


// MMC command
unsigned char MMC_Command(unsigned char cmd, unsigned long arg)
{
  40329c:	d7 e1 97 f8 	l.sw 0xfffffff8(r1),r18
  DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L2);

    unsigned char c;

    crc = 0;
  4032a0:	d8 10 10 00 	l.sb 0x0(r16),r2
    SPI(0xFF); // flush SPI-bus
  4032a4:	18 40 00 80 	l.movhi r2,0x80
  4032a8:	9e 40 00 ff 	l.addi r18,r0,0xff
  4032ac:	a8 42 00 24 	l.ori r2,r2,0x24
}


// MMC command
unsigned char MMC_Command(unsigned char cmd, unsigned long arg)
{
  4032b0:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  4032b4:	d7 e1 77 f0 	l.sw 0xfffffff0(r1),r14
  DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L2);

    unsigned char c;

    crc = 0;
    SPI(0xFF); // flush SPI-bus
  4032b8:	d4 02 90 00 	l.sw 0x0(r2),r18
}


// MMC command
unsigned char MMC_Command(unsigned char cmd, unsigned long arg)
{
  4032bc:	a9 c4 00 00 	l.ori r14,r4,0x0
  DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L2);

    unsigned char c;

    crc = 0;
    SPI(0xFF); // flush SPI-bus
  4032c0:	84 82 00 00 	l.lwz r4,0x0(r2)

    SPI(cmd);
  4032c4:	d4 02 18 00 	l.sw 0x0(r2),r3
}


// MMC command
unsigned char MMC_Command(unsigned char cmd, unsigned long arg)
{
  4032c8:	9c 21 ff ec 	l.addi r1,r1,0xffffffec
    unsigned char c;

    crc = 0;
    SPI(0xFF); // flush SPI-bus

    SPI(cmd);
  4032cc:	84 82 00 00 	l.lwz r4,0x0(r2)
    MMC_CRC(cmd);
  4032d0:	07 ff ff d4 	l.jal 403220 <MMC_CRC>
  4032d4:	15 00 00 00 	l.nop 0x0

    c = (unsigned char)(arg >> 24);
  4032d8:	b8 6e 00 58 	l.srli r3,r14,0x18
    SPI(c);
  4032dc:	d4 02 18 00 	l.sw 0x0(r2),r3
  4032e0:	84 82 00 00 	l.lwz r4,0x0(r2)
    MMC_CRC(c);
  4032e4:	07 ff ff cf 	l.jal 403220 <MMC_CRC>
  4032e8:	15 00 00 00 	l.nop 0x0

    c = (unsigned char)(arg >> 16);
  4032ec:	b8 6e 00 50 	l.srli r3,r14,0x10
  4032f0:	a4 63 00 ff 	l.andi r3,r3,0xff
    SPI(c);
  4032f4:	d4 02 18 00 	l.sw 0x0(r2),r3
  4032f8:	84 82 00 00 	l.lwz r4,0x0(r2)
    MMC_CRC(c);
  4032fc:	07 ff ff c9 	l.jal 403220 <MMC_CRC>
  403300:	15 00 00 00 	l.nop 0x0

    c = (unsigned char)(arg >> 8);
  403304:	b8 6e 00 48 	l.srli r3,r14,0x8
  403308:	a4 63 00 ff 	l.andi r3,r3,0xff
    SPI(c);
  40330c:	d4 02 18 00 	l.sw 0x0(r2),r3
  403310:	84 82 00 00 	l.lwz r4,0x0(r2)
    MMC_CRC(c);
  403314:	07 ff ff c3 	l.jal 403220 <MMC_CRC>
  403318:	15 00 00 00 	l.nop 0x0

    c = (unsigned char)(arg);
  40331c:	a4 6e 00 ff 	l.andi r3,r14,0xff
    SPI(c);
  403320:	d4 02 18 00 	l.sw 0x0(r2),r3
  403324:	84 82 00 00 	l.lwz r4,0x0(r2)
    MMC_CRC(c);
  403328:	07 ff ff be 	l.jal 403220 <MMC_CRC>
  40332c:	15 00 00 00 	l.nop 0x0

    crc <<= 1;
  403330:	8c 70 00 00 	l.lbz r3,0x0(r16)
  403334:	e0 63 18 00 	l.add r3,r3,r3
    crc++;
  403338:	9c 63 00 01 	l.addi r3,r3,0x1
  40333c:	a4 63 00 ff 	l.andi r3,r3,0xff
  403340:	d8 10 18 00 	l.sb 0x0(r16),r3
    SPI(crc);
  403344:	d4 02 18 00 	l.sw 0x0(r2),r3
  403348:	84 62 00 00 	l.lwz r3,0x0(r2)

    unsigned char Ncr = 100;  // Ncr = 0..8 (SD) / 1..8 (MMC)
  40334c:	9c 60 00 64 	l.addi r3,r0,0x64
    do
        response = SPI(0xFF); // get response
  403350:	d4 02 90 00 	l.sw 0x0(r2),r18
  403354:	85 62 00 00 	l.lwz r11,0x0(r2)
  403358:	a5 6b 00 ff 	l.andi r11,r11,0xff
    while (response == 0xFF && Ncr--);
  40335c:	bc 0b 00 ff 	l.sfeqi r11,0xff
  403360:	10 00 00 06 	l.bf 403378 <MMC_Command+0xf0>
  403364:	bc 03 00 00 	l.sfeqi r3,0x0
  403368:	18 40 00 41 	l.movhi r2,0x41
  40336c:	a8 42 fd 64 	l.ori r2,r2,0xfd64
  403370:	00 00 00 0a 	l.j 403398 <MMC_Command+0x110>
  403374:	d8 02 58 00 	l.sb 0x0(r2),r11
  403378:	10 00 00 04 	l.bf 403388 <MMC_Command+0x100>
  40337c:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  403380:	03 ff ff f4 	l.j 403350 <MMC_Command+0xc8>
  403384:	a4 63 00 ff 	l.andi r3,r3,0xff
  403388:	18 40 00 41 	l.movhi r2,0x41
  40338c:	9c 60 ff ff 	l.addi r3,r0,0xffffffff
  403390:	a8 42 fd 64 	l.ori r2,r2,0xfd64
  403394:	d8 02 18 00 	l.sb 0x0(r2),r3

    return response;

  DEBUG_FUNC_OUT(DEBUG_F_MMC | DEBUG_L2);
}
  403398:	9c 21 00 14 	l.addi r1,r1,0x14
  40339c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  4033a0:	84 41 ff ec 	l.lwz r2,0xffffffec(r1)
  4033a4:	85 c1 ff f0 	l.lwz r14,0xfffffff0(r1)
  4033a8:	86 01 ff f4 	l.lwz r16,0xfffffff4(r1)
  4033ac:	44 00 48 00 	l.jr r9
  4033b0:	86 41 ff f8 	l.lwz r18,0xfffffff8(r1)

004033b4 <quickrand.44673>:
static int quickrand()
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	static int prev;
	int r=*(volatile unsigned long *)0x80000c;
  4033b4:	18 60 00 80 	l.movhi r3,0x80
	r^=(prev&0xc75a)<<4;
  4033b8:	18 80 00 42 	l.movhi r4,0x42
static int quickrand()
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	static int prev;
	int r=*(volatile unsigned long *)0x80000c;
  4033bc:	a8 63 00 0c 	l.ori r3,r3,0xc
	r^=(prev&0xc75a)<<4;
  4033c0:	a8 84 0a 60 	l.ori r4,r4,0xa60
static int quickrand()
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	static int prev;
	int r=*(volatile unsigned long *)0x80000c;
  4033c4:	84 a3 00 00 	l.lwz r5,0x0(r3)
	r^=(prev&0xc75a)<<4;
  4033c8:	84 64 00 00 	l.lwz r3,0x0(r4)
	r^=(prev&0x5a7c)>>(prev&7);
  4033cc:	a4 c3 5a 7c 	l.andi r6,r3,0x5a7c
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	static int prev;
	int r=*(volatile unsigned long *)0x80000c;
	r^=(prev&0xc75a)<<4;
  4033d0:	a5 63 c7 5a 	l.andi r11,r3,0xc75a
	r^=(prev&0x5a7c)>>(prev&7);
  4033d4:	a4 63 00 07 	l.andi r3,r3,0x7
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	static int prev;
	int r=*(volatile unsigned long *)0x80000c;
	r^=(prev&0xc75a)<<4;
  4033d8:	b9 6b 00 04 	l.slli r11,r11,0x4
	r^=(prev&0x5a7c)>>(prev&7);
  4033dc:	e0 66 18 88 	l.sra r3,r6,r3
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	static int prev;
	int r=*(volatile unsigned long *)0x80000c;
	r^=(prev&0xc75a)<<4;
  4033e0:	e1 6b 18 05 	l.xor r11,r11,r3
	r^=(prev&0x5a7c)>>(prev&7);
  4033e4:	e1 6b 28 05 	l.xor r11,r11,r5
	prev=r;
	return(r);

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}
  4033e8:	44 00 48 00 	l.jr r9
  4033ec:	d4 04 58 00 	l.sw 0x0(r4),r11

004033f0 <OsdSetTitle>:
void OsdSetTitle(char *s,int a)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	// Compose the title, condensing character gaps
	arrow=a;
  4033f0:	18 a0 00 42 	l.movhi r5,0x42
  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdSetTitle(char *s,int a)
{
  4033f4:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	// Compose the title, condensing character gaps
	arrow=a;
  4033f8:	a8 a5 0a 5c 	l.ori r5,r5,0xa5c
  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdSetTitle(char *s,int a)
{
  4033fc:	9c 21 ff f4 	l.addi r1,r1,0xfffffff4
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	// Compose the title, condensing character gaps
	arrow=a;
  403400:	d4 05 20 00 	l.sw 0x0(r5),r4
	char zeros=0;
	int i=0;
  char j=0;
	int outp=0;
  403404:	9c 80 00 00 	l.addi r4,r0,0x0
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	// Compose the title, condensing character gaps
	arrow=a;
	char zeros=0;
  403408:	00 00 00 03 	l.j 403414 <OsdSetTitle+0x24>
  40340c:	a8 a4 00 00 	l.ori r5,r4,0x0
void OsdSetTitle(char *s,int a)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	// Compose the title, condensing character gaps
	arrow=a;
  403410:	9c 63 00 01 	l.addi r3,r3,0x1
	int i=0;
  char j=0;
	int outp=0;
	while(1)
	{
		int c=s[i++];
  403414:	90 c3 00 00 	l.lbs r6,0x0(r3)
		if(c && (outp<64))
  403418:	bd a4 00 3f 	l.sflesi r4,0x3f
  40341c:	10 00 00 03 	l.bf 403428 <OsdSetTitle+0x38>
  403420:	9c e0 00 01 	l.addi r7,r0,0x1
  403424:	9c e0 00 00 	l.addi r7,r0,0x0
  403428:	a4 e7 00 ff 	l.andi r7,r7,0xff
  40342c:	bc 07 00 00 	l.sfeqi r7,0x0
  403430:	10 00 00 06 	l.bf 403448 <OsdSetTitle+0x58>
  403434:	e0 e0 30 02 	l.sub r7,r0,r6
  403438:	e0 e7 30 04 	l.or r7,r7,r6
  40343c:	bd 87 00 00 	l.sfltsi r7,0x0
  403440:	10 00 00 04 	l.bf 403450 <OsdSetTitle+0x60>
  403444:	18 40 00 41 	l.movhi r2,0x41
  403448:	00 00 00 26 	l.j 4034e0 <OsdSetTitle+0xf0>
  40344c:	a8 64 00 00 	l.ori r3,r4,0x0
		{
	        unsigned char *p = &charfont[c][0];
  403450:	b8 c6 00 03 	l.slli r6,r6,0x3
  403454:	a8 42 9b 3c 	l.ori r2,r2,0x9b3c
  403458:	e1 06 10 00 	l.add r8,r6,r2
  40345c:	9c c0 00 00 	l.addi r6,r0,0x0

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdSetTitle(char *s,int a)
  403460:	e0 e8 30 00 	l.add r7,r8,r6
		if(c && (outp<64))
		{
	        unsigned char *p = &charfont[c][0];
			for(j=0;j<8;++j)
			{
				unsigned char nc=*p++;
  403464:	8c e7 00 00 	l.lbz r7,0x0(r7)
				if(nc)
  403468:	bc 07 00 00 	l.sfeqi r7,0x0
  40346c:	10 00 00 09 	l.bf 403490 <OsdSetTitle+0xa0>
  403470:	bc 25 00 00 	l.sfnei r5,0x0
				{
					zeros=0;
					titlebuffer[outp++]=nc;
  403474:	18 40 00 42 	l.movhi r2,0x42
  403478:	a8 42 0a 1c 	l.ori r2,r2,0xa1c
  40347c:	e0 a4 10 00 	l.add r5,r4,r2
  403480:	9c 84 00 01 	l.addi r4,r4,0x1
  403484:	d8 05 38 00 	l.sb 0x0(r5),r7
			for(j=0;j<8;++j)
			{
				unsigned char nc=*p++;
				if(nc)
				{
					zeros=0;
  403488:	00 00 00 09 	l.j 4034ac <OsdSetTitle+0xbc>
  40348c:	9c a0 00 00 	l.addi r5,r0,0x0
					titlebuffer[outp++]=nc;
				}
				else if(zeros==0)
  403490:	10 00 00 06 	l.bf 4034a8 <OsdSetTitle+0xb8>
  403494:	18 40 00 42 	l.movhi r2,0x42
				{
					titlebuffer[outp++]=0;
  403498:	a8 42 0a 1c 	l.ori r2,r2,0xa1c
  40349c:	e0 e4 10 00 	l.add r7,r4,r2
  4034a0:	9c 84 00 01 	l.addi r4,r4,0x1
  4034a4:	d8 07 28 00 	l.sb 0x0(r7),r5
				if(nc)
				{
					zeros=0;
					titlebuffer[outp++]=nc;
				}
				else if(zeros==0)
  4034a8:	9c a0 00 01 	l.addi r5,r0,0x1
				{
					titlebuffer[outp++]=0;
					zeros=1;
				}
				if(outp>63)
  4034ac:	bd 44 00 3f 	l.sfgtsi r4,0x3f
  4034b0:	13 ff ff d8 	l.bf 403410 <OsdSetTitle+0x20>
  4034b4:	9c c6 00 01 	l.addi r6,r6,0x1
	{
		int c=s[i++];
		if(c && (outp<64))
		{
	        unsigned char *p = &charfont[c][0];
			for(j=0;j<8;++j)
  4034b8:	bc 26 00 08 	l.sfnei r6,0x8
  4034bc:	13 ff ff ea 	l.bf 403464 <OsdSetTitle+0x74>
  4034c0:	e0 e8 30 00 	l.add r7,r8,r6
void OsdSetTitle(char *s,int a)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	// Compose the title, condensing character gaps
	arrow=a;
  4034c4:	03 ff ff d4 	l.j 403414 <OsdSetTitle+0x24>
  4034c8:	9c 63 00 01 	l.addi r3,r3,0x1

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdSetTitle(char *s,int a)
  4034cc:	a8 42 0a 1c 	l.ori r2,r2,0xa1c
  4034d0:	e0 a3 10 00 	l.add r5,r3,r2
		else
			break;
	}
	for(i=outp;i<64;++i)
	{
		titlebuffer[i]=0;
  4034d4:	9c 40 00 00 	l.addi r2,r0,0x0
			}
		}
		else
			break;
	}
	for(i=outp;i<64;++i)
  4034d8:	9c 63 00 01 	l.addi r3,r3,0x1
	{
		titlebuffer[i]=0;
  4034dc:	d8 05 10 00 	l.sb 0x0(r5),r2
			}
		}
		else
			break;
	}
	for(i=outp;i<64;++i)
  4034e0:	bd a3 00 3f 	l.sflesi r3,0x3f
  4034e4:	13 ff ff fa 	l.bf 4034cc <OsdSetTitle+0xdc>
  4034e8:	18 40 00 42 	l.movhi r2,0x42
	{
		titlebuffer[i]=0;
	}

	// Now centre it:
	int c=(63-outp)/2;
  4034ec:	9c a0 00 3f 	l.addi r5,r0,0x3f
  4034f0:	e0 85 20 02 	l.sub r4,r5,r4

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdSetTitle(char *s,int a)
  4034f4:	a8 42 0a 1c 	l.ori r2,r2,0xa1c
	{
		titlebuffer[i]=0;
	}

	// Now centre it:
	int c=(63-outp)/2;
  4034f8:	b8 64 00 5f 	l.srli r3,r4,0x1f
  4034fc:	e0 83 20 00 	l.add r4,r3,r4
  403500:	b8 84 00 81 	l.srai r4,r4,0x1
	for(i=(63-c);i>=0;--i)
  403504:	e0 a5 20 02 	l.sub r5,r5,r4
  403508:	00 00 00 06 	l.j 403520 <OsdSetTitle+0x130>
  40350c:	e0 65 10 00 	l.add r3,r5,r2
	{
		titlebuffer[i+c]=titlebuffer[i];
  403510:	8c 43 00 00 	l.lbz r2,0x0(r3)
		titlebuffer[i]=0;
	}

	// Now centre it:
	int c=(63-outp)/2;
	for(i=(63-c);i>=0;--i)
  403514:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
	{
		titlebuffer[i+c]=titlebuffer[i];
  403518:	d8 06 10 00 	l.sb 0x0(r6),r2
		titlebuffer[i]=0;
	}

	// Now centre it:
	int c=(63-outp)/2;
	for(i=(63-c);i>=0;--i)
  40351c:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  403520:	bd 65 00 00 	l.sfgesi r5,0x0
  403524:	13 ff ff fb 	l.bf 403510 <OsdSetTitle+0x120>
  403528:	e0 c3 20 00 	l.add r6,r3,r4
  40352c:	00 00 00 07 	l.j 403548 <OsdSetTitle+0x158>
  403530:	9c 60 00 00 	l.addi r3,r0,0x0

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdSetTitle(char *s,int a)
  403534:	a8 42 0a 1c 	l.ori r2,r2,0xa1c
  403538:	e0 a3 10 00 	l.add r5,r3,r2
	for(i=(63-c);i>=0;--i)
	{
		titlebuffer[i+c]=titlebuffer[i];
	}
	for(i=0;i<c;++i)
		titlebuffer[i]=0;
  40353c:	9c 40 00 00 	l.addi r2,r0,0x0
	int c=(63-outp)/2;
	for(i=(63-c);i>=0;--i)
	{
		titlebuffer[i+c]=titlebuffer[i];
	}
	for(i=0;i<c;++i)
  403540:	9c 63 00 01 	l.addi r3,r3,0x1
		titlebuffer[i]=0;
  403544:	d8 05 10 00 	l.sb 0x0(r5),r2
	int c=(63-outp)/2;
	for(i=(63-c);i>=0;--i)
	{
		titlebuffer[i+c]=titlebuffer[i];
	}
	for(i=0;i<c;++i)
  403548:	e5 83 20 00 	l.sflts r3,r4
  40354c:	13 ff ff fa 	l.bf 403534 <OsdSetTitle+0x144>
  403550:	18 40 00 42 	l.movhi r2,0x42
  403554:	9c 60 00 00 	l.addi r3,r0,0x0

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdSetTitle(char *s,int a)
  403558:	a8 e1 00 00 	l.ori r7,r1,0x0
  40355c:	9d 01 00 08 	l.addi r8,r1,0x8

	// Finally rotate it.
	for(i=0;i<64;i+=8)
	{
		unsigned char tmp[8];
		rotatechar(&titlebuffer[i],tmp);
  403560:	18 40 00 42 	l.movhi r2,0x42
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	int a;
	int b;
	int c;
	for(b=0;b<8;++b)
  403564:	9c 80 00 00 	l.addi r4,r0,0x0

	// Finally rotate it.
	for(i=0;i<64;i+=8)
	{
		unsigned char tmp[8];
		rotatechar(&titlebuffer[i],tmp);
  403568:	a8 42 0a 1c 	l.ori r2,r2,0xa1c
  40356c:	00 00 00 10 	l.j 4035ac <OsdSetTitle+0x1bc>
  403570:	e1 63 10 00 	l.add r11,r3,r2

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdSetTitle(char *s,int a)
  403574:	e1 8b 28 00 	l.add r12,r11,r5
	for(b=0;b<8;++b)
	{
		a=0;
		for(c=0;c<8;++c)
		{
			a<<=1;
  403578:	e0 c6 30 00 	l.add r6,r6,r6
			a|=(in[c]>>b)&1;
  40357c:	8d 8c 00 00 	l.lbz r12,0x0(r12)
  403580:	e1 8c 20 88 	l.sra r12,r12,r4
	int b;
	int c;
	for(b=0;b<8;++b)
	{
		a=0;
		for(c=0;c<8;++c)
  403584:	9c a5 00 01 	l.addi r5,r5,0x1
		{
			a<<=1;
			a|=(in[c]>>b)&1;
  403588:	a5 8c 00 01 	l.andi r12,r12,0x1
	int b;
	int c;
	for(b=0;b<8;++b)
	{
		a=0;
		for(c=0;c<8;++c)
  40358c:	bc 25 00 08 	l.sfnei r5,0x8
  403590:	13 ff ff f9 	l.bf 403574 <OsdSetTitle+0x184>
  403594:	e0 c6 60 04 	l.or r6,r6,r12

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdSetTitle(char *s,int a)
  403598:	e0 a7 20 00 	l.add r5,r7,r4
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	int a;
	int b;
	int c;
	for(b=0;b<8;++b)
  40359c:	9c 84 00 01 	l.addi r4,r4,0x1
  4035a0:	bc 04 00 08 	l.sfeqi r4,0x8
  4035a4:	10 00 00 05 	l.bf 4035b8 <OsdSetTitle+0x1c8>
  4035a8:	d8 05 30 00 	l.sb 0x0(r5),r6
	int c=(63-outp)/2;
	for(i=(63-c);i>=0;--i)
	{
		titlebuffer[i+c]=titlebuffer[i];
	}
	for(i=0;i<c;++i)
  4035ac:	9c a0 00 00 	l.addi r5,r0,0x0
  4035b0:	03 ff ff f1 	l.j 403574 <OsdSetTitle+0x184>
  4035b4:	a8 c5 00 00 	l.ori r6,r5,0x0

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdSetTitle(char *s,int a)
  4035b8:	18 40 00 42 	l.movhi r2,0x42
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	int a;
	int b;
	int c;
	for(b=0;b<8;++b)
  4035bc:	a8 81 00 00 	l.ori r4,r1,0x0

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdSetTitle(char *s,int a)
  4035c0:	a8 42 0a 1c 	l.ori r2,r2,0xa1c
  4035c4:	e0 a3 10 00 	l.add r5,r3,r2
	{
		unsigned char tmp[8];
		rotatechar(&titlebuffer[i],tmp);
		for(c=0;c<8;++c)
		{
			titlebuffer[i+c]=tmp[c];
  4035c8:	8c 44 00 00 	l.lbz r2,0x0(r4)
  4035cc:	9c 84 00 01 	l.addi r4,r4,0x1
  4035d0:	d8 05 10 00 	l.sb 0x0(r5),r2
	// Finally rotate it.
	for(i=0;i<64;i+=8)
	{
		unsigned char tmp[8];
		rotatechar(&titlebuffer[i],tmp);
		for(c=0;c<8;++c)
  4035d4:	e4 24 40 00 	l.sfne r4,r8
  4035d8:	13 ff ff fc 	l.bf 4035c8 <OsdSetTitle+0x1d8>
  4035dc:	9c a5 00 01 	l.addi r5,r5,0x1
	}
	for(i=0;i<c;++i)
		titlebuffer[i]=0;

	// Finally rotate it.
	for(i=0;i<64;i+=8)
  4035e0:	9c 63 00 08 	l.addi r3,r3,0x8
  4035e4:	bc 23 00 40 	l.sfnei r3,0x40
  4035e8:	13 ff ff de 	l.bf 403560 <OsdSetTitle+0x170>
  4035ec:	15 00 00 00 	l.nop 0x0
			titlebuffer[i+c]=tmp[c];
		}
	}

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}
  4035f0:	9c 21 00 0c 	l.addi r1,r1,0xc
  4035f4:	44 00 48 00 	l.jr r9
  4035f8:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

004035fc <OsdWriteOffset>:
    unsigned short i;
    unsigned char b;
    const unsigned char *p;
	unsigned char stipplemask=0xff;
	int linelimit=OSDLINELEN;
	int arrowmask=arrow;
  4035fc:	19 00 00 42 	l.movhi r8,0x42
}


// write a null-terminated string <s> to the OSD buffer starting at line <n>
void OsdWriteOffset(unsigned char n, char *s, unsigned char invert, unsigned char stipple,char offset)
{
  403600:	d7 e1 17 d8 	l.sw 0xffffffd8(r1),r2
  403604:	d7 e1 77 dc 	l.sw 0xffffffdc(r1),r14
  403608:	d7 e1 87 e0 	l.sw 0xffffffe0(r1),r16
  40360c:	d7 e1 97 e4 	l.sw 0xffffffe4(r1),r18
  403610:	d7 e1 a7 e8 	l.sw 0xffffffe8(r1),r20
  403614:	d7 e1 b7 ec 	l.sw 0xffffffec(r1),r22
  403618:	d7 e1 c7 f0 	l.sw 0xfffffff0(r1),r24
  40361c:	d7 e1 d7 f4 	l.sw 0xfffffff4(r1),r26
  403620:	d7 e1 e7 f8 	l.sw 0xfffffff8(r1),r28
  403624:	d7 e1 f7 fc 	l.sw 0xfffffffc(r1),r30
    unsigned short i;
    unsigned char b;
    const unsigned char *p;
	unsigned char stipplemask=0xff;
	int linelimit=OSDLINELEN;
	int arrowmask=arrow;
  403628:	a9 08 0a 5c 	l.ori r8,r8,0xa5c
}


// write a null-terminated string <s> to the OSD buffer starting at line <n>
void OsdWriteOffset(unsigned char n, char *s, unsigned char invert, unsigned char stipple,char offset)
{
  40362c:	9c 21 ff d4 	l.addi r1,r1,0xffffffd4
    unsigned short i;
    unsigned char b;
    const unsigned char *p;
	unsigned char stipplemask=0xff;
	int linelimit=OSDLINELEN;
	int arrowmask=arrow;
  403630:	86 e8 00 00 	l.lwz r23,0x0(r8)
	if(n==7 && (arrow & OSD_ARROW_RIGHT))
  403634:	bc 23 00 07 	l.sfnei r3,0x7
  403638:	10 00 00 07 	l.bf 403654 <OsdWriteOffset+0x58>
  40363c:	9f 20 01 00 	l.addi r25,r0,0x100
  403640:	a5 17 00 02 	l.andi r8,r23,0x2
  403644:	bc 08 00 00 	l.sfeqi r8,0x0
  403648:	10 00 00 04 	l.bf 403658 <OsdWriteOffset+0x5c>
  40364c:	bc 06 00 00 	l.sfeqi r6,0x0
		linelimit-=22;
  403650:	9f 20 00 ea 	l.addi r25,r0,0xea

	if(stipple)
  403654:	bc 06 00 00 	l.sfeqi r6,0x0
  403658:	10 00 00 04 	l.bf 403668 <OsdWriteOffset+0x6c>
  40365c:	9e a0 00 ff 	l.addi r21,r0,0xff
	{
		stipplemask=0x55;
  403660:	9e a0 00 55 	l.addi r21,r0,0x55
		stipple=0xff;
  403664:	9c c0 00 ff 	l.addi r6,r0,0xff
	}
	else
		stipple=0;

    // select OSD SPI device
    EnableOsd();
  403668:	19 00 00 80 	l.movhi r8,0x80
  40366c:	9d a0 00 44 	l.addi r13,r0,0x44
  403670:	a9 88 00 20 	l.ori r12,r8,0x20
    // select buffer and line to write to
//    if (invert)
//        SPI(OSDCMDWRITE | 0x10 | n);
//    else
        //SPI(OSDCMDWRITE | n);
        SPI(OSD_CMD_OSD_WR);
  403674:	a9 08 00 24 	l.ori r8,r8,0x24
	}
	else
		stipple=0;

    // select OSD SPI device
    EnableOsd();
  403678:	d4 0c 68 00 	l.sw 0x0(r12),r13
    // select buffer and line to write to
//    if (invert)
//        SPI(OSDCMDWRITE | 0x10 | n);
//    else
        //SPI(OSDCMDWRITE | n);
        SPI(OSD_CMD_OSD_WR);
  40367c:	9d 80 00 0c 	l.addi r12,r0,0xc
        SPI(0x00); SPI(0x00); SPI(0x00); SPI(n);
  403680:	9c 40 00 00 	l.addi r2,r0,0x0
    // select buffer and line to write to
//    if (invert)
//        SPI(OSDCMDWRITE | 0x10 | n);
//    else
        //SPI(OSDCMDWRITE | n);
        SPI(OSD_CMD_OSD_WR);
  403684:	d4 08 60 00 	l.sw 0x0(r8),r12
        SPI(0x00); SPI(0x00); SPI(0x00); SPI(n);

	if(invert)
  403688:	e4 05 10 00 	l.sfeq r5,r2
    // select buffer and line to write to
//    if (invert)
//        SPI(OSDCMDWRITE | 0x10 | n);
//    else
        //SPI(OSDCMDWRITE | n);
        SPI(OSD_CMD_OSD_WR);
  40368c:	85 88 00 00 	l.lwz r12,0x0(r8)
        SPI(0x00); SPI(0x00); SPI(0x00); SPI(n);
  403690:	d4 08 10 00 	l.sw 0x0(r8),r2
  403694:	85 88 00 00 	l.lwz r12,0x0(r8)
  403698:	d4 08 10 00 	l.sw 0x0(r8),r2
  40369c:	85 88 00 00 	l.lwz r12,0x0(r8)
  4036a0:	d4 08 10 00 	l.sw 0x0(r8),r2
  4036a4:	85 88 00 00 	l.lwz r12,0x0(r8)
  4036a8:	d4 08 18 00 	l.sw 0x0(r8),r3
  4036ac:	85 08 00 00 	l.lwz r8,0x0(r8)

	if(invert)
  4036b0:	10 00 00 03 	l.bf 4036bc <OsdWriteOffset+0xc0>
  4036b4:	19 00 00 80 	l.movhi r8,0x80
		invert=255;
  4036b8:	9c a0 00 ff 	l.addi r5,r0,0xff
		else if(n==7 && (arrowmask & OSD_ARROW_LEFT))	// Draw initial arrow
		{
			SPI(0);
			SPI(0);
			SPI(0);
		    p = &charfont[0x10][0];
  4036bc:	1a 60 00 41 	l.movhi r19,0x41
    while (1)
    {
		if(i==0)	// Render sidestripe
		{
	        p = &titlebuffer[(7-n)*8];
			SPI(0xff);
  4036c0:	aa 28 00 24 	l.ori r17,r8,0x24
		else if(n==7 && (arrowmask & OSD_ARROW_LEFT))	// Draw initial arrow
		{
			SPI(0);
			SPI(0);
			SPI(0);
		    p = &charfont[0x10][0];
  4036c4:	aa 73 9b bc 	l.ori r19,r19,0x9bbc
		    {
		        // increment line counter
		        if (++n >= linelimit)
		            n = 0;
		        // send new line number to OSD
		        DisableOsd();
  4036c8:	a8 48 00 20 	l.ori r2,r8,0x20
		        //SPI(OSDCMDWRITE | n);
            SPI(OSD_CMD_OSD_WR);
            SPI(0x00); SPI(0x00); SPI(0x00); SPI(n);

		    }
			else if(i<(linelimit-8)) // normal character
  4036cc:	9d 19 ff f8 	l.addi r8,r25,0xfffffff8
        SPI(0x00); SPI(0x00); SPI(0x00); SPI(n);

	if(invert)
		invert=255;

    i = 0;
  4036d0:	9d 80 00 00 	l.addi r12,r0,0x0
    while (1)
    {
		if(i==0)	// Render sidestripe
		{
	        p = &titlebuffer[(7-n)*8];
			SPI(0xff);
  4036d4:	9f 60 00 ff 	l.addi r27,r0,0xff
		        //SPI(OSDCMDWRITE | n);
            SPI(OSD_CMD_OSD_WR);
            SPI(0x00); SPI(0x00); SPI(0x00); SPI(n);

		    }
			else if(i<(linelimit-8)) // normal character
  4036d8:	d4 01 40 00 	l.sw 0x0(r1),r8
		{
			SPI(0);
			SPI(0);
			SPI(0);
		    p = &charfont[0x10][0];
	        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
  4036dc:	9f d3 00 03 	l.addi r30,r19,0x3
  4036e0:	9f 93 00 04 	l.addi r28,r19,0x4
	        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
  4036e4:	9f 53 00 05 	l.addi r26,r19,0x5
  4036e8:	9f f3 00 06 	l.addi r31,r19,0x6
		    p = &charfont[0x14][0];
  4036ec:	9f 13 00 20 	l.addi r24,r19,0x20
	        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
  4036f0:	9e d3 00 21 	l.addi r22,r19,0x21
  4036f4:	9e 93 00 22 	l.addi r20,r19,0x22
  4036f8:	9e 53 00 23 	l.addi r18,r19,0x23
  4036fc:	9e 13 00 24 	l.addi r16,r19,0x24
	        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
  403700:	9d d3 00 25 	l.addi r14,r19,0x25
  403704:	9f b3 00 26 	l.addi r29,r19,0x26

    i = 0;
    // send all characters in string to OSD
    while (1)
    {
		if(i==0)	// Render sidestripe
  403708:	bc 2c 00 00 	l.sfnei r12,0x0
  40370c:	10 00 00 6d 	l.bf 4038c0 <OsdWriteOffset+0x2c4>
  403710:	bc 23 00 07 	l.sfnei r3,0x7
		{
	        p = &titlebuffer[(7-n)*8];
  403714:	9d 60 00 07 	l.addi r11,r0,0x7
			SPI(0xff);
  403718:	d4 11 d8 00 	l.sw 0x0(r17),r27
    // send all characters in string to OSD
    while (1)
    {
		if(i==0)	// Render sidestripe
		{
	        p = &titlebuffer[(7-n)*8];
  40371c:	e1 0b 18 02 	l.sub r8,r11,r3
  403720:	19 60 00 42 	l.movhi r11,0x42
  403724:	b9 08 00 03 	l.slli r8,r8,0x3
  403728:	a9 6b 0a 1c 	l.ori r11,r11,0xa1c
  40372c:	e1 a8 58 00 	l.add r13,r8,r11
			SPI(0xff);
  403730:	85 71 00 00 	l.lwz r11,0x0(r17)
			SPI(0xff);
  403734:	d4 11 d8 00 	l.sw 0x0(r17),r27
	        SPI(255^*p); SPI(255^*p++);
  403738:	9d ed 00 01 	l.addi r15,r13,0x1
  40373c:	8d 0d 00 00 	l.lbz r8,0x0(r13)
  403740:	ad 08 00 ff 	l.xori r8,r8,0xff
    {
		if(i==0)	// Render sidestripe
		{
	        p = &titlebuffer[(7-n)*8];
			SPI(0xff);
			SPI(0xff);
  403744:	85 71 00 00 	l.lwz r11,0x0(r17)
	        SPI(255^*p); SPI(255^*p++);
  403748:	a5 08 00 ff 	l.andi r8,r8,0xff
  40374c:	d4 11 40 00 	l.sw 0x0(r17),r8
  403750:	8d 0d 00 00 	l.lbz r8,0x0(r13)
  403754:	ad 08 00 ff 	l.xori r8,r8,0xff
  403758:	85 71 00 00 	l.lwz r11,0x0(r17)
  40375c:	a5 08 00 ff 	l.andi r8,r8,0xff
  403760:	d4 11 40 00 	l.sw 0x0(r17),r8
	        SPI(255^*p); SPI(255^*p++);
  403764:	8d 0f 00 00 	l.lbz r8,0x0(r15)
  403768:	ad 08 00 ff 	l.xori r8,r8,0xff
		if(i==0)	// Render sidestripe
		{
	        p = &titlebuffer[(7-n)*8];
			SPI(0xff);
			SPI(0xff);
	        SPI(255^*p); SPI(255^*p++);
  40376c:	85 71 00 00 	l.lwz r11,0x0(r17)
	        SPI(255^*p); SPI(255^*p++);
  403770:	a5 08 00 ff 	l.andi r8,r8,0xff
  403774:	d4 11 40 00 	l.sw 0x0(r17),r8
  403778:	8d 0f 00 00 	l.lbz r8,0x0(r15)
  40377c:	ad 08 00 ff 	l.xori r8,r8,0xff
  403780:	85 71 00 00 	l.lwz r11,0x0(r17)
  403784:	a5 08 00 ff 	l.andi r8,r8,0xff
  403788:	9d ed 00 02 	l.addi r15,r13,0x2
  40378c:	d4 11 40 00 	l.sw 0x0(r17),r8
	        SPI(255^*p); SPI(255^*p++);
  403790:	8d 0f 00 00 	l.lbz r8,0x0(r15)
  403794:	ad 08 00 ff 	l.xori r8,r8,0xff
		{
	        p = &titlebuffer[(7-n)*8];
			SPI(0xff);
			SPI(0xff);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
  403798:	85 71 00 00 	l.lwz r11,0x0(r17)
	        SPI(255^*p); SPI(255^*p++);
  40379c:	a5 08 00 ff 	l.andi r8,r8,0xff
  4037a0:	d4 11 40 00 	l.sw 0x0(r17),r8
  4037a4:	8d 0f 00 00 	l.lbz r8,0x0(r15)
  4037a8:	ad 08 00 ff 	l.xori r8,r8,0xff
  4037ac:	85 71 00 00 	l.lwz r11,0x0(r17)
  4037b0:	a5 08 00 ff 	l.andi r8,r8,0xff
  4037b4:	9d ed 00 03 	l.addi r15,r13,0x3
  4037b8:	d4 11 40 00 	l.sw 0x0(r17),r8
	        SPI(255^*p); SPI(255^*p++);
  4037bc:	8d 0f 00 00 	l.lbz r8,0x0(r15)
  4037c0:	ad 08 00 ff 	l.xori r8,r8,0xff
	        p = &titlebuffer[(7-n)*8];
			SPI(0xff);
			SPI(0xff);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
  4037c4:	85 71 00 00 	l.lwz r11,0x0(r17)
	        SPI(255^*p); SPI(255^*p++);
  4037c8:	a5 08 00 ff 	l.andi r8,r8,0xff
  4037cc:	d4 11 40 00 	l.sw 0x0(r17),r8
  4037d0:	8d 0f 00 00 	l.lbz r8,0x0(r15)
  4037d4:	ad 08 00 ff 	l.xori r8,r8,0xff
  4037d8:	85 71 00 00 	l.lwz r11,0x0(r17)
  4037dc:	a5 08 00 ff 	l.andi r8,r8,0xff
  4037e0:	9d ed 00 04 	l.addi r15,r13,0x4
  4037e4:	d4 11 40 00 	l.sw 0x0(r17),r8
	        SPI(255^*p); SPI(255^*p++);
  4037e8:	8d 0f 00 00 	l.lbz r8,0x0(r15)
  4037ec:	ad 08 00 ff 	l.xori r8,r8,0xff
			SPI(0xff);
			SPI(0xff);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
  4037f0:	85 71 00 00 	l.lwz r11,0x0(r17)
	        SPI(255^*p); SPI(255^*p++);
  4037f4:	a5 08 00 ff 	l.andi r8,r8,0xff
  4037f8:	d4 11 40 00 	l.sw 0x0(r17),r8
  4037fc:	8d 0f 00 00 	l.lbz r8,0x0(r15)
  403800:	ad 08 00 ff 	l.xori r8,r8,0xff
  403804:	9d ed 00 05 	l.addi r15,r13,0x5
  403808:	a5 08 00 ff 	l.andi r8,r8,0xff
  40380c:	85 71 00 00 	l.lwz r11,0x0(r17)
  403810:	d4 11 40 00 	l.sw 0x0(r17),r8
	        SPI(255^*p); SPI(255^*p++);
  403814:	8d 0f 00 00 	l.lbz r8,0x0(r15)
  403818:	ad 08 00 ff 	l.xori r8,r8,0xff
			SPI(0xff);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
  40381c:	85 71 00 00 	l.lwz r11,0x0(r17)
	        SPI(255^*p); SPI(255^*p++);
  403820:	a5 08 00 ff 	l.andi r8,r8,0xff
  403824:	d4 11 40 00 	l.sw 0x0(r17),r8
  403828:	8d 0f 00 00 	l.lbz r8,0x0(r15)
  40382c:	ad 08 00 ff 	l.xori r8,r8,0xff
  403830:	85 71 00 00 	l.lwz r11,0x0(r17)
  403834:	a5 08 00 ff 	l.andi r8,r8,0xff
  403838:	9d ed 00 06 	l.addi r15,r13,0x6
  40383c:	d4 11 40 00 	l.sw 0x0(r17),r8
	        SPI(255^*p); SPI(255^*p++);
  403840:	9d ad 00 07 	l.addi r13,r13,0x7
  403844:	8d 0f 00 00 	l.lbz r8,0x0(r15)
  403848:	ad 08 00 ff 	l.xori r8,r8,0xff
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
  40384c:	85 71 00 00 	l.lwz r11,0x0(r17)
	        SPI(255^*p); SPI(255^*p++);
  403850:	a5 08 00 ff 	l.andi r8,r8,0xff
  403854:	d4 11 40 00 	l.sw 0x0(r17),r8
  403858:	8d 0f 00 00 	l.lbz r8,0x0(r15)
  40385c:	ad 08 00 ff 	l.xori r8,r8,0xff
  403860:	85 71 00 00 	l.lwz r11,0x0(r17)
  403864:	a5 08 00 ff 	l.andi r8,r8,0xff
  403868:	d4 11 40 00 	l.sw 0x0(r17),r8
	        SPI(255^*p); SPI(255^*p++);
  40386c:	8d 0d 00 00 	l.lbz r8,0x0(r13)
  403870:	ad 08 00 ff 	l.xori r8,r8,0xff
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
  403874:	85 71 00 00 	l.lwz r11,0x0(r17)
	        SPI(255^*p); SPI(255^*p++);
  403878:	a5 08 00 ff 	l.andi r8,r8,0xff
  40387c:	d4 11 40 00 	l.sw 0x0(r17),r8
  403880:	8d 0d 00 00 	l.lbz r8,0x0(r13)
  403884:	ad 08 00 ff 	l.xori r8,r8,0xff
  403888:	85 71 00 00 	l.lwz r11,0x0(r17)
  40388c:	a5 08 00 ff 	l.andi r8,r8,0xff
  403890:	d4 11 40 00 	l.sw 0x0(r17),r8
  403894:	85 11 00 00 	l.lwz r8,0x0(r17)
			SPI(0xff);
  403898:	d4 11 d8 00 	l.sw 0x0(r17),r27
  40389c:	85 11 00 00 	l.lwz r8,0x0(r17)
			SPI(0xff);
  4038a0:	d4 11 d8 00 	l.sw 0x0(r17),r27
  4038a4:	85 11 00 00 	l.lwz r8,0x0(r17)
			SPI(0x00);
  4038a8:	d4 11 60 00 	l.sw 0x0(r17),r12
  4038ac:	85 11 00 00 	l.lwz r8,0x0(r17)
			SPI(0x00);
  4038b0:	d4 11 60 00 	l.sw 0x0(r17),r12
	        i += 22;
  4038b4:	9d 80 00 16 	l.addi r12,r0,0x16
	        SPI(255^*p); SPI(255^*p++);
	        SPI(255^*p); SPI(255^*p++);
			SPI(0xff);
			SPI(0xff);
			SPI(0x00);
			SPI(0x00);
  4038b8:	85 11 00 00 	l.lwz r8,0x0(r17)
	        i += 22;
		}
		else if(n==7 && (arrowmask & OSD_ARROW_LEFT))	// Draw initial arrow
  4038bc:	bc 23 00 07 	l.sfnei r3,0x7
  4038c0:	10 00 00 6f 	l.bf 403a7c <OsdWriteOffset+0x480>
  4038c4:	a5 17 00 01 	l.andi r8,r23,0x1
  4038c8:	bc 08 00 00 	l.sfeqi r8,0x0
  4038cc:	10 00 00 6c 	l.bf 403a7c <OsdWriteOffset+0x480>
  4038d0:	9d 00 00 00 	l.addi r8,r0,0x0
		{
			SPI(0);
			SPI(0);
  4038d4:	9d 60 00 00 	l.addi r11,r0,0x0
			SPI(0x00);
	        i += 22;
		}
		else if(n==7 && (arrowmask & OSD_ARROW_LEFT))	// Draw initial arrow
		{
			SPI(0);
  4038d8:	d4 11 40 00 	l.sw 0x0(r17),r8
			SPI(0);
			SPI(0);
			SPI(0);
			SPI(invert);
			SPI(invert);
			i+=24;
  4038dc:	9d 8c 00 18 	l.addi r12,r12,0x18
			SPI(0x00);
	        i += 22;
		}
		else if(n==7 && (arrowmask & OSD_ARROW_LEFT))	// Draw initial arrow
		{
			SPI(0);
  4038e0:	85 11 00 00 	l.lwz r8,0x0(r17)
			SPI(0);
  4038e4:	d4 11 58 00 	l.sw 0x0(r17),r11
			SPI(0);
			SPI(0);
			SPI(0);
			SPI(invert);
			SPI(invert);
			i+=24;
  4038e8:	a5 8c ff ff 	l.andi r12,r12,0xffff
	        i += 22;
		}
		else if(n==7 && (arrowmask & OSD_ARROW_LEFT))	// Draw initial arrow
		{
			SPI(0);
			SPI(0);
  4038ec:	85 11 00 00 	l.lwz r8,0x0(r17)
			SPI(0);
  4038f0:	d4 11 58 00 	l.sw 0x0(r17),r11
		    p = &charfont[0x10][0];
	        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
  4038f4:	19 60 00 41 	l.movhi r11,0x41
		}
		else if(n==7 && (arrowmask & OSD_ARROW_LEFT))	// Draw initial arrow
		{
			SPI(0);
			SPI(0);
			SPI(0);
  4038f8:	85 11 00 00 	l.lwz r8,0x0(r17)
		    p = &charfont[0x10][0];
	        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
  4038fc:	8d 13 00 00 	l.lbz r8,0x0(r19)
  403900:	e1 08 38 08 	l.sll r8,r8,r7
  403904:	a9 6b 9b bd 	l.ori r11,r11,0x9bbd
  403908:	d4 11 40 00 	l.sw 0x0(r17),r8
  40390c:	85 11 00 00 	l.lwz r8,0x0(r17)
  403910:	8d 0b 00 00 	l.lbz r8,0x0(r11)
  403914:	e1 08 38 08 	l.sll r8,r8,r7
  403918:	19 60 00 41 	l.movhi r11,0x41
  40391c:	d4 11 40 00 	l.sw 0x0(r17),r8
  403920:	a9 6b 9b be 	l.ori r11,r11,0x9bbe
  403924:	85 11 00 00 	l.lwz r8,0x0(r17)
  403928:	8d 0b 00 00 	l.lbz r8,0x0(r11)
  40392c:	e1 08 38 08 	l.sll r8,r8,r7
	        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
		    p = &charfont[0x14][0];
	        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
	        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
			SPI(0);
			SPI(0);
  403930:	9d 60 00 00 	l.addi r11,r0,0x0
		{
			SPI(0);
			SPI(0);
			SPI(0);
		    p = &charfont[0x10][0];
	        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
  403934:	d4 11 40 00 	l.sw 0x0(r17),r8
  403938:	85 11 00 00 	l.lwz r8,0x0(r17)
  40393c:	8d 1e 00 00 	l.lbz r8,0x0(r30)
  403940:	e1 08 38 08 	l.sll r8,r8,r7
  403944:	d4 11 40 00 	l.sw 0x0(r17),r8
  403948:	85 11 00 00 	l.lwz r8,0x0(r17)
	        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
  40394c:	8d 1c 00 00 	l.lbz r8,0x0(r28)
  403950:	e1 08 38 08 	l.sll r8,r8,r7
  403954:	d4 11 40 00 	l.sw 0x0(r17),r8
  403958:	85 11 00 00 	l.lwz r8,0x0(r17)
  40395c:	8d 1a 00 00 	l.lbz r8,0x0(r26)
  403960:	e1 08 38 08 	l.sll r8,r8,r7
  403964:	d4 11 40 00 	l.sw 0x0(r17),r8
  403968:	85 11 00 00 	l.lwz r8,0x0(r17)
  40396c:	8d 1f 00 00 	l.lbz r8,0x0(r31)
  403970:	e1 08 38 08 	l.sll r8,r8,r7
  403974:	d4 11 40 00 	l.sw 0x0(r17),r8
  403978:	85 11 00 00 	l.lwz r8,0x0(r17)
  40397c:	8d 1f 00 01 	l.lbz r8,0x1(r31)
  403980:	e1 08 38 08 	l.sll r8,r8,r7
  403984:	d4 11 40 00 	l.sw 0x0(r17),r8
  403988:	85 11 00 00 	l.lwz r8,0x0(r17)
		    p = &charfont[0x14][0];
	        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
  40398c:	8d 18 00 00 	l.lbz r8,0x0(r24)
  403990:	e1 08 38 08 	l.sll r8,r8,r7
  403994:	d4 11 40 00 	l.sw 0x0(r17),r8
  403998:	85 11 00 00 	l.lwz r8,0x0(r17)
  40399c:	8d 16 00 00 	l.lbz r8,0x0(r22)
  4039a0:	e1 08 38 08 	l.sll r8,r8,r7
  4039a4:	d4 11 40 00 	l.sw 0x0(r17),r8
  4039a8:	85 11 00 00 	l.lwz r8,0x0(r17)
  4039ac:	8d 14 00 00 	l.lbz r8,0x0(r20)
  4039b0:	e1 08 38 08 	l.sll r8,r8,r7
  4039b4:	d4 11 40 00 	l.sw 0x0(r17),r8
  4039b8:	85 11 00 00 	l.lwz r8,0x0(r17)
  4039bc:	8d 12 00 00 	l.lbz r8,0x0(r18)
  4039c0:	e1 08 38 08 	l.sll r8,r8,r7
  4039c4:	d4 11 40 00 	l.sw 0x0(r17),r8
  4039c8:	85 11 00 00 	l.lwz r8,0x0(r17)
	        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
  4039cc:	8d 10 00 00 	l.lbz r8,0x0(r16)
  4039d0:	e1 08 38 08 	l.sll r8,r8,r7
  4039d4:	d4 11 40 00 	l.sw 0x0(r17),r8
  4039d8:	85 11 00 00 	l.lwz r8,0x0(r17)
  4039dc:	8d 0e 00 00 	l.lbz r8,0x0(r14)
  4039e0:	e1 08 38 08 	l.sll r8,r8,r7
  4039e4:	d4 11 40 00 	l.sw 0x0(r17),r8
  4039e8:	85 11 00 00 	l.lwz r8,0x0(r17)
  4039ec:	8d 1d 00 00 	l.lbz r8,0x0(r29)
  4039f0:	e1 08 38 08 	l.sll r8,r8,r7
  4039f4:	d4 11 40 00 	l.sw 0x0(r17),r8
  4039f8:	85 11 00 00 	l.lwz r8,0x0(r17)
  4039fc:	8d 1d 00 01 	l.lbz r8,0x1(r29)
  403a00:	e1 08 38 08 	l.sll r8,r8,r7
  403a04:	d4 11 40 00 	l.sw 0x0(r17),r8
  403a08:	85 11 00 00 	l.lwz r8,0x0(r17)
			SPI(0);
  403a0c:	9d 00 00 00 	l.addi r8,r0,0x0
  403a10:	d4 11 40 00 	l.sw 0x0(r17),r8
  403a14:	85 11 00 00 	l.lwz r8,0x0(r17)
			SPI(0);
  403a18:	d4 11 58 00 	l.sw 0x0(r17),r11
  403a1c:	85 11 00 00 	l.lwz r8,0x0(r17)
			SPI(0);
  403a20:	d4 11 58 00 	l.sw 0x0(r17),r11
  403a24:	85 11 00 00 	l.lwz r8,0x0(r17)
			SPI(invert);
  403a28:	d4 11 28 00 	l.sw 0x0(r17),r5
  403a2c:	85 11 00 00 	l.lwz r8,0x0(r17)
			SPI(invert);
  403a30:	d4 11 28 00 	l.sw 0x0(r17),r5
  403a34:	85 11 00 00 	l.lwz r8,0x0(r17)
			i+=24;
			arrowmask&=~OSD_ARROW_LEFT;
  403a38:	9d 00 ff fe 	l.addi r8,r0,0xfffffffe
  403a3c:	e2 f7 40 03 	l.and r23,r23,r8
			if(*s++ == 0) break;	// Skip 3 characters, to keep alignent the same.
  403a40:	91 04 00 00 	l.lbs r8,0x0(r4)
  403a44:	e4 08 58 00 	l.sfeq r8,r11
  403a48:	10 00 00 7d 	l.bf 403c3c <OsdWriteOffset+0x640>
  403a4c:	15 00 00 00 	l.nop 0x0
			if(*s++ == 0) break;
  403a50:	91 04 00 01 	l.lbs r8,0x1(r4)
  403a54:	e4 28 58 00 	l.sfne r8,r11
  403a58:	0c 00 00 79 	l.bnf 403c3c <OsdWriteOffset+0x640>
  403a5c:	15 00 00 00 	l.nop 0x0
			if(*s++ == 0) break;
  403a60:	91 04 00 02 	l.lbs r8,0x2(r4)
  403a64:	e4 08 58 00 	l.sfeq r8,r11
  403a68:	0f ff ff 28 	l.bnf 403708 <OsdWriteOffset+0x10c>
  403a6c:	9c 84 00 03 	l.addi r4,r4,0x3
  403a70:	9c 84 ff fd 	l.addi r4,r4,0xfffffffd
		        i += 8;
		    }
		}
    }
    for (; i < linelimit; i++) // clear end of line
       SPI(invert);
  403a74:	00 00 00 73 	l.j 403c40 <OsdWriteOffset+0x644>
  403a78:	18 80 00 80 	l.movhi r4,0x80
			if(*s++ == 0) break;
			if(*s++ == 0) break;
		}
		else
		{
		    b = *s++;
  403a7c:	8d 04 00 00 	l.lbz r8,0x0(r4)

		    if (b == 0) // end of string
  403a80:	bc 08 00 00 	l.sfeqi r8,0x0
  403a84:	10 00 00 6e 	l.bf 403c3c <OsdWriteOffset+0x640>
  403a88:	9c 84 00 01 	l.addi r4,r4,0x1
		        break;

		    else if (b == 0x0d || b == 0x0a) // cariage return / linefeed, go to next line
  403a8c:	ad 68 00 0a 	l.xori r11,r8,0xa
  403a90:	9d 6b ff ff 	l.addi r11,r11,0xffffffff
  403a94:	bd 8b 00 00 	l.sfltsi r11,0x0
  403a98:	10 00 00 06 	l.bf 403ab0 <OsdWriteOffset+0x4b4>
  403a9c:	ad 68 00 0d 	l.xori r11,r8,0xd
  403aa0:	9d 6b ff ff 	l.addi r11,r11,0xffffffff
  403aa4:	bd 6b 00 00 	l.sfgesi r11,0x0
  403aa8:	10 00 00 19 	l.bf 403b0c <OsdWriteOffset+0x510>
  403aac:	85 61 00 00 	l.lwz r11,0x0(r1)
		    {
		        // increment line counter
		        if (++n >= linelimit)
  403ab0:	9c 63 00 01 	l.addi r3,r3,0x1
  403ab4:	a4 63 00 ff 	l.andi r3,r3,0xff
  403ab8:	e5 63 c8 00 	l.sfges r3,r25
  403abc:	0c 00 00 03 	l.bnf 403ac8 <OsdWriteOffset+0x4cc>
  403ac0:	9d 60 00 40 	l.addi r11,r0,0x40
		            n = 0;
  403ac4:	9c 60 00 00 	l.addi r3,r0,0x0
		        // send new line number to OSD
		        DisableOsd();
		        EnableOsd();
  403ac8:	9d 00 00 44 	l.addi r8,r0,0x44
		    {
		        // increment line counter
		        if (++n >= linelimit)
		            n = 0;
		        // send new line number to OSD
		        DisableOsd();
  403acc:	d4 02 58 00 	l.sw 0x0(r2),r11
		        EnableOsd();
  403ad0:	d4 02 40 00 	l.sw 0x0(r2),r8
		        //SPI(OSDCMDWRITE | n);
            SPI(OSD_CMD_OSD_WR);
  403ad4:	9d 00 00 0c 	l.addi r8,r0,0xc
            SPI(0x00); SPI(0x00); SPI(0x00); SPI(n);
  403ad8:	9d 60 00 00 	l.addi r11,r0,0x0
		            n = 0;
		        // send new line number to OSD
		        DisableOsd();
		        EnableOsd();
		        //SPI(OSDCMDWRITE | n);
            SPI(OSD_CMD_OSD_WR);
  403adc:	d4 11 40 00 	l.sw 0x0(r17),r8
  403ae0:	85 11 00 00 	l.lwz r8,0x0(r17)
            SPI(0x00); SPI(0x00); SPI(0x00); SPI(n);
  403ae4:	d4 11 58 00 	l.sw 0x0(r17),r11
  403ae8:	85 11 00 00 	l.lwz r8,0x0(r17)
  403aec:	d4 11 58 00 	l.sw 0x0(r17),r11
  403af0:	85 11 00 00 	l.lwz r8,0x0(r17)
  403af4:	d4 11 58 00 	l.sw 0x0(r17),r11
  403af8:	85 11 00 00 	l.lwz r8,0x0(r17)
  403afc:	d4 11 18 00 	l.sw 0x0(r17),r3
  403b00:	85 11 00 00 	l.lwz r8,0x0(r17)

    i = 0;
    // send all characters in string to OSD
    while (1)
    {
		if(i==0)	// Render sidestripe
  403b04:	03 ff ff 02 	l.j 40370c <OsdWriteOffset+0x110>
  403b08:	bc 2c 00 00 	l.sfnei r12,0x0
		        //SPI(OSDCMDWRITE | n);
            SPI(OSD_CMD_OSD_WR);
            SPI(0x00); SPI(0x00); SPI(0x00); SPI(n);

		    }
			else if(i<(linelimit-8)) // normal character
  403b0c:	e5 6c 58 00 	l.sfges r12,r11
  403b10:	13 ff fe fe 	l.bf 403708 <OsdWriteOffset+0x10c>
  403b14:	19 60 00 41 	l.movhi r11,0x41
		    {
		        p = &charfont[b][0];
  403b18:	b9 08 00 03 	l.slli r8,r8,0x3
  403b1c:	a9 6b 9b 3c 	l.ori r11,r11,0x9b3c
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        i += 8;
  403b20:	9d 8c 00 08 	l.addi r12,r12,0x8
            SPI(0x00); SPI(0x00); SPI(0x00); SPI(n);

		    }
			else if(i<(linelimit-8)) // normal character
		    {
		        p = &charfont[b][0];
  403b24:	e1 a8 58 00 	l.add r13,r8,r11
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        i += 8;
  403b28:	a5 8c ff ff 	l.andi r12,r12,0xffff

		    }
			else if(i<(linelimit-8)) // normal character
		    {
		        p = &charfont[b][0];
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403b2c:	8d 0d 00 00 	l.lbz r8,0x0(r13)
  403b30:	e1 08 38 08 	l.sll r8,r8,r7
  403b34:	e1 08 a8 03 	l.and r8,r8,r21
  403b38:	e2 b5 30 05 	l.xor r21,r21,r6
  403b3c:	e1 08 28 05 	l.xor r8,r8,r5
  403b40:	d4 11 40 00 	l.sw 0x0(r17),r8
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403b44:	8d 0d 00 01 	l.lbz r8,0x1(r13)
  403b48:	e1 08 38 08 	l.sll r8,r8,r7

		    }
			else if(i<(linelimit-8)) // normal character
		    {
		        p = &charfont[b][0];
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403b4c:	85 71 00 00 	l.lwz r11,0x0(r17)
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403b50:	e1 08 a8 03 	l.and r8,r8,r21
  403b54:	e2 b5 30 05 	l.xor r21,r21,r6
  403b58:	e1 08 28 05 	l.xor r8,r8,r5
  403b5c:	a6 b5 00 ff 	l.andi r21,r21,0xff
  403b60:	d4 11 40 00 	l.sw 0x0(r17),r8
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403b64:	8d 0d 00 02 	l.lbz r8,0x2(r13)
  403b68:	e1 08 38 08 	l.sll r8,r8,r7
		    }
			else if(i<(linelimit-8)) // normal character
		    {
		        p = &charfont[b][0];
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403b6c:	85 71 00 00 	l.lwz r11,0x0(r17)
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403b70:	e1 08 a8 03 	l.and r8,r8,r21
  403b74:	e2 b5 30 05 	l.xor r21,r21,r6
  403b78:	e1 08 28 05 	l.xor r8,r8,r5
  403b7c:	d4 11 40 00 	l.sw 0x0(r17),r8
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403b80:	8d 0d 00 03 	l.lbz r8,0x3(r13)
  403b84:	e1 08 38 08 	l.sll r8,r8,r7
			else if(i<(linelimit-8)) // normal character
		    {
		        p = &charfont[b][0];
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403b88:	85 71 00 00 	l.lwz r11,0x0(r17)
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403b8c:	e1 08 a8 03 	l.and r8,r8,r21
  403b90:	e2 b5 30 05 	l.xor r21,r21,r6
  403b94:	e1 08 28 05 	l.xor r8,r8,r5
  403b98:	a6 b5 00 ff 	l.andi r21,r21,0xff
  403b9c:	d4 11 40 00 	l.sw 0x0(r17),r8
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403ba0:	8d 0d 00 04 	l.lbz r8,0x4(r13)
  403ba4:	e1 08 38 08 	l.sll r8,r8,r7
		    {
		        p = &charfont[b][0];
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403ba8:	85 71 00 00 	l.lwz r11,0x0(r17)
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403bac:	e1 08 a8 03 	l.and r8,r8,r21
  403bb0:	e2 b5 30 05 	l.xor r21,r21,r6
  403bb4:	e1 08 28 05 	l.xor r8,r8,r5
  403bb8:	d4 11 40 00 	l.sw 0x0(r17),r8
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403bbc:	8d 0d 00 05 	l.lbz r8,0x5(r13)
  403bc0:	e1 08 38 08 	l.sll r8,r8,r7
		        p = &charfont[b][0];
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403bc4:	85 71 00 00 	l.lwz r11,0x0(r17)
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403bc8:	9d ad 00 06 	l.addi r13,r13,0x6
  403bcc:	e1 08 a8 03 	l.and r8,r8,r21
  403bd0:	e2 b5 30 05 	l.xor r21,r21,r6
  403bd4:	e1 08 28 05 	l.xor r8,r8,r5
  403bd8:	a6 b5 00 ff 	l.andi r21,r21,0xff
  403bdc:	d4 11 40 00 	l.sw 0x0(r17),r8
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403be0:	8d 0d 00 00 	l.lbz r8,0x0(r13)
  403be4:	e1 08 38 08 	l.sll r8,r8,r7
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403be8:	85 71 00 00 	l.lwz r11,0x0(r17)
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403bec:	e1 08 a8 03 	l.and r8,r8,r21
  403bf0:	e2 b5 30 05 	l.xor r21,r21,r6
  403bf4:	e1 08 28 05 	l.xor r8,r8,r5
  403bf8:	d4 11 40 00 	l.sw 0x0(r17),r8
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403bfc:	8d 0d 00 01 	l.lbz r8,0x1(r13)
  403c00:	e1 08 38 08 	l.sll r8,r8,r7
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403c04:	85 71 00 00 	l.lwz r11,0x0(r17)
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
  403c08:	e1 08 a8 03 	l.and r8,r8,r21
  403c0c:	e2 b5 30 05 	l.xor r21,r21,r6
  403c10:	e1 08 28 05 	l.xor r8,r8,r5
  403c14:	a6 b5 00 ff 	l.andi r21,r21,0xff
  403c18:	d4 11 40 00 	l.sw 0x0(r17),r8
  403c1c:	85 11 00 00 	l.lwz r8,0x0(r17)

    i = 0;
    // send all characters in string to OSD
    while (1)
    {
		if(i==0)	// Render sidestripe
  403c20:	03 ff fe bb 	l.j 40370c <OsdWriteOffset+0x110>
  403c24:	bc 2c 00 00 	l.sfnei r12,0x0
		        i += 8;
		    }
		}
    }
    for (; i < linelimit; i++) // clear end of line
       SPI(invert);
  403c28:	d4 04 28 00 	l.sw 0x0(r4),r5
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        i += 8;
		    }
		}
    }
    for (; i < linelimit; i++) // clear end of line
  403c2c:	9d 8c 00 01 	l.addi r12,r12,0x1
       SPI(invert);
  403c30:	84 44 00 00 	l.lwz r2,0x0(r4)
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        i += 8;
		    }
		}
    }
    for (; i < linelimit; i++) // clear end of line
  403c34:	00 00 00 04 	l.j 403c44 <OsdWriteOffset+0x648>
  403c38:	a5 8c ff ff 	l.andi r12,r12,0xffff
       SPI(invert);
  403c3c:	18 80 00 80 	l.movhi r4,0x80
  403c40:	a8 84 00 24 	l.ori r4,r4,0x24
		        SPI(((*p++<<offset)&stipplemask)^invert);	stipplemask^=stipple;
		        i += 8;
		    }
		}
    }
    for (; i < linelimit; i++) // clear end of line
  403c44:	e5 8c c8 00 	l.sflts r12,r25
  403c48:	13 ff ff f8 	l.bf 403c28 <OsdWriteOffset+0x62c>
  403c4c:	bc 23 00 07 	l.sfnei r3,0x7
       SPI(invert);
	if(n==7 && (arrowmask & OSD_ARROW_RIGHT))	// Draw final arrow if needed
  403c50:	10 00 00 59 	l.bf 403db4 <OsdWriteOffset+0x7b8>
  403c54:	18 60 00 80 	l.movhi r3,0x80
  403c58:	a4 77 00 02 	l.andi r3,r23,0x2
  403c5c:	bc 03 00 00 	l.sfeqi r3,0x0
  403c60:	10 00 00 54 	l.bf 403db0 <OsdWriteOffset+0x7b4>
  403c64:	18 60 00 80 	l.movhi r3,0x80
	{
		SPI(0);
  403c68:	9c 40 00 00 	l.addi r2,r0,0x0
  403c6c:	a8 63 00 24 	l.ori r3,r3,0x24
  403c70:	d4 03 10 00 	l.sw 0x0(r3),r2
  403c74:	84 83 00 00 	l.lwz r4,0x0(r3)
		SPI(0);
  403c78:	d4 03 10 00 	l.sw 0x0(r3),r2
  403c7c:	84 83 00 00 	l.lwz r4,0x0(r3)
		SPI(0);
  403c80:	d4 03 10 00 	l.sw 0x0(r3),r2
  403c84:	84 83 00 00 	l.lwz r4,0x0(r3)
        p = &charfont[0x15][0];
  403c88:	18 80 00 41 	l.movhi r4,0x41
  403c8c:	a8 84 9b e4 	l.ori r4,r4,0x9be4
        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
  403c90:	8c a4 00 00 	l.lbz r5,0x0(r4)
  403c94:	e0 a5 38 08 	l.sll r5,r5,r7
  403c98:	d4 03 28 00 	l.sw 0x0(r3),r5
  403c9c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  403ca0:	8c a4 00 01 	l.lbz r5,0x1(r4)
  403ca4:	e0 a5 38 08 	l.sll r5,r5,r7
  403ca8:	d4 03 28 00 	l.sw 0x0(r3),r5
  403cac:	84 a3 00 00 	l.lwz r5,0x0(r3)
  403cb0:	8c a4 00 02 	l.lbz r5,0x2(r4)
  403cb4:	e0 a5 38 08 	l.sll r5,r5,r7
  403cb8:	d4 03 28 00 	l.sw 0x0(r3),r5
  403cbc:	84 a3 00 00 	l.lwz r5,0x0(r3)
  403cc0:	8c a4 00 03 	l.lbz r5,0x3(r4)
  403cc4:	e0 a5 38 08 	l.sll r5,r5,r7
  403cc8:	d4 03 28 00 	l.sw 0x0(r3),r5
  403ccc:	84 a3 00 00 	l.lwz r5,0x0(r3)
        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
  403cd0:	8c a4 00 04 	l.lbz r5,0x4(r4)
  403cd4:	e0 a5 38 08 	l.sll r5,r5,r7
  403cd8:	d4 03 28 00 	l.sw 0x0(r3),r5
  403cdc:	84 a3 00 00 	l.lwz r5,0x0(r3)
  403ce0:	8c a4 00 05 	l.lbz r5,0x5(r4)
  403ce4:	e0 a5 38 08 	l.sll r5,r5,r7
  403ce8:	d4 03 28 00 	l.sw 0x0(r3),r5
  403cec:	9c a4 00 06 	l.addi r5,r4,0x6
  403cf0:	84 c3 00 00 	l.lwz r6,0x0(r3)
  403cf4:	8c c5 00 00 	l.lbz r6,0x0(r5)
  403cf8:	e0 c6 38 08 	l.sll r6,r6,r7
  403cfc:	d4 03 30 00 	l.sw 0x0(r3),r6
  403d00:	8c a5 00 01 	l.lbz r5,0x1(r5)
  403d04:	e0 a5 38 08 	l.sll r5,r5,r7
  403d08:	84 c3 00 00 	l.lwz r6,0x0(r3)
  403d0c:	d4 03 28 00 	l.sw 0x0(r3),r5
  403d10:	84 a3 00 00 	l.lwz r5,0x0(r3)
        p = &charfont[0x11][0];
        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
  403d14:	8c a4 ff e0 	l.lbz r5,0xffffffe0(r4)
  403d18:	e0 a5 38 08 	l.sll r5,r5,r7
  403d1c:	d4 03 28 00 	l.sw 0x0(r3),r5
  403d20:	84 a3 00 00 	l.lwz r5,0x0(r3)
  403d24:	8c a4 ff e1 	l.lbz r5,0xffffffe1(r4)
  403d28:	e0 a5 38 08 	l.sll r5,r5,r7
  403d2c:	d4 03 28 00 	l.sw 0x0(r3),r5
  403d30:	84 a3 00 00 	l.lwz r5,0x0(r3)
  403d34:	8c a4 ff e2 	l.lbz r5,0xffffffe2(r4)
  403d38:	e0 a5 38 08 	l.sll r5,r5,r7
  403d3c:	d4 03 28 00 	l.sw 0x0(r3),r5
  403d40:	84 a3 00 00 	l.lwz r5,0x0(r3)
  403d44:	8c a4 ff e3 	l.lbz r5,0xffffffe3(r4)
  403d48:	e0 a5 38 08 	l.sll r5,r5,r7
  403d4c:	d4 03 28 00 	l.sw 0x0(r3),r5
  403d50:	84 a3 00 00 	l.lwz r5,0x0(r3)
        SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset); SPI(*p++<<offset);
  403d54:	8c a4 ff e4 	l.lbz r5,0xffffffe4(r4)
  403d58:	e0 a5 38 08 	l.sll r5,r5,r7
  403d5c:	d4 03 28 00 	l.sw 0x0(r3),r5
  403d60:	84 a3 00 00 	l.lwz r5,0x0(r3)
  403d64:	8c a4 ff e5 	l.lbz r5,0xffffffe5(r4)
  403d68:	e0 a5 38 08 	l.sll r5,r5,r7
  403d6c:	9c 84 ff e6 	l.addi r4,r4,0xffffffe6
  403d70:	d4 03 28 00 	l.sw 0x0(r3),r5
  403d74:	84 a3 00 00 	l.lwz r5,0x0(r3)
  403d78:	8c a4 00 00 	l.lbz r5,0x0(r4)
  403d7c:	e0 a5 38 08 	l.sll r5,r5,r7
  403d80:	d4 03 28 00 	l.sw 0x0(r3),r5
  403d84:	8c 84 00 01 	l.lbz r4,0x1(r4)
  403d88:	e0 e4 38 08 	l.sll r7,r4,r7
  403d8c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  403d90:	d4 03 38 00 	l.sw 0x0(r3),r7
  403d94:	84 83 00 00 	l.lwz r4,0x0(r3)
		SPI(0);
  403d98:	d4 03 10 00 	l.sw 0x0(r3),r2
  403d9c:	84 83 00 00 	l.lwz r4,0x0(r3)
		SPI(0);
  403da0:	d4 03 10 00 	l.sw 0x0(r3),r2
  403da4:	84 83 00 00 	l.lwz r4,0x0(r3)
		SPI(0);
  403da8:	d4 03 10 00 	l.sw 0x0(r3),r2
  403dac:	84 63 00 00 	l.lwz r3,0x0(r3)
		i+=22;
	}

    // deselect OSD SPI device
    DisableOsd();
  403db0:	18 60 00 80 	l.movhi r3,0x80
  403db4:	9c 80 00 40 	l.addi r4,r0,0x40
  403db8:	a8 63 00 20 	l.ori r3,r3,0x20
  403dbc:	d4 03 20 00 	l.sw 0x0(r3),r4

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}
  403dc0:	9c 21 00 2c 	l.addi r1,r1,0x2c
  403dc4:	84 41 ff d8 	l.lwz r2,0xffffffd8(r1)
  403dc8:	85 c1 ff dc 	l.lwz r14,0xffffffdc(r1)
  403dcc:	86 01 ff e0 	l.lwz r16,0xffffffe0(r1)
  403dd0:	86 41 ff e4 	l.lwz r18,0xffffffe4(r1)
  403dd4:	86 81 ff e8 	l.lwz r20,0xffffffe8(r1)
  403dd8:	86 c1 ff ec 	l.lwz r22,0xffffffec(r1)
  403ddc:	87 01 ff f0 	l.lwz r24,0xfffffff0(r1)
  403de0:	87 41 ff f4 	l.lwz r26,0xfffffff4(r1)
  403de4:	87 81 ff f8 	l.lwz r28,0xfffffff8(r1)
  403de8:	44 00 48 00 	l.jr r9
  403dec:	87 c1 ff fc 	l.lwz r30,0xfffffffc(r1)

00403df0 <OsdWrite>:
  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdWrite(unsigned char n, char *s, unsigned char invert, unsigned char stipple)
{
  403df0:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  403df4:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	OsdWriteOffset(n,s,invert,stipple,0);

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}
  403df8:	9c 21 00 04 	l.addi r1,r1,0x4
  403dfc:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)

void OsdWrite(unsigned char n, char *s, unsigned char invert, unsigned char stipple)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	OsdWriteOffset(n,s,invert,stipple,0);
  403e00:	03 ff fd ff 	l.j 4035fc <OsdWriteOffset>
  403e04:	9c e0 00 00 	l.addi r7,r0,0x0

00403e08 <OsdEnable>:
// enable displaying of OSD
void OsdEnable(unsigned char mode)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    EnableOsd();
  403e08:	18 80 00 80 	l.movhi r4,0x80
  403e0c:	9c c0 00 44 	l.addi r6,r0,0x44
  403e10:	a8 a4 00 20 	l.ori r5,r4,0x20
    //SPI(OSDCMDENABLE | (mode & DISABLE_KEYBOARD));
    SPI(OSD_CMD_OSD);
    SPI(0x01 | (mode & DISABLE_KEYBOARD));
  403e14:	a4 63 00 02 	l.andi r3,r3,0x2
// enable displaying of OSD
void OsdEnable(unsigned char mode)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    EnableOsd();
  403e18:	d4 05 30 00 	l.sw 0x0(r5),r6
    //SPI(OSDCMDENABLE | (mode & DISABLE_KEYBOARD));
    SPI(OSD_CMD_OSD);
  403e1c:	a8 84 00 24 	l.ori r4,r4,0x24
  403e20:	9c c0 00 28 	l.addi r6,r0,0x28
    SPI(0x01 | (mode & DISABLE_KEYBOARD));
  403e24:	a8 63 00 01 	l.ori r3,r3,0x1
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    EnableOsd();
    //SPI(OSDCMDENABLE | (mode & DISABLE_KEYBOARD));
    SPI(OSD_CMD_OSD);
  403e28:	d4 04 30 00 	l.sw 0x0(r4),r6
  403e2c:	84 c4 00 00 	l.lwz r6,0x0(r4)
    SPI(0x01 | (mode & DISABLE_KEYBOARD));
  403e30:	d4 04 18 00 	l.sw 0x0(r4),r3
  403e34:	84 64 00 00 	l.lwz r3,0x0(r4)
    DisableOsd();
  403e38:	9c 60 00 40 	l.addi r3,r0,0x40
  403e3c:	d4 05 18 00 	l.sw 0x0(r5),r3

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}
  403e40:	44 00 48 00 	l.jr r9
  403e44:	15 00 00 00 	l.nop 0x0

00403e48 <InfoMessage>:
  DEBUG_FUNC_OUT(DEBUG_F_MENU | DEBUG_L1);
}


void InfoMessage(char *message)
{
  403e48:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
  403e4c:	a8 43 00 00 	l.ori r2,r3,0x0
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L1);

    OsdWaitVBL();
    if (menustate != MENU_INFO)
  403e50:	18 60 00 41 	l.movhi r3,0x41
  DEBUG_FUNC_OUT(DEBUG_F_MENU | DEBUG_L1);
}


void InfoMessage(char *message)
{
  403e54:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L1);

    OsdWaitVBL();
    if (menustate != MENU_INFO)
  403e58:	a8 63 a3 89 	l.ori r3,r3,0xa389
  403e5c:	8c 63 00 00 	l.lbz r3,0x0(r3)
  403e60:	bc 03 00 3d 	l.sfeqi r3,0x3d
  403e64:	10 00 00 08 	l.bf 403e84 <InfoMessage+0x3c>
  403e68:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
    {
//        OsdClear();
 		OsdSetTitle("Message",0);
  403e6c:	18 60 00 41 	l.movhi r3,0x41
  403e70:	9c 80 00 00 	l.addi r4,r0,0x0
  403e74:	07 ff fd 5f 	l.jal 4033f0 <OsdSetTitle>
  403e78:	a8 63 77 87 	l.ori r3,r3,0x7787
        OsdEnable(0); // do not disable keyboard
  403e7c:	07 ff ff e3 	l.jal 403e08 <OsdEnable>
  403e80:	9c 60 00 00 	l.addi r3,r0,0x0
    }
    OsdWrite(0, "", 0,0);
  403e84:	9c 60 00 00 	l.addi r3,r0,0x0
  403e88:	18 80 00 41 	l.movhi r4,0x41
  403e8c:	a8 a3 00 00 	l.ori r5,r3,0x0
  403e90:	a8 c3 00 00 	l.ori r6,r3,0x0
  403e94:	07 ff ff d7 	l.jal 403df0 <OsdWrite>
  403e98:	a8 84 83 f7 	l.ori r4,r4,0x83f7
    OsdWrite(1, message, 0,0);
  403e9c:	9c a0 00 00 	l.addi r5,r0,0x0
  403ea0:	a8 82 00 00 	l.ori r4,r2,0x0
  403ea4:	a8 c5 00 00 	l.ori r6,r5,0x0
  403ea8:	9c 60 00 01 	l.addi r3,r0,0x1
  403eac:	07 ff ff d1 	l.jal 403df0 <OsdWrite>
  403eb0:	9c 40 00 3d 	l.addi r2,r0,0x3d
    OsdWrite(2, "", 0,0);
  403eb4:	9c a0 00 00 	l.addi r5,r0,0x0
  403eb8:	18 80 00 41 	l.movhi r4,0x41
  403ebc:	a8 c5 00 00 	l.ori r6,r5,0x0
  403ec0:	9c 60 00 02 	l.addi r3,r0,0x2
  403ec4:	07 ff ff cb 	l.jal 403df0 <OsdWrite>
  403ec8:	a8 84 83 f7 	l.ori r4,r4,0x83f7
    OsdWrite(3, "", 0,0);
  403ecc:	9c a0 00 00 	l.addi r5,r0,0x0
  403ed0:	18 80 00 41 	l.movhi r4,0x41
  403ed4:	a8 c5 00 00 	l.ori r6,r5,0x0
  403ed8:	9c 60 00 03 	l.addi r3,r0,0x3
  403edc:	07 ff ff c5 	l.jal 403df0 <OsdWrite>
  403ee0:	a8 84 83 f7 	l.ori r4,r4,0x83f7
    OsdWrite(4, "", 0,0);
  403ee4:	9c a0 00 00 	l.addi r5,r0,0x0
  403ee8:	18 80 00 41 	l.movhi r4,0x41
  403eec:	a8 c5 00 00 	l.ori r6,r5,0x0
  403ef0:	9c 60 00 04 	l.addi r3,r0,0x4
  403ef4:	07 ff ff bf 	l.jal 403df0 <OsdWrite>
  403ef8:	a8 84 83 f7 	l.ori r4,r4,0x83f7
    OsdWrite(5, "", 0,0);
  403efc:	9c a0 00 00 	l.addi r5,r0,0x0
  403f00:	18 80 00 41 	l.movhi r4,0x41
  403f04:	a8 c5 00 00 	l.ori r6,r5,0x0
  403f08:	9c 60 00 05 	l.addi r3,r0,0x5
  403f0c:	07 ff ff b9 	l.jal 403df0 <OsdWrite>
  403f10:	a8 84 83 f7 	l.ori r4,r4,0x83f7
    OsdWrite(6, "", 0,0);
  403f14:	9c a0 00 00 	l.addi r5,r0,0x0
  403f18:	18 80 00 41 	l.movhi r4,0x41
  403f1c:	a8 c5 00 00 	l.ori r6,r5,0x0
  403f20:	9c 60 00 06 	l.addi r3,r0,0x6
  403f24:	07 ff ff b3 	l.jal 403df0 <OsdWrite>
  403f28:	a8 84 83 f7 	l.ori r4,r4,0x83f7
    OsdWrite(7, "", 0,0);
  403f2c:	9c a0 00 00 	l.addi r5,r0,0x0
  403f30:	18 80 00 41 	l.movhi r4,0x41
  403f34:	9c 60 00 07 	l.addi r3,r0,0x7
  403f38:	a8 84 83 f7 	l.ori r4,r4,0x83f7
  403f3c:	07 ff ff ad 	l.jal 403df0 <OsdWrite>
  403f40:	a8 c5 00 00 	l.ori r6,r5,0x0
    menu_timer = GetTimer(1000);
  403f44:	07 ff f3 f9 	l.jal 400f28 <GetTimer>
  403f48:	9c 60 03 e8 	l.addi r3,r0,0x3e8
  403f4c:	18 60 00 41 	l.movhi r3,0x41
  403f50:	a8 63 fd 28 	l.ori r3,r3,0xfd28
  403f54:	d4 03 58 00 	l.sw 0x0(r3),r11
    menustate = MENU_INFO;
  403f58:	18 60 00 41 	l.movhi r3,0x41
  403f5c:	a8 63 a3 89 	l.ori r3,r3,0xa389
  403f60:	d8 03 10 00 	l.sb 0x0(r3),r2

  DEBUG_FUNC_OUT(DEBUG_F_MENU | DEBUG_L1);
}
  403f64:	9c 21 00 08 	l.addi r1,r1,0x8
  403f68:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  403f6c:	44 00 48 00 	l.jr r9
  403f70:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

00403f74 <OsdDisable>:
// disable displaying of OSD
void OsdDisable(void)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    EnableOsd();
  403f74:	18 60 00 80 	l.movhi r3,0x80
  403f78:	9c a0 00 44 	l.addi r5,r0,0x44
  403f7c:	a8 83 00 20 	l.ori r4,r3,0x20
}


// disable displaying of OSD
void OsdDisable(void)
{
  403f80:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    EnableOsd();
  403f84:	d4 04 28 00 	l.sw 0x0(r4),r5
    //SPI(OSDCMDDISABLE);
    SPI(OSD_CMD_OSD);
  403f88:	a8 63 00 24 	l.ori r3,r3,0x24
  403f8c:	9c a0 00 28 	l.addi r5,r0,0x28
    SPI(0x00);
  403f90:	9c 40 00 00 	l.addi r2,r0,0x0
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    EnableOsd();
    //SPI(OSDCMDDISABLE);
    SPI(OSD_CMD_OSD);
  403f94:	d4 03 28 00 	l.sw 0x0(r3),r5
}


// disable displaying of OSD
void OsdDisable(void)
{
  403f98:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    EnableOsd();
    //SPI(OSDCMDDISABLE);
    SPI(OSD_CMD_OSD);
  403f9c:	84 a3 00 00 	l.lwz r5,0x0(r3)
    SPI(0x00);
  403fa0:	d4 03 10 00 	l.sw 0x0(r3),r2
  403fa4:	84 63 00 00 	l.lwz r3,0x0(r3)
    DisableOsd();
  403fa8:	9c 60 00 40 	l.addi r3,r0,0x40
  403fac:	d4 04 18 00 	l.sw 0x0(r4),r3

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}
  403fb0:	9c 21 00 04 	l.addi r1,r1,0x4
  403fb4:	44 00 48 00 	l.jr r9
  403fb8:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

00403fbc <ConfigVideo>:
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
    //SPI(OSDCMDCFGFLT | ((hires & 0x03) << 2) | (lores & 0x03));
    SPI(OSD_CMD_VID);
    SPI(((hires & 0x03) << 4) | ((lores & 0x03)<<2) | (scanlines & 0x03));
  403fbc:	a4 84 00 03 	l.andi r4,r4,0x3

void ConfigVideo(unsigned char hires, unsigned char lores, unsigned char scanlines)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
  403fc0:	18 c0 00 80 	l.movhi r6,0x80
    //SPI(OSDCMDCFGFLT | ((hires & 0x03) << 2) | (lores & 0x03));
    SPI(OSD_CMD_VID);
    SPI(((hires & 0x03) << 4) | ((lores & 0x03)<<2) | (scanlines & 0x03));
  403fc4:	b8 84 00 02 	l.slli r4,r4,0x2
  403fc8:	a4 63 00 03 	l.andi r3,r3,0x3

void ConfigVideo(unsigned char hires, unsigned char lores, unsigned char scanlines)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
  403fcc:	a8 e6 00 20 	l.ori r7,r6,0x20
  403fd0:	9d 00 00 44 	l.addi r8,r0,0x44
    //SPI(OSDCMDCFGFLT | ((hires & 0x03) << 2) | (lores & 0x03));
    SPI(OSD_CMD_VID);
    SPI(((hires & 0x03) << 4) | ((lores & 0x03)<<2) | (scanlines & 0x03));
  403fd4:	a4 a5 00 03 	l.andi r5,r5,0x3
  403fd8:	b8 63 00 04 	l.slli r3,r3,0x4

void ConfigVideo(unsigned char hires, unsigned char lores, unsigned char scanlines)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
  403fdc:	d4 07 40 00 	l.sw 0x0(r7),r8
    //SPI(OSDCMDCFGFLT | ((hires & 0x03) << 2) | (lores & 0x03));
    SPI(OSD_CMD_VID);
  403fe0:	a8 c6 00 24 	l.ori r6,r6,0x24
  403fe4:	9d 00 00 34 	l.addi r8,r0,0x34
    SPI(((hires & 0x03) << 4) | ((lores & 0x03)<<2) | (scanlines & 0x03));
  403fe8:	e0 a4 28 04 	l.or r5,r4,r5
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
    //SPI(OSDCMDCFGFLT | ((hires & 0x03) << 2) | (lores & 0x03));
    SPI(OSD_CMD_VID);
  403fec:	d4 06 40 00 	l.sw 0x0(r6),r8
    SPI(((hires & 0x03) << 4) | ((lores & 0x03)<<2) | (scanlines & 0x03));
  403ff0:	e0 65 18 04 	l.or r3,r5,r3
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
    //SPI(OSDCMDCFGFLT | ((hires & 0x03) << 2) | (lores & 0x03));
    SPI(OSD_CMD_VID);
  403ff4:	85 06 00 00 	l.lwz r8,0x0(r6)
    SPI(((hires & 0x03) << 4) | ((lores & 0x03)<<2) | (scanlines & 0x03));
  403ff8:	d4 06 18 00 	l.sw 0x0(r6),r3
  403ffc:	84 66 00 00 	l.lwz r3,0x0(r6)
    DisableOsd();
  404000:	9c 60 00 40 	l.addi r3,r0,0x40
  404004:	d4 07 18 00 	l.sw 0x0(r7),r3

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L1);
}
  404008:	44 00 48 00 	l.jr r9
  40400c:	15 00 00 00 	l.nop 0x0

00404010 <ConfigMemory>:

void ConfigMemory(unsigned char memory)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
  404010:	18 80 00 80 	l.movhi r4,0x80
  404014:	9c c0 00 44 	l.addi r6,r0,0x44
  404018:	a8 a4 00 20 	l.ori r5,r4,0x20
    //EnableOsd();
    //SPI(OSDCMDCFGMEM | 0x04 | ((memory>>2) & 0x03));	//slow
    //DisableOsd();
    //EnableOsd();
    //SPI(OSDCMDCFGMEM | 0x08 | ((memory>>4) & 0x03));	//fast
    SPI(OSD_CMD_MEM);
  40401c:	a8 84 00 24 	l.ori r4,r4,0x24

void ConfigMemory(unsigned char memory)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
  404020:	d4 05 30 00 	l.sw 0x0(r5),r6
    //EnableOsd();
    //SPI(OSDCMDCFGMEM | 0x04 | ((memory>>2) & 0x03));	//slow
    //DisableOsd();
    //EnableOsd();
    //SPI(OSDCMDCFGMEM | 0x08 | ((memory>>4) & 0x03));	//fast
    SPI(OSD_CMD_MEM);
  404024:	9c c0 00 24 	l.addi r6,r0,0x24
  404028:	d4 04 30 00 	l.sw 0x0(r4),r6
  40402c:	84 c4 00 00 	l.lwz r6,0x0(r4)
    SPI(memory);
  404030:	d4 04 18 00 	l.sw 0x0(r4),r3
  404034:	84 64 00 00 	l.lwz r3,0x0(r4)
    DisableOsd();
  404038:	9c 60 00 40 	l.addi r3,r0,0x40
  40403c:	d4 05 18 00 	l.sw 0x0(r5),r3
    //EnableOsd(); TODO BUG probably!
//    SPI(OSDCMDCFGCPU|  0x00);	//68000  -  Don't want to disable '020 here!  AMR
//    DisableOsd();

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L1);
}
  404040:	44 00 48 00 	l.jr r9
  404044:	15 00 00 00 	l.nop 0x0

00404048 <ConfigCPU>:

void ConfigCPU(unsigned char cpu)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
  404048:	18 80 00 80 	l.movhi r4,0x80
  40404c:	9c c0 00 44 	l.addi r6,r0,0x44
  404050:	a8 a4 00 20 	l.ori r5,r4,0x20
    //SPI(OSDCMDCFGCPU | (cpu & 0x03));					//CPU
    SPI(OSD_CMD_CPU);
  404054:	a8 84 00 24 	l.ori r4,r4,0x24

void ConfigCPU(unsigned char cpu)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
  404058:	d4 05 30 00 	l.sw 0x0(r5),r6
    //SPI(OSDCMDCFGCPU | (cpu & 0x03));					//CPU
    SPI(OSD_CMD_CPU);
  40405c:	9c c0 00 14 	l.addi r6,r0,0x14
    SPI(cpu & 0x0f);
  404060:	a4 63 00 0f 	l.andi r3,r3,0xf
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
    //SPI(OSDCMDCFGCPU | (cpu & 0x03));					//CPU
    SPI(OSD_CMD_CPU);
  404064:	d4 04 30 00 	l.sw 0x0(r4),r6
  404068:	84 c4 00 00 	l.lwz r6,0x0(r4)
    SPI(cpu & 0x0f);
  40406c:	d4 04 18 00 	l.sw 0x0(r4),r3
  404070:	84 64 00 00 	l.lwz r3,0x0(r4)
    DisableOsd();
  404074:	9c 60 00 40 	l.addi r3,r0,0x40
  404078:	d4 05 18 00 	l.sw 0x0(r5),r3

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L1);
}
  40407c:	44 00 48 00 	l.jr r9
  404080:	15 00 00 00 	l.nop 0x0

00404084 <ConfigChipset>:

void ConfigChipset(unsigned char chipset)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
  404084:	18 80 00 80 	l.movhi r4,0x80
  404088:	9c c0 00 44 	l.addi r6,r0,0x44
  40408c:	a8 a4 00 20 	l.ori r5,r4,0x20
    //SPI(OSDCMDCFGCHP | (chipset & 0x0F));
    SPI(OSD_CMD_CHIP);
  404090:	a8 84 00 24 	l.ori r4,r4,0x24

void ConfigChipset(unsigned char chipset)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
  404094:	d4 05 30 00 	l.sw 0x0(r5),r6
    //SPI(OSDCMDCFGCHP | (chipset & 0x0F));
    SPI(OSD_CMD_CHIP);
  404098:	9c c0 00 04 	l.addi r6,r0,0x4
  40409c:	d4 04 30 00 	l.sw 0x0(r4),r6
  4040a0:	84 c4 00 00 	l.lwz r6,0x0(r4)
    SPI(chipset & 0xff);
  4040a4:	d4 04 18 00 	l.sw 0x0(r4),r3
  4040a8:	84 64 00 00 	l.lwz r3,0x0(r4)
    DisableOsd();
  4040ac:	9c 60 00 40 	l.addi r3,r0,0x40
  4040b0:	d4 05 18 00 	l.sw 0x0(r5),r3

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L1);
}
  4040b4:	44 00 48 00 	l.jr r9
  4040b8:	15 00 00 00 	l.nop 0x0

004040bc <ConfigFloppy>:

void ConfigFloppy(unsigned char drives, unsigned char speed)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
  4040bc:	18 a0 00 80 	l.movhi r5,0x80
    //SPI(OSDCMDCFGFLP | ((drives & 0x03) << 2) | (speed & 0x03));
    SPI(OSD_CMD_FLP);
    SPI(((drives & 0x03) << 2) | (speed & 0x03));
  4040c0:	a4 63 00 03 	l.andi r3,r3,0x3

void ConfigFloppy(unsigned char drives, unsigned char speed)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
  4040c4:	a8 c5 00 20 	l.ori r6,r5,0x20
  4040c8:	9c e0 00 44 	l.addi r7,r0,0x44
    //SPI(OSDCMDCFGFLP | ((drives & 0x03) << 2) | (speed & 0x03));
    SPI(OSD_CMD_FLP);
    SPI(((drives & 0x03) << 2) | (speed & 0x03));
  4040cc:	b8 63 00 02 	l.slli r3,r3,0x2
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
    //SPI(OSDCMDCFGFLP | ((drives & 0x03) << 2) | (speed & 0x03));
    SPI(OSD_CMD_FLP);
  4040d0:	a8 a5 00 24 	l.ori r5,r5,0x24
    SPI(((drives & 0x03) << 2) | (speed & 0x03));
  4040d4:	a4 84 00 03 	l.andi r4,r4,0x3

void ConfigFloppy(unsigned char drives, unsigned char speed)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
  4040d8:	d4 06 38 00 	l.sw 0x0(r6),r7
    //SPI(OSDCMDCFGFLP | ((drives & 0x03) << 2) | (speed & 0x03));
    SPI(OSD_CMD_FLP);
  4040dc:	d4 05 38 00 	l.sw 0x0(r5),r7
    SPI(((drives & 0x03) << 2) | (speed & 0x03));
  4040e0:	e0 84 18 04 	l.or r4,r4,r3
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
    //SPI(OSDCMDCFGFLP | ((drives & 0x03) << 2) | (speed & 0x03));
    SPI(OSD_CMD_FLP);
  4040e4:	84 e5 00 00 	l.lwz r7,0x0(r5)
    SPI(((drives & 0x03) << 2) | (speed & 0x03));
  4040e8:	d4 05 20 00 	l.sw 0x0(r5),r4
  4040ec:	84 65 00 00 	l.lwz r3,0x0(r5)
    DisableOsd();
  4040f0:	9c 60 00 40 	l.addi r3,r0,0x40
  4040f4:	d4 06 18 00 	l.sw 0x0(r6),r3

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L1);
}
  4040f8:	44 00 48 00 	l.jr r9
  4040fc:	15 00 00 00 	l.nop 0x0

00404100 <ConfigIDE>:

void ConfigIDE(unsigned char gayle, unsigned char master, unsigned char slave)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
  404100:	18 c0 00 80 	l.movhi r6,0x80
  404104:	9d 00 00 44 	l.addi r8,r0,0x44
  404108:	a8 e6 00 20 	l.ori r7,r6,0x20
    //SPI(OSDCMDCFGIDE | (slave ? 4 : 0) | (master ? 2 : 0) | (gayle ? 1 : 0));
    SPI(OSD_CMD_HDD);
  40410c:	a8 c6 00 24 	l.ori r6,r6,0x24

void ConfigIDE(unsigned char gayle, unsigned char master, unsigned char slave)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
  404110:	d4 07 40 00 	l.sw 0x0(r7),r8
    //SPI(OSDCMDCFGIDE | (slave ? 4 : 0) | (master ? 2 : 0) | (gayle ? 1 : 0));
    SPI(OSD_CMD_HDD);
  404114:	9c e0 00 54 	l.addi r7,r0,0x54
    SPI((slave ? 4 : 0) | (master ? 2 : 0) | (gayle ? 1 : 0));
  404118:	bc 05 00 00 	l.sfeqi r5,0x0
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
    //SPI(OSDCMDCFGIDE | (slave ? 4 : 0) | (master ? 2 : 0) | (gayle ? 1 : 0));
    SPI(OSD_CMD_HDD);
  40411c:	d4 06 38 00 	l.sw 0x0(r6),r7
  404120:	84 c6 00 00 	l.lwz r6,0x0(r6)
    SPI((slave ? 4 : 0) | (master ? 2 : 0) | (gayle ? 1 : 0));
  404124:	10 00 00 03 	l.bf 404130 <ConfigIDE+0x30>
  404128:	bc 04 00 00 	l.sfeqi r4,0x0
  40412c:	9c a0 00 04 	l.addi r5,r0,0x4
  404130:	10 00 00 03 	l.bf 40413c <ConfigIDE+0x3c>
  404134:	15 00 00 00 	l.nop 0x0
  404138:	9c 80 00 02 	l.addi r4,r0,0x2
  40413c:	e0 60 18 02 	l.sub r3,r0,r3
  404140:	18 c0 00 80 	l.movhi r6,0x80
  404144:	b8 63 00 5f 	l.srli r3,r3,0x1f
  404148:	a8 e6 00 24 	l.ori r7,r6,0x24
    DisableOsd();
  40414c:	a8 c6 00 20 	l.ori r6,r6,0x20
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
    //SPI(OSDCMDCFGIDE | (slave ? 4 : 0) | (master ? 2 : 0) | (gayle ? 1 : 0));
    SPI(OSD_CMD_HDD);
    SPI((slave ? 4 : 0) | (master ? 2 : 0) | (gayle ? 1 : 0));
  404150:	e0 a5 18 04 	l.or r5,r5,r3
  404154:	e0 85 20 04 	l.or r4,r5,r4
  404158:	d4 07 20 00 	l.sw 0x0(r7),r4
  40415c:	84 67 00 00 	l.lwz r3,0x0(r7)
    DisableOsd();
  404160:	9c 60 00 40 	l.addi r3,r0,0x40
  404164:	d4 06 18 00 	l.sw 0x0(r6),r3

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L1);
}
  404168:	44 00 48 00 	l.jr r9
  40416c:	15 00 00 00 	l.nop 0x0

00404170 <OsdGetCtrl>:
}


// get key status
unsigned char OsdGetCtrl(void)
{
  404170:	d7 e1 17 f0 	l.sw 0xfffffff0(r1),r2
    static unsigned long repeat;
    static unsigned char repeat2;
    unsigned char c1,c;

    // send command and get current ctrl status
    EnableOsd();
  404174:	18 40 00 80 	l.movhi r2,0x80
  404178:	9c 80 00 44 	l.addi r4,r0,0x44
  40417c:	a8 62 00 20 	l.ori r3,r2,0x20
}


// get key status
unsigned char OsdGetCtrl(void)
{
  404180:	d7 e1 77 f4 	l.sw 0xfffffff4(r1),r14
  404184:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  404188:	d7 e1 87 f8 	l.sw 0xfffffff8(r1),r16
    static unsigned long repeat;
    static unsigned char repeat2;
    unsigned char c1,c;

    // send command and get current ctrl status
    EnableOsd();
  40418c:	d4 03 20 00 	l.sw 0x0(r3),r4
    c1 = SPI(OSD_CMD_READ);
  404190:	a8 42 00 24 	l.ori r2,r2,0x24
  404194:	9c 80 00 00 	l.addi r4,r0,0x0
}


// get key status
unsigned char OsdGetCtrl(void)
{
  404198:	9c 21 ff f0 	l.addi r1,r1,0xfffffff0
    static unsigned char repeat2;
    unsigned char c1,c;

    // send command and get current ctrl status
    EnableOsd();
    c1 = SPI(OSD_CMD_READ);
  40419c:	d4 02 20 00 	l.sw 0x0(r2),r4
    DisableOsd();
  4041a0:	9c 80 00 40 	l.addi r4,r0,0x40
    static unsigned char repeat2;
    unsigned char c1,c;

    // send command and get current ctrl status
    EnableOsd();
    c1 = SPI(OSD_CMD_READ);
  4041a4:	84 42 00 00 	l.lwz r2,0x0(r2)
    DisableOsd();
  4041a8:	d4 03 20 00 	l.sw 0x0(r3),r4

    // add front menu button
    if (!CheckButton())
        delay = GetTimer(BUTTONDELAY);
  4041ac:	9c 60 00 14 	l.addi r3,r0,0x14
  4041b0:	07 ff f3 5e 	l.jal 400f28 <GetTimer>
  4041b4:	a4 42 00 ff 	l.andi r2,r2,0xff
  4041b8:	18 60 00 42 	l.movhi r3,0x42
  4041bc:	a8 63 0a 14 	l.ori r3,r3,0xa14
  4041c0:	d4 03 58 00 	l.sw 0x0(r3),r11
        delay = GetTimer(-1);
    }

    // generate normal "key-pressed" event
    c = 0;
    if (c1 != c2)
  4041c4:	18 60 00 42 	l.movhi r3,0x42
  4041c8:	a8 63 0a 18 	l.ori r3,r3,0xa18
  4041cc:	8c 63 00 00 	l.lbz r3,0x0(r3)
  4041d0:	e4 23 10 00 	l.sfne r3,r2
  4041d4:	10 00 00 03 	l.bf 4041e0 <OsdGetCtrl+0x70>
  4041d8:	a9 c2 00 00 	l.ori r14,r2,0x0
        c1 = KEY_MENU;
        delay = GetTimer(-1);
    }

    // generate normal "key-pressed" event
    c = 0;
  4041dc:	9d c0 00 00 	l.addi r14,r0,0x0
    if (c1 != c2)
       c = c1;

    c2 = c1;
  4041e0:	18 60 00 42 	l.movhi r3,0x42
  4041e4:	1a 00 00 42 	l.movhi r16,0x42
  4041e8:	a8 63 0a 18 	l.ori r3,r3,0xa18
  4041ec:	d8 03 10 00 	l.sb 0x0(r3),r2

    // generate repeat "key-pressed" events
    if (c1 & KEY_UPSTROKE)
  4041f0:	b8 62 00 18 	l.slli r3,r2,0x18
  4041f4:	bd 63 00 00 	l.sfgesi r3,0x0
  4041f8:	10 00 00 06 	l.bf 404210 <OsdGetCtrl+0xa0>
  4041fc:	aa 10 0a 10 	l.ori r16,r16,0xa10
    {
        repeat = GetTimer(REPEATDELAY);
  404200:	07 ff f3 4a 	l.jal 400f28 <GetTimer>
  404204:	9c 60 01 f4 	l.addi r3,r0,0x1f4
  404208:	00 00 00 26 	l.j 4042a0 <OsdGetCtrl+0x130>
  40420c:	d4 10 58 00 	l.sw 0x0(r16),r11
    }
    else if (CheckTimer(repeat))
  404210:	07 ff f3 4c 	l.jal 400f40 <CheckTimer>
  404214:	84 70 00 00 	l.lwz r3,0x0(r16)
  404218:	bc 0b 00 00 	l.sfeqi r11,0x0
  40421c:	10 00 00 21 	l.bf 4042a0 <OsdGetCtrl+0x130>
  404220:	15 00 00 00 	l.nop 0x0
    {
        repeat = GetTimer(REPEATRATE);
  404224:	07 ff f3 41 	l.jal 400f28 <GetTimer>
  404228:	9c 60 00 32 	l.addi r3,r0,0x32
        if (c1 == KEY_UP || c1 == KEY_DOWN)
  40422c:	9c 62 ff b4 	l.addi r3,r2,0xffffffb4
  404230:	a4 63 00 ff 	l.andi r3,r3,0xff
  404234:	bc a3 00 01 	l.sfleui r3,0x1
  404238:	0c 00 00 03 	l.bnf 404244 <OsdGetCtrl+0xd4>
  40423c:	d4 10 58 00 	l.sw 0x0(r16),r11
  404240:	a9 c2 00 00 	l.ori r14,r2,0x0
           c = c1;
        repeat2++;
  404244:	18 60 00 42 	l.movhi r3,0x42
  404248:	a8 63 0a 0c 	l.ori r3,r3,0xa0c
  40424c:	8c 83 00 00 	l.lbz r4,0x0(r3)
  404250:	9c 84 00 01 	l.addi r4,r4,0x1
  404254:	a4 84 00 ff 	l.andi r4,r4,0xff
        if (repeat2 == 2)
  404258:	bc 24 00 02 	l.sfnei r4,0x2
  40425c:	10 00 00 11 	l.bf 4042a0 <OsdGetCtrl+0x130>
  404260:	d8 03 20 00 	l.sb 0x0(r3),r4
        {
            repeat2 = 0;
  404264:	9c 80 00 00 	l.addi r4,r0,0x0
  404268:	d8 03 20 00 	l.sb 0x0(r3),r4
            if (c1 == KEY_PGUP || c1 == KEY_PGDN || GetASCIIKey(c1))
  40426c:	9c 62 ff 94 	l.addi r3,r2,0xffffff94
  404270:	a4 63 00 ff 	l.andi r3,r3,0xff
  404274:	bc a3 00 01 	l.sfleui r3,0x1
  404278:	10 00 00 09 	l.bf 40429c <OsdGetCtrl+0x12c>
  40427c:	18 80 00 41 	l.movhi r4,0x41
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    if (keycode & KEY_UPSTROKE)
       return 0;

    return keycode_table[keycode & 0x7F];
  404280:	a4 62 00 7f 	l.andi r3,r2,0x7f
  404284:	a8 84 73 84 	l.ori r4,r4,0x7384
  404288:	e0 63 20 00 	l.add r3,r3,r4
           c = c1;
        repeat2++;
        if (repeat2 == 2)
        {
            repeat2 = 0;
            if (c1 == KEY_PGUP || c1 == KEY_PGDN || GetASCIIKey(c1))
  40428c:	90 63 00 00 	l.lbs r3,0x0(r3)
  404290:	bc 23 00 00 	l.sfnei r3,0x0
  404294:	0c 00 00 03 	l.bnf 4042a0 <OsdGetCtrl+0x130>
  404298:	15 00 00 00 	l.nop 0x0
  40429c:	a9 c2 00 00 	l.ori r14,r2,0x0
    }

    return(c);

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}
  4042a0:	9c 21 00 10 	l.addi r1,r1,0x10
  4042a4:	a9 6e 00 00 	l.ori r11,r14,0x0
  4042a8:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  4042ac:	84 41 ff f0 	l.lwz r2,0xfffffff0(r1)
  4042b0:	85 c1 ff f4 	l.lwz r14,0xfffffff4(r1)
  4042b4:	44 00 48 00 	l.jr r9
  4042b8:	86 01 ff f8 	l.lwz r16,0xfffffff8(r1)

004042bc <ScrollReset>:
  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void ScrollReset()
{
  4042bc:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  4042c0:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    scroll_timer = GetTimer(SCROLL_DELAY); // set timer to start name scrolling after predefined time delay
  4042c4:	9c 60 03 e8 	l.addi r3,r0,0x3e8
  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void ScrollReset()
{
  4042c8:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    scroll_timer = GetTimer(SCROLL_DELAY); // set timer to start name scrolling after predefined time delay
  4042cc:	07 ff f3 17 	l.jal 400f28 <GetTimer>
  4042d0:	9c 40 00 00 	l.addi r2,r0,0x0
  4042d4:	18 60 00 42 	l.movhi r3,0x42
  4042d8:	a8 63 0a 04 	l.ori r3,r3,0xa04
  4042dc:	d4 03 58 00 	l.sw 0x0(r3),r11
    scroll_offset = 0; // start scrolling from the start
  4042e0:	18 60 00 42 	l.movhi r3,0x42
  4042e4:	a8 63 0a 08 	l.ori r3,r3,0xa08
  4042e8:	d4 03 10 00 	l.sw 0x0(r3),r2

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}
  4042ec:	9c 21 00 08 	l.addi r1,r1,0x8
  4042f0:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  4042f4:	44 00 48 00 	l.jr r9
  4042f8:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

004042fc <scani>:
}

// parses decimal or hex number
 char *scani(char *s, int *f)
{
  if (*s == '0' && *(s+1) == 'x') {
  4042fc:	90 a3 00 00 	l.lbs r5,0x0(r3)
  404300:	bc 25 00 30 	l.sfnei r5,0x30
  404304:	10 00 00 31 	l.bf 4043c8 <scani+0xcc>
  404308:	bc 25 00 2d 	l.sfnei r5,0x2d
  40430c:	90 a3 00 01 	l.lbs r5,0x1(r3)
  404310:	bc 25 00 78 	l.sfnei r5,0x78
  404314:	10 00 00 31 	l.bf 4043d8 <scani+0xdc>
  404318:	9c c0 00 00 	l.addi r6,r0,0x0
    s += 2;
  40431c:	00 00 00 0e 	l.j 404354 <scani+0x58>
  404320:	9c 63 00 02 	l.addi r3,r3,0x2
char *scanh(char *s, unsigned *f)
{
  int d = 0;
  while ((*s >= '0' && *s <= '9') || (*s >= 'A' && *s <= 'F') || (*s >= 'a' && *s <= 'f')) {
    int t;
    if (*s >= 'a')
  404324:	10 00 00 04 	l.bf 404334 <scani+0x38>
  404328:	bd a5 00 40 	l.sflesi r5,0x40
      t = *s - 'a' + 10;
  40432c:	00 00 00 07 	l.j 404348 <scani+0x4c>
  404330:	9c a5 ff a9 	l.addi r5,r5,0xffffffa9
    else if (*s >= 'A')
  404334:	10 00 00 04 	l.bf 404344 <scani+0x48>
  404338:	15 00 00 00 	l.nop 0x0
      t = *s - 'A' + 10;
  40433c:	00 00 00 03 	l.j 404348 <scani+0x4c>
  404340:	9c a5 ff c9 	l.addi r5,r5,0xffffffc9
    else
      t = *s - '0';
  404344:	9c a5 ff d0 	l.addi r5,r5,0xffffffd0

    d = d * 16 + t;
  404348:	b8 c6 00 04 	l.slli r6,r6,0x4
    s++;
  40434c:	9c 63 00 01 	l.addi r3,r3,0x1
    else if (*s >= 'A')
      t = *s - 'A' + 10;
    else
      t = *s - '0';

    d = d * 16 + t;
  404350:	e0 c5 30 00 	l.add r6,r5,r6

// parses hex number
char *scanh(char *s, unsigned *f)
{
  int d = 0;
  while ((*s >= '0' && *s <= '9') || (*s >= 'A' && *s <= 'F') || (*s >= 'a' && *s <= 'f')) {
  404354:	90 a3 00 00 	l.lbs r5,0x0(r3)
  404358:	a4 e5 00 ff 	l.andi r7,r5,0xff
  40435c:	9d 07 ff bf 	l.addi r8,r7,0xffffffbf
  404360:	a5 08 00 ff 	l.andi r8,r8,0xff
  404364:	bc a8 00 05 	l.sfleui r8,0x5
  404368:	10 00 00 03 	l.bf 404374 <scani+0x78>
  40436c:	9d 60 00 01 	l.addi r11,r0,0x1
  404370:	9d 60 00 00 	l.addi r11,r0,0x0
  404374:	a5 6b 00 ff 	l.andi r11,r11,0xff
  404378:	bc 2b 00 00 	l.sfnei r11,0x0
  40437c:	13 ff ff ea 	l.bf 404324 <scani+0x28>
  404380:	bd a5 00 60 	l.sflesi r5,0x60
  404384:	9d 87 ff d0 	l.addi r12,r7,0xffffffd0
  404388:	a5 8c 00 ff 	l.andi r12,r12,0xff
  40438c:	bc ac 00 09 	l.sfleui r12,0x9
  404390:	10 00 00 03 	l.bf 40439c <scani+0xa0>
  404394:	9d 00 00 01 	l.addi r8,r0,0x1
  404398:	a9 0b 00 00 	l.ori r8,r11,0x0
  40439c:	a5 08 00 ff 	l.andi r8,r8,0xff
  4043a0:	bc 28 00 00 	l.sfnei r8,0x0
  4043a4:	13 ff ff e0 	l.bf 404324 <scani+0x28>
  4043a8:	bd a5 00 60 	l.sflesi r5,0x60
  4043ac:	9c e7 ff 9f 	l.addi r7,r7,0xffffff9f
  4043b0:	a4 e7 00 ff 	l.andi r7,r7,0xff
  4043b4:	bc a7 00 05 	l.sfleui r7,0x5
  4043b8:	13 ff ff db 	l.bf 404324 <scani+0x28>
  4043bc:	bd a5 00 60 	l.sflesi r5,0x60
// parses decimal or hex number
 char *scani(char *s, int *f)
{
  if (*s == '0' && *(s+1) == 'x') {
    s += 2;
    return scanh(s, (unsigned *)f);
  4043c0:	00 00 00 17 	l.j 40441c <scani+0x120>
  4043c4:	d4 04 30 00 	l.sw 0x0(r4),r6
// parses decimal number
char *scand(char *s, int *f)
{
  int sign = 0;
  int d = 0;
  if (*s == '-') {
  4043c8:	10 00 00 04 	l.bf 4043d8 <scani+0xdc>
  4043cc:	9c c0 00 00 	l.addi r6,r0,0x0
    sign = 1;
    s++;
  4043d0:	9c 63 00 01 	l.addi r3,r3,0x1
char *scand(char *s, int *f)
{
  int sign = 0;
  int d = 0;
  if (*s == '-') {
    sign = 1;
  4043d4:	9c c0 00 01 	l.addi r6,r0,0x1
//// functions ////

// parses decimal number
char *scand(char *s, int *f)
{
  int sign = 0;
  4043d8:	00 00 00 07 	l.j 4043f4 <scani+0xf8>
  4043dc:	9c a0 00 00 	l.addi r5,r0,0x0
  if (*s == '-') {
    sign = 1;
    s++;
  }
  while (*s >= '0' && *s <= '9') {
    d = d * 10 + *s - '0';
  4043e0:	e1 05 28 00 	l.add r8,r5,r5
  4043e4:	b8 a5 00 03 	l.slli r5,r5,0x3
    s++;
  4043e8:	9c 63 00 01 	l.addi r3,r3,0x1
  if (*s == '-') {
    sign = 1;
    s++;
  }
  while (*s >= '0' && *s <= '9') {
    d = d * 10 + *s - '0';
  4043ec:	e0 a8 28 00 	l.add r5,r8,r5
  4043f0:	e0 a7 28 00 	l.add r5,r7,r5
  int d = 0;
  if (*s == '-') {
    sign = 1;
    s++;
  }
  while (*s >= '0' && *s <= '9') {
  4043f4:	90 e3 00 00 	l.lbs r7,0x0(r3)
  4043f8:	9c e7 ff d0 	l.addi r7,r7,0xffffffd0
  4043fc:	a5 07 00 ff 	l.andi r8,r7,0xff
  404400:	bc a8 00 09 	l.sfleui r8,0x9
  404404:	13 ff ff f7 	l.bf 4043e0 <scani+0xe4>
  404408:	bc 06 00 00 	l.sfeqi r6,0x0
    d = d * 10 + *s - '0';
    s++;
  }
  *f = sign ? -d : d;
  40440c:	10 00 00 03 	l.bf 404418 <scani+0x11c>
  404410:	15 00 00 00 	l.nop 0x0
  404414:	e0 a0 28 02 	l.sub r5,r0,r5
  404418:	d4 04 28 00 	l.sw 0x0(r4),r5
  if (*s == '0' && *(s+1) == 'x') {
    s += 2;
    return scanh(s, (unsigned *)f);
  }
  return scand(s, f);
}
  40441c:	44 00 48 00 	l.jr r9
  404420:	a9 63 00 00 	l.ori r11,r3,0x0

00404424 <next_word>:

// next_word()
char *next_word(const char *c)
{
  while ((*c!=0) && (*c!=' ')) c++;
  404424:	00 00 00 03 	l.j 404430 <next_word+0xc>
  404428:	90 83 00 00 	l.lbs r4,0x0(r3)
  40442c:	90 83 00 00 	l.lbs r4,0x0(r3)
  404430:	ac a4 00 20 	l.xori r5,r4,0x20
  404434:	a4 a5 00 ff 	l.andi r5,r5,0xff
  404438:	bc 05 00 00 	l.sfeqi r5,0x0
  40443c:	10 00 00 08 	l.bf 40445c <next_word+0x38>
  404440:	a4 84 00 ff 	l.andi r4,r4,0xff
  404444:	bc 24 00 00 	l.sfnei r4,0x0
  404448:	13 ff ff f9 	l.bf 40442c <next_word+0x8>
  40444c:	9c 63 00 01 	l.addi r3,r3,0x1
  404450:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  while (*c==' ') c++;
  404454:	00 00 00 03 	l.j 404460 <next_word+0x3c>
  404458:	90 83 00 00 	l.lbs r4,0x0(r3)
  40445c:	90 83 00 00 	l.lbs r4,0x0(r3)
  404460:	bc 04 00 20 	l.sfeqi r4,0x20
  404464:	13 ff ff fe 	l.bf 40445c <next_word+0x38>
  404468:	9c 63 00 01 	l.addi r3,r3,0x1
  if (*c==0) return NULL;
  40446c:	bc 24 00 00 	l.sfnei r4,0x0
  404470:	10 00 00 03 	l.bf 40447c <next_word+0x58>
  404474:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  404478:	a8 64 00 00 	l.ori r3,r4,0x0
  else return c;
}
  40447c:	44 00 48 00 	l.jr r9
  404480:	a9 63 00 00 	l.ori r11,r3,0x0

00404484 <sprintf>:

#include <stdio.h>
#include <stdarg.h>

int sprintf(char *buffer, const char *format, ...)
{
  404484:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  404488:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  40448c:	a8 a4 00 00 	l.ori r5,r4,0x0
	va_list ap;
	int rv;

	va_start(ap, format);
	rv = vsnprintf(buffer, ~(size_t) 0, format, ap);
  404490:	9c c1 00 04 	l.addi r6,r1,0x4
  404494:	07 ff ef d1 	l.jal 4003d8 <vsnprintf>
  404498:	9c 80 ff ff 	l.addi r4,r0,0xffffffff
	va_end(ap);

	return rv;
}
  40449c:	9c 21 00 04 	l.addi r1,r1,0x4
  4044a0:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  4044a4:	44 00 48 00 	l.jr r9
  4044a8:	15 00 00 00 	l.nop 0x0

004044ac <ErrorMessage>:
}


/*  Error Message */
void ErrorMessage(const char *message, unsigned char code)
{
  4044ac:	d7 e1 17 f0 	l.sw 0xfffffff0(r1),r2
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L1);

    if (menustate == MENU_NONE2)
  4044b0:	18 40 00 41 	l.movhi r2,0x41
}


/*  Error Message */
void ErrorMessage(const char *message, unsigned char code)
{
  4044b4:	d7 e1 77 f4 	l.sw 0xfffffff4(r1),r14
  4044b8:	d7 e1 87 f8 	l.sw 0xfffffff8(r1),r16
  4044bc:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L1);

    if (menustate == MENU_NONE2)
  4044c0:	a8 42 a3 89 	l.ori r2,r2,0xa389
}


/*  Error Message */
void ErrorMessage(const char *message, unsigned char code)
{
  4044c4:	aa 03 00 00 	l.ori r16,r3,0x0
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L1);

    if (menustate == MENU_NONE2)
  4044c8:	8c 62 00 00 	l.lbz r3,0x0(r2)
}


/*  Error Message */
void ErrorMessage(const char *message, unsigned char code)
{
  4044cc:	9c 21 ff ec 	l.addi r1,r1,0xffffffec
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L1);

    if (menustate == MENU_NONE2)
  4044d0:	bc 23 00 01 	l.sfnei r3,0x1
  4044d4:	10 00 00 04 	l.bf 4044e4 <ErrorMessage+0x38>
  4044d8:	a9 c4 00 00 	l.ori r14,r4,0x0
        menustate = MENU_ERROR;
  4044dc:	9c 60 00 3c 	l.addi r3,r0,0x3c
  4044e0:	d8 02 18 00 	l.sb 0x0(r2),r3

    if (menustate == MENU_ERROR)
  4044e4:	18 40 00 41 	l.movhi r2,0x41
  4044e8:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4044ec:	8c 42 00 00 	l.lbz r2,0x0(r2)
  4044f0:	bc 22 00 3c 	l.sfnei r2,0x3c
  4044f4:	10 00 00 4d 	l.bf 404628 <ErrorMessage+0x17c>
  4044f8:	18 60 00 41 	l.movhi r3,0x41
    {
//        OsdClear();
 		OsdSetTitle("Error",0);
  4044fc:	9c 80 00 00 	l.addi r4,r0,0x0
  404500:	a8 63 77 8f 	l.ori r3,r3,0x778f
  404504:	07 ff fb bb 	l.jal 4033f0 <OsdSetTitle>
  404508:	18 40 00 41 	l.movhi r2,0x41
        OsdWrite(0, "         *** ERROR ***", 1,0);
  40450c:	9c 60 00 00 	l.addi r3,r0,0x0
  404510:	18 80 00 41 	l.movhi r4,0x41
  404514:	a8 c3 00 00 	l.ori r6,r3,0x0
  404518:	a8 84 77 95 	l.ori r4,r4,0x7795
  40451c:	9c a0 00 01 	l.addi r5,r0,0x1
  404520:	07 ff fe 34 	l.jal 403df0 <OsdWrite>
  404524:	a8 42 cd 18 	l.ori r2,r2,0xcd18
	    OsdWrite(1, "", 0,0);
  404528:	9c a0 00 00 	l.addi r5,r0,0x0
  40452c:	18 80 00 41 	l.movhi r4,0x41
  404530:	a8 c5 00 00 	l.ori r6,r5,0x0
  404534:	9c 60 00 01 	l.addi r3,r0,0x1
  404538:	07 ff fe 2e 	l.jal 403df0 <OsdWrite>
  40453c:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        strncpy(s, message, 32);
  404540:	18 60 00 41 	l.movhi r3,0x41
  404544:	a8 90 00 00 	l.ori r4,r16,0x0
  404548:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40454c:	07 ff ef 88 	l.jal 40036c <strncpy>
  404550:	9c a0 00 20 	l.addi r5,r0,0x20
        s[32] = 0;
  404554:	9c 60 00 00 	l.addi r3,r0,0x0
        OsdWrite(2, s, 0,0);
  404558:	9c a0 00 00 	l.addi r5,r0,0x0
//        OsdClear();
 		OsdSetTitle("Error",0);
        OsdWrite(0, "         *** ERROR ***", 1,0);
	    OsdWrite(1, "", 0,0);
        strncpy(s, message, 32);
        s[32] = 0;
  40455c:	d8 02 18 20 	l.sb 0x20(r2),r3
        OsdWrite(2, s, 0,0);
  404560:	a8 82 00 00 	l.ori r4,r2,0x0
  404564:	9c 60 00 02 	l.addi r3,r0,0x2
  404568:	07 ff fe 22 	l.jal 403df0 <OsdWrite>
  40456c:	a8 c5 00 00 	l.ori r6,r5,0x0

        s[0] = 0;
  404570:	9c 60 00 00 	l.addi r3,r0,0x0
        if (code)
  404574:	bc 0e 00 00 	l.sfeqi r14,0x0
  404578:	10 00 00 07 	l.bf 404594 <ErrorMessage+0xe8>
  40457c:	d8 02 18 00 	l.sb 0x0(r2),r3
            sprintf(s, "    #%d", code);
  404580:	18 80 00 41 	l.movhi r4,0x41
  404584:	a8 62 00 00 	l.ori r3,r2,0x0
  404588:	a8 84 77 ac 	l.ori r4,r4,0x77ac
  40458c:	07 ff ff be 	l.jal 404484 <sprintf>
  404590:	d4 01 70 00 	l.sw 0x0(r1),r14

	    OsdWrite(3, "", 0,0);
  404594:	9c a0 00 00 	l.addi r5,r0,0x0
  404598:	18 80 00 41 	l.movhi r4,0x41
  40459c:	a8 c5 00 00 	l.ori r6,r5,0x0
  4045a0:	9c 60 00 03 	l.addi r3,r0,0x3
  4045a4:	07 ff fe 13 	l.jal 403df0 <OsdWrite>
  4045a8:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(4, s, 0,0);
  4045ac:	9c a0 00 00 	l.addi r5,r0,0x0
  4045b0:	18 80 00 41 	l.movhi r4,0x41
  4045b4:	a8 c5 00 00 	l.ori r6,r5,0x0
  4045b8:	9c 60 00 04 	l.addi r3,r0,0x4
  4045bc:	07 ff fe 0d 	l.jal 403df0 <OsdWrite>
  4045c0:	a8 84 cd 18 	l.ori r4,r4,0xcd18

	    OsdWrite(5, "", 0,0);
  4045c4:	9c a0 00 00 	l.addi r5,r0,0x0
  4045c8:	18 80 00 41 	l.movhi r4,0x41
  4045cc:	a8 c5 00 00 	l.ori r6,r5,0x0
  4045d0:	9c 60 00 05 	l.addi r3,r0,0x5
  4045d4:	07 ff fe 07 	l.jal 403df0 <OsdWrite>
  4045d8:	a8 84 83 f7 	l.ori r4,r4,0x83f7
	    OsdWrite(6, "", 0,0);
  4045dc:	9c a0 00 00 	l.addi r5,r0,0x0
  4045e0:	18 80 00 41 	l.movhi r4,0x41
  4045e4:	a8 c5 00 00 	l.ori r6,r5,0x0
  4045e8:	9c 60 00 06 	l.addi r3,r0,0x6
  4045ec:	07 ff fe 01 	l.jal 403df0 <OsdWrite>
  4045f0:	a8 84 83 f7 	l.ori r4,r4,0x83f7
	    OsdWrite(7, "", 0,0);
  4045f4:	9c a0 00 00 	l.addi r5,r0,0x0
  4045f8:	18 80 00 41 	l.movhi r4,0x41
  4045fc:	9c 60 00 07 	l.addi r3,r0,0x7
  404600:	a8 84 83 f7 	l.ori r4,r4,0x83f7
  404604:	07 ff fd fb 	l.jal 403df0 <OsdWrite>
  404608:	a8 c5 00 00 	l.ori r6,r5,0x0

        OsdEnable(0); // do not disable KEYBOARD
    }

  DEBUG_FUNC_OUT(DEBUG_F_MENU | DEBUG_L1);
}
  40460c:	9c 21 00 14 	l.addi r1,r1,0x14

	    OsdWrite(5, "", 0,0);
	    OsdWrite(6, "", 0,0);
	    OsdWrite(7, "", 0,0);

        OsdEnable(0); // do not disable KEYBOARD
  404610:	9c 60 00 00 	l.addi r3,r0,0x0
    }

  DEBUG_FUNC_OUT(DEBUG_F_MENU | DEBUG_L1);
}
  404614:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  404618:	84 41 ff f0 	l.lwz r2,0xfffffff0(r1)
  40461c:	85 c1 ff f4 	l.lwz r14,0xfffffff4(r1)

	    OsdWrite(5, "", 0,0);
	    OsdWrite(6, "", 0,0);
	    OsdWrite(7, "", 0,0);

        OsdEnable(0); // do not disable KEYBOARD
  404620:	03 ff fd fa 	l.j 403e08 <OsdEnable>
  404624:	86 01 ff f8 	l.lwz r16,0xfffffff8(r1)
    }

  DEBUG_FUNC_OUT(DEBUG_F_MENU | DEBUG_L1);
}
  404628:	9c 21 00 14 	l.addi r1,r1,0x14
  40462c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  404630:	84 41 ff f0 	l.lwz r2,0xfffffff0(r1)
  404634:	85 c1 ff f4 	l.lwz r14,0xfffffff4(r1)
  404638:	44 00 48 00 	l.jr r9
  40463c:	86 01 ff f8 	l.lwz r16,0xfffffff8(r1)

00404640 <SetConfigurationFilename>:
  DEBUG_FUNC_OUT(DEBUG_F_CONFIG | DEBUG_L0);
}


void SetConfigurationFilename(int config)
{
  404640:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  DEBUG_FUNC_IN(DEBUG_F_CONFIG | DEBUG_L1);

	if(config)
  404644:	bc 03 00 00 	l.sfeqi r3,0x0
  404648:	10 00 00 0c 	l.bf 404678 <SetConfigurationFilename+0x38>
  40464c:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
		sprintf(configfilename,"MINIMIG%dCFG",config);
  404650:	d4 01 18 00 	l.sw 0x0(r1),r3
  404654:	18 80 00 41 	l.movhi r4,0x41
  404658:	18 60 00 41 	l.movhi r3,0x41
  40465c:	a8 84 77 b4 	l.ori r4,r4,0x77b4
  404660:	07 ff ff 89 	l.jal 404484 <sprintf>
  404664:	a8 63 cd 40 	l.ori r3,r3,0xcd40
	else
		strcpy(configfilename,"MINIMIG CFG");

  DEBUG_FUNC_OUT(DEBUG_F_CONFIG | DEBUG_L1);
}
  404668:	9c 21 00 08 	l.addi r1,r1,0x8
  40466c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  404670:	44 00 48 00 	l.jr r9
  404674:	15 00 00 00 	l.nop 0x0
  DEBUG_FUNC_IN(DEBUG_F_CONFIG | DEBUG_L1);

	if(config)
		sprintf(configfilename,"MINIMIG%dCFG",config);
	else
		strcpy(configfilename,"MINIMIG CFG");
  404678:	18 60 00 41 	l.movhi r3,0x41
  40467c:	18 80 00 41 	l.movhi r4,0x41

  DEBUG_FUNC_OUT(DEBUG_F_CONFIG | DEBUG_L1);
}
  404680:	9c 21 00 08 	l.addi r1,r1,0x8
  DEBUG_FUNC_IN(DEBUG_F_CONFIG | DEBUG_L1);

	if(config)
		sprintf(configfilename,"MINIMIG%dCFG",config);
	else
		strcpy(configfilename,"MINIMIG CFG");
  404684:	a8 63 cd 40 	l.ori r3,r3,0xcd40

  DEBUG_FUNC_OUT(DEBUG_F_CONFIG | DEBUG_L1);
}
  404688:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  DEBUG_FUNC_IN(DEBUG_F_CONFIG | DEBUG_L1);

	if(config)
		sprintf(configfilename,"MINIMIG%dCFG",config);
	else
		strcpy(configfilename,"MINIMIG CFG");
  40468c:	03 ff ef 10 	l.j 4002cc <strcpy>
  404690:	a8 84 77 c1 	l.ori r4,r4,0x77c1

00404694 <printf>:
#include "hardware.h"

char buf[256];

int printf(const char *fmt,...)
{
  404694:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  404698:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
  40469c:	a8 a3 00 00 	l.ori r5,r3,0x0
  4046a0:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
	int i;
	
	va_list ap;
	va_start(ap, fmt);
	int num = vsnprintf(buf, 256, fmt, ap);
  4046a4:	18 60 00 41 	l.movhi r3,0x41
  4046a8:	9c 80 01 00 	l.addi r4,r0,0x100
  4046ac:	a8 63 a3 98 	l.ori r3,r3,0xa398
  4046b0:	07 ff ef 4a 	l.jal 4003d8 <vsnprintf>
  4046b4:	9c c1 00 08 	l.addi r6,r1,0x8
	va_end(ap);
	
	for(i=0;i<num;i++) {
		RS232(buf[i]);
  4046b8:	18 80 00 80 	l.movhi r4,0x80
	va_list ap;
	va_start(ap, fmt);
	int num = vsnprintf(buf, 256, fmt, ap);
	va_end(ap);
	
	for(i=0;i<num;i++) {
  4046bc:	9c 60 00 00 	l.addi r3,r0,0x0
  4046c0:	00 00 00 08 	l.j 4046e0 <printf+0x4c>
  4046c4:	a8 84 00 0c 	l.ori r4,r4,0xc
int	_EXFUN(setvbuf, (FILE *, char *, int, size_t));
int	_EXFUN(fprintf, (FILE *, const char *, ...)
               _ATTRIBUTE ((__format__ (__printf__, 2, 3))));
int	_EXFUN(fscanf, (FILE *, const char *, ...)
               _ATTRIBUTE ((__format__ (__scanf__, 2, 3))));
int	_EXFUN(printf, (const char *, ...)
  4046c8:	18 40 00 41 	l.movhi r2,0x41
  4046cc:	a8 42 a3 98 	l.ori r2,r2,0xa398
  4046d0:	e0 a3 10 00 	l.add r5,r3,r2
  4046d4:	9c 63 00 01 	l.addi r3,r3,0x1
		RS232(buf[i]);
  4046d8:	90 a5 00 00 	l.lbs r5,0x0(r5)
  4046dc:	d4 04 28 00 	l.sw 0x0(r4),r5
	va_list ap;
	va_start(ap, fmt);
	int num = vsnprintf(buf, 256, fmt, ap);
	va_end(ap);
	
	for(i=0;i<num;i++) {
  4046e0:	e5 83 58 00 	l.sflts r3,r11
  4046e4:	13 ff ff f9 	l.bf 4046c8 <printf+0x34>
  4046e8:	15 00 00 00 	l.nop 0x0
		RS232(buf[i]);
	}
	
	return num;
}
  4046ec:	9c 21 00 08 	l.addi r1,r1,0x8
  4046f0:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  4046f4:	44 00 48 00 	l.jr r9
  4046f8:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

004046fc <MMC_Write>:
}


// write 512-byte block
unsigned char MMC_Write(unsigned long lba, unsigned char *pWriteBuffer)
{
  4046fc:	d7 e1 17 ec 	l.sw 0xffffffec(r1),r2
  404700:	a8 43 00 00 	l.ori r2,r3,0x0
  DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L2);
    unsigned long i;

   if (CardType != CARDTYPE_SDHC) // SDHC cards are addressed in sectors not bytes
  404704:	18 60 00 41 	l.movhi r3,0x41
}


// write 512-byte block
unsigned char MMC_Write(unsigned long lba, unsigned char *pWriteBuffer)
{
  404708:	d7 e1 97 f8 	l.sw 0xfffffff8(r1),r18
  40470c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  404710:	d7 e1 77 f0 	l.sw 0xfffffff0(r1),r14
  404714:	d7 e1 87 f4 	l.sw 0xfffffff4(r1),r16
  DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L2);
    unsigned long i;

   if (CardType != CARDTYPE_SDHC) // SDHC cards are addressed in sectors not bytes
  404718:	a8 63 fd 65 	l.ori r3,r3,0xfd65
}


// write 512-byte block
unsigned char MMC_Write(unsigned long lba, unsigned char *pWriteBuffer)
{
  40471c:	9c 21 ff e4 	l.addi r1,r1,0xffffffe4
  DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L2);
    unsigned long i;

   if (CardType != CARDTYPE_SDHC) // SDHC cards are addressed in sectors not bytes
  404720:	8c 63 00 00 	l.lbz r3,0x0(r3)
  404724:	bc 03 00 03 	l.sfeqi r3,0x3
  404728:	10 00 00 03 	l.bf 404734 <MMC_Write+0x38>
  40472c:	aa 44 00 00 	l.ori r18,r4,0x0
        lba = lba << 9; // otherwise convert sector adddress to byte address
  404730:	b8 42 00 09 	l.slli r2,r2,0x9

    EnableCard();
  404734:	19 c0 00 80 	l.movhi r14,0x80
  404738:	9c 60 00 11 	l.addi r3,r0,0x11
  40473c:	aa 0e 00 20 	l.ori r16,r14,0x20

    if (MMC_Command(CMD24, lba))
  404740:	a8 82 00 00 	l.ori r4,r2,0x0
    unsigned long i;

   if (CardType != CARDTYPE_SDHC) // SDHC cards are addressed in sectors not bytes
        lba = lba << 9; // otherwise convert sector adddress to byte address

    EnableCard();
  404744:	d4 10 18 00 	l.sw 0x0(r16),r3

    if (MMC_Command(CMD24, lba))
  404748:	07 ff fa d0 	l.jal 403288 <MMC_Command>
  40474c:	9c 60 00 58 	l.addi r3,r0,0x58
  404750:	bc 0b 00 00 	l.sfeqi r11,0x0
  404754:	10 00 00 0e 	l.bf 40478c <MMC_Write+0x90>
  404758:	9c 60 00 ff 	l.addi r3,r0,0xff
    {
        printf("CMD24 (WRITE_BLOCK): invalid response 0x%02X (lba=%lu)\r", response, lba);
  40475c:	18 60 00 41 	l.movhi r3,0x41
  404760:	a8 63 fd 64 	l.ori r3,r3,0xfd64
  404764:	8c 63 00 00 	l.lbz r3,0x0(r3)
  404768:	d4 01 18 00 	l.sw 0x0(r1),r3
  40476c:	18 60 00 41 	l.movhi r3,0x41
  404770:	d4 01 10 04 	l.sw 0x4(r1),r2
  404774:	a8 63 77 cd 	l.ori r3,r3,0x77cd
  404778:	07 ff ff c7 	l.jal 404694 <printf>
  40477c:	9c 40 00 10 	l.addi r2,r0,0x10
        DisableCard();
  404780:	d4 10 10 00 	l.sw 0x0(r16),r2
    response &= 0x1F;
    if (response != 0x05)
    {
        printf("CMD24 (WRITE_BLOCK): invalid status 0x%02X (lba=%lu)\r", response, lba);
        DisableCard();
        return(0);
  404784:	00 00 00 4d 	l.j 4048b8 <MMC_Write+0x1bc>
  404788:	9d 60 00 00 	l.addi r11,r0,0x0
        printf("CMD24 (WRITE_BLOCK): invalid response 0x%02X (lba=%lu)\r", response, lba);
        DisableCard();
        return(0);
    }

    SPI(0xFF); // one byte gap
  40478c:	a8 ae 00 24 	l.ori r5,r14,0x24
  404790:	d4 05 18 00 	l.sw 0x0(r5),r3
  404794:	84 65 00 00 	l.lwz r3,0x0(r5)
    SPI(0xFE); // send Data Token
  404798:	9c 60 00 fe 	l.addi r3,r0,0xfe
  40479c:	d4 05 18 00 	l.sw 0x0(r5),r3
  4047a0:	84 65 00 00 	l.lwz r3,0x0(r5)
  DEBUG_FUNC_OUT(DEBUG_F_MMC | DEBUG_L2);
}


// write 512-byte block
unsigned char MMC_Write(unsigned long lba, unsigned char *pWriteBuffer)
  4047a4:	e0 72 58 00 	l.add r3,r18,r11

    SPI(0xFF); // one byte gap
    SPI(0xFE); // send Data Token

    // send sector bytes
    for (i = 0; i < 512; i++)
  4047a8:	9d 6b 00 01 	l.addi r11,r11,0x1
         SPI(*(pWriteBuffer++));
  4047ac:	8c 63 00 00 	l.lbz r3,0x0(r3)
  4047b0:	d4 05 18 00 	l.sw 0x0(r5),r3

    SPI(0xFF); // one byte gap
    SPI(0xFE); // send Data Token

    // send sector bytes
    for (i = 0; i < 512; i++)
  4047b4:	bc 2b 02 00 	l.sfnei r11,0x200
         SPI(*(pWriteBuffer++));
  4047b8:	84 65 00 00 	l.lwz r3,0x0(r5)

    SPI(0xFF); // one byte gap
    SPI(0xFE); // send Data Token

    // send sector bytes
    for (i = 0; i < 512; i++)
  4047bc:	13 ff ff fb 	l.bf 4047a8 <MMC_Write+0xac>
  4047c0:	e0 72 58 00 	l.add r3,r18,r11
         SPI(*(pWriteBuffer++));

    SPI(0xFF); // send CRC lo byte
  4047c4:	9c 80 00 ff 	l.addi r4,r0,0xff
    response = SPI(0xFF); // read packet response
    // Status codes
    // 010 = Data accepted
    // 101 = Data rejected due to CRC error
    // 110 = Data rejected due to write error
    response &= 0x1F;
  4047c8:	18 c0 00 41 	l.movhi r6,0x41

    // send sector bytes
    for (i = 0; i < 512; i++)
         SPI(*(pWriteBuffer++));

    SPI(0xFF); // send CRC lo byte
  4047cc:	d4 05 20 00 	l.sw 0x0(r5),r4
    response = SPI(0xFF); // read packet response
    // Status codes
    // 010 = Data accepted
    // 101 = Data rejected due to CRC error
    // 110 = Data rejected due to write error
    response &= 0x1F;
  4047d0:	a8 c6 fd 64 	l.ori r6,r6,0xfd64

    // send sector bytes
    for (i = 0; i < 512; i++)
         SPI(*(pWriteBuffer++));

    SPI(0xFF); // send CRC lo byte
  4047d4:	84 65 00 00 	l.lwz r3,0x0(r5)
    SPI(0xFF); // send CRC hi byte
  4047d8:	d4 05 20 00 	l.sw 0x0(r5),r4
  4047dc:	84 65 00 00 	l.lwz r3,0x0(r5)

    response = SPI(0xFF); // read packet response
  4047e0:	d4 05 20 00 	l.sw 0x0(r5),r4
  4047e4:	84 65 00 00 	l.lwz r3,0x0(r5)
    // Status codes
    // 010 = Data accepted
    // 101 = Data rejected due to CRC error
    // 110 = Data rejected due to write error
    response &= 0x1F;
  4047e8:	a4 63 00 1f 	l.andi r3,r3,0x1f
    if (response != 0x05)
  4047ec:	bc 03 00 05 	l.sfeqi r3,0x5
  4047f0:	10 00 00 0d 	l.bf 404824 <MMC_Write+0x128>
  4047f4:	d8 06 18 00 	l.sb 0x0(r6),r3
    {
        printf("CMD24 (WRITE_BLOCK): invalid status 0x%02X (lba=%lu)\r", response, lba);
  4047f8:	d4 01 18 00 	l.sw 0x0(r1),r3
  4047fc:	18 60 00 41 	l.movhi r3,0x41
  404800:	d4 01 10 04 	l.sw 0x4(r1),r2
  404804:	a8 63 78 05 	l.ori r3,r3,0x7805
  404808:	07 ff ff a3 	l.jal 404694 <printf>
  40480c:	18 40 00 80 	l.movhi r2,0x80
        DisableCard();
  404810:	9c 60 00 10 	l.addi r3,r0,0x10
  404814:	a8 42 00 20 	l.ori r2,r2,0x20
  404818:	d4 02 18 00 	l.sw 0x0(r2),r3
        return(0);
  40481c:	00 00 00 27 	l.j 4048b8 <MMC_Write+0x1bc>
  404820:	9d 60 00 00 	l.addi r11,r0,0x0
    }

    timeout = 0;
  404824:	18 60 00 41 	l.movhi r3,0x41
  404828:	9c c0 00 00 	l.addi r6,r0,0x0
  40482c:	a8 63 fd 60 	l.ori r3,r3,0xfd60
  404830:	d4 03 30 00 	l.sw 0x0(r3),r6
    while ((SPI(0xFF)) == 0x00) // wait until the card is not busy
  404834:	00 00 00 14 	l.j 404884 <MMC_Write+0x188>
  404838:	a8 66 00 00 	l.ori r3,r6,0x0
  40483c:	9c 63 00 01 	l.addi r3,r3,0x1
    {
        if (timeout++ >= 1000000)
  404840:	9c c3 ff ff 	l.addi r6,r3,0xffffffff
  404844:	a8 e7 42 3f 	l.ori r7,r7,0x423f
  404848:	e4 a6 38 00 	l.sfleu r6,r7
  40484c:	10 00 00 0e 	l.bf 404884 <MMC_Write+0x188>
  404850:	a9 ce 00 20 	l.ori r14,r14,0x20
  404854:	18 80 00 41 	l.movhi r4,0x41
  404858:	a8 84 fd 60 	l.ori r4,r4,0xfd60
  40485c:	d4 04 18 00 	l.sw 0x0(r4),r3
        {
            printf("CMD24 (WRITE_BLOCK): busy wait timeout! (lba=%lu)\r", lba);
  404860:	18 60 00 41 	l.movhi r3,0x41
  404864:	d4 01 10 00 	l.sw 0x0(r1),r2
  404868:	a8 63 78 3b 	l.ori r3,r3,0x783b
  40486c:	07 ff ff 8a 	l.jal 404694 <printf>
  404870:	9c 40 00 10 	l.addi r2,r0,0x10
            DisableCard();
            return(0);
  404874:	a9 70 00 00 	l.ori r11,r16,0x0
    while ((SPI(0xFF)) == 0x00) // wait until the card is not busy
    {
        if (timeout++ >= 1000000)
        {
            printf("CMD24 (WRITE_BLOCK): busy wait timeout! (lba=%lu)\r", lba);
            DisableCard();
  404878:	d4 0e 10 00 	l.sw 0x0(r14),r2
            return(0);
  40487c:	00 00 00 10 	l.j 4048bc <MMC_Write+0x1c0>
  404880:	9c 21 00 1c 	l.addi r1,r1,0x1c
        DisableCard();
        return(0);
    }

    timeout = 0;
    while ((SPI(0xFF)) == 0x00) // wait until the card is not busy
  404884:	d4 05 20 00 	l.sw 0x0(r5),r4
  404888:	19 c0 00 80 	l.movhi r14,0x80
  40488c:	86 05 00 00 	l.lwz r16,0x0(r5)
  404890:	bc 10 00 00 	l.sfeqi r16,0x0
  404894:	13 ff ff ea 	l.bf 40483c <MMC_Write+0x140>
  404898:	18 e0 00 0f 	l.movhi r7,0xf
  40489c:	18 40 00 41 	l.movhi r2,0x41
            DisableCard();
            return(0);
        }
    }

    DisableCard();
  4048a0:	a9 ce 00 20 	l.ori r14,r14,0x20
        DisableCard();
        return(0);
    }

    timeout = 0;
    while ((SPI(0xFF)) == 0x00) // wait until the card is not busy
  4048a4:	a8 42 fd 60 	l.ori r2,r2,0xfd60
            return(0);
        }
    }

    DisableCard();
    return(1);
  4048a8:	9d 60 00 01 	l.addi r11,r0,0x1
        DisableCard();
        return(0);
    }

    timeout = 0;
    while ((SPI(0xFF)) == 0x00) // wait until the card is not busy
  4048ac:	d4 02 18 00 	l.sw 0x0(r2),r3
            DisableCard();
            return(0);
        }
    }

    DisableCard();
  4048b0:	9c 40 00 10 	l.addi r2,r0,0x10
  4048b4:	d4 0e 10 00 	l.sw 0x0(r14),r2
    return(1);

  DEBUG_FUNC_OUT(DEBUG_F_MMC | DEBUG_L2);
}
  4048b8:	9c 21 00 1c 	l.addi r1,r1,0x1c
  4048bc:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  4048c0:	84 41 ff ec 	l.lwz r2,0xffffffec(r1)
  4048c4:	85 c1 ff f0 	l.lwz r14,0xfffffff0(r1)
  4048c8:	86 01 ff f4 	l.lwz r16,0xfffffff4(r1)
  4048cc:	44 00 48 00 	l.jr r9
  4048d0:	86 41 ff f8 	l.lwz r18,0xfffffff8(r1)

004048d4 <FileWrite>:
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


unsigned char FileWrite(fileTYPE *file,unsigned char *pBuffer)
{
  4048d4:	d7 e1 77 f4 	l.sw 0xfffffff4(r1),r14
  4048d8:	a9 c3 00 00 	l.ori r14,r3,0x0
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

    unsigned long sector;

    sector = data_start;                       // start of data in partition
  4048dc:	18 60 00 41 	l.movhi r3,0x41
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


unsigned char FileWrite(fileTYPE *file,unsigned char *pBuffer)
{
  4048e0:	d7 e1 17 f0 	l.sw 0xfffffff0(r1),r2
  4048e4:	a8 44 00 00 	l.ori r2,r4,0x0
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

    unsigned long sector;

    sector = data_start;                       // start of data in partition
    sector += cluster_size * (file->cluster-2);  // cluster offset
  4048e8:	18 80 00 41 	l.movhi r4,0x41
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


unsigned char FileWrite(fileTYPE *file,unsigned char *pBuffer)
{
  4048ec:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  4048f0:	d7 e1 87 f8 	l.sw 0xfffffff8(r1),r16
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

    unsigned long sector;

    sector = data_start;                       // start of data in partition
  4048f4:	a8 63 dc 8c 	l.ori r3,r3,0xdc8c
    sector += cluster_size * (file->cluster-2);  // cluster offset
  4048f8:	a8 84 a8 dc 	l.ori r4,r4,0xa8dc
{
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

    unsigned long sector;

    sector = data_start;                       // start of data in partition
  4048fc:	86 03 00 00 	l.lwz r16,0x0(r3)
    sector += cluster_size * (file->cluster-2);  // cluster offset
  404900:	84 6e 00 1c 	l.lwz r3,0x1c(r14)
  404904:	8c 84 00 00 	l.lbz r4,0x0(r4)
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


unsigned char FileWrite(fileTYPE *file,unsigned char *pBuffer)
{
  404908:	9c 21 ff f0 	l.addi r1,r1,0xfffffff0
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

    unsigned long sector;

    sector = data_start;                       // start of data in partition
    sector += cluster_size * (file->cluster-2);  // cluster offset
  40490c:	07 ff ed d7 	l.jal 400068 <__mulsi3>
  404910:	9c 63 ff fe 	l.addi r3,r3,0xfffffffe
    sector += file->sector & ~cluster_mask;    // sector offset in cluster
  404914:	18 60 00 41 	l.movhi r3,0x41
  404918:	84 8e 00 14 	l.lwz r4,0x14(r14)
  40491c:	a8 63 a8 e0 	l.ori r3,r3,0xa8e0
  404920:	84 63 00 00 	l.lwz r3,0x0(r3)
  404924:	ac 63 ff ff 	l.xori r3,r3,0xffffffff
  404928:	e0 63 20 03 	l.and r3,r3,r4

    if (!MMC_Write(sector, pBuffer)) // write sector from drive
  40492c:	a8 82 00 00 	l.ori r4,r2,0x0
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

    unsigned long sector;

    sector = data_start;                       // start of data in partition
    sector += cluster_size * (file->cluster-2);  // cluster offset
  404930:	e1 6b 18 00 	l.add r11,r11,r3
    sector += file->sector & ~cluster_mask;    // sector offset in cluster

    if (!MMC_Write(sector, pBuffer)) // write sector from drive
  404934:	07 ff ff 72 	l.jal 4046fc <MMC_Write>
  404938:	e0 6b 80 00 	l.add r3,r11,r16
        return(0);
    else
        return(1);

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}
  40493c:	9c 21 00 10 	l.addi r1,r1,0x10
    sector = data_start;                       // start of data in partition
    sector += cluster_size * (file->cluster-2);  // cluster offset
    sector += file->sector & ~cluster_mask;    // sector offset in cluster

    if (!MMC_Write(sector, pBuffer)) // write sector from drive
        return(0);
  404940:	e1 60 58 02 	l.sub r11,r0,r11
    else
        return(1);

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}
  404944:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  404948:	b9 6b 00 5f 	l.srli r11,r11,0x1f
  40494c:	84 41 ff f0 	l.lwz r2,0xfffffff0(r1)
  404950:	85 c1 ff f4 	l.lwz r14,0xfffffff4(r1)
  404954:	44 00 48 00 	l.jr r9
  404958:	86 01 ff f8 	l.lwz r16,0xfffffff8(r1)

0040495c <MMC_ReadMultiple>:
}


// read multiple 512-byte blocks
unsigned char MMC_ReadMultiple(unsigned long lba, unsigned char *pReadBuffer, unsigned long nBlockCount)
{
  40495c:	d7 e1 77 ec 	l.sw 0xffffffec(r1),r14
  404960:	a9 c3 00 00 	l.ori r14,r3,0x0
    // if pReadBuffer is NULL then use direct to the FPGA transfer mode (FPGA2 asserted)

    unsigned long i;
    unsigned char *p;

    if (CardType != CARDTYPE_SDHC) // SDHC cards are addressed in sectors not bytes
  404964:	18 60 00 41 	l.movhi r3,0x41
}


// read multiple 512-byte blocks
unsigned char MMC_ReadMultiple(unsigned long lba, unsigned char *pReadBuffer, unsigned long nBlockCount)
{
  404968:	d7 e1 17 e8 	l.sw 0xffffffe8(r1),r2
  40496c:	d7 e1 87 f0 	l.sw 0xfffffff0(r1),r16
  404970:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  404974:	d7 e1 97 f4 	l.sw 0xfffffff4(r1),r18
  404978:	d7 e1 a7 f8 	l.sw 0xfffffff8(r1),r20
    // if pReadBuffer is NULL then use direct to the FPGA transfer mode (FPGA2 asserted)

    unsigned long i;
    unsigned char *p;

    if (CardType != CARDTYPE_SDHC) // SDHC cards are addressed in sectors not bytes
  40497c:	a8 63 fd 65 	l.ori r3,r3,0xfd65
}


// read multiple 512-byte blocks
unsigned char MMC_ReadMultiple(unsigned long lba, unsigned char *pReadBuffer, unsigned long nBlockCount)
{
  404980:	9c 21 ff e0 	l.addi r1,r1,0xffffffe0
    // if pReadBuffer is NULL then use direct to the FPGA transfer mode (FPGA2 asserted)

    unsigned long i;
    unsigned char *p;

    if (CardType != CARDTYPE_SDHC) // SDHC cards are addressed in sectors not bytes
  404984:	8c 63 00 00 	l.lbz r3,0x0(r3)
}


// read multiple 512-byte blocks
unsigned char MMC_ReadMultiple(unsigned long lba, unsigned char *pReadBuffer, unsigned long nBlockCount)
{
  404988:	aa 04 00 00 	l.ori r16,r4,0x0
    // if pReadBuffer is NULL then use direct to the FPGA transfer mode (FPGA2 asserted)

    unsigned long i;
    unsigned char *p;

    if (CardType != CARDTYPE_SDHC) // SDHC cards are addressed in sectors not bytes
  40498c:	bc 03 00 03 	l.sfeqi r3,0x3
  404990:	10 00 00 03 	l.bf 40499c <MMC_ReadMultiple+0x40>
  404994:	a8 45 00 00 	l.ori r2,r5,0x0
        lba = lba << 9; // otherwise convert sector adddress to byte address
  404998:	b9 ce 00 09 	l.slli r14,r14,0x9
    EnableCard();
  40499c:	1a 80 00 80 	l.movhi r20,0x80
  4049a0:	9c 60 00 11 	l.addi r3,r0,0x11
  4049a4:	aa 54 00 20 	l.ori r18,r20,0x20

    if (MMC_Command(CMD18, lba))
  4049a8:	a8 8e 00 00 	l.ori r4,r14,0x0
    unsigned long i;
    unsigned char *p;

    if (CardType != CARDTYPE_SDHC) // SDHC cards are addressed in sectors not bytes
        lba = lba << 9; // otherwise convert sector adddress to byte address
    EnableCard();
  4049ac:	d4 12 18 00 	l.sw 0x0(r18),r3

    if (MMC_Command(CMD18, lba))
  4049b0:	07 ff fa 36 	l.jal 403288 <MMC_Command>
  4049b4:	9c 60 00 52 	l.addi r3,r0,0x52
  4049b8:	bc 2b 00 00 	l.sfnei r11,0x0
  4049bc:	10 00 00 0c 	l.bf 4049ec <MMC_ReadMultiple+0x90>
  4049c0:	18 60 00 41 	l.movhi r3,0x41

    while (nBlockCount--)
    {
        // now we are waiting for data token, it takes around 300us
        timeout = 0;
        while ((SPI(0xFF)) != 0xFE)
  4049c4:	a8 d4 00 24 	l.ori r6,r20,0x24

    if (CardType != CARDTYPE_SDHC) // SDHC cards are addressed in sectors not bytes
        lba = lba << 9; // otherwise convert sector adddress to byte address
    EnableCard();

    if (MMC_Command(CMD18, lba))
  4049c8:	a8 63 fd 60 	l.ori r3,r3,0xfd60
            }
        }

        if (pReadBuffer == 0)
        {   // in this mode we do not receive data, instead the FPGA captures directly the data stream transmitted by the SD/MMC card
            EnableDMode();
  4049cc:	9d 80 00 88 	l.addi r12,r0,0x88

    if (CardType != CARDTYPE_SDHC) // SDHC cards are addressed in sectors not bytes
        lba = lba << 9; // otherwise convert sector adddress to byte address
    EnableCard();

    if (MMC_Command(CMD18, lba))
  4049d0:	85 03 00 00 	l.lwz r8,0x0(r3)

    while (nBlockCount--)
    {
        // now we are waiting for data token, it takes around 300us
        timeout = 0;
        while ((SPI(0xFF)) != 0xFE)
  4049d4:	9c 60 00 ff 	l.addi r3,r0,0xff
        }

        if (pReadBuffer == 0)
        {   // in this mode we do not receive data, instead the FPGA captures directly the data stream transmitted by the SD/MMC card
            EnableDMode();
            SPI_block(511);
  4049d8:	aa 94 00 28 	l.ori r20,r20,0x28

    while (nBlockCount--)
    {
        // now we are waiting for data token, it takes around 300us
        timeout = 0;
        while ((SPI(0xFF)) != 0xFE)
  4049dc:	a8 a3 00 00 	l.ori r5,r3,0x0
        }

        if (pReadBuffer == 0)
        {   // in this mode we do not receive data, instead the FPGA captures directly the data stream transmitted by the SD/MMC card
            EnableDMode();
            SPI_block(511);
  4049e0:	9d 60 01 ff 	l.addi r11,r0,0x1ff
            SPI(0xff); // dummy write for 4096 clocks
            SPI(0xff);
            DisableDMode();
  4049e4:	00 00 00 49 	l.j 404b08 <MMC_ReadMultiple+0x1ac>
  4049e8:	9c 80 00 80 	l.addi r4,r0,0x80
        lba = lba << 9; // otherwise convert sector adddress to byte address
    EnableCard();

    if (MMC_Command(CMD18, lba))
    {
        printf("CMD18 (READ_MULTIPLE_BLOCK): invalid response 0x%02X (lba=%u)\r", response, lba);
  4049ec:	18 40 00 41 	l.movhi r2,0x41
  4049f0:	18 60 00 41 	l.movhi r3,0x41
  4049f4:	a8 42 fd 64 	l.ori r2,r2,0xfd64
  4049f8:	a8 63 78 6e 	l.ori r3,r3,0x786e
  4049fc:	8c 42 00 00 	l.lbz r2,0x0(r2)
  404a00:	d4 01 10 00 	l.sw 0x0(r1),r2
        DisableCard();
  404a04:	9c 40 00 10 	l.addi r2,r0,0x10
        lba = lba << 9; // otherwise convert sector adddress to byte address
    EnableCard();

    if (MMC_Command(CMD18, lba))
    {
        printf("CMD18 (READ_MULTIPLE_BLOCK): invalid response 0x%02X (lba=%u)\r", response, lba);
  404a08:	07 ff ff 23 	l.jal 404694 <printf>
  404a0c:	d4 01 70 04 	l.sw 0x4(r1),r14
        DisableCard();
  404a10:	d4 12 10 00 	l.sw 0x0(r18),r2
        {
            if (timeout++ >= 1000000) // we can't wait forever
            {
                printf("CMD18 (READ_MULTIPLE_BLOCK): no data token! (lba=%u)\r", lba);
                DisableCard();
                return(0);
  404a14:	00 00 00 92 	l.j 404c5c <MMC_ReadMultiple+0x300>
  404a18:	9d 60 00 00 	l.addi r11,r0,0x0

    if (MMC_Command(CMD18, lba))
    {
        printf("CMD18 (READ_MULTIPLE_BLOCK): invalid response 0x%02X (lba=%u)\r", response, lba);
        DisableCard();
        return(0);
  404a1c:	9d 08 00 01 	l.addi r8,r8,0x1
    {
        // now we are waiting for data token, it takes around 300us
        timeout = 0;
        while ((SPI(0xFF)) != 0xFE)
        {
            if (timeout++ >= 1000000) // we can't wait forever
  404a20:	a8 e7 42 41 	l.ori r7,r7,0x4241
  404a24:	e4 28 38 00 	l.sfne r8,r7
  404a28:	10 00 00 10 	l.bf 404a68 <MMC_ReadMultiple+0x10c>
  404a2c:	15 00 00 00 	l.nop 0x0
  404a30:	18 40 00 41 	l.movhi r2,0x41
            {
                printf("CMD18 (READ_MULTIPLE_BLOCK): no data token! (lba=%u)\r", lba);
  404a34:	18 60 00 41 	l.movhi r3,0x41
    {
        // now we are waiting for data token, it takes around 300us
        timeout = 0;
        while ((SPI(0xFF)) != 0xFE)
        {
            if (timeout++ >= 1000000) // we can't wait forever
  404a38:	a8 42 fd 60 	l.ori r2,r2,0xfd60
            {
                printf("CMD18 (READ_MULTIPLE_BLOCK): no data token! (lba=%u)\r", lba);
  404a3c:	a8 63 78 ad 	l.ori r3,r3,0x78ad
    {
        // now we are waiting for data token, it takes around 300us
        timeout = 0;
        while ((SPI(0xFF)) != 0xFE)
        {
            if (timeout++ >= 1000000) // we can't wait forever
  404a40:	d4 02 40 00 	l.sw 0x0(r2),r8
            {
                printf("CMD18 (READ_MULTIPLE_BLOCK): no data token! (lba=%u)\r", lba);
                DisableCard();
  404a44:	18 40 00 80 	l.movhi r2,0x80
        timeout = 0;
        while ((SPI(0xFF)) != 0xFE)
        {
            if (timeout++ >= 1000000) // we can't wait forever
            {
                printf("CMD18 (READ_MULTIPLE_BLOCK): no data token! (lba=%u)\r", lba);
  404a48:	07 ff ff 13 	l.jal 404694 <printf>
  404a4c:	d4 01 70 00 	l.sw 0x0(r1),r14
                DisableCard();
  404a50:	a8 42 00 20 	l.ori r2,r2,0x20
  404a54:	9c 60 00 10 	l.addi r3,r0,0x10
  404a58:	d4 02 18 00 	l.sw 0x0(r2),r3
                return(0);
  404a5c:	00 00 00 80 	l.j 404c5c <MMC_ReadMultiple+0x300>
  404a60:	9d 60 00 00 	l.addi r11,r0,0x0
    }

    while (nBlockCount--)
    {
        // now we are waiting for data token, it takes around 300us
        timeout = 0;
  404a64:	9d 00 00 00 	l.addi r8,r0,0x0
        while ((SPI(0xFF)) != 0xFE)
  404a68:	d4 06 28 00 	l.sw 0x0(r6),r5
  404a6c:	84 e6 00 00 	l.lwz r7,0x0(r6)
  404a70:	bc 27 00 fe 	l.sfnei r7,0xfe
  404a74:	13 ff ff ea 	l.bf 404a1c <MMC_ReadMultiple+0xc0>
  404a78:	18 e0 00 0f 	l.movhi r7,0xf
                DisableCard();
                return(0);
            }
        }

        if (pReadBuffer == 0)
  404a7c:	bc 30 00 00 	l.sfnei r16,0x0
  404a80:	10 00 00 0b 	l.bf 404aac <MMC_ReadMultiple+0x150>
  404a84:	a8 f0 00 00 	l.ori r7,r16,0x0
        {   // in this mode we do not receive data, instead the FPGA captures directly the data stream transmitted by the SD/MMC card
            EnableDMode();
  404a88:	d4 12 60 00 	l.sw 0x0(r18),r12
            SPI_block(511);
  404a8c:	d4 14 58 00 	l.sw 0x0(r20),r11
            SPI(0xff); // dummy write for 4096 clocks
  404a90:	d4 06 28 00 	l.sw 0x0(r6),r5
  404a94:	84 e6 00 00 	l.lwz r7,0x0(r6)
            SPI(0xff);
  404a98:	d4 06 28 00 	l.sw 0x0(r6),r5
  404a9c:	84 e6 00 00 	l.lwz r7,0x0(r6)
            DisableDMode();
  404aa0:	d4 12 20 00 	l.sw 0x0(r18),r4
  404aa4:	00 00 00 14 	l.j 404af4 <MMC_ReadMultiple+0x198>
  404aa8:	15 00 00 00 	l.nop 0x0
  DEBUG_FUNC_OUT(DEBUG_F_MMC | DEBUG_L1);
}


// read multiple 512-byte blocks
unsigned char MMC_ReadMultiple(unsigned long lba, unsigned char *pReadBuffer, unsigned long nBlockCount)
  404aac:	9d b0 02 00 	l.addi r13,r16,0x200
        else
        {
			p=pReadBuffer;
			for (i = 0; i < 128; i++)
			{ 
				*(p++) = SPI(0xFF);
  404ab0:	d4 06 28 00 	l.sw 0x0(r6),r5
  404ab4:	85 e6 00 00 	l.lwz r15,0x0(r6)
  404ab8:	d8 07 78 00 	l.sb 0x0(r7),r15
				*(p++) = SPI(0xFF);
  404abc:	d4 06 28 00 	l.sw 0x0(r6),r5
  404ac0:	85 e6 00 00 	l.lwz r15,0x0(r6)
  404ac4:	d8 07 78 01 	l.sb 0x1(r7),r15
				*(p++) = SPI(0xFF);
  404ac8:	d4 06 28 00 	l.sw 0x0(r6),r5
  404acc:	85 e6 00 00 	l.lwz r15,0x0(r6)
  404ad0:	d8 07 78 02 	l.sb 0x2(r7),r15
				*(p++) = SPI(0xFF);
  404ad4:	d4 06 28 00 	l.sw 0x0(r6),r5
  404ad8:	85 e6 00 00 	l.lwz r15,0x0(r6)
  404adc:	d8 07 78 03 	l.sb 0x3(r7),r15
  DEBUG_FUNC_OUT(DEBUG_F_MMC | DEBUG_L1);
}


// read multiple 512-byte blocks
unsigned char MMC_ReadMultiple(unsigned long lba, unsigned char *pReadBuffer, unsigned long nBlockCount)
  404ae0:	9c e7 00 04 	l.addi r7,r7,0x4
            DisableDMode();
        }
        else
        {
			p=pReadBuffer;
			for (i = 0; i < 128; i++)
  404ae4:	e4 27 68 00 	l.sfne r7,r13
  404ae8:	13 ff ff f2 	l.bf 404ab0 <MMC_ReadMultiple+0x154>
  404aec:	15 00 00 00 	l.nop 0x0
				*(p++) = SPI(0xFF);
				*(p++) = SPI(0xFF);
				*(p++) = SPI(0xFF);
			}

            pReadBuffer += 512; // point to next sector
  404af0:	9e 10 02 00 	l.addi r16,r16,0x200
        }

        SPI(0xFF); // read CRC lo byte
  404af4:	d4 06 18 00 	l.sw 0x0(r6),r3
        SPI(0xFF); // read CRC hi byte
  404af8:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
			}

            pReadBuffer += 512; // point to next sector
        }

        SPI(0xFF); // read CRC lo byte
  404afc:	84 e6 00 00 	l.lwz r7,0x0(r6)
        SPI(0xFF); // read CRC hi byte
  404b00:	d4 06 18 00 	l.sw 0x0(r6),r3
  404b04:	84 e6 00 00 	l.lwz r7,0x0(r6)
        printf("CMD18 (READ_MULTIPLE_BLOCK): invalid response 0x%02X (lba=%u)\r", response, lba);
        DisableCard();
        return(0);
    }

    while (nBlockCount--)
  404b08:	bc 22 00 00 	l.sfnei r2,0x0
  404b0c:	13 ff ff d6 	l.bf 404a64 <MMC_ReadMultiple+0x108>
  404b10:	15 00 00 00 	l.nop 0x0
  404b14:	18 60 00 41 	l.movhi r3,0x41
// stop multi block data transmission
unsigned char MMC_CMD12(void)
{
  DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L2);

    SPI(CMD12); // command
  404b18:	9c 80 00 4c 	l.addi r4,r0,0x4c
        printf("CMD18 (READ_MULTIPLE_BLOCK): invalid response 0x%02X (lba=%u)\r", response, lba);
        DisableCard();
        return(0);
    }

    while (nBlockCount--)
  404b1c:	a8 63 fd 60 	l.ori r3,r3,0xfd60
  404b20:	d4 03 40 00 	l.sw 0x0(r3),r8
// stop multi block data transmission
unsigned char MMC_CMD12(void)
{
  DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L2);

    SPI(CMD12); // command
  404b24:	18 60 00 80 	l.movhi r3,0x80
  404b28:	a8 63 00 24 	l.ori r3,r3,0x24
  404b2c:	d4 03 20 00 	l.sw 0x0(r3),r4
  404b30:	84 83 00 00 	l.lwz r4,0x0(r3)
    SPI(0x00);
  404b34:	d4 03 10 00 	l.sw 0x0(r3),r2
  404b38:	84 83 00 00 	l.lwz r4,0x0(r3)
    SPI(0x00);
  404b3c:	d4 03 10 00 	l.sw 0x0(r3),r2
  404b40:	84 83 00 00 	l.lwz r4,0x0(r3)
    SPI(0x00);
  404b44:	d4 03 10 00 	l.sw 0x0(r3),r2
  404b48:	84 83 00 00 	l.lwz r4,0x0(r3)
    SPI(0x00);
  404b4c:	d4 03 10 00 	l.sw 0x0(r3),r2
  404b50:	84 83 00 00 	l.lwz r4,0x0(r3)
    SPI(0x00); // dummy CRC7
    SPI(0xFF); // skip stuff byte
  404b54:	9c 80 00 ff 	l.addi r4,r0,0xff
    SPI(CMD12); // command
    SPI(0x00);
    SPI(0x00);
    SPI(0x00);
    SPI(0x00);
    SPI(0x00); // dummy CRC7
  404b58:	d4 03 10 00 	l.sw 0x0(r3),r2
    SPI(0xFF); // skip stuff byte

    unsigned char Ncr = 100;  // Ncr = 0..8 (SD) / 1..8 (MMC)
    do
    {    response = SPI(0xFF); // get response
  404b5c:	a8 a4 00 00 	l.ori r5,r4,0x0
    SPI(CMD12); // command
    SPI(0x00);
    SPI(0x00);
    SPI(0x00);
    SPI(0x00);
    SPI(0x00); // dummy CRC7
  404b60:	84 43 00 00 	l.lwz r2,0x0(r3)
    SPI(0xFF); // skip stuff byte
  404b64:	d4 03 20 00 	l.sw 0x0(r3),r4
  404b68:	84 43 00 00 	l.lwz r2,0x0(r3)

    unsigned char Ncr = 100;  // Ncr = 0..8 (SD) / 1..8 (MMC)
  404b6c:	9c 40 00 64 	l.addi r2,r0,0x64
    do
    {    response = SPI(0xFF); // get response
  404b70:	d4 03 28 00 	l.sw 0x0(r3),r5
  404b74:	84 83 00 00 	l.lwz r4,0x0(r3)
  404b78:	a4 84 00 ff 	l.andi r4,r4,0xff
//        RS232(response);
   } while (response == 0xFF && Ncr--);
  404b7c:	bc 24 00 ff 	l.sfnei r4,0xff
  404b80:	10 00 00 0c 	l.bf 404bb0 <MMC_ReadMultiple+0x254>
  404b84:	bc 22 00 00 	l.sfnei r2,0x0
  404b88:	10 00 00 08 	l.bf 404ba8 <MMC_ReadMultiple+0x24c>
  404b8c:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
  404b90:	9c 42 00 01 	l.addi r2,r2,0x1
  404b94:	18 40 00 41 	l.movhi r2,0x41
  404b98:	9c 60 ff ff 	l.addi r3,r0,0xffffffff
  404b9c:	a8 42 fd 64 	l.ori r2,r2,0xfd64
  404ba0:	00 00 00 07 	l.j 404bbc <MMC_ReadMultiple+0x260>
  404ba4:	d8 02 18 00 	l.sb 0x0(r2),r3
  404ba8:	03 ff ff f2 	l.j 404b70 <MMC_ReadMultiple+0x214>
  404bac:	a4 42 00 ff 	l.andi r2,r2,0xff
  404bb0:	18 40 00 41 	l.movhi r2,0x41
  404bb4:	a8 42 fd 64 	l.ori r2,r2,0xfd64
  404bb8:	d8 02 20 00 	l.sb 0x0(r2),r4

    timeout = 0;
  404bbc:	18 40 00 41 	l.movhi r2,0x41
  404bc0:	9c c0 00 00 	l.addi r6,r0,0x0
  404bc4:	a8 42 fd 60 	l.ori r2,r2,0xfd60
    while ((SPI(0xFF)) == 0x00) // wait until the card is not busy
  404bc8:	18 60 00 80 	l.movhi r3,0x80
    do
    {    response = SPI(0xFF); // get response
//        RS232(response);
   } while (response == 0xFF && Ncr--);

    timeout = 0;
  404bcc:	d4 02 30 00 	l.sw 0x0(r2),r6
    while ((SPI(0xFF)) == 0x00) // wait until the card is not busy
  404bd0:	a8 63 00 24 	l.ori r3,r3,0x24
    do
    {    response = SPI(0xFF); // get response
//        RS232(response);
   } while (response == 0xFF && Ncr--);

    timeout = 0;
  404bd4:	a8 46 00 00 	l.ori r2,r6,0x0
    while ((SPI(0xFF)) == 0x00) // wait until the card is not busy
  404bd8:	00 00 00 14 	l.j 404c28 <MMC_ReadMultiple+0x2cc>
  404bdc:	9c 80 00 ff 	l.addi r4,r0,0xff
    do
    {    response = SPI(0xFF); // get response
//        RS232(response);
   } while (response == 0xFF && Ncr--);

    timeout = 0;
  404be0:	9c 42 00 01 	l.addi r2,r2,0x1
    while ((SPI(0xFF)) == 0x00) // wait until the card is not busy
    {   // RS232('+');
        if (timeout++ >= 1000000)
  404be4:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  404be8:	a8 e7 42 3f 	l.ori r7,r7,0x423f
  404bec:	e4 a5 38 00 	l.sfleu r5,r7
  404bf0:	10 00 00 0e 	l.bf 404c28 <MMC_ReadMultiple+0x2cc>
  404bf4:	15 00 00 00 	l.nop 0x0
  404bf8:	18 60 00 41 	l.movhi r3,0x41
  404bfc:	a8 63 fd 60 	l.ori r3,r3,0xfd60
  404c00:	d4 03 10 00 	l.sw 0x0(r3),r2
        {
            printf("CMD12 (STOP_TRANSMISSION): busy wait timeout!\r");
  404c04:	18 60 00 41 	l.movhi r3,0x41
            DisableCard();
  404c08:	18 40 00 80 	l.movhi r2,0x80
    timeout = 0;
    while ((SPI(0xFF)) == 0x00) // wait until the card is not busy
    {   // RS232('+');
        if (timeout++ >= 1000000)
        {
            printf("CMD12 (STOP_TRANSMISSION): busy wait timeout!\r");
  404c0c:	a8 63 78 e3 	l.ori r3,r3,0x78e3
  404c10:	07 ff fe a1 	l.jal 404694 <printf>
  404c14:	a8 42 00 20 	l.ori r2,r2,0x20
            DisableCard();
  404c18:	9c 60 00 10 	l.addi r3,r0,0x10
  404c1c:	d4 02 18 00 	l.sw 0x0(r2),r3
        SPI(0xFF); // read CRC hi byte
    }

    MMC_CMD12(); // stop multi block transmission

    DisableCard();
  404c20:	00 00 00 0b 	l.j 404c4c <MMC_ReadMultiple+0x2f0>
  404c24:	18 40 00 80 	l.movhi r2,0x80
    {    response = SPI(0xFF); // get response
//        RS232(response);
   } while (response == 0xFF && Ncr--);

    timeout = 0;
    while ((SPI(0xFF)) == 0x00) // wait until the card is not busy
  404c28:	d4 03 20 00 	l.sw 0x0(r3),r4
  404c2c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  404c30:	bc 05 00 00 	l.sfeqi r5,0x0
  404c34:	13 ff ff eb 	l.bf 404be0 <MMC_ReadMultiple+0x284>
  404c38:	18 e0 00 0f 	l.movhi r7,0xf
  404c3c:	18 60 00 41 	l.movhi r3,0x41
  404c40:	a8 63 fd 60 	l.ori r3,r3,0xfd60
  404c44:	d4 03 10 00 	l.sw 0x0(r3),r2
        SPI(0xFF); // read CRC hi byte
    }

    MMC_CMD12(); // stop multi block transmission

    DisableCard();
  404c48:	18 40 00 80 	l.movhi r2,0x80
  404c4c:	9c 60 00 10 	l.addi r3,r0,0x10
  404c50:	a8 42 00 20 	l.ori r2,r2,0x20
    return(1);
  404c54:	9d 60 00 01 	l.addi r11,r0,0x1
        SPI(0xFF); // read CRC hi byte
    }

    MMC_CMD12(); // stop multi block transmission

    DisableCard();
  404c58:	d4 02 18 00 	l.sw 0x0(r2),r3
    return(1);
  DEBUG_FUNC_OUT(DEBUG_F_MMC | DEBUG_L2);
}
  404c5c:	9c 21 00 20 	l.addi r1,r1,0x20
  404c60:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  404c64:	84 41 ff e8 	l.lwz r2,0xffffffe8(r1)
  404c68:	85 c1 ff ec 	l.lwz r14,0xffffffec(r1)
  404c6c:	86 01 ff f0 	l.lwz r16,0xfffffff0(r1)
  404c70:	86 41 ff f4 	l.lwz r18,0xfffffff4(r1)
  404c74:	44 00 48 00 	l.jr r9
  404c78:	86 81 ff f8 	l.lwz r20,0xfffffff8(r1)

00404c7c <FileReadEx>:
}
//#pragma section_no_code_init


unsigned char FileReadEx(fileTYPE *file, unsigned char *pBuffer, unsigned long nSize)
{
  404c7c:	d7 e1 97 e4 	l.sw 0xffffffe4(r1),r18
  404c80:	d7 e1 b7 ec 	l.sw 0xffffffec(r1),r22
  404c84:	d7 e1 c7 f0 	l.sw 0xfffffff0(r1),r24
    unsigned long bc; // block count of single multisector read operation

    while (nSize)
    {
        sb = data_start;                         // start of data in partition
        sb += cluster_size * (file->cluster-2);  // cluster offset
  404c88:	1a c0 00 41 	l.movhi r22,0x41
    unsigned long sb;
    unsigned long bc; // block count of single multisector read operation

    while (nSize)
    {
        sb = data_start;                         // start of data in partition
  404c8c:	1b 00 00 41 	l.movhi r24,0x41
        sb += cluster_size * (file->cluster-2);  // cluster offset
        sb += file->sector & ~cluster_mask;      // sector offset in cluster
  404c90:	1a 40 00 41 	l.movhi r18,0x41
}
//#pragma section_no_code_init


unsigned char FileReadEx(fileTYPE *file, unsigned char *pBuffer, unsigned long nSize)
{
  404c94:	d7 e1 17 d8 	l.sw 0xffffffd8(r1),r2
  404c98:	d7 e1 77 dc 	l.sw 0xffffffdc(r1),r14
  404c9c:	d7 e1 d7 f4 	l.sw 0xfffffff4(r1),r26
  404ca0:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  404ca4:	d7 e1 87 e0 	l.sw 0xffffffe0(r1),r16
  404ca8:	d7 e1 a7 e8 	l.sw 0xffffffe8(r1),r20
  404cac:	d7 e1 e7 f8 	l.sw 0xfffffff8(r1),r28
  404cb0:	a9 c3 00 00 	l.ori r14,r3,0x0
  404cb4:	9c 21 ff d8 	l.addi r1,r1,0xffffffd8
  404cb8:	ab 44 00 00 	l.ori r26,r4,0x0
  404cbc:	a8 45 00 00 	l.ori r2,r5,0x0
    unsigned long sb;
    unsigned long bc; // block count of single multisector read operation

    while (nSize)
    {
        sb = data_start;                         // start of data in partition
  404cc0:	ab 18 dc 8c 	l.ori r24,r24,0xdc8c
        sb += cluster_size * (file->cluster-2);  // cluster offset
  404cc4:	aa d6 a8 dc 	l.ori r22,r22,0xa8dc
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

    unsigned long sb;
    unsigned long bc; // block count of single multisector read operation

    while (nSize)
  404cc8:	00 00 00 1f 	l.j 404d44 <FileReadEx+0xc8>
  404ccc:	aa 52 a8 e0 	l.ori r18,r18,0xa8e0
    {
        sb = data_start;                         // start of data in partition
        sb += cluster_size * (file->cluster-2);  // cluster offset
  404cd0:	8e 96 00 00 	l.lbz r20,0x0(r22)
        sb += file->sector & ~cluster_mask;      // sector offset in cluster
  404cd4:	86 12 00 00 	l.lwz r16,0x0(r18)
    unsigned long bc; // block count of single multisector read operation

    while (nSize)
    {
        sb = data_start;                         // start of data in partition
        sb += cluster_size * (file->cluster-2);  // cluster offset
  404cd8:	84 6e 00 1c 	l.lwz r3,0x1c(r14)
        sb += file->sector & ~cluster_mask;      // sector offset in cluster
  404cdc:	84 ae 00 14 	l.lwz r5,0x14(r14)
  404ce0:	ae 10 ff ff 	l.xori r16,r16,0xffffffff
    unsigned long bc; // block count of single multisector read operation

    while (nSize)
    {
        sb = data_start;                         // start of data in partition
        sb += cluster_size * (file->cluster-2);  // cluster offset
  404ce4:	9c 63 ff fe 	l.addi r3,r3,0xfffffffe
  404ce8:	a8 94 00 00 	l.ori r4,r20,0x0
  404cec:	07 ff ec df 	l.jal 400068 <__mulsi3>
  404cf0:	e2 10 28 03 	l.and r16,r16,r5
        sb += file->sector & ~cluster_mask;      // sector offset in cluster
        bc = cluster_size - (file->sector & ~cluster_mask); // sector offset in the cluster
  404cf4:	e0 b4 80 02 	l.sub r5,r20,r16
    unsigned long bc; // block count of single multisector read operation

    while (nSize)
    {
        sb = data_start;                         // start of data in partition
        sb += cluster_size * (file->cluster-2);  // cluster offset
  404cf8:	e1 6b 80 00 	l.add r11,r11,r16
    unsigned long sb;
    unsigned long bc; // block count of single multisector read operation

    while (nSize)
    {
        sb = data_start;                         // start of data in partition
  404cfc:	87 98 00 00 	l.lwz r28,0x0(r24)
        sb += cluster_size * (file->cluster-2);  // cluster offset
        sb += file->sector & ~cluster_mask;      // sector offset in cluster
        bc = cluster_size - (file->sector & ~cluster_mask); // sector offset in the cluster
  404d00:	e4 a2 28 00 	l.sfleu r2,r5
  404d04:	10 00 00 03 	l.bf 404d10 <FileReadEx+0x94>
  404d08:	aa 02 00 00 	l.ori r16,r2,0x0
  404d0c:	aa 05 00 00 	l.ori r16,r5,0x0
        if (nSize < bc)
            bc = nSize;

        if (!MMC_ReadMultiple(sb, pBuffer, bc))
  404d10:	e0 6b e0 00 	l.add r3,r11,r28
  404d14:	a8 9a 00 00 	l.ori r4,r26,0x0
  404d18:	07 ff ff 11 	l.jal 40495c <MMC_ReadMultiple>
  404d1c:	a8 b0 00 00 	l.ori r5,r16,0x0
  404d20:	bc 0b 00 00 	l.sfeqi r11,0x0
  404d24:	10 00 00 0b 	l.bf 404d50 <FileReadEx+0xd4>
  404d28:	a8 6e 00 00 	l.ori r3,r14,0x0
            return 0;

        if (!FileSeek(file, bc, SEEK_CUR))
  404d2c:	a8 90 00 00 	l.ori r4,r16,0x0
  404d30:	04 00 01 83 	l.jal 40533c <FileSeek>
  404d34:	9c a0 00 01 	l.addi r5,r0,0x1
  404d38:	bc 0b 00 00 	l.sfeqi r11,0x0
  404d3c:	10 00 00 05 	l.bf 404d50 <FileReadEx+0xd4>
  404d40:	e0 42 80 02 	l.sub r2,r2,r16
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

    unsigned long sb;
    unsigned long bc; // block count of single multisector read operation

    while (nSize)
  404d44:	bc 22 00 00 	l.sfnei r2,0x0
  404d48:	13 ff ff e2 	l.bf 404cd0 <FileReadEx+0x54>
  404d4c:	9d 60 00 01 	l.addi r11,r0,0x1
    }

    return 1;

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}
  404d50:	9c 21 00 28 	l.addi r1,r1,0x28
  404d54:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  404d58:	84 41 ff d8 	l.lwz r2,0xffffffd8(r1)
  404d5c:	85 c1 ff dc 	l.lwz r14,0xffffffdc(r1)
  404d60:	86 01 ff e0 	l.lwz r16,0xffffffe0(r1)
  404d64:	86 41 ff e4 	l.lwz r18,0xffffffe4(r1)
  404d68:	86 81 ff e8 	l.lwz r20,0xffffffe8(r1)
  404d6c:	86 c1 ff ec 	l.lwz r22,0xffffffec(r1)
  404d70:	87 01 ff f0 	l.lwz r24,0xfffffff0(r1)
  404d74:	87 41 ff f4 	l.lwz r26,0xfffffff4(r1)
  404d78:	44 00 48 00 	l.jr r9
  404d7c:	87 81 ff f8 	l.lwz r28,0xfffffff8(r1)

00404d80 <GetHardfileGeometry>:
  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L3);
}


void GetHardfileGeometry(hdfTYPE *pHDF)
{ // this function comes from WinUAE, should return the same CHS as WinUAE
  404d80:	d7 e1 17 e4 	l.sw 0xffffffe4(r1),r2
  404d84:	d7 e1 97 f0 	l.sw 0xfffffff0(r1),r18
  404d88:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  404d8c:	d7 e1 77 e8 	l.sw 0xffffffe8(r1),r14
  404d90:	d7 e1 87 ec 	l.sw 0xffffffec(r1),r16
  404d94:	d7 e1 a7 f4 	l.sw 0xfffffff4(r1),r20
  404d98:	d7 e1 b7 f8 	l.sw 0xfffffff8(r1),r22
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

    unsigned long total=0;
    unsigned long i, head, cyl, spt;
    unsigned long sptt[] = { 63, 127, 255, -1 };
  404d9c:	9e 40 00 10 	l.addi r18,r0,0x10
  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L3);
}


void GetHardfileGeometry(hdfTYPE *pHDF)
{ // this function comes from WinUAE, should return the same CHS as WinUAE
  404da0:	9c 21 ff d0 	l.addi r1,r1,0xffffffd0
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

    unsigned long total=0;
    unsigned long i, head, cyl, spt;
    unsigned long sptt[] = { 63, 127, 255, -1 };
  404da4:	18 80 00 41 	l.movhi r4,0x41
  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L3);
}


void GetHardfileGeometry(hdfTYPE *pHDF)
{ // this function comes from WinUAE, should return the same CHS as WinUAE
  404da8:	a8 43 00 00 	l.ori r2,r3,0x0
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

    unsigned long total=0;
    unsigned long i, head, cyl, spt;
    unsigned long sptt[] = { 63, 127, 255, -1 };
  404dac:	a8 84 74 04 	l.ori r4,r4,0x7404
  404db0:	9c 61 00 04 	l.addi r3,r1,0x4
  404db4:	07 ff ed 33 	l.jal 400280 <memcpy>
  404db8:	a8 b2 00 00 	l.ori r5,r18,0x0

	switch(pHDF->type)
  404dbc:	84 62 00 00 	l.lwz r3,0x0(r2)
  404dc0:	bd 43 00 06 	l.sfgtsi r3,0x6
  404dc4:	10 00 00 0c 	l.bf 404df4 <GetHardfileGeometry+0x74>
  404dc8:	bc 03 00 81 	l.sfeqi r3,0x81
  404dcc:	bd 63 00 03 	l.sfgesi r3,0x3
  404dd0:	10 00 00 83 	l.bf 404fdc <GetHardfileGeometry+0x25c>
  404dd4:	18 80 00 41 	l.movhi r4,0x41
  404dd8:	bc 03 00 01 	l.sfeqi r3,0x1
  404ddc:	10 00 00 13 	l.bf 404e28 <GetHardfileGeometry+0xa8>
  404de0:	bc 03 00 02 	l.sfeqi r3,0x2
  404de4:	0c 00 00 84 	l.bnf 404ff4 <GetHardfileGeometry+0x274>
  404de8:	19 c0 00 80 	l.movhi r14,0x80
unsigned char MMC_GetCSD()
{
  DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L1);

	int i;
    EnableCard();
  404dec:	00 00 00 15 	l.j 404e40 <GetHardfileGeometry+0xc0>
  404df0:	9c 60 00 11 	l.addi r3,r0,0x11
  404df4:	0c 00 00 81 	l.bnf 404ff8 <GetHardfileGeometry+0x278>
  404df8:	9d c0 00 00 	l.addi r14,r0,0x0
	{
		case (HDF_FILE | HDF_SYNTHRDB):
		    if (pHDF->file.size == 0)
  404dfc:	84 62 00 1c 	l.lwz r3,0x1c(r2)
  404e00:	bc 03 00 00 	l.sfeqi r3,0x0
  404e04:	10 00 00 a9 	l.bf 4050a8 <GetHardfileGeometry+0x328>
  404e08:	b8 63 00 4e 	l.srli r3,r3,0xe
    		    return;
		    total = pHDF->file.size / 512;
			pHDF->heads = 1;
  404e0c:	9c 80 00 01 	l.addi r4,r0,0x1
			pHDF->sectors = 32;
  404e10:	9c c0 00 20 	l.addi r6,r0,0x20
			pHDF->cylinders = total/32 + 1;	// Add a cylinder for the fake RDB.
  404e14:	9c 63 00 01 	l.addi r3,r3,0x1
	{
		case (HDF_FILE | HDF_SYNTHRDB):
		    if (pHDF->file.size == 0)
    		    return;
		    total = pHDF->file.size / 512;
			pHDF->heads = 1;
  404e18:	dc 02 21 32 	l.sh 0x132(r2),r4
			pHDF->sectors = 32;
  404e1c:	dc 02 31 34 	l.sh 0x134(r2),r6
			pHDF->cylinders = total/32 + 1;	// Add a cylinder for the fake RDB.
			return;			
  404e20:	00 00 00 a2 	l.j 4050a8 <GetHardfileGeometry+0x328>
  404e24:	dc 02 19 30 	l.sh 0x130(r2),r3
		case HDF_FILE:
		    if (pHDF->file.size == 0)
  404e28:	85 c2 00 1c 	l.lwz r14,0x1c(r2)
  404e2c:	bc 0e 00 00 	l.sfeqi r14,0x0
  404e30:	10 00 00 9e 	l.bf 4050a8 <GetHardfileGeometry+0x328>
  404e34:	b9 ce 00 49 	l.srli r14,r14,0x9
    		    return;
		    total = pHDF->file.size / 512;
			break;
  404e38:	00 00 00 71 	l.j 404ffc <GetHardfileGeometry+0x27c>
  404e3c:	9e 81 00 04 	l.addi r20,r1,0x4
  404e40:	aa 0e 00 20 	l.ori r16,r14,0x20

    if (MMC_Command(CMD9,0))
  404e44:	9c 80 00 00 	l.addi r4,r0,0x0
unsigned char MMC_GetCSD()
{
  DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L1);

	int i;
    EnableCard();
  404e48:	d4 10 18 00 	l.sw 0x0(r16),r3

    if (MMC_Command(CMD9,0))
  404e4c:	07 ff f9 0f 	l.jal 403288 <MMC_Command>
  404e50:	9c 60 00 49 	l.addi r3,r0,0x49
  404e54:	bc 0b 00 00 	l.sfeqi r11,0x0
  404e58:	10 00 00 0c 	l.bf 404e88 <GetHardfileGeometry+0x108>
  404e5c:	15 00 00 00 	l.nop 0x0
    {
        printf("CMD9 (GET_CSD): invalid response 0x%02X \r", response);
  404e60:	18 60 00 41 	l.movhi r3,0x41
  404e64:	a8 63 fd 64 	l.ori r3,r3,0xfd64
  404e68:	8c 63 00 00 	l.lbz r3,0x0(r3)
  404e6c:	d4 01 18 00 	l.sw 0x0(r1),r3
  404e70:	18 60 00 41 	l.movhi r3,0x41
  404e74:	07 ff fe 08 	l.jal 404694 <printf>
  404e78:	a8 63 79 12 	l.ori r3,r3,0x7912
        DisableCard();
  404e7c:	d4 10 90 00 	l.sw 0x0(r16),r18
//			++result;
//			result<<=cmult+2;
//			return(result);
//			break;
//	}
    if ((CSDData[0] & 0xC0)==0x40)   //CSD Version 2.0 - SDHC
  404e80:	00 00 00 38 	l.j 404f60 <GetHardfileGeometry+0x1e0>
  404e84:	18 60 00 41 	l.movhi r3,0x41
        DisableCard();
        return(0);
    }

    // now we are waiting for data token, it takes around 300us
    timeout = 0;
  404e88:	18 60 00 41 	l.movhi r3,0x41
    while ((SPI(0xFF)) != 0xFE)
  404e8c:	9c 80 00 ff 	l.addi r4,r0,0xff
        DisableCard();
        return(0);
    }

    // now we are waiting for data token, it takes around 300us
    timeout = 0;
  404e90:	a8 63 fd 60 	l.ori r3,r3,0xfd60
  404e94:	d4 03 58 00 	l.sw 0x0(r3),r11
    while ((SPI(0xFF)) != 0xFE)
  404e98:	00 00 00 12 	l.j 404ee0 <GetHardfileGeometry+0x160>
  404e9c:	a8 6e 00 24 	l.ori r3,r14,0x24
        DisableCard();
        return(0);
    }

    // now we are waiting for data token, it takes around 300us
    timeout = 0;
  404ea0:	9d 6b 00 01 	l.addi r11,r11,0x1
    while ((SPI(0xFF)) != 0xFE)
    {
        if (timeout++ >= 1000000) // we can't wait forever
  404ea4:	9c ab ff ff 	l.addi r5,r11,0xffffffff
  404ea8:	a8 e7 42 3f 	l.ori r7,r7,0x423f
  404eac:	e4 a5 38 00 	l.sfleu r5,r7
  404eb0:	10 00 00 0c 	l.bf 404ee0 <GetHardfileGeometry+0x160>
  404eb4:	a9 ce 00 20 	l.ori r14,r14,0x20
  404eb8:	18 60 00 41 	l.movhi r3,0x41
  404ebc:	a8 63 fd 60 	l.ori r3,r3,0xfd60
  404ec0:	d4 03 58 00 	l.sw 0x0(r3),r11
        {
            printf("CMD9 (READ_BLOCK): no data token!\r");
  404ec4:	18 60 00 41 	l.movhi r3,0x41
  404ec8:	07 ff fd f3 	l.jal 404694 <printf>
  404ecc:	a8 63 79 3c 	l.ori r3,r3,0x793c
            DisableCard();
  404ed0:	9c 60 00 10 	l.addi r3,r0,0x10
  404ed4:	d4 0e 18 00 	l.sw 0x0(r14),r3
//			++result;
//			result<<=cmult+2;
//			return(result);
//			break;
//	}
    if ((CSDData[0] & 0xC0)==0x40)   //CSD Version 2.0 - SDHC
  404ed8:	00 00 00 22 	l.j 404f60 <GetHardfileGeometry+0x1e0>
  404edc:	18 60 00 41 	l.movhi r3,0x41
        return(0);
    }

    // now we are waiting for data token, it takes around 300us
    timeout = 0;
    while ((SPI(0xFF)) != 0xFE)
  404ee0:	d4 03 20 00 	l.sw 0x0(r3),r4
  404ee4:	19 c0 00 80 	l.movhi r14,0x80
  404ee8:	84 a3 00 00 	l.lwz r5,0x0(r3)
  404eec:	bc 25 00 fe 	l.sfnei r5,0xfe
  404ef0:	13 ff ff ec 	l.bf 404ea0 <GetHardfileGeometry+0x120>
  404ef4:	18 e0 00 0f 	l.movhi r7,0xf
  404ef8:	18 60 00 41 	l.movhi r3,0x41
  404efc:	18 80 00 41 	l.movhi r4,0x41
  404f00:	a8 63 fd 60 	l.ori r3,r3,0xfd60
  404f04:	a8 84 a8 e8 	l.ori r4,r4,0xa8e8
  404f08:	d4 03 58 00 	l.sw 0x0(r3),r11
            return(0);
        }
    }

	for (i = 0; i < 16; i++)
		CSDData[i]=SPI(0xFF);
  404f0c:	9c c0 00 ff 	l.addi r6,r0,0xff
  404f10:	a8 6e 00 24 	l.ori r3,r14,0x24
  404f14:	d4 03 30 00 	l.sw 0x0(r3),r6
  404f18:	9c a0 00 ff 	l.addi r5,r0,0xff
  404f1c:	84 e3 00 00 	l.lwz r7,0x0(r3)
  404f20:	d8 04 38 00 	l.sb 0x0(r4),r7
            DisableCard();
            return(0);
        }
    }

	for (i = 0; i < 16; i++)
  404f24:	18 e0 00 41 	l.movhi r7,0x41
		CSDData[i]=SPI(0xFF);
  404f28:	9c 84 00 01 	l.addi r4,r4,0x1
            DisableCard();
            return(0);
        }
    }

	for (i = 0; i < 16; i++)
  404f2c:	a8 e7 a8 f8 	l.ori r7,r7,0xa8f8
  404f30:	e4 24 38 00 	l.sfne r4,r7
  404f34:	13 ff ff f8 	l.bf 404f14 <GetHardfileGeometry+0x194>
  404f38:	15 00 00 00 	l.nop 0x0
		CSDData[i]=SPI(0xFF);

    SPI(0xFF); // read CRC lo byte
  404f3c:	d4 03 28 00 	l.sw 0x0(r3),r5
  404f40:	84 83 00 00 	l.lwz r4,0x0(r3)
    SPI(0xFF); // read CRC hi byte
  404f44:	d4 03 28 00 	l.sw 0x0(r3),r5

    DisableCard();
  404f48:	9c 80 00 10 	l.addi r4,r0,0x10

	for (i = 0; i < 16; i++)
		CSDData[i]=SPI(0xFF);

    SPI(0xFF); // read CRC lo byte
    SPI(0xFF); // read CRC hi byte
  404f4c:	84 63 00 00 	l.lwz r3,0x0(r3)

    DisableCard();
  404f50:	18 60 00 80 	l.movhi r3,0x80
  404f54:	a8 63 00 20 	l.ori r3,r3,0x20
  404f58:	d4 03 20 00 	l.sw 0x0(r3),r4
//			++result;
//			result<<=cmult+2;
//			return(result);
//			break;
//	}
    if ((CSDData[0] & 0xC0)==0x40)   //CSD Version 2.0 - SDHC
  404f5c:	18 60 00 41 	l.movhi r3,0x41
  404f60:	a8 63 a8 e8 	l.ori r3,r3,0xa8e8
  404f64:	8c 83 00 00 	l.lbz r4,0x0(r3)
  404f68:	a4 84 00 c0 	l.andi r4,r4,0xc0
  404f6c:	8c a3 00 07 	l.lbz r5,0x7(r3)
  404f70:	bc 24 00 40 	l.sfnei r4,0x40
  404f74:	8c c3 00 08 	l.lbz r6,0x8(r3)
  404f78:	10 00 00 09 	l.bf 404f9c <GetHardfileGeometry+0x21c>
  404f7c:	8c 83 00 09 	l.lbz r4,0x9(r3)
    {
			result=(CSDData[7]&0x3f)<<26;
  404f80:	b8 a5 00 1a 	l.slli r5,r5,0x1a
			result|=CSDData[8]<<18;
  404f84:	b9 c6 00 12 	l.slli r14,r6,0x12
			result|=CSDData[9]<<10;
  404f88:	b8 84 00 0a 	l.slli r4,r4,0xa
//			break;
//	}
    if ((CSDData[0] & 0xC0)==0x40)   //CSD Version 2.0 - SDHC
    {
			result=(CSDData[7]&0x3f)<<26;
			result|=CSDData[8]<<18;
  404f8c:	e1 ce 28 04 	l.or r14,r14,r5
			result|=CSDData[9]<<10;
  404f90:	e1 ce 20 04 	l.or r14,r14,r4
			result+=1024;
  404f94:	00 00 00 19 	l.j 404ff8 <GetHardfileGeometry+0x278>
  404f98:	9d ce 04 00 	l.addi r14,r14,0x400
	}
	else
	{    
			int blocksize=CSDData[5]&15;	// READ_BL_LEN
			blocksize=1<<(blocksize-9);		// Now a scalar:  physical block size / 512.
			result=(CSDData[6]&3)<<10;
  404f9c:	8c e3 00 06 	l.lbz r7,0x6(r3)
			result|=CSDData[7]<<2;
 			result|=(CSDData[8]>>6)&3;		// result now contains C_SIZE
			int cmult=(CSDData[9]&3)<<1;
			cmult|=(CSDData[10]>>7) & 1;
  404fa0:	8c 63 00 0a 	l.lbz r3,0xa(r3)
	}
	else
	{    
			int blocksize=CSDData[5]&15;	// READ_BL_LEN
			blocksize=1<<(blocksize-9);		// Now a scalar:  physical block size / 512.
			result=(CSDData[6]&3)<<10;
  404fa4:	a4 e7 00 03 	l.andi r7,r7,0x3
			result|=CSDData[7]<<2;
 			result|=(CSDData[8]>>6)&3;		// result now contains C_SIZE
  404fa8:	b9 c6 00 46 	l.srli r14,r6,0x6
	else
	{    
			int blocksize=CSDData[5]&15;	// READ_BL_LEN
			blocksize=1<<(blocksize-9);		// Now a scalar:  physical block size / 512.
			result=(CSDData[6]&3)<<10;
			result|=CSDData[7]<<2;
  404fac:	b8 a5 00 02 	l.slli r5,r5,0x2
 			result|=(CSDData[8]>>6)&3;		// result now contains C_SIZE
			int cmult=(CSDData[9]&3)<<1;
  404fb0:	a4 84 00 03 	l.andi r4,r4,0x3
	}
	else
	{    
			int blocksize=CSDData[5]&15;	// READ_BL_LEN
			blocksize=1<<(blocksize-9);		// Now a scalar:  physical block size / 512.
			result=(CSDData[6]&3)<<10;
  404fb4:	b8 e7 00 0a 	l.slli r7,r7,0xa
			result|=CSDData[7]<<2;
 			result|=(CSDData[8]>>6)&3;		// result now contains C_SIZE
			int cmult=(CSDData[9]&3)<<1;
			cmult|=(CSDData[10]>>7) & 1;
  404fb8:	b8 63 00 47 	l.srli r3,r3,0x7
	else
	{    
			int blocksize=CSDData[5]&15;	// READ_BL_LEN
			blocksize=1<<(blocksize-9);		// Now a scalar:  physical block size / 512.
			result=(CSDData[6]&3)<<10;
			result|=CSDData[7]<<2;
  404fbc:	e1 ce 28 04 	l.or r14,r14,r5
 			result|=(CSDData[8]>>6)&3;		// result now contains C_SIZE
			int cmult=(CSDData[9]&3)<<1;
  404fc0:	e0 84 20 00 	l.add r4,r4,r4
	{    
			int blocksize=CSDData[5]&15;	// READ_BL_LEN
			blocksize=1<<(blocksize-9);		// Now a scalar:  physical block size / 512.
			result=(CSDData[6]&3)<<10;
			result|=CSDData[7]<<2;
 			result|=(CSDData[8]>>6)&3;		// result now contains C_SIZE
  404fc4:	e1 ce 38 04 	l.or r14,r14,r7
			int cmult=(CSDData[9]&3)<<1;
			cmult|=(CSDData[10]>>7) & 1;
  404fc8:	e0 83 20 04 	l.or r4,r3,r4
			++result;
  404fcc:	9d ce 00 01 	l.addi r14,r14,0x1
			result<<=cmult+2;
  404fd0:	9c 84 00 02 	l.addi r4,r4,0x2
		case HDF_CARD:
		    total = MMC_GetCapacity();	// GetCapacity returns number of blocks, not bytes.
			break;
  404fd4:	00 00 00 09 	l.j 404ff8 <GetHardfileGeometry+0x278>
  404fd8:	e1 ce 20 08 	l.sll r14,r14,r4
		case HDF_CARDPART0:
		case HDF_CARDPART1:
		case HDF_CARDPART2:
		case HDF_CARDPART3:
		    total = partitions[pHDF->partition].sectors;
  404fdc:	94 62 01 38 	l.lhz r3,0x138(r2)
  404fe0:	b8 63 00 04 	l.slli r3,r3,0x4
  404fe4:	a8 84 a4 98 	l.ori r4,r4,0xa498
  404fe8:	e0 63 20 00 	l.add r3,r3,r4
			break;
  404fec:	00 00 00 03 	l.j 404ff8 <GetHardfileGeometry+0x278>
  404ff0:	85 c3 00 0c 	l.lwz r14,0xc(r3)

void GetHardfileGeometry(hdfTYPE *pHDF)
{ // this function comes from WinUAE, should return the same CHS as WinUAE
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

    unsigned long total=0;
  404ff4:	9d c0 00 00 	l.addi r14,r0,0x0
		case HDF_CARDPART0:
		case HDF_CARDPART1:
		case HDF_CARDPART2:
		case HDF_CARDPART3:
		    total = partitions[pHDF->partition].sectors;
			break;
  404ff8:	9e 81 00 04 	l.addi r20,r1,0x4
			break;
	}

    for (i = 0; sptt[i] >= 0; i++)
    {
        spt = sptt[i];
  404ffc:	86 54 00 00 	l.lwz r18,0x0(r20)
        for (head = 4; head <= 16; head++)
  405000:	9e 00 00 04 	l.addi r16,r0,0x4
			break;
	}

    for (i = 0; sptt[i] >= 0; i++)
    {
        spt = sptt[i];
  405004:	ba d2 00 02 	l.slli r22,r18,0x2
        for (head = 4; head <= 16; head++)
        {
            cyl = total / (head * spt);
  405008:	a8 6e 00 00 	l.ori r3,r14,0x0
  40500c:	07 ff ec 26 	l.jal 4000a4 <__udivsi3>
  405010:	a8 96 00 00 	l.ori r4,r22,0x0
            if (total <= 1024 * 1024)
  405014:	18 c0 00 10 	l.movhi r6,0x10
  405018:	e4 4e 30 00 	l.sfgtu r14,r6
  40501c:	0c 00 00 15 	l.bnf 405070 <GetHardfileGeometry+0x2f0>
  405020:	bc ab 03 ff 	l.sfleui r11,0x3ff
                if (cyl <= 1023)
                    break;
            }
            else
            {
                if (cyl < 16383)
  405024:	bc ab 3f fe 	l.sfleui r11,0x3ffe
  405028:	10 00 00 1a 	l.bf 405090 <GetHardfileGeometry+0x310>
  40502c:	bc ab 7f fe 	l.sfleui r11,0x7ffe
                    break;
                if (cyl < 32767 && head >= 5)
  405030:	10 00 00 03 	l.bf 40503c <GetHardfileGeometry+0x2bc>
  405034:	9c 60 00 01 	l.addi r3,r0,0x1
  405038:	9c 60 00 00 	l.addi r3,r0,0x0
  40503c:	a4 63 00 ff 	l.andi r3,r3,0xff
  405040:	bc 03 00 00 	l.sfeqi r3,0x0
  405044:	10 00 00 0a 	l.bf 40506c <GetHardfileGeometry+0x2ec>
  405048:	a8 e0 ff ff 	l.ori r7,r0,0xffff
  40504c:	bc 50 00 04 	l.sfgtui r16,0x4
  405050:	10 00 00 03 	l.bf 40505c <GetHardfileGeometry+0x2dc>
  405054:	9c 60 00 01 	l.addi r3,r0,0x1
  405058:	9c 60 00 00 	l.addi r3,r0,0x0
  40505c:	a4 63 00 ff 	l.andi r3,r3,0xff
  405060:	bc 23 00 00 	l.sfnei r3,0x0
  405064:	10 00 00 0b 	l.bf 405090 <GetHardfileGeometry+0x310>
  405068:	a8 e0 ff ff 	l.ori r7,r0,0xffff
                    break;
                if (cyl <= 65535)	// Should there some head constraint here?
  40506c:	e4 ab 38 00 	l.sfleu r11,r7
  405070:	10 00 00 08 	l.bf 405090 <GetHardfileGeometry+0x310>
  405074:	15 00 00 00 	l.nop 0x0
	}

    for (i = 0; sptt[i] >= 0; i++)
    {
        spt = sptt[i];
        for (head = 4; head <= 16; head++)
  405078:	9e 10 00 01 	l.addi r16,r16,0x1
  40507c:	bc 30 00 11 	l.sfnei r16,0x11
  405080:	13 ff ff e2 	l.bf 405008 <GetHardfileGeometry+0x288>
  405084:	e2 d6 90 00 	l.add r22,r22,r18
        if (head <= 16)
            break;
    }
    pHDF->cylinders = (unsigned short)cyl;
    pHDF->heads = (unsigned short)head;
    pHDF->sectors = (unsigned short)spt;
  405088:	00 00 00 06 	l.j 4050a0 <GetHardfileGeometry+0x320>
  40508c:	9e 94 00 04 	l.addi r20,r20,0x4
            }
        }
        if (head <= 16)
            break;
    }
    pHDF->cylinders = (unsigned short)cyl;
  405090:	dc 02 59 30 	l.sh 0x130(r2),r11
    pHDF->heads = (unsigned short)head;
  405094:	dc 02 81 32 	l.sh 0x132(r2),r16
    pHDF->sectors = (unsigned short)spt;
  405098:	00 00 00 04 	l.j 4050a8 <GetHardfileGeometry+0x328>
  40509c:	dc 02 91 34 	l.sh 0x134(r2),r18
                    break;
            }
        }
        if (head <= 16)
            break;
    }
  4050a0:	03 ff ff d8 	l.j 405000 <GetHardfileGeometry+0x280>
  4050a4:	86 54 00 00 	l.lwz r18,0x0(r20)
    pHDF->cylinders = (unsigned short)cyl;
    pHDF->heads = (unsigned short)head;
    pHDF->sectors = (unsigned short)spt;

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L1);
}
  4050a8:	9c 21 00 30 	l.addi r1,r1,0x30
  4050ac:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  4050b0:	84 41 ff e4 	l.lwz r2,0xffffffe4(r1)
  4050b4:	85 c1 ff e8 	l.lwz r14,0xffffffe8(r1)
  4050b8:	86 01 ff ec 	l.lwz r16,0xffffffec(r1)
  4050bc:	86 41 ff f0 	l.lwz r18,0xfffffff0(r1)
  4050c0:	86 81 ff f4 	l.lwz r20,0xfffffff4(r1)
  4050c4:	44 00 48 00 	l.jr r9
  4050c8:	86 c1 ff f8 	l.lwz r22,0xfffffff8(r1)

004050cc <MMC_Read>:
}


// Read single 512-byte block
unsigned char MMC_Read(unsigned long lba, unsigned char *pReadBuffer)
{
  4050cc:	d7 e1 17 ec 	l.sw 0xffffffec(r1),r2
  4050d0:	a8 43 00 00 	l.ori r2,r3,0x0
    // if pReadBuffer is NULL then use direct to the FPGA transfer mode (FPGA2 asserted)

    unsigned long i;
    unsigned char *p;

    if (CardType != CARDTYPE_SDHC) // SDHC cards are addressed in sectors not bytes
  4050d4:	18 60 00 41 	l.movhi r3,0x41
}


// Read single 512-byte block
unsigned char MMC_Read(unsigned long lba, unsigned char *pReadBuffer)
{
  4050d8:	d7 e1 77 f0 	l.sw 0xfffffff0(r1),r14
  4050dc:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  4050e0:	d7 e1 87 f4 	l.sw 0xfffffff4(r1),r16
  4050e4:	d7 e1 97 f8 	l.sw 0xfffffff8(r1),r18
    // if pReadBuffer is NULL then use direct to the FPGA transfer mode (FPGA2 asserted)

    unsigned long i;
    unsigned char *p;

    if (CardType != CARDTYPE_SDHC) // SDHC cards are addressed in sectors not bytes
  4050e8:	a8 63 fd 65 	l.ori r3,r3,0xfd65
}


// Read single 512-byte block
unsigned char MMC_Read(unsigned long lba, unsigned char *pReadBuffer)
{
  4050ec:	9c 21 ff e4 	l.addi r1,r1,0xffffffe4
    // if pReadBuffer is NULL then use direct to the FPGA transfer mode (FPGA2 asserted)

    unsigned long i;
    unsigned char *p;

    if (CardType != CARDTYPE_SDHC) // SDHC cards are addressed in sectors not bytes
  4050f0:	8c 63 00 00 	l.lbz r3,0x0(r3)
  4050f4:	bc 03 00 03 	l.sfeqi r3,0x3
  4050f8:	10 00 00 03 	l.bf 405104 <MMC_Read+0x38>
  4050fc:	a9 c4 00 00 	l.ori r14,r4,0x0
        lba = lba << 9; // otherwise convert sector adddress to byte address
  405100:	b8 42 00 09 	l.slli r2,r2,0x9

    EnableCard();
  405104:	1a 00 00 80 	l.movhi r16,0x80
  405108:	9c 60 00 11 	l.addi r3,r0,0x11
  40510c:	aa 50 00 20 	l.ori r18,r16,0x20

    if (MMC_Command(CMD17, lba))
  405110:	a8 82 00 00 	l.ori r4,r2,0x0
    unsigned char *p;

    if (CardType != CARDTYPE_SDHC) // SDHC cards are addressed in sectors not bytes
        lba = lba << 9; // otherwise convert sector adddress to byte address

    EnableCard();
  405114:	d4 12 18 00 	l.sw 0x0(r18),r3

    if (MMC_Command(CMD17, lba))
  405118:	07 ff f8 5c 	l.jal 403288 <MMC_Command>
  40511c:	9c 60 00 51 	l.addi r3,r0,0x51
  405120:	bc 0b 00 00 	l.sfeqi r11,0x0
  405124:	10 00 00 0e 	l.bf 40515c <MMC_Read+0x90>
  405128:	18 60 00 41 	l.movhi r3,0x41
    {
        printf("CMD17 (READ_BLOCK): invalid response 0x%02X (lba=%lu)\r", response, lba);
  40512c:	18 60 00 41 	l.movhi r3,0x41
  405130:	a8 63 fd 64 	l.ori r3,r3,0xfd64
  405134:	8c 63 00 00 	l.lbz r3,0x0(r3)
  405138:	d4 01 18 00 	l.sw 0x0(r1),r3
  40513c:	18 60 00 41 	l.movhi r3,0x41
  405140:	d4 01 10 04 	l.sw 0x4(r1),r2
  405144:	a8 63 79 5f 	l.ori r3,r3,0x795f
  405148:	07 ff fd 53 	l.jal 404694 <printf>
  40514c:	9c 40 00 10 	l.addi r2,r0,0x10
        DisableCard();
  405150:	d4 12 10 00 	l.sw 0x0(r18),r2
    {
        if (timeout++ >= 1000000) // we can't wait forever
        {
            printf("CMD17 (READ_BLOCK): no data token! (lba=%lu)\r", lba);
            DisableCard();
            return(0);
  405154:	00 00 00 51 	l.j 405298 <MMC_Read+0x1cc>
  405158:	9d 60 00 00 	l.addi r11,r0,0x0
        return(0);
    }

    // now we are waiting for data token, it takes around 300us
    timeout = 0;
    while ((SPI(0xFF)) != 0xFE)
  40515c:	a8 b0 00 24 	l.ori r5,r16,0x24
        DisableCard();
        return(0);
    }

    // now we are waiting for data token, it takes around 300us
    timeout = 0;
  405160:	a8 63 fd 60 	l.ori r3,r3,0xfd60
  405164:	d4 03 58 00 	l.sw 0x0(r3),r11
    while ((SPI(0xFF)) != 0xFE)
  405168:	00 00 00 14 	l.j 4051b8 <MMC_Read+0xec>
  40516c:	9c 60 00 ff 	l.addi r3,r0,0xff
  405170:	9d 6b 00 01 	l.addi r11,r11,0x1
    {
        if (timeout++ >= 1000000) // we can't wait forever
  405174:	18 c0 00 0f 	l.movhi r6,0xf
  405178:	9c 8b ff ff 	l.addi r4,r11,0xffffffff
  40517c:	a8 c6 42 3f 	l.ori r6,r6,0x423f
  405180:	e4 a4 30 00 	l.sfleu r4,r6
  405184:	10 00 00 0d 	l.bf 4051b8 <MMC_Read+0xec>
  405188:	aa 10 00 20 	l.ori r16,r16,0x20
  40518c:	18 60 00 41 	l.movhi r3,0x41
  405190:	a8 63 fd 60 	l.ori r3,r3,0xfd60
  405194:	d4 03 58 00 	l.sw 0x0(r3),r11
        {
            printf("CMD17 (READ_BLOCK): no data token! (lba=%lu)\r", lba);
  405198:	18 60 00 41 	l.movhi r3,0x41
  40519c:	d4 01 10 00 	l.sw 0x0(r1),r2
  4051a0:	a8 63 79 96 	l.ori r3,r3,0x7996
  4051a4:	07 ff fd 3c 	l.jal 404694 <printf>
  4051a8:	9c 40 00 10 	l.addi r2,r0,0x10
            DisableCard();
  4051ac:	d4 10 10 00 	l.sw 0x0(r16),r2
            return(0);
  4051b0:	00 00 00 3a 	l.j 405298 <MMC_Read+0x1cc>
  4051b4:	9d 60 00 00 	l.addi r11,r0,0x0
        return(0);
    }

    // now we are waiting for data token, it takes around 300us
    timeout = 0;
    while ((SPI(0xFF)) != 0xFE)
  4051b8:	d4 05 18 00 	l.sw 0x0(r5),r3
  4051bc:	1a 00 00 80 	l.movhi r16,0x80
  4051c0:	84 85 00 00 	l.lwz r4,0x0(r5)
  4051c4:	bc 24 00 fe 	l.sfnei r4,0xfe
  4051c8:	13 ff ff ea 	l.bf 405170 <MMC_Read+0xa4>
  4051cc:	9c c0 00 ff 	l.addi r6,r0,0xff
  4051d0:	18 40 00 41 	l.movhi r2,0x41
            DisableCard();
            return(0);
        }
    }

    if (pReadBuffer == 0)
  4051d4:	bc 2e 00 00 	l.sfnei r14,0x0
        return(0);
    }

    // now we are waiting for data token, it takes around 300us
    timeout = 0;
    while ((SPI(0xFF)) != 0xFE)
  4051d8:	a8 42 fd 60 	l.ori r2,r2,0xfd60
            DisableCard();
            return(0);
        }
    }

    if (pReadBuffer == 0)
  4051dc:	10 00 00 10 	l.bf 40521c <MMC_Read+0x150>
  4051e0:	d4 02 58 00 	l.sw 0x0(r2),r11
    {   // in this mode we do not receive data, instead the FPGA captures directly the data stream transmitted by the SD/MMC card
        EnableDMode();
  4051e4:	a8 50 00 20 	l.ori r2,r16,0x20
  4051e8:	9c 60 00 88 	l.addi r3,r0,0x88
        SPI_block(511);
  4051ec:	aa 10 00 28 	l.ori r16,r16,0x28
        }
    }

    if (pReadBuffer == 0)
    {   // in this mode we do not receive data, instead the FPGA captures directly the data stream transmitted by the SD/MMC card
        EnableDMode();
  4051f0:	d4 02 18 00 	l.sw 0x0(r2),r3
        SPI_block(511);
  4051f4:	9c 60 01 ff 	l.addi r3,r0,0x1ff
  4051f8:	d4 10 18 00 	l.sw 0x0(r16),r3
        SPI(0xff); // dummy write for 4096 clocks
  4051fc:	d4 05 30 00 	l.sw 0x0(r5),r6
  405200:	84 65 00 00 	l.lwz r3,0x0(r5)
        SPI(0xff);
  405204:	d4 05 30 00 	l.sw 0x0(r5),r6
  405208:	84 65 00 00 	l.lwz r3,0x0(r5)
        DisableDMode();
  40520c:	9c 60 00 80 	l.addi r3,r0,0x80
  405210:	d4 02 18 00 	l.sw 0x0(r2),r3
			*(p++) = SPI(0xFF);
			*(p++) = SPI(0xFF);
		}
    }

    SPI(0xFF); // read CRC lo byte
  405214:	00 00 00 17 	l.j 405270 <MMC_Read+0x1a4>
  405218:	18 60 00 80 	l.movhi r3,0x80
  DEBUG_FUNC_OUT(DEBUG_F_MMC | DEBUG_L0);
}


// Read single 512-byte block
unsigned char MMC_Read(unsigned long lba, unsigned char *pReadBuffer)
  40521c:	9c ee 02 00 	l.addi r7,r14,0x200
  405220:	a8 8e 00 00 	l.ori r4,r14,0x0
    else
    {
		p=pReadBuffer;
		for (i = 0; i < 128; i++)
		{ 
			*(p++) = SPI(0xFF);
  405224:	a8 65 00 00 	l.ori r3,r5,0x0
  405228:	a8 46 00 00 	l.ori r2,r6,0x0
  40522c:	d4 03 10 00 	l.sw 0x0(r3),r2
  405230:	84 a3 00 00 	l.lwz r5,0x0(r3)
  405234:	d8 04 28 00 	l.sb 0x0(r4),r5
			*(p++) = SPI(0xFF);
  405238:	d4 03 10 00 	l.sw 0x0(r3),r2
  40523c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  405240:	d8 04 28 01 	l.sb 0x1(r4),r5
			*(p++) = SPI(0xFF);
  405244:	d4 03 10 00 	l.sw 0x0(r3),r2
  405248:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40524c:	d8 04 28 02 	l.sb 0x2(r4),r5
			*(p++) = SPI(0xFF);
  405250:	d4 03 10 00 	l.sw 0x0(r3),r2
  405254:	84 a3 00 00 	l.lwz r5,0x0(r3)
  405258:	d8 04 28 03 	l.sb 0x3(r4),r5
  DEBUG_FUNC_OUT(DEBUG_F_MMC | DEBUG_L0);
}


// Read single 512-byte block
unsigned char MMC_Read(unsigned long lba, unsigned char *pReadBuffer)
  40525c:	9c 84 00 04 	l.addi r4,r4,0x4
        DisableDMode();
    }
    else
    {
		p=pReadBuffer;
		for (i = 0; i < 128; i++)
  405260:	e4 24 38 00 	l.sfne r4,r7
  405264:	13 ff ff f2 	l.bf 40522c <MMC_Read+0x160>
  405268:	15 00 00 00 	l.nop 0x0
			*(p++) = SPI(0xFF);
			*(p++) = SPI(0xFF);
		}
    }

    SPI(0xFF); // read CRC lo byte
  40526c:	18 60 00 80 	l.movhi r3,0x80
  405270:	9c 80 00 ff 	l.addi r4,r0,0xff
  405274:	a8 43 00 24 	l.ori r2,r3,0x24
    SPI(0xFF); // read CRC hi byte

    DisableCard();
  405278:	a8 63 00 20 	l.ori r3,r3,0x20
			*(p++) = SPI(0xFF);
			*(p++) = SPI(0xFF);
		}
    }

    SPI(0xFF); // read CRC lo byte
  40527c:	d4 02 20 00 	l.sw 0x0(r2),r4
    SPI(0xFF); // read CRC hi byte

    DisableCard();
    return(1);
  405280:	9d 60 00 01 	l.addi r11,r0,0x1
			*(p++) = SPI(0xFF);
			*(p++) = SPI(0xFF);
		}
    }

    SPI(0xFF); // read CRC lo byte
  405284:	84 a2 00 00 	l.lwz r5,0x0(r2)
    SPI(0xFF); // read CRC hi byte
  405288:	d4 02 20 00 	l.sw 0x0(r2),r4
  40528c:	84 42 00 00 	l.lwz r2,0x0(r2)

    DisableCard();
  405290:	9c 40 00 10 	l.addi r2,r0,0x10
  405294:	d4 03 10 00 	l.sw 0x0(r3),r2
    return(1);

  DEBUG_FUNC_OUT(DEBUG_F_MMC | DEBUG_L0);
}
  405298:	9c 21 00 1c 	l.addi r1,r1,0x1c
  40529c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  4052a0:	84 41 ff ec 	l.lwz r2,0xffffffec(r1)
  4052a4:	85 c1 ff f0 	l.lwz r14,0xfffffff0(r1)
  4052a8:	86 01 ff f4 	l.lwz r16,0xfffffff4(r1)
  4052ac:	44 00 48 00 	l.jr r9
  4052b0:	86 41 ff f8 	l.lwz r18,0xfffffff8(r1)

004052b4 <FileRead>:
}


//#pragma section_code_init
unsigned char FileRead(fileTYPE *file, unsigned char *pBuffer)
{
  4052b4:	d7 e1 77 f4 	l.sw 0xfffffff4(r1),r14
  4052b8:	a9 c3 00 00 	l.ori r14,r3,0x0
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

    unsigned long sb;

    sb = data_start;                         // start of data in partition
  4052bc:	18 60 00 41 	l.movhi r3,0x41
}


//#pragma section_code_init
unsigned char FileRead(fileTYPE *file, unsigned char *pBuffer)
{
  4052c0:	d7 e1 17 f0 	l.sw 0xfffffff0(r1),r2
  4052c4:	a8 44 00 00 	l.ori r2,r4,0x0
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

    unsigned long sb;

    sb = data_start;                         // start of data in partition
    sb += cluster_size * (file->cluster-2);  // cluster offset
  4052c8:	18 80 00 41 	l.movhi r4,0x41
}


//#pragma section_code_init
unsigned char FileRead(fileTYPE *file, unsigned char *pBuffer)
{
  4052cc:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  4052d0:	d7 e1 87 f8 	l.sw 0xfffffff8(r1),r16
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

    unsigned long sb;

    sb = data_start;                         // start of data in partition
  4052d4:	a8 63 dc 8c 	l.ori r3,r3,0xdc8c
    sb += cluster_size * (file->cluster-2);  // cluster offset
  4052d8:	a8 84 a8 dc 	l.ori r4,r4,0xa8dc
{
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

    unsigned long sb;

    sb = data_start;                         // start of data in partition
  4052dc:	86 03 00 00 	l.lwz r16,0x0(r3)
    sb += cluster_size * (file->cluster-2);  // cluster offset
  4052e0:	84 6e 00 1c 	l.lwz r3,0x1c(r14)
  4052e4:	8c 84 00 00 	l.lbz r4,0x0(r4)
}


//#pragma section_code_init
unsigned char FileRead(fileTYPE *file, unsigned char *pBuffer)
{
  4052e8:	9c 21 ff f0 	l.addi r1,r1,0xfffffff0
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

    unsigned long sb;

    sb = data_start;                         // start of data in partition
    sb += cluster_size * (file->cluster-2);  // cluster offset
  4052ec:	07 ff eb 5f 	l.jal 400068 <__mulsi3>
  4052f0:	9c 63 ff fe 	l.addi r3,r3,0xfffffffe
    sb += file->sector & ~cluster_mask;      // sector offset in cluster
  4052f4:	18 60 00 41 	l.movhi r3,0x41
  4052f8:	84 8e 00 14 	l.lwz r4,0x14(r14)
  4052fc:	a8 63 a8 e0 	l.ori r3,r3,0xa8e0
  405300:	84 63 00 00 	l.lwz r3,0x0(r3)
  405304:	ac 63 ff ff 	l.xori r3,r3,0xffffffff
  405308:	e0 63 20 03 	l.and r3,r3,r4

    if (!MMC_Read(sb, pBuffer)) // read sector from drive
  40530c:	a8 82 00 00 	l.ori r4,r2,0x0
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

    unsigned long sb;

    sb = data_start;                         // start of data in partition
    sb += cluster_size * (file->cluster-2);  // cluster offset
  405310:	e1 6b 18 00 	l.add r11,r11,r3
    sb += file->sector & ~cluster_mask;      // sector offset in cluster

    if (!MMC_Read(sb, pBuffer)) // read sector from drive
  405314:	07 ff ff 6e 	l.jal 4050cc <MMC_Read>
  405318:	e0 6b 80 00 	l.add r3,r11,r16
        return(0);
    else
        return(1);

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}
  40531c:	9c 21 00 10 	l.addi r1,r1,0x10
    sb = data_start;                         // start of data in partition
    sb += cluster_size * (file->cluster-2);  // cluster offset
    sb += file->sector & ~cluster_mask;      // sector offset in cluster

    if (!MMC_Read(sb, pBuffer)) // read sector from drive
        return(0);
  405320:	e1 60 58 02 	l.sub r11,r0,r11
    else
        return(1);

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}
  405324:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  405328:	b9 6b 00 5f 	l.srli r11,r11,0x1f
  40532c:	84 41 ff f0 	l.lwz r2,0xfffffff0(r1)
  405330:	85 c1 ff f4 	l.lwz r14,0xfffffff4(r1)
  405334:	44 00 48 00 	l.jr r9
  405338:	86 01 ff f8 	l.lwz r16,0xfffffff8(r1)

0040533c <FileSeek>:
}
//#pragma section_no_code_init


unsigned char FileSeek(fileTYPE *file, unsigned long offset, unsigned long origin)
{
  40533c:	d7 e1 17 d8 	l.sw 0xffffffd8(r1),r2
  405340:	d7 e1 77 dc 	l.sw 0xffffffdc(r1),r14
  405344:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  405348:	d7 e1 87 e0 	l.sw 0xffffffe0(r1),r16
  40534c:	d7 e1 97 e4 	l.sw 0xffffffe4(r1),r18
  405350:	d7 e1 a7 e8 	l.sw 0xffffffe8(r1),r20
  405354:	d7 e1 b7 ec 	l.sw 0xffffffec(r1),r22
  405358:	d7 e1 c7 f0 	l.sw 0xfffffff0(r1),r24
  40535c:	d7 e1 d7 f4 	l.sw 0xfffffff4(r1),r26
  405360:	d7 e1 e7 f8 	l.sw 0xfffffff8(r1),r28
  405364:	a8 43 00 00 	l.ori r2,r3,0x0
  405368:	9c 21 ff d8 	l.addi r1,r1,0xffffffd8
// origin can be set to SEEK_SET or SEEK_CUR

    unsigned long sb;
    unsigned short i;

    if (origin == SEEK_CUR)
  40536c:	bc 25 00 01 	l.sfnei r5,0x1
  405370:	10 00 00 04 	l.bf 405380 <FileSeek+0x44>
  405374:	a9 c4 00 00 	l.ori r14,r4,0x0
        offset += file->sector;
  405378:	84 63 00 14 	l.lwz r3,0x14(r3)
  40537c:	e1 c4 18 00 	l.add r14,r4,r3

    if (file->sector > offset) // current filepointer is beyond requested position
  405380:	84 62 00 14 	l.lwz r3,0x14(r2)
  405384:	e4 a3 70 00 	l.sfleu r3,r14
  405388:	10 00 00 53 	l.bf 4054d4 <FileSeek+0x198>
  40538c:	1b 40 00 41 	l.movhi r26,0x41
    { // so move it backwards
        if ((file->sector^offset) & cluster_mask) // moving backwards within current cluster?
  405390:	18 80 00 41 	l.movhi r4,0x41
  405394:	e0 6e 18 05 	l.xor r3,r14,r3
  405398:	a8 84 a8 e0 	l.ori r4,r4,0xa8e0
  40539c:	84 84 00 00 	l.lwz r4,0x0(r4)
  4053a0:	e0 63 20 03 	l.and r3,r3,r4
  4053a4:	bc 03 00 00 	l.sfeqi r3,0x0
  4053a8:	10 00 00 07 	l.bf 4053c4 <FileSeek+0x88>
  4053ac:	15 00 00 00 	l.nop 0x0
        { // different clusters, so go to the start of file
            file->cluster = file->start_cluster;
  4053b0:	84 62 00 20 	l.lwz r3,0x20(r2)
  4053b4:	d4 02 18 1c 	l.sw 0x1c(r2),r3
            file->sector = 0;
  4053b8:	9c 60 00 00 	l.addi r3,r0,0x0
  4053bc:	00 00 00 46 	l.j 4054d4 <FileSeek+0x198>
  4053c0:	d4 02 18 14 	l.sw 0x14(r2),r3
        }
        else
        { // same clusters, move filepointer backwards within current cluster
            file->sector = offset;
  4053c4:	00 00 00 43 	l.j 4054d0 <FileSeek+0x194>
  4053c8:	d4 02 70 14 	l.sw 0x14(r2),r14
    }
    
    // moving forward
    while ((file->sector^offset) & cluster_mask)  // compare clusters
    { // different clusters, get next one
        if (fat32)
  4053cc:	8c 78 00 00 	l.lbz r3,0x0(r24)
  4053d0:	bc 03 00 00 	l.sfeqi r3,0x0
  4053d4:	10 00 00 05 	l.bf 4053e8 <FileSeek+0xac>
  4053d8:	86 02 00 1c 	l.lwz r16,0x1c(r2)
        {
            sb = file->cluster >> 7; // calculate sector number containing FAT-link
  4053dc:	ba 50 00 47 	l.srli r18,r16,0x7
            i = file->cluster & 0x7F; // calculate link offsset within sector
  4053e0:	00 00 00 04 	l.j 4053f0 <FileSeek+0xb4>
  4053e4:	a6 10 00 7f 	l.andi r16,r16,0x7f
        }
        else
        {
            sb = file->cluster >> 8; // calculate sector number containing FAT-link
  4053e8:	ba 50 00 48 	l.srli r18,r16,0x8
            i = file->cluster & 0xFF; // calculate link offsset within sector
  4053ec:	a6 10 00 ff 	l.andi r16,r16,0xff
        }

        if (sb != buffered_fat_index)
  4053f0:	84 74 00 00 	l.lwz r3,0x0(r20)
  4053f4:	e4 12 18 00 	l.sfeq r18,r3
  4053f8:	10 00 00 0a 	l.bf 405420 <FileSeek+0xe4>
  4053fc:	18 80 00 41 	l.movhi r4,0x41
        {
            if (!MMC_Read(fat_start + sb, (unsigned char*)&fat_buffer)) // read sector of FAT if not already in the buffer
  405400:	84 76 00 00 	l.lwz r3,0x0(r22)
  405404:	e0 72 18 00 	l.add r3,r18,r3
  405408:	07 ff ff 31 	l.jal 4050cc <MMC_Read>
  40540c:	a8 84 dc a4 	l.ori r4,r4,0xdca4
  405410:	bc 0b 00 00 	l.sfeqi r11,0x0
  405414:	10 00 00 41 	l.bf 405518 <FileSeek+0x1dc>
  405418:	15 00 00 00 	l.nop 0x0
                return(0);

            buffered_fat_index = sb; // remember current buffer index
  40541c:	d4 14 90 00 	l.sw 0x0(r20),r18
        }

//        file->cluster = fat32 ? fat_buffer.fat32[i] & 0x0FFFFFFF : fat_buffer.fat16[i]; // get FAT-link
//        file->cluster = fat32 ? SwapBBBB(fat_buffer.fat32[i]) & 0x0FFFFFFF : SwapBB(fat_buffer.fat16[i]); // get FAT-link for 68000
        if (fat32)
  405420:	8d 78 00 00 	l.lbz r11,0x0(r24)
  405424:	bc 0b 00 00 	l.sfeqi r11,0x0
  405428:	10 00 00 19 	l.bf 40548c <FileSeek+0x150>
  40542c:	18 60 00 41 	l.movhi r3,0x41
        {
            file->cluster = SwapBBBB(fat_buffer.fat32[i]) & 0x0FFFFFFF; // get FAT32 link
  405430:	18 80 00 41 	l.movhi r4,0x41
  405434:	ba 10 00 02 	l.slli r16,r16,0x2
  405438:	a8 84 dc a4 	l.ori r4,r4,0xdca4
  40543c:	18 c0 00 ff 	l.movhi r6,0xff
  405440:	e2 10 20 00 	l.add r16,r16,r4
  405444:	84 70 00 00 	l.lwz r3,0x0(r16)
  405448:	b8 a3 00 18 	l.slli r5,r3,0x18
  40544c:	b8 83 00 58 	l.srli r4,r3,0x18
  405450:	e0 85 20 04 	l.or r4,r5,r4
  405454:	e0 a3 30 03 	l.and r5,r3,r6
  405458:	a4 63 ff 00 	l.andi r3,r3,0xff00
  40545c:	b8 a5 00 48 	l.srli r5,r5,0x8
  405460:	b8 63 00 08 	l.slli r3,r3,0x8
  405464:	e0 84 28 04 	l.or r4,r4,r5
  405468:	e0 64 18 04 	l.or r3,r4,r3
  40546c:	18 80 0f ff 	l.movhi r4,0xfff
  405470:	a8 84 ff ff 	l.ori r4,r4,0xffff
  405474:	e0 63 20 03 	l.and r3,r3,r4
            if (file->cluster == 0x0FFFFFFF) // FAT32 EOC
  405478:	e4 03 20 00 	l.sfeq r3,r4
  40547c:	0c 00 00 10 	l.bnf 4054bc <FileSeek+0x180>
  405480:	d4 02 18 1c 	l.sw 0x1c(r2),r3
                return 0;
  405484:	00 00 00 25 	l.j 405518 <FileSeek+0x1dc>
  405488:	9d 60 00 00 	l.addi r11,r0,0x0
        }
        else
        {
            file->cluster = SwapBB(fat_buffer.fat16[i]); // get FAT16 link
  40548c:	e2 10 80 00 	l.add r16,r16,r16
  405490:	a8 63 dc a4 	l.ori r3,r3,0xdca4
  405494:	e2 10 18 00 	l.add r16,r16,r3
  405498:	94 90 00 00 	l.lhz r4,0x0(r16)
  40549c:	b8 64 00 08 	l.slli r3,r4,0x8
  4054a0:	b8 84 00 48 	l.srli r4,r4,0x8
  4054a4:	a4 63 ff ff 	l.andi r3,r3,0xffff
  4054a8:	e0 63 20 04 	l.or r3,r3,r4
            if (file->cluster == 0xFFFF) // FAT16 EOC
  4054ac:	a8 80 ff ff 	l.ori r4,r0,0xffff
  4054b0:	e4 03 20 00 	l.sfeq r3,r4
  4054b4:	10 00 00 19 	l.bf 405518 <FileSeek+0x1dc>
  4054b8:	d4 02 18 1c 	l.sw 0x1c(r2),r3
                return 0;
        }

        file->sector += cluster_size; // move file pointer to next cluster
  4054bc:	8c 7c 00 00 	l.lbz r3,0x0(r28)
  4054c0:	84 82 00 14 	l.lwz r4,0x14(r2)
  4054c4:	e0 64 18 00 	l.add r3,r4,r3
  4054c8:	00 00 00 0c 	l.j 4054f8 <FileSeek+0x1bc>
  4054cc:	d4 02 18 14 	l.sw 0x14(r2),r3
            file->sector = offset;
        }
    }
    
    // moving forward
    while ((file->sector^offset) & cluster_mask)  // compare clusters
  4054d0:	1b 40 00 41 	l.movhi r26,0x41
    { // different clusters, get next one
        if (fat32)
  4054d4:	1b 00 00 41 	l.movhi r24,0x41
        {
            sb = file->cluster >> 8; // calculate sector number containing FAT-link
            i = file->cluster & 0xFF; // calculate link offsset within sector
        }

        if (sb != buffered_fat_index)
  4054d8:	1a 80 00 41 	l.movhi r20,0x41
        {
            if (!MMC_Read(fat_start + sb, (unsigned char*)&fat_buffer)) // read sector of FAT if not already in the buffer
  4054dc:	1a c0 00 41 	l.movhi r22,0x41
            file->cluster = SwapBB(fat_buffer.fat16[i]); // get FAT16 link
            if (file->cluster == 0xFFFF) // FAT16 EOC
                return 0;
        }

        file->sector += cluster_size; // move file pointer to next cluster
  4054e0:	1b 80 00 41 	l.movhi r28,0x41
            file->sector = offset;
        }
    }
    
    // moving forward
    while ((file->sector^offset) & cluster_mask)  // compare clusters
  4054e4:	ab 5a a8 e0 	l.ori r26,r26,0xa8e0
    { // different clusters, get next one
        if (fat32)
  4054e8:	ab 18 a3 51 	l.ori r24,r24,0xa351
        {
            sb = file->cluster >> 8; // calculate sector number containing FAT-link
            i = file->cluster & 0xFF; // calculate link offsset within sector
        }

        if (sb != buffered_fat_index)
  4054ec:	aa 94 de a4 	l.ori r20,r20,0xdea4
        {
            if (!MMC_Read(fat_start + sb, (unsigned char*)&fat_buffer)) // read sector of FAT if not already in the buffer
  4054f0:	aa d6 dc 88 	l.ori r22,r22,0xdc88
            file->cluster = SwapBB(fat_buffer.fat16[i]); // get FAT16 link
            if (file->cluster == 0xFFFF) // FAT16 EOC
                return 0;
        }

        file->sector += cluster_size; // move file pointer to next cluster
  4054f4:	ab 9c a8 dc 	l.ori r28,r28,0xa8dc
            file->sector = offset;
        }
    }
    
    // moving forward
    while ((file->sector^offset) & cluster_mask)  // compare clusters
  4054f8:	84 62 00 14 	l.lwz r3,0x14(r2)
  4054fc:	84 9a 00 00 	l.lwz r4,0x0(r26)
  405500:	e0 6e 18 05 	l.xor r3,r14,r3
  405504:	e0 63 20 03 	l.and r3,r3,r4
  405508:	bc 23 00 00 	l.sfnei r3,0x0
  40550c:	13 ff ff b0 	l.bf 4053cc <FileSeek+0x90>
  405510:	9d 60 00 01 	l.addi r11,r0,0x1
        }

        file->sector += cluster_size; // move file pointer to next cluster
    }

    file->sector = offset; // same clusters
  405514:	d4 02 70 14 	l.sw 0x14(r2),r14

    return(1);

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}
  405518:	9c 21 00 28 	l.addi r1,r1,0x28
  40551c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  405520:	84 41 ff d8 	l.lwz r2,0xffffffd8(r1)
  405524:	85 c1 ff dc 	l.lwz r14,0xffffffdc(r1)
  405528:	86 01 ff e0 	l.lwz r16,0xffffffe0(r1)
  40552c:	86 41 ff e4 	l.lwz r18,0xffffffe4(r1)
  405530:	86 81 ff e8 	l.lwz r20,0xffffffe8(r1)
  405534:	86 c1 ff ec 	l.lwz r22,0xffffffec(r1)
  405538:	87 01 ff f0 	l.lwz r24,0xfffffff0(r1)
  40553c:	87 41 ff f4 	l.lwz r26,0xfffffff4(r1)
  405540:	44 00 48 00 	l.jr r9
  405544:	87 81 ff f8 	l.lwz r28,0xfffffff8(r1)

00405548 <FileNextSector>:

    // increment sector index
    file->sector++;

    // cluster's boundary crossed?
    if ((file->sector&~cluster_mask) == 0)
  405548:	18 80 00 41 	l.movhi r4,0x41
}


//#pragma section_code_init
unsigned char FileNextSector(fileTYPE *file)
{
  40554c:	d7 e1 17 ec 	l.sw 0xffffffec(r1),r2
  405550:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  405554:	d7 e1 77 f0 	l.sw 0xfffffff0(r1),r14
  405558:	d7 e1 87 f4 	l.sw 0xfffffff4(r1),r16
  40555c:	d7 e1 97 f8 	l.sw 0xfffffff8(r1),r18

    // increment sector index
    file->sector++;

    // cluster's boundary crossed?
    if ((file->sector&~cluster_mask) == 0)
  405560:	a8 84 a8 e0 	l.ori r4,r4,0xa8e0
}


//#pragma section_code_init
unsigned char FileNextSector(fileTYPE *file)
{
  405564:	a8 43 00 00 	l.ori r2,r3,0x0

    // increment sector index
    file->sector++;

    // cluster's boundary crossed?
    if ((file->sector&~cluster_mask) == 0)
  405568:	84 84 00 00 	l.lwz r4,0x0(r4)

    unsigned long sb;
    unsigned short i;

    // increment sector index
    file->sector++;
  40556c:	84 63 00 14 	l.lwz r3,0x14(r3)

    // cluster's boundary crossed?
    if ((file->sector&~cluster_mask) == 0)
  405570:	ac 84 ff ff 	l.xori r4,r4,0xffffffff

    unsigned long sb;
    unsigned short i;

    // increment sector index
    file->sector++;
  405574:	9c 63 00 01 	l.addi r3,r3,0x1
}


//#pragma section_code_init
unsigned char FileNextSector(fileTYPE *file)
{
  405578:	9c 21 ff ec 	l.addi r1,r1,0xffffffec

    unsigned long sb;
    unsigned short i;

    // increment sector index
    file->sector++;
  40557c:	d4 02 18 14 	l.sw 0x14(r2),r3

    // cluster's boundary crossed?
    if ((file->sector&~cluster_mask) == 0)
  405580:	e0 64 18 03 	l.and r3,r4,r3
  405584:	bc 23 00 00 	l.sfnei r3,0x0
  405588:	10 00 00 40 	l.bf 405688 <FileNextSector+0x140>
  40558c:	9d 60 00 01 	l.addi r11,r0,0x1
    {
        if (fat32)
  405590:	18 60 00 41 	l.movhi r3,0x41
  405594:	a8 63 a3 51 	l.ori r3,r3,0xa351
  405598:	8c 63 00 00 	l.lbz r3,0x0(r3)
  40559c:	bc 03 00 00 	l.sfeqi r3,0x0
  4055a0:	10 00 00 05 	l.bf 4055b4 <FileNextSector+0x6c>
  4055a4:	85 c2 00 1c 	l.lwz r14,0x1c(r2)
        {
            sb = file->cluster >> 7; // calculate sector number containing FAT-link
  4055a8:	ba 0e 00 47 	l.srli r16,r14,0x7
            i = file->cluster & 0x7F; // calculate link offsset within sector
  4055ac:	00 00 00 04 	l.j 4055bc <FileNextSector+0x74>
  4055b0:	a5 ce 00 7f 	l.andi r14,r14,0x7f
        }
        else
        {
            sb = file->cluster >> 8; // calculate sector number containing FAT-link
  4055b4:	ba 0e 00 48 	l.srli r16,r14,0x8
            i = file->cluster & 0xFF; // calculate link offsset within sector
  4055b8:	a5 ce 00 ff 	l.andi r14,r14,0xff
        }

        // read sector of FAT if not already in the buffer
        if (sb != buffered_fat_index)
  4055bc:	1a 40 00 41 	l.movhi r18,0x41
  4055c0:	aa 52 de a4 	l.ori r18,r18,0xdea4
  4055c4:	84 72 00 00 	l.lwz r3,0x0(r18)
  4055c8:	e4 10 18 00 	l.sfeq r16,r3
  4055cc:	10 00 00 0c 	l.bf 4055fc <FileNextSector+0xb4>
  4055d0:	18 60 00 41 	l.movhi r3,0x41
        {
            if (!MMC_Read(fat_start + sb, (unsigned char*)&fat_buffer))
  4055d4:	18 80 00 41 	l.movhi r4,0x41
  4055d8:	a8 63 dc 88 	l.ori r3,r3,0xdc88
  4055dc:	a8 84 dc a4 	l.ori r4,r4,0xdca4
  4055e0:	84 63 00 00 	l.lwz r3,0x0(r3)
  4055e4:	07 ff fe ba 	l.jal 4050cc <MMC_Read>
  4055e8:	e0 70 18 00 	l.add r3,r16,r3
  4055ec:	bc 0b 00 00 	l.sfeqi r11,0x0
  4055f0:	10 00 00 26 	l.bf 405688 <FileNextSector+0x140>
  4055f4:	15 00 00 00 	l.nop 0x0
                return(0);

            // remember current buffer index
            buffered_fat_index = sb;
  4055f8:	d4 12 80 00 	l.sw 0x0(r18),r16
        }

//        file->cluster = fat32 ? fat_buffer.fat32[i] & 0x0FFFFFFF: fat_buffer.fat16[i]; // get FAT link
        file->cluster = fat32 ? SwapBBBB(fat_buffer.fat32[i]) & 0x0FFFFFFF : SwapBB(fat_buffer.fat16[i]); // get FAT link for 68000 
  4055fc:	18 60 00 41 	l.movhi r3,0x41
  405600:	a8 63 a3 51 	l.ori r3,r3,0xa351
  405604:	8c 63 00 00 	l.lbz r3,0x0(r3)
  405608:	bc 03 00 00 	l.sfeqi r3,0x0
  40560c:	10 00 00 15 	l.bf 405660 <FileNextSector+0x118>
  405610:	18 c0 00 41 	l.movhi r6,0x41
  405614:	18 60 00 41 	l.movhi r3,0x41
  405618:	b9 ce 00 02 	l.slli r14,r14,0x2
  40561c:	a8 63 dc a4 	l.ori r3,r3,0xdca4
  405620:	18 c0 00 ff 	l.movhi r6,0xff
  405624:	e1 ce 18 00 	l.add r14,r14,r3
  405628:	84 6e 00 00 	l.lwz r3,0x0(r14)
  40562c:	b8 a3 00 18 	l.slli r5,r3,0x18
  405630:	b8 83 00 58 	l.srli r4,r3,0x18
  405634:	e0 85 20 04 	l.or r4,r5,r4
  405638:	e0 a3 30 03 	l.and r5,r3,r6
  40563c:	a4 63 ff 00 	l.andi r3,r3,0xff00
  405640:	b8 a5 00 48 	l.srli r5,r5,0x8
  405644:	b8 63 00 08 	l.slli r3,r3,0x8
  405648:	e0 84 28 04 	l.or r4,r4,r5
  40564c:	e0 64 18 04 	l.or r3,r4,r3
  405650:	18 80 0f ff 	l.movhi r4,0xfff
  405654:	a8 84 ff ff 	l.ori r4,r4,0xffff
  405658:	00 00 00 0a 	l.j 405680 <FileNextSector+0x138>
  40565c:	e0 63 20 03 	l.and r3,r3,r4
  405660:	e1 ce 70 00 	l.add r14,r14,r14
  405664:	a8 c6 dc a4 	l.ori r6,r6,0xdca4
  405668:	e1 ce 30 00 	l.add r14,r14,r6
  40566c:	94 8e 00 00 	l.lhz r4,0x0(r14)
  405670:	b8 64 00 08 	l.slli r3,r4,0x8
  405674:	b8 84 00 48 	l.srli r4,r4,0x8
  405678:	a4 63 ff ff 	l.andi r3,r3,0xffff
  40567c:	e0 63 20 04 	l.or r3,r3,r4
  405680:	d4 02 18 1c 	l.sw 0x1c(r2),r3
    }

    return(1);
  405684:	9d 60 00 01 	l.addi r11,r0,0x1

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}
  405688:	9c 21 00 14 	l.addi r1,r1,0x14
  40568c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  405690:	84 41 ff ec 	l.lwz r2,0xffffffec(r1)
  405694:	85 c1 ff f0 	l.lwz r14,0xfffffff0(r1)
  405698:	86 01 ff f4 	l.lwz r16,0xfffffff4(r1)
  40569c:	44 00 48 00 	l.jr r9
  4056a0:	86 41 ff f8 	l.lwz r18,0xfffffff8(r1)

004056a4 <RARead>:
#include "stdio.h"
#include "hardware.h"


int RARead(RAFile *file,unsigned char *pBuffer, unsigned long bytes)
{
  4056a4:	d7 e1 17 e4 	l.sw 0xffffffe4(r1),r2
  4056a8:	d7 e1 77 e8 	l.sw 0xffffffe8(r1),r14
  4056ac:	d7 e1 97 f0 	l.sw 0xfffffff0(r1),r18
  4056b0:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  4056b4:	d7 e1 87 ec 	l.sw 0xffffffec(r1),r16
  4056b8:	d7 e1 a7 f4 	l.sw 0xfffffff4(r1),r20
  4056bc:	d7 e1 b7 f8 	l.sw 0xfffffff8(r1),r22
  4056c0:	a8 43 00 00 	l.ori r2,r3,0x0
  DEBUG_FUNC_IN(DEBUG_F_RAFILE | DEBUG_L2);

	int result=1;
	// Since we can only read from the SD card on 512-byte aligned boundaries,
	// we need to copy in multiple pieces.
	unsigned long blockoffset=file->ptr&511;	// Offset within the current 512 block at which the previous read finished
  4056c4:	84 63 01 30 	l.lwz r3,0x130(r3)
#include "stdio.h"
#include "hardware.h"


int RARead(RAFile *file,unsigned char *pBuffer, unsigned long bytes)
{
  4056c8:	9c 21 ff e4 	l.addi r1,r1,0xffffffe4
  DEBUG_FUNC_IN(DEBUG_F_RAFILE | DEBUG_L2);

	int result=1;
	// Since we can only read from the SD card on 512-byte aligned boundaries,
	// we need to copy in multiple pieces.
	unsigned long blockoffset=file->ptr&511;	// Offset within the current 512 block at which the previous read finished
  4056cc:	a4 63 01 ff 	l.andi r3,r3,0x1ff
#include "stdio.h"
#include "hardware.h"


int RARead(RAFile *file,unsigned char *pBuffer, unsigned long bytes)
{
  4056d0:	aa 44 00 00 	l.ori r18,r4,0x0
	// Since we can only read from the SD card on 512-byte aligned boundaries,
	// we need to copy in multiple pieces.
	unsigned long blockoffset=file->ptr&511;	// Offset within the current 512 block at which the previous read finished
												// Bytes blockoffset to 512 will be drained first, before reading new data.

	if(blockoffset)	// If blockoffset is zero we'll just use aligned reads and don't need to drain the buffer.
  4056d4:	bc 03 00 00 	l.sfeqi r3,0x0
  4056d8:	10 00 00 18 	l.bf 405738 <RARead+0x94>
  4056dc:	a9 c5 00 00 	l.ori r14,r5,0x0
	{
		int i;
		int l=bytes;
  4056e0:	bd a5 02 00 	l.sflesi r5,0x200
  4056e4:	10 00 00 03 	l.bf 4056f0 <RARead+0x4c>
  4056e8:	a8 85 00 00 	l.ori r4,r5,0x0
  4056ec:	9c 80 02 00 	l.addi r4,r0,0x200
#include "rafile.h"
#include "stdio.h"
#include "hardware.h"


int RARead(RAFile *file,unsigned char *pBuffer, unsigned long bytes)
  4056f0:	9c a3 01 34 	l.addi r5,r3,0x134
	{
		int i;
		int l=bytes;
		if(l>512)
			l=512;
		for(i=blockoffset;i<l;++i)
  4056f4:	a8 c3 00 00 	l.ori r6,r3,0x0
  4056f8:	00 00 00 07 	l.j 405714 <RARead+0x70>
  4056fc:	e0 a2 28 00 	l.add r5,r2,r5
		{
			*pBuffer++=file->buffer[i];
  405700:	8c e5 00 00 	l.lbz r7,0x0(r5)
	{
		int i;
		int l=bytes;
		if(l>512)
			l=512;
		for(i=blockoffset;i<l;++i)
  405704:	9c c6 00 01 	l.addi r6,r6,0x1
		{
			*pBuffer++=file->buffer[i];
  405708:	d8 12 38 00 	l.sb 0x0(r18),r7
	{
		int i;
		int l=bytes;
		if(l>512)
			l=512;
		for(i=blockoffset;i<l;++i)
  40570c:	9c a5 00 01 	l.addi r5,r5,0x1
		{
			*pBuffer++=file->buffer[i];
  405710:	9e 52 00 01 	l.addi r18,r18,0x1
	{
		int i;
		int l=bytes;
		if(l>512)
			l=512;
		for(i=blockoffset;i<l;++i)
  405714:	e5 86 20 00 	l.sflts r6,r4
  405718:	13 ff ff fa 	l.bf 405700 <RARead+0x5c>
  40571c:	15 00 00 00 	l.nop 0x0
		{
			*pBuffer++=file->buffer[i];
		}
		file->ptr+=l-blockoffset;
  405720:	84 a2 01 30 	l.lwz r5,0x130(r2)
		bytes-=l-blockoffset;
  405724:	e1 ce 18 00 	l.add r14,r14,r3
			l=512;
		for(i=blockoffset;i<l;++i)
		{
			*pBuffer++=file->buffer[i];
		}
		file->ptr+=l-blockoffset;
  405728:	e0 a5 18 02 	l.sub r5,r5,r3
		bytes-=l-blockoffset;
  40572c:	e1 ce 20 02 	l.sub r14,r14,r4
			l=512;
		for(i=blockoffset;i<l;++i)
		{
			*pBuffer++=file->buffer[i];
		}
		file->ptr+=l-blockoffset;
  405730:	e0 a5 20 00 	l.add r5,r5,r4
  405734:	d4 02 29 30 	l.sw 0x130(r2),r5
#include "stdio.h"
#include "hardware.h"


int RARead(RAFile *file,unsigned char *pBuffer, unsigned long bytes)
{
  405738:	aa ce 00 00 	l.ori r22,r14,0x0
  40573c:	aa 92 00 00 	l.ori r20,r18,0x0
  405740:	00 00 00 0c 	l.j 405770 <RARead+0xcc>
  405744:	9e 00 00 01 	l.addi r16,r0,0x1

	// We've now read any bytes left over from a previous read.  If any data remains to be read we can read it
	// in 512-byte aligned chunks, until the last block.
	while(bytes>511)
	{
		result&=FileRead(&file->file,pBuffer);	// Read direct to pBuffer
  405748:	a8 62 00 00 	l.ori r3,r2,0x0
  40574c:	07 ff fe da 	l.jal 4052b4 <FileRead>
  405750:	9e d6 fe 00 	l.addi r22,r22,0xfffffe00
		FileNextSector(&file->file);
  405754:	a8 62 00 00 	l.ori r3,r2,0x0
  405758:	07 ff ff 7c 	l.jal 405548 <FileNextSector>
  40575c:	e2 10 58 03 	l.and r16,r16,r11
		bytes-=512;
		file->ptr+=512;
  405760:	84 62 01 30 	l.lwz r3,0x130(r2)
		pBuffer+=512;
  405764:	9e 94 02 00 	l.addi r20,r20,0x200
	while(bytes>511)
	{
		result&=FileRead(&file->file,pBuffer);	// Read direct to pBuffer
		FileNextSector(&file->file);
		bytes-=512;
		file->ptr+=512;
  405768:	9c 63 02 00 	l.addi r3,r3,0x200
  40576c:	d4 02 19 30 	l.sw 0x130(r2),r3
		bytes-=l-blockoffset;
	}

	// We've now read any bytes left over from a previous read.  If any data remains to be read we can read it
	// in 512-byte aligned chunks, until the last block.
	while(bytes>511)
  405770:	bc 56 01 ff 	l.sfgtui r22,0x1ff
  405774:	13 ff ff f5 	l.bf 405748 <RARead+0xa4>
  405778:	a8 94 00 00 	l.ori r4,r20,0x0
#include "rafile.h"
#include "stdio.h"
#include "hardware.h"


int RARead(RAFile *file,unsigned char *pBuffer, unsigned long bytes)
  40577c:	9c 80 fe 00 	l.addi r4,r0,0xfffffe00
  405780:	e0 6e 20 03 	l.and r3,r14,r4
		bytes-=l-blockoffset;
	}

	// We've now read any bytes left over from a previous read.  If any data remains to be read we can read it
	// in 512-byte aligned chunks, until the last block.
	while(bytes>511)
  405784:	a5 ce 01 ff 	l.andi r14,r14,0x1ff
		bytes-=512;
		file->ptr+=512;
		pBuffer+=512;
	}

	if(bytes)	// Do we have any bytes left to read?
  405788:	bc 0e 00 00 	l.sfeqi r14,0x0
  40578c:	10 00 00 15 	l.bf 4057e0 <RARead+0x13c>
  405790:	e2 52 18 00 	l.add r18,r18,r3
	{
		unsigned int i;
		result&=FileRead(&file->file,file->buffer);	// Read to temporary buffer, allowing us to preserve any leftover for the next read.
  405794:	9e 82 01 34 	l.addi r20,r2,0x134
  405798:	a8 62 00 00 	l.ori r3,r2,0x0
  40579c:	07 ff fe c6 	l.jal 4052b4 <FileRead>
  4057a0:	a8 94 00 00 	l.ori r4,r20,0x0
		FileNextSector(&file->file);
  4057a4:	a8 62 00 00 	l.ori r3,r2,0x0
  4057a8:	07 ff ff 68 	l.jal 405548 <FileNextSector>
  4057ac:	e2 0b 80 03 	l.and r16,r11,r16
  4057b0:	a8 94 00 00 	l.ori r4,r20,0x0
		for(i=0;i<bytes;++i)
  4057b4:	9c 60 00 00 	l.addi r3,r0,0x0
		{
			*pBuffer++=file->buffer[i];
  4057b8:	8c c4 00 00 	l.lbz r6,0x0(r4)
#include "rafile.h"
#include "stdio.h"
#include "hardware.h"


int RARead(RAFile *file,unsigned char *pBuffer, unsigned long bytes)
  4057bc:	e0 b2 18 00 	l.add r5,r18,r3
	if(bytes)	// Do we have any bytes left to read?
	{
		unsigned int i;
		result&=FileRead(&file->file,file->buffer);	// Read to temporary buffer, allowing us to preserve any leftover for the next read.
		FileNextSector(&file->file);
		for(i=0;i<bytes;++i)
  4057c0:	9c 63 00 01 	l.addi r3,r3,0x1
		{
			*pBuffer++=file->buffer[i];
  4057c4:	d8 05 30 00 	l.sb 0x0(r5),r6
	if(bytes)	// Do we have any bytes left to read?
	{
		unsigned int i;
		result&=FileRead(&file->file,file->buffer);	// Read to temporary buffer, allowing us to preserve any leftover for the next read.
		FileNextSector(&file->file);
		for(i=0;i<bytes;++i)
  4057c8:	e4 83 70 00 	l.sfltu r3,r14
  4057cc:	13 ff ff fb 	l.bf 4057b8 <RARead+0x114>
  4057d0:	9c 84 00 01 	l.addi r4,r4,0x1
		{
			*pBuffer++=file->buffer[i];
		}
		file->ptr+=bytes;
  4057d4:	84 62 01 30 	l.lwz r3,0x130(r2)
  4057d8:	e1 c3 70 00 	l.add r14,r3,r14
  4057dc:	d4 02 71 30 	l.sw 0x130(r2),r14
	}
	return(result);

  DEBUG_FUNC_OUT(DEBUG_F_RAFILE | DEBUG_L2);
}
  4057e0:	9c 21 00 1c 	l.addi r1,r1,0x1c
  4057e4:	a9 70 00 00 	l.ori r11,r16,0x0
  4057e8:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  4057ec:	84 41 ff e4 	l.lwz r2,0xffffffe4(r1)
  4057f0:	85 c1 ff e8 	l.lwz r14,0xffffffe8(r1)
  4057f4:	86 01 ff ec 	l.lwz r16,0xffffffec(r1)
  4057f8:	86 41 ff f0 	l.lwz r18,0xfffffff0(r1)
  4057fc:	86 81 ff f4 	l.lwz r20,0xfffffff4(r1)
  405800:	44 00 48 00 	l.jr r9
  405804:	86 c1 ff f8 	l.lwz r22,0xfffffff8(r1)

00405808 <GetFATLink>:
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L1);
}


unsigned long GetFATLink(unsigned long cluster)
{
  405808:	d7 e1 17 f0 	l.sw 0xfffffff0(r1),r2
// remember to check if the returned value indicates end of chain condition

    unsigned long fat_index;
    unsigned short buffer_index;

    if (fat32)
  40580c:	18 40 00 41 	l.movhi r2,0x41
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L1);
}


unsigned long GetFATLink(unsigned long cluster)
{
  405810:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  405814:	d7 e1 77 f4 	l.sw 0xfffffff4(r1),r14
  405818:	d7 e1 87 f8 	l.sw 0xfffffff8(r1),r16
// remember to check if the returned value indicates end of chain condition

    unsigned long fat_index;
    unsigned short buffer_index;

    if (fat32)
  40581c:	a8 42 a3 51 	l.ori r2,r2,0xa351
  405820:	8c 42 00 00 	l.lbz r2,0x0(r2)
  405824:	bc 02 00 00 	l.sfeqi r2,0x0
  405828:	10 00 00 05 	l.bf 40583c <GetFATLink+0x34>
  40582c:	9c 21 ff f0 	l.addi r1,r1,0xfffffff0
    {
        fat_index    = cluster >> 7;    // calculate sector number in the FAT32 that contains the desired link (256 links per sector)
  405830:	b9 c3 00 47 	l.srli r14,r3,0x7
        buffer_index = cluster & 0x7F;  // calculate offset in the buffered FAT32 sector containing the link
  405834:	00 00 00 04 	l.j 405844 <GetFATLink+0x3c>
  405838:	a4 43 00 7f 	l.andi r2,r3,0x7f
    }
    else
    {
        fat_index    = cluster >> 8;    // calculate sector number in the FAT16 that contains the desired link (256 links per sector)
  40583c:	b9 c3 00 48 	l.srli r14,r3,0x8
        buffer_index = cluster & 0xFF;  // calculate offset in the buffered FAT16 sector containing the link
  405840:	a4 43 00 ff 	l.andi r2,r3,0xff
    }

    // read the desired FAT sector if not already in the buffer
    if (fat_index != buffered_fat_index)
  405844:	1a 00 00 41 	l.movhi r16,0x41
  405848:	aa 10 de a4 	l.ori r16,r16,0xdea4
  40584c:	84 70 00 00 	l.lwz r3,0x0(r16)
  405850:	e4 0e 18 00 	l.sfeq r14,r3
  405854:	10 00 00 0c 	l.bf 405884 <GetFATLink+0x7c>
  405858:	18 60 00 41 	l.movhi r3,0x41
    {
        if (!MMC_Read(fat_start+fat_index, (unsigned char*)&fat_buffer))
  40585c:	18 80 00 41 	l.movhi r4,0x41
  405860:	a8 63 dc 88 	l.ori r3,r3,0xdc88
  405864:	a8 84 dc a4 	l.ori r4,r4,0xdca4
  405868:	84 63 00 00 	l.lwz r3,0x0(r3)
  40586c:	07 ff fe 18 	l.jal 4050cc <MMC_Read>
  405870:	e0 6e 18 00 	l.add r3,r14,r3
  405874:	bc 0b 00 00 	l.sfeqi r11,0x0
  405878:	10 00 00 23 	l.bf 405904 <GetFATLink+0xfc>
  40587c:	15 00 00 00 	l.nop 0x0
            return(0);

        // remember the index of buffered FAT sector
        buffered_fat_index = fat_index;
  405880:	d4 10 70 00 	l.sw 0x0(r16),r14
    }

//    return(fat32 ? fat_buffer.fat32[buffer_index] & 0x0FFFFFFF : fat_buffer.fat16[buffer_index]); // get FAT link
    return(fat32 ? SwapBBBB(fat_buffer.fat32[buffer_index]) & 0x0FFFFFFF : SwapBB(fat_buffer.fat16[buffer_index])); // get FAT link for 68000
  405884:	18 60 00 41 	l.movhi r3,0x41
  405888:	a8 63 a3 51 	l.ori r3,r3,0xa351
  40588c:	8c 63 00 00 	l.lbz r3,0x0(r3)
  405890:	bc 03 00 00 	l.sfeqi r3,0x0
  405894:	10 00 00 14 	l.bf 4058e4 <GetFATLink+0xdc>
  405898:	18 60 00 41 	l.movhi r3,0x41
  40589c:	b8 42 00 02 	l.slli r2,r2,0x2
  4058a0:	a8 63 dc a4 	l.ori r3,r3,0xdca4
  4058a4:	18 80 00 ff 	l.movhi r4,0xff
  4058a8:	e0 42 18 00 	l.add r2,r2,r3
  4058ac:	84 42 00 00 	l.lwz r2,0x0(r2)
  4058b0:	b8 62 00 58 	l.srli r3,r2,0x18
  4058b4:	b9 62 00 18 	l.slli r11,r2,0x18
  4058b8:	e1 6b 18 04 	l.or r11,r11,r3
  4058bc:	e0 62 20 03 	l.and r3,r2,r4
  4058c0:	a4 42 ff 00 	l.andi r2,r2,0xff00
  4058c4:	b8 63 00 48 	l.srli r3,r3,0x8
  4058c8:	b8 42 00 08 	l.slli r2,r2,0x8
  4058cc:	e1 6b 18 04 	l.or r11,r11,r3
  4058d0:	e1 6b 10 04 	l.or r11,r11,r2
  4058d4:	18 40 0f ff 	l.movhi r2,0xfff
  4058d8:	a8 42 ff ff 	l.ori r2,r2,0xffff
  4058dc:	00 00 00 0a 	l.j 405904 <GetFATLink+0xfc>
  4058e0:	e1 6b 10 03 	l.and r11,r11,r2
  4058e4:	e0 42 10 00 	l.add r2,r2,r2
  4058e8:	a8 63 dc a4 	l.ori r3,r3,0xdca4
  4058ec:	e0 42 18 00 	l.add r2,r2,r3
  4058f0:	94 42 00 00 	l.lhz r2,0x0(r2)
  4058f4:	b9 62 00 08 	l.slli r11,r2,0x8
  4058f8:	b8 42 00 48 	l.srli r2,r2,0x8
  4058fc:	a5 6b ff ff 	l.andi r11,r11,0xffff
  405900:	e1 6b 10 04 	l.or r11,r11,r2

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L1);
}
  405904:	9c 21 00 10 	l.addi r1,r1,0x10
  405908:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  40590c:	84 41 ff f0 	l.lwz r2,0xfffffff0(r1)
  405910:	85 c1 ff f4 	l.lwz r14,0xfffffff4(r1)
  405914:	44 00 48 00 	l.jr r9
  405918:	86 01 ff f8 	l.lwz r16,0xfffffff8(r1)

0040591c <MMC_Init>:
unsigned char MMC_CMD12(void);


// init memory card
unsigned char MMC_Init(void)
{
  40591c:	d7 e1 17 ec 	l.sw 0xffffffec(r1),r2
   DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L0);

    unsigned char n;
    unsigned char ocr[4];

    SPI_slow();     // set slow clock
  405920:	18 40 00 80 	l.movhi r2,0x80
  405924:	9c 80 00 3f 	l.addi r4,r0,0x3f
  405928:	a8 62 00 1c 	l.ori r3,r2,0x1c
unsigned char MMC_CMD12(void);


// init memory card
unsigned char MMC_Init(void)
{
  40592c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  405930:	d7 e1 77 f0 	l.sw 0xfffffff0(r1),r14
  405934:	d7 e1 87 f4 	l.sw 0xfffffff4(r1),r16
  405938:	d7 e1 97 f8 	l.sw 0xfffffff8(r1),r18
   DEBUG_FUNC_IN(DEBUG_F_MMC | DEBUG_L0);

    unsigned char n;
    unsigned char ocr[4];

    SPI_slow();     // set slow clock
  40593c:	d4 03 20 00 	l.sw 0x0(r3),r4
    DisableCard();  // CS = 1
  405940:	a8 62 00 20 	l.ori r3,r2,0x20
  405944:	9c 80 00 10 	l.addi r4,r0,0x10
unsigned char MMC_CMD12(void);


// init memory card
unsigned char MMC_Init(void)
{
  405948:	9c 21 ff e4 	l.addi r1,r1,0xffffffe4

    unsigned char n;
    unsigned char ocr[4];

    SPI_slow();     // set slow clock
    DisableCard();  // CS = 1
  40594c:	d4 03 20 00 	l.sw 0x0(r3),r4
    SPI(0xff);      // DI = 1
  405950:	a8 62 00 24 	l.ori r3,r2,0x24
  405954:	9c 80 00 ff 	l.addi r4,r0,0xff
    TIMER_wait(20);  // 20ms delay
  405958:	a8 42 00 18 	l.ori r2,r2,0x18
    unsigned char n;
    unsigned char ocr[4];

    SPI_slow();     // set slow clock
    DisableCard();  // CS = 1
    SPI(0xff);      // DI = 1
  40595c:	d4 03 20 00 	l.sw 0x0(r3),r4
  405960:	84 63 00 00 	l.lwz r3,0x0(r3)
    TIMER_wait(20);  // 20ms delay
  405964:	9c 60 00 00 	l.addi r3,r0,0x0
  405968:	d4 02 18 00 	l.sw 0x0(r2),r3
  40596c:	84 62 00 00 	l.lwz r3,0x0(r2)
  405970:	bc a3 00 13 	l.sfleui r3,0x13
  405974:	13 ff ff fe 	l.bf 40596c <MMC_Init+0x50>
  405978:	18 60 00 80 	l.movhi r3,0x80
  40597c:	9c 40 00 0a 	l.addi r2,r0,0xa
    for (n=0; n<10; n++) SPI(0xff); // 80 dummy clocks, DI = 1
  405980:	a8 63 00 24 	l.ori r3,r3,0x24
  405984:	9c 80 00 ff 	l.addi r4,r0,0xff
  405988:	d4 03 20 00 	l.sw 0x0(r3),r4
  40598c:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
  405990:	84 a3 00 00 	l.lwz r5,0x0(r3)
  405994:	a4 42 00 ff 	l.andi r2,r2,0xff
  405998:	bc 22 00 00 	l.sfnei r2,0x0
  40599c:	13 ff ff fb 	l.bf 405988 <MMC_Init+0x6c>
  4059a0:	15 00 00 00 	l.nop 0x0
    TIMER_wait(20);  // 20ms delay
  4059a4:	18 60 00 80 	l.movhi r3,0x80
  4059a8:	a8 63 00 18 	l.ori r3,r3,0x18
  4059ac:	d4 03 10 00 	l.sw 0x0(r3),r2
  4059b0:	84 43 00 00 	l.lwz r2,0x0(r3)
  4059b4:	bc a2 00 13 	l.sfleui r2,0x13
  4059b8:	13 ff ff fe 	l.bf 4059b0 <MMC_Init+0x94>
  4059bc:	1a 00 00 80 	l.movhi r16,0x80
    EnableCard();
  4059c0:	a8 50 00 20 	l.ori r2,r16,0x20
  4059c4:	9c 60 00 11 	l.addi r3,r0,0x11

    CardType = CARDTYPE_NONE;

    for(n=0; n<16; n++) {
      TIMER_wait(1);
  4059c8:	aa 10 00 18 	l.ori r16,r16,0x18
    DisableCard();  // CS = 1
    SPI(0xff);      // DI = 1
    TIMER_wait(20);  // 20ms delay
    for (n=0; n<10; n++) SPI(0xff); // 80 dummy clocks, DI = 1
    TIMER_wait(20);  // 20ms delay
    EnableCard();
  4059cc:	d4 02 18 00 	l.sw 0x0(r2),r3

    CardType = CARDTYPE_NONE;
  4059d0:	18 40 00 41 	l.movhi r2,0x41
  4059d4:	9c 60 00 00 	l.addi r3,r0,0x0
  4059d8:	a8 42 fd 65 	l.ori r2,r2,0xfd65
  4059dc:	d8 02 18 00 	l.sb 0x0(r2),r3
  4059e0:	9c 40 00 10 	l.addi r2,r0,0x10

    for(n=0; n<16; n++) {
      TIMER_wait(1);
  4059e4:	9c 60 00 00 	l.addi r3,r0,0x0
  4059e8:	d4 10 18 00 	l.sw 0x0(r16),r3
  4059ec:	84 70 00 00 	l.lwz r3,0x0(r16)
  4059f0:	bc 03 00 00 	l.sfeqi r3,0x0
  4059f4:	13 ff ff fe 	l.bf 4059ec <MMC_Init+0xd0>
  4059f8:	19 c0 00 80 	l.movhi r14,0x80
      if (MMC_Command(CMD0, 0) == 0x01) break; // try to send CMD0 multiple times
  4059fc:	9c 60 00 40 	l.addi r3,r0,0x40
  405a00:	07 ff f6 22 	l.jal 403288 <MMC_Command>
  405a04:	9c 80 00 00 	l.addi r4,r0,0x0
  405a08:	bc 0b 00 01 	l.sfeqi r11,0x1
  405a0c:	10 00 00 08 	l.bf 405a2c <MMC_Init+0x110>
  405a10:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
  405a14:	a4 42 00 ff 	l.andi r2,r2,0xff
    TIMER_wait(20);  // 20ms delay
    EnableCard();

    CardType = CARDTYPE_NONE;

    for(n=0; n<16; n++) {
  405a18:	bc 22 00 00 	l.sfnei r2,0x0
  405a1c:	13 ff ff f2 	l.bf 4059e4 <MMC_Init+0xc8>
  405a20:	9c 60 00 10 	l.addi r3,r0,0x10
        printf("MMC card initialization timed out!\r");
        DisableCard();
        return(CARDTYPE_NONE);
    }

    DisableCard();
  405a24:	00 00 00 e7 	l.j 405dc0 <MMC_Init+0x4a4>
  405a28:	a9 ce 00 20 	l.ori r14,r14,0x20
      TIMER_wait(1);
      if (MMC_Command(CMD0, 0) == 0x01) break; // try to send CMD0 multiple times
    }
    if (n<16) // got CMD0 IDLE response
    { // idle state
        timeout = GetTimer(4000); // initialization timeout 4s
  405a2c:	9c 60 0f a0 	l.addi r3,r0,0xfa0
  405a30:	07 ff ed 3e 	l.jal 400f28 <GetTimer>
  405a34:	18 40 00 41 	l.movhi r2,0x41
  405a38:	a8 42 fd 60 	l.ori r2,r2,0xfd60
        printf("timeout:0x%08X\r", timeout);
  405a3c:	18 60 00 41 	l.movhi r3,0x41
      TIMER_wait(1);
      if (MMC_Command(CMD0, 0) == 0x01) break; // try to send CMD0 multiple times
    }
    if (n<16) // got CMD0 IDLE response
    { // idle state
        timeout = GetTimer(4000); // initialization timeout 4s
  405a40:	d4 02 58 00 	l.sw 0x0(r2),r11
        printf("timeout:0x%08X\r", timeout);
  405a44:	a8 63 79 c4 	l.ori r3,r3,0x79c4
  405a48:	07 ff fb 13 	l.jal 404694 <printf>
  405a4c:	d4 01 58 00 	l.sw 0x0(r1),r11
        timeout = GetTimer(4000); // initialization timeout 4s
  405a50:	07 ff ed 36 	l.jal 400f28 <GetTimer>
  405a54:	9c 60 0f a0 	l.addi r3,r0,0xfa0
        printf("timeout:0x%08X\r", timeout);
  405a58:	18 60 00 41 	l.movhi r3,0x41
    }
    if (n<16) // got CMD0 IDLE response
    { // idle state
        timeout = GetTimer(4000); // initialization timeout 4s
        printf("timeout:0x%08X\r", timeout);
        timeout = GetTimer(4000); // initialization timeout 4s
  405a5c:	d4 02 58 00 	l.sw 0x0(r2),r11
        printf("timeout:0x%08X\r", timeout);
  405a60:	a8 63 79 c4 	l.ori r3,r3,0x79c4
  405a64:	07 ff fb 0c 	l.jal 404694 <printf>
  405a68:	d4 01 58 00 	l.sw 0x0(r1),r11
        if (MMC_Command(CMD8, 0x1AA) == 0x01) // check if the card can operate with 2.7-3.6V power
  405a6c:	9c 60 00 48 	l.addi r3,r0,0x48
  405a70:	07 ff f6 06 	l.jal 403288 <MMC_Command>
  405a74:	9c 80 01 aa 	l.addi r4,r0,0x1aa
  405a78:	bc 2b 00 01 	l.sfnei r11,0x1
  405a7c:	10 00 00 55 	l.bf 405bd0 <MMC_Init+0x2b4>
  405a80:	9c 60 00 77 	l.addi r3,r0,0x77
  405a84:	9c 41 00 04 	l.addi r2,r1,0x4
unsigned char MMC_Command(unsigned char cmd, unsigned long arg);
unsigned char MMC_CMD12(void);


// init memory card
unsigned char MMC_Init(void)
  405a88:	9e 01 00 08 	l.addi r16,r1,0x8
  405a8c:	a8 62 00 00 	l.ori r3,r2,0x0
        timeout = GetTimer(4000); // initialization timeout 4s
        printf("timeout:0x%08X\r", timeout);
        if (MMC_Command(CMD8, 0x1AA) == 0x01) // check if the card can operate with 2.7-3.6V power
        {   // SDHC card
            for (n = 0; n < 4; n++)
                ocr[n] = SPI(0xFF); // get the rest of R7 response
  405a90:	a9 ce 00 24 	l.ori r14,r14,0x24
  405a94:	9c 80 00 ff 	l.addi r4,r0,0xff
  405a98:	d4 0e 20 00 	l.sw 0x0(r14),r4
  405a9c:	84 ae 00 00 	l.lwz r5,0x0(r14)
  405aa0:	d8 03 28 00 	l.sb 0x0(r3),r5
  405aa4:	9c 63 00 01 	l.addi r3,r3,0x1
        printf("timeout:0x%08X\r", timeout);
        timeout = GetTimer(4000); // initialization timeout 4s
        printf("timeout:0x%08X\r", timeout);
        if (MMC_Command(CMD8, 0x1AA) == 0x01) // check if the card can operate with 2.7-3.6V power
        {   // SDHC card
            for (n = 0; n < 4; n++)
  405aa8:	e4 23 80 00 	l.sfne r3,r16
  405aac:	13 ff ff fb 	l.bf 405a98 <MMC_Init+0x17c>
  405ab0:	15 00 00 00 	l.nop 0x0
                ocr[n] = SPI(0xFF); // get the rest of R7 response
            if (ocr[2] == 0x01 && ocr[3] == 0xAA)
  405ab4:	8c 61 00 06 	l.lbz r3,0x6(r1)
  405ab8:	bc 23 00 01 	l.sfnei r3,0x1
  405abc:	10 00 00 45 	l.bf 405bd0 <MMC_Init+0x2b4>
  405ac0:	9c 60 00 77 	l.addi r3,r0,0x77
  405ac4:	8c 61 00 07 	l.lbz r3,0x7(r1)
  405ac8:	bc 23 00 aa 	l.sfnei r3,0xaa
  405acc:	10 00 00 40 	l.bf 405bcc <MMC_Init+0x2b0>
  405ad0:	18 60 00 41 	l.movhi r3,0x41
            { // the card can work at 2.7-3.6V
                printf("SDHC card detected\r");
                while (!CheckTimer(timeout))
  405ad4:	1a 40 00 41 	l.movhi r18,0x41
        {   // SDHC card
            for (n = 0; n < 4; n++)
                ocr[n] = SPI(0xFF); // get the rest of R7 response
            if (ocr[2] == 0x01 && ocr[3] == 0xAA)
            { // the card can work at 2.7-3.6V
                printf("SDHC card detected\r");
  405ad8:	a8 63 79 d4 	l.ori r3,r3,0x79d4
  405adc:	07 ff fa ee 	l.jal 404694 <printf>
  405ae0:	aa 52 fd 60 	l.ori r18,r18,0xfd60
                while (!CheckTimer(timeout))
  405ae4:	00 00 00 32 	l.j 405bac <MMC_Init+0x290>
  405ae8:	15 00 00 00 	l.nop 0x0
                { // now we must wait until CMD41 returns 0 (or timeout elapses)
                    if (MMC_Command(CMD55, 0) == 0x01)
  405aec:	9c 60 00 77 	l.addi r3,r0,0x77
  405af0:	07 ff f5 e6 	l.jal 403288 <MMC_Command>
  405af4:	a8 8e 00 00 	l.ori r4,r14,0x0
  405af8:	bc 2b 00 01 	l.sfnei r11,0x1
  405afc:	10 00 00 22 	l.bf 405b84 <MMC_Init+0x268>
  405b00:	18 80 40 00 	l.movhi r4,0x4000
                    { // CMD55 must precede any ACMD command
                        if (MMC_Command(CMD41, 1 << 30) == 0x00) // ACMD41 with HCS bit
  405b04:	07 ff f5 e1 	l.jal 403288 <MMC_Command>
  405b08:	9c 60 00 69 	l.addi r3,r0,0x69
  405b0c:	bc 2b 00 00 	l.sfnei r11,0x0
  405b10:	10 00 00 27 	l.bf 405bac <MMC_Init+0x290>
  405b14:	a8 8b 00 00 	l.ori r4,r11,0x0
                        { // initialization completed
                            if (MMC_Command(CMD58, 0) == 0x00)
  405b18:	07 ff f5 dc 	l.jal 403288 <MMC_Command>
  405b1c:	9c 60 00 7a 	l.addi r3,r0,0x7a
  405b20:	bc 2b 00 00 	l.sfnei r11,0x0
  405b24:	10 00 00 15 	l.bf 405b78 <MMC_Init+0x25c>
  405b28:	9c 80 00 ff 	l.addi r4,r0,0xff
                            { // check CCS (Card Capacity Status) bit in the OCR
                                for (n = 0; n < 4; n++)
                                    ocr[n] = SPI(0xFF);
  405b2c:	18 60 00 80 	l.movhi r3,0x80
  405b30:	a8 63 00 24 	l.ori r3,r3,0x24
  405b34:	d4 03 20 00 	l.sw 0x0(r3),r4
  405b38:	84 a3 00 00 	l.lwz r5,0x0(r3)
  405b3c:	d8 02 28 00 	l.sb 0x0(r2),r5
  405b40:	9c 42 00 01 	l.addi r2,r2,0x1
                    { // CMD55 must precede any ACMD command
                        if (MMC_Command(CMD41, 1 << 30) == 0x00) // ACMD41 with HCS bit
                        { // initialization completed
                            if (MMC_Command(CMD58, 0) == 0x00)
                            { // check CCS (Card Capacity Status) bit in the OCR
                                for (n = 0; n < 4; n++)
  405b44:	e4 22 80 00 	l.sfne r2,r16
  405b48:	13 ff ff fb 	l.bf 405b34 <MMC_Init+0x218>
  405b4c:	15 00 00 00 	l.nop 0x0
                                    ocr[n] = SPI(0xFF);

                                CardType = (ocr[0] & 0x40) ? CARDTYPE_SDHC : CARDTYPE_SD; // if CCS set then the card is SDHC compatible
  405b50:	8c 61 00 04 	l.lbz r3,0x4(r1)
  405b54:	a4 63 00 40 	l.andi r3,r3,0x40
  405b58:	bc 03 00 00 	l.sfeqi r3,0x0
  405b5c:	10 00 00 03 	l.bf 405b68 <MMC_Init+0x24c>
  405b60:	9c 40 00 02 	l.addi r2,r0,0x2
  405b64:	9c 40 00 03 	l.addi r2,r0,0x3
  405b68:	18 60 00 41 	l.movhi r3,0x41
  405b6c:	a8 63 fd 65 	l.ori r3,r3,0xfd65
  405b70:	00 00 00 44 	l.j 405c80 <MMC_Init+0x364>
  405b74:	d8 03 10 00 	l.sb 0x0(r3),r2
                            }
                            else
                                printf("CMD58 (READ_OCR) failed!\r");
  405b78:	18 60 00 41 	l.movhi r3,0x41
  405b7c:	00 00 00 3f 	l.j 405c78 <MMC_Init+0x35c>
  405b80:	a8 63 79 e8 	l.ori r3,r3,0x79e8
                            return(CardType);
                        }
                    }
                    else
                    {
                        printf("CMD55 (APP_CMD) failed!\r");
  405b84:	18 60 00 41 	l.movhi r3,0x41
                        DisableCard();
  405b88:	18 40 00 80 	l.movhi r2,0x80
                            return(CardType);
                        }
                    }
                    else
                    {
                        printf("CMD55 (APP_CMD) failed!\r");
  405b8c:	a8 63 7a 02 	l.ori r3,r3,0x7a02
  405b90:	07 ff fa c1 	l.jal 404694 <printf>
  405b94:	a8 42 00 20 	l.ori r2,r2,0x20
                        DisableCard();
  405b98:	9c 60 00 10 	l.addi r3,r0,0x10
                        return(CARDTYPE_NONE);
  405b9c:	a9 6e 00 00 	l.ori r11,r14,0x0
                        }
                    }
                    else
                    {
                        printf("CMD55 (APP_CMD) failed!\r");
                        DisableCard();
  405ba0:	d4 02 18 00 	l.sw 0x0(r2),r3
                        return(CARDTYPE_NONE);
  405ba4:	00 00 00 81 	l.j 405da8 <MMC_Init+0x48c>
  405ba8:	9c 21 00 1c 	l.addi r1,r1,0x1c
            for (n = 0; n < 4; n++)
                ocr[n] = SPI(0xFF); // get the rest of R7 response
            if (ocr[2] == 0x01 && ocr[3] == 0xAA)
            { // the card can work at 2.7-3.6V
                printf("SDHC card detected\r");
                while (!CheckTimer(timeout))
  405bac:	07 ff ec e5 	l.jal 400f40 <CheckTimer>
  405bb0:	84 72 00 00 	l.lwz r3,0x0(r18)
  405bb4:	bc 0b 00 00 	l.sfeqi r11,0x0
  405bb8:	13 ff ff cd 	l.bf 405aec <MMC_Init+0x1d0>
  405bbc:	a9 cb 00 00 	l.ori r14,r11,0x0
                        printf("CMD55 (APP_CMD) failed!\r");
                        DisableCard();
                        return(CARDTYPE_NONE);
                    }
                }
                printf("SDHC card initialization timed out!\r");
  405bc0:	18 60 00 41 	l.movhi r3,0x41
  405bc4:	00 00 00 72 	l.j 405d8c <MMC_Init+0x470>
  405bc8:	a8 63 7a 1b 	l.ori r3,r3,0x7a1b
                return(CARDTYPE_NONE);
            }
        }

        // it's not an SDHC card
        if (MMC_Command(CMD55, 0) == 0x01)
  405bcc:	9c 60 00 77 	l.addi r3,r0,0x77
  405bd0:	07 ff f5 ae 	l.jal 403288 <MMC_Command>
  405bd4:	9c 80 00 00 	l.addi r4,r0,0x0
  405bd8:	bc 2b 00 01 	l.sfnei r11,0x1
  405bdc:	10 00 00 45 	l.bf 405cf0 <MMC_Init+0x3d4>
  405be0:	18 60 00 41 	l.movhi r3,0x41
        { // CMD55 accepted so it's an SD card (or Kingston 128 MB MMC)
            if (MMC_Command(CMD41, 0) <= 0x01)
  405be4:	9c 60 00 69 	l.addi r3,r0,0x69
  405be8:	07 ff f5 a8 	l.jal 403288 <MMC_Command>
  405bec:	9c 80 00 00 	l.addi r4,r0,0x0
  405bf0:	bc 4b 00 01 	l.sfgtui r11,0x1
  405bf4:	10 00 00 3e 	l.bf 405cec <MMC_Init+0x3d0>
  405bf8:	19 c0 00 41 	l.movhi r14,0x41
            { // SD card detected - wait for the end of initialization
                printf("SD card detected\r");
  405bfc:	18 60 00 41 	l.movhi r3,0x41
  405c00:	a8 63 7a 40 	l.ori r3,r3,0x7a40
  405c04:	07 ff fa a4 	l.jal 404694 <printf>
  405c08:	a9 ce fd 60 	l.ori r14,r14,0xfd60
                printf("timeout:0x%08X\r",GetTimer(0));
  405c0c:	07 ff ec c7 	l.jal 400f28 <GetTimer>
  405c10:	9c 60 00 00 	l.addi r3,r0,0x0
  405c14:	18 60 00 41 	l.movhi r3,0x41
  405c18:	d4 01 58 00 	l.sw 0x0(r1),r11
  405c1c:	07 ff fa 9e 	l.jal 404694 <printf>
  405c20:	a8 63 79 c4 	l.ori r3,r3,0x79c4
                while (!CheckTimer(timeout))
  405c24:	00 00 00 2a 	l.j 405ccc <MMC_Init+0x3b0>
  405c28:	15 00 00 00 	l.nop 0x0
                { // now we must wait until CMD41 returns 0 (or timeout elapses)
                    if (MMC_Command(CMD55, 0) == 0x01)
  405c2c:	9c 60 00 77 	l.addi r3,r0,0x77
  405c30:	07 ff f5 96 	l.jal 403288 <MMC_Command>
  405c34:	a8 82 00 00 	l.ori r4,r2,0x0
  405c38:	bc 2b 00 01 	l.sfnei r11,0x1
  405c3c:	10 00 00 1c 	l.bf 405cac <MMC_Init+0x390>
  405c40:	18 60 00 41 	l.movhi r3,0x41
                    { // CMD55 must precede any ACMD command
                        if (MMC_Command(CMD41, 0) == 0x00)
  405c44:	9c 60 00 69 	l.addi r3,r0,0x69
  405c48:	07 ff f5 90 	l.jal 403288 <MMC_Command>
  405c4c:	a8 82 00 00 	l.ori r4,r2,0x0
  405c50:	bc 2b 00 00 	l.sfnei r11,0x0
  405c54:	10 00 00 1e 	l.bf 405ccc <MMC_Init+0x3b0>
  405c58:	9c 60 00 50 	l.addi r3,r0,0x50
                        { // initialization completed

                            if (MMC_Command(CMD16, 512) != 0x00) //set block length
  405c5c:	07 ff f5 8b 	l.jal 403288 <MMC_Command>
  405c60:	9c 80 02 00 	l.addi r4,r0,0x200
  405c64:	bc 0b 00 00 	l.sfeqi r11,0x0
  405c68:	10 00 00 07 	l.bf 405c84 <MMC_Init+0x368>
  405c6c:	18 40 00 80 	l.movhi r2,0x80
                                printf("CMD16 (SET_BLOCKLEN) failed!\r");
  405c70:	18 60 00 41 	l.movhi r3,0x41
  405c74:	a8 63 7a 52 	l.ori r3,r3,0x7a52
  405c78:	07 ff fa 87 	l.jal 404694 <printf>
  405c7c:	15 00 00 00 	l.nop 0x0
                            DisableCard();
  405c80:	18 40 00 80 	l.movhi r2,0x80
  405c84:	9c 80 00 10 	l.addi r4,r0,0x10
  405c88:	a8 62 00 20 	l.ori r3,r2,0x20
                                AT91C_SPI_CSR[0] = AT91C_SPI_CPOL | (2 << 8); // 24 MHz SPI clock (max 25 MHz for SD card)
                            else
                                AT91C_SPI_CSR[0] = AT91C_SPI_CPOL | (6 << 8); // 8 MHz SPI clock (no SPI mod)
                            CardType = CARDTYPE_SD;
#else
                            SPI_fast();
  405c8c:	a8 42 00 1c 	l.ori r2,r2,0x1c
                        if (MMC_Command(CMD41, 0) == 0x00)
                        { // initialization completed

                            if (MMC_Command(CMD16, 512) != 0x00) //set block length
                                printf("CMD16 (SET_BLOCKLEN) failed!\r");
                            DisableCard();
  405c90:	d4 03 20 00 	l.sw 0x0(r3),r4
                                AT91C_SPI_CSR[0] = AT91C_SPI_CPOL | (2 << 8); // 24 MHz SPI clock (max 25 MHz for SD card)
                            else
                                AT91C_SPI_CSR[0] = AT91C_SPI_CPOL | (6 << 8); // 8 MHz SPI clock (no SPI mod)
                            CardType = CARDTYPE_SD;
#else
                            SPI_fast();
  405c94:	9c 60 00 00 	l.addi r3,r0,0x0
  405c98:	d4 02 18 00 	l.sw 0x0(r2),r3
#endif
                            return(CardType);
  405c9c:	18 40 00 41 	l.movhi r2,0x41
  405ca0:	a8 42 fd 65 	l.ori r2,r2,0xfd65
  405ca4:	00 00 00 40 	l.j 405da4 <MMC_Init+0x488>
  405ca8:	8d 62 00 00 	l.lbz r11,0x0(r2)
                        }
                    }
                    else
                    {
                        printf("CMD55 (APP_CMD) failed!\r");
  405cac:	07 ff fa 7a 	l.jal 404694 <printf>
  405cb0:	a8 63 7a 02 	l.ori r3,r3,0x7a02
                        DisableCard();
  405cb4:	18 60 00 80 	l.movhi r3,0x80
  405cb8:	9c 80 00 10 	l.addi r4,r0,0x10
  405cbc:	a8 63 00 20 	l.ori r3,r3,0x20
  405cc0:	d4 03 20 00 	l.sw 0x0(r3),r4
        return(CARDTYPE_NONE);
    }

    DisableCard();
    printf("No memory card detected!\r");
    return(CARDTYPE_NONE); 
  405cc4:	00 00 00 38 	l.j 405da4 <MMC_Init+0x488>
  405cc8:	a9 62 00 00 	l.ori r11,r2,0x0
        { // CMD55 accepted so it's an SD card (or Kingston 128 MB MMC)
            if (MMC_Command(CMD41, 0) <= 0x01)
            { // SD card detected - wait for the end of initialization
                printf("SD card detected\r");
                printf("timeout:0x%08X\r",GetTimer(0));
                while (!CheckTimer(timeout))
  405ccc:	07 ff ec 9d 	l.jal 400f40 <CheckTimer>
  405cd0:	84 6e 00 00 	l.lwz r3,0x0(r14)
  405cd4:	bc 0b 00 00 	l.sfeqi r11,0x0
  405cd8:	13 ff ff d5 	l.bf 405c2c <MMC_Init+0x310>
  405cdc:	a8 4b 00 00 	l.ori r2,r11,0x0
                        printf("CMD55 (APP_CMD) failed!\r");
                        DisableCard();
                        return(CARDTYPE_NONE);
                    }
                }
                printf("SD card initialization timed out!\r");
  405ce0:	18 60 00 41 	l.movhi r3,0x41
  405ce4:	00 00 00 2a 	l.j 405d8c <MMC_Init+0x470>
  405ce8:	a8 63 7a 70 	l.ori r3,r3,0x7a70
                return(CARDTYPE_NONE);
            }
        }

        // it's not an SD card
        printf("MMC card detected\r");
  405cec:	18 60 00 41 	l.movhi r3,0x41
        while (!CheckTimer(timeout))
  405cf0:	18 40 00 41 	l.movhi r2,0x41
                return(CARDTYPE_NONE);
            }
        }

        // it's not an SD card
        printf("MMC card detected\r");
  405cf4:	a8 63 7a 93 	l.ori r3,r3,0x7a93
  405cf8:	07 ff fa 67 	l.jal 404694 <printf>
  405cfc:	a8 42 fd 60 	l.ori r2,r2,0xfd60
        while (!CheckTimer(timeout))
  405d00:	00 00 00 1c 	l.j 405d70 <MMC_Init+0x454>
  405d04:	15 00 00 00 	l.nop 0x0
        { // now we must wait until CMD1 returns 0 (or timeout elapses)
            if (MMC_Command(CMD1, 0) == 0x00)
  405d08:	07 ff f5 60 	l.jal 403288 <MMC_Command>
  405d0c:	9c 60 00 41 	l.addi r3,r0,0x41
  405d10:	bc 2b 00 00 	l.sfnei r11,0x0
  405d14:	10 00 00 17 	l.bf 405d70 <MMC_Init+0x454>
  405d18:	9c 60 00 50 	l.addi r3,r0,0x50
            { // initialization completed

                if (MMC_Command(CMD16, 512) != 0x00) // set block length
  405d1c:	07 ff f5 5b 	l.jal 403288 <MMC_Command>
  405d20:	9c 80 02 00 	l.addi r4,r0,0x200
  405d24:	bc 0b 00 00 	l.sfeqi r11,0x0
  405d28:	10 00 00 06 	l.bf 405d40 <MMC_Init+0x424>
  405d2c:	18 40 00 80 	l.movhi r2,0x80
                    printf("CMD16 (SET_BLOCKLEN) failed!\r");
  405d30:	18 60 00 41 	l.movhi r3,0x41
  405d34:	07 ff fa 58 	l.jal 404694 <printf>
  405d38:	a8 63 7a 52 	l.ori r3,r3,0x7a52

                DisableCard();
  405d3c:	18 40 00 80 	l.movhi r2,0x80
  405d40:	9c 80 00 10 	l.addi r4,r0,0x10
  405d44:	a8 62 00 20 	l.ori r3,r2,0x20
                if (GetSPIMode() == SPIMODE_FAST)
                    AT91C_SPI_CSR[0] = AT91C_SPI_CPOL | (3 << 8); // 16 MHz SPI clock (max 20 MHz for MMC card)
                else
                    AT91C_SPI_CSR[0] = AT91C_SPI_CPOL | (6 << 8); // 8 MHz SPI clock (no SPI mod)
#else
                SPI_fast(); // TODO this is too fast for MMC (20MHz max)
  405d48:	a8 42 00 1c 	l.ori r2,r2,0x1c
            { // initialization completed

                if (MMC_Command(CMD16, 512) != 0x00) // set block length
                    printf("CMD16 (SET_BLOCKLEN) failed!\r");

                DisableCard();
  405d4c:	d4 03 20 00 	l.sw 0x0(r3),r4
                if (GetSPIMode() == SPIMODE_FAST)
                    AT91C_SPI_CSR[0] = AT91C_SPI_CPOL | (3 << 8); // 16 MHz SPI clock (max 20 MHz for MMC card)
                else
                    AT91C_SPI_CSR[0] = AT91C_SPI_CPOL | (6 << 8); // 8 MHz SPI clock (no SPI mod)
#else
                SPI_fast(); // TODO this is too fast for MMC (20MHz max)
  405d50:	9c 60 00 00 	l.addi r3,r0,0x0
#endif
                CardType = CARDTYPE_MMC;

                return(CardType);
  405d54:	9d 60 00 01 	l.addi r11,r0,0x1
                if (GetSPIMode() == SPIMODE_FAST)
                    AT91C_SPI_CSR[0] = AT91C_SPI_CPOL | (3 << 8); // 16 MHz SPI clock (max 20 MHz for MMC card)
                else
                    AT91C_SPI_CSR[0] = AT91C_SPI_CPOL | (6 << 8); // 8 MHz SPI clock (no SPI mod)
#else
                SPI_fast(); // TODO this is too fast for MMC (20MHz max)
  405d58:	d4 02 18 00 	l.sw 0x0(r2),r3
#endif
                CardType = CARDTYPE_MMC;
  405d5c:	18 40 00 41 	l.movhi r2,0x41
  405d60:	9c 60 00 01 	l.addi r3,r0,0x1
  405d64:	a8 42 fd 65 	l.ori r2,r2,0xfd65

                return(CardType);
  405d68:	00 00 00 0f 	l.j 405da4 <MMC_Init+0x488>
  405d6c:	d8 02 18 00 	l.sb 0x0(r2),r3
            }
        }

        // it's not an SD card
        printf("MMC card detected\r");
        while (!CheckTimer(timeout))
  405d70:	07 ff ec 74 	l.jal 400f40 <CheckTimer>
  405d74:	84 62 00 00 	l.lwz r3,0x0(r2)
  405d78:	bc 0b 00 00 	l.sfeqi r11,0x0
  405d7c:	13 ff ff e3 	l.bf 405d08 <MMC_Init+0x3ec>
  405d80:	a8 8b 00 00 	l.ori r4,r11,0x0

                return(CardType);
            }
        }

        printf("MMC card initialization timed out!\r");
  405d84:	18 60 00 41 	l.movhi r3,0x41
  405d88:	a8 63 7a a6 	l.ori r3,r3,0x7aa6
  405d8c:	07 ff fa 42 	l.jal 404694 <printf>
  405d90:	18 40 00 80 	l.movhi r2,0x80
        DisableCard();
  405d94:	9c 60 00 10 	l.addi r3,r0,0x10
  405d98:	a8 42 00 20 	l.ori r2,r2,0x20
        return(CARDTYPE_NONE);
  405d9c:	9d 60 00 00 	l.addi r11,r0,0x0
                return(CardType);
            }
        }

        printf("MMC card initialization timed out!\r");
        DisableCard();
  405da0:	d4 02 18 00 	l.sw 0x0(r2),r3
    DisableCard();
    printf("No memory card detected!\r");
    return(CARDTYPE_NONE); 

  DEBUG_FUNC_OUT(DEBUG_F_MMC | DEBUG_L0);
}
  405da4:	9c 21 00 1c 	l.addi r1,r1,0x1c
  405da8:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  405dac:	84 41 ff ec 	l.lwz r2,0xffffffec(r1)
  405db0:	85 c1 ff f0 	l.lwz r14,0xfffffff0(r1)
  405db4:	86 01 ff f4 	l.lwz r16,0xfffffff4(r1)
  405db8:	44 00 48 00 	l.jr r9
  405dbc:	86 41 ff f8 	l.lwz r18,0xfffffff8(r1)
        printf("MMC card initialization timed out!\r");
        DisableCard();
        return(CARDTYPE_NONE);
    }

    DisableCard();
  405dc0:	d4 0e 18 00 	l.sw 0x0(r14),r3
    printf("No memory card detected!\r");
  405dc4:	18 60 00 41 	l.movhi r3,0x41
  405dc8:	07 ff fa 33 	l.jal 404694 <printf>
  405dcc:	a8 63 7a ca 	l.ori r3,r3,0x7aca
    return(CARDTYPE_NONE); 
  405dd0:	03 ff ff f5 	l.j 405da4 <MMC_Init+0x488>
  405dd4:	a9 62 00 00 	l.ori r11,r2,0x0

00405dd8 <OpenHardfile>:
  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


unsigned char OpenHardfile(unsigned char unit)
{
  405dd8:	d7 e1 17 e4 	l.sw 0xffffffe4(r1),r2
  405ddc:	a8 43 00 00 	l.ori r2,r3,0x0
  405de0:	d7 e1 87 ec 	l.sw 0xffffffec(r1),r16
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

    unsigned long time;
    char filename[12];

	switch(config.hardfile[unit].enabled)
  405de4:	b8 63 00 02 	l.slli r3,r3,0x2
  405de8:	ba 02 00 05 	l.slli r16,r2,0x5
  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


unsigned char OpenHardfile(unsigned char unit)
{
  405dec:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  405df0:	d7 e1 77 e8 	l.sw 0xffffffe8(r1),r14
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

    unsigned long time;
    char filename[12];

	switch(config.hardfile[unit].enabled)
  405df4:	e2 10 18 02 	l.sub r16,r16,r3
  405df8:	18 60 00 41 	l.movhi r3,0x41
  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


unsigned char OpenHardfile(unsigned char unit)
{
  405dfc:	d7 e1 97 f0 	l.sw 0xfffffff0(r1),r18
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

    unsigned long time;
    char filename[12];

	switch(config.hardfile[unit].enabled)
  405e00:	a8 63 cc ac 	l.ori r3,r3,0xccac
  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


unsigned char OpenHardfile(unsigned char unit)
{
  405e04:	d7 e1 a7 f4 	l.sw 0xfffffff4(r1),r20
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

    unsigned long time;
    char filename[12];

	switch(config.hardfile[unit].enabled)
  405e08:	e2 10 18 00 	l.add r16,r16,r3
  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


unsigned char OpenHardfile(unsigned char unit)
{
  405e0c:	d7 e1 b7 f8 	l.sw 0xfffffff8(r1),r22
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

    unsigned long time;
    char filename[12];

	switch(config.hardfile[unit].enabled)
  405e10:	9e 10 00 30 	l.addi r16,r16,0x30
  405e14:	8d d0 00 00 	l.lbz r14,0x0(r16)
  405e18:	bc 4e 00 06 	l.sfgtui r14,0x6
  405e1c:	10 00 00 0c 	l.bf 405e4c <OpenHardfile+0x74>
  405e20:	9c 21 ff cc 	l.addi r1,r1,0xffffffcc
  405e24:	bc 6e 00 03 	l.sfgeui r14,0x3
  405e28:	10 00 00 8c 	l.bf 406058 <OpenHardfile+0x280>
  405e2c:	9c 80 11 44 	l.addi r4,r0,0x1144
  405e30:	bc 0e 00 01 	l.sfeqi r14,0x1
  405e34:	10 00 00 09 	l.bf 405e58 <OpenHardfile+0x80>
  405e38:	bc 0e 00 02 	l.sfeqi r14,0x2
  405e3c:	0c 00 00 9a 	l.bnf 4060a4 <OpenHardfile+0x2cc>
  405e40:	a8 62 00 00 	l.ori r3,r2,0x0
				    return 1;
				}
			}
			break;
		case HDF_CARD:
			hdf[unit].type=HDF_CARD;
  405e44:	00 00 00 78 	l.j 406024 <OpenHardfile+0x24c>
  405e48:	18 40 00 41 	l.movhi r2,0x41
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

    unsigned long time;
    char filename[12];

	switch(config.hardfile[unit].enabled)
  405e4c:	bc 0e 00 81 	l.sfeqi r14,0x81
  405e50:	0c 00 00 96 	l.bnf 4060a8 <OpenHardfile+0x2d0>
  405e54:	b8 62 00 02 	l.slli r3,r2,0x2
	{
		case HDF_FILE | HDF_SYNTHRDB:
		case HDF_FILE:
			hdf[unit].type=config.hardfile[unit].enabled;
  405e58:	a8 62 00 00 	l.ori r3,r2,0x0
  405e5c:	9c 80 11 44 	l.addi r4,r0,0x1144
  405e60:	07 ff e8 82 	l.jal 400068 <__mulsi3>
  405e64:	ba 82 00 05 	l.slli r20,r2,0x5
  405e68:	18 a0 00 41 	l.movhi r5,0x41
			strncpy(filename, config.hardfile[unit].name, 8);
  405e6c:	b8 62 00 02 	l.slli r3,r2,0x2

	switch(config.hardfile[unit].enabled)
	{
		case HDF_FILE | HDF_SYNTHRDB:
		case HDF_FILE:
			hdf[unit].type=config.hardfile[unit].enabled;
  405e70:	a8 a5 a8 f8 	l.ori r5,r5,0xa8f8
			strncpy(filename, config.hardfile[unit].name, 8);
  405e74:	9e c1 00 0c 	l.addi r22,r1,0xc

	switch(config.hardfile[unit].enabled)
	{
		case HDF_FILE | HDF_SYNTHRDB:
		case HDF_FILE:
			hdf[unit].type=config.hardfile[unit].enabled;
  405e78:	e2 0b 28 00 	l.add r16,r11,r5
			strncpy(filename, config.hardfile[unit].name, 8);
  405e7c:	18 a0 00 41 	l.movhi r5,0x41
  405e80:	e2 94 18 02 	l.sub r20,r20,r3
  405e84:	a8 a5 cc de 	l.ori r5,r5,0xccde
  405e88:	a8 76 00 00 	l.ori r3,r22,0x0
  405e8c:	e0 94 28 00 	l.add r4,r20,r5

	switch(config.hardfile[unit].enabled)
	{
		case HDF_FILE | HDF_SYNTHRDB:
		case HDF_FILE:
			hdf[unit].type=config.hardfile[unit].enabled;
  405e90:	d4 10 70 00 	l.sw 0x0(r16),r14
			strncpy(filename, config.hardfile[unit].name, 8);
  405e94:	9c a0 00 08 	l.addi r5,r0,0x8
  405e98:	07 ff e9 35 	l.jal 40036c <strncpy>
  405e9c:	aa 4b 00 00 	l.ori r18,r11,0x0
			strcpy(&filename[8], "HDF");
  405ea0:	18 80 00 41 	l.movhi r4,0x41
  405ea4:	9c 61 00 14 	l.addi r3,r1,0x14
  405ea8:	07 ff e9 09 	l.jal 4002cc <strcpy>
  405eac:	a8 84 7a e4 	l.ori r4,r4,0x7ae4

			if (filename[0])
  405eb0:	90 61 00 0c 	l.lbs r3,0xc(r1)
  405eb4:	bc 03 00 00 	l.sfeqi r3,0x0
  405eb8:	10 00 00 7b 	l.bf 4060a4 <OpenHardfile+0x2cc>
  405ebc:	18 60 00 41 	l.movhi r3,0x41
			{
				if (FileOpen(&hdf[unit].file, filename))
  405ec0:	9d d2 00 04 	l.addi r14,r18,0x4
  405ec4:	a8 63 a8 f8 	l.ori r3,r3,0xa8f8
  405ec8:	a8 96 00 00 	l.ori r4,r22,0x0
  405ecc:	e1 ce 18 00 	l.add r14,r14,r3
  405ed0:	04 00 0d 00 	l.jal 4092d0 <FileOpen>
  405ed4:	a8 6e 00 00 	l.ori r3,r14,0x0
  405ed8:	bc 0b 00 00 	l.sfeqi r11,0x0
  405edc:	10 00 00 72 	l.bf 4060a4 <OpenHardfile+0x2cc>
  405ee0:	a8 70 00 00 	l.ori r3,r16,0x0
				{
				    GetHardfileGeometry(&hdf[unit]);
  405ee4:	07 ff fb a7 	l.jal 404d80 <GetHardfileGeometry>
  405ee8:	9e 52 00 0c 	l.addi r18,r18,0xc

				    printf("HARDFILE %d:\r", unit);
  405eec:	18 60 00 41 	l.movhi r3,0x41
  405ef0:	d4 01 10 00 	l.sw 0x0(r1),r2
  405ef4:	07 ff f9 e8 	l.jal 404694 <printf>
  405ef8:	a8 63 7a e8 	l.ori r3,r3,0x7ae8
				    printf("file: \"%.8s.%.3s\"\r", hdf[unit].file.name, &hdf[unit].file.name[8]);
  405efc:	18 a0 00 41 	l.movhi r5,0x41
  405f00:	18 60 00 41 	l.movhi r3,0x41
  405f04:	a8 a5 a8 f8 	l.ori r5,r5,0xa8f8
  405f08:	a8 63 7a f6 	l.ori r3,r3,0x7af6
  405f0c:	e2 52 28 00 	l.add r18,r18,r5
  405f10:	d4 01 70 00 	l.sw 0x0(r1),r14
  405f14:	07 ff f9 e0 	l.jal 404694 <printf>
  405f18:	d4 01 90 04 	l.sw 0x4(r1),r18
				    printf("size: %lu (%lu MB)\r", hdf[unit].file.size, hdf[unit].file.size >> 20);
  405f1c:	84 70 00 1c 	l.lwz r3,0x1c(r16)
				    printf("CHS: %u.%u.%u", hdf[unit].cylinders, hdf[unit].heads, hdf[unit].sectors);
  405f20:	9d d0 01 30 	l.addi r14,r16,0x130
				{
				    GetHardfileGeometry(&hdf[unit]);

				    printf("HARDFILE %d:\r", unit);
				    printf("file: \"%.8s.%.3s\"\r", hdf[unit].file.name, &hdf[unit].file.name[8]);
				    printf("size: %lu (%lu MB)\r", hdf[unit].file.size, hdf[unit].file.size >> 20);
  405f24:	d4 01 18 00 	l.sw 0x0(r1),r3
  405f28:	b8 63 00 54 	l.srli r3,r3,0x14
				    printf("CHS: %u.%u.%u", hdf[unit].cylinders, hdf[unit].heads, hdf[unit].sectors);
  405f2c:	9e 50 01 34 	l.addi r18,r16,0x134
				{
				    GetHardfileGeometry(&hdf[unit]);

				    printf("HARDFILE %d:\r", unit);
				    printf("file: \"%.8s.%.3s\"\r", hdf[unit].file.name, &hdf[unit].file.name[8]);
				    printf("size: %lu (%lu MB)\r", hdf[unit].file.size, hdf[unit].file.size >> 20);
  405f30:	d4 01 18 04 	l.sw 0x4(r1),r3
  405f34:	18 60 00 41 	l.movhi r3,0x41
  405f38:	07 ff f9 d7 	l.jal 404694 <printf>
  405f3c:	a8 63 7b 09 	l.ori r3,r3,0x7b09
				    printf("CHS: %u.%u.%u", hdf[unit].cylinders, hdf[unit].heads, hdf[unit].sectors);
  405f40:	94 6e 00 00 	l.lhz r3,0x0(r14)
  405f44:	d4 01 18 00 	l.sw 0x0(r1),r3
  405f48:	94 6e 00 02 	l.lhz r3,0x2(r14)
  405f4c:	d4 01 18 04 	l.sw 0x4(r1),r3
  405f50:	94 72 00 00 	l.lhz r3,0x0(r18)
  405f54:	d4 01 18 08 	l.sw 0x8(r1),r3
  405f58:	18 60 00 41 	l.movhi r3,0x41
  405f5c:	07 ff f9 ce 	l.jal 404694 <printf>
  405f60:	a8 63 7b 1d 	l.ori r3,r3,0x7b1d
				    printf(" (%lu MB)\r", ((((unsigned long) hdf[unit].cylinders) * hdf[unit].heads * hdf[unit].sectors) >> 11));
  405f64:	94 6e 00 02 	l.lhz r3,0x2(r14)
  405f68:	07 ff e8 40 	l.jal 400068 <__mulsi3>
  405f6c:	94 8e 00 00 	l.lhz r4,0x0(r14)
  405f70:	94 92 00 00 	l.lhz r4,0x0(r18)
  405f74:	07 ff e8 3d 	l.jal 400068 <__mulsi3>
  405f78:	a8 6b 00 00 	l.ori r3,r11,0x0
  405f7c:	18 60 00 41 	l.movhi r3,0x41
  405f80:	b9 6b 00 4b 	l.srli r11,r11,0xb
  405f84:	a8 63 7b 12 	l.ori r3,r3,0x7b12
  405f88:	07 ff f9 c3 	l.jal 404694 <printf>
  405f8c:	d4 01 58 00 	l.sw 0x0(r1),r11

				    time = GetTimer(0);
  405f90:	07 ff eb e6 	l.jal 400f28 <GetTimer>
  405f94:	9c 60 00 00 	l.addi r3,r0,0x0
				    BuildHardfileIndex(&hdf[unit]);
  405f98:	a8 70 00 00 	l.ori r3,r16,0x0
  405f9c:	07 ff f4 13 	l.jal 402fe8 <BuildHardfileIndex>
  405fa0:	aa cb 00 00 	l.ori r22,r11,0x0
				    time = GetTimer(0) - time;
  405fa4:	9c 60 00 00 	l.addi r3,r0,0x0
  405fa8:	07 ff eb e0 	l.jal 400f28 <GetTimer>
  405fac:	9e 10 01 3c 	l.addi r16,r16,0x13c
  405fb0:	e1 6b b0 02 	l.sub r11,r11,r22
				    printf("Hardfile indexed in %lu ms\r", time >> 16);
  405fb4:	18 60 00 41 	l.movhi r3,0x41
  405fb8:	b9 6b 00 50 	l.srli r11,r11,0x10
  405fbc:	a8 63 7b 2b 	l.ori r3,r3,0x7b2b
  405fc0:	07 ff f9 b5 	l.jal 404694 <printf>
  405fc4:	d4 01 58 00 	l.sw 0x0(r1),r11

					if(config.hardfile[unit].enabled & HDF_SYNTHRDB)
  405fc8:	18 60 00 41 	l.movhi r3,0x41
  405fcc:	a8 63 cc ac 	l.ori r3,r3,0xccac
  405fd0:	e2 94 18 00 	l.add r20,r20,r3
  405fd4:	90 74 00 30 	l.lbs r3,0x30(r20)
  405fd8:	bd 63 00 00 	l.sfgesi r3,0x0
  405fdc:	10 00 00 08 	l.bf 405ffc <OpenHardfile+0x224>
  405fe0:	9c a0 00 00 	l.addi r5,r0,0x0
						hdf[unit].offset=-(hdf[unit].heads*hdf[unit].sectors);
  405fe4:	94 72 00 00 	l.lhz r3,0x0(r18)
  405fe8:	07 ff e8 20 	l.jal 400068 <__mulsi3>
  405fec:	94 8e 00 02 	l.lhz r4,0x2(r14)
  405ff0:	e1 60 58 02 	l.sub r11,r0,r11
  405ff4:	00 00 00 03 	l.j 406000 <OpenHardfile+0x228>
  405ff8:	d4 10 58 00 	l.sw 0x0(r16),r11
					else
						hdf[unit].offset=0;		
  405ffc:	d4 10 28 00 	l.sw 0x0(r16),r5

				    config.hardfile[unit].present = 1;
  406000:	b8 62 00 02 	l.slli r3,r2,0x2
  406004:	b8 42 00 05 	l.slli r2,r2,0x5
  406008:	9c a0 00 01 	l.addi r5,r0,0x1
  40600c:	e0 42 18 02 	l.sub r2,r2,r3
  406010:	18 60 00 41 	l.movhi r3,0x41
  406014:	a8 63 cc ac 	l.ori r3,r3,0xccac
  406018:	e0 42 18 00 	l.add r2,r2,r3
  40601c:	00 00 00 0d 	l.j 406050 <OpenHardfile+0x278>
  406020:	d8 02 28 31 	l.sb 0x31(r2),r5
				    return 1;
				}
			}
			break;
		case HDF_CARD:
			hdf[unit].type=HDF_CARD;
  406024:	9c 80 11 44 	l.addi r4,r0,0x1144
  406028:	07 ff e8 10 	l.jal 400068 <__mulsi3>
  40602c:	a8 42 a8 f8 	l.ori r2,r2,0xa8f8
		    config.hardfile[unit].present = 1;
  406030:	9c a0 00 01 	l.addi r5,r0,0x1
				    return 1;
				}
			}
			break;
		case HDF_CARD:
			hdf[unit].type=HDF_CARD;
  406034:	e0 6b 10 00 	l.add r3,r11,r2
		    config.hardfile[unit].present = 1;
			hdf[unit].file.size=0;
  406038:	9c 40 00 00 	l.addi r2,r0,0x0
				    return 1;
				}
			}
			break;
		case HDF_CARD:
			hdf[unit].type=HDF_CARD;
  40603c:	d4 03 70 00 	l.sw 0x0(r3),r14
		    config.hardfile[unit].present = 1;
  406040:	d8 10 28 01 	l.sb 0x1(r16),r5
			hdf[unit].file.size=0;
  406044:	d4 03 10 1c 	l.sw 0x1c(r3),r2
			hdf[unit].offset=0;
		    GetHardfileGeometry(&hdf[unit]);
  406048:	07 ff fb 4e 	l.jal 404d80 <GetHardfileGeometry>
  40604c:	d4 03 11 3c 	l.sw 0x13c(r3),r2
			return 1;
  406050:	00 00 00 1e 	l.j 4060c8 <OpenHardfile+0x2f0>
  406054:	9d 60 00 01 	l.addi r11,r0,0x1
			break;
		case HDF_CARDPART0:
		case HDF_CARDPART1:
		case HDF_CARDPART2:
		case HDF_CARDPART3:
			hdf[unit].type=config.hardfile[unit].enabled;
  406058:	a8 62 00 00 	l.ori r3,r2,0x0
  40605c:	07 ff e8 03 	l.jal 400068 <__mulsi3>
  406060:	9c 40 00 01 	l.addi r2,r0,0x1
  406064:	18 a0 00 41 	l.movhi r5,0x41
			hdf[unit].partition=hdf[unit].type-HDF_CARDPART0;
		    config.hardfile[unit].present = 1;
  406068:	d8 10 10 01 	l.sb 0x1(r16),r2
			break;
		case HDF_CARDPART0:
		case HDF_CARDPART1:
		case HDF_CARDPART2:
		case HDF_CARDPART3:
			hdf[unit].type=config.hardfile[unit].enabled;
  40606c:	a8 a5 a8 f8 	l.ori r5,r5,0xa8f8
			hdf[unit].partition=hdf[unit].type-HDF_CARDPART0;
		    config.hardfile[unit].present = 1;
			hdf[unit].file.size=0;
			hdf[unit].offset=partitions[hdf[unit].partition].startlba;
  406070:	18 40 00 41 	l.movhi r2,0x41
			break;
		case HDF_CARDPART0:
		case HDF_CARDPART1:
		case HDF_CARDPART2:
		case HDF_CARDPART3:
			hdf[unit].type=config.hardfile[unit].enabled;
  406074:	e0 6b 28 00 	l.add r3,r11,r5
			hdf[unit].partition=hdf[unit].type-HDF_CARDPART0;
		    config.hardfile[unit].present = 1;
			hdf[unit].file.size=0;
			hdf[unit].offset=partitions[hdf[unit].partition].startlba;
  406078:	a8 42 a4 98 	l.ori r2,r2,0xa498
			break;
		case HDF_CARDPART0:
		case HDF_CARDPART1:
		case HDF_CARDPART2:
		case HDF_CARDPART3:
			hdf[unit].type=config.hardfile[unit].enabled;
  40607c:	d4 03 70 00 	l.sw 0x0(r3),r14
			hdf[unit].partition=hdf[unit].type-HDF_CARDPART0;
  406080:	9d ce ff fd 	l.addi r14,r14,0xfffffffd
		    config.hardfile[unit].present = 1;
			hdf[unit].file.size=0;
  406084:	9c a0 00 00 	l.addi r5,r0,0x0
		case HDF_CARDPART0:
		case HDF_CARDPART1:
		case HDF_CARDPART2:
		case HDF_CARDPART3:
			hdf[unit].type=config.hardfile[unit].enabled;
			hdf[unit].partition=hdf[unit].type-HDF_CARDPART0;
  406088:	dc 03 71 38 	l.sh 0x138(r3),r14
		    config.hardfile[unit].present = 1;
			hdf[unit].file.size=0;
			hdf[unit].offset=partitions[hdf[unit].partition].startlba;
  40608c:	a5 ce ff ff 	l.andi r14,r14,0xffff
		case HDF_CARDPART2:
		case HDF_CARDPART3:
			hdf[unit].type=config.hardfile[unit].enabled;
			hdf[unit].partition=hdf[unit].type-HDF_CARDPART0;
		    config.hardfile[unit].present = 1;
			hdf[unit].file.size=0;
  406090:	d4 03 28 1c 	l.sw 0x1c(r3),r5
			hdf[unit].offset=partitions[hdf[unit].partition].startlba;
  406094:	b9 ce 00 04 	l.slli r14,r14,0x4
  406098:	e1 ce 10 00 	l.add r14,r14,r2
  40609c:	03 ff ff eb 	l.j 406048 <OpenHardfile+0x270>
  4060a0:	84 4e 00 08 	l.lwz r2,0x8(r14)
		    GetHardfileGeometry(&hdf[unit]);
			return 1;
			break;
	}
    config.hardfile[unit].present = 0;
  4060a4:	b8 62 00 02 	l.slli r3,r2,0x2
  4060a8:	b8 42 00 05 	l.slli r2,r2,0x5
  4060ac:	9c a0 00 00 	l.addi r5,r0,0x0
    return 0;
  4060b0:	9d 60 00 00 	l.addi r11,r0,0x0
			hdf[unit].offset=partitions[hdf[unit].partition].startlba;
		    GetHardfileGeometry(&hdf[unit]);
			return 1;
			break;
	}
    config.hardfile[unit].present = 0;
  4060b4:	e0 42 18 02 	l.sub r2,r2,r3
  4060b8:	18 60 00 41 	l.movhi r3,0x41
  4060bc:	a8 63 cc ac 	l.ori r3,r3,0xccac
  4060c0:	e0 42 18 00 	l.add r2,r2,r3
  4060c4:	d8 02 28 31 	l.sb 0x31(r2),r5
    return 0;

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L1);
}
  4060c8:	9c 21 00 34 	l.addi r1,r1,0x34
  4060cc:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  4060d0:	84 41 ff e4 	l.lwz r2,0xffffffe4(r1)
  4060d4:	85 c1 ff e8 	l.lwz r14,0xffffffe8(r1)
  4060d8:	86 01 ff ec 	l.lwz r16,0xffffffec(r1)
  4060dc:	86 41 ff f0 	l.lwz r18,0xfffffff0(r1)
  4060e0:	86 81 ff f4 	l.lwz r20,0xfffffff4(r1)
  4060e4:	44 00 48 00 	l.jr r9
  4060e8:	86 c1 ff f8 	l.lwz r22,0xfffffff8(r1)

004060ec <BootPrint>:
}


// print message on the boot screen
char BootPrint(const char *text)
{
  4060ec:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    unsigned char c1, c2, c3, c4;
    unsigned char cmd;
    const char *p;
    unsigned char n;

    printf(text);
  4060f0:	07 ff f9 69 	l.jal 404694 <printf>
  4060f4:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
    printf("\r");
  4060f8:	18 60 00 41 	l.movhi r3,0x41
  4060fc:	07 ff f9 66 	l.jal 404694 <printf>
  406100:	a8 63 82 8e 	l.ori r3,r3,0x828e
    }
    DisableFpga();
    return 0;

  DEBUG_FUNC_OUT(DEBUG_F_FPGA | DEBUG_L1);
}
  406104:	9c 21 00 04 	l.addi r1,r1,0x4
  406108:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  40610c:	44 00 48 00 	l.jr r9
  406110:	9d 60 00 00 	l.addi r11,r0,0x0

00406114 <bprintfl>:
}


extern char BootPrint(const char *s);
void bprintfl(const char *fmt,unsigned long l)
{
  406114:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  406118:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
  40611c:	9c 21 ff b4 	l.addi r1,r1,0xffffffb4
  406120:	a8 a3 00 00 	l.ori r5,r3,0x0
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L2);

	char s[64];
	sprintf(s,fmt,l);
  406124:	9c 41 00 04 	l.addi r2,r1,0x4
  406128:	d4 01 20 00 	l.sw 0x0(r1),r4
  40612c:	a8 62 00 00 	l.ori r3,r2,0x0
  406130:	07 ff f8 d5 	l.jal 404484 <sprintf>
  406134:	a8 85 00 00 	l.ori r4,r5,0x0
	BootPrint(s);
  406138:	07 ff ff ed 	l.jal 4060ec <BootPrint>
  40613c:	a8 62 00 00 	l.ori r3,r2,0x0

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}
  406140:	9c 21 00 4c 	l.addi r1,r1,0x4c
  406144:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  406148:	44 00 48 00 	l.jr r9
  40614c:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

00406150 <WriteTrack>:
  DEBUG_FUNC_OUT(DEBUG_F_FDD | DEBUG_L2);
}


void WriteTrack(adfTYPE *drive)
{
  406150:	d7 e1 77 d8 	l.sw 0xffffffd8(r1),r14
  406154:	d7 e1 87 dc 	l.sw 0xffffffdc(r1),r16
  406158:	d7 e1 97 e0 	l.sw 0xffffffe0(r1),r18
  40615c:	d7 e1 a7 e4 	l.sw 0xffffffe4(r1),r20
  406160:	d7 e1 b7 e8 	l.sw 0xffffffe8(r1),r22
  406164:	d7 e1 c7 ec 	l.sw 0xffffffec(r1),r24
  406168:	d7 e1 d7 f0 	l.sw 0xfffffff0(r1),r26
  40616c:	d7 e1 f7 f8 	l.sw 0xfffffff8(r1),r30
  406170:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  406174:	d7 e1 17 d4 	l.sw 0xffffffd4(r1),r2
  406178:	d7 e1 e7 f4 	l.sw 0xfffffff4(r1),r28
  40617c:	aa 83 00 00 	l.ori r20,r3,0x0
    unsigned char sector;
    unsigned char Track;
    unsigned char Sector;

    // setting file pointer to begining of current track
    file.cluster = drive->cache[drive->track];
  406180:	8c 43 02 a1 	l.lbz r2,0x2a1(r3)
  406184:	9c 82 00 01 	l.addi r4,r2,0x1
  406188:	18 60 00 41 	l.movhi r3,0x41
  40618c:	b8 a4 00 02 	l.slli r5,r4,0x2
  406190:	a8 63 cb 80 	l.ori r3,r3,0xcb80
    file.sector = drive->track * 11;
  406194:	e0 c2 10 00 	l.add r6,r2,r2
    unsigned char sector;
    unsigned char Track;
    unsigned char Sector;

    // setting file pointer to begining of current track
    file.cluster = drive->cache[drive->track];
  406198:	e0 b4 28 00 	l.add r5,r20,r5

    unsigned char c, c1, c2, c3, c4;
    unsigned char i;
    unsigned char checksum[4];

    Error = 0;
  40619c:	1a 40 00 41 	l.movhi r18,0x41
    unsigned char sector;
    unsigned char Track;
    unsigned char Sector;

    // setting file pointer to begining of current track
    file.cluster = drive->cache[drive->track];
  4061a0:	84 a5 00 00 	l.lwz r5,0x0(r5)
  DEBUG_FUNC_OUT(DEBUG_F_FDD | DEBUG_L2);
}


void WriteTrack(adfTYPE *drive)
{
  4061a4:	9c 21 ff c4 	l.addi r1,r1,0xffffffc4
    unsigned char sector;
    unsigned char Track;
    unsigned char Sector;

    // setting file pointer to begining of current track
    file.cluster = drive->cache[drive->track];
  4061a8:	d4 03 28 1c 	l.sw 0x1c(r3),r5
    file.sector = drive->track * 11;
  4061ac:	b8 a2 00 03 	l.slli r5,r2,0x3
    sector = 0;

    drive->track_prev = drive->track + 1; // just to force next read from the start of current track
  4061b0:	d8 14 22 a2 	l.sb 0x2a2(r20),r4
  4061b4:	9f 40 00 00 	l.addi r26,r0,0x0
    unsigned char Track;
    unsigned char Sector;

    // setting file pointer to begining of current track
    file.cluster = drive->cache[drive->track];
    file.sector = drive->track * 11;
  4061b8:	e0 a6 28 00 	l.add r5,r6,r5

    unsigned char c, c1, c2, c3, c4;
    unsigned char i;
    unsigned char checksum[4];

    Error = 0;
  4061bc:	aa 52 a8 e4 	l.ori r18,r18,0xa8e4
    unsigned char Track;
    unsigned char Sector;

    // setting file pointer to begining of current track
    file.cluster = drive->cache[drive->track];
    file.sector = drive->track * 11;
  4061c0:	e0 45 10 00 	l.add r2,r5,r2
        {
            Error = 20;
            break;
        }

        DisableFpga();
  4061c4:	9f 00 00 20 	l.addi r24,r0,0x20
    unsigned char Track;
    unsigned char Sector;

    // setting file pointer to begining of current track
    file.cluster = drive->cache[drive->track];
    file.sector = drive->track * 11;
  4061c8:	d4 03 10 14 	l.sw 0x14(r3),r2
    unsigned char checksum[4];

    Error = 0;
    while (1)
    {
        EnableFpga();
  4061cc:	18 40 00 80 	l.movhi r2,0x80
                        FileNextSector(&file);
                        sector++;
                    }
                    else
                    {
                        file.cluster = drive->cache[drive->track];
  4061d0:	ab c3 00 00 	l.ori r30,r3,0x0
    unsigned char checksum[4];

    Error = 0;
    while (1)
    {
        EnableFpga();
  4061d4:	aa c2 00 20 	l.ori r22,r2,0x20
        c1 = SPI(0); // write request signal
  4061d8:	a9 c2 00 24 	l.ori r14,r2,0x24
                Error = 21;
                printf("\rSecond sync word missing...\r");
                break;
            }

			SPIN();
  4061dc:	a8 42 00 1c 	l.ori r2,r2,0x1c

        n = ((c3 & 0x3F) << 8) + c4;

        if (n >= 0x204)
        {
			SPIN();
  4061e0:	00 00 02 d0 	l.j 406d20 <WriteTrack+0xbd0>
  4061e4:	aa 02 00 00 	l.ori r16,r2,0x0

    unsigned char c, c1, c2, c3, c4;
    unsigned char i;
    unsigned char checksum[4];

    Error = 0;
  4061e8:	9c 60 00 00 	l.addi r3,r0,0x0
  4061ec:	d8 12 18 00 	l.sb 0x0(r18),r3
    while (1)
    {
        EnableFpga();
        c1 = SPI(0); // write request signal
  4061f0:	9d 00 00 00 	l.addi r8,r0,0x0
    unsigned char checksum[4];

    Error = 0;
    while (1)
    {
        EnableFpga();
  4061f4:	d4 16 20 00 	l.sw 0x0(r22),r4
        c1 = SPI(0); // write request signal
  4061f8:	d4 0e 40 00 	l.sw 0x0(r14),r8
  4061fc:	84 6e 00 00 	l.lwz r3,0x0(r14)
        c2 = SPI(0); // track number (cylinder & head)
  406200:	d4 0e 40 00 	l.sw 0x0(r14),r8
        if (!(c1 & CMD_WRTRK))
  406204:	a4 63 00 02 	l.andi r3,r3,0x2
    Error = 0;
    while (1)
    {
        EnableFpga();
        c1 = SPI(0); // write request signal
        c2 = SPI(0); // track number (cylinder & head)
  406208:	84 8e 00 00 	l.lwz r4,0x0(r14)
        if (!(c1 & CMD_WRTRK))
  40620c:	e4 03 40 00 	l.sfeq r3,r8
  406210:	10 00 02 a8 	l.bf 406cb0 <WriteTrack+0xb60>
  406214:	15 00 00 00 	l.nop 0x0
            break;
        SPI(0); // disk sync high byte
  406218:	d4 0e 40 00 	l.sw 0x0(r14),r8
  40621c:	84 6e 00 00 	l.lwz r3,0x0(r14)
        SPI(0); // disk sync low byte
  406220:	d4 0e 40 00 	l.sw 0x0(r14),r8
  406224:	84 6e 00 00 	l.lwz r3,0x0(r14)
        c3 = SPI(0); // msb of mfm words to transfer
  406228:	d4 0e 40 00 	l.sw 0x0(r14),r8
  40622c:	84 6e 00 00 	l.lwz r3,0x0(r14)
        c4 = SPI(0); // lsb of mfm words to transfer
  406230:	d4 0e 40 00 	l.sw 0x0(r14),r8
        c2 = SPI(0); // track number (cylinder & head)
        if (!(c1 & CMD_WRTRK))
            break;
        SPI(0); // disk sync high byte
        SPI(0); // disk sync low byte
        c3 = SPI(0); // msb of mfm words to transfer
  406234:	a4 63 00 ff 	l.andi r3,r3,0xff
        c4 = SPI(0); // lsb of mfm words to transfer
  406238:	84 ce 00 00 	l.lwz r6,0x0(r14)

        if ((c3 & 0x3F) != 0 || c4 > 24)// remaining header data is 25 mfm words
  40623c:	a4 a3 00 3f 	l.andi r5,r3,0x3f
  406240:	e0 a0 28 02 	l.sub r5,r0,r5
  406244:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  406248:	e4 25 40 00 	l.sfne r5,r8
  40624c:	10 00 00 0a 	l.bf 406274 <WriteTrack+0x124>
  406250:	a4 c6 00 ff 	l.andi r6,r6,0xff
  406254:	bc 46 00 18 	l.sfgtui r6,0x18
  406258:	10 00 00 03 	l.bf 406264 <WriteTrack+0x114>
  40625c:	9c 80 00 01 	l.addi r4,r0,0x1
  406260:	a8 85 00 00 	l.ori r4,r5,0x0
  406264:	a4 84 00 ff 	l.andi r4,r4,0xff
  406268:	bc 04 00 00 	l.sfeqi r4,0x0
  40626c:	10 00 01 58 	l.bf 4067cc <WriteTrack+0x67c>
  406270:	b8 63 00 18 	l.slli r3,r3,0x18
        {
            c1 = SPI(0); // second sync lsb
  406274:	9d a0 00 00 	l.addi r13,r0,0x0
  406278:	d4 0e 68 00 	l.sw 0x0(r14),r13
  40627c:	84 8e 00 00 	l.lwz r4,0x0(r14)
            c2 = SPI(0); // second sync msb
  406280:	d4 0e 68 00 	l.sw 0x0(r14),r13
  406284:	84 6e 00 00 	l.lwz r3,0x0(r14)
            if (c1 != 0x44 || c2 != 0x89)
  406288:	ac 63 ff 89 	l.xori r3,r3,0xffffff89
  40628c:	a4 63 00 ff 	l.andi r3,r3,0xff
  406290:	e4 23 68 00 	l.sfne r3,r13
  406294:	10 00 00 08 	l.bf 4062b4 <WriteTrack+0x164>
  406298:	ac 84 00 44 	l.xori r4,r4,0x44
  40629c:	a4 84 00 ff 	l.andi r4,r4,0xff
  4062a0:	e0 80 20 02 	l.sub r4,r0,r4
  4062a4:	b8 84 00 5f 	l.srli r4,r4,0x1f
  4062a8:	e4 04 68 00 	l.sfeq r4,r13
  4062ac:	10 00 00 09 	l.bf 4062d0 <WriteTrack+0x180>
  4062b0:	15 00 00 00 	l.nop 0x0
            {
                Error = 21;
                printf("\rSecond sync word missing...\r");
  4062b4:	18 60 00 41 	l.movhi r3,0x41
        {
            c1 = SPI(0); // second sync lsb
            c2 = SPI(0); // second sync msb
            if (c1 != 0x44 || c2 != 0x89)
            {
                Error = 21;
  4062b8:	9e 60 00 15 	l.addi r19,r0,0x15
                printf("\rSecond sync word missing...\r");
  4062bc:	a8 63 7b 47 	l.ori r3,r3,0x7b47
  4062c0:	07 ff f8 f5 	l.jal 404694 <printf>
  4062c4:	d8 12 98 00 	l.sb 0x0(r18),r19
  4062c8:	00 00 02 7a 	l.j 406cb0 <WriteTrack+0xb60>
  4062cc:	15 00 00 00 	l.nop 0x0
                break;
            }

			SPIN();
  4062d0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4062d4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4062d8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4062dc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4062e0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4062e4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4062e8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4062ec:	84 62 00 00 	l.lwz r3,0x0(r2)
  4062f0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4062f4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4062f8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4062fc:	84 62 00 00 	l.lwz r3,0x0(r2)

            c = SPI(0);
  406300:	d4 0e 20 00 	l.sw 0x0(r14),r4
  406304:	85 ee 00 00 	l.lwz r15,0x0(r14)
            checksum[0] = c;
            c1 = (c & 0x55) << 1;
			SPIN();
  406308:	84 62 00 00 	l.lwz r3,0x0(r2)
  40630c:	84 62 00 00 	l.lwz r3,0x0(r2)
  406310:	84 62 00 00 	l.lwz r3,0x0(r2)
  406314:	84 62 00 00 	l.lwz r3,0x0(r2)
  406318:	84 62 00 00 	l.lwz r3,0x0(r2)
  40631c:	84 62 00 00 	l.lwz r3,0x0(r2)
  406320:	84 62 00 00 	l.lwz r3,0x0(r2)
  406324:	84 62 00 00 	l.lwz r3,0x0(r2)
  406328:	84 62 00 00 	l.lwz r3,0x0(r2)
  40632c:	84 62 00 00 	l.lwz r3,0x0(r2)
  406330:	84 62 00 00 	l.lwz r3,0x0(r2)
  406334:	84 62 00 00 	l.lwz r3,0x0(r2)
            c = SPI(0);
  406338:	d4 0e 20 00 	l.sw 0x0(r14),r4
                break;
            }

			SPIN();

            c = SPI(0);
  40633c:	a5 ef 00 ff 	l.andi r15,r15,0xff
            checksum[0] = c;
            c1 = (c & 0x55) << 1;
			SPIN();
            c = SPI(0);
  406340:	85 ae 00 00 	l.lwz r13,0x0(r14)
            checksum[1] = c;
            c2 = (c & 0x55) << 1;

			SPIN();
  406344:	84 62 00 00 	l.lwz r3,0x0(r2)
  406348:	84 62 00 00 	l.lwz r3,0x0(r2)
  40634c:	84 62 00 00 	l.lwz r3,0x0(r2)
  406350:	84 62 00 00 	l.lwz r3,0x0(r2)
  406354:	84 62 00 00 	l.lwz r3,0x0(r2)
  406358:	84 62 00 00 	l.lwz r3,0x0(r2)
  40635c:	84 62 00 00 	l.lwz r3,0x0(r2)
  406360:	84 62 00 00 	l.lwz r3,0x0(r2)
  406364:	84 62 00 00 	l.lwz r3,0x0(r2)
  406368:	84 62 00 00 	l.lwz r3,0x0(r2)
  40636c:	84 62 00 00 	l.lwz r3,0x0(r2)
  406370:	84 62 00 00 	l.lwz r3,0x0(r2)

            c = SPI(0);
  406374:	d4 0e 20 00 	l.sw 0x0(r14),r4
  406378:	85 8e 00 00 	l.lwz r12,0x0(r14)
            checksum[2] = c;
            c3 = (c & 0x55) << 1;
			SPIN();
  40637c:	84 62 00 00 	l.lwz r3,0x0(r2)
  406380:	84 62 00 00 	l.lwz r3,0x0(r2)
  406384:	84 62 00 00 	l.lwz r3,0x0(r2)
  406388:	84 62 00 00 	l.lwz r3,0x0(r2)
  40638c:	84 62 00 00 	l.lwz r3,0x0(r2)
  406390:	84 62 00 00 	l.lwz r3,0x0(r2)
  406394:	84 62 00 00 	l.lwz r3,0x0(r2)
  406398:	84 62 00 00 	l.lwz r3,0x0(r2)
  40639c:	84 62 00 00 	l.lwz r3,0x0(r2)
  4063a0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4063a4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4063a8:	84 62 00 00 	l.lwz r3,0x0(r2)
            c = SPI(0);
  4063ac:	d4 0e 20 00 	l.sw 0x0(r14),r4

			SPIN();

            c = SPI(0);
            checksum[0] = c;
            c1 = (c & 0x55) << 1;
  4063b0:	a6 2f 00 55 	l.andi r17,r15,0x55

            c = SPI(0);
            checksum[2] = c;
            c3 = (c & 0x55) << 1;
			SPIN();
            c = SPI(0);
  4063b4:	84 6e 00 00 	l.lwz r3,0x0(r14)
            checksum[3] = c;
            c4 = (c & 0x55) << 1;

			SPIN();
  4063b8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  4063bc:	84 a2 00 00 	l.lwz r5,0x0(r2)
  4063c0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  4063c4:	84 a2 00 00 	l.lwz r5,0x0(r2)
  4063c8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  4063cc:	84 a2 00 00 	l.lwz r5,0x0(r2)
  4063d0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  4063d4:	84 a2 00 00 	l.lwz r5,0x0(r2)
  4063d8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  4063dc:	84 a2 00 00 	l.lwz r5,0x0(r2)
  4063e0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  4063e4:	84 a2 00 00 	l.lwz r5,0x0(r2)

            c = SPI(0);
  4063e8:	d4 0e 20 00 	l.sw 0x0(r14),r4

			SPIN();

            c = SPI(0);
            checksum[0] = c;
            c1 = (c & 0x55) << 1;
  4063ec:	e2 31 88 00 	l.add r17,r17,r17
            checksum[3] = c;
            c4 = (c & 0x55) << 1;

			SPIN();

            c = SPI(0);
  4063f0:	85 6e 00 00 	l.lwz r11,0x0(r14)

            c = SPI(0);
            checksum[0] = c;
            c1 = (c & 0x55) << 1;
			SPIN();
            c = SPI(0);
  4063f4:	a5 ad 00 ff 	l.andi r13,r13,0xff
            checksum[3] = c;
            c4 = (c & 0x55) << 1;

			SPIN();

            c = SPI(0);
  4063f8:	a5 6b 00 ff 	l.andi r11,r11,0xff
            checksum[1] = c;
            c2 = (c & 0x55) << 1;

			SPIN();

            c = SPI(0);
  4063fc:	a5 8c 00 ff 	l.andi r12,r12,0xff

			SPIN();

            c = SPI(0);
            checksum[0] ^= c;
            c1 |= c & 0x55;
  406400:	a4 ab 00 55 	l.andi r5,r11,0x55

			SPIN();

            c = SPI(0);
            checksum[2] = c;
            c3 = (c & 0x55) << 1;
  406404:	a7 8c 00 55 	l.andi r28,r12,0x55

			SPIN();

            c = SPI(0);
            checksum[0] ^= c;
            c1 |= c & 0x55;
  406408:	e2 31 28 04 	l.or r17,r17,r5
			SPIN();
  40640c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  406410:	84 a2 00 00 	l.lwz r5,0x0(r2)
  406414:	84 a2 00 00 	l.lwz r5,0x0(r2)
  406418:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40641c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  406420:	84 a2 00 00 	l.lwz r5,0x0(r2)
  406424:	84 a2 00 00 	l.lwz r5,0x0(r2)
  406428:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40642c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  406430:	84 a2 00 00 	l.lwz r5,0x0(r2)
  406434:	84 a2 00 00 	l.lwz r5,0x0(r2)
  406438:	84 a2 00 00 	l.lwz r5,0x0(r2)
            c = SPI(0);
  40643c:	d4 0e 20 00 	l.sw 0x0(r14),r4
  406440:	85 0e 00 00 	l.lwz r8,0x0(r14)
            checksum[0] = c;
            c1 = (c & 0x55) << 1;
			SPIN();
            c = SPI(0);
            checksum[1] = c;
            c2 = (c & 0x55) << 1;
  406444:	a4 ad 00 55 	l.andi r5,r13,0x55

            c = SPI(0);
            checksum[0] ^= c;
            c1 |= c & 0x55;
			SPIN();
            c = SPI(0);
  406448:	a5 08 00 ff 	l.andi r8,r8,0xff
            checksum[0] = c;
            c1 = (c & 0x55) << 1;
			SPIN();
            c = SPI(0);
            checksum[1] = c;
            c2 = (c & 0x55) << 1;
  40644c:	e0 a5 28 00 	l.add r5,r5,r5
            checksum[0] ^= c;
            c1 |= c & 0x55;
			SPIN();
            c = SPI(0);
            checksum[1] ^= c;
            c2 |= c & 0x55;
  406450:	a4 c8 00 55 	l.andi r6,r8,0x55

			SPIN();

            c = SPI(0);
            checksum[2] = c;
            c3 = (c & 0x55) << 1;
  406454:	e3 9c e0 00 	l.add r28,r28,r28
            checksum[0] ^= c;
            c1 |= c & 0x55;
			SPIN();
            c = SPI(0);
            checksum[1] ^= c;
            c2 |= c & 0x55;
  406458:	e0 a5 30 04 	l.or r5,r5,r6

			SPIN();
  40645c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  406460:	84 c2 00 00 	l.lwz r6,0x0(r2)
  406464:	84 c2 00 00 	l.lwz r6,0x0(r2)
  406468:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40646c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  406470:	84 c2 00 00 	l.lwz r6,0x0(r2)
  406474:	84 c2 00 00 	l.lwz r6,0x0(r2)
  406478:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40647c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  406480:	84 c2 00 00 	l.lwz r6,0x0(r2)
  406484:	84 c2 00 00 	l.lwz r6,0x0(r2)
  406488:	84 c2 00 00 	l.lwz r6,0x0(r2)

            c = SPI(0);
  40648c:	d4 0e 20 00 	l.sw 0x0(r14),r4

            c = SPI(0);
            checksum[2] = c;
            c3 = (c & 0x55) << 1;
			SPIN();
            c = SPI(0);
  406490:	a4 63 00 ff 	l.andi r3,r3,0xff
            checksum[1] ^= c;
            c2 |= c & 0x55;

			SPIN();

            c = SPI(0);
  406494:	84 ee 00 00 	l.lwz r7,0x0(r14)
			SPIN();
            c = SPI(0);
            checksum[3] ^= c;
            c4 |= c & 0x55;

            if (c1 != 0xFF) // always 0xFF
  406498:	bc 11 00 ff 	l.sfeqi r17,0xff
            checksum[1] ^= c;
            c2 |= c & 0x55;

			SPIN();

            c = SPI(0);
  40649c:	a4 e7 00 ff 	l.andi r7,r7,0xff
            checksum[2] ^= c;
            c3 |= c & 0x55;
  4064a0:	a4 c7 00 55 	l.andi r6,r7,0x55
  4064a4:	e3 9c 30 04 	l.or r28,r28,r6
			SPIN();
  4064a8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4064ac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4064b0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4064b4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4064b8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4064bc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4064c0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4064c4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4064c8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4064cc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4064d0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4064d4:	84 c2 00 00 	l.lwz r6,0x0(r2)
            c = SPI(0);
  4064d8:	d4 0e 20 00 	l.sw 0x0(r14),r4
            checksum[2] = c;
            c3 = (c & 0x55) << 1;
			SPIN();
            c = SPI(0);
            checksum[3] = c;
            c4 = (c & 0x55) << 1;
  4064dc:	a4 83 00 55 	l.andi r4,r3,0x55

            c = SPI(0);
            checksum[2] ^= c;
            c3 |= c & 0x55;
			SPIN();
            c = SPI(0);
  4064e0:	84 ce 00 00 	l.lwz r6,0x0(r14)
            checksum[2] = c;
            c3 = (c & 0x55) << 1;
			SPIN();
            c = SPI(0);
            checksum[3] = c;
            c4 = (c & 0x55) << 1;
  4064e4:	e0 84 20 00 	l.add r4,r4,r4

            c = SPI(0);
            checksum[2] ^= c;
            c3 |= c & 0x55;
			SPIN();
            c = SPI(0);
  4064e8:	a4 c6 00 ff 	l.andi r6,r6,0xff
            checksum[3] ^= c;
            c4 |= c & 0x55;
  4064ec:	a6 66 00 55 	l.andi r19,r6,0x55
  4064f0:	e0 84 98 04 	l.or r4,r4,r19

            if (c1 != 0xFF) // always 0xFF
  4064f4:	0c 00 00 0d 	l.bnf 406528 <WriteTrack+0x3d8>
  4064f8:	9e 60 00 16 	l.addi r19,r0,0x16
                Error = 22;
            else if (c2 > 159) // Track number (0-159)
  4064fc:	bc a5 00 9f 	l.sfleui r5,0x9f
  406500:	0c 00 00 0a 	l.bnf 406528 <WriteTrack+0x3d8>
  406504:	9e 60 00 17 	l.addi r19,r0,0x17
                Error = 23;
            else if (c3 > 10) // Sector number (0-10)
  406508:	bc bc 00 0a 	l.sfleui r28,0xa
  40650c:	0c 00 00 07 	l.bnf 406528 <WriteTrack+0x3d8>
  406510:	9e 60 00 18 	l.addi r19,r0,0x18
                Error = 24;
            else if (c4 > 11 || c4 == 0) // Number of sectors to gap (1-11)
  406514:	9e 64 ff ff 	l.addi r19,r4,0xffffffff
  406518:	a6 73 00 ff 	l.andi r19,r19,0xff
  40651c:	bc b3 00 0a 	l.sfleui r19,0xa
  406520:	10 00 00 03 	l.bf 40652c <WriteTrack+0x3dc>
  406524:	9e 60 00 19 	l.addi r19,r0,0x19
                Error = 25;
  406528:	d8 12 98 00 	l.sb 0x0(r18),r19

            if (Error)
  40652c:	8e 72 00 00 	l.lbz r19,0x0(r18)
  406530:	bc 13 00 00 	l.sfeqi r19,0x0
  406534:	10 00 00 0b 	l.bf 406560 <WriteTrack+0x410>
  406538:	e1 6b 78 05 	l.xor r11,r11,r15
            {
                printf("\rWrong header: %u.%u.%u.%u\r", c1, c2, c3, c4);
  40653c:	18 60 00 41 	l.movhi r3,0x41
  406540:	d4 01 88 00 	l.sw 0x0(r1),r17
  406544:	a8 63 7b 65 	l.ori r3,r3,0x7b65
  406548:	d4 01 28 04 	l.sw 0x4(r1),r5
  40654c:	d4 01 e0 08 	l.sw 0x8(r1),r28
  406550:	07 ff f8 51 	l.jal 404694 <printf>
  406554:	d4 01 20 0c 	l.sw 0xc(r1),r4
  406558:	00 00 01 d6 	l.j 406cb0 <WriteTrack+0xb60>
  40655c:	15 00 00 00 	l.nop 0x0
            c = SPI(0);
            checksum[0] ^= c;
            c1 |= c & 0x55;
			SPIN();
            c = SPI(0);
            checksum[1] ^= c;
  406560:	e1 08 68 05 	l.xor r8,r8,r13
            c2 |= c & 0x55;

			SPIN();

            c = SPI(0);
            checksum[2] ^= c;
  406564:	e0 e7 60 05 	l.xor r7,r7,r12
            c3 |= c & 0x55;
			SPIN();
            c = SPI(0);
            checksum[3] ^= c;
  406568:	e0 c6 18 05 	l.xor r6,r6,r3
  40656c:	9c 80 00 08 	l.addi r4,r0,0x8
            *pTrack = c2;
            *pSector = c3;

            for (i = 0; i < 8; i++)
            {
				SPIN();
  406570:	84 62 00 00 	l.lwz r3,0x0(r2)
  406574:	84 62 00 00 	l.lwz r3,0x0(r2)
  406578:	84 62 00 00 	l.lwz r3,0x0(r2)
  40657c:	84 62 00 00 	l.lwz r3,0x0(r2)
  406580:	84 62 00 00 	l.lwz r3,0x0(r2)
  406584:	84 62 00 00 	l.lwz r3,0x0(r2)
  406588:	84 62 00 00 	l.lwz r3,0x0(r2)
  40658c:	84 62 00 00 	l.lwz r3,0x0(r2)
  406590:	84 62 00 00 	l.lwz r3,0x0(r2)
  406594:	84 62 00 00 	l.lwz r3,0x0(r2)
  406598:	84 62 00 00 	l.lwz r3,0x0(r2)
  40659c:	84 62 00 00 	l.lwz r3,0x0(r2)
                checksum[0] ^= SPI(0);
  4065a0:	9c 60 00 00 	l.addi r3,r0,0x0
                checksum[1] ^= SPI(0);
  4065a4:	9d a0 00 00 	l.addi r13,r0,0x0
            *pSector = c3;

            for (i = 0; i < 8; i++)
            {
				SPIN();
                checksum[0] ^= SPI(0);
  4065a8:	d4 0e 18 00 	l.sw 0x0(r14),r3
                checksum[1] ^= SPI(0);
				SPIN();
                checksum[2] ^= SPI(0);
                checksum[3] ^= SPI(0);
  4065ac:	9c 84 ff ff 	l.addi r4,r4,0xffffffff
            *pSector = c3;

            for (i = 0; i < 8; i++)
            {
				SPIN();
                checksum[0] ^= SPI(0);
  4065b0:	84 6e 00 00 	l.lwz r3,0x0(r14)
                checksum[1] ^= SPI(0);
  4065b4:	d4 0e 68 00 	l.sw 0x0(r14),r13
            *pSector = c3;

            for (i = 0; i < 8; i++)
            {
				SPIN();
                checksum[0] ^= SPI(0);
  4065b8:	e1 6b 18 05 	l.xor r11,r11,r3
                checksum[1] ^= SPI(0);
  4065bc:	84 6e 00 00 	l.lwz r3,0x0(r14)
				SPIN();
                checksum[2] ^= SPI(0);
                checksum[3] ^= SPI(0);
  4065c0:	a4 84 00 ff 	l.andi r4,r4,0xff

            for (i = 0; i < 8; i++)
            {
				SPIN();
                checksum[0] ^= SPI(0);
                checksum[1] ^= SPI(0);
  4065c4:	e1 08 18 05 	l.xor r8,r8,r3
				SPIN();
  4065c8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4065cc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4065d0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4065d4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4065d8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4065dc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4065e0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4065e4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4065e8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4065ec:	84 62 00 00 	l.lwz r3,0x0(r2)
  4065f0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4065f4:	84 62 00 00 	l.lwz r3,0x0(r2)
                checksum[2] ^= SPI(0);
  4065f8:	d4 0e 68 00 	l.sw 0x0(r14),r13
            *pSector = c3;

            for (i = 0; i < 8; i++)
            {
				SPIN();
                checksum[0] ^= SPI(0);
  4065fc:	a5 6b 00 ff 	l.andi r11,r11,0xff
                checksum[1] ^= SPI(0);
				SPIN();
                checksum[2] ^= SPI(0);
  406600:	84 6e 00 00 	l.lwz r3,0x0(r14)
                checksum[3] ^= SPI(0);
  406604:	d4 0e 68 00 	l.sw 0x0(r14),r13
            {
				SPIN();
                checksum[0] ^= SPI(0);
                checksum[1] ^= SPI(0);
				SPIN();
                checksum[2] ^= SPI(0);
  406608:	e0 e7 18 05 	l.xor r7,r7,r3
                checksum[3] ^= SPI(0);
  40660c:	84 6e 00 00 	l.lwz r3,0x0(r14)

            for (i = 0; i < 8; i++)
            {
				SPIN();
                checksum[0] ^= SPI(0);
                checksum[1] ^= SPI(0);
  406610:	a5 08 00 ff 	l.andi r8,r8,0xff
				SPIN();
                checksum[2] ^= SPI(0);
                checksum[3] ^= SPI(0);
  406614:	e0 c6 18 05 	l.xor r6,r6,r3
            {
				SPIN();
                checksum[0] ^= SPI(0);
                checksum[1] ^= SPI(0);
				SPIN();
                checksum[2] ^= SPI(0);
  406618:	a4 e7 00 ff 	l.andi r7,r7,0xff
                printf("T%uS%u\r", c2, c3);

            *pTrack = c2;
            *pSector = c3;

            for (i = 0; i < 8; i++)
  40661c:	e4 24 68 00 	l.sfne r4,r13
  406620:	13 ff ff d4 	l.bf 406570 <WriteTrack+0x420>
  406624:	a4 c6 00 ff 	l.andi r6,r6,0xff
            checksum[0] &= 0x55;
            checksum[1] &= 0x55;
            checksum[2] &= 0x55;
            checksum[3] &= 0x55;

			SPIN();
  406628:	84 62 00 00 	l.lwz r3,0x0(r2)
  40662c:	84 62 00 00 	l.lwz r3,0x0(r2)
  406630:	84 62 00 00 	l.lwz r3,0x0(r2)
  406634:	84 62 00 00 	l.lwz r3,0x0(r2)
  406638:	84 62 00 00 	l.lwz r3,0x0(r2)
  40663c:	84 62 00 00 	l.lwz r3,0x0(r2)
  406640:	84 62 00 00 	l.lwz r3,0x0(r2)
  406644:	84 62 00 00 	l.lwz r3,0x0(r2)
  406648:	84 62 00 00 	l.lwz r3,0x0(r2)
  40664c:	84 62 00 00 	l.lwz r3,0x0(r2)
  406650:	84 62 00 00 	l.lwz r3,0x0(r2)
  406654:	84 62 00 00 	l.lwz r3,0x0(r2)

            c1 = ((SPI(0)) & 0x55) << 1;
  406658:	d4 0e 20 00 	l.sw 0x0(r14),r4
            c2 |= (SPI(0)) & 0x55;
			SPIN();
            c3 |= (SPI(0)) & 0x55;
            c4 |= (SPI(0)) & 0x55;

            if (c1 != checksum[0] || c2 != checksum[1] || c3 != checksum[2] || c4 != checksum[3])
  40665c:	a5 6b 00 55 	l.andi r11,r11,0x55
            checksum[2] &= 0x55;
            checksum[3] &= 0x55;

			SPIN();

            c1 = ((SPI(0)) & 0x55) << 1;
  406660:	85 8e 00 00 	l.lwz r12,0x0(r14)
            c2 = ((SPI(0)) & 0x55) << 1;
  406664:	d4 0e 20 00 	l.sw 0x0(r14),r4
            checksum[2] &= 0x55;
            checksum[3] &= 0x55;

			SPIN();

            c1 = ((SPI(0)) & 0x55) << 1;
  406668:	a5 8c 00 55 	l.andi r12,r12,0x55
            c2 = ((SPI(0)) & 0x55) << 1;
  40666c:	86 ae 00 00 	l.lwz r21,0x0(r14)
			SPIN();
  406670:	84 62 00 00 	l.lwz r3,0x0(r2)
  406674:	84 62 00 00 	l.lwz r3,0x0(r2)
  406678:	84 62 00 00 	l.lwz r3,0x0(r2)
  40667c:	84 62 00 00 	l.lwz r3,0x0(r2)
  406680:	84 62 00 00 	l.lwz r3,0x0(r2)
  406684:	84 62 00 00 	l.lwz r3,0x0(r2)
  406688:	84 62 00 00 	l.lwz r3,0x0(r2)
  40668c:	84 62 00 00 	l.lwz r3,0x0(r2)
  406690:	84 62 00 00 	l.lwz r3,0x0(r2)
  406694:	84 62 00 00 	l.lwz r3,0x0(r2)
  406698:	84 62 00 00 	l.lwz r3,0x0(r2)
  40669c:	84 62 00 00 	l.lwz r3,0x0(r2)
            c3 = ((SPI(0)) & 0x55) << 1;
  4066a0:	d4 0e 20 00 	l.sw 0x0(r14),r4
            c4 = ((SPI(0)) & 0x55) << 1;

			SPIN();

            c1 |= (SPI(0)) & 0x55;
  4066a4:	e1 8c 60 00 	l.add r12,r12,r12
			SPIN();

            c1 = ((SPI(0)) & 0x55) << 1;
            c2 = ((SPI(0)) & 0x55) << 1;
			SPIN();
            c3 = ((SPI(0)) & 0x55) << 1;
  4066a8:	86 2e 00 00 	l.lwz r17,0x0(r14)
            c4 = ((SPI(0)) & 0x55) << 1;
  4066ac:	d4 0e 20 00 	l.sw 0x0(r14),r4
  4066b0:	84 6e 00 00 	l.lwz r3,0x0(r14)

			SPIN();
  4066b4:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4066b8:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4066bc:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4066c0:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4066c4:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4066c8:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4066cc:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4066d0:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4066d4:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4066d8:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4066dc:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4066e0:	85 a2 00 00 	l.lwz r13,0x0(r2)

            c1 |= (SPI(0)) & 0x55;
  4066e4:	d4 0e 20 00 	l.sw 0x0(r14),r4
  4066e8:	86 ee 00 00 	l.lwz r23,0x0(r14)
            c2 |= (SPI(0)) & 0x55;
  4066ec:	d4 0e 20 00 	l.sw 0x0(r14),r4
            c3 = ((SPI(0)) & 0x55) << 1;
            c4 = ((SPI(0)) & 0x55) << 1;

			SPIN();

            c1 |= (SPI(0)) & 0x55;
  4066f0:	a6 f7 00 55 	l.andi r23,r23,0x55
            c2 |= (SPI(0)) & 0x55;
  4066f4:	86 6e 00 00 	l.lwz r19,0x0(r14)
			SPIN();
  4066f8:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4066fc:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406700:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406704:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406708:	85 a2 00 00 	l.lwz r13,0x0(r2)
  40670c:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406710:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406714:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406718:	85 a2 00 00 	l.lwz r13,0x0(r2)
  40671c:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406720:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406724:	85 a2 00 00 	l.lwz r13,0x0(r2)
            c3 |= (SPI(0)) & 0x55;
  406728:	d4 0e 20 00 	l.sw 0x0(r14),r4
            c4 |= (SPI(0)) & 0x55;

            if (c1 != checksum[0] || c2 != checksum[1] || c3 != checksum[2] || c4 != checksum[3])
  40672c:	e1 8c b8 04 	l.or r12,r12,r23
			SPIN();

            c1 |= (SPI(0)) & 0x55;
            c2 |= (SPI(0)) & 0x55;
			SPIN();
            c3 |= (SPI(0)) & 0x55;
  406730:	85 ee 00 00 	l.lwz r15,0x0(r14)
            c4 |= (SPI(0)) & 0x55;
  406734:	d4 0e 20 00 	l.sw 0x0(r14),r4

            if (c1 != checksum[0] || c2 != checksum[1] || c3 != checksum[2] || c4 != checksum[3])
  406738:	e4 2c 58 00 	l.sfne r12,r11

            c1 |= (SPI(0)) & 0x55;
            c2 |= (SPI(0)) & 0x55;
			SPIN();
            c3 |= (SPI(0)) & 0x55;
            c4 |= (SPI(0)) & 0x55;
  40673c:	85 ae 00 00 	l.lwz r13,0x0(r14)

            if (c1 != checksum[0] || c2 != checksum[1] || c3 != checksum[2] || c4 != checksum[3])
  406740:	10 00 00 18 	l.bf 4067a0 <WriteTrack+0x650>
  406744:	a5 75 00 55 	l.andi r11,r21,0x55
            c4 = ((SPI(0)) & 0x55) << 1;

			SPIN();

            c1 |= (SPI(0)) & 0x55;
            c2 |= (SPI(0)) & 0x55;
  406748:	a4 93 00 55 	l.andi r4,r19,0x55
  40674c:	e1 6b 58 00 	l.add r11,r11,r11
			SPIN();
            c3 |= (SPI(0)) & 0x55;
            c4 |= (SPI(0)) & 0x55;

            if (c1 != checksum[0] || c2 != checksum[1] || c3 != checksum[2] || c4 != checksum[3])
  406750:	a5 08 00 55 	l.andi r8,r8,0x55
  406754:	e1 6b 20 04 	l.or r11,r11,r4
  406758:	e4 2b 40 00 	l.sfne r11,r8
  40675c:	10 00 00 11 	l.bf 4067a0 <WriteTrack+0x650>
  406760:	a4 91 00 55 	l.andi r4,r17,0x55
			SPIN();

            c1 |= (SPI(0)) & 0x55;
            c2 |= (SPI(0)) & 0x55;
			SPIN();
            c3 |= (SPI(0)) & 0x55;
  406764:	a5 0f 00 55 	l.andi r8,r15,0x55
  406768:	e0 84 20 00 	l.add r4,r4,r4
            c4 |= (SPI(0)) & 0x55;

            if (c1 != checksum[0] || c2 != checksum[1] || c3 != checksum[2] || c4 != checksum[3])
  40676c:	a4 e7 00 55 	l.andi r7,r7,0x55
  406770:	e0 84 40 04 	l.or r4,r4,r8
  406774:	e4 24 38 00 	l.sfne r4,r7
  406778:	10 00 01 3a 	l.bf 406c60 <WriteTrack+0xb10>
  40677c:	9e 60 00 1a 	l.addi r19,r0,0x1a

            c1 = ((SPI(0)) & 0x55) << 1;
            c2 = ((SPI(0)) & 0x55) << 1;
			SPIN();
            c3 = ((SPI(0)) & 0x55) << 1;
            c4 = ((SPI(0)) & 0x55) << 1;
  406780:	a4 63 00 55 	l.andi r3,r3,0x55

            c1 |= (SPI(0)) & 0x55;
            c2 |= (SPI(0)) & 0x55;
			SPIN();
            c3 |= (SPI(0)) & 0x55;
            c4 |= (SPI(0)) & 0x55;
  406784:	a4 8d 00 55 	l.andi r4,r13,0x55
  406788:	e0 63 18 00 	l.add r3,r3,r3

            if (c1 != checksum[0] || c2 != checksum[1] || c3 != checksum[2] || c4 != checksum[3])
  40678c:	a4 c6 00 55 	l.andi r6,r6,0x55
  406790:	e0 63 20 04 	l.or r3,r3,r4
  406794:	e4 03 30 00 	l.sfeq r3,r6
  406798:	10 00 00 04 	l.bf 4067a8 <WriteTrack+0x658>
  40679c:	15 00 00 00 	l.nop 0x0
            {
                Error = 26;
  4067a0:	00 00 01 30 	l.j 406c60 <WriteTrack+0xb10>
  4067a4:	9e 60 00 1a 	l.addi r19,r0,0x1a
                break;
            }

            DisableFpga();
  4067a8:	18 60 00 80 	l.movhi r3,0x80
  4067ac:	a8 63 00 20 	l.ori r3,r3,0x20
  4067b0:	d4 03 c0 00 	l.sw 0x0(r3),r24

    while (FindSync(drive))
    {
        if (GetHeader(&Track, &Sector))
        {
            if (Track == drive->track)
  4067b4:	8c 74 02 a1 	l.lbz r3,0x2a1(r20)
  4067b8:	e4 23 28 00 	l.sfne r3,r5
  4067bc:	10 00 01 4c 	l.bf 406cec <WriteTrack+0xb9c>
  4067c0:	9d a0 00 1b 	l.addi r13,r0,0x1b
            {
                while (sector != Sector)
  4067c4:	00 00 00 1f 	l.j 406840 <WriteTrack+0x6f0>
  4067c8:	e4 3a e0 00 	l.sfne r26,r28
            }

            DisableFpga();
            return 1;
        }
        else if ((c3 & 0x80) == 0) // not enough data for header and write dma is not active
  4067cc:	bd 83 00 00 	l.sfltsi r3,0x0
  4067d0:	10 00 00 04 	l.bf 4067e0 <WriteTrack+0x690>
  4067d4:	15 00 00 00 	l.nop 0x0
        {
            Error = 20;
  4067d8:	00 00 01 31 	l.j 406c9c <WriteTrack+0xb4c>
  4067dc:	9c 80 00 14 	l.addi r4,r0,0x14
            break;
        }

        DisableFpga();
  4067e0:	d4 16 c0 00 	l.sw 0x0(r22),r24
    unsigned char checksum[4];

    Error = 0;
    while (1)
    {
        EnableFpga();
  4067e4:	03 ff fe 83 	l.j 4061f0 <WriteTrack+0xa0>
  4067e8:	9c 80 00 22 	l.addi r4,r0,0x22
        {
            if (Track == drive->track)
            {
                while (sector != Sector)
                {
                    if (sector < Sector)
  4067ec:	10 00 00 08 	l.bf 40680c <WriteTrack+0x6bc>
  4067f0:	18 60 00 41 	l.movhi r3,0x41
                    {
                        FileNextSector(&file);
                        sector++;
  4067f4:	9f 5a 00 01 	l.addi r26,r26,0x1
            {
                while (sector != Sector)
                {
                    if (sector < Sector)
                    {
                        FileNextSector(&file);
  4067f8:	a8 63 cb 80 	l.ori r3,r3,0xcb80
  4067fc:	07 ff fb 53 	l.jal 405548 <FileNextSector>
  406800:	a7 5a 00 ff 	l.andi r26,r26,0xff
    {
        if (GetHeader(&Track, &Sector))
        {
            if (Track == drive->track)
            {
                while (sector != Sector)
  406804:	00 00 00 0f 	l.j 406840 <WriteTrack+0x6f0>
  406808:	e4 3a e0 00 	l.sfne r26,r28
                        FileNextSector(&file);
                        sector++;
                    }
                    else
                    {
                        file.cluster = drive->cache[drive->track];
  40680c:	8c 74 02 a1 	l.lbz r3,0x2a1(r20)
  406810:	9c 83 00 01 	l.addi r4,r3,0x1
                        file.sector = drive->track * 11;
  406814:	e0 a3 18 00 	l.add r5,r3,r3
                        FileNextSector(&file);
                        sector++;
                    }
                    else
                    {
                        file.cluster = drive->cache[drive->track];
  406818:	b8 84 00 02 	l.slli r4,r4,0x2
                        file.sector = drive->track * 11;
                        sector = 0;
  40681c:	9f 40 00 00 	l.addi r26,r0,0x0
                        FileNextSector(&file);
                        sector++;
                    }
                    else
                    {
                        file.cluster = drive->cache[drive->track];
  406820:	e0 94 20 00 	l.add r4,r20,r4
  406824:	84 84 00 00 	l.lwz r4,0x0(r4)
  406828:	d4 1e 20 1c 	l.sw 0x1c(r30),r4
                        file.sector = drive->track * 11;
  40682c:	b8 83 00 03 	l.slli r4,r3,0x3
  406830:	e0 85 20 00 	l.add r4,r5,r4
  406834:	e0 64 18 00 	l.add r3,r4,r3
  406838:	d4 1e 18 14 	l.sw 0x14(r30),r3
    {
        if (GetHeader(&Track, &Sector))
        {
            if (Track == drive->track)
            {
                while (sector != Sector)
  40683c:	e4 3a e0 00 	l.sfne r26,r28
  406840:	13 ff ff eb 	l.bf 4067ec <WriteTrack+0x69c>
  406844:	e4 7a e0 00 	l.sfgeu r26,r28
    unsigned char i;
    unsigned char *p;
    unsigned short n;
    unsigned char checksum[4];

    Error = 0;
  406848:	9d 00 00 00 	l.addi r8,r0,0x0
  40684c:	d8 12 40 00 	l.sb 0x0(r18),r8
    while (1)
    {
        EnableFpga();
  406850:	9d a0 00 22 	l.addi r13,r0,0x22
        c1 = SPI(0); // write request signal
  406854:	9e 60 00 00 	l.addi r19,r0,0x0
    unsigned char checksum[4];

    Error = 0;
    while (1)
    {
        EnableFpga();
  406858:	d4 16 68 00 	l.sw 0x0(r22),r13
        c1 = SPI(0); // write request signal
  40685c:	d4 0e 98 00 	l.sw 0x0(r14),r19
  406860:	84 6e 00 00 	l.lwz r3,0x0(r14)
        c2 = SPI(0); // track number (cylinder & head)
  406864:	d4 0e 98 00 	l.sw 0x0(r14),r19
        if (!(c1 & CMD_WRTRK))
  406868:	a4 63 00 02 	l.andi r3,r3,0x2
    Error = 0;
    while (1)
    {
        EnableFpga();
        c1 = SPI(0); // write request signal
        c2 = SPI(0); // track number (cylinder & head)
  40686c:	84 8e 00 00 	l.lwz r4,0x0(r14)
        if (!(c1 & CMD_WRTRK))
  406870:	e4 03 98 00 	l.sfeq r3,r19
  406874:	10 00 01 0f 	l.bf 406cb0 <WriteTrack+0xb60>
  406878:	15 00 00 00 	l.nop 0x0
            break;
        SPI(0); // disk sync high byte
  40687c:	d4 0e 98 00 	l.sw 0x0(r14),r19
  406880:	84 6e 00 00 	l.lwz r3,0x0(r14)
        SPI(0); // disk sync low byte
  406884:	d4 0e 98 00 	l.sw 0x0(r14),r19
  406888:	84 6e 00 00 	l.lwz r3,0x0(r14)
        c3 = SPI(0); // msb of mfm words to transfer
  40688c:	d4 0e 98 00 	l.sw 0x0(r14),r19
  406890:	84 6e 00 00 	l.lwz r3,0x0(r14)
        c4 = SPI(0); // lsb of mfm words to transfer
  406894:	d4 0e 98 00 	l.sw 0x0(r14),r19
        c2 = SPI(0); // track number (cylinder & head)
        if (!(c1 & CMD_WRTRK))
            break;
        SPI(0); // disk sync high byte
        SPI(0); // disk sync low byte
        c3 = SPI(0); // msb of mfm words to transfer
  406898:	a4 63 00 ff 	l.andi r3,r3,0xff
        c4 = SPI(0); // lsb of mfm words to transfer
  40689c:	84 8e 00 00 	l.lwz r4,0x0(r14)

        n = ((c3 & 0x3F) << 8) + c4;
  4068a0:	a4 a3 00 3f 	l.andi r5,r3,0x3f
  4068a4:	a4 84 00 ff 	l.andi r4,r4,0xff
  4068a8:	b8 a5 00 08 	l.slli r5,r5,0x8

        if (n >= 0x204)
  4068ac:	e0 85 20 00 	l.add r4,r5,r4
  4068b0:	bc a4 02 03 	l.sfleui r4,0x203
  4068b4:	10 00 00 f7 	l.bf 406c90 <WriteTrack+0xb40>
  4068b8:	b8 63 00 18 	l.slli r3,r3,0x18
        {
			SPIN();
  4068bc:	84 70 00 00 	l.lwz r3,0x0(r16)
  4068c0:	84 70 00 00 	l.lwz r3,0x0(r16)
  4068c4:	84 70 00 00 	l.lwz r3,0x0(r16)
  4068c8:	84 70 00 00 	l.lwz r3,0x0(r16)
  4068cc:	84 70 00 00 	l.lwz r3,0x0(r16)
  4068d0:	84 70 00 00 	l.lwz r3,0x0(r16)
  4068d4:	84 70 00 00 	l.lwz r3,0x0(r16)
  4068d8:	84 70 00 00 	l.lwz r3,0x0(r16)
  4068dc:	84 70 00 00 	l.lwz r3,0x0(r16)
  4068e0:	84 70 00 00 	l.lwz r3,0x0(r16)
  4068e4:	84 70 00 00 	l.lwz r3,0x0(r16)
  4068e8:	84 70 00 00 	l.lwz r3,0x0(r16)

            c1 = ((SPI(0)) & 0x55) << 1;
  4068ec:	d4 0e 98 00 	l.sw 0x0(r14),r19
  4068f0:	84 6e 00 00 	l.lwz r3,0x0(r14)
            c2 = ((SPI(0)) & 0x55) << 1;
  4068f4:	d4 0e 98 00 	l.sw 0x0(r14),r19

        if (n >= 0x204)
        {
			SPIN();

            c1 = ((SPI(0)) & 0x55) << 1;
  4068f8:	a4 63 00 55 	l.andi r3,r3,0x55
            c2 = ((SPI(0)) & 0x55) << 1;
  4068fc:	87 2e 00 00 	l.lwz r25,0x0(r14)
			SPIN();
  406900:	84 90 00 00 	l.lwz r4,0x0(r16)
  406904:	84 90 00 00 	l.lwz r4,0x0(r16)
  406908:	84 90 00 00 	l.lwz r4,0x0(r16)
  40690c:	84 90 00 00 	l.lwz r4,0x0(r16)
  406910:	84 90 00 00 	l.lwz r4,0x0(r16)
  406914:	84 90 00 00 	l.lwz r4,0x0(r16)
  406918:	84 90 00 00 	l.lwz r4,0x0(r16)
  40691c:	84 90 00 00 	l.lwz r4,0x0(r16)
  406920:	84 90 00 00 	l.lwz r4,0x0(r16)
  406924:	84 90 00 00 	l.lwz r4,0x0(r16)
  406928:	84 90 00 00 	l.lwz r4,0x0(r16)
  40692c:	84 90 00 00 	l.lwz r4,0x0(r16)
            c3 = ((SPI(0)) & 0x55) << 1;
  406930:	d4 0e 98 00 	l.sw 0x0(r14),r19
            c4 = ((SPI(0)) & 0x55) << 1;

			SPIN();

            c1 |= (SPI(0)) & 0x55;
  406934:	e0 63 18 00 	l.add r3,r3,r3
			SPIN();

            c1 = ((SPI(0)) & 0x55) << 1;
            c2 = ((SPI(0)) & 0x55) << 1;
			SPIN();
            c3 = ((SPI(0)) & 0x55) << 1;
  406938:	86 ae 00 00 	l.lwz r21,0x0(r14)
            c4 = ((SPI(0)) & 0x55) << 1;
  40693c:	d4 0e 98 00 	l.sw 0x0(r14),r19
  406940:	86 2e 00 00 	l.lwz r17,0x0(r14)

			SPIN();
  406944:	84 90 00 00 	l.lwz r4,0x0(r16)
  406948:	84 90 00 00 	l.lwz r4,0x0(r16)
  40694c:	84 90 00 00 	l.lwz r4,0x0(r16)
  406950:	84 90 00 00 	l.lwz r4,0x0(r16)
  406954:	84 90 00 00 	l.lwz r4,0x0(r16)
  406958:	84 90 00 00 	l.lwz r4,0x0(r16)
  40695c:	84 90 00 00 	l.lwz r4,0x0(r16)
  406960:	84 90 00 00 	l.lwz r4,0x0(r16)
  406964:	84 90 00 00 	l.lwz r4,0x0(r16)
  406968:	84 90 00 00 	l.lwz r4,0x0(r16)
  40696c:	84 90 00 00 	l.lwz r4,0x0(r16)
  406970:	84 90 00 00 	l.lwz r4,0x0(r16)

            c1 |= (SPI(0)) & 0x55;
  406974:	d4 0e 98 00 	l.sw 0x0(r14),r19
  406978:	87 6e 00 00 	l.lwz r27,0x0(r14)
            c2 |= (SPI(0)) & 0x55;
  40697c:	d4 0e 98 00 	l.sw 0x0(r14),r19
            c3 = ((SPI(0)) & 0x55) << 1;
            c4 = ((SPI(0)) & 0x55) << 1;

			SPIN();

            c1 |= (SPI(0)) & 0x55;
  406980:	a7 7b 00 55 	l.andi r27,r27,0x55
            c2 |= (SPI(0)) & 0x55;
  406984:	86 ee 00 00 	l.lwz r23,0x0(r14)
            c3 = ((SPI(0)) & 0x55) << 1;
            c4 = ((SPI(0)) & 0x55) << 1;

			SPIN();

            c1 |= (SPI(0)) & 0x55;
  406988:	e3 63 d8 04 	l.or r27,r3,r27
            c2 |= (SPI(0)) & 0x55;
			SPIN();
  40698c:	84 70 00 00 	l.lwz r3,0x0(r16)
  406990:	84 70 00 00 	l.lwz r3,0x0(r16)
  406994:	84 70 00 00 	l.lwz r3,0x0(r16)
  406998:	84 70 00 00 	l.lwz r3,0x0(r16)
  40699c:	84 70 00 00 	l.lwz r3,0x0(r16)
  4069a0:	84 70 00 00 	l.lwz r3,0x0(r16)
  4069a4:	84 70 00 00 	l.lwz r3,0x0(r16)
  4069a8:	84 70 00 00 	l.lwz r3,0x0(r16)
  4069ac:	84 70 00 00 	l.lwz r3,0x0(r16)
  4069b0:	84 70 00 00 	l.lwz r3,0x0(r16)
  4069b4:	84 70 00 00 	l.lwz r3,0x0(r16)
  4069b8:	84 70 00 00 	l.lwz r3,0x0(r16)
            c3 |= (SPI(0)) & 0x55;
            c4 |= (SPI(0)) & 0x55;
  4069bc:	9c 60 00 00 	l.addi r3,r0,0x0
			SPIN();

            c1 |= (SPI(0)) & 0x55;
            c2 |= (SPI(0)) & 0x55;
			SPIN();
            c3 |= (SPI(0)) & 0x55;
  4069c0:	d4 0e 98 00 	l.sw 0x0(r14),r19
            checksum[2] = 0;
            checksum[3] = 0;

            // odd bits of data field
            i = 128;
            p = sector_buffer;
  4069c4:	18 80 00 41 	l.movhi r4,0x41
			SPIN();

            c1 |= (SPI(0)) & 0x55;
            c2 |= (SPI(0)) & 0x55;
			SPIN();
            c3 |= (SPI(0)) & 0x55;
  4069c8:	86 6e 00 00 	l.lwz r19,0x0(r14)
            c4 |= (SPI(0)) & 0x55;
  4069cc:	d4 0e 18 00 	l.sw 0x0(r14),r3

            checksum[0] = 0;
            checksum[1] = 0;
            checksum[2] = 0;
  4069d0:	a8 a3 00 00 	l.ori r5,r3,0x0

            c1 |= (SPI(0)) & 0x55;
            c2 |= (SPI(0)) & 0x55;
			SPIN();
            c3 |= (SPI(0)) & 0x55;
            c4 |= (SPI(0)) & 0x55;
  4069d4:	85 ee 00 00 	l.lwz r15,0x0(r14)

            checksum[0] = 0;
            checksum[1] = 0;
  4069d8:	a8 c3 00 00 	l.ori r6,r3,0x0
            c2 |= (SPI(0)) & 0x55;
			SPIN();
            c3 |= (SPI(0)) & 0x55;
            c4 |= (SPI(0)) & 0x55;

            checksum[0] = 0;
  4069dc:	a8 e3 00 00 	l.ori r7,r3,0x0
            checksum[2] = 0;
            checksum[3] = 0;

            // odd bits of data field
            i = 128;
            p = sector_buffer;
  4069e0:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
            do
            {
				SPIN();
  4069e4:	85 02 00 00 	l.lwz r8,0x0(r2)
  4069e8:	85 02 00 00 	l.lwz r8,0x0(r2)
  4069ec:	85 02 00 00 	l.lwz r8,0x0(r2)
  4069f0:	85 02 00 00 	l.lwz r8,0x0(r2)
  4069f4:	85 02 00 00 	l.lwz r8,0x0(r2)
  4069f8:	85 02 00 00 	l.lwz r8,0x0(r2)
  4069fc:	85 02 00 00 	l.lwz r8,0x0(r2)
  406a00:	85 02 00 00 	l.lwz r8,0x0(r2)
  406a04:	85 02 00 00 	l.lwz r8,0x0(r2)
  406a08:	85 02 00 00 	l.lwz r8,0x0(r2)
  406a0c:	85 02 00 00 	l.lwz r8,0x0(r2)
  406a10:	85 02 00 00 	l.lwz r8,0x0(r2)
                c = SPI(0);
  406a14:	9d 00 00 00 	l.addi r8,r0,0x0
                checksum[0] ^= c;
                *p++ = (c & 0x55) << 1;
                c = SPI(0);
  406a18:	9d a0 00 00 	l.addi r13,r0,0x0
            i = 128;
            p = sector_buffer;
            do
            {
				SPIN();
                c = SPI(0);
  406a1c:	d4 0e 40 00 	l.sw 0x0(r14),r8
  406a20:	85 0e 00 00 	l.lwz r8,0x0(r14)
  406a24:	a5 08 00 ff 	l.andi r8,r8,0xff
                checksum[0] ^= c;
  406a28:	e0 e7 40 05 	l.xor r7,r7,r8
                *p++ = (c & 0x55) << 1;
  406a2c:	a5 08 00 55 	l.andi r8,r8,0x55
  406a30:	e1 08 40 00 	l.add r8,r8,r8
  406a34:	d8 04 40 00 	l.sb 0x0(r4),r8
                c = SPI(0);
  406a38:	d4 0e 68 00 	l.sw 0x0(r14),r13
  406a3c:	85 0e 00 00 	l.lwz r8,0x0(r14)
  406a40:	a5 08 00 ff 	l.andi r8,r8,0xff
                checksum[1] ^= c;
  406a44:	e0 c6 40 05 	l.xor r6,r6,r8
                *p++ = (c & 0x55) << 1;
  406a48:	a5 08 00 55 	l.andi r8,r8,0x55
  406a4c:	e1 08 40 00 	l.add r8,r8,r8
  406a50:	d8 04 40 01 	l.sb 0x1(r4),r8
				SPIN();
  406a54:	85 02 00 00 	l.lwz r8,0x0(r2)
  406a58:	85 02 00 00 	l.lwz r8,0x0(r2)
  406a5c:	85 02 00 00 	l.lwz r8,0x0(r2)
  406a60:	85 02 00 00 	l.lwz r8,0x0(r2)
  406a64:	85 02 00 00 	l.lwz r8,0x0(r2)
  406a68:	85 02 00 00 	l.lwz r8,0x0(r2)
  406a6c:	85 02 00 00 	l.lwz r8,0x0(r2)
  406a70:	85 02 00 00 	l.lwz r8,0x0(r2)
  406a74:	85 02 00 00 	l.lwz r8,0x0(r2)
  406a78:	85 02 00 00 	l.lwz r8,0x0(r2)
  406a7c:	85 02 00 00 	l.lwz r8,0x0(r2)
  406a80:	85 02 00 00 	l.lwz r8,0x0(r2)
                c = SPI(0);
  406a84:	d4 0e 68 00 	l.sw 0x0(r14),r13
  406a88:	85 0e 00 00 	l.lwz r8,0x0(r14)
  406a8c:	a5 08 00 ff 	l.andi r8,r8,0xff
                checksum[2] ^= c;
  406a90:	e0 a5 40 05 	l.xor r5,r5,r8
                *p++ = (c & 0x55) << 1;
  406a94:	a5 08 00 55 	l.andi r8,r8,0x55
  406a98:	e1 08 40 00 	l.add r8,r8,r8
  406a9c:	d8 04 40 02 	l.sb 0x2(r4),r8
                c = SPI(0);
  406aa0:	d4 0e 68 00 	l.sw 0x0(r14),r13
  406aa4:	85 0e 00 00 	l.lwz r8,0x0(r14)
  406aa8:	a5 08 00 ff 	l.andi r8,r8,0xff
                checksum[3] ^= c;
  406aac:	e0 63 40 05 	l.xor r3,r3,r8
                *p++ = (c & 0x55) << 1;
  406ab0:	a5 08 00 55 	l.andi r8,r8,0x55
  406ab4:	e1 08 40 00 	l.add r8,r8,r8
  406ab8:	d8 04 40 03 	l.sb 0x3(r4),r8
            }
            while (--i);
  406abc:	19 00 00 41 	l.movhi r8,0x41

  DEBUG_FUNC_OUT(DEBUG_F_FDD | DEBUG_L2);
}


void WriteTrack(adfTYPE *drive)
  406ac0:	9c 84 00 04 	l.addi r4,r4,0x4
                *p++ = (c & 0x55) << 1;
                c = SPI(0);
                checksum[3] ^= c;
                *p++ = (c & 0x55) << 1;
            }
            while (--i);
  406ac4:	a9 08 a6 dc 	l.ori r8,r8,0xa6dc
  406ac8:	e4 24 40 00 	l.sfne r4,r8
  406acc:	13 ff ff c6 	l.bf 4069e4 <WriteTrack+0x894>
  406ad0:	19 00 00 41 	l.movhi r8,0x41
  406ad4:	9d 84 fe 01 	l.addi r12,r4,0xfffffe01
  406ad8:	9d 64 fe 02 	l.addi r11,r4,0xfffffe02
  406adc:	a9 08 a4 dc 	l.ori r8,r8,0xa4dc
  406ae0:	9c 84 fe 03 	l.addi r4,r4,0xfffffe03
            // even bits of data field
            i = 128;
            p = sector_buffer;
            do
            {
				SPIN();
  406ae4:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406ae8:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406aec:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406af0:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406af4:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406af8:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406afc:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406b00:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406b04:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406b08:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406b0c:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406b10:	85 a2 00 00 	l.lwz r13,0x0(r2)
                c = SPI(0);
  406b14:	9d a0 00 00 	l.addi r13,r0,0x0
  406b18:	d4 0e 68 00 	l.sw 0x0(r14),r13
  406b1c:	85 ae 00 00 	l.lwz r13,0x0(r14)
                checksum[0] ^= c;
                *p++ |= c & 0x55;
  406b20:	8f 88 00 00 	l.lbz r28,0x0(r8)
            i = 128;
            p = sector_buffer;
            do
            {
				SPIN();
                c = SPI(0);
  406b24:	a5 ad 00 ff 	l.andi r13,r13,0xff
                checksum[0] ^= c;
  406b28:	e0 e7 68 05 	l.xor r7,r7,r13
                *p++ |= c & 0x55;
  406b2c:	a5 ad 00 55 	l.andi r13,r13,0x55
  406b30:	e1 ad e0 04 	l.or r13,r13,r28
  406b34:	d8 08 68 00 	l.sb 0x0(r8),r13
                c = SPI(0);
  406b38:	9d a0 00 00 	l.addi r13,r0,0x0

  DEBUG_FUNC_OUT(DEBUG_F_FDD | DEBUG_L2);
}


void WriteTrack(adfTYPE *drive)
  406b3c:	9d 08 00 04 	l.addi r8,r8,0x4
            {
				SPIN();
                c = SPI(0);
                checksum[0] ^= c;
                *p++ |= c & 0x55;
                c = SPI(0);
  406b40:	d4 0e 68 00 	l.sw 0x0(r14),r13
  406b44:	85 ae 00 00 	l.lwz r13,0x0(r14)
                checksum[1] ^= c;
                *p++ |= c & 0x55;
  406b48:	8f 8c 00 00 	l.lbz r28,0x0(r12)
            {
				SPIN();
                c = SPI(0);
                checksum[0] ^= c;
                *p++ |= c & 0x55;
                c = SPI(0);
  406b4c:	a5 ad 00 ff 	l.andi r13,r13,0xff
                checksum[1] ^= c;
  406b50:	e0 c6 68 05 	l.xor r6,r6,r13
                *p++ |= c & 0x55;
  406b54:	a5 ad 00 55 	l.andi r13,r13,0x55
  406b58:	e1 ad e0 04 	l.or r13,r13,r28
  406b5c:	d8 0c 68 00 	l.sb 0x0(r12),r13

  DEBUG_FUNC_OUT(DEBUG_F_FDD | DEBUG_L2);
}


void WriteTrack(adfTYPE *drive)
  406b60:	9d 8c 00 04 	l.addi r12,r12,0x4
                checksum[0] ^= c;
                *p++ |= c & 0x55;
                c = SPI(0);
                checksum[1] ^= c;
                *p++ |= c & 0x55;
				SPIN();
  406b64:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406b68:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406b6c:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406b70:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406b74:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406b78:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406b7c:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406b80:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406b84:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406b88:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406b8c:	85 a2 00 00 	l.lwz r13,0x0(r2)
  406b90:	85 a2 00 00 	l.lwz r13,0x0(r2)
                c = SPI(0);
  406b94:	9d a0 00 00 	l.addi r13,r0,0x0
  406b98:	d4 0e 68 00 	l.sw 0x0(r14),r13
  406b9c:	85 ae 00 00 	l.lwz r13,0x0(r14)
                checksum[2] ^= c;
                *p++ |= c & 0x55;
  406ba0:	8f 8b 00 00 	l.lbz r28,0x0(r11)
                *p++ |= c & 0x55;
                c = SPI(0);
                checksum[1] ^= c;
                *p++ |= c & 0x55;
				SPIN();
                c = SPI(0);
  406ba4:	a5 ad 00 ff 	l.andi r13,r13,0xff
                checksum[2] ^= c;
  406ba8:	e0 a5 68 05 	l.xor r5,r5,r13
                *p++ |= c & 0x55;
  406bac:	a5 ad 00 55 	l.andi r13,r13,0x55
  406bb0:	e1 ad e0 04 	l.or r13,r13,r28
  406bb4:	d8 0b 68 00 	l.sb 0x0(r11),r13
                c = SPI(0);
  406bb8:	9d a0 00 00 	l.addi r13,r0,0x0

  DEBUG_FUNC_OUT(DEBUG_F_FDD | DEBUG_L2);
}


void WriteTrack(adfTYPE *drive)
  406bbc:	9d 6b 00 04 	l.addi r11,r11,0x4
                *p++ |= c & 0x55;
				SPIN();
                c = SPI(0);
                checksum[2] ^= c;
                *p++ |= c & 0x55;
                c = SPI(0);
  406bc0:	d4 0e 68 00 	l.sw 0x0(r14),r13
  406bc4:	85 ae 00 00 	l.lwz r13,0x0(r14)
                checksum[3] ^= c;
                *p++ |= c & 0x55;
  406bc8:	8f 84 00 00 	l.lbz r28,0x0(r4)
                *p++ |= c & 0x55;
				SPIN();
                c = SPI(0);
                checksum[2] ^= c;
                *p++ |= c & 0x55;
                c = SPI(0);
  406bcc:	a5 ad 00 ff 	l.andi r13,r13,0xff
                checksum[3] ^= c;
  406bd0:	e0 63 68 05 	l.xor r3,r3,r13
                *p++ |= c & 0x55;
  406bd4:	a5 ad 00 55 	l.andi r13,r13,0x55
  406bd8:	e1 ad e0 04 	l.or r13,r13,r28
  406bdc:	d8 04 68 00 	l.sb 0x0(r4),r13
            }
            while (--i);
  406be0:	19 a0 00 41 	l.movhi r13,0x41
  406be4:	a9 ad a6 dc 	l.ori r13,r13,0xa6dc
  406be8:	e4 28 68 00 	l.sfne r8,r13
  406bec:	13 ff ff be 	l.bf 406ae4 <WriteTrack+0x994>
  406bf0:	9c 84 00 04 	l.addi r4,r4,0x4
            checksum[0] &= 0x55;
            checksum[1] &= 0x55;
            checksum[2] &= 0x55;
            checksum[3] &= 0x55;

            if (c1 != checksum[0] || c2 != checksum[1] || c3 != checksum[2] || c4 != checksum[3])
  406bf4:	a4 e7 00 55 	l.andi r7,r7,0x55
  406bf8:	e4 3b 38 00 	l.sfne r27,r7
  406bfc:	10 00 00 18 	l.bf 406c5c <WriteTrack+0xb0c>
  406c00:	a4 f9 00 55 	l.andi r7,r25,0x55
            c4 = ((SPI(0)) & 0x55) << 1;

			SPIN();

            c1 |= (SPI(0)) & 0x55;
            c2 |= (SPI(0)) & 0x55;
  406c04:	a4 97 00 55 	l.andi r4,r23,0x55
  406c08:	e0 e7 38 00 	l.add r7,r7,r7
            checksum[0] &= 0x55;
            checksum[1] &= 0x55;
            checksum[2] &= 0x55;
            checksum[3] &= 0x55;

            if (c1 != checksum[0] || c2 != checksum[1] || c3 != checksum[2] || c4 != checksum[3])
  406c0c:	a4 c6 00 55 	l.andi r6,r6,0x55
  406c10:	e0 e7 20 04 	l.or r7,r7,r4
  406c14:	e4 27 30 00 	l.sfne r7,r6
  406c18:	10 00 00 11 	l.bf 406c5c <WriteTrack+0xb0c>
  406c1c:	a4 d5 00 55 	l.andi r6,r21,0x55
			SPIN();

            c1 |= (SPI(0)) & 0x55;
            c2 |= (SPI(0)) & 0x55;
			SPIN();
            c3 |= (SPI(0)) & 0x55;
  406c20:	a4 93 00 55 	l.andi r4,r19,0x55
  406c24:	e0 c6 30 00 	l.add r6,r6,r6
            checksum[0] &= 0x55;
            checksum[1] &= 0x55;
            checksum[2] &= 0x55;
            checksum[3] &= 0x55;

            if (c1 != checksum[0] || c2 != checksum[1] || c3 != checksum[2] || c4 != checksum[3])
  406c28:	a4 a5 00 55 	l.andi r5,r5,0x55
  406c2c:	e0 c6 20 04 	l.or r6,r6,r4
  406c30:	e4 26 28 00 	l.sfne r6,r5
  406c34:	10 00 00 0b 	l.bf 406c60 <WriteTrack+0xb10>
  406c38:	9e 60 00 1d 	l.addi r19,r0,0x1d

            c1 = ((SPI(0)) & 0x55) << 1;
            c2 = ((SPI(0)) & 0x55) << 1;
			SPIN();
            c3 = ((SPI(0)) & 0x55) << 1;
            c4 = ((SPI(0)) & 0x55) << 1;
  406c3c:	a4 91 00 55 	l.andi r4,r17,0x55

            c1 |= (SPI(0)) & 0x55;
            c2 |= (SPI(0)) & 0x55;
			SPIN();
            c3 |= (SPI(0)) & 0x55;
            c4 |= (SPI(0)) & 0x55;
  406c40:	a4 af 00 55 	l.andi r5,r15,0x55
  406c44:	e0 84 20 00 	l.add r4,r4,r4
            checksum[0] &= 0x55;
            checksum[1] &= 0x55;
            checksum[2] &= 0x55;
            checksum[3] &= 0x55;

            if (c1 != checksum[0] || c2 != checksum[1] || c3 != checksum[2] || c4 != checksum[3])
  406c48:	a4 63 00 55 	l.andi r3,r3,0x55
  406c4c:	e0 84 28 04 	l.or r4,r4,r5
  406c50:	e4 04 18 00 	l.sfeq r4,r3
  406c54:	10 00 00 05 	l.bf 406c68 <WriteTrack+0xb18>
  406c58:	15 00 00 00 	l.nop 0x0
            {
                Error = 29;
  406c5c:	9e 60 00 1d 	l.addi r19,r0,0x1d
  406c60:	00 00 00 14 	l.j 406cb0 <WriteTrack+0xb60>
  406c64:	d8 12 98 00 	l.sb 0x0(r18),r19
                break;
            }

            DisableFpga();
  406c68:	18 60 00 80 	l.movhi r3,0x80
  406c6c:	a8 63 00 20 	l.ori r3,r3,0x20
  406c70:	d4 03 c0 00 	l.sw 0x0(r3),r24
                    }
                }

                if (GetData())
                {
                    if (drive->status & DSK_WRITABLE)
  406c74:	8c 74 00 00 	l.lbz r3,0x0(r20)
  406c78:	a4 63 00 10 	l.andi r3,r3,0x10
  406c7c:	bc 23 00 00 	l.sfnei r3,0x0
  406c80:	10 00 00 0f 	l.bf 406cbc <WriteTrack+0xb6c>
  406c84:	18 80 00 41 	l.movhi r4,0x41
                        FileWrite(&file, sector_buffer);
                    else
                    {
                        Error = 30;
                        printf("Write attempt to protected disk!\r");
  406c88:	00 00 00 13 	l.j 406cd4 <WriteTrack+0xb84>
  406c8c:	18 60 00 41 	l.movhi r3,0x41
            }

            DisableFpga();
            return 1;
        }
        else if ((c3 & 0x80) == 0) // not enough data in fifo and write dma is not active
  406c90:	bd 83 00 00 	l.sfltsi r3,0x0
  406c94:	10 00 00 04 	l.bf 406ca4 <WriteTrack+0xb54>
  406c98:	9c 80 00 1c 	l.addi r4,r0,0x1c
        {
            Error = 28;
  406c9c:	00 00 00 05 	l.j 406cb0 <WriteTrack+0xb60>
  406ca0:	d8 12 20 00 	l.sb 0x0(r18),r4
            break;
        }

        DisableFpga();
  406ca4:	d4 16 c0 00 	l.sw 0x0(r22),r24
    unsigned char checksum[4];

    Error = 0;
    while (1)
    {
        EnableFpga();
  406ca8:	03 ff fe eb 	l.j 406854 <WriteTrack+0x704>
  406cac:	9d a0 00 22 	l.addi r13,r0,0x22
            break;
        }

        DisableFpga();
    }
    DisableFpga();
  406cb0:	d4 16 c0 00 	l.sw 0x0(r22),r24
                }
            }
            else
                Error = 27; //track number reported in sector header is not the same as current drive track
        }
        if (Error)
  406cb4:	00 00 00 10 	l.j 406cf4 <WriteTrack+0xba4>
  406cb8:	8c 72 00 00 	l.lbz r3,0x0(r18)
                }

                if (GetData())
                {
                    if (drive->status & DSK_WRITABLE)
                        FileWrite(&file, sector_buffer);
  406cbc:	18 60 00 41 	l.movhi r3,0x41
  406cc0:	a8 63 cb 80 	l.ori r3,r3,0xcb80
  406cc4:	07 ff f7 04 	l.jal 4048d4 <FileWrite>
  406cc8:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
                }
            }
            else
                Error = 27; //track number reported in sector header is not the same as current drive track
        }
        if (Error)
  406ccc:	00 00 00 0a 	l.j 406cf4 <WriteTrack+0xba4>
  406cd0:	8c 72 00 00 	l.lbz r3,0x0(r18)
                {
                    if (drive->status & DSK_WRITABLE)
                        FileWrite(&file, sector_buffer);
                    else
                    {
                        Error = 30;
  406cd4:	9d 00 00 1e 	l.addi r8,r0,0x1e
                        printf("Write attempt to protected disk!\r");
  406cd8:	a8 63 7b 81 	l.ori r3,r3,0x7b81
  406cdc:	07 ff f6 6e 	l.jal 404694 <printf>
  406ce0:	d8 12 40 00 	l.sb 0x0(r18),r8
                }
            }
            else
                Error = 27; //track number reported in sector header is not the same as current drive track
        }
        if (Error)
  406ce4:	00 00 00 04 	l.j 406cf4 <WriteTrack+0xba4>
  406ce8:	8c 72 00 00 	l.lbz r3,0x0(r18)
                        printf("Write attempt to protected disk!\r");
                    }
                }
            }
            else
                Error = 27; //track number reported in sector header is not the same as current drive track
  406cec:	d8 12 68 00 	l.sb 0x0(r18),r13
        }
        if (Error)
  406cf0:	8c 72 00 00 	l.lbz r3,0x0(r18)
  406cf4:	bc 03 00 00 	l.sfeqi r3,0x0
  406cf8:	10 00 00 0a 	l.bf 406d20 <WriteTrack+0xbd0>
  406cfc:	15 00 00 00 	l.nop 0x0
        {
            printf("WriteTrack: error %u\r", Error);
  406d00:	d4 01 18 00 	l.sw 0x0(r1),r3
  406d04:	18 60 00 41 	l.movhi r3,0x41
  406d08:	07 ff f6 63 	l.jal 404694 <printf>
  406d0c:	a8 63 7b a3 	l.ori r3,r3,0x7ba3
            ErrorMessage("  WriteTrack", Error);
  406d10:	18 60 00 41 	l.movhi r3,0x41
  406d14:	8c 92 00 00 	l.lbz r4,0x0(r18)
  406d18:	07 ff f5 e5 	l.jal 4044ac <ErrorMessage>
  406d1c:	a8 63 7b b9 	l.ori r3,r3,0x7bb9
    drive->track_prev = drive->track + 1; // just to force next read from the start of current track

    if (vDEBUG)
        printf("*%u:\r", drive->track);

    while (FindSync(drive))
  406d20:	04 00 00 12 	l.jal 406d68 <FindSync>
  406d24:	a8 74 00 00 	l.ori r3,r20,0x0
  406d28:	bc 2b 00 00 	l.sfnei r11,0x0
  406d2c:	13 ff fd 2f 	l.bf 4061e8 <WriteTrack+0x98>
  406d30:	9c 80 00 22 	l.addi r4,r0,0x22
            ErrorMessage("  WriteTrack", Error);
        }
    }

  DEBUG_FUNC_OUT(DEBUG_F_FDD | DEBUG_L2);
}
  406d34:	9c 21 00 3c 	l.addi r1,r1,0x3c
  406d38:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  406d3c:	84 41 ff d4 	l.lwz r2,0xffffffd4(r1)
  406d40:	85 c1 ff d8 	l.lwz r14,0xffffffd8(r1)
  406d44:	86 01 ff dc 	l.lwz r16,0xffffffdc(r1)
  406d48:	86 41 ff e0 	l.lwz r18,0xffffffe0(r1)
  406d4c:	86 81 ff e4 	l.lwz r20,0xffffffe4(r1)
  406d50:	86 c1 ff e8 	l.lwz r22,0xffffffe8(r1)
  406d54:	87 01 ff ec 	l.lwz r24,0xffffffec(r1)
  406d58:	87 41 ff f0 	l.lwz r26,0xfffffff0(r1)
  406d5c:	87 81 ff f4 	l.lwz r28,0xfffffff4(r1)
  406d60:	44 00 48 00 	l.jr r9
  406d64:	87 c1 ff f8 	l.lwz r30,0xfffffff8(r1)

00406d68 <FindSync>:
    unsigned char  c1, c2, c3, c4;
    unsigned short n;

    while (1)
    {
        EnableFpga();
  406d68:	18 80 00 80 	l.movhi r4,0x80
}


unsigned char FindSync(adfTYPE *drive)
// reads data from fifo till it finds sync word or fifo is empty and dma inactive (so no more data is expected)
{
  406d6c:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
    unsigned char  c1, c2, c3, c4;
    unsigned short n;

    while (1)
    {
        EnableFpga();
  406d70:	a8 c4 00 20 	l.ori r6,r4,0x20
}


unsigned char FindSync(adfTYPE *drive)
// reads data from fifo till it finds sync word or fifo is empty and dma inactive (so no more data is expected)
{
  406d74:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
    unsigned char  c1, c2, c3, c4;
    unsigned short n;

    while (1)
    {
        EnableFpga();
  406d78:	9d 80 00 22 	l.addi r12,r0,0x22
        c1 = SPI(0); // write request signal
  406d7c:	a8 84 00 24 	l.ori r4,r4,0x24
                    printf("#SYNC:");

                return 1;
            }
        }
        DisableFpga();
  406d80:	9d 60 00 20 	l.addi r11,r0,0x20
    unsigned short n;

    while (1)
    {
        EnableFpga();
        c1 = SPI(0); // write request signal
  406d84:	9c 40 00 00 	l.addi r2,r0,0x0
    unsigned char  c1, c2, c3, c4;
    unsigned short n;

    while (1)
    {
        EnableFpga();
  406d88:	d4 06 60 00 	l.sw 0x0(r6),r12
        c1 = SPI(0); // write request signal
  406d8c:	d4 04 10 00 	l.sw 0x0(r4),r2
  406d90:	84 e4 00 00 	l.lwz r7,0x0(r4)
        c2 = SPI(0); // track number (cylinder & head)
  406d94:	d4 04 10 00 	l.sw 0x0(r4),r2
        if (!(c1 & CMD_WRTRK))
  406d98:	a4 e7 00 02 	l.andi r7,r7,0x2

    while (1)
    {
        EnableFpga();
        c1 = SPI(0); // write request signal
        c2 = SPI(0); // track number (cylinder & head)
  406d9c:	84 a4 00 00 	l.lwz r5,0x0(r4)
        if (!(c1 & CMD_WRTRK))
  406da0:	e4 07 10 00 	l.sfeq r7,r2
  406da4:	10 00 00 36 	l.bf 406e7c <FindSync+0x114>
  406da8:	a4 a5 00 ff 	l.andi r5,r5,0xff
            break;
        if (c2 != drive->track)
  406dac:	8c e3 02 a1 	l.lbz r7,0x2a1(r3)
  406db0:	e4 27 28 00 	l.sfne r7,r5
  406db4:	10 00 00 32 	l.bf 406e7c <FindSync+0x114>
  406db8:	15 00 00 00 	l.nop 0x0
            break;
        SPI(0); // disk sync high byte
  406dbc:	d4 04 10 00 	l.sw 0x0(r4),r2
  406dc0:	84 a4 00 00 	l.lwz r5,0x0(r4)
        SPI(0); // disk sync low byte
  406dc4:	d4 04 10 00 	l.sw 0x0(r4),r2
  406dc8:	84 a4 00 00 	l.lwz r5,0x0(r4)
        c3 = (SPI(0)) & 0xBF; // msb of mfm words to transfer
  406dcc:	d4 04 10 00 	l.sw 0x0(r4),r2
  406dd0:	85 04 00 00 	l.lwz r8,0x0(r4)
        c4 = SPI(0); // lsb of mfm words to transfer
  406dd4:	d4 04 10 00 	l.sw 0x0(r4),r2
            break;
        if (c2 != drive->track)
            break;
        SPI(0); // disk sync high byte
        SPI(0); // disk sync low byte
        c3 = (SPI(0)) & 0xBF; // msb of mfm words to transfer
  406dd8:	a5 08 00 bf 	l.andi r8,r8,0xbf
        c4 = SPI(0); // lsb of mfm words to transfer
  406ddc:	84 e4 00 00 	l.lwz r7,0x0(r4)
  406de0:	a4 e7 00 ff 	l.andi r7,r7,0xff

        if (c3 == 0 && c4 == 0)
  406de4:	e0 a8 38 04 	l.or r5,r8,r7
  406de8:	e4 05 10 00 	l.sfeq r5,r2
  406dec:	10 00 00 24 	l.bf 406e7c <FindSync+0x114>
  406df0:	a4 a8 00 3f 	l.andi r5,r8,0x3f
            break;

        n = ((c3 & 0x3F) << 8) + c4;
  406df4:	b8 a5 00 08 	l.slli r5,r5,0x8

        while (n--)
  406df8:	00 00 00 1b 	l.j 406e64 <FindSync+0xfc>
  406dfc:	e0 a7 28 00 	l.add r5,r7,r5
        {
            c3 = SPI(0);
  406e00:	9c 40 00 00 	l.addi r2,r0,0x0
  406e04:	d4 04 10 00 	l.sw 0x0(r4),r2
            c4 = SPI(0);
  406e08:	a4 a5 ff ff 	l.andi r5,r5,0xffff

        n = ((c3 & 0x3F) << 8) + c4;

        while (n--)
        {
            c3 = SPI(0);
  406e0c:	84 e4 00 00 	l.lwz r7,0x0(r4)
            c4 = SPI(0);
  406e10:	d4 04 10 00 	l.sw 0x0(r4),r2
  406e14:	85 04 00 00 	l.lwz r8,0x0(r4)
            if (c3 == 0x44 && c4 == 0x89)
  406e18:	ad 08 ff 89 	l.xori r8,r8,0xffffff89
  406e1c:	a5 08 00 ff 	l.andi r8,r8,0xff
  406e20:	9d 08 ff ff 	l.addi r8,r8,0xffffffff
  406e24:	e5 68 10 00 	l.sfges r8,r2
  406e28:	10 00 00 10 	l.bf 406e68 <FindSync+0x100>
  406e2c:	bc 25 00 00 	l.sfnei r5,0x0
  406e30:	ac e7 00 44 	l.xori r7,r7,0x44
  406e34:	a4 e7 00 ff 	l.andi r7,r7,0xff
  406e38:	9c e7 ff ff 	l.addi r7,r7,0xffffffff
  406e3c:	e5 67 10 00 	l.sfges r7,r2
  406e40:	10 00 00 0a 	l.bf 406e68 <FindSync+0x100>
  406e44:	bc 25 00 00 	l.sfnei r5,0x0
            {
                DisableFpga();
  406e48:	9c 80 00 20 	l.addi r4,r0,0x20
  406e4c:	18 60 00 80 	l.movhi r3,0x80
                if (vDEBUG)
                    printf("#SYNC:");

                return 1;
  406e50:	9d 60 00 01 	l.addi r11,r0,0x1
        {
            c3 = SPI(0);
            c4 = SPI(0);
            if (c3 == 0x44 && c4 == 0x89)
            {
                DisableFpga();
  406e54:	e0 63 20 04 	l.or r3,r3,r4
  406e58:	d4 03 20 00 	l.sw 0x0(r3),r4
    }
    DisableFpga();
    return 0;

  DEBUG_FUNC_OUT(DEBUG_F_FDD | DEBUG_L2);
}
  406e5c:	00 00 00 0e 	l.j 406e94 <FindSync+0x12c>
  406e60:	9c 21 00 04 	l.addi r1,r1,0x4
        if (c3 == 0 && c4 == 0)
            break;

        n = ((c3 & 0x3F) << 8) + c4;

        while (n--)
  406e64:	bc 25 00 00 	l.sfnei r5,0x0
  406e68:	13 ff ff e6 	l.bf 406e00 <FindSync+0x98>
  406e6c:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
                    printf("#SYNC:");

                return 1;
            }
        }
        DisableFpga();
  406e70:	d4 06 58 00 	l.sw 0x0(r6),r11
    }
  406e74:	03 ff ff c5 	l.j 406d88 <FindSync+0x20>
  406e78:	9c 40 00 00 	l.addi r2,r0,0x0
    DisableFpga();
  406e7c:	9c 80 00 20 	l.addi r4,r0,0x20
  406e80:	18 60 00 80 	l.movhi r3,0x80
    return 0;
  406e84:	9d 60 00 00 	l.addi r11,r0,0x0
                return 1;
            }
        }
        DisableFpga();
    }
    DisableFpga();
  406e88:	e0 63 20 04 	l.or r3,r3,r4
  406e8c:	d4 03 20 00 	l.sw 0x0(r3),r4
    return 0;

  DEBUG_FUNC_OUT(DEBUG_F_FDD | DEBUG_L2);
}
  406e90:	9c 21 00 04 	l.addi r1,r1,0x4
  406e94:	44 00 48 00 	l.jr r9
  406e98:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

00406e9c <UpdateEntry>:
}


// changing of allocated cluster number is not supported - new size must be within current cluster number
unsigned char UpdateEntry(fileTYPE *file)
{
  406e9c:	d7 e1 17 e0 	l.sw 0xffffffe0(r1),r2
  406ea0:	d7 e1 77 e4 	l.sw 0xffffffe4(r1),r14
  406ea4:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  406ea8:	d7 e1 87 e8 	l.sw 0xffffffe8(r1),r16
  406eac:	d7 e1 97 ec 	l.sw 0xffffffec(r1),r18
  406eb0:	d7 e1 a7 f0 	l.sw 0xfffffff0(r1),r20
  406eb4:	d7 e1 b7 f4 	l.sw 0xfffffff4(r1),r22
  406eb8:	d7 e1 c7 f8 	l.sw 0xfffffff8(r1),r24
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L1);

    DIRENTRY *pEntry;

    if (!MMC_Read(file->entry.sector, sector_buffer))
  406ebc:	18 80 00 41 	l.movhi r4,0x41
}


// changing of allocated cluster number is not supported - new size must be within current cluster number
unsigned char UpdateEntry(fileTYPE *file)
{
  406ec0:	9c 21 ff dc 	l.addi r1,r1,0xffffffdc
  406ec4:	a8 43 00 00 	l.ori r2,r3,0x0
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L1);

    DIRENTRY *pEntry;

    if (!MMC_Read(file->entry.sector, sector_buffer))
  406ec8:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  406ecc:	07 ff f8 80 	l.jal 4050cc <MMC_Read>
  406ed0:	84 63 00 0c 	l.lwz r3,0xc(r3)
  406ed4:	bc 2b 00 00 	l.sfnei r11,0x0
  406ed8:	10 00 00 07 	l.bf 406ef4 <UpdateEntry+0x58>
  406edc:	a9 cb 00 00 	l.ori r14,r11,0x0
    {
        printf("UpdateEntry(): directory read failed!\r");
  406ee0:	18 60 00 41 	l.movhi r3,0x41
  406ee4:	07 ff f5 ec 	l.jal 404694 <printf>
  406ee8:	a8 63 7b c6 	l.ori r3,r3,0x7bc6
        return(0);
  406eec:	00 00 00 5d 	l.j 407060 <UpdateEntry+0x1c4>
  406ef0:	a9 6e 00 00 	l.ori r11,r14,0x0
    }

    pEntry = (DIRENTRY*)sector_buffer;
    pEntry += file->entry.index;
  406ef4:	85 c2 00 10 	l.lwz r14,0x10(r2)
  406ef8:	18 60 00 41 	l.movhi r3,0x41
  406efc:	b9 ce 00 05 	l.slli r14,r14,0x5
  406f00:	a8 63 a4 dc 	l.ori r3,r3,0xa4dc
    memcpy((void*)pEntry->Name, file->name, 11);
  406f04:	a8 82 00 00 	l.ori r4,r2,0x0
        printf("UpdateEntry(): directory read failed!\r");
        return(0);
    }

    pEntry = (DIRENTRY*)sector_buffer;
    pEntry += file->entry.index;
  406f08:	e1 ce 18 00 	l.add r14,r14,r3
    memcpy((void*)pEntry->Name, file->name, 11);
  406f0c:	9c a0 00 0b 	l.addi r5,r0,0xb
  406f10:	a8 6e 00 00 	l.ori r3,r14,0x0
  406f14:	07 ff e4 db 	l.jal 400280 <memcpy>
  406f18:	1a c0 00 41 	l.movhi r22,0x41
    pEntry->Attributes = file->attributes;
  406f1c:	8c a2 00 0b 	l.lbz r5,0xb(r2)
  406f20:	d8 0e 28 0b 	l.sb 0xb(r14),r5

    if ((SwapBBBB(pEntry->FileSize) + cluster_size - 1) / (cluster_size << 9) != (file->size + cluster_size - 1) / (cluster_size << 9))
  406f24:	84 ae 00 1c 	l.lwz r5,0x1c(r14)
  406f28:	18 e0 00 ff 	l.movhi r7,0xff
  406f2c:	b8 c5 00 18 	l.slli r6,r5,0x18
  406f30:	b8 85 00 58 	l.srli r4,r5,0x18
  406f34:	aa d6 a8 dc 	l.ori r22,r22,0xa8dc
  406f38:	86 02 00 18 	l.lwz r16,0x18(r2)
  406f3c:	e0 86 20 04 	l.or r4,r6,r4
  406f40:	e0 c5 38 03 	l.and r6,r5,r7
  406f44:	a4 a5 ff 00 	l.andi r5,r5,0xff00
  406f48:	b8 c6 00 48 	l.srli r6,r6,0x8
  406f4c:	8e 56 00 00 	l.lbz r18,0x0(r22)
  406f50:	b8 a5 00 08 	l.slli r5,r5,0x8
  406f54:	e0 84 30 04 	l.or r4,r4,r6
  406f58:	ba 92 00 09 	l.slli r20,r18,0x9
  406f5c:	e0 a4 28 04 	l.or r5,r4,r5
  406f60:	9c 72 ff ff 	l.addi r3,r18,0xffffffff
  406f64:	a8 94 00 00 	l.ori r4,r20,0x0
  406f68:	07 ff e4 4f 	l.jal 4000a4 <__udivsi3>
  406f6c:	e0 63 28 00 	l.add r3,r3,r5
  406f70:	9c 70 ff ff 	l.addi r3,r16,0xffffffff
  406f74:	ab 0b 00 00 	l.ori r24,r11,0x0
  406f78:	e0 63 90 00 	l.add r3,r3,r18
  406f7c:	07 ff e4 4a 	l.jal 4000a4 <__udivsi3>
  406f80:	a8 94 00 00 	l.ori r4,r20,0x0
  406f84:	e4 18 58 00 	l.sfeq r24,r11
  406f88:	10 00 00 20 	l.bf 407008 <UpdateEntry+0x16c>
  406f8c:	b8 90 00 18 	l.slli r4,r16,0x18
    {
        printf("UpdateEntry(): different number of clusters!\r");
  406f90:	18 60 00 41 	l.movhi r3,0x41
  406f94:	07 ff f5 c0 	l.jal 404694 <printf>
  406f98:	a8 63 7b ed 	l.ori r3,r3,0x7bed
        printf("pEntry->FileSize = %lu\r", SwapBBBB(pEntry->FileSize));
  406f9c:	84 6e 00 1c 	l.lwz r3,0x1c(r14)
  406fa0:	18 c0 00 ff 	l.movhi r6,0xff
  406fa4:	b8 a3 00 18 	l.slli r5,r3,0x18
  406fa8:	b8 83 00 58 	l.srli r4,r3,0x18
  406fac:	e0 85 20 04 	l.or r4,r5,r4
  406fb0:	e0 a3 30 03 	l.and r5,r3,r6
  406fb4:	a4 63 ff 00 	l.andi r3,r3,0xff00
  406fb8:	b8 a5 00 48 	l.srli r5,r5,0x8
  406fbc:	b8 63 00 08 	l.slli r3,r3,0x8
  406fc0:	e0 84 28 04 	l.or r4,r4,r5
  406fc4:	e0 64 18 04 	l.or r3,r4,r3
  406fc8:	d4 01 18 00 	l.sw 0x0(r1),r3
  406fcc:	18 60 00 41 	l.movhi r3,0x41
  406fd0:	07 ff f5 b1 	l.jal 404694 <printf>
  406fd4:	a8 63 7c 1b 	l.ori r3,r3,0x7c1b
        printf("file->size = %lu\r", file->size);
  406fd8:	18 60 00 41 	l.movhi r3,0x41
  406fdc:	84 42 00 18 	l.lwz r2,0x18(r2)
  406fe0:	a8 63 7c 33 	l.ori r3,r3,0x7c33
  406fe4:	07 ff f5 ac 	l.jal 404694 <printf>
  406fe8:	d4 01 10 00 	l.sw 0x0(r1),r2
        printf("cluster_size = %u\r", cluster_size);
  406fec:	18 60 00 41 	l.movhi r3,0x41
  406ff0:	8c 56 00 00 	l.lbz r2,0x0(r22)
  406ff4:	a8 63 7c 45 	l.ori r3,r3,0x7c45
  406ff8:	07 ff f5 a7 	l.jal 404694 <printf>
  406ffc:	d4 01 10 00 	l.sw 0x0(r1),r2
        return(0);
  407000:	00 00 00 18 	l.j 407060 <UpdateEntry+0x1c4>
  407004:	9d 60 00 00 	l.addi r11,r0,0x0
    }

//    pEntry->FileSize = file->size;
      pEntry->FileSize = SwapBBBB(file->size); // for 68000
  407008:	b8 70 00 58 	l.srli r3,r16,0x18
  40700c:	18 e0 00 ff 	l.movhi r7,0xff
  407010:	e0 64 18 04 	l.or r3,r4,r3
  407014:	e0 90 38 03 	l.and r4,r16,r7
  407018:	a6 10 ff 00 	l.andi r16,r16,0xff00
  40701c:	b8 84 00 48 	l.srli r4,r4,0x8
  407020:	ba 10 00 08 	l.slli r16,r16,0x8
  407024:	e0 63 20 04 	l.or r3,r3,r4

    if (!MMC_Write(file->entry.sector, sector_buffer))
  407028:	18 80 00 41 	l.movhi r4,0x41
        printf("cluster_size = %u\r", cluster_size);
        return(0);
    }

//    pEntry->FileSize = file->size;
      pEntry->FileSize = SwapBBBB(file->size); // for 68000
  40702c:	e2 03 80 04 	l.or r16,r3,r16

    if (!MMC_Write(file->entry.sector, sector_buffer))
  407030:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
        printf("cluster_size = %u\r", cluster_size);
        return(0);
    }

//    pEntry->FileSize = file->size;
      pEntry->FileSize = SwapBBBB(file->size); // for 68000
  407034:	d4 0e 80 1c 	l.sw 0x1c(r14),r16

    if (!MMC_Write(file->entry.sector, sector_buffer))
  407038:	07 ff f5 b1 	l.jal 4046fc <MMC_Write>
  40703c:	84 62 00 0c 	l.lwz r3,0xc(r2)
  407040:	a8 4b 00 00 	l.ori r2,r11,0x0
  407044:	bc 22 00 00 	l.sfnei r2,0x0
  407048:	10 00 00 06 	l.bf 407060 <UpdateEntry+0x1c4>
  40704c:	9d 60 00 01 	l.addi r11,r0,0x1
    {
        printf("UpdateEntry(): directory write failed!\r");
  407050:	18 60 00 41 	l.movhi r3,0x41
  407054:	07 ff f5 90 	l.jal 404694 <printf>
  407058:	a8 63 7c 58 	l.ori r3,r3,0x7c58
        return(0);
  40705c:	a9 62 00 00 	l.ori r11,r2,0x0
    }

    return(1);

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L1);
}
  407060:	9c 21 00 24 	l.addi r1,r1,0x24
  407064:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  407068:	84 41 ff e0 	l.lwz r2,0xffffffe0(r1)
  40706c:	85 c1 ff e4 	l.lwz r14,0xffffffe4(r1)
  407070:	86 01 ff e8 	l.lwz r16,0xffffffe8(r1)
  407074:	86 41 ff ec 	l.lwz r18,0xffffffec(r1)
  407078:	86 81 ff f0 	l.lwz r20,0xfffffff0(r1)
  40707c:	86 c1 ff f4 	l.lwz r22,0xfffffff4(r1)
  407080:	44 00 48 00 	l.jr r9
  407084:	87 01 ff f8 	l.lwz r24,0xfffffff8(r1)

00407088 <FileCreate>:
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


unsigned char FileCreate(unsigned long iDirectory, fileTYPE *file)
{
  407088:	d7 e1 87 dc 	l.sw 0xffffffdc(r1),r16
  40708c:	d7 e1 a7 e4 	l.sw 0xffffffe4(r1),r20
  407090:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  407094:	d7 e1 17 d4 	l.sw 0xffffffd4(r1),r2
  407098:	d7 e1 77 d8 	l.sw 0xffffffd8(r1),r14
  40709c:	d7 e1 97 e0 	l.sw 0xffffffe0(r1),r18
  4070a0:	d7 e1 b7 e8 	l.sw 0xffffffe8(r1),r22
  4070a4:	d7 e1 c7 ec 	l.sw 0xffffffec(r1),r24
  4070a8:	d7 e1 d7 f0 	l.sw 0xfffffff0(r1),r26
  4070ac:	d7 e1 e7 f4 	l.sw 0xfffffff4(r1),r28
  4070b0:	d7 e1 f7 f8 	l.sw 0xfffffff8(r1),r30
  4070b4:	aa 83 00 00 	l.ori r20,r3,0x0
  4070b8:	9c 21 ff cc 	l.addi r1,r1,0xffffffcc
    unsigned long iDirectorySector;     // current sector of directory entries table
    unsigned long iDirectoryCluster;    // start cluster of subdirectory or FAT32 root directory
    unsigned long iEntry;               // entry index in directory cluster or FAT16 root directory
    unsigned long nEntries;             // number of entries per cluster or FAT16 root directory size

    if (iDirectory) // subdirectory
  4070bc:	bc 03 00 00 	l.sfeqi r3,0x0
  4070c0:	10 00 00 0f 	l.bf 4070fc <FileCreate+0x74>
  4070c4:	aa 04 00 00 	l.ori r16,r4,0x0
    {
        iDirectoryCluster = iDirectory;
        iDirectorySector = data_start + cluster_size * (iDirectoryCluster-2);
  4070c8:	18 40 00 41 	l.movhi r2,0x41
  4070cc:	9c 63 ff fe 	l.addi r3,r3,0xfffffffe
  4070d0:	a8 42 a8 dc 	l.ori r2,r2,0xa8dc
        nEntries = cluster_size << 4; // 16 entries per sector
  4070d4:	a9 d4 00 00 	l.ori r14,r20,0x0
    unsigned long nEntries;             // number of entries per cluster or FAT16 root directory size

    if (iDirectory) // subdirectory
    {
        iDirectoryCluster = iDirectory;
        iDirectorySector = data_start + cluster_size * (iDirectoryCluster-2);
  4070d8:	8f 42 00 00 	l.lbz r26,0x0(r2)
  4070dc:	18 40 00 41 	l.movhi r2,0x41
  4070e0:	a8 9a 00 00 	l.ori r4,r26,0x0
  4070e4:	07 ff e3 e1 	l.jal 400068 <__mulsi3>
  4070e8:	a8 42 dc 8c 	l.ori r2,r2,0xdc8c
  4070ec:	84 a2 00 00 	l.lwz r5,0x0(r2)
        nEntries = cluster_size << 4; // 16 entries per sector
  4070f0:	bb 5a 00 04 	l.slli r26,r26,0x4
    unsigned long nEntries;             // number of entries per cluster or FAT16 root directory size

    if (iDirectory) // subdirectory
    {
        iDirectoryCluster = iDirectory;
        iDirectorySector = data_start + cluster_size * (iDirectoryCluster-2);
  4070f4:	00 00 00 16 	l.j 40714c <FileCreate+0xc4>
  4070f8:	e0 ab 28 00 	l.add r5,r11,r5
        nEntries = cluster_size << 4; // 16 entries per sector
    }
    else // root directory
    {
        iDirectoryCluster = root_directory_cluster;
  4070fc:	18 40 00 41 	l.movhi r2,0x41
  407100:	a8 42 dc 90 	l.ori r2,r2,0xdc90
  407104:	85 c2 00 00 	l.lwz r14,0x0(r2)
        iDirectorySector = root_directory_start;
  407108:	18 40 00 41 	l.movhi r2,0x41
  40710c:	a8 42 dc 94 	l.ori r2,r2,0xdc94
  407110:	84 a2 00 00 	l.lwz r5,0x0(r2)
        nEntries = fat32 ?  cluster_size << 4 : root_directory_size << 4; // 16 entries per sector
  407114:	18 40 00 41 	l.movhi r2,0x41
  407118:	a8 42 a3 51 	l.ori r2,r2,0xa351
  40711c:	8c 42 00 00 	l.lbz r2,0x0(r2)
  407120:	bc 02 00 00 	l.sfeqi r2,0x0
  407124:	10 00 00 06 	l.bf 40713c <FileCreate+0xb4>
  407128:	15 00 00 00 	l.nop 0x0
  40712c:	18 40 00 41 	l.movhi r2,0x41
  407130:	a8 42 a8 dc 	l.ori r2,r2,0xa8dc
  407134:	00 00 00 05 	l.j 407148 <FileCreate+0xc0>
  407138:	8f 42 00 00 	l.lbz r26,0x0(r2)
  40713c:	18 40 00 41 	l.movhi r2,0x41
  407140:	a8 42 dc 98 	l.ori r2,r2,0xdc98
  407144:	87 42 00 00 	l.lwz r26,0x0(r2)
  407148:	bb 5a 00 04 	l.slli r26,r26,0x4

                return(1);
            }
        }

        if (iDirectory || fat32) // subdirectory is a linked cluster chain
  40714c:	1b c0 00 41 	l.movhi r30,0x41
            iDirectoryCluster = GetFATLink(iDirectoryCluster); // get next cluster in chain

            if (fat32 ? (iDirectoryCluster & 0x0FFFFFF8) == 0x0FFFFFF8 : (iDirectoryCluster & 0xFFF8) == 0xFFF8) // check if end of chain
                break; // no more clusters in chain

            iDirectorySector = data_start + cluster_size * (iDirectoryCluster - 2); // calculate first sector address of the new cluster
  407150:	1b 80 00 41 	l.movhi r28,0x41

    if (iDirectory) // subdirectory
    {
        iDirectoryCluster = iDirectory;
        iDirectorySector = data_start + cluster_size * (iDirectoryCluster-2);
        nEntries = cluster_size << 4; // 16 entries per sector
  407154:	9c 40 00 00 	l.addi r2,r0,0x0

                return(1);
            }
        }

        if (iDirectory || fat32) // subdirectory is a linked cluster chain
  407158:	ab de a3 51 	l.ori r30,r30,0xa351
            iDirectoryCluster = GetFATLink(iDirectoryCluster); // get next cluster in chain

            if (fat32 ? (iDirectoryCluster & 0x0FFFFFF8) == 0x0FFFFFF8 : (iDirectoryCluster & 0xFFF8) == 0xFFF8) // check if end of chain
                break; // no more clusters in chain

            iDirectorySector = data_start + cluster_size * (iDirectoryCluster - 2); // calculate first sector address of the new cluster
  40715c:	ab 9c dc 8c 	l.ori r28,r28,0xdc8c
        nEntries = fat32 ?  cluster_size << 4 : root_directory_size << 4; // 16 entries per sector
    }

    while (1)
    {
        for (iEntry = 0; iEntry < nEntries; iEntry++)
  407160:	00 00 00 e4 	l.j 4074f0 <FileCreate+0x468>
  407164:	9e c0 00 00 	l.addi r22,r0,0x0
        {
            if ((iEntry & 0x0F) == 0) // first entry in sector, load the sector
  407168:	bc 38 00 00 	l.sfnei r24,0x0
  40716c:	10 00 00 0a 	l.bf 407194 <FileCreate+0x10c>
  407170:	18 80 00 41 	l.movhi r4,0x41
            {
                MMC_Read(iDirectorySector++, sector_buffer); // read directory sector
  407174:	a8 65 00 00 	l.ori r3,r5,0x0
  407178:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  40717c:	9e 45 00 01 	l.addi r18,r5,0x1
  407180:	07 ff f7 d3 	l.jal 4050cc <MMC_Read>
  407184:	18 40 00 41 	l.movhi r2,0x41
                pEntry = (DIRENTRY*)sector_buffer;
  407188:	a8 42 a4 dc 	l.ori r2,r2,0xa4dc
    {
        for (iEntry = 0; iEntry < nEntries; iEntry++)
        {
            if ((iEntry & 0x0F) == 0) // first entry in sector, load the sector
            {
                MMC_Read(iDirectorySector++, sector_buffer); // read directory sector
  40718c:	00 00 00 03 	l.j 407198 <FileCreate+0x110>
  407190:	a8 b2 00 00 	l.ori r5,r18,0x0
                pEntry = (DIRENTRY*)sector_buffer;
            }
            else
                pEntry++;
  407194:	9c 42 00 20 	l.addi r2,r2,0x20


            if (pEntry->Name[0] == SLOT_EMPTY)
  407198:	8e 42 00 00 	l.lbz r18,0x0(r2)
  40719c:	bc 32 00 00 	l.sfnei r18,0x0
  4071a0:	10 00 00 d4 	l.bf 4074f0 <FileCreate+0x468>
  4071a4:	9e d6 00 01 	l.addi r22,r22,0x1
  4071a8:	9e d6 ff ff 	l.addi r22,r22,0xffffffff
            {
                printf("Empty entry found in sector %lu at index %lu\r", iDirectorySector-1, iEntry&0x0F);
  4071ac:	18 60 00 41 	l.movhi r3,0x41
  4071b0:	9e c5 ff ff 	l.addi r22,r5,0xffffffff
  4071b4:	a8 63 7c 80 	l.ori r3,r3,0x7c80

                // free cluster is marked as 0x0000
                // last cluster in chain is 0xFFFF
                unsigned long fat_index = 0; // first sector of FAT
                unsigned long buffer_index = 2;  // two first entries are reserved
                while (fat_index < fat_size)
  4071b8:	1b c0 00 41 	l.movhi r30,0x41
                {
                    // read sector of FAT if not already in the buffer
                    if (fat_index != buffered_fat_index)
  4071bc:	1a 80 00 41 	l.movhi r20,0x41
                    {
                        if (!MMC_Read(fat_start + fat_index, (unsigned char*)&fat_buffer))
  4071c0:	1b 80 00 41 	l.movhi r28,0x41
                pEntry++;


            if (pEntry->Name[0] == SLOT_EMPTY)
            {
                printf("Empty entry found in sector %lu at index %lu\r", iDirectorySector-1, iEntry&0x0F);
  4071c4:	d4 01 b0 00 	l.sw 0x0(r1),r22
  4071c8:	d4 01 c0 04 	l.sw 0x4(r1),r24
  4071cc:	07 ff f5 32 	l.jal 404694 <printf>
  4071d0:	9d c0 00 02 	l.addi r14,r0,0x2

                // free cluster is marked as 0x0000
                // last cluster in chain is 0xFFFF
                unsigned long fat_index = 0; // first sector of FAT
                unsigned long buffer_index = 2;  // two first entries are reserved
                while (fat_index < fat_size)
  4071d4:	ab de dc a0 	l.ori r30,r30,0xdca0
                {
                    // read sector of FAT if not already in the buffer
                    if (fat_index != buffered_fat_index)
  4071d8:	aa 94 de a4 	l.ori r20,r20,0xdea4

                // free cluster is marked as 0x0000
                // last cluster in chain is 0xFFFF
                unsigned long fat_index = 0; // first sector of FAT
                unsigned long buffer_index = 2;  // two first entries are reserved
                while (fat_index < fat_size)
  4071dc:	00 00 00 bf 	l.j 4074d8 <FileCreate+0x450>
  4071e0:	ab 9c dc 88 	l.ori r28,r28,0xdc88
                {
                    // read sector of FAT if not already in the buffer
                    if (fat_index != buffered_fat_index)
  4071e4:	84 74 00 00 	l.lwz r3,0x0(r20)
  4071e8:	e4 12 18 00 	l.sfeq r18,r3
  4071ec:	10 00 00 0f 	l.bf 407228 <FileCreate+0x1a0>
  4071f0:	18 80 00 41 	l.movhi r4,0x41
                    {
                        if (!MMC_Read(fat_start + fat_index, (unsigned char*)&fat_buffer))
  4071f4:	84 7c 00 00 	l.lwz r3,0x0(r28)
  4071f8:	e0 72 18 00 	l.add r3,r18,r3
  4071fc:	07 ff f7 b4 	l.jal 4050cc <MMC_Read>
  407200:	a8 84 dc a4 	l.ori r4,r4,0xdca4
  407204:	bc 2b 00 00 	l.sfnei r11,0x0
  407208:	10 00 00 07 	l.bf 407224 <FileCreate+0x19c>
  40720c:	ab 4b 00 00 	l.ori r26,r11,0x0
                        {
                            printf("FileCreate(): FAT read failed!\r");
  407210:	18 60 00 41 	l.movhi r3,0x41
  407214:	07 ff f5 20 	l.jal 404694 <printf>
  407218:	a8 63 7c ae 	l.ori r3,r3,0x7cae
                            return(0);
  40721c:	00 00 00 e0 	l.j 40759c <FileCreate+0x514>
  407220:	a9 7a 00 00 	l.ori r11,r26,0x0
                        }
                        // remember current buffer index
                        buffered_fat_index = fat_index;
  407224:	d4 14 90 00 	l.sw 0x0(r20),r18
                    }

                    unsigned long buffer_size = fat32 ? 128 : 256;
  407228:	18 80 00 41 	l.movhi r4,0x41
  40722c:	a8 84 a3 51 	l.ori r4,r4,0xa351
  407230:	8c 64 00 00 	l.lbz r3,0x0(r4)
  407234:	bc 03 00 00 	l.sfeqi r3,0x0
  407238:	10 00 00 03 	l.bf 407244 <FileCreate+0x1bc>
  40723c:	9c e0 01 00 	l.addi r7,r0,0x100
  407240:	9c e0 00 80 	l.addi r7,r0,0x80

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


unsigned char FileCreate(unsigned long iDirectory, fileTYPE *file)
  407244:	18 a0 00 41 	l.movhi r5,0x41
  407248:	b8 8e 00 02 	l.slli r4,r14,0x2
  40724c:	a8 a5 dc a4 	l.ori r5,r5,0xdca4
  407250:	e0 ce 70 00 	l.add r6,r14,r14
  407254:	e0 84 28 00 	l.add r4,r4,r5
  407258:	e0 c6 28 00 	l.add r6,r6,r5

                    unsigned long buffer_size = fat32 ? 128 : 256;
                    while (buffer_index < buffer_size)
                    { // search through all entries in current sector

                        if ((fat32 ? fat_buffer.fat32[buffer_index] : fat_buffer.fat16[buffer_index]) == 0)
  40725c:	bc 03 00 00 	l.sfeqi r3,0x0
  407260:	10 00 00 07 	l.bf 40727c <FileCreate+0x1f4>
  407264:	15 00 00 00 	l.nop 0x0
  407268:	84 a4 00 00 	l.lwz r5,0x0(r4)
  40726c:	e1 00 28 02 	l.sub r8,r0,r5
  407270:	e0 a8 28 04 	l.or r5,r8,r5
  407274:	00 00 00 04 	l.j 407284 <FileCreate+0x1fc>
  407278:	ac a5 ff ff 	l.xori r5,r5,0xffffffff
  40727c:	94 a6 00 00 	l.lhz r5,0x0(r6)
  407280:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  407284:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  407288:	bc 05 00 00 	l.sfeqi r5,0x0
  40728c:	10 00 00 8d 	l.bf 4074c0 <FileCreate+0x438>
  407290:	9c 84 00 04 	l.addi r4,r4,0x4
                        {   // empty cluster found
                            unsigned long cluster = (fat_index << (fat32 ? 7 : 8)) + buffer_index;  // calculate cluster number
  407294:	bc 03 00 00 	l.sfeqi r3,0x0
  407298:	10 00 00 03 	l.bf 4072a4 <FileCreate+0x21c>
  40729c:	9e 80 00 08 	l.addi r20,r0,0x8
  4072a0:	9e 80 00 07 	l.addi r20,r0,0x7
  4072a4:	e2 92 a0 08 	l.sll r20,r18,r20

                            printf("Empty cluster: %lu\r", cluster);
  4072a8:	18 60 00 41 	l.movhi r3,0x41
                    while (buffer_index < buffer_size)
                    { // search through all entries in current sector

                        if ((fat32 ? fat_buffer.fat32[buffer_index] : fat_buffer.fat16[buffer_index]) == 0)
                        {   // empty cluster found
                            unsigned long cluster = (fat_index << (fat32 ? 7 : 8)) + buffer_index;  // calculate cluster number
  4072ac:	e2 94 70 00 	l.add r20,r20,r14

                            printf("Empty cluster: %lu\r", cluster);
  4072b0:	a8 63 7c ce 	l.ori r3,r3,0x7cce
  4072b4:	07 ff f4 f8 	l.jal 404694 <printf>
  4072b8:	d4 01 a0 00 	l.sw 0x0(r1),r20

                            // mark cluster as used
                            if (fat32)
  4072bc:	18 60 00 41 	l.movhi r3,0x41
  4072c0:	a8 63 a3 51 	l.ori r3,r3,0xa351
  4072c4:	8c 63 00 00 	l.lbz r3,0x0(r3)
  4072c8:	bc 03 00 00 	l.sfeqi r3,0x0
  4072cc:	10 00 00 09 	l.bf 4072f0 <FileCreate+0x268>
  4072d0:	9c 80 ff ff 	l.addi r4,r0,0xffffffff
//                                fat_buffer.fat32[buffer_index] = 0x0FFFFFFF; // FAT32 EOC change
                                fat_buffer.fat32[buffer_index] = 0xFFFFFF0F; // FAT32 EOC change for 68000!
  4072d4:	18 c0 00 41 	l.movhi r6,0x41
  4072d8:	b9 ce 00 02 	l.slli r14,r14,0x2
  4072dc:	a8 c6 dc a4 	l.ori r6,r6,0xdca4
  4072e0:	9c 60 ff 0f 	l.addi r3,r0,0xffffff0f
  4072e4:	e1 ce 30 00 	l.add r14,r14,r6
  4072e8:	00 00 00 07 	l.j 407304 <FileCreate+0x27c>
  4072ec:	d4 0e 18 00 	l.sw 0x0(r14),r3
                            else
                                fat_buffer.fat16[buffer_index] = 0xFFFF; // FAT16 EOC
  4072f0:	18 60 00 41 	l.movhi r3,0x41
  4072f4:	e1 ce 70 00 	l.add r14,r14,r14
  4072f8:	a8 63 dc a4 	l.ori r3,r3,0xdca4
  4072fc:	e1 ce 18 00 	l.add r14,r14,r3
  407300:	dc 0e 20 00 	l.sh 0x0(r14),r4

                            // store FAT sector
                            if (!MMC_Write(fat_start + fat_index, (unsigned char*)&fat_buffer))
  407304:	1b 40 00 41 	l.movhi r26,0x41
  407308:	18 80 00 41 	l.movhi r4,0x41
  40730c:	ab 5a dc 88 	l.ori r26,r26,0xdc88
  407310:	a8 84 dc a4 	l.ori r4,r4,0xdca4
  407314:	84 7a 00 00 	l.lwz r3,0x0(r26)
  407318:	07 ff f4 f9 	l.jal 4046fc <MMC_Write>
  40731c:	e0 72 18 00 	l.add r3,r18,r3
  407320:	bc 0b 00 00 	l.sfeqi r11,0x0
  407324:	10 00 00 06 	l.bf 40733c <FileCreate+0x2b4>
  407328:	a9 cb 00 00 	l.ori r14,r11,0x0

                            // update FAT copies
                            unsigned long i;
                            for (i = 1; i < fat_number; i++)
                            {
                                if (!MMC_Write(fat_start + (i * fat_size) + fat_index, (unsigned char*)&fat_buffer))
  40732c:	1b c0 00 41 	l.movhi r30,0x41
                                fat_buffer.fat32[buffer_index] = 0xFFFFFF0F; // FAT32 EOC change for 68000!
                            else
                                fat_buffer.fat16[buffer_index] = 0xFFFF; // FAT16 EOC

                            // store FAT sector
                            if (!MMC_Write(fat_start + fat_index, (unsigned char*)&fat_buffer))
  407330:	9d c0 00 01 	l.addi r14,r0,0x1

                            // update FAT copies
                            unsigned long i;
                            for (i = 1; i < fat_number; i++)
                            {
                                if (!MMC_Write(fat_start + (i * fat_size) + fat_index, (unsigned char*)&fat_buffer))
  407334:	00 00 00 1a 	l.j 40739c <FileCreate+0x314>
  407338:	ab de dc a0 	l.ori r30,r30,0xdca0
                                fat_buffer.fat16[buffer_index] = 0xFFFF; // FAT16 EOC

                            // store FAT sector
                            if (!MMC_Write(fat_start + fat_index, (unsigned char*)&fat_buffer))
                            {
                                printf("FileCreate(): FAT write failed!\r");
  40733c:	18 60 00 41 	l.movhi r3,0x41
  407340:	07 ff f4 d5 	l.jal 404694 <printf>
  407344:	a8 63 7c e2 	l.ori r3,r3,0x7ce2
                                return(0);
  407348:	00 00 00 95 	l.j 40759c <FileCreate+0x514>
  40734c:	a9 6e 00 00 	l.ori r11,r14,0x0

                            // update FAT copies
                            unsigned long i;
                            for (i = 1; i < fat_number; i++)
                            {
                                if (!MMC_Write(fat_start + (i * fat_size) + fat_index, (unsigned char*)&fat_buffer))
  407350:	84 9e 00 00 	l.lwz r4,0x0(r30)
  407354:	a8 6e 00 00 	l.ori r3,r14,0x0
  407358:	07 ff e3 44 	l.jal 400068 <__mulsi3>
  40735c:	87 9a 00 00 	l.lwz r28,0x0(r26)
  407360:	e3 92 e0 00 	l.add r28,r18,r28
  407364:	18 80 00 41 	l.movhi r4,0x41
  407368:	e0 7c 58 00 	l.add r3,r28,r11
  40736c:	07 ff f4 e4 	l.jal 4046fc <MMC_Write>
  407370:	a8 84 dc a4 	l.ori r4,r4,0xdca4
  407374:	bc 2b 00 00 	l.sfnei r11,0x0
  407378:	10 00 00 08 	l.bf 407398 <FileCreate+0x310>
  40737c:	ab 8b 00 00 	l.ori r28,r11,0x0
                                {
                                    printf("FileCreate(): FAT copy #%lu write failed!\r", i);
  407380:	18 60 00 41 	l.movhi r3,0x41
  407384:	d4 01 70 00 	l.sw 0x0(r1),r14
  407388:	07 ff f4 c3 	l.jal 404694 <printf>
  40738c:	a8 63 7d 03 	l.ori r3,r3,0x7d03
                                    return(0);
  407390:	00 00 00 83 	l.j 40759c <FileCreate+0x514>
  407394:	a9 7c 00 00 	l.ori r11,r28,0x0
                                return(0);
                            }

                            // update FAT copies
                            unsigned long i;
                            for (i = 1; i < fat_number; i++)
  407398:	9d ce 00 01 	l.addi r14,r14,0x1
  40739c:	18 a0 00 41 	l.movhi r5,0x41
  4073a0:	a8 a5 dc 9c 	l.ori r5,r5,0xdc9c
  4073a4:	8c 65 00 00 	l.lbz r3,0x0(r5)
  4073a8:	e4 8e 18 00 	l.sfltu r14,r3
  4073ac:	13 ff ff e9 	l.bf 407350 <FileCreate+0x2c8>
  4073b0:	9c 62 00 20 	l.addi r3,r2,0x20
#include <string.h>
#include <stdint.h>

void *memset(void *dst, int c, size_t n)
{
	char *q = dst;
  4073b4:	00 00 00 04 	l.j 4073c4 <FileCreate+0x33c>
  4073b8:	a8 82 00 00 	l.ori r4,r2,0x0
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
		*q++ = c;
  4073bc:	d8 04 30 00 	l.sb 0x0(r4),r6
  4073c0:	9c 84 00 01 	l.addi r4,r4,0x1
	asm volatile ("cld ; rep ; stosq ; movl %3,%%ecx ; rep ; stosb"
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
  4073c4:	e4 24 18 00 	l.sfne r4,r3
  4073c8:	13 ff ff fd 	l.bf 4073bc <FileCreate+0x334>
  4073cc:	9c c0 00 00 	l.addi r6,r0,0x0
                                }
                            }

                            // initialize direntry
                            memset((void*)pEntry, 0, sizeof(DIRENTRY));
                            memcpy((void*)pEntry->Name, file->name, 11);
  4073d0:	a8 62 00 00 	l.ori r3,r2,0x0
  4073d4:	a8 90 00 00 	l.ori r4,r16,0x0
  4073d8:	07 ff e3 aa 	l.jal 400280 <memcpy>
  4073dc:	9c a0 00 0b 	l.addi r5,r0,0xb
                            pEntry->Attributes = file->attributes;
  4073e0:	8c 70 00 0b 	l.lbz r3,0xb(r16)
                            pEntry->CreateDate = SwapBB(FILEDATE(2009, 9, 1));
  4073e4:	9c 80 21 3b 	l.addi r4,r0,0x213b
                            }

                            // initialize direntry
                            memset((void*)pEntry, 0, sizeof(DIRENTRY));
                            memcpy((void*)pEntry->Name, file->name, 11);
                            pEntry->Attributes = file->attributes;
  4073e8:	d8 02 18 0b 	l.sb 0xb(r2),r3
//                            pEntry->HighCluster = fat32 ? (unsigned short)(((cluster & 0x0F000000)>>24)|((cluster & 0xFF0000)>>8)) : 0; // for 68000
//                            pEntry->FileSize = ((file->size>>24)&0xFF)|((file->size>>8)&0xFF00)|((file->size<<8)&0xFF0000)|((file->size<<24)&0xFF000000); // for 68000 
//                            pEntry->StartCluster = (unsigned short)cluster;
//                            pEntry->HighCluster = fat32 ? (unsigned short)(cluster >> 16) : 0;
//                            pEntry->FileSize = file->size;
                            pEntry->StartCluster = (unsigned short)SwapBB(cluster); // for 68000
  4073ec:	a4 74 ff 00 	l.andi r3,r20,0xff00

                            // initialize direntry
                            memset((void*)pEntry, 0, sizeof(DIRENTRY));
                            memcpy((void*)pEntry->Name, file->name, 11);
                            pEntry->Attributes = file->attributes;
                            pEntry->CreateDate = SwapBB(FILEDATE(2009, 9, 1));
  4073f0:	dc 02 20 10 	l.sh 0x10(r2),r4
                            pEntry->CreateTime = SwapBB(FILETIME(0, 0, 0));
                            pEntry->AccessDate = SwapBB(FILEDATE(2009, 9, 1));
  4073f4:	dc 02 20 12 	l.sh 0x12(r2),r4
                            pEntry->ModifyDate = SwapBB(FILEDATE(2009, 9, 1));
  4073f8:	dc 02 20 18 	l.sh 0x18(r2),r4
//                            pEntry->HighCluster = fat32 ? (unsigned short)(((cluster & 0x0F000000)>>24)|((cluster & 0xFF0000)>>8)) : 0; // for 68000
//                            pEntry->FileSize = ((file->size>>24)&0xFF)|((file->size>>8)&0xFF00)|((file->size<<8)&0xFF0000)|((file->size<<24)&0xFF000000); // for 68000 
//                            pEntry->StartCluster = (unsigned short)cluster;
//                            pEntry->HighCluster = fat32 ? (unsigned short)(cluster >> 16) : 0;
//                            pEntry->FileSize = file->size;
                            pEntry->StartCluster = (unsigned short)SwapBB(cluster); // for 68000
  4073fc:	b8 63 00 48 	l.srli r3,r3,0x8
  407400:	b8 94 00 08 	l.slli r4,r20,0x8
                            // initialize direntry
                            memset((void*)pEntry, 0, sizeof(DIRENTRY));
                            memcpy((void*)pEntry->Name, file->name, 11);
                            pEntry->Attributes = file->attributes;
                            pEntry->CreateDate = SwapBB(FILEDATE(2009, 9, 1));
                            pEntry->CreateTime = SwapBB(FILETIME(0, 0, 0));
  407404:	9c a0 00 00 	l.addi r5,r0,0x0
//                            pEntry->HighCluster = fat32 ? (unsigned short)(((cluster & 0x0F000000)>>24)|((cluster & 0xFF0000)>>8)) : 0; // for 68000
//                            pEntry->FileSize = ((file->size>>24)&0xFF)|((file->size>>8)&0xFF00)|((file->size<<8)&0xFF0000)|((file->size<<24)&0xFF000000); // for 68000 
//                            pEntry->StartCluster = (unsigned short)cluster;
//                            pEntry->HighCluster = fat32 ? (unsigned short)(cluster >> 16) : 0;
//                            pEntry->FileSize = file->size;
                            pEntry->StartCluster = (unsigned short)SwapBB(cluster); // for 68000
  407408:	e0 64 18 04 	l.or r3,r4,r3
                            // initialize direntry
                            memset((void*)pEntry, 0, sizeof(DIRENTRY));
                            memcpy((void*)pEntry->Name, file->name, 11);
                            pEntry->Attributes = file->attributes;
                            pEntry->CreateDate = SwapBB(FILEDATE(2009, 9, 1));
                            pEntry->CreateTime = SwapBB(FILETIME(0, 0, 0));
  40740c:	dc 02 28 0e 	l.sh 0xe(r2),r5
//                            pEntry->HighCluster = fat32 ? (unsigned short)(((cluster & 0x0F000000)>>24)|((cluster & 0xFF0000)>>8)) : 0; // for 68000
//                            pEntry->FileSize = ((file->size>>24)&0xFF)|((file->size>>8)&0xFF00)|((file->size<<8)&0xFF0000)|((file->size<<24)&0xFF000000); // for 68000 
//                            pEntry->StartCluster = (unsigned short)cluster;
//                            pEntry->HighCluster = fat32 ? (unsigned short)(cluster >> 16) : 0;
//                            pEntry->FileSize = file->size;
                            pEntry->StartCluster = (unsigned short)SwapBB(cluster); // for 68000
  407410:	dc 02 18 1a 	l.sh 0x1a(r2),r3
                            pEntry->HighCluster = fat32 ? (unsigned short)SwapBB(cluster >> 16) : 0; // for 68000
  407414:	18 60 00 41 	l.movhi r3,0x41
                            pEntry->Attributes = file->attributes;
                            pEntry->CreateDate = SwapBB(FILEDATE(2009, 9, 1));
                            pEntry->CreateTime = SwapBB(FILETIME(0, 0, 0));
                            pEntry->AccessDate = SwapBB(FILEDATE(2009, 9, 1));
                            pEntry->ModifyDate = SwapBB(FILEDATE(2009, 9, 1));
                            pEntry->ModifyTime = SwapBB(FILETIME(0, 0, 0));
  407418:	dc 02 28 16 	l.sh 0x16(r2),r5
//                            pEntry->FileSize = ((file->size>>24)&0xFF)|((file->size>>8)&0xFF00)|((file->size<<8)&0xFF0000)|((file->size<<24)&0xFF000000); // for 68000 
//                            pEntry->StartCluster = (unsigned short)cluster;
//                            pEntry->HighCluster = fat32 ? (unsigned short)(cluster >> 16) : 0;
//                            pEntry->FileSize = file->size;
                            pEntry->StartCluster = (unsigned short)SwapBB(cluster); // for 68000
                            pEntry->HighCluster = fat32 ? (unsigned short)SwapBB(cluster >> 16) : 0; // for 68000
  40741c:	a8 63 a3 51 	l.ori r3,r3,0xa351
  407420:	8c 63 00 00 	l.lbz r3,0x0(r3)
  407424:	bc 03 00 00 	l.sfeqi r3,0x0
  407428:	10 00 00 06 	l.bf 407440 <FileCreate+0x3b8>
  40742c:	b8 94 00 50 	l.srli r4,r20,0x10
  407430:	b8 64 00 48 	l.srli r3,r4,0x8
  407434:	b8 84 00 08 	l.slli r4,r4,0x8
  407438:	a4 84 ff ff 	l.andi r4,r4,0xffff
  40743c:	e0 63 20 04 	l.or r3,r3,r4
  407440:	dc 02 18 14 	l.sh 0x14(r2),r3
                            pEntry->FileSize = SwapBBBB(file->size); // for 68000
  407444:	18 c0 00 ff 	l.movhi r6,0xff
  407448:	84 70 00 18 	l.lwz r3,0x18(r16)
  40744c:	b8 a3 00 18 	l.slli r5,r3,0x18
  407450:	b8 83 00 58 	l.srli r4,r3,0x18
  407454:	e0 85 20 04 	l.or r4,r5,r4
  407458:	e0 a3 30 03 	l.and r5,r3,r6
  40745c:	a4 63 ff 00 	l.andi r3,r3,0xff00
  407460:	b8 a5 00 48 	l.srli r5,r5,0x8
  407464:	b8 63 00 08 	l.slli r3,r3,0x8
  407468:	e0 84 28 04 	l.or r4,r4,r5
  40746c:	e0 64 18 04 	l.or r3,r4,r3

                            // store dir entry
                            if (!MMC_Write(iDirectorySector - 1, sector_buffer))
  407470:	18 80 00 41 	l.movhi r4,0x41
//                            pEntry->StartCluster = (unsigned short)cluster;
//                            pEntry->HighCluster = fat32 ? (unsigned short)(cluster >> 16) : 0;
//                            pEntry->FileSize = file->size;
                            pEntry->StartCluster = (unsigned short)SwapBB(cluster); // for 68000
                            pEntry->HighCluster = fat32 ? (unsigned short)SwapBB(cluster >> 16) : 0; // for 68000
                            pEntry->FileSize = SwapBBBB(file->size); // for 68000
  407474:	d4 02 18 1c 	l.sw 0x1c(r2),r3

                            // store dir entry
                            if (!MMC_Write(iDirectorySector - 1, sector_buffer))
  407478:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  40747c:	07 ff f4 a0 	l.jal 4046fc <MMC_Write>
  407480:	a8 76 00 00 	l.ori r3,r22,0x0
  407484:	bc 2b 00 00 	l.sfnei r11,0x0
  407488:	10 00 00 07 	l.bf 4074a4 <FileCreate+0x41c>
  40748c:	a8 4b 00 00 	l.ori r2,r11,0x0
                            {
                                printf("FileCreate(): directory write failed!\r");
  407490:	18 60 00 41 	l.movhi r3,0x41
  407494:	07 ff f4 80 	l.jal 404694 <printf>
  407498:	a8 63 7d 2e 	l.ori r3,r3,0x7d2e
                                return(0);
  40749c:	00 00 00 40 	l.j 40759c <FileCreate+0x514>
  4074a0:	a9 62 00 00 	l.ori r11,r2,0x0
                            }

                            file->start_cluster = cluster;
                            file->cluster = cluster;
                            file->sector = 0;
  4074a4:	9c 40 00 00 	l.addi r2,r0,0x0
                            {
                                printf("FileCreate(): directory write failed!\r");
                                return(0);
                            }

                            file->start_cluster = cluster;
  4074a8:	d4 10 a0 20 	l.sw 0x20(r16),r20
                            file->cluster = cluster;
  4074ac:	d4 10 a0 1c 	l.sw 0x1c(r16),r20
                            file->sector = 0;
  4074b0:	d4 10 10 14 	l.sw 0x14(r16),r2
                            file->entry.sector = iDirectorySector - 1;
  4074b4:	d4 10 b0 0c 	l.sw 0xc(r16),r22
                            file->entry.index = iEntry & 0x0F;
  4074b8:	00 00 00 0c 	l.j 4074e8 <FileCreate+0x460>
  4074bc:	d4 10 c0 10 	l.sw 0x10(r16),r24

                            return(1);
                        }
                        buffer_index++;
  4074c0:	9d ce 00 01 	l.addi r14,r14,0x1
                        // remember current buffer index
                        buffered_fat_index = fat_index;
                    }

                    unsigned long buffer_size = fat32 ? 128 : 256;
                    while (buffer_index < buffer_size)
  4074c4:	e4 8e 38 00 	l.sfltu r14,r7
  4074c8:	13 ff ff 65 	l.bf 40725c <FileCreate+0x1d4>
  4074cc:	9c c6 00 02 	l.addi r6,r6,0x2
                            return(1);
                        }
                        buffer_index++;
                    }
                    buffer_index = 0; // go to the start of sector
                    fat_index++; // go to the next sector of FAT
  4074d0:	9e 52 00 01 	l.addi r18,r18,0x1

                            return(1);
                        }
                        buffer_index++;
                    }
                    buffer_index = 0; // go to the start of sector
  4074d4:	a9 c5 00 00 	l.ori r14,r5,0x0

                // free cluster is marked as 0x0000
                // last cluster in chain is 0xFFFF
                unsigned long fat_index = 0; // first sector of FAT
                unsigned long buffer_index = 2;  // two first entries are reserved
                while (fat_index < fat_size)
  4074d8:	84 7e 00 00 	l.lwz r3,0x0(r30)
  4074dc:	e4 92 18 00 	l.sfltu r18,r3
  4074e0:	13 ff ff 41 	l.bf 4071e4 <FileCreate+0x15c>
  4074e4:	15 00 00 00 	l.nop 0x0
                    }
                    buffer_index = 0; // go to the start of sector
                    fat_index++; // go to the next sector of FAT
                }

                return(1);
  4074e8:	00 00 00 2d 	l.j 40759c <FileCreate+0x514>
  4074ec:	9d 60 00 01 	l.addi r11,r0,0x1
        nEntries = fat32 ?  cluster_size << 4 : root_directory_size << 4; // 16 entries per sector
    }

    while (1)
    {
        for (iEntry = 0; iEntry < nEntries; iEntry++)
  4074f0:	e4 96 d0 00 	l.sfltu r22,r26
  4074f4:	13 ff ff 1d 	l.bf 407168 <FileCreate+0xe0>
  4074f8:	a7 16 00 0f 	l.andi r24,r22,0xf

                return(1);
            }
        }

        if (iDirectory || fat32) // subdirectory is a linked cluster chain
  4074fc:	bc 34 00 00 	l.sfnei r20,0x0
  407500:	10 00 00 06 	l.bf 407518 <FileCreate+0x490>
  407504:	15 00 00 00 	l.nop 0x0
  407508:	8c 7e 00 00 	l.lbz r3,0x0(r30)
  40750c:	bc 03 00 00 	l.sfeqi r3,0x0
  407510:	10 00 00 1f 	l.bf 40758c <FileCreate+0x504>
  407514:	18 60 00 41 	l.movhi r3,0x41
        {
            iDirectoryCluster = GetFATLink(iDirectoryCluster); // get next cluster in chain
  407518:	07 ff f8 bc 	l.jal 405808 <GetFATLink>
  40751c:	a8 6e 00 00 	l.ori r3,r14,0x0

            if (fat32 ? (iDirectoryCluster & 0x0FFFFFF8) == 0x0FFFFFF8 : (iDirectoryCluster & 0xFFF8) == 0xFFF8) // check if end of chain
  407520:	8c 7e 00 00 	l.lbz r3,0x0(r30)
  407524:	bc 03 00 00 	l.sfeqi r3,0x0
  407528:	10 00 00 07 	l.bf 407544 <FileCreate+0x4bc>
  40752c:	a9 cb 00 00 	l.ori r14,r11,0x0
  407530:	18 80 0f ff 	l.movhi r4,0xfff
  407534:	a8 84 ff f8 	l.ori r4,r4,0xfff8
  407538:	e0 6b 20 03 	l.and r3,r11,r4
  40753c:	00 00 00 05 	l.j 407550 <FileCreate+0x4c8>
  407540:	e0 63 20 05 	l.xor r3,r3,r4
  407544:	a8 c0 ff f8 	l.ori r6,r0,0xfff8
  407548:	a4 6b ff f8 	l.andi r3,r11,0xfff8
  40754c:	e0 63 30 05 	l.xor r3,r3,r6
  407550:	e0 80 18 02 	l.sub r4,r0,r3
  407554:	e0 64 18 04 	l.or r3,r4,r3
  407558:	ac 63 ff ff 	l.xori r3,r3,0xffffffff
  40755c:	b8 63 00 5f 	l.srli r3,r3,0x1f
  407560:	bc 23 00 00 	l.sfnei r3,0x0
  407564:	10 00 00 09 	l.bf 407588 <FileCreate+0x500>
  407568:	18 a0 00 41 	l.movhi r5,0x41
                break; // no more clusters in chain

            iDirectorySector = data_start + cluster_size * (iDirectoryCluster - 2); // calculate first sector address of the new cluster
  40756c:	9c 6e ff fe 	l.addi r3,r14,0xfffffffe
  407570:	a8 a5 a8 dc 	l.ori r5,r5,0xa8dc
  407574:	07 ff e2 bd 	l.jal 400068 <__mulsi3>
  407578:	8c 85 00 00 	l.lbz r4,0x0(r5)
  40757c:	84 bc 00 00 	l.lwz r5,0x0(r28)
        }
        else
            break;
    }
  407580:	03 ff fe f8 	l.j 407160 <FileCreate+0xd8>
  407584:	e0 ab 28 00 	l.add r5,r11,r5

    ErrorMessage("   Can\'t create config file!", 0);
  407588:	18 60 00 41 	l.movhi r3,0x41
  40758c:	9c 80 00 00 	l.addi r4,r0,0x0
  407590:	07 ff f3 c7 	l.jal 4044ac <ErrorMessage>
  407594:	a8 63 7d 55 	l.ori r3,r3,0x7d55
    return(0);
  407598:	9d 60 00 00 	l.addi r11,r0,0x0

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L1);
}
  40759c:	9c 21 00 34 	l.addi r1,r1,0x34
  4075a0:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  4075a4:	84 41 ff d4 	l.lwz r2,0xffffffd4(r1)
  4075a8:	85 c1 ff d8 	l.lwz r14,0xffffffd8(r1)
  4075ac:	86 01 ff dc 	l.lwz r16,0xffffffdc(r1)
  4075b0:	86 41 ff e0 	l.lwz r18,0xffffffe0(r1)
  4075b4:	86 81 ff e4 	l.lwz r20,0xffffffe4(r1)
  4075b8:	86 c1 ff e8 	l.lwz r22,0xffffffe8(r1)
  4075bc:	87 01 ff ec 	l.lwz r24,0xffffffec(r1)
  4075c0:	87 41 ff f0 	l.lwz r26,0xfffffff0(r1)
  4075c4:	87 81 ff f4 	l.lwz r28,0xfffffff4(r1)
  4075c8:	44 00 48 00 	l.jr r9
  4075cc:	87 c1 ff f8 	l.lwz r30,0xfffffff8(r1)

004075d0 <ScanDirectory>:
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
{
  4075d0:	d7 e1 17 d4 	l.sw 0xffffffd4(r1),r2
    unsigned char lfn_error = 1;
    /*
    unsigned long time;
    time = GetTimer(0);
    */
    lfn[0] = 0;
  4075d4:	18 40 00 42 	l.movhi r2,0x42
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
{
  4075d8:	d7 e1 77 d8 	l.sw 0xffffffd8(r1),r14
  4075dc:	d7 e1 f7 f8 	l.sw 0xfffffff8(r1),r30
  4075e0:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  4075e4:	d7 e1 87 dc 	l.sw 0xffffffdc(r1),r16
  4075e8:	d7 e1 97 e0 	l.sw 0xffffffe0(r1),r18
  4075ec:	d7 e1 a7 e4 	l.sw 0xffffffe4(r1),r20
  4075f0:	d7 e1 b7 e8 	l.sw 0xffffffe8(r1),r22
  4075f4:	d7 e1 c7 ec 	l.sw 0xffffffec(r1),r24
  4075f8:	d7 e1 d7 f0 	l.sw 0xfffffff0(r1),r26
  4075fc:	d7 e1 e7 f4 	l.sw 0xfffffff4(r1),r28
  407600:	ab c3 00 00 	l.ori r30,r3,0x0
    unsigned char lfn_error = 1;
    /*
    unsigned long time;
    time = GetTimer(0);
    */
    lfn[0] = 0;
  407604:	a8 42 0b b8 	l.ori r2,r2,0xbb8
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
{
  407608:	9c 21 ff 9c 	l.addi r1,r1,0xffffff9c
    unsigned char lfn_error = 1;
    /*
    unsigned long time;
    time = GetTimer(0);
    */
    lfn[0] = 0;
  40760c:	9c 60 00 00 	l.addi r3,r0,0x0
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
{
  407610:	d4 01 20 20 	l.sw 0x20(r1),r4
    unsigned char lfn_error = 1;
    /*
    unsigned long time;
    time = GetTimer(0);
    */
    lfn[0] = 0;
  407614:	d8 02 18 00 	l.sb 0x0(r2),r3
  407618:	18 40 00 41 	l.movhi r2,0x41
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
{
  40761c:	a9 c5 00 00 	l.ori r14,r5,0x0
    unsigned long time;
    time = GetTimer(0);
    */
    lfn[0] = 0;

    if (mode == SCAN_INIT)
  407620:	bc 3e 00 00 	l.sfnei r30,0x0
  407624:	10 00 00 1a 	l.bf 40768c <ScanDirectory+0xbc>
  407628:	a8 42 a3 52 	l.ori r2,r2,0xa352
    {
        nDirEntries = 0;
  40762c:	d8 02 f0 00 	l.sb 0x0(r2),r30
        iSelectedEntry = 0;
  407630:	18 40 00 41 	l.movhi r2,0x41
        for (i = 0; i < MAXDIRENTRIES; i++)
            sort_table[i] = i;
  407634:	9c 80 00 01 	l.addi r4,r0,0x1
    lfn[0] = 0;

    if (mode == SCAN_INIT)
    {
        nDirEntries = 0;
        iSelectedEntry = 0;
  407638:	a8 42 a3 53 	l.ori r2,r2,0xa353
        for (i = 0; i < MAXDIRENTRIES; i++)
            sort_table[i] = i;
  40763c:	9c a0 00 02 	l.addi r5,r0,0x2
    lfn[0] = 0;

    if (mode == SCAN_INIT)
    {
        nDirEntries = 0;
        iSelectedEntry = 0;
  407640:	d8 02 f0 00 	l.sb 0x0(r2),r30
        for (i = 0; i < MAXDIRENTRIES; i++)
            sort_table[i] = i;
  407644:	18 40 00 41 	l.movhi r2,0x41
  407648:	9c c0 00 03 	l.addi r6,r0,0x3
  40764c:	a8 42 e7 d0 	l.ori r2,r2,0xe7d0
  407650:	9c e0 00 04 	l.addi r7,r0,0x4
  407654:	d8 02 20 01 	l.sb 0x1(r2),r4
  407658:	d8 02 28 02 	l.sb 0x2(r2),r5
  40765c:	9c 60 00 05 	l.addi r3,r0,0x5
  407660:	9c 80 00 06 	l.addi r4,r0,0x6
  407664:	9c a0 00 07 	l.addi r5,r0,0x7
  407668:	d8 02 f0 00 	l.sb 0x0(r2),r30
  40766c:	d8 02 30 03 	l.sb 0x3(r2),r6
  407670:	d8 02 38 04 	l.sb 0x4(r2),r7
  407674:	d8 02 18 05 	l.sb 0x5(r2),r3
  407678:	d8 02 20 06 	l.sb 0x6(r2),r4
  40767c:	d8 02 28 07 	l.sb 0x7(r2),r5
             char i;
    unsigned char x;
    unsigned char nNewEntries = 0;      // indicates if a new entry has been found (used in scroll mode)
    char rc = 0; //return code
    char find_file = 0;
    char find_dir = 0;
  407680:	d4 01 f0 0c 	l.sw 0xc(r1),r30
    unsigned long nEntries;
             char i;
    unsigned char x;
    unsigned char nNewEntries = 0;      // indicates if a new entry has been found (used in scroll mode)
    char rc = 0; //return code
    char find_file = 0;
  407684:	00 00 00 46 	l.j 40779c <ScanDirectory+0x1cc>
  407688:	d4 01 f0 14 	l.sw 0x14(r1),r30
        for (i = 0; i < MAXDIRENTRIES; i++)
            sort_table[i] = i;
    }
    else
    {
        if (nDirEntries == 0) // directory is empty so there is no point in searching for any entry
  40768c:	8c 42 00 00 	l.lbz r2,0x0(r2)
  407690:	bc 02 00 00 	l.sfeqi r2,0x0
  407694:	10 00 06 d2 	l.bf 4091dc <ScanDirectory+0x1c0c>
  407698:	d4 01 10 00 	l.sw 0x0(r1),r2
            return 0;

        if (mode == SCAN_NEXT)
  40769c:	bc 3e 00 01 	l.sfnei r30,0x1
  4076a0:	10 00 00 0f 	l.bf 4076dc <ScanDirectory+0x10c>
  4076a4:	bc 3e ff ff 	l.sfnei r30,0xffffffff
        {
            if (iSelectedEntry + 1 < nDirEntries) // scroll within visible items
  4076a8:	18 a0 00 41 	l.movhi r5,0x41
  4076ac:	a8 a5 a3 53 	l.ori r5,r5,0xa353
  4076b0:	8c c5 00 00 	l.lbz r6,0x0(r5)
  4076b4:	9c c6 00 01 	l.addi r6,r6,0x1
  4076b8:	e5 66 10 00 	l.sfges r6,r2
  4076bc:	10 00 00 06 	l.bf 4076d4 <ScanDirectory+0x104>
  4076c0:	9c e0 00 00 	l.addi r7,r0,0x0
            {
                iSelectedEntry++;
  4076c4:	d8 05 30 00 	l.sb 0x0(r5),r6
                return 0;
  4076c8:	9c c0 00 00 	l.addi r6,r0,0x0
  4076cc:	00 00 06 c4 	l.j 4091dc <ScanDirectory+0x1c0c>
  4076d0:	d4 01 30 00 	l.sw 0x0(r1),r6
            }
            if (nDirEntries < MAXDIRENTRIES)
                return 0;
  4076d4:	00 00 00 1e 	l.j 40774c <ScanDirectory+0x17c>
  4076d8:	d4 01 38 00 	l.sw 0x0(r1),r7
        }
        else if (mode == SCAN_PREV)
  4076dc:	10 00 00 0c 	l.bf 40770c <ScanDirectory+0x13c>
  4076e0:	bc 3e 00 02 	l.sfnei r30,0x2
        {
            if (iSelectedEntry > 0) // scroll within visible items
  4076e4:	18 40 00 41 	l.movhi r2,0x41
  4076e8:	a8 42 a3 53 	l.ori r2,r2,0xa353
  4076ec:	8c a2 00 00 	l.lbz r5,0x0(r2)
  4076f0:	bc 05 00 00 	l.sfeqi r5,0x0
  4076f4:	10 00 00 26 	l.bf 40778c <ScanDirectory+0x1bc>
  4076f8:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
            {
                iSelectedEntry--;
  4076fc:	d8 02 28 00 	l.sb 0x0(r2),r5
                return 0;
  407700:	9c 40 00 00 	l.addi r2,r0,0x0
  407704:	00 00 06 b6 	l.j 4091dc <ScanDirectory+0x1c0c>
  407708:	d4 01 10 00 	l.sw 0x0(r1),r2
            }
        }
        else if (mode ==SCAN_NEXT_PAGE)
  40770c:	10 00 00 15 	l.bf 407760 <ScanDirectory+0x190>
  407710:	bc 3e ff fe 	l.sfnei r30,0xfffffffe
        {
            if (iSelectedEntry + 1 < nDirEntries)
  407714:	18 a0 00 41 	l.movhi r5,0x41
  407718:	84 61 00 00 	l.lwz r3,0x0(r1)
  40771c:	a8 a5 a3 53 	l.ori r5,r5,0xa353
  407720:	8c c5 00 00 	l.lbz r6,0x0(r5)
  407724:	9c c6 00 01 	l.addi r6,r6,0x1
  407728:	e5 66 18 00 	l.sfges r6,r3
  40772c:	10 00 00 06 	l.bf 407744 <ScanDirectory+0x174>
  407730:	9d 63 ff ff 	l.addi r11,r3,0xffffffff
            {
                iSelectedEntry = nDirEntries - 1;
                return 0;
  407734:	9c 80 00 00 	l.addi r4,r0,0x0
        }
        else if (mode ==SCAN_NEXT_PAGE)
        {
            if (iSelectedEntry + 1 < nDirEntries)
            {
                iSelectedEntry = nDirEntries - 1;
  407738:	d8 05 58 00 	l.sb 0x0(r5),r11
                return 0;
  40773c:	00 00 06 a8 	l.j 4091dc <ScanDirectory+0x1c0c>
  407740:	d4 01 20 00 	l.sw 0x0(r1),r4
            }
            if (nDirEntries < MAXDIRENTRIES)
                return 0;
  407744:	9c a0 00 00 	l.addi r5,r0,0x0
  407748:	d4 01 28 00 	l.sw 0x0(r1),r5
            if (iSelectedEntry + 1 < nDirEntries)
            {
                iSelectedEntry = nDirEntries - 1;
                return 0;
            }
            if (nDirEntries < MAXDIRENTRIES)
  40774c:	bc a2 00 07 	l.sfleui r2,0x7
  407750:	0c 00 00 10 	l.bnf 407790 <ScanDirectory+0x1c0>
  407754:	a4 4e 00 08 	l.andi r2,r14,0x8
    printf("ScanDirectory(): %lu ms\r", time >> 20);
    */
    return rc;

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}
  407758:	00 00 06 a2 	l.j 4091e0 <ScanDirectory+0x1c10>
  40775c:	85 61 00 00 	l.lwz r11,0x0(r1)
                return 0;
            }
            if (nDirEntries < MAXDIRENTRIES)
                return 0;
        }
        else if (mode == SCAN_PREV_PAGE)
  407760:	10 00 00 0c 	l.bf 407790 <ScanDirectory+0x1c0>
  407764:	a4 4e 00 08 	l.andi r2,r14,0x8
        {
            if (iSelectedEntry)
  407768:	18 40 00 41 	l.movhi r2,0x41
  40776c:	a8 42 a3 53 	l.ori r2,r2,0xa353
  407770:	8c a2 00 00 	l.lbz r5,0x0(r2)
  407774:	bc 05 00 00 	l.sfeqi r5,0x0
  407778:	10 00 00 05 	l.bf 40778c <ScanDirectory+0x1bc>
  40777c:	9c c0 00 00 	l.addi r6,r0,0x0
            {
                iSelectedEntry = 0;
                return 0;
  407780:	9c e0 00 00 	l.addi r7,r0,0x0
        }
        else if (mode == SCAN_PREV_PAGE)
        {
            if (iSelectedEntry)
            {
                iSelectedEntry = 0;
  407784:	00 00 06 95 	l.j 4091d8 <ScanDirectory+0x1c08>
  407788:	d8 02 30 00 	l.sb 0x0(r2),r6
                return 0;
            }
        }

        find_file = options & FIND_FILE;
  40778c:	a4 4e 00 08 	l.andi r2,r14,0x8
        find_dir = options & FIND_DIR;
  407790:	a4 6e 00 04 	l.andi r3,r14,0x4
                iSelectedEntry = 0;
                return 0;
            }
        }

        find_file = options & FIND_FILE;
  407794:	d4 01 10 14 	l.sw 0x14(r1),r2
        find_dir = options & FIND_DIR;
  407798:	d4 01 18 0c 	l.sw 0xc(r1),r3
    }

    if (iCurrentDirectory) // subdirectory
  40779c:	18 a0 00 41 	l.movhi r5,0x41
  4077a0:	a8 a5 a3 54 	l.ori r5,r5,0xa354
  4077a4:	87 05 00 00 	l.lwz r24,0x0(r5)
  4077a8:	bc 18 00 00 	l.sfeqi r24,0x0
  4077ac:	10 00 00 0d 	l.bf 4077e0 <ScanDirectory+0x210>
  4077b0:	18 a0 00 41 	l.movhi r5,0x41
    {
        iDirectoryCluster = iCurrentDirectory;
        iDirectorySector = data_start + cluster_size * (iDirectoryCluster - 2);
  4077b4:	18 a0 00 41 	l.movhi r5,0x41
  4077b8:	9c 78 ff fe 	l.addi r3,r24,0xfffffffe
  4077bc:	a8 a5 a8 dc 	l.ori r5,r5,0xa8dc
  4077c0:	8e 05 00 00 	l.lbz r16,0x0(r5)
  4077c4:	07 ff e2 29 	l.jal 400068 <__mulsi3>
  4077c8:	a8 90 00 00 	l.ori r4,r16,0x0
  4077cc:	18 a0 00 41 	l.movhi r5,0x41
  4077d0:	a8 a5 dc 8c 	l.ori r5,r5,0xdc8c
  4077d4:	84 a5 00 00 	l.lwz r5,0x0(r5)
  4077d8:	00 00 00 13 	l.j 407824 <ScanDirectory+0x254>
  4077dc:	e0 4b 28 00 	l.add r2,r11,r5
        nEntries = cluster_size << 4; // 16 entries per sector
    }
    else // root directory
    {
        iDirectoryCluster = root_directory_cluster;
  4077e0:	a8 a5 dc 90 	l.ori r5,r5,0xdc90
  4077e4:	87 05 00 00 	l.lwz r24,0x0(r5)
        iDirectorySector = root_directory_start;
  4077e8:	18 a0 00 41 	l.movhi r5,0x41
  4077ec:	a8 a5 dc 94 	l.ori r5,r5,0xdc94
  4077f0:	84 45 00 00 	l.lwz r2,0x0(r5)
        nEntries = fat32 ?  cluster_size << 4 : root_directory_size << 4; // 16 entries per sector
  4077f4:	18 a0 00 41 	l.movhi r5,0x41
  4077f8:	a8 a5 a3 51 	l.ori r5,r5,0xa351
  4077fc:	8c a5 00 00 	l.lbz r5,0x0(r5)
  407800:	bc 05 00 00 	l.sfeqi r5,0x0
  407804:	10 00 00 06 	l.bf 40781c <ScanDirectory+0x24c>
  407808:	18 a0 00 41 	l.movhi r5,0x41
  40780c:	18 a0 00 41 	l.movhi r5,0x41
  407810:	a8 a5 a8 dc 	l.ori r5,r5,0xa8dc
  407814:	00 00 00 04 	l.j 407824 <ScanDirectory+0x254>
  407818:	8e 05 00 00 	l.lbz r16,0x0(r5)
  40781c:	a8 a5 dc 98 	l.ori r5,r5,0xdc98
  407820:	86 05 00 00 	l.lwz r16,0x0(r5)
    unsigned long nEntries;
             char i;
    unsigned char x;
    unsigned char nNewEntries = 0;      // indicates if a new entry has been found (used in scroll mode)
    char rc = 0; //return code
    char find_file = 0;
  407824:	9c 80 00 01 	l.addi r4,r0,0x1
    }
    else // root directory
    {
        iDirectoryCluster = root_directory_cluster;
        iDirectorySector = root_directory_start;
        nEntries = fat32 ?  cluster_size << 4 : root_directory_size << 4; // 16 entries per sector
  407828:	ba 10 00 04 	l.slli r16,r16,0x4
    unsigned long nEntries;
             char i;
    unsigned char x;
    unsigned char nNewEntries = 0;      // indicates if a new entry has been found (used in scroll mode)
    char rc = 0; //return code
    char find_file = 0;
  40782c:	9e 40 00 00 	l.addi r18,r0,0x0
                {
                    is_file = ~pEntry->Attributes & ATTR_DIRECTORY;

                    if (!(pEntry->Attributes & (ATTR_VOLUME | ATTR_HIDDEN)) && (pEntry->Name[0] != '.' || pEntry->Name[1] != ' ')) // if not VOLUME label (also filter current directory entry)
                    {
                        if ((extension[0] == '*') || (strncmp((const char*)&pEntry->Name[8], extension, 3) == 0) || (options & SCAN_DIR && pEntry->Attributes & ATTR_DIRECTORY))
  407830:	e0 ee 20 03 	l.and r7,r14,r4
                                        else
                                            break; // don't check further entries as they are already sorted
                                    }
                                }
                            }
                            else if ((mode >= '0' && mode <= '9') || (mode >= 'A' && mode <= 'Z')) // find first entry beginning with given character
  407834:	9c be ff bf 	l.addi r5,r30,0xffffffbf
  407838:	9c de ff d0 	l.addi r6,r30,0xffffffd0

            if (pEntry->Name[0] != SLOT_EMPTY && pEntry->Name[0] != SLOT_DELETED) // valid entry??
            {
                if (pEntry->Attributes == ATTR_LFN) // long file name entry
                {
                    if (options & SCAN_LFN)
  40783c:	a5 ce 00 02 	l.andi r14,r14,0x2
    }
    else // root directory
    {
        iDirectoryCluster = root_directory_cluster;
        iDirectorySector = root_directory_start;
        nEntries = fat32 ?  cluster_size << 4 : root_directory_size << 4; // 16 entries per sector
  407840:	d4 01 80 18 	l.sw 0x18(r1),r16
    unsigned long nEntries;
             char i;
    unsigned char x;
    unsigned char nNewEntries = 0;      // indicates if a new entry has been found (used in scroll mode)
    char rc = 0; //return code
    char find_file = 0;
  407844:	d4 01 20 10 	l.sw 0x10(r1),r4
  407848:	aa 92 00 00 	l.ori r20,r18,0x0
  40784c:	aa d2 00 00 	l.ori r22,r18,0x0
  407850:	d4 01 90 00 	l.sw 0x0(r1),r18
  407854:	ab 92 00 00 	l.ori r28,r18,0x0
  407858:	ab 52 00 00 	l.ori r26,r18,0x0
                                        else
                                            break; // don't check further entries as they are already sorted
                                    }
                                }
                            }
                            else if ((mode >= '0' && mode <= '9') || (mode >= 'A' && mode <= 'Z')) // find first entry beginning with given character
  40785c:	d4 01 28 24 	l.sw 0x24(r1),r5
  407860:	d4 01 30 28 	l.sw 0x28(r1),r6
                {
                    is_file = ~pEntry->Attributes & ATTR_DIRECTORY;

                    if (!(pEntry->Attributes & (ATTR_VOLUME | ATTR_HIDDEN)) && (pEntry->Name[0] != '.' || pEntry->Name[1] != ' ')) // if not VOLUME label (also filter current directory entry)
                    {
                        if ((extension[0] == '*') || (strncmp((const char*)&pEntry->Name[8], extension, 3) == 0) || (options & SCAN_DIR && pEntry->Attributes & ATTR_DIRECTORY))
  407864:	d4 01 38 2c 	l.sw 0x2c(r1),r7

            if (pEntry->Name[0] != SLOT_EMPTY && pEntry->Name[0] != SLOT_DELETED) // valid entry??
            {
                if (pEntry->Attributes == ATTR_LFN) // long file name entry
                {
                    if (options & SCAN_LFN)
  407868:	d4 01 70 30 	l.sw 0x30(r1),r14
        nEntries = fat32 ?  cluster_size << 4 : root_directory_size << 4; // 16 entries per sector
    }

    while (1)
    {
        for (iEntry = 0; iEntry < nEntries; iEntry++)
  40786c:	9c 60 00 00 	l.addi r3,r0,0x0
  407870:	d4 01 c0 34 	l.sw 0x34(r1),r24
  407874:	d4 01 18 08 	l.sw 0x8(r1),r3
  407878:	00 00 05 31 	l.j 408d3c <ScanDirectory+0x176c>
  40787c:	ab 12 00 00 	l.ori r24,r18,0x0
        {
            if ((iEntry & 0xF) == 0) // first entry in sector, load the sector
  407880:	a4 a4 00 0f 	l.andi r5,r4,0xf
  407884:	bc 25 00 00 	l.sfnei r5,0x0
  407888:	10 00 00 2f 	l.bf 407944 <ScanDirectory+0x374>
  40788c:	9f 5a 00 20 	l.addi r26,r26,0x20
            {
                MMC_Read(iDirectorySector++, sector_buffer);
  407890:	18 80 00 41 	l.movhi r4,0x41
                pEntry = (DIRENTRY*)sector_buffer;
  407894:	1b 40 00 41 	l.movhi r26,0x41
    {
        for (iEntry = 0; iEntry < nEntries; iEntry++)
        {
            if ((iEntry & 0xF) == 0) // first entry in sector, load the sector
            {
                MMC_Read(iDirectorySector++, sector_buffer);
  407898:	9c a2 00 01 	l.addi r5,r2,0x1
  40789c:	a8 62 00 00 	l.ori r3,r2,0x0
  4078a0:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
                pEntry = (DIRENTRY*)sector_buffer;
  4078a4:	ab 5a a4 dc 	l.ori r26,r26,0xa4dc
    {
        for (iEntry = 0; iEntry < nEntries; iEntry++)
        {
            if ((iEntry & 0xF) == 0) // first entry in sector, load the sector
            {
                MMC_Read(iDirectorySector++, sector_buffer);
  4078a8:	07 ff f6 09 	l.jal 4050cc <MMC_Read>
  4078ac:	d4 01 28 1c 	l.sw 0x1c(r1),r5

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  4078b0:	9d 1a 00 1a 	l.addi r8,r26,0x1a
  4078b4:	9d 9a 00 14 	l.addi r12,r26,0x14
  4078b8:	9d 7a 00 1c 	l.addi r11,r26,0x1c
            {
                MMC_Read(iDirectorySector++, sector_buffer);
                pEntry = (DIRENTRY*)sector_buffer;
				for (i = 0; i < 16; i++) 
				{
					if (pEntry->Attributes != ATTR_LFN)
  4078bc:	8c 48 ff f1 	l.lbz r2,0xfffffff1(r8)
  4078c0:	bc 02 00 0f 	l.sfeqi r2,0xf
  4078c4:	10 00 00 17 	l.bf 407920 <ScanDirectory+0x350>
  4078c8:	18 c0 00 ff 	l.movhi r6,0xff
					{
						pEntry->StartCluster = SwapBB(pEntry->StartCluster);
  4078cc:	94 48 00 00 	l.lhz r2,0x0(r8)
  4078d0:	b8 62 00 08 	l.slli r3,r2,0x8
  4078d4:	b8 42 00 48 	l.srli r2,r2,0x8
  4078d8:	e0 43 10 04 	l.or r2,r3,r2
  4078dc:	dc 08 10 00 	l.sh 0x0(r8),r2
						pEntry->HighCluster = SwapBB(pEntry->HighCluster);
  4078e0:	94 4c 00 00 	l.lhz r2,0x0(r12)
  4078e4:	b8 62 00 08 	l.slli r3,r2,0x8
  4078e8:	b8 42 00 48 	l.srli r2,r2,0x8
  4078ec:	e0 43 10 04 	l.or r2,r3,r2
  4078f0:	dc 0c 10 00 	l.sh 0x0(r12),r2
						pEntry->FileSize = SwapBBBB(pEntry->FileSize);
  4078f4:	84 6b 00 00 	l.lwz r3,0x0(r11)
  4078f8:	b8 83 00 58 	l.srli r4,r3,0x18
  4078fc:	b8 43 00 18 	l.slli r2,r3,0x18
  407900:	e0 42 20 04 	l.or r2,r2,r4
  407904:	e0 83 30 03 	l.and r4,r3,r6
  407908:	a4 63 ff 00 	l.andi r3,r3,0xff00
  40790c:	b8 84 00 48 	l.srli r4,r4,0x8
  407910:	b8 63 00 08 	l.slli r3,r3,0x8
  407914:	e0 42 20 04 	l.or r2,r2,r4
  407918:	e0 42 18 04 	l.or r2,r2,r3
  40791c:	d4 0b 10 00 	l.sw 0x0(r11),r2
        {
            if ((iEntry & 0xF) == 0) // first entry in sector, load the sector
            {
                MMC_Read(iDirectorySector++, sector_buffer);
                pEntry = (DIRENTRY*)sector_buffer;
				for (i = 0; i < 16; i++) 
  407920:	18 e0 00 41 	l.movhi r7,0x41
				{
					if (pEntry->Attributes != ATTR_LFN)
					{
						pEntry->StartCluster = SwapBB(pEntry->StartCluster);
						pEntry->HighCluster = SwapBB(pEntry->HighCluster);
						pEntry->FileSize = SwapBBBB(pEntry->FileSize);
  407924:	9d 08 00 20 	l.addi r8,r8,0x20
        {
            if ((iEntry & 0xF) == 0) // first entry in sector, load the sector
            {
                MMC_Read(iDirectorySector++, sector_buffer);
                pEntry = (DIRENTRY*)sector_buffer;
				for (i = 0; i < 16; i++) 
  407928:	a8 e7 a6 f6 	l.ori r7,r7,0xa6f6
				{
					if (pEntry->Attributes != ATTR_LFN)
					{
						pEntry->StartCluster = SwapBB(pEntry->StartCluster);
						pEntry->HighCluster = SwapBB(pEntry->HighCluster);
						pEntry->FileSize = SwapBBBB(pEntry->FileSize);
  40792c:	9d 8c 00 20 	l.addi r12,r12,0x20
        {
            if ((iEntry & 0xF) == 0) // first entry in sector, load the sector
            {
                MMC_Read(iDirectorySector++, sector_buffer);
                pEntry = (DIRENTRY*)sector_buffer;
				for (i = 0; i < 16; i++) 
  407930:	e4 28 38 00 	l.sfne r8,r7
  407934:	13 ff ff e2 	l.bf 4078bc <ScanDirectory+0x2ec>
  407938:	9d 6b 00 20 	l.addi r11,r11,0x20
                pEntry = (DIRENTRY*)sector_buffer;
            }
            else
                pEntry++;

            if (pEntry->Name[0] != SLOT_EMPTY && pEntry->Name[0] != SLOT_DELETED) // valid entry??
  40793c:	00 00 00 04 	l.j 40794c <ScanDirectory+0x37c>
  407940:	8d da 00 00 	l.lbz r14,0x0(r26)
					pEntry++;
				}		
                pEntry = (DIRENTRY*)sector_buffer;
            }
            else
                pEntry++;
  407944:	d4 01 10 1c 	l.sw 0x1c(r1),r2

            if (pEntry->Name[0] != SLOT_EMPTY && pEntry->Name[0] != SLOT_DELETED) // valid entry??
  407948:	8d da 00 00 	l.lbz r14,0x0(r26)
  40794c:	bc 0e 00 e5 	l.sfeqi r14,0xe5
  407950:	10 00 04 f8 	l.bf 408d30 <ScanDirectory+0x1760>
  407954:	84 a1 00 08 	l.lwz r5,0x8(r1)
  407958:	bc 0e 00 00 	l.sfeqi r14,0x0
  40795c:	10 00 04 f6 	l.bf 408d34 <ScanDirectory+0x1764>
  407960:	84 41 00 1c 	l.lwz r2,0x1c(r1)
            {
                if (pEntry->Attributes == ATTR_LFN) // long file name entry
  407964:	8e 1a 00 0b 	l.lbz r16,0xb(r26)
  407968:	bc 30 00 0f 	l.sfnei r16,0xf
  40796c:	10 00 00 4f 	l.bf 407aa8 <ScanDirectory+0x4d8>
  407970:	a4 50 00 0a 	l.andi r2,r16,0xa
                {
                    if (options & SCAN_LFN)
  407974:	84 41 00 30 	l.lwz r2,0x30(r1)
  407978:	bc 02 00 00 	l.sfeqi r2,0x0
  40797c:	10 00 04 ed 	l.bf 408d30 <ScanDirectory+0x1760>
  407980:	a5 6e 00 40 	l.andi r11,r14,0x40
                    {
                        sequence_number = ((unsigned char*)pEntry)[0];
                        name_checksum = ((unsigned char*)pEntry)[13];
  407984:	8e da 00 0d 	l.lbz r22,0xd(r26)
                        ptr  = &lfn[((sequence_number & 0x1F) - 1) * 13];

                        if (sequence_number & 0x40)
  407988:	bc 2b 00 00 	l.sfnei r11,0x0
  40798c:	10 00 00 14 	l.bf 4079dc <ScanDirectory+0x40c>
  407990:	a4 ae 00 1f 	l.andi r5,r14,0x1f
                            lfn_error = 0;
                        else
                            if ((sequence_number & 0x1F) != (prev_sequence_number & 0x1F) - 1 || name_checksum != prev_name_checksum || (sequence_number & 0x1F) > sizeof(lfn) / 13 - 1)
  407994:	a4 f4 00 1f 	l.andi r7,r20,0x1f
  407998:	9c e7 ff ff 	l.addi r7,r7,0xffffffff
  40799c:	e0 e5 38 05 	l.xor r7,r5,r7
  4079a0:	e1 00 38 02 	l.sub r8,r0,r7
  4079a4:	e0 e8 38 04 	l.or r7,r8,r7
  4079a8:	bd 87 00 00 	l.sfltsi r7,0x0
  4079ac:	10 00 00 38 	l.bf 407a8c <ScanDirectory+0x4bc>
  4079b0:	18 60 00 41 	l.movhi r3,0x41
  4079b4:	a4 d8 00 ff 	l.andi r6,r24,0xff
  4079b8:	e4 26 b0 00 	l.sfne r6,r22
  4079bc:	10 00 00 34 	l.bf 407a8c <ScanDirectory+0x4bc>
  4079c0:	bc 45 00 13 	l.sfgtui r5,0x13
  4079c4:	10 00 00 32 	l.bf 407a8c <ScanDirectory+0x4bc>
  4079c8:	15 00 00 00 	l.nop 0x0
                                lfn_error = 1;

                        prev_sequence_number = sequence_number;
                        prev_name_checksum = name_checksum;

                        if (!lfn_error)
  4079cc:	84 61 00 10 	l.lwz r3,0x10(r1)
  4079d0:	bc 23 00 00 	l.sfnei r3,0x0
  4079d4:	10 00 00 2e 	l.bf 407a8c <ScanDirectory+0x4bc>
  4079d8:	18 60 00 41 	l.movhi r3,0x41
                {
                    if (options & SCAN_LFN)
                    {
                        sequence_number = ((unsigned char*)pEntry)[0];
                        name_checksum = ((unsigned char*)pEntry)[13];
                        ptr  = &lfn[((sequence_number & 0x1F) - 1) * 13];
  4079dc:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
                        prev_sequence_number = sequence_number;
                        prev_name_checksum = name_checksum;

                        if (!lfn_error)
                        {
                            *ptr++ = ((unsigned char*)pEntry)[1];
  4079e0:	18 80 00 42 	l.movhi r4,0x42
                {
                    if (options & SCAN_LFN)
                    {
                        sequence_number = ((unsigned char*)pEntry)[0];
                        name_checksum = ((unsigned char*)pEntry)[13];
                        ptr  = &lfn[((sequence_number & 0x1F) - 1) * 13];
  4079e4:	e0 45 28 00 	l.add r2,r5,r5
                        prev_sequence_number = sequence_number;
                        prev_name_checksum = name_checksum;

                        if (!lfn_error)
                        {
                            *ptr++ = ((unsigned char*)pEntry)[1];
  4079e8:	a8 84 0b b8 	l.ori r4,r4,0xbb8
                {
                    if (options & SCAN_LFN)
                    {
                        sequence_number = ((unsigned char*)pEntry)[0];
                        name_checksum = ((unsigned char*)pEntry)[13];
                        ptr  = &lfn[((sequence_number & 0x1F) - 1) * 13];
  4079ec:	e0 42 28 00 	l.add r2,r2,r5
                            *ptr++ = ((unsigned char*)pEntry)[22];
                            *ptr++ = ((unsigned char*)pEntry)[24]; // next 6 characters
                            *ptr++ = ((unsigned char*)pEntry)[28];
                            *ptr++ = ((unsigned char*)pEntry)[30]; // last 2 characters

                            if (sequence_number & 0x40) // last lfn part
  4079f0:	bc 0b 00 00 	l.sfeqi r11,0x0
                {
                    if (options & SCAN_LFN)
                    {
                        sequence_number = ((unsigned char*)pEntry)[0];
                        name_checksum = ((unsigned char*)pEntry)[13];
                        ptr  = &lfn[((sequence_number & 0x1F) - 1) * 13];
  4079f4:	b8 42 00 02 	l.slli r2,r2,0x2
  4079f8:	e0 42 28 00 	l.add r2,r2,r5
                        prev_sequence_number = sequence_number;
                        prev_name_checksum = name_checksum;

                        if (!lfn_error)
                        {
                            *ptr++ = ((unsigned char*)pEntry)[1];
  4079fc:	8c ba 00 01 	l.lbz r5,0x1(r26)
  407a00:	e0 42 20 00 	l.add r2,r2,r4
  407a04:	d8 02 28 00 	l.sb 0x0(r2),r5
                            *ptr++ = ((unsigned char*)pEntry)[3];
  407a08:	8c da 00 03 	l.lbz r6,0x3(r26)
  407a0c:	d8 02 30 01 	l.sb 0x1(r2),r6
                            *ptr++ = ((unsigned char*)pEntry)[5];
  407a10:	8c fa 00 05 	l.lbz r7,0x5(r26)
  407a14:	d8 02 38 02 	l.sb 0x2(r2),r7
                            *ptr++ = ((unsigned char*)pEntry)[7];
  407a18:	8c 7a 00 07 	l.lbz r3,0x7(r26)
  407a1c:	d8 02 18 03 	l.sb 0x3(r2),r3
                            *ptr++ = ((unsigned char*)pEntry)[9]; // first 5 characters
  407a20:	8c 9a 00 09 	l.lbz r4,0x9(r26)
  407a24:	d8 02 20 04 	l.sb 0x4(r2),r4
                            *ptr++ = ((unsigned char*)pEntry)[14];
  407a28:	8c ba 00 0e 	l.lbz r5,0xe(r26)
  407a2c:	d8 02 28 05 	l.sb 0x5(r2),r5
                            *ptr++ = ((unsigned char*)pEntry)[16];
  407a30:	8c da 00 10 	l.lbz r6,0x10(r26)
  407a34:	d8 02 30 06 	l.sb 0x6(r2),r6
                            *ptr++ = ((unsigned char*)pEntry)[18];
  407a38:	8c fa 00 12 	l.lbz r7,0x12(r26)
  407a3c:	d8 02 38 07 	l.sb 0x7(r2),r7
                            *ptr++ = ((unsigned char*)pEntry)[20];
  407a40:	8c 7a 00 14 	l.lbz r3,0x14(r26)
  407a44:	d8 02 18 08 	l.sb 0x8(r2),r3
                            *ptr++ = ((unsigned char*)pEntry)[22];
  407a48:	8c 9a 00 16 	l.lbz r4,0x16(r26)
  407a4c:	d8 02 20 09 	l.sb 0x9(r2),r4
                            *ptr++ = ((unsigned char*)pEntry)[24]; // next 6 characters
  407a50:	8c ba 00 18 	l.lbz r5,0x18(r26)
  407a54:	d8 02 28 0a 	l.sb 0xa(r2),r5
                            *ptr++ = ((unsigned char*)pEntry)[28];
  407a58:	8c da 00 1c 	l.lbz r6,0x1c(r26)
  407a5c:	d8 02 30 0b 	l.sb 0xb(r2),r6
  407a60:	9c 42 00 0c 	l.addi r2,r2,0xc
                            *ptr++ = ((unsigned char*)pEntry)[30]; // last 2 characters
  407a64:	8c fa 00 1e 	l.lbz r7,0x1e(r26)

                            if (sequence_number & 0x40) // last lfn part
  407a68:	10 00 04 ae 	l.bf 408d20 <ScanDirectory+0x1750>
  407a6c:	d8 02 38 00 	l.sb 0x0(r2),r7
                                *ptr++ = 0;
  407a70:	9c 60 00 00 	l.addi r3,r0,0x0
  407a74:	9c 80 00 00 	l.addi r4,r0,0x0
  407a78:	d8 02 18 01 	l.sb 0x1(r2),r3
                if (pEntry->Attributes == ATTR_LFN) // long file name entry
                {
                    if (options & SCAN_LFN)
                    {
                        sequence_number = ((unsigned char*)pEntry)[0];
                        name_checksum = ((unsigned char*)pEntry)[13];
  407a7c:	ab 16 00 00 	l.ori r24,r22,0x0
                            *ptr++ = ((unsigned char*)pEntry)[24]; // next 6 characters
                            *ptr++ = ((unsigned char*)pEntry)[28];
                            *ptr++ = ((unsigned char*)pEntry)[30]; // last 2 characters

                            if (sequence_number & 0x40) // last lfn part
                                *ptr++ = 0;
  407a80:	aa 8e 00 00 	l.ori r20,r14,0x0
  407a84:	00 00 04 aa 	l.j 408d2c <ScanDirectory+0x175c>
  407a88:	d4 01 20 10 	l.sw 0x10(r1),r4
                if (pEntry->Attributes == ATTR_LFN) // long file name entry
                {
                    if (options & SCAN_LFN)
                    {
                        sequence_number = ((unsigned char*)pEntry)[0];
                        name_checksum = ((unsigned char*)pEntry)[13];
  407a8c:	ab 16 00 00 	l.ori r24,r22,0x0

                            if (sequence_number & 0x40) // last lfn part
                                *ptr++ = 0;
                        }
                        else
                            printf("LFN error!\r");
  407a90:	a8 63 7d 72 	l.ori r3,r3,0x7d72
  407a94:	07 ff f3 00 	l.jal 404694 <printf>
  407a98:	aa 8e 00 00 	l.ori r20,r14,0x0
  407a9c:	9c a0 00 01 	l.addi r5,r0,0x1
  407aa0:	00 00 04 a3 	l.j 408d2c <ScanDirectory+0x175c>
  407aa4:	d4 01 28 10 	l.sw 0x10(r1),r5
                }
                else // if not an LFN entry
                {
                    is_file = ~pEntry->Attributes & ATTR_DIRECTORY;

                    if (!(pEntry->Attributes & (ATTR_VOLUME | ATTR_HIDDEN)) && (pEntry->Name[0] != '.' || pEntry->Name[1] != ' ')) // if not VOLUME label (also filter current directory entry)
  407aa8:	bc 22 00 00 	l.sfnei r2,0x0
  407aac:	10 00 04 99 	l.bf 408d10 <ScanDirectory+0x1740>
  407ab0:	18 60 00 42 	l.movhi r3,0x42
  407ab4:	84 5a 00 00 	l.lwz r2,0x0(r26)
  407ab8:	18 c0 ff ff 	l.movhi r6,0xffff
  407abc:	18 e0 2e 20 	l.movhi r7,0x2e20
  407ac0:	e0 42 30 03 	l.and r2,r2,r6
  407ac4:	e4 02 38 00 	l.sfeq r2,r7
  407ac8:	10 00 04 91 	l.bf 408d0c <ScanDirectory+0x173c>
  407acc:	84 61 00 20 	l.lwz r3,0x20(r1)
                    {
                        if ((extension[0] == '*') || (strncmp((const char*)&pEntry->Name[8], extension, 3) == 0) || (options & SCAN_DIR && pEntry->Attributes & ATTR_DIRECTORY))
  407ad0:	90 43 00 00 	l.lbs r2,0x0(r3)
  407ad4:	bc 02 00 2a 	l.sfeqi r2,0x2a
  407ad8:	10 00 00 10 	l.bf 407b18 <ScanDirectory+0x548>
  407adc:	9c 7a 00 08 	l.addi r3,r26,0x8
  407ae0:	84 81 00 20 	l.lwz r4,0x20(r1)
  407ae4:	07 ff e2 0c 	l.jal 400314 <strncmp>
  407ae8:	9c a0 00 03 	l.addi r5,r0,0x3
  407aec:	bc 0b 00 00 	l.sfeqi r11,0x0
  407af0:	10 00 00 0b 	l.bf 407b1c <ScanDirectory+0x54c>
  407af4:	bc 3e 00 00 	l.sfnei r30,0x0
  407af8:	84 81 00 2c 	l.lwz r4,0x2c(r1)
  407afc:	bc 04 00 00 	l.sfeqi r4,0x0
  407b00:	10 00 04 84 	l.bf 408d10 <ScanDirectory+0x1740>
  407b04:	18 60 00 42 	l.movhi r3,0x42
  407b08:	a4 50 00 10 	l.andi r2,r16,0x10
  407b0c:	bc 02 00 00 	l.sfeqi r2,0x0
  407b10:	10 00 04 81 	l.bf 408d14 <ScanDirectory+0x1744>
  407b14:	9c 80 00 00 	l.addi r4,r0,0x0
                        {
                            if (mode == SCAN_INIT)
  407b18:	bc 3e 00 00 	l.sfnei r30,0x0
  407b1c:	10 00 00 87 	l.bf 407d38 <ScanDirectory+0x768>
  407b20:	bc 3e 00 03 	l.sfnei r30,0x3
                            { // scan the directory table and return first MAXDIRENTRIES alphabetically sorted entries
                                if (nDirEntries < MAXDIRENTRIES) // initial directory scan (first 8 entries)
  407b24:	18 a0 00 41 	l.movhi r5,0x41
  407b28:	a8 a5 a3 52 	l.ori r5,r5,0xa352
  407b2c:	8c 45 00 00 	l.lbz r2,0x0(r5)
  407b30:	bc 42 00 07 	l.sfgtui r2,0x7
  407b34:	10 00 00 25 	l.bf 407bc8 <ScanDirectory+0x5f8>
  407b38:	18 c0 00 41 	l.movhi r6,0x41
                                {
                                    DirEntry[nDirEntries] = *pEntry; // add new entry at first empty slot in storage buffer
  407b3c:	18 c0 00 41 	l.movhi r6,0x41
  407b40:	b8 a2 00 05 	l.slli r5,r2,0x5
  407b44:	a8 c6 e6 d0 	l.ori r6,r6,0xe6d0
  407b48:	a8 9a 00 00 	l.ori r4,r26,0x0
  407b4c:	e0 65 30 00 	l.add r3,r5,r6
  407b50:	07 ff e1 cc 	l.jal 400280 <memcpy>
  407b54:	9c a0 00 20 	l.addi r5,r0,0x20
                                    DirEntryLFN[nDirEntries][0] = 0;
  407b58:	b9 02 00 02 	l.slli r8,r2,0x2
  407b5c:	b8 a2 00 08 	l.slli r5,r2,0x8
  407b60:	18 e0 00 41 	l.movhi r7,0x41
                                    if (lfn[0])
  407b64:	18 60 00 42 	l.movhi r3,0x42
                            if (mode == SCAN_INIT)
                            { // scan the directory table and return first MAXDIRENTRIES alphabetically sorted entries
                                if (nDirEntries < MAXDIRENTRIES) // initial directory scan (first 8 entries)
                                {
                                    DirEntry[nDirEntries] = *pEntry; // add new entry at first empty slot in storage buffer
                                    DirEntryLFN[nDirEntries][0] = 0;
  407b68:	e0 a8 28 00 	l.add r5,r8,r5
  407b6c:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  407b70:	e0 a5 10 00 	l.add r5,r5,r2
                                    if (lfn[0])
  407b74:	a8 63 0b b8 	l.ori r3,r3,0xbb8
                            if (mode == SCAN_INIT)
                            { // scan the directory table and return first MAXDIRENTRIES alphabetically sorted entries
                                if (nDirEntries < MAXDIRENTRIES) // initial directory scan (first 8 entries)
                                {
                                    DirEntry[nDirEntries] = *pEntry; // add new entry at first empty slot in storage buffer
                                    DirEntryLFN[nDirEntries][0] = 0;
  407b78:	e1 c5 38 00 	l.add r14,r5,r7
                                    if (lfn[0])
  407b7c:	90 a3 00 00 	l.lbs r5,0x0(r3)
  407b80:	bc 05 00 00 	l.sfeqi r5,0x0
  407b84:	10 00 00 0c 	l.bf 407bb4 <ScanDirectory+0x5e4>
  407b88:	d8 0e f0 00 	l.sb 0x0(r14),r30
                                        if (lfn_checksum(pEntry->Name) == name_checksum)
  407b8c:	07 ff ec 40 	l.jal 402c8c <lfn_checksum>
  407b90:	a8 7a 00 00 	l.ori r3,r26,0x0
  407b94:	e4 2b b0 00 	l.sfne r11,r22
  407b98:	10 00 00 08 	l.bf 407bb8 <ScanDirectory+0x5e8>
  407b9c:	18 80 00 41 	l.movhi r4,0x41
                                            strncpy(DirEntryLFN[nDirEntries], lfn, sizeof(lfn));
  407ba0:	18 80 00 42 	l.movhi r4,0x42
  407ba4:	a8 6e 00 00 	l.ori r3,r14,0x0
  407ba8:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  407bac:	07 ff e1 f0 	l.jal 40036c <strncpy>
  407bb0:	9c a0 01 05 	l.addi r5,r0,0x105

                                    nDirEntries++;
  407bb4:	18 80 00 41 	l.movhi r4,0x41
  407bb8:	9c 42 00 01 	l.addi r2,r2,0x1
  407bbc:	a8 84 a3 52 	l.ori r4,r4,0xa352
  407bc0:	00 00 00 2d 	l.j 407c74 <ScanDirectory+0x6a4>
  407bc4:	d8 04 10 00 	l.sb 0x0(r4),r2
                                }
                                else
                                {
                                    if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[MAXDIRENTRIES-1]], DirEntryLFN[sort_table[MAXDIRENTRIES-1]]) < 0) // compare new entry with the last already found
  407bc8:	18 e0 00 41 	l.movhi r7,0x41
  407bcc:	a8 c6 e7 d0 	l.ori r6,r6,0xe7d0
  407bd0:	18 60 00 41 	l.movhi r3,0x41
  407bd4:	8c a6 00 07 	l.lbz r5,0x7(r6)
  407bd8:	b8 45 00 08 	l.slli r2,r5,0x8
  407bdc:	b8 c5 00 02 	l.slli r6,r5,0x2
  407be0:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  407be4:	a8 63 e6 d0 	l.ori r3,r3,0xe6d0
  407be8:	e0 c6 10 00 	l.add r6,r6,r2
  407bec:	18 80 00 42 	l.movhi r4,0x42
  407bf0:	e0 c6 28 00 	l.add r6,r6,r5
  407bf4:	b8 a5 00 05 	l.slli r5,r5,0x5
  407bf8:	e1 c6 38 00 	l.add r14,r6,r7
  407bfc:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  407c00:	e0 45 18 00 	l.add r2,r5,r3
  407c04:	a8 ce 00 00 	l.ori r6,r14,0x0
  407c08:	a8 7a 00 00 	l.ori r3,r26,0x0
  407c0c:	07 ff ec 30 	l.jal 402ccc <CompareDirEntries>
  407c10:	a8 a2 00 00 	l.ori r5,r2,0x0
  407c14:	bd 6b 00 00 	l.sfgesi r11,0x0
  407c18:	10 00 00 18 	l.bf 407c78 <ScanDirectory+0x6a8>
  407c1c:	18 a0 00 41 	l.movhi r5,0x41
                                    {
                                        DirEntry[sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the new one if appropriate
  407c20:	a8 62 00 00 	l.ori r3,r2,0x0
  407c24:	a8 9a 00 00 	l.ori r4,r26,0x0
  407c28:	07 ff e1 96 	l.jal 400280 <memcpy>
  407c2c:	9c a0 00 20 	l.addi r5,r0,0x20
                                        DirEntryLFN[sort_table[MAXDIRENTRIES-1]][0] = 0;
                                        if (lfn[0])
  407c30:	18 80 00 42 	l.movhi r4,0x42
                                else
                                {
                                    if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[MAXDIRENTRIES-1]], DirEntryLFN[sort_table[MAXDIRENTRIES-1]]) < 0) // compare new entry with the last already found
                                    {
                                        DirEntry[sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the new one if appropriate
                                        DirEntryLFN[sort_table[MAXDIRENTRIES-1]][0] = 0;
  407c34:	d8 0e f0 00 	l.sb 0x0(r14),r30
                                        if (lfn[0])
  407c38:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  407c3c:	90 44 00 00 	l.lbs r2,0x0(r4)
  407c40:	bc 02 00 00 	l.sfeqi r2,0x0
  407c44:	10 00 00 0d 	l.bf 407c78 <ScanDirectory+0x6a8>
  407c48:	18 a0 00 41 	l.movhi r5,0x41
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
  407c4c:	07 ff ec 10 	l.jal 402c8c <lfn_checksum>
  407c50:	a8 7a 00 00 	l.ori r3,r26,0x0
  407c54:	e4 2b b0 00 	l.sfne r11,r22
  407c58:	10 00 00 08 	l.bf 407c78 <ScanDirectory+0x6a8>
  407c5c:	18 a0 00 41 	l.movhi r5,0x41
                                                strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
  407c60:	18 80 00 42 	l.movhi r4,0x42
  407c64:	a8 6e 00 00 	l.ori r3,r14,0x0
  407c68:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  407c6c:	07 ff e1 c0 	l.jal 40036c <strncpy>
  407c70:	9c a0 01 05 	l.addi r5,r0,0x105
                                    }
                                }

                                for (i = nDirEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  407c74:	18 a0 00 41 	l.movhi r5,0x41

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  407c78:	18 c0 00 41 	l.movhi r6,0x41
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
                                                strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                    }
                                }

                                for (i = nDirEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  407c7c:	a8 a5 a3 52 	l.ori r5,r5,0xa352

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  407c80:	a8 c6 e7 d0 	l.ori r6,r6,0xe7d0
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
                                                strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                    }
                                }

                                for (i = nDirEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  407c84:	8c 45 00 00 	l.lbz r2,0x0(r5)
  407c88:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
  407c8c:	d4 01 f0 04 	l.sw 0x4(r1),r30
  407c90:	b8 42 00 18 	l.slli r2,r2,0x18
  407c94:	ab d8 00 00 	l.ori r30,r24,0x0
  407c98:	ab 14 00 00 	l.ori r24,r20,0x0
  407c9c:	b8 42 00 98 	l.srai r2,r2,0x18

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  407ca0:	e2 02 30 00 	l.add r16,r2,r6
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
                                                strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                    }
                                }

                                for (i = nDirEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  407ca4:	aa 42 00 00 	l.ori r18,r2,0x0
  407ca8:	00 00 00 1f 	l.j 407d24 <ScanDirectory+0x754>
  407cac:	aa 90 00 00 	l.ori r20,r16,0x0
                                {
                                    if (CompareDirEntries(&DirEntry[sort_table[i]], DirEntryLFN[sort_table[i]], &DirEntry[sort_table[i-1]], DirEntryLFN[sort_table[i-1]])<0) // compare items and swap if necessary
  407cb0:	8e 14 00 00 	l.lbz r16,0x0(r20)
  407cb4:	8d d4 ff ff 	l.lbz r14,0xffffffff(r20)
  407cb8:	b8 50 00 08 	l.slli r2,r16,0x8
  407cbc:	b8 90 00 02 	l.slli r4,r16,0x2
  407cc0:	b8 ce 00 02 	l.slli r6,r14,0x2
  407cc4:	e0 84 10 00 	l.add r4,r4,r2
  407cc8:	b8 4e 00 08 	l.slli r2,r14,0x8
  407ccc:	b8 70 00 05 	l.slli r3,r16,0x5
  407cd0:	b8 ae 00 05 	l.slli r5,r14,0x5
  407cd4:	e0 c6 10 00 	l.add r6,r6,r2
  407cd8:	18 40 00 41 	l.movhi r2,0x41
  407cdc:	a8 e7 e6 d0 	l.ori r7,r7,0xe6d0
  407ce0:	a8 42 de a8 	l.ori r2,r2,0xdea8
  407ce4:	e0 84 80 00 	l.add r4,r4,r16
  407ce8:	e0 c6 70 00 	l.add r6,r6,r14
  407cec:	e0 63 38 00 	l.add r3,r3,r7
  407cf0:	e0 84 10 00 	l.add r4,r4,r2
  407cf4:	e0 a5 38 00 	l.add r5,r5,r7
  407cf8:	e0 c6 10 00 	l.add r6,r6,r2
  407cfc:	07 ff eb f4 	l.jal 402ccc <CompareDirEntries>
  407d00:	9e 94 ff ff 	l.addi r20,r20,0xffffffff
  407d04:	bd 6b 00 00 	l.sfgesi r11,0x0
  407d08:	10 00 03 fe 	l.bf 408d00 <ScanDirectory+0x1730>
  407d0c:	15 00 00 00 	l.nop 0x0
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
                                                strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                    }
                                }

                                for (i = nDirEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  407d10:	9e 52 ff ff 	l.addi r18,r18,0xffffffff
                                {
                                    if (CompareDirEntries(&DirEntry[sort_table[i]], DirEntryLFN[sort_table[i]], &DirEntry[sort_table[i-1]], DirEntryLFN[sort_table[i-1]])<0) // compare items and swap if necessary
                                    {
                                        x = sort_table[i];
                                        sort_table[i] = sort_table[i-1];
  407d14:	d8 14 70 01 	l.sb 0x1(r20),r14
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
                                                strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                    }
                                }

                                for (i = nDirEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  407d18:	ba 52 00 18 	l.slli r18,r18,0x18
                                {
                                    if (CompareDirEntries(&DirEntry[sort_table[i]], DirEntryLFN[sort_table[i]], &DirEntry[sort_table[i-1]], DirEntryLFN[sort_table[i-1]])<0) // compare items and swap if necessary
                                    {
                                        x = sort_table[i];
                                        sort_table[i] = sort_table[i-1];
                                        sort_table[i-1] = x;
  407d1c:	d8 14 80 00 	l.sb 0x0(r20),r16
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
                                                strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                    }
                                }

                                for (i = nDirEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  407d20:	ba 52 00 98 	l.srai r18,r18,0x18
  407d24:	bd 52 00 00 	l.sfgtsi r18,0x0
  407d28:	13 ff ff e2 	l.bf 407cb0 <ScanDirectory+0x6e0>
  407d2c:	18 e0 00 41 	l.movhi r7,0x41
  407d30:	00 00 03 f5 	l.j 408d04 <ScanDirectory+0x1734>
  407d34:	aa 98 00 00 	l.ori r20,r24,0x0
                                    }
                                    else
                                        break; // don't check further entries as they are already sorted
                                }
                            }
                            else if (mode == SCAN_INIT_FIRST)
  407d38:	10 00 00 43 	l.bf 407e44 <ScanDirectory+0x874>
  407d3c:	bc 3e 00 04 	l.sfnei r30,0x4
                            { // find a dir entry with given cluster number and store it in the buffer
                                if (pEntry->StartCluster + (fat32 ? (pEntry->HighCluster & 0x0FFF) << 16 : 0) == iPreviousDirectory)
  407d40:	18 60 00 41 	l.movhi r3,0x41
  407d44:	a8 63 a3 51 	l.ori r3,r3,0xa351
  407d48:	8c a3 00 00 	l.lbz r5,0x0(r3)
  407d4c:	bc 05 00 00 	l.sfeqi r5,0x0
  407d50:	10 00 00 05 	l.bf 407d64 <ScanDirectory+0x794>
  407d54:	94 5a 00 1a 	l.lhz r2,0x1a(r26)
  407d58:	94 ba 00 14 	l.lhz r5,0x14(r26)
  407d5c:	a4 a5 0f ff 	l.andi r5,r5,0xfff
  407d60:	b8 a5 00 10 	l.slli r5,r5,0x10
  407d64:	18 80 00 41 	l.movhi r4,0x41
  407d68:	e0 45 10 00 	l.add r2,r5,r2
  407d6c:	a8 84 a3 58 	l.ori r4,r4,0xa358
  407d70:	84 a4 00 00 	l.lwz r5,0x0(r4)
  407d74:	e4 22 28 00 	l.sfne r2,r5
  407d78:	10 00 03 e6 	l.bf 408d10 <ScanDirectory+0x1740>
  407d7c:	18 60 00 42 	l.movhi r3,0x42
                                { // directory entry found
                                    for (i = 0; i< MAXDIRENTRIES; i++)
                                        sort_table[i] = i; // init sorting table
  407d80:	18 a0 00 41 	l.movhi r5,0x41
  407d84:	9c c0 00 00 	l.addi r6,r0,0x0
  407d88:	a8 a5 e7 d0 	l.ori r5,r5,0xe7d0
  407d8c:	9c e0 00 01 	l.addi r7,r0,0x1
  407d90:	9c 40 00 02 	l.addi r2,r0,0x2
  407d94:	9c 60 00 03 	l.addi r3,r0,0x3
  407d98:	d8 05 30 00 	l.sb 0x0(r5),r6
  407d9c:	d8 05 38 01 	l.sb 0x1(r5),r7
  407da0:	d8 05 10 02 	l.sb 0x2(r5),r2
  407da4:	d8 05 18 03 	l.sb 0x3(r5),r3
  407da8:	9c e0 00 06 	l.addi r7,r0,0x6
  407dac:	9c 80 00 04 	l.addi r4,r0,0x4
  407db0:	9c c0 00 05 	l.addi r6,r0,0x5
  407db4:	9c 40 00 07 	l.addi r2,r0,0x7

                                    nDirEntries = 1;
  407db8:	18 60 00 41 	l.movhi r3,0x41
                            else if (mode == SCAN_INIT_FIRST)
                            { // find a dir entry with given cluster number and store it in the buffer
                                if (pEntry->StartCluster + (fat32 ? (pEntry->HighCluster & 0x0FFF) << 16 : 0) == iPreviousDirectory)
                                { // directory entry found
                                    for (i = 0; i< MAXDIRENTRIES; i++)
                                        sort_table[i] = i; // init sorting table
  407dbc:	d8 05 20 04 	l.sb 0x4(r5),r4
  407dc0:	d8 05 30 05 	l.sb 0x5(r5),r6
  407dc4:	d8 05 38 06 	l.sb 0x6(r5),r7
  407dc8:	d8 05 10 07 	l.sb 0x7(r5),r2

                                    nDirEntries = 1;
  407dcc:	9c 80 00 01 	l.addi r4,r0,0x1
  407dd0:	a8 63 a3 52 	l.ori r3,r3,0xa352
                                    iSelectedEntry = 0;
  407dd4:	18 a0 00 41 	l.movhi r5,0x41
                                if (pEntry->StartCluster + (fat32 ? (pEntry->HighCluster & 0x0FFF) << 16 : 0) == iPreviousDirectory)
                                { // directory entry found
                                    for (i = 0; i< MAXDIRENTRIES; i++)
                                        sort_table[i] = i; // init sorting table

                                    nDirEntries = 1;
  407dd8:	d8 03 20 00 	l.sb 0x0(r3),r4
                                    iSelectedEntry = 0;
  407ddc:	9c c0 00 00 	l.addi r6,r0,0x0
  407de0:	a8 a5 a3 53 	l.ori r5,r5,0xa353

                                    DirEntry[0] = *pEntry; // add the entry at the top of the buffer
  407de4:	18 60 00 41 	l.movhi r3,0x41
                                { // directory entry found
                                    for (i = 0; i< MAXDIRENTRIES; i++)
                                        sort_table[i] = i; // init sorting table

                                    nDirEntries = 1;
                                    iSelectedEntry = 0;
  407de8:	d8 05 30 00 	l.sb 0x0(r5),r6

                                    DirEntry[0] = *pEntry; // add the entry at the top of the buffer
  407dec:	a8 63 e6 d0 	l.ori r3,r3,0xe6d0
  407df0:	a8 9a 00 00 	l.ori r4,r26,0x0
  407df4:	9c a0 00 20 	l.addi r5,r0,0x20
  407df8:	07 ff e1 22 	l.jal 400280 <memcpy>
  407dfc:	9c 40 00 00 	l.addi r2,r0,0x0
                                    DirEntryLFN[0][0] = 0;
  407e00:	18 e0 00 41 	l.movhi r7,0x41
                                    if (lfn[0])
  407e04:	18 60 00 42 	l.movhi r3,0x42

                                    nDirEntries = 1;
                                    iSelectedEntry = 0;

                                    DirEntry[0] = *pEntry; // add the entry at the top of the buffer
                                    DirEntryLFN[0][0] = 0;
  407e08:	a8 e7 de a8 	l.ori r7,r7,0xdea8
                                    if (lfn[0])
  407e0c:	a8 63 0b b8 	l.ori r3,r3,0xbb8
                                        if (lfn_checksum(pEntry->Name) == name_checksum)
                                            strncpy(DirEntryLFN[0], lfn, sizeof(lfn));

                                    rc = 1; // indicate to the caller that the directory entry has been found
  407e10:	9c 80 00 01 	l.addi r4,r0,0x1

                                    nDirEntries = 1;
                                    iSelectedEntry = 0;

                                    DirEntry[0] = *pEntry; // add the entry at the top of the buffer
                                    DirEntryLFN[0][0] = 0;
  407e14:	d8 07 10 00 	l.sb 0x0(r7),r2
                                    if (lfn[0])
  407e18:	90 43 00 00 	l.lbs r2,0x0(r3)
  407e1c:	bc 02 00 00 	l.sfeqi r2,0x0
  407e20:	10 00 03 bb 	l.bf 408d0c <ScanDirectory+0x173c>
  407e24:	d4 01 20 00 	l.sw 0x0(r1),r4
                                        if (lfn_checksum(pEntry->Name) == name_checksum)
  407e28:	07 ff eb 99 	l.jal 402c8c <lfn_checksum>
  407e2c:	a8 7a 00 00 	l.ori r3,r26,0x0
  407e30:	e4 2b b0 00 	l.sfne r11,r22
  407e34:	10 00 03 b6 	l.bf 408d0c <ScanDirectory+0x173c>
  407e38:	18 60 00 41 	l.movhi r3,0x41
                                            strncpy(DirEntryLFN[0], lfn, sizeof(lfn));
  407e3c:	00 00 01 9d 	l.j 4084b0 <ScanDirectory+0xee0>
  407e40:	a8 63 de a8 	l.ori r3,r3,0xdea8

                                    rc = 1; // indicate to the caller that the directory entry has been found
                                }
                            }
                            else if (mode == SCAN_INIT_NEXT)
  407e44:	10 00 00 9d 	l.bf 4080b8 <ScanDirectory+0xae8>
  407e48:	bc 3e 00 01 	l.sfnei r30,0x1
                            { // scan the directory table and return next MAXDIRENTRIES-1 alphabetically sorted entries (first entry is in the buffer)
                                if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[0]], DirEntryLFN[sort_table[0]]) > 0) // compare new entry with the first one
  407e4c:	18 a0 00 41 	l.movhi r5,0x41
  407e50:	18 c0 00 41 	l.movhi r6,0x41
  407e54:	a8 a5 e7 d0 	l.ori r5,r5,0xe7d0
  407e58:	a8 c6 e6 d0 	l.ori r6,r6,0xe6d0
  407e5c:	8d 05 00 00 	l.lbz r8,0x0(r5)
  407e60:	b8 e8 00 08 	l.slli r7,r8,0x8
  407e64:	b8 48 00 02 	l.slli r2,r8,0x2
  407e68:	b8 a8 00 05 	l.slli r5,r8,0x5
  407e6c:	18 80 00 42 	l.movhi r4,0x42
  407e70:	e0 42 38 00 	l.add r2,r2,r7
  407e74:	18 e0 00 41 	l.movhi r7,0x41
  407e78:	e0 42 40 00 	l.add r2,r2,r8
  407e7c:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  407e80:	e0 a5 30 00 	l.add r5,r5,r6
  407e84:	a8 7a 00 00 	l.ori r3,r26,0x0
  407e88:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  407e8c:	07 ff eb 90 	l.jal 402ccc <CompareDirEntries>
  407e90:	e0 c2 38 00 	l.add r6,r2,r7
  407e94:	bd ab 00 00 	l.sflesi r11,0x0
  407e98:	10 00 03 9d 	l.bf 408d0c <ScanDirectory+0x173c>
  407e9c:	18 60 00 41 	l.movhi r3,0x41
                                {
                                    if (nDirEntries < MAXDIRENTRIES) // initial directory scan (first 8 entries)
  407ea0:	a8 63 a3 52 	l.ori r3,r3,0xa352
  407ea4:	8c 43 00 00 	l.lbz r2,0x0(r3)
  407ea8:	bc 42 00 07 	l.sfgtui r2,0x7
  407eac:	10 00 00 26 	l.bf 407f44 <ScanDirectory+0x974>
  407eb0:	18 c0 00 41 	l.movhi r6,0x41
                                    {
                                        DirEntry[nDirEntries] = *pEntry; // add new entry at first empty slot in storage buffer
  407eb4:	18 80 00 41 	l.movhi r4,0x41
  407eb8:	b8 a2 00 05 	l.slli r5,r2,0x5
  407ebc:	a8 84 e6 d0 	l.ori r4,r4,0xe6d0
  407ec0:	e0 65 20 00 	l.add r3,r5,r4
  407ec4:	9c a0 00 20 	l.addi r5,r0,0x20
  407ec8:	07 ff e0 ee 	l.jal 400280 <memcpy>
  407ecc:	a8 9a 00 00 	l.ori r4,r26,0x0
                                        DirEntryLFN[nDirEntries][0] = 0;
  407ed0:	b9 02 00 02 	l.slli r8,r2,0x2
  407ed4:	b8 a2 00 08 	l.slli r5,r2,0x8
  407ed8:	18 c0 00 41 	l.movhi r6,0x41
                                        if (lfn[0])
  407edc:	18 60 00 42 	l.movhi r3,0x42
                                if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[0]], DirEntryLFN[sort_table[0]]) > 0) // compare new entry with the first one
                                {
                                    if (nDirEntries < MAXDIRENTRIES) // initial directory scan (first 8 entries)
                                    {
                                        DirEntry[nDirEntries] = *pEntry; // add new entry at first empty slot in storage buffer
                                        DirEntryLFN[nDirEntries][0] = 0;
  407ee0:	e0 a8 28 00 	l.add r5,r8,r5
  407ee4:	a8 c6 de a8 	l.ori r6,r6,0xdea8
  407ee8:	e0 a5 10 00 	l.add r5,r5,r2
                                        if (lfn[0])
  407eec:	a8 63 0b b8 	l.ori r3,r3,0xbb8
                                if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[0]], DirEntryLFN[sort_table[0]]) > 0) // compare new entry with the first one
                                {
                                    if (nDirEntries < MAXDIRENTRIES) // initial directory scan (first 8 entries)
                                    {
                                        DirEntry[nDirEntries] = *pEntry; // add new entry at first empty slot in storage buffer
                                        DirEntryLFN[nDirEntries][0] = 0;
  407ef0:	e1 c5 30 00 	l.add r14,r5,r6
  407ef4:	9c e0 00 00 	l.addi r7,r0,0x0
                                        if (lfn[0])
  407ef8:	90 a3 00 00 	l.lbs r5,0x0(r3)
  407efc:	bc 05 00 00 	l.sfeqi r5,0x0
  407f00:	10 00 00 0c 	l.bf 407f30 <ScanDirectory+0x960>
  407f04:	d8 0e 38 00 	l.sb 0x0(r14),r7
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
  407f08:	07 ff eb 61 	l.jal 402c8c <lfn_checksum>
  407f0c:	a8 7a 00 00 	l.ori r3,r26,0x0
  407f10:	e4 2b b0 00 	l.sfne r11,r22
  407f14:	10 00 00 08 	l.bf 407f34 <ScanDirectory+0x964>
  407f18:	18 80 00 41 	l.movhi r4,0x41
                                                strncpy(DirEntryLFN[nDirEntries], lfn, sizeof(lfn));
  407f1c:	18 80 00 42 	l.movhi r4,0x42
  407f20:	a8 6e 00 00 	l.ori r3,r14,0x0
  407f24:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  407f28:	07 ff e1 11 	l.jal 40036c <strncpy>
  407f2c:	9c a0 01 05 	l.addi r5,r0,0x105

                                        nDirEntries++;
  407f30:	18 80 00 41 	l.movhi r4,0x41
  407f34:	9c 42 00 01 	l.addi r2,r2,0x1
  407f38:	a8 84 a3 52 	l.ori r4,r4,0xa352
  407f3c:	00 00 00 2e 	l.j 407ff4 <ScanDirectory+0xa24>
  407f40:	d8 04 10 00 	l.sb 0x0(r4),r2
                                    }
                                    else
                                    {
                                        if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[MAXDIRENTRIES-1]], DirEntryLFN[sort_table[MAXDIRENTRIES-1]]) < 0) // compare new entry with the last already found
  407f44:	18 e0 00 41 	l.movhi r7,0x41
  407f48:	a8 c6 e7 d0 	l.ori r6,r6,0xe7d0
  407f4c:	18 60 00 41 	l.movhi r3,0x41
  407f50:	8c a6 00 07 	l.lbz r5,0x7(r6)
  407f54:	b8 45 00 08 	l.slli r2,r5,0x8
  407f58:	b8 c5 00 02 	l.slli r6,r5,0x2
  407f5c:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  407f60:	a8 63 e6 d0 	l.ori r3,r3,0xe6d0
  407f64:	e0 c6 10 00 	l.add r6,r6,r2
  407f68:	18 80 00 42 	l.movhi r4,0x42
  407f6c:	e0 c6 28 00 	l.add r6,r6,r5
  407f70:	b8 a5 00 05 	l.slli r5,r5,0x5
  407f74:	e1 c6 38 00 	l.add r14,r6,r7
  407f78:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  407f7c:	e0 45 18 00 	l.add r2,r5,r3
  407f80:	a8 ce 00 00 	l.ori r6,r14,0x0
  407f84:	a8 7a 00 00 	l.ori r3,r26,0x0
  407f88:	07 ff eb 51 	l.jal 402ccc <CompareDirEntries>
  407f8c:	a8 a2 00 00 	l.ori r5,r2,0x0
  407f90:	bd 6b 00 00 	l.sfgesi r11,0x0
  407f94:	10 00 00 19 	l.bf 407ff8 <ScanDirectory+0xa28>
  407f98:	18 c0 00 41 	l.movhi r6,0x41
                                        {
                                            DirEntry[sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the new one if appropriate
  407f9c:	a8 62 00 00 	l.ori r3,r2,0x0
  407fa0:	a8 9a 00 00 	l.ori r4,r26,0x0
  407fa4:	07 ff e0 b7 	l.jal 400280 <memcpy>
  407fa8:	9c a0 00 20 	l.addi r5,r0,0x20
                                            DirEntryLFN[sort_table[MAXDIRENTRIES-1]][0] = 0;
                                            if (lfn[0])
  407fac:	18 a0 00 42 	l.movhi r5,0x42
                                    else
                                    {
                                        if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[MAXDIRENTRIES-1]], DirEntryLFN[sort_table[MAXDIRENTRIES-1]]) < 0) // compare new entry with the last already found
                                        {
                                            DirEntry[sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the new one if appropriate
                                            DirEntryLFN[sort_table[MAXDIRENTRIES-1]][0] = 0;
  407fb0:	9c 80 00 00 	l.addi r4,r0,0x0
                                            if (lfn[0])
  407fb4:	a8 a5 0b b8 	l.ori r5,r5,0xbb8
                                    else
                                    {
                                        if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[MAXDIRENTRIES-1]], DirEntryLFN[sort_table[MAXDIRENTRIES-1]]) < 0) // compare new entry with the last already found
                                        {
                                            DirEntry[sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the new one if appropriate
                                            DirEntryLFN[sort_table[MAXDIRENTRIES-1]][0] = 0;
  407fb8:	d8 0e 20 00 	l.sb 0x0(r14),r4
                                            if (lfn[0])
  407fbc:	90 45 00 00 	l.lbs r2,0x0(r5)
  407fc0:	bc 02 00 00 	l.sfeqi r2,0x0
  407fc4:	10 00 00 0d 	l.bf 407ff8 <ScanDirectory+0xa28>
  407fc8:	18 c0 00 41 	l.movhi r6,0x41
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
  407fcc:	07 ff eb 30 	l.jal 402c8c <lfn_checksum>
  407fd0:	a8 7a 00 00 	l.ori r3,r26,0x0
  407fd4:	e4 2b b0 00 	l.sfne r11,r22
  407fd8:	10 00 00 08 	l.bf 407ff8 <ScanDirectory+0xa28>
  407fdc:	18 c0 00 41 	l.movhi r6,0x41
                                                    strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
  407fe0:	18 80 00 42 	l.movhi r4,0x42
  407fe4:	a8 6e 00 00 	l.ori r3,r14,0x0
  407fe8:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  407fec:	07 ff e0 e0 	l.jal 40036c <strncpy>
  407ff0:	9c a0 01 05 	l.addi r5,r0,0x105
                                        }
                                    }

                                    for (i = nDirEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  407ff4:	18 c0 00 41 	l.movhi r6,0x41

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  407ff8:	18 e0 00 41 	l.movhi r7,0x41
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nDirEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  407ffc:	a8 c6 a3 52 	l.ori r6,r6,0xa352

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408000:	a8 e7 e7 d0 	l.ori r7,r7,0xe7d0
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nDirEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  408004:	8c 46 00 00 	l.lbz r2,0x0(r6)
  408008:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
  40800c:	d4 01 f0 04 	l.sw 0x4(r1),r30
  408010:	b8 42 00 18 	l.slli r2,r2,0x18
  408014:	ab d8 00 00 	l.ori r30,r24,0x0
  408018:	ab 14 00 00 	l.ori r24,r20,0x0
  40801c:	b8 42 00 98 	l.srai r2,r2,0x18

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408020:	e2 02 38 00 	l.add r16,r2,r7
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nDirEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  408024:	aa 42 00 00 	l.ori r18,r2,0x0
  408028:	00 00 00 1f 	l.j 4080a4 <ScanDirectory+0xad4>
  40802c:	aa 90 00 00 	l.ori r20,r16,0x0
                                    {
                                        if (CompareDirEntries(&DirEntry[sort_table[i]], DirEntryLFN[sort_table[i]], &DirEntry[sort_table[i-1]], DirEntryLFN[sort_table[i-1]])<0) // compare items and swap if necessary
  408030:	8e 14 00 00 	l.lbz r16,0x0(r20)
  408034:	8d d4 ff ff 	l.lbz r14,0xffffffff(r20)
  408038:	b8 50 00 08 	l.slli r2,r16,0x8
  40803c:	b8 90 00 02 	l.slli r4,r16,0x2
  408040:	b8 ce 00 02 	l.slli r6,r14,0x2
  408044:	e0 84 10 00 	l.add r4,r4,r2
  408048:	b8 4e 00 08 	l.slli r2,r14,0x8
  40804c:	b8 70 00 05 	l.slli r3,r16,0x5
  408050:	b8 ae 00 05 	l.slli r5,r14,0x5
  408054:	e0 c6 10 00 	l.add r6,r6,r2
  408058:	18 40 00 41 	l.movhi r2,0x41
  40805c:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  408060:	a8 42 e6 d0 	l.ori r2,r2,0xe6d0
  408064:	e0 84 80 00 	l.add r4,r4,r16
  408068:	e0 c6 70 00 	l.add r6,r6,r14
  40806c:	e0 63 10 00 	l.add r3,r3,r2
  408070:	e0 84 38 00 	l.add r4,r4,r7
  408074:	e0 a5 10 00 	l.add r5,r5,r2
  408078:	e0 c6 38 00 	l.add r6,r6,r7
  40807c:	07 ff eb 14 	l.jal 402ccc <CompareDirEntries>
  408080:	9e 94 ff ff 	l.addi r20,r20,0xffffffff
  408084:	bd 6b 00 00 	l.sfgesi r11,0x0
  408088:	10 00 03 1e 	l.bf 408d00 <ScanDirectory+0x1730>
  40808c:	15 00 00 00 	l.nop 0x0
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nDirEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  408090:	9e 52 ff ff 	l.addi r18,r18,0xffffffff
                                    {
                                        if (CompareDirEntries(&DirEntry[sort_table[i]], DirEntryLFN[sort_table[i]], &DirEntry[sort_table[i-1]], DirEntryLFN[sort_table[i-1]])<0) // compare items and swap if necessary
                                        {
                                            x = sort_table[i];
                                            sort_table[i] = sort_table[i-1];
  408094:	d8 14 70 01 	l.sb 0x1(r20),r14
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nDirEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  408098:	ba 52 00 18 	l.slli r18,r18,0x18
                                    {
                                        if (CompareDirEntries(&DirEntry[sort_table[i]], DirEntryLFN[sort_table[i]], &DirEntry[sort_table[i-1]], DirEntryLFN[sort_table[i-1]])<0) // compare items and swap if necessary
                                        {
                                            x = sort_table[i];
                                            sort_table[i] = sort_table[i-1];
                                            sort_table[i-1] = x;
  40809c:	d8 14 80 00 	l.sb 0x0(r20),r16
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nDirEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  4080a0:	ba 52 00 98 	l.srai r18,r18,0x18
  4080a4:	bd 52 00 00 	l.sfgtsi r18,0x0
  4080a8:	13 ff ff e2 	l.bf 408030 <ScanDirectory+0xa60>
  4080ac:	18 e0 00 41 	l.movhi r7,0x41
  4080b0:	00 00 03 15 	l.j 408d04 <ScanDirectory+0x1734>
  4080b4:	aa 98 00 00 	l.ori r20,r24,0x0
                                        else
                                            break; // don't check further entries as they are already sorted
                                    }
                                }
                            }
                            else if (mode == SCAN_NEXT) // replace the last dir entry with the new (higher) one
  4080b8:	10 00 00 74 	l.bf 408288 <ScanDirectory+0xcb8>
  4080bc:	bc 3e ff ff 	l.sfnei r30,0xffffffff
                            {
                                if (nNewEntries == 0) // no entry higher than the last one has been found yet
  4080c0:	bc 3c 00 00 	l.sfnei r28,0x0
  4080c4:	10 00 00 44 	l.bf 4081d4 <ScanDirectory+0xc04>
  4080c8:	18 e0 00 41 	l.movhi r7,0x41
                                {
                                    if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[MAXDIRENTRIES-1]], DirEntryLFN[sort_table[MAXDIRENTRIES-1]]) > 0) // found entry higher than the last one
  4080cc:	18 40 00 41 	l.movhi r2,0x41
  4080d0:	18 c0 00 41 	l.movhi r6,0x41
  4080d4:	a8 42 e7 d0 	l.ori r2,r2,0xe7d0
  4080d8:	a8 c6 e6 d0 	l.ori r6,r6,0xe6d0
  4080dc:	8d 02 00 07 	l.lbz r8,0x7(r2)
  4080e0:	b8 e8 00 08 	l.slli r7,r8,0x8
  4080e4:	b8 48 00 02 	l.slli r2,r8,0x2
  4080e8:	b8 a8 00 05 	l.slli r5,r8,0x5
  4080ec:	18 80 00 42 	l.movhi r4,0x42
  4080f0:	e0 42 38 00 	l.add r2,r2,r7
  4080f4:	18 e0 00 41 	l.movhi r7,0x41
  4080f8:	e0 42 40 00 	l.add r2,r2,r8
  4080fc:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  408100:	e0 a5 30 00 	l.add r5,r5,r6
  408104:	a8 7a 00 00 	l.ori r3,r26,0x0
  408108:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  40810c:	07 ff ea f0 	l.jal 402ccc <CompareDirEntries>
  408110:	e0 c2 38 00 	l.add r6,r2,r7
  408114:	bd ab 00 00 	l.sflesi r11,0x0
  408118:	10 00 02 fd 	l.bf 408d0c <ScanDirectory+0x173c>
  40811c:	18 40 00 41 	l.movhi r2,0x41
                                    {
                                        nNewEntries++;
                                        DirEntry[sort_table[0]] = *pEntry; // replace the first entry with the found one
  408120:	18 80 00 41 	l.movhi r4,0x41
  408124:	a8 42 e7 d0 	l.ori r2,r2,0xe7d0
  408128:	a8 84 e6 d0 	l.ori r4,r4,0xe6d0
  40812c:	8e 02 00 00 	l.lbz r16,0x0(r2)
  408130:	b8 50 00 05 	l.slli r2,r16,0x5
  408134:	9c a0 00 20 	l.addi r5,r0,0x20
  408138:	e0 62 20 00 	l.add r3,r2,r4
  40813c:	a8 9a 00 00 	l.ori r4,r26,0x0
  408140:	07 ff e0 50 	l.jal 400280 <memcpy>
  408144:	b8 50 00 08 	l.slli r2,r16,0x8
                                        DirEntryLFN[sort_table[0]][0] = 0;
  408148:	b8 b0 00 02 	l.slli r5,r16,0x2
                                        if (lfn[0])
  40814c:	18 c0 00 42 	l.movhi r6,0x42
                                {
                                    if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[MAXDIRENTRIES-1]], DirEntryLFN[sort_table[MAXDIRENTRIES-1]]) > 0) // found entry higher than the last one
                                    {
                                        nNewEntries++;
                                        DirEntry[sort_table[0]] = *pEntry; // replace the first entry with the found one
                                        DirEntryLFN[sort_table[0]][0] = 0;
  408150:	e0 45 10 00 	l.add r2,r5,r2
  408154:	18 a0 00 41 	l.movhi r5,0x41
  408158:	e0 42 80 00 	l.add r2,r2,r16
  40815c:	a8 a5 de a8 	l.ori r5,r5,0xdea8
                                        if (lfn[0])
  408160:	a8 c6 0b b8 	l.ori r6,r6,0xbb8
                                {
                                    if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[MAXDIRENTRIES-1]], DirEntryLFN[sort_table[MAXDIRENTRIES-1]]) > 0) // found entry higher than the last one
                                    {
                                        nNewEntries++;
                                        DirEntry[sort_table[0]] = *pEntry; // replace the first entry with the found one
                                        DirEntryLFN[sort_table[0]][0] = 0;
  408164:	e1 c2 28 00 	l.add r14,r2,r5
                                        if (lfn[0])
  408168:	90 46 00 00 	l.lbs r2,0x0(r6)
  40816c:	bc 02 00 00 	l.sfeqi r2,0x0
  408170:	10 00 00 0c 	l.bf 4081a0 <ScanDirectory+0xbd0>
  408174:	d8 0e e0 00 	l.sb 0x0(r14),r28
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
  408178:	07 ff ea c5 	l.jal 402c8c <lfn_checksum>
  40817c:	a8 7a 00 00 	l.ori r3,r26,0x0
  408180:	e4 2b b0 00 	l.sfne r11,r22
  408184:	10 00 00 08 	l.bf 4081a4 <ScanDirectory+0xbd4>
  408188:	18 40 00 41 	l.movhi r2,0x41
                                                strncpy(DirEntryLFN[sort_table[0]], lfn, sizeof(lfn));
  40818c:	18 80 00 42 	l.movhi r4,0x42
  408190:	a8 6e 00 00 	l.ori r3,r14,0x0
  408194:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  408198:	07 ff e0 75 	l.jal 40036c <strncpy>
  40819c:	9c a0 01 05 	l.addi r5,r0,0x105
  4081a0:	18 40 00 41 	l.movhi r2,0x41
  4081a4:	a8 42 e7 d1 	l.ori r2,r2,0xe7d1

                                        // scroll entries' indices
                                        x = sort_table[0];
                                        for (i = 0; i < MAXDIRENTRIES-1; i++)
                                            sort_table[i] = sort_table[i+1];
  4081a8:	8c e2 00 00 	l.lbz r7,0x0(r2)
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
                                                strncpy(DirEntryLFN[sort_table[0]], lfn, sizeof(lfn));

                                        // scroll entries' indices
                                        x = sort_table[0];
                                        for (i = 0; i < MAXDIRENTRIES-1; i++)
  4081ac:	18 60 00 41 	l.movhi r3,0x41
                                            sort_table[i] = sort_table[i+1];
  4081b0:	db e2 3f ff 	l.sb 0xffffffff(r2),r7
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
                                                strncpy(DirEntryLFN[sort_table[0]], lfn, sizeof(lfn));

                                        // scroll entries' indices
                                        x = sort_table[0];
                                        for (i = 0; i < MAXDIRENTRIES-1; i++)
  4081b4:	a8 63 e7 d8 	l.ori r3,r3,0xe7d8
                                            sort_table[i] = sort_table[i+1];
  4081b8:	9c 42 00 01 	l.addi r2,r2,0x1
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
                                                strncpy(DirEntryLFN[sort_table[0]], lfn, sizeof(lfn));

                                        // scroll entries' indices
                                        x = sort_table[0];
                                        for (i = 0; i < MAXDIRENTRIES-1; i++)
  4081bc:	e4 22 18 00 	l.sfne r2,r3
  4081c0:	13 ff ff fa 	l.bf 4081a8 <ScanDirectory+0xbd8>
  4081c4:	18 80 00 41 	l.movhi r4,0x41
                                            sort_table[i] = sort_table[i+1];

                                        sort_table[MAXDIRENTRIES-1] = x; // last entry is the found one
  4081c8:	a8 84 e7 d0 	l.ori r4,r4,0xe7d0
  4081cc:	00 00 00 7c 	l.j 4083bc <ScanDirectory+0xdec>
  4081d0:	d8 04 80 07 	l.sb 0x7(r4),r16
                                    }
                                }
                                else // higher entry already found but we need to check the remaining ones if any of them is lower then the already found one
                                {
                                    // check if the found entry is lower than the last one and higher than the last but one, if so then replace the last one with it
                                    if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[MAXDIRENTRIES-1]], DirEntryLFN[sort_table[MAXDIRENTRIES-1]]) < 0)
  4081d4:	18 c0 00 41 	l.movhi r6,0x41
  4081d8:	a8 c6 e7 d0 	l.ori r6,r6,0xe7d0
  4081dc:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  4081e0:	8c a6 00 07 	l.lbz r5,0x7(r6)
  4081e4:	b8 45 00 08 	l.slli r2,r5,0x8
  4081e8:	b8 c5 00 02 	l.slli r6,r5,0x2
  4081ec:	18 80 00 42 	l.movhi r4,0x42
  4081f0:	a8 7a 00 00 	l.ori r3,r26,0x0
  4081f4:	e0 c6 10 00 	l.add r6,r6,r2
  4081f8:	18 40 00 41 	l.movhi r2,0x41
  4081fc:	e0 c6 28 00 	l.add r6,r6,r5
  408200:	b8 a5 00 05 	l.slli r5,r5,0x5
  408204:	a8 42 e6 d0 	l.ori r2,r2,0xe6d0
  408208:	e1 c6 38 00 	l.add r14,r6,r7
  40820c:	e2 05 10 00 	l.add r16,r5,r2
  408210:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  408214:	a8 b0 00 00 	l.ori r5,r16,0x0
  408218:	07 ff ea ad 	l.jal 402ccc <CompareDirEntries>
  40821c:	a8 ce 00 00 	l.ori r6,r14,0x0
  408220:	bd 6b 00 00 	l.sfgesi r11,0x0
  408224:	10 00 02 bb 	l.bf 408d10 <ScanDirectory+0x1740>
  408228:	18 60 00 42 	l.movhi r3,0x42
                                        if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[MAXDIRENTRIES-2]], DirEntryLFN[sort_table[MAXDIRENTRIES-2]]) > 0)
  40822c:	18 60 00 41 	l.movhi r3,0x41
  408230:	18 c0 00 41 	l.movhi r6,0x41
  408234:	a8 63 e7 d0 	l.ori r3,r3,0xe7d0
  408238:	a8 c6 e6 d0 	l.ori r6,r6,0xe6d0
  40823c:	8d 03 00 06 	l.lbz r8,0x6(r3)
  408240:	b8 e8 00 08 	l.slli r7,r8,0x8
  408244:	b8 48 00 02 	l.slli r2,r8,0x2
  408248:	b9 68 00 05 	l.slli r11,r8,0x5
  40824c:	18 80 00 42 	l.movhi r4,0x42
  408250:	e0 42 38 00 	l.add r2,r2,r7
  408254:	18 e0 00 41 	l.movhi r7,0x41
  408258:	e0 42 40 00 	l.add r2,r2,r8
  40825c:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  408260:	e0 ab 30 00 	l.add r5,r11,r6
  408264:	a8 7a 00 00 	l.ori r3,r26,0x0
  408268:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  40826c:	07 ff ea 98 	l.jal 402ccc <CompareDirEntries>
  408270:	e0 c2 38 00 	l.add r6,r2,r7
  408274:	bd ab 00 00 	l.sflesi r11,0x0
  408278:	0c 00 00 7d 	l.bnf 40846c <ScanDirectory+0xe9c>
  40827c:	18 60 00 42 	l.movhi r3,0x42
                                    }
                                }
                            }
                        }
                    }
                    lfn[0] = 0;
  408280:	00 00 02 a5 	l.j 408d14 <ScanDirectory+0x1744>
  408284:	9c 80 00 00 	l.addi r4,r0,0x0
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                }
                            }
                            else if (mode == SCAN_PREV) // replace the first dir entry with the new (lower) one
  408288:	10 00 00 90 	l.bf 4084c8 <ScanDirectory+0xef8>
  40828c:	bc 3e 00 02 	l.sfnei r30,0x2
                            {
                                if (nNewEntries == 0) // no entry lower than the first one has been found yet
  408290:	bc 3c 00 00 	l.sfnei r28,0x0
  408294:	10 00 00 4c 	l.bf 4083c4 <ScanDirectory+0xdf4>
  408298:	18 e0 00 41 	l.movhi r7,0x41
                                {
                                    if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[0]], DirEntryLFN[sort_table[0]]) < 0) // found entry lower than the first one
  40829c:	18 80 00 41 	l.movhi r4,0x41
  4082a0:	18 c0 00 41 	l.movhi r6,0x41
  4082a4:	a8 84 e7 d0 	l.ori r4,r4,0xe7d0
  4082a8:	a8 c6 e6 d0 	l.ori r6,r6,0xe6d0
  4082ac:	8d 04 00 00 	l.lbz r8,0x0(r4)
  4082b0:	b8 e8 00 08 	l.slli r7,r8,0x8
  4082b4:	b8 48 00 02 	l.slli r2,r8,0x2
  4082b8:	b8 a8 00 05 	l.slli r5,r8,0x5
  4082bc:	18 80 00 42 	l.movhi r4,0x42
  4082c0:	e0 42 38 00 	l.add r2,r2,r7
  4082c4:	18 e0 00 41 	l.movhi r7,0x41
  4082c8:	e0 42 40 00 	l.add r2,r2,r8
  4082cc:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  4082d0:	e0 a5 30 00 	l.add r5,r5,r6
  4082d4:	a8 7a 00 00 	l.ori r3,r26,0x0
  4082d8:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  4082dc:	07 ff ea 7c 	l.jal 402ccc <CompareDirEntries>
  4082e0:	e0 c2 38 00 	l.add r6,r2,r7
  4082e4:	bd 6b 00 00 	l.sfgesi r11,0x0
  4082e8:	10 00 02 8a 	l.bf 408d10 <ScanDirectory+0x1740>
  4082ec:	18 60 00 42 	l.movhi r3,0x42
                                    {
                                        nNewEntries++;
                                        if (nDirEntries < MAXDIRENTRIES)
  4082f0:	18 60 00 41 	l.movhi r3,0x41
  4082f4:	a8 63 a3 52 	l.ori r3,r3,0xa352
  4082f8:	8c 43 00 00 	l.lbz r2,0x0(r3)
  4082fc:	bc 42 00 07 	l.sfgtui r2,0x7
  408300:	10 00 00 04 	l.bf 408310 <ScanDirectory+0xd40>
  408304:	18 80 00 41 	l.movhi r4,0x41
                                        {
                                            //sort_table[nDirEntries] = nDirEntries; // init sorting table
                                            nDirEntries++;
  408308:	9c 42 00 01 	l.addi r2,r2,0x1
  40830c:	d8 03 10 00 	l.sb 0x0(r3),r2
                                        }
                                        DirEntry[sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the found one
  408310:	18 a0 00 41 	l.movhi r5,0x41
  408314:	a8 84 e7 d0 	l.ori r4,r4,0xe7d0
  408318:	a8 a5 e6 d0 	l.ori r5,r5,0xe6d0
  40831c:	8d c4 00 07 	l.lbz r14,0x7(r4)
  408320:	b8 4e 00 05 	l.slli r2,r14,0x5
  408324:	a8 9a 00 00 	l.ori r4,r26,0x0
  408328:	e0 62 28 00 	l.add r3,r2,r5
  40832c:	9c a0 00 20 	l.addi r5,r0,0x20
  408330:	07 ff df d4 	l.jal 400280 <memcpy>
  408334:	b8 4e 00 08 	l.slli r2,r14,0x8
                                        DirEntryLFN[sort_table[MAXDIRENTRIES-1]][0] = 0;
  408338:	b8 ae 00 02 	l.slli r5,r14,0x2
  40833c:	18 c0 00 41 	l.movhi r6,0x41
                                        if (lfn[0])
  408340:	18 60 00 42 	l.movhi r3,0x42
                                        {
                                            //sort_table[nDirEntries] = nDirEntries; // init sorting table
                                            nDirEntries++;
                                        }
                                        DirEntry[sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the found one
                                        DirEntryLFN[sort_table[MAXDIRENTRIES-1]][0] = 0;
  408344:	e0 45 10 00 	l.add r2,r5,r2
  408348:	a8 c6 de a8 	l.ori r6,r6,0xdea8
  40834c:	e0 42 70 00 	l.add r2,r2,r14
                                        if (lfn[0])
  408350:	a8 63 0b b8 	l.ori r3,r3,0xbb8
                                        {
                                            //sort_table[nDirEntries] = nDirEntries; // init sorting table
                                            nDirEntries++;
                                        }
                                        DirEntry[sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the found one
                                        DirEntryLFN[sort_table[MAXDIRENTRIES-1]][0] = 0;
  408354:	e0 42 30 00 	l.add r2,r2,r6
  408358:	9c e0 00 00 	l.addi r7,r0,0x0
                                        if (lfn[0])
  40835c:	90 a3 00 00 	l.lbs r5,0x0(r3)
  408360:	bc 05 00 00 	l.sfeqi r5,0x0
  408364:	10 00 00 0b 	l.bf 408390 <ScanDirectory+0xdc0>
  408368:	d8 02 38 00 	l.sb 0x0(r2),r7
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
  40836c:	07 ff ea 48 	l.jal 402c8c <lfn_checksum>
  408370:	a8 7a 00 00 	l.ori r3,r26,0x0
  408374:	e4 2b b0 00 	l.sfne r11,r22
  408378:	10 00 00 06 	l.bf 408390 <ScanDirectory+0xdc0>
  40837c:	18 80 00 42 	l.movhi r4,0x42
                                                strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
  408380:	a8 62 00 00 	l.ori r3,r2,0x0
  408384:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  408388:	07 ff df f9 	l.jal 40036c <strncpy>
  40838c:	9c a0 01 05 	l.addi r5,r0,0x105
  408390:	18 40 00 41 	l.movhi r2,0x41
  408394:	a8 42 e7 d7 	l.ori r2,r2,0xe7d7

                                        // scroll entries' indices
                                        x = sort_table[MAXDIRENTRIES-1];
                                        for (i = MAXDIRENTRIES - 1; i > 0; i--)
                                            sort_table[i] = sort_table[i-1];
  408398:	8c 82 ff ff 	l.lbz r4,0xffffffff(r2)
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
                                                strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));

                                        // scroll entries' indices
                                        x = sort_table[MAXDIRENTRIES-1];
                                        for (i = MAXDIRENTRIES - 1; i > 0; i--)
  40839c:	18 a0 00 41 	l.movhi r5,0x41
                                            sort_table[i] = sort_table[i-1];
  4083a0:	d8 02 20 00 	l.sb 0x0(r2),r4
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
                                                strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));

                                        // scroll entries' indices
                                        x = sort_table[MAXDIRENTRIES-1];
                                        for (i = MAXDIRENTRIES - 1; i > 0; i--)
  4083a4:	a8 a5 e7 d0 	l.ori r5,r5,0xe7d0
                                            sort_table[i] = sort_table[i-1];
  4083a8:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
                                                strncpy(DirEntryLFN[sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));

                                        // scroll entries' indices
                                        x = sort_table[MAXDIRENTRIES-1];
                                        for (i = MAXDIRENTRIES - 1; i > 0; i--)
  4083ac:	e4 22 28 00 	l.sfne r2,r5
  4083b0:	13 ff ff fa 	l.bf 408398 <ScanDirectory+0xdc8>
  4083b4:	15 00 00 00 	l.nop 0x0
                                            sort_table[i] = sort_table[i-1];

                                        sort_table[0] = x; // the first entry is the found one
  4083b8:	d8 05 70 00 	l.sb 0x0(r5),r14
                            {
                                if (nNewEntries == 0) // no entry lower than the first one has been found yet
                                {
                                    if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[0]], DirEntryLFN[sort_table[0]]) < 0) // found entry lower than the first one
                                    {
                                        nNewEntries++;
  4083bc:	00 00 02 54 	l.j 408d0c <ScanDirectory+0x173c>
  4083c0:	9f 80 00 01 	l.addi r28,r0,0x1
                                    }
                                }
                                else // lower entry already found but we need to check the remaining ones if any of them is higher then the already found one
                                {
                                    // check if the found entry is higher than the first one and lower than the second one, if so then replace the first one with it
                                    if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[0]], DirEntryLFN[sort_table[0]]) > 0)
  4083c4:	18 c0 00 41 	l.movhi r6,0x41
  4083c8:	a8 c6 e7 d0 	l.ori r6,r6,0xe7d0
  4083cc:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  4083d0:	8c a6 00 00 	l.lbz r5,0x0(r6)
  4083d4:	b8 45 00 08 	l.slli r2,r5,0x8
  4083d8:	b8 c5 00 02 	l.slli r6,r5,0x2
  4083dc:	18 80 00 42 	l.movhi r4,0x42
  4083e0:	a8 7a 00 00 	l.ori r3,r26,0x0
  4083e4:	e0 c6 10 00 	l.add r6,r6,r2
  4083e8:	18 40 00 41 	l.movhi r2,0x41
  4083ec:	e0 c6 28 00 	l.add r6,r6,r5
  4083f0:	b8 a5 00 05 	l.slli r5,r5,0x5
  4083f4:	a8 42 e6 d0 	l.ori r2,r2,0xe6d0
  4083f8:	e1 c6 38 00 	l.add r14,r6,r7
  4083fc:	e2 05 10 00 	l.add r16,r5,r2
  408400:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  408404:	a8 b0 00 00 	l.ori r5,r16,0x0
  408408:	07 ff ea 31 	l.jal 402ccc <CompareDirEntries>
  40840c:	a8 ce 00 00 	l.ori r6,r14,0x0
  408410:	bd ab 00 00 	l.sflesi r11,0x0
  408414:	10 00 02 3e 	l.bf 408d0c <ScanDirectory+0x173c>
  408418:	18 60 00 41 	l.movhi r3,0x41
                                        if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[1]], DirEntryLFN[sort_table[1]]) < 0)
  40841c:	18 c0 00 41 	l.movhi r6,0x41
  408420:	a8 63 e7 d0 	l.ori r3,r3,0xe7d0
  408424:	a8 c6 e6 d0 	l.ori r6,r6,0xe6d0
  408428:	8d 03 00 01 	l.lbz r8,0x1(r3)
  40842c:	b8 e8 00 08 	l.slli r7,r8,0x8
  408430:	b8 48 00 02 	l.slli r2,r8,0x2
  408434:	b9 68 00 05 	l.slli r11,r8,0x5
  408438:	18 80 00 42 	l.movhi r4,0x42
  40843c:	e0 42 38 00 	l.add r2,r2,r7
  408440:	18 e0 00 41 	l.movhi r7,0x41
  408444:	e0 42 40 00 	l.add r2,r2,r8
  408448:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  40844c:	e0 ab 30 00 	l.add r5,r11,r6
  408450:	a8 7a 00 00 	l.ori r3,r26,0x0
  408454:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  408458:	07 ff ea 1d 	l.jal 402ccc <CompareDirEntries>
  40845c:	e0 c2 38 00 	l.add r6,r2,r7
  408460:	bd 6b 00 00 	l.sfgesi r11,0x0
  408464:	10 00 02 2b 	l.bf 408d10 <ScanDirectory+0x1740>
  408468:	18 60 00 42 	l.movhi r3,0x42
                                        {
                                            DirEntry[sort_table[0]] = *pEntry;
  40846c:	a8 70 00 00 	l.ori r3,r16,0x0
  408470:	a8 9a 00 00 	l.ori r4,r26,0x0
  408474:	9c a0 00 20 	l.addi r5,r0,0x20
  408478:	07 ff df 82 	l.jal 400280 <memcpy>
  40847c:	9c 40 00 00 	l.addi r2,r0,0x0
                                            DirEntryLFN[sort_table[0]][0] = 0;
                                            if (lfn[0])
  408480:	18 60 00 42 	l.movhi r3,0x42
                                    // check if the found entry is higher than the first one and lower than the second one, if so then replace the first one with it
                                    if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[0]], DirEntryLFN[sort_table[0]]) > 0)
                                        if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[1]], DirEntryLFN[sort_table[1]]) < 0)
                                        {
                                            DirEntry[sort_table[0]] = *pEntry;
                                            DirEntryLFN[sort_table[0]][0] = 0;
  408484:	d8 0e 10 00 	l.sb 0x0(r14),r2
                                            if (lfn[0])
  408488:	a8 63 0b b8 	l.ori r3,r3,0xbb8
  40848c:	90 43 00 00 	l.lbs r2,0x0(r3)
  408490:	bc 02 00 00 	l.sfeqi r2,0x0
  408494:	10 00 02 1f 	l.bf 408d10 <ScanDirectory+0x1740>
  408498:	18 60 00 42 	l.movhi r3,0x42
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
  40849c:	07 ff e9 fc 	l.jal 402c8c <lfn_checksum>
  4084a0:	a8 7a 00 00 	l.ori r3,r26,0x0
  4084a4:	e4 2b b0 00 	l.sfne r11,r22
  4084a8:	10 00 02 19 	l.bf 408d0c <ScanDirectory+0x173c>
  4084ac:	a8 6e 00 00 	l.ori r3,r14,0x0
                                                    strncpy(DirEntryLFN[sort_table[0]], lfn, sizeof(lfn));
  4084b0:	18 80 00 42 	l.movhi r4,0x42
  4084b4:	9c a0 01 05 	l.addi r5,r0,0x105
  4084b8:	07 ff df ad 	l.jal 40036c <strncpy>
  4084bc:	a8 84 0b b8 	l.ori r4,r4,0xbb8
                                    }
                                }
                            }
                        }
                    }
                    lfn[0] = 0;
  4084c0:	00 00 02 14 	l.j 408d10 <ScanDirectory+0x1740>
  4084c4:	18 60 00 42 	l.movhi r3,0x42
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(DirEntryLFN[sort_table[0]], lfn, sizeof(lfn));
                                        }
                                }
                            }
                            else if (mode == SCAN_NEXT_PAGE) // find next 8 entries
  4084c8:	10 00 00 9f 	l.bf 408744 <ScanDirectory+0x1174>
  4084cc:	bc 3e ff fe 	l.sfnei r30,0xfffffffe
                            {
                                if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[MAXDIRENTRIES-1]], DirEntryLFN[sort_table[MAXDIRENTRIES-1]]) > 0) // compare with the last visible entry
  4084d0:	18 80 00 41 	l.movhi r4,0x41
  4084d4:	18 c0 00 41 	l.movhi r6,0x41
  4084d8:	a8 84 e7 d0 	l.ori r4,r4,0xe7d0
  4084dc:	a8 c6 e6 d0 	l.ori r6,r6,0xe6d0
  4084e0:	8d 04 00 07 	l.lbz r8,0x7(r4)
  4084e4:	b8 e8 00 08 	l.slli r7,r8,0x8
  4084e8:	b8 48 00 02 	l.slli r2,r8,0x2
  4084ec:	b8 a8 00 05 	l.slli r5,r8,0x5
  4084f0:	18 80 00 42 	l.movhi r4,0x42
  4084f4:	e0 42 38 00 	l.add r2,r2,r7
  4084f8:	18 e0 00 41 	l.movhi r7,0x41
  4084fc:	e0 42 40 00 	l.add r2,r2,r8
  408500:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  408504:	e0 a5 30 00 	l.add r5,r5,r6
  408508:	a8 7a 00 00 	l.ori r3,r26,0x0
  40850c:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  408510:	07 ff e9 ef 	l.jal 402ccc <CompareDirEntries>
  408514:	e0 c2 38 00 	l.add r6,r2,r7
  408518:	bd ab 00 00 	l.sflesi r11,0x0
  40851c:	10 00 01 fc 	l.bf 408d0c <ScanDirectory+0x173c>
  408520:	bc 5c 00 07 	l.sfgtui r28,0x7
                                {
                                    if (nNewEntries < MAXDIRENTRIES) // initial directory scan (first 8 entries)
  408524:	10 00 00 2f 	l.bf 4085e0 <ScanDirectory+0x1010>
  408528:	18 c0 00 41 	l.movhi r6,0x41
                                    {
                                        t_DirEntry[nNewEntries] = *pEntry; // add new entry at first empty slot in storage buffer
  40852c:	18 80 00 41 	l.movhi r4,0x41
  408530:	b8 5c 00 05 	l.slli r2,r28,0x5
  408534:	a8 84 f0 00 	l.ori r4,r4,0xf000
  408538:	9c a0 00 20 	l.addi r5,r0,0x20
  40853c:	e0 62 20 00 	l.add r3,r2,r4
  408540:	a8 9a 00 00 	l.ori r4,r26,0x0
  408544:	07 ff df 4f 	l.jal 400280 <memcpy>
  408548:	b8 5c 00 08 	l.slli r2,r28,0x8
                                        t_DirEntryLFN[nNewEntries][0] = 0;
  40854c:	b8 bc 00 02 	l.slli r5,r28,0x2
                                        if (lfn[0])
  408550:	18 e0 00 42 	l.movhi r7,0x42
                                if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[MAXDIRENTRIES-1]], DirEntryLFN[sort_table[MAXDIRENTRIES-1]]) > 0) // compare with the last visible entry
                                {
                                    if (nNewEntries < MAXDIRENTRIES) // initial directory scan (first 8 entries)
                                    {
                                        t_DirEntry[nNewEntries] = *pEntry; // add new entry at first empty slot in storage buffer
                                        t_DirEntryLFN[nNewEntries][0] = 0;
  408554:	9c c0 00 00 	l.addi r6,r0,0x0
  408558:	e0 45 10 00 	l.add r2,r5,r2
  40855c:	18 a0 00 41 	l.movhi r5,0x41
  408560:	e0 42 e0 00 	l.add r2,r2,r28
  408564:	a8 a5 e7 d8 	l.ori r5,r5,0xe7d8
                                        if (lfn[0])
  408568:	a8 e7 0b b8 	l.ori r7,r7,0xbb8
                                if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[MAXDIRENTRIES-1]], DirEntryLFN[sort_table[MAXDIRENTRIES-1]]) > 0) // compare with the last visible entry
                                {
                                    if (nNewEntries < MAXDIRENTRIES) // initial directory scan (first 8 entries)
                                    {
                                        t_DirEntry[nNewEntries] = *pEntry; // add new entry at first empty slot in storage buffer
                                        t_DirEntryLFN[nNewEntries][0] = 0;
  40856c:	e0 42 28 00 	l.add r2,r2,r5
  408570:	d8 02 30 00 	l.sb 0x0(r2),r6
                                        if (lfn[0])
  408574:	90 47 00 00 	l.lbs r2,0x0(r7)
  408578:	bc 02 00 00 	l.sfeqi r2,0x0
  40857c:	10 00 00 13 	l.bf 4085c8 <ScanDirectory+0xff8>
  408580:	18 a0 00 41 	l.movhi r5,0x41
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
  408584:	07 ff e9 c2 	l.jal 402c8c <lfn_checksum>
  408588:	a8 7a 00 00 	l.ori r3,r26,0x0
  40858c:	e4 2b b0 00 	l.sfne r11,r22
  408590:	10 00 00 0e 	l.bf 4085c8 <ScanDirectory+0xff8>
  408594:	18 a0 00 41 	l.movhi r5,0x41
                                                strncpy(t_DirEntryLFN[nNewEntries], lfn, sizeof(lfn));
  408598:	b8 bc 00 02 	l.slli r5,r28,0x2
  40859c:	b8 5c 00 08 	l.slli r2,r28,0x8
  4085a0:	18 80 00 41 	l.movhi r4,0x41
  4085a4:	e0 45 10 00 	l.add r2,r5,r2
  4085a8:	a8 84 e7 d8 	l.ori r4,r4,0xe7d8
  4085ac:	e0 42 e0 00 	l.add r2,r2,r28
  4085b0:	9c a0 01 05 	l.addi r5,r0,0x105
  4085b4:	e0 62 20 00 	l.add r3,r2,r4
  4085b8:	18 80 00 42 	l.movhi r4,0x42
  4085bc:	07 ff df 6c 	l.jal 40036c <strncpy>
  4085c0:	a8 84 0b b8 	l.ori r4,r4,0xbb8

                                        t_sort_table[nNewEntries] = nNewEntries; // init sorting table
  4085c4:	18 a0 00 41 	l.movhi r5,0x41
  4085c8:	a8 a5 f1 00 	l.ori r5,r5,0xf100
  4085cc:	e0 5c 28 00 	l.add r2,r28,r5
  4085d0:	d8 02 e0 00 	l.sb 0x0(r2),r28
                                        nNewEntries++;
  4085d4:	9f 9c 00 01 	l.addi r28,r28,0x1
  4085d8:	00 00 00 2d 	l.j 40868c <ScanDirectory+0x10bc>
  4085dc:	a7 9c 00 ff 	l.andi r28,r28,0xff
                                    }
                                    else
                                    {
                                        if (CompareDirEntries(pEntry, lfn, &t_DirEntry[t_sort_table[MAXDIRENTRIES-1]], t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]]) < 0) // compare new entry with the last already found
  4085e0:	18 e0 00 41 	l.movhi r7,0x41
  4085e4:	a8 c6 f1 00 	l.ori r6,r6,0xf100
  4085e8:	18 60 00 41 	l.movhi r3,0x41
  4085ec:	8c a6 00 07 	l.lbz r5,0x7(r6)
  4085f0:	b8 45 00 08 	l.slli r2,r5,0x8
  4085f4:	b8 c5 00 02 	l.slli r6,r5,0x2
  4085f8:	a8 e7 e7 d8 	l.ori r7,r7,0xe7d8
  4085fc:	a8 63 f0 00 	l.ori r3,r3,0xf000
  408600:	e0 c6 10 00 	l.add r6,r6,r2
  408604:	18 80 00 42 	l.movhi r4,0x42
  408608:	e0 c6 28 00 	l.add r6,r6,r5
  40860c:	b8 a5 00 05 	l.slli r5,r5,0x5
  408610:	e1 c6 38 00 	l.add r14,r6,r7
  408614:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  408618:	e0 45 18 00 	l.add r2,r5,r3
  40861c:	a8 ce 00 00 	l.ori r6,r14,0x0
  408620:	a8 7a 00 00 	l.ori r3,r26,0x0
  408624:	07 ff e9 aa 	l.jal 402ccc <CompareDirEntries>
  408628:	a8 a2 00 00 	l.ori r5,r2,0x0
  40862c:	bd 6b 00 00 	l.sfgesi r11,0x0
  408630:	10 00 00 17 	l.bf 40868c <ScanDirectory+0x10bc>
  408634:	a8 62 00 00 	l.ori r3,r2,0x0
                                        {
                                            t_DirEntry[t_sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the new one if appropriate
  408638:	a8 9a 00 00 	l.ori r4,r26,0x0
  40863c:	07 ff df 11 	l.jal 400280 <memcpy>
  408640:	9c a0 00 20 	l.addi r5,r0,0x20
                                            t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]][0] = 0;
                                            if (lfn[0])
  408644:	18 a0 00 42 	l.movhi r5,0x42
                                    else
                                    {
                                        if (CompareDirEntries(pEntry, lfn, &t_DirEntry[t_sort_table[MAXDIRENTRIES-1]], t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]]) < 0) // compare new entry with the last already found
                                        {
                                            t_DirEntry[t_sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the new one if appropriate
                                            t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]][0] = 0;
  408648:	9c 80 00 00 	l.addi r4,r0,0x0
                                            if (lfn[0])
  40864c:	a8 a5 0b b8 	l.ori r5,r5,0xbb8
                                    else
                                    {
                                        if (CompareDirEntries(pEntry, lfn, &t_DirEntry[t_sort_table[MAXDIRENTRIES-1]], t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]]) < 0) // compare new entry with the last already found
                                        {
                                            t_DirEntry[t_sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the new one if appropriate
                                            t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]][0] = 0;
  408650:	d8 0e 20 00 	l.sb 0x0(r14),r4
                                            if (lfn[0])
  408654:	90 45 00 00 	l.lbs r2,0x0(r5)
  408658:	bc 02 00 00 	l.sfeqi r2,0x0
  40865c:	10 00 00 0d 	l.bf 408690 <ScanDirectory+0x10c0>
  408660:	9c 5c ff ff 	l.addi r2,r28,0xffffffff
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
  408664:	07 ff e9 8a 	l.jal 402c8c <lfn_checksum>
  408668:	a8 7a 00 00 	l.ori r3,r26,0x0
  40866c:	e4 2b b0 00 	l.sfne r11,r22
  408670:	10 00 00 08 	l.bf 408690 <ScanDirectory+0x10c0>
  408674:	9c 5c ff ff 	l.addi r2,r28,0xffffffff
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
  408678:	18 80 00 42 	l.movhi r4,0x42
  40867c:	a8 6e 00 00 	l.ori r3,r14,0x0
  408680:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  408684:	07 ff df 3a 	l.jal 40036c <strncpy>
  408688:	9c a0 01 05 	l.addi r5,r0,0x105
                                        }
                                    }

                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  40868c:	9c 5c ff ff 	l.addi r2,r28,0xffffffff

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408690:	18 c0 00 41 	l.movhi r6,0x41
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  408694:	b8 42 00 18 	l.slli r2,r2,0x18

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408698:	a8 c6 f1 00 	l.ori r6,r6,0xf100
  40869c:	d4 01 f0 04 	l.sw 0x4(r1),r30
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  4086a0:	b8 42 00 98 	l.srai r2,r2,0x18
  4086a4:	ab d8 00 00 	l.ori r30,r24,0x0
  4086a8:	ab 14 00 00 	l.ori r24,r20,0x0

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  4086ac:	e2 02 30 00 	l.add r16,r2,r6
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  4086b0:	aa 42 00 00 	l.ori r18,r2,0x0
  4086b4:	00 00 00 1f 	l.j 408730 <ScanDirectory+0x1160>
  4086b8:	aa 90 00 00 	l.ori r20,r16,0x0
                                    {
                                        if (CompareDirEntries(&t_DirEntry[t_sort_table[i]], t_DirEntryLFN[t_sort_table[i]], &t_DirEntry[t_sort_table[i-1]], t_DirEntryLFN[t_sort_table[i-1]]) < 0) // compare items and swap if necessary
  4086bc:	8e 14 00 00 	l.lbz r16,0x0(r20)
  4086c0:	8d d4 ff ff 	l.lbz r14,0xffffffff(r20)
  4086c4:	b8 50 00 08 	l.slli r2,r16,0x8
  4086c8:	b8 90 00 02 	l.slli r4,r16,0x2
  4086cc:	b8 ce 00 02 	l.slli r6,r14,0x2
  4086d0:	e0 84 10 00 	l.add r4,r4,r2
  4086d4:	b8 4e 00 08 	l.slli r2,r14,0x8
  4086d8:	b8 70 00 05 	l.slli r3,r16,0x5
  4086dc:	b8 ae 00 05 	l.slli r5,r14,0x5
  4086e0:	e0 c6 10 00 	l.add r6,r6,r2
  4086e4:	18 40 00 41 	l.movhi r2,0x41
  4086e8:	a8 e7 f0 00 	l.ori r7,r7,0xf000
  4086ec:	a8 42 e7 d8 	l.ori r2,r2,0xe7d8
  4086f0:	e0 84 80 00 	l.add r4,r4,r16
  4086f4:	e0 c6 70 00 	l.add r6,r6,r14
  4086f8:	e0 63 38 00 	l.add r3,r3,r7
  4086fc:	e0 84 10 00 	l.add r4,r4,r2
  408700:	e0 a5 38 00 	l.add r5,r5,r7
  408704:	e0 c6 10 00 	l.add r6,r6,r2
  408708:	07 ff e9 71 	l.jal 402ccc <CompareDirEntries>
  40870c:	9e 94 ff ff 	l.addi r20,r20,0xffffffff
  408710:	bd 6b 00 00 	l.sfgesi r11,0x0
  408714:	10 00 01 7b 	l.bf 408d00 <ScanDirectory+0x1730>
  408718:	15 00 00 00 	l.nop 0x0
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  40871c:	9e 52 ff ff 	l.addi r18,r18,0xffffffff
                                    {
                                        if (CompareDirEntries(&t_DirEntry[t_sort_table[i]], t_DirEntryLFN[t_sort_table[i]], &t_DirEntry[t_sort_table[i-1]], t_DirEntryLFN[t_sort_table[i-1]]) < 0) // compare items and swap if necessary
                                        {
                                            x = t_sort_table[i];
                                            t_sort_table[i] = t_sort_table[i-1];
  408720:	d8 14 70 01 	l.sb 0x1(r20),r14
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  408724:	ba 52 00 18 	l.slli r18,r18,0x18
                                    {
                                        if (CompareDirEntries(&t_DirEntry[t_sort_table[i]], t_DirEntryLFN[t_sort_table[i]], &t_DirEntry[t_sort_table[i-1]], t_DirEntryLFN[t_sort_table[i-1]]) < 0) // compare items and swap if necessary
                                        {
                                            x = t_sort_table[i];
                                            t_sort_table[i] = t_sort_table[i-1];
                                            t_sort_table[i-1] = x;
  408728:	d8 14 80 00 	l.sb 0x0(r20),r16
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  40872c:	ba 52 00 98 	l.srai r18,r18,0x18
  408730:	bd 52 00 00 	l.sfgtsi r18,0x0
  408734:	13 ff ff e2 	l.bf 4086bc <ScanDirectory+0x10ec>
  408738:	18 e0 00 41 	l.movhi r7,0x41
  40873c:	00 00 01 72 	l.j 408d04 <ScanDirectory+0x1734>
  408740:	aa 98 00 00 	l.ori r20,r24,0x0
                                        else
                                            break; // don't check further entries as they are already sorted
                                    }
                                }
                            }
                            else if (mode == SCAN_PREV_PAGE) // find next 8 entries
  408744:	10 00 00 a2 	l.bf 4089cc <ScanDirectory+0x13fc>
  408748:	84 61 00 24 	l.lwz r3,0x24(r1)
                            {
                                if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[0]], DirEntryLFN[sort_table[0]]) < 0) // compare with the last visible entry
  40874c:	18 60 00 41 	l.movhi r3,0x41
  408750:	18 c0 00 41 	l.movhi r6,0x41
  408754:	a8 63 e7 d0 	l.ori r3,r3,0xe7d0
  408758:	a8 c6 e6 d0 	l.ori r6,r6,0xe6d0
  40875c:	8d 03 00 00 	l.lbz r8,0x0(r3)
  408760:	b8 e8 00 08 	l.slli r7,r8,0x8
  408764:	b8 48 00 02 	l.slli r2,r8,0x2
  408768:	b8 a8 00 05 	l.slli r5,r8,0x5
  40876c:	18 80 00 42 	l.movhi r4,0x42
  408770:	e0 42 38 00 	l.add r2,r2,r7
  408774:	18 e0 00 41 	l.movhi r7,0x41
  408778:	e0 42 40 00 	l.add r2,r2,r8
  40877c:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  408780:	e0 a5 30 00 	l.add r5,r5,r6
  408784:	a8 7a 00 00 	l.ori r3,r26,0x0
  408788:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  40878c:	07 ff e9 50 	l.jal 402ccc <CompareDirEntries>
  408790:	e0 c2 38 00 	l.add r6,r2,r7
  408794:	bd 6b 00 00 	l.sfgesi r11,0x0
  408798:	10 00 01 5e 	l.bf 408d10 <ScanDirectory+0x1740>
  40879c:	18 60 00 42 	l.movhi r3,0x42
                                {
                                    if (nNewEntries < MAXDIRENTRIES) // initial directory scan (first 8 entries)
  4087a0:	bc 5c 00 07 	l.sfgtui r28,0x7
  4087a4:	10 00 00 2f 	l.bf 408860 <ScanDirectory+0x1290>
  4087a8:	18 c0 00 41 	l.movhi r6,0x41
                                    {
                                        t_DirEntry[nNewEntries] = *pEntry; // add new entry at first empty slot in storage buffer
  4087ac:	18 80 00 41 	l.movhi r4,0x41
  4087b0:	b8 5c 00 05 	l.slli r2,r28,0x5
  4087b4:	a8 84 f0 00 	l.ori r4,r4,0xf000
  4087b8:	9c a0 00 20 	l.addi r5,r0,0x20
  4087bc:	e0 62 20 00 	l.add r3,r2,r4
  4087c0:	a8 9a 00 00 	l.ori r4,r26,0x0
  4087c4:	07 ff de af 	l.jal 400280 <memcpy>
  4087c8:	b8 5c 00 08 	l.slli r2,r28,0x8
                                        t_DirEntryLFN[nNewEntries][0] = 0;
  4087cc:	b8 bc 00 02 	l.slli r5,r28,0x2
                                        if (lfn[0])
  4087d0:	18 e0 00 42 	l.movhi r7,0x42
                                if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[0]], DirEntryLFN[sort_table[0]]) < 0) // compare with the last visible entry
                                {
                                    if (nNewEntries < MAXDIRENTRIES) // initial directory scan (first 8 entries)
                                    {
                                        t_DirEntry[nNewEntries] = *pEntry; // add new entry at first empty slot in storage buffer
                                        t_DirEntryLFN[nNewEntries][0] = 0;
  4087d4:	9c c0 00 00 	l.addi r6,r0,0x0
  4087d8:	e0 45 10 00 	l.add r2,r5,r2
  4087dc:	18 a0 00 41 	l.movhi r5,0x41
  4087e0:	e0 42 e0 00 	l.add r2,r2,r28
  4087e4:	a8 a5 e7 d8 	l.ori r5,r5,0xe7d8
                                        if (lfn[0])
  4087e8:	a8 e7 0b b8 	l.ori r7,r7,0xbb8
                                if (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[0]], DirEntryLFN[sort_table[0]]) < 0) // compare with the last visible entry
                                {
                                    if (nNewEntries < MAXDIRENTRIES) // initial directory scan (first 8 entries)
                                    {
                                        t_DirEntry[nNewEntries] = *pEntry; // add new entry at first empty slot in storage buffer
                                        t_DirEntryLFN[nNewEntries][0] = 0;
  4087ec:	e0 42 28 00 	l.add r2,r2,r5
  4087f0:	d8 02 30 00 	l.sb 0x0(r2),r6
                                        if (lfn[0])
  4087f4:	90 47 00 00 	l.lbs r2,0x0(r7)
  4087f8:	bc 02 00 00 	l.sfeqi r2,0x0
  4087fc:	10 00 00 13 	l.bf 408848 <ScanDirectory+0x1278>
  408800:	18 a0 00 41 	l.movhi r5,0x41
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
  408804:	07 ff e9 22 	l.jal 402c8c <lfn_checksum>
  408808:	a8 7a 00 00 	l.ori r3,r26,0x0
  40880c:	e4 2b b0 00 	l.sfne r11,r22
  408810:	10 00 00 0e 	l.bf 408848 <ScanDirectory+0x1278>
  408814:	18 a0 00 41 	l.movhi r5,0x41
                                                strncpy(t_DirEntryLFN[nNewEntries], lfn, sizeof(lfn));
  408818:	b8 bc 00 02 	l.slli r5,r28,0x2
  40881c:	b8 5c 00 08 	l.slli r2,r28,0x8
  408820:	18 80 00 41 	l.movhi r4,0x41
  408824:	e0 45 10 00 	l.add r2,r5,r2
  408828:	a8 84 e7 d8 	l.ori r4,r4,0xe7d8
  40882c:	e0 42 e0 00 	l.add r2,r2,r28
  408830:	9c a0 01 05 	l.addi r5,r0,0x105
  408834:	e0 62 20 00 	l.add r3,r2,r4
  408838:	18 80 00 42 	l.movhi r4,0x42
  40883c:	07 ff de cc 	l.jal 40036c <strncpy>
  408840:	a8 84 0b b8 	l.ori r4,r4,0xbb8

                                        t_sort_table[nNewEntries] = nNewEntries; // init sorting table
  408844:	18 a0 00 41 	l.movhi r5,0x41
  408848:	a8 a5 f1 00 	l.ori r5,r5,0xf100
  40884c:	e0 5c 28 00 	l.add r2,r28,r5
  408850:	d8 02 e0 00 	l.sb 0x0(r2),r28
                                        nNewEntries++;
  408854:	9f 9c 00 01 	l.addi r28,r28,0x1
  408858:	00 00 00 2f 	l.j 408914 <ScanDirectory+0x1344>
  40885c:	a7 9c 00 ff 	l.andi r28,r28,0xff
                                    }
                                    else
                                    {
                                        if (CompareDirEntries(pEntry, lfn, &t_DirEntry[t_sort_table[MAXDIRENTRIES-1]], t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]]) > 0) // compare new entry with the last already found
  408860:	18 e0 00 41 	l.movhi r7,0x41
  408864:	a8 c6 f1 00 	l.ori r6,r6,0xf100
  408868:	a8 e7 e7 d8 	l.ori r7,r7,0xe7d8
  40886c:	8d c6 00 07 	l.lbz r14,0x7(r6)
  408870:	b8 ae 00 08 	l.slli r5,r14,0x8
  408874:	b8 ce 00 02 	l.slli r6,r14,0x2
  408878:	18 40 00 41 	l.movhi r2,0x41
  40887c:	18 80 00 42 	l.movhi r4,0x42
  408880:	e0 c6 28 00 	l.add r6,r6,r5
  408884:	b8 ae 00 05 	l.slli r5,r14,0x5
  408888:	e0 c6 70 00 	l.add r6,r6,r14
  40888c:	a8 42 f0 00 	l.ori r2,r2,0xf000
  408890:	e2 06 38 00 	l.add r16,r6,r7
  408894:	a8 7a 00 00 	l.ori r3,r26,0x0
  408898:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  40889c:	e0 a5 10 00 	l.add r5,r5,r2
  4088a0:	07 ff e9 0b 	l.jal 402ccc <CompareDirEntries>
  4088a4:	a8 d0 00 00 	l.ori r6,r16,0x0
  4088a8:	bd ab 00 00 	l.sflesi r11,0x0
  4088ac:	10 00 00 1a 	l.bf 408914 <ScanDirectory+0x1344>
  4088b0:	18 80 00 41 	l.movhi r4,0x41
                                        {
                                            t_DirEntry[t_sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the new one if appropriate
  4088b4:	b8 4e 00 05 	l.slli r2,r14,0x5
  4088b8:	a8 84 f0 00 	l.ori r4,r4,0xf000
  4088bc:	9c a0 00 20 	l.addi r5,r0,0x20
  4088c0:	e0 62 20 00 	l.add r3,r2,r4
  4088c4:	07 ff de 6f 	l.jal 400280 <memcpy>
  4088c8:	a8 9a 00 00 	l.ori r4,r26,0x0
                                            t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]][0] = 0;
                                            if (lfn[0])
  4088cc:	18 e0 00 42 	l.movhi r7,0x42
                                    else
                                    {
                                        if (CompareDirEntries(pEntry, lfn, &t_DirEntry[t_sort_table[MAXDIRENTRIES-1]], t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]]) > 0) // compare new entry with the last already found
                                        {
                                            t_DirEntry[t_sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the new one if appropriate
                                            t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]][0] = 0;
  4088d0:	9c c0 00 00 	l.addi r6,r0,0x0
                                            if (lfn[0])
  4088d4:	a8 e7 0b b8 	l.ori r7,r7,0xbb8
                                    else
                                    {
                                        if (CompareDirEntries(pEntry, lfn, &t_DirEntry[t_sort_table[MAXDIRENTRIES-1]], t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]]) > 0) // compare new entry with the last already found
                                        {
                                            t_DirEntry[t_sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the new one if appropriate
                                            t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]][0] = 0;
  4088d8:	d8 10 30 00 	l.sb 0x0(r16),r6
                                            if (lfn[0])
  4088dc:	90 47 00 00 	l.lbs r2,0x0(r7)
  4088e0:	bc 02 00 00 	l.sfeqi r2,0x0
  4088e4:	10 00 00 0d 	l.bf 408918 <ScanDirectory+0x1348>
  4088e8:	9c 5c ff ff 	l.addi r2,r28,0xffffffff
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
  4088ec:	07 ff e8 e8 	l.jal 402c8c <lfn_checksum>
  4088f0:	a8 7a 00 00 	l.ori r3,r26,0x0
  4088f4:	e4 2b b0 00 	l.sfne r11,r22
  4088f8:	10 00 00 08 	l.bf 408918 <ScanDirectory+0x1348>
  4088fc:	9c 5c ff ff 	l.addi r2,r28,0xffffffff
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
  408900:	18 80 00 42 	l.movhi r4,0x42
  408904:	a8 70 00 00 	l.ori r3,r16,0x0
  408908:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  40890c:	07 ff de 98 	l.jal 40036c <strncpy>
  408910:	9c a0 01 05 	l.addi r5,r0,0x105
                                        }
                                    }
                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  408914:	9c 5c ff ff 	l.addi r2,r28,0xffffffff

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408918:	18 60 00 41 	l.movhi r3,0x41
                                            if (lfn[0])
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }
                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  40891c:	b8 42 00 18 	l.slli r2,r2,0x18

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408920:	a8 63 f1 00 	l.ori r3,r3,0xf100
  408924:	d4 01 f0 04 	l.sw 0x4(r1),r30
                                            if (lfn[0])
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }
                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  408928:	b8 42 00 98 	l.srai r2,r2,0x18
  40892c:	ab d8 00 00 	l.ori r30,r24,0x0
  408930:	ab 14 00 00 	l.ori r24,r20,0x0

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408934:	e2 02 18 00 	l.add r16,r2,r3
                                            if (lfn[0])
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }
                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  408938:	aa 42 00 00 	l.ori r18,r2,0x0
  40893c:	00 00 00 1f 	l.j 4089b8 <ScanDirectory+0x13e8>
  408940:	aa 90 00 00 	l.ori r20,r16,0x0
                                    {
                                        if (CompareDirEntries(&t_DirEntry[t_sort_table[i]], t_DirEntryLFN[t_sort_table[i]], &t_DirEntry[t_sort_table[i-1]], t_DirEntryLFN[t_sort_table[i-1]]) > 0) // compare items and swap if necessary
  408944:	8e 14 00 00 	l.lbz r16,0x0(r20)
  408948:	8d d4 ff ff 	l.lbz r14,0xffffffff(r20)
  40894c:	b8 50 00 08 	l.slli r2,r16,0x8
  408950:	b8 90 00 02 	l.slli r4,r16,0x2
  408954:	b8 ce 00 02 	l.slli r6,r14,0x2
  408958:	e0 84 10 00 	l.add r4,r4,r2
  40895c:	b8 4e 00 08 	l.slli r2,r14,0x8
  408960:	b8 70 00 05 	l.slli r3,r16,0x5
  408964:	b8 ae 00 05 	l.slli r5,r14,0x5
  408968:	e0 c6 10 00 	l.add r6,r6,r2
  40896c:	18 40 00 41 	l.movhi r2,0x41
  408970:	a8 e7 f0 00 	l.ori r7,r7,0xf000
  408974:	a8 42 e7 d8 	l.ori r2,r2,0xe7d8
  408978:	e0 84 80 00 	l.add r4,r4,r16
  40897c:	e0 c6 70 00 	l.add r6,r6,r14
  408980:	e0 63 38 00 	l.add r3,r3,r7
  408984:	e0 84 10 00 	l.add r4,r4,r2
  408988:	e0 a5 38 00 	l.add r5,r5,r7
  40898c:	e0 c6 10 00 	l.add r6,r6,r2
  408990:	07 ff e8 cf 	l.jal 402ccc <CompareDirEntries>
  408994:	9e 94 ff ff 	l.addi r20,r20,0xffffffff
  408998:	bd ab 00 00 	l.sflesi r11,0x0
  40899c:	10 00 00 d9 	l.bf 408d00 <ScanDirectory+0x1730>
  4089a0:	15 00 00 00 	l.nop 0x0
                                            if (lfn[0])
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }
                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  4089a4:	9e 52 ff ff 	l.addi r18,r18,0xffffffff
                                    {
                                        if (CompareDirEntries(&t_DirEntry[t_sort_table[i]], t_DirEntryLFN[t_sort_table[i]], &t_DirEntry[t_sort_table[i-1]], t_DirEntryLFN[t_sort_table[i-1]]) > 0) // compare items and swap if necessary
                                        {
                                            x = t_sort_table[i];
                                            t_sort_table[i] = t_sort_table[i-1];
  4089a8:	d8 14 70 01 	l.sb 0x1(r20),r14
                                            if (lfn[0])
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }
                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  4089ac:	ba 52 00 18 	l.slli r18,r18,0x18
                                    {
                                        if (CompareDirEntries(&t_DirEntry[t_sort_table[i]], t_DirEntryLFN[t_sort_table[i]], &t_DirEntry[t_sort_table[i-1]], t_DirEntryLFN[t_sort_table[i-1]]) > 0) // compare items and swap if necessary
                                        {
                                            x = t_sort_table[i];
                                            t_sort_table[i] = t_sort_table[i-1];
                                            t_sort_table[i-1] = x;
  4089b0:	d8 14 80 00 	l.sb 0x0(r20),r16
                                            if (lfn[0])
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }
                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  4089b4:	ba 52 00 98 	l.srai r18,r18,0x18
  4089b8:	bd 52 00 00 	l.sfgtsi r18,0x0
  4089bc:	13 ff ff e2 	l.bf 408944 <ScanDirectory+0x1374>
  4089c0:	18 e0 00 41 	l.movhi r7,0x41
  4089c4:	00 00 00 d0 	l.j 408d04 <ScanDirectory+0x1734>
  4089c8:	aa 98 00 00 	l.ori r20,r24,0x0
                                        else
                                            break; // don't check further entries as they are already sorted
                                    }
                                }
                            }
                            else if ((mode >= '0' && mode <= '9') || (mode >= 'A' && mode <= 'Z')) // find first entry beginning with given character
  4089cc:	bc a3 00 19 	l.sfleui r3,0x19
  4089d0:	10 00 00 03 	l.bf 4089dc <ScanDirectory+0x140c>
  4089d4:	9c 40 00 01 	l.addi r2,r0,0x1
  4089d8:	9c 40 00 00 	l.addi r2,r0,0x0
  4089dc:	a4 a2 00 ff 	l.andi r5,r2,0xff
  4089e0:	bc 25 00 00 	l.sfnei r5,0x0
  4089e4:	10 00 00 0c 	l.bf 408a14 <ScanDirectory+0x1444>
  4089e8:	ad 70 00 ff 	l.xori r11,r16,0xff
  4089ec:	84 81 00 28 	l.lwz r4,0x28(r1)
  4089f0:	bc a4 00 09 	l.sfleui r4,0x9
  4089f4:	10 00 00 03 	l.bf 408a00 <ScanDirectory+0x1430>
  4089f8:	9c 40 00 01 	l.addi r2,r0,0x1
  4089fc:	a8 45 00 00 	l.ori r2,r5,0x0
  408a00:	a4 42 00 ff 	l.andi r2,r2,0xff
  408a04:	bc 02 00 00 	l.sfeqi r2,0x0
  408a08:	10 00 00 c2 	l.bf 408d10 <ScanDirectory+0x1740>
  408a0c:	18 60 00 42 	l.movhi r3,0x42
                            printf("LFN error!\r");
                    }
                }
                else // if not an LFN entry
                {
                    is_file = ~pEntry->Attributes & ATTR_DIRECTORY;
  408a10:	ad 70 00 ff 	l.xori r11,r16,0xff
                                    }
                                }
                            }
                            else if ((mode >= '0' && mode <= '9') || (mode >= 'A' && mode <= 'Z')) // find first entry beginning with given character
                            {
                                if (find_file)
  408a14:	84 a1 00 14 	l.lwz r5,0x14(r1)
  408a18:	bc 05 00 00 	l.sfeqi r5,0x0
  408a1c:	10 00 00 0d 	l.bf 408a50 <ScanDirectory+0x1480>
  408a20:	a6 0b 00 10 	l.andi r16,r11,0x10
                                    x = tolower(pEntry->Name[0]) >= tolower(mode) && is_file;
  408a24:	a8 6e 00 00 	l.ori r3,r14,0x0
  408a28:	07 ff de 22 	l.jal 4002b0 <tolower>
  408a2c:	9c 40 00 00 	l.addi r2,r0,0x0
  408a30:	a8 7e 00 00 	l.ori r3,r30,0x0
  408a34:	07 ff de 1f 	l.jal 4002b0 <tolower>
  408a38:	a9 cb 00 00 	l.ori r14,r11,0x0
  408a3c:	e5 8e 58 00 	l.sflts r14,r11
  408a40:	10 00 00 13 	l.bf 408a8c <ScanDirectory+0x14bc>
  408a44:	15 00 00 00 	l.nop 0x0
                                else if (find_dir)
                                    x = tolower(pEntry->Name[0]) >= tolower(mode) || is_file;
  408a48:	00 00 00 10 	l.j 408a88 <ScanDirectory+0x14b8>
  408a4c:	e1 60 80 02 	l.sub r11,r0,r16
                            }
                            else if ((mode >= '0' && mode <= '9') || (mode >= 'A' && mode <= 'Z')) // find first entry beginning with given character
                            {
                                if (find_file)
                                    x = tolower(pEntry->Name[0]) >= tolower(mode) && is_file;
                                else if (find_dir)
  408a50:	84 c1 00 0c 	l.lwz r6,0xc(r1)
  408a54:	bc 06 00 00 	l.sfeqi r6,0x0
  408a58:	10 00 00 0f 	l.bf 408a94 <ScanDirectory+0x14c4>
  408a5c:	18 e0 00 41 	l.movhi r7,0x41
                                    x = tolower(pEntry->Name[0]) >= tolower(mode) || is_file;
  408a60:	a8 6e 00 00 	l.ori r3,r14,0x0
  408a64:	07 ff de 13 	l.jal 4002b0 <tolower>
  408a68:	9c 40 00 01 	l.addi r2,r0,0x1
  408a6c:	a8 7e 00 00 	l.ori r3,r30,0x0
  408a70:	07 ff de 10 	l.jal 4002b0 <tolower>
  408a74:	a9 cb 00 00 	l.ori r14,r11,0x0
  408a78:	e5 6e 58 00 	l.sfges r14,r11
  408a7c:	10 00 00 04 	l.bf 408a8c <ScanDirectory+0x14bc>
  408a80:	15 00 00 00 	l.nop 0x0
  408a84:	e1 60 80 02 	l.sub r11,r0,r16
  408a88:	b8 4b 00 5f 	l.srli r2,r11,0x1f
  408a8c:	00 00 00 1a 	l.j 408af4 <ScanDirectory+0x1524>
  408a90:	a5 62 00 ff 	l.andi r11,r2,0xff
                                else
                                    x = (CompareDirEntries(pEntry, lfn, &DirEntry[sort_table[iSelectedEntry]], DirEntryLFN[sort_table[iSelectedEntry]]) > 0); // compare with the last visible entry
  408a94:	18 60 00 41 	l.movhi r3,0x41
  408a98:	a8 e7 a3 53 	l.ori r7,r7,0xa353
  408a9c:	a8 63 e7 d0 	l.ori r3,r3,0xe7d0
  408aa0:	8c 47 00 00 	l.lbz r2,0x0(r7)
  408aa4:	e0 42 18 00 	l.add r2,r2,r3
  408aa8:	18 c0 00 41 	l.movhi r6,0x41
  408aac:	8d 02 00 00 	l.lbz r8,0x0(r2)
  408ab0:	b8 e8 00 08 	l.slli r7,r8,0x8
  408ab4:	b8 48 00 02 	l.slli r2,r8,0x2
  408ab8:	b8 a8 00 05 	l.slli r5,r8,0x5
  408abc:	a8 c6 e6 d0 	l.ori r6,r6,0xe6d0
  408ac0:	e0 42 38 00 	l.add r2,r2,r7
  408ac4:	18 e0 00 41 	l.movhi r7,0x41
  408ac8:	e0 42 40 00 	l.add r2,r2,r8
  408acc:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  408ad0:	18 80 00 42 	l.movhi r4,0x42
  408ad4:	e0 a5 30 00 	l.add r5,r5,r6
  408ad8:	a8 7a 00 00 	l.ori r3,r26,0x0
  408adc:	e0 c2 38 00 	l.add r6,r2,r7
  408ae0:	07 ff e8 7b 	l.jal 402ccc <CompareDirEntries>
  408ae4:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  408ae8:	b8 4b 00 9f 	l.srai r2,r11,0x1f
  408aec:	e1 62 58 02 	l.sub r11,r2,r11
  408af0:	b9 6b 00 5f 	l.srli r11,r11,0x1f

                                if (x)
  408af4:	bc 0b 00 00 	l.sfeqi r11,0x0
  408af8:	10 00 00 86 	l.bf 408d10 <ScanDirectory+0x1740>
  408afc:	18 60 00 42 	l.movhi r3,0x42
                                {
                                    if (nNewEntries < MAXDIRENTRIES) // initial directory scan (first 8 entries)
  408b00:	bc 5c 00 07 	l.sfgtui r28,0x7
  408b04:	10 00 00 28 	l.bf 408ba4 <ScanDirectory+0x15d4>
  408b08:	18 80 00 41 	l.movhi r4,0x41
                                    {
                                        t_DirEntry[nNewEntries] = *pEntry; // add new entry at first empty slot in storage buffer
  408b0c:	18 80 00 41 	l.movhi r4,0x41
  408b10:	b8 5c 00 05 	l.slli r2,r28,0x5
  408b14:	a8 84 f0 00 	l.ori r4,r4,0xf000
  408b18:	9c a0 00 20 	l.addi r5,r0,0x20
  408b1c:	e0 62 20 00 	l.add r3,r2,r4
  408b20:	a8 9a 00 00 	l.ori r4,r26,0x0
  408b24:	07 ff dd d7 	l.jal 400280 <memcpy>
  408b28:	b8 5c 00 08 	l.slli r2,r28,0x8
                                        t_DirEntryLFN[nNewEntries][0] = 0;
  408b2c:	b8 bc 00 02 	l.slli r5,r28,0x2
                                        if (lfn[0])
  408b30:	18 e0 00 42 	l.movhi r7,0x42
                                if (x)
                                {
                                    if (nNewEntries < MAXDIRENTRIES) // initial directory scan (first 8 entries)
                                    {
                                        t_DirEntry[nNewEntries] = *pEntry; // add new entry at first empty slot in storage buffer
                                        t_DirEntryLFN[nNewEntries][0] = 0;
  408b34:	9c c0 00 00 	l.addi r6,r0,0x0
  408b38:	e0 45 10 00 	l.add r2,r5,r2
  408b3c:	18 a0 00 41 	l.movhi r5,0x41
  408b40:	e0 42 e0 00 	l.add r2,r2,r28
  408b44:	a8 a5 e7 d8 	l.ori r5,r5,0xe7d8
                                        if (lfn[0])
  408b48:	a8 e7 0b b8 	l.ori r7,r7,0xbb8
                                if (x)
                                {
                                    if (nNewEntries < MAXDIRENTRIES) // initial directory scan (first 8 entries)
                                    {
                                        t_DirEntry[nNewEntries] = *pEntry; // add new entry at first empty slot in storage buffer
                                        t_DirEntryLFN[nNewEntries][0] = 0;
  408b4c:	e0 42 28 00 	l.add r2,r2,r5
                                        if (lfn[0])
  408b50:	90 a7 00 00 	l.lbs r5,0x0(r7)
  408b54:	bc 05 00 00 	l.sfeqi r5,0x0
  408b58:	10 00 00 0c 	l.bf 408b88 <ScanDirectory+0x15b8>
  408b5c:	d8 02 30 00 	l.sb 0x0(r2),r6
                                            if (lfn_checksum(pEntry->Name) == name_checksum)
  408b60:	07 ff e8 4b 	l.jal 402c8c <lfn_checksum>
  408b64:	a8 7a 00 00 	l.ori r3,r26,0x0
  408b68:	e4 2b b0 00 	l.sfne r11,r22
  408b6c:	10 00 00 08 	l.bf 408b8c <ScanDirectory+0x15bc>
  408b70:	18 60 00 41 	l.movhi r3,0x41
                                                strncpy(t_DirEntryLFN[nNewEntries], lfn, sizeof(lfn));
  408b74:	18 80 00 42 	l.movhi r4,0x42
  408b78:	a8 62 00 00 	l.ori r3,r2,0x0
  408b7c:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  408b80:	07 ff dd fb 	l.jal 40036c <strncpy>
  408b84:	9c a0 01 05 	l.addi r5,r0,0x105

                                        t_sort_table[nNewEntries] = nNewEntries; // init sorting table
  408b88:	18 60 00 41 	l.movhi r3,0x41
  408b8c:	a8 63 f1 00 	l.ori r3,r3,0xf100
  408b90:	e0 5c 18 00 	l.add r2,r28,r3
  408b94:	d8 02 e0 00 	l.sb 0x0(r2),r28
                                        nNewEntries++;
  408b98:	9f 9c 00 01 	l.addi r28,r28,0x1
  408b9c:	00 00 00 2d 	l.j 408c50 <ScanDirectory+0x1680>
  408ba0:	a7 9c 00 ff 	l.andi r28,r28,0xff
                                    }
                                    else
                                    {
                                        if (CompareDirEntries(pEntry, lfn, &t_DirEntry[t_sort_table[MAXDIRENTRIES-1]], t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]]) < 0) // compare new entry with the last already found
  408ba4:	18 e0 00 41 	l.movhi r7,0x41
  408ba8:	a8 84 f1 00 	l.ori r4,r4,0xf100
  408bac:	18 60 00 41 	l.movhi r3,0x41
  408bb0:	8c a4 00 07 	l.lbz r5,0x7(r4)
  408bb4:	b8 45 00 08 	l.slli r2,r5,0x8
  408bb8:	b8 c5 00 02 	l.slli r6,r5,0x2
  408bbc:	a8 e7 e7 d8 	l.ori r7,r7,0xe7d8
  408bc0:	a8 63 f0 00 	l.ori r3,r3,0xf000
  408bc4:	e0 c6 10 00 	l.add r6,r6,r2
  408bc8:	18 80 00 42 	l.movhi r4,0x42
  408bcc:	e0 c6 28 00 	l.add r6,r6,r5
  408bd0:	b8 a5 00 05 	l.slli r5,r5,0x5
  408bd4:	e1 c6 38 00 	l.add r14,r6,r7
  408bd8:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  408bdc:	e0 45 18 00 	l.add r2,r5,r3
  408be0:	a8 ce 00 00 	l.ori r6,r14,0x0
  408be4:	a8 7a 00 00 	l.ori r3,r26,0x0
  408be8:	07 ff e8 39 	l.jal 402ccc <CompareDirEntries>
  408bec:	a8 a2 00 00 	l.ori r5,r2,0x0
  408bf0:	bd 6b 00 00 	l.sfgesi r11,0x0
  408bf4:	10 00 00 17 	l.bf 408c50 <ScanDirectory+0x1680>
  408bf8:	a8 62 00 00 	l.ori r3,r2,0x0
                                        {
                                            t_DirEntry[t_sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the new one if appropriate
  408bfc:	a8 9a 00 00 	l.ori r4,r26,0x0
  408c00:	07 ff dd a0 	l.jal 400280 <memcpy>
  408c04:	9c a0 00 20 	l.addi r5,r0,0x20
                                            t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]][0] = 0;
                                            if (lfn[0])
  408c08:	18 a0 00 42 	l.movhi r5,0x42
                                    else
                                    {
                                        if (CompareDirEntries(pEntry, lfn, &t_DirEntry[t_sort_table[MAXDIRENTRIES-1]], t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]]) < 0) // compare new entry with the last already found
                                        {
                                            t_DirEntry[t_sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the new one if appropriate
                                            t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]][0] = 0;
  408c0c:	9c 80 00 00 	l.addi r4,r0,0x0
                                            if (lfn[0])
  408c10:	a8 a5 0b b8 	l.ori r5,r5,0xbb8
                                    else
                                    {
                                        if (CompareDirEntries(pEntry, lfn, &t_DirEntry[t_sort_table[MAXDIRENTRIES-1]], t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]]) < 0) // compare new entry with the last already found
                                        {
                                            t_DirEntry[t_sort_table[MAXDIRENTRIES-1]] = *pEntry; // replace the last entry with the new one if appropriate
                                            t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]][0] = 0;
  408c14:	d8 0e 20 00 	l.sb 0x0(r14),r4
                                            if (lfn[0])
  408c18:	90 45 00 00 	l.lbs r2,0x0(r5)
  408c1c:	bc 02 00 00 	l.sfeqi r2,0x0
  408c20:	10 00 00 0d 	l.bf 408c54 <ScanDirectory+0x1684>
  408c24:	9c 5c ff ff 	l.addi r2,r28,0xffffffff
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
  408c28:	07 ff e8 19 	l.jal 402c8c <lfn_checksum>
  408c2c:	a8 7a 00 00 	l.ori r3,r26,0x0
  408c30:	e4 2b b0 00 	l.sfne r11,r22
  408c34:	10 00 00 08 	l.bf 408c54 <ScanDirectory+0x1684>
  408c38:	9c 5c ff ff 	l.addi r2,r28,0xffffffff
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
  408c3c:	18 80 00 42 	l.movhi r4,0x42
  408c40:	a8 6e 00 00 	l.ori r3,r14,0x0
  408c44:	a8 84 0b b8 	l.ori r4,r4,0xbb8
  408c48:	07 ff dd c9 	l.jal 40036c <strncpy>
  408c4c:	9c a0 01 05 	l.addi r5,r0,0x105
                                        }
                                    }

                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  408c50:	9c 5c ff ff 	l.addi r2,r28,0xffffffff

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408c54:	18 c0 00 41 	l.movhi r6,0x41
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  408c58:	b8 42 00 18 	l.slli r2,r2,0x18

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408c5c:	a8 c6 f1 00 	l.ori r6,r6,0xf100
  408c60:	d4 01 f0 04 	l.sw 0x4(r1),r30
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  408c64:	b8 42 00 98 	l.srai r2,r2,0x18
  408c68:	ab d8 00 00 	l.ori r30,r24,0x0
  408c6c:	ab 14 00 00 	l.ori r24,r20,0x0

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408c70:	e2 02 30 00 	l.add r16,r2,r6
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  408c74:	aa 42 00 00 	l.ori r18,r2,0x0
  408c78:	00 00 00 1f 	l.j 408cf4 <ScanDirectory+0x1724>
  408c7c:	aa 90 00 00 	l.ori r20,r16,0x0
                                    {
                                        if (CompareDirEntries(&t_DirEntry[t_sort_table[i]], t_DirEntryLFN[t_sort_table[i]], &t_DirEntry[t_sort_table[i-1]], t_DirEntryLFN[t_sort_table[i-1]]) < 0) // compare items and swap if necessary
  408c80:	8e 14 00 00 	l.lbz r16,0x0(r20)
  408c84:	8d d4 ff ff 	l.lbz r14,0xffffffff(r20)
  408c88:	b8 50 00 08 	l.slli r2,r16,0x8
  408c8c:	b8 90 00 02 	l.slli r4,r16,0x2
  408c90:	b8 ce 00 02 	l.slli r6,r14,0x2
  408c94:	e0 84 10 00 	l.add r4,r4,r2
  408c98:	b8 4e 00 08 	l.slli r2,r14,0x8
  408c9c:	b8 70 00 05 	l.slli r3,r16,0x5
  408ca0:	b8 ae 00 05 	l.slli r5,r14,0x5
  408ca4:	e0 c6 10 00 	l.add r6,r6,r2
  408ca8:	18 40 00 41 	l.movhi r2,0x41
  408cac:	a8 e7 f0 00 	l.ori r7,r7,0xf000
  408cb0:	a8 42 e7 d8 	l.ori r2,r2,0xe7d8
  408cb4:	e0 84 80 00 	l.add r4,r4,r16
  408cb8:	e0 c6 70 00 	l.add r6,r6,r14
  408cbc:	e0 63 38 00 	l.add r3,r3,r7
  408cc0:	e0 84 10 00 	l.add r4,r4,r2
  408cc4:	e0 a5 38 00 	l.add r5,r5,r7
  408cc8:	e0 c6 10 00 	l.add r6,r6,r2
  408ccc:	07 ff e8 00 	l.jal 402ccc <CompareDirEntries>
  408cd0:	9e 94 ff ff 	l.addi r20,r20,0xffffffff
  408cd4:	bd 6b 00 00 	l.sfgesi r11,0x0
  408cd8:	10 00 00 0a 	l.bf 408d00 <ScanDirectory+0x1730>
  408cdc:	15 00 00 00 	l.nop 0x0
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  408ce0:	9e 52 ff ff 	l.addi r18,r18,0xffffffff
                                    {
                                        if (CompareDirEntries(&t_DirEntry[t_sort_table[i]], t_DirEntryLFN[t_sort_table[i]], &t_DirEntry[t_sort_table[i-1]], t_DirEntryLFN[t_sort_table[i-1]]) < 0) // compare items and swap if necessary
                                        {
                                            x = t_sort_table[i];
                                            t_sort_table[i] = t_sort_table[i-1];
  408ce4:	d8 14 70 01 	l.sb 0x1(r20),r14
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  408ce8:	ba 52 00 18 	l.slli r18,r18,0x18
                                    {
                                        if (CompareDirEntries(&t_DirEntry[t_sort_table[i]], t_DirEntryLFN[t_sort_table[i]], &t_DirEntry[t_sort_table[i-1]], t_DirEntryLFN[t_sort_table[i-1]]) < 0) // compare items and swap if necessary
                                        {
                                            x = t_sort_table[i];
                                            t_sort_table[i] = t_sort_table[i-1];
                                            t_sort_table[i-1] = x;
  408cec:	d8 14 80 00 	l.sb 0x0(r20),r16
                                                if (lfn_checksum(pEntry->Name) == name_checksum)
                                                    strncpy(t_DirEntryLFN[t_sort_table[MAXDIRENTRIES-1]], lfn, sizeof(lfn));
                                        }
                                    }

                                    for (i = nNewEntries - 1; i > 0; i--) // one pass bubble-sorting (table is already sorted, only the new item must be placed in order)
  408cf0:	ba 52 00 98 	l.srai r18,r18,0x18
  408cf4:	bd 52 00 00 	l.sfgtsi r18,0x0
  408cf8:	13 ff ff e2 	l.bf 408c80 <ScanDirectory+0x16b0>
  408cfc:	18 e0 00 41 	l.movhi r7,0x41
  408d00:	aa 98 00 00 	l.ori r20,r24,0x0
  408d04:	ab 1e 00 00 	l.ori r24,r30,0x0
  408d08:	87 c1 00 04 	l.lwz r30,0x4(r1)
                                    }
                                }
                            }
                        }
                    }
                    lfn[0] = 0;
  408d0c:	18 60 00 42 	l.movhi r3,0x42
  408d10:	9c 80 00 00 	l.addi r4,r0,0x0
  408d14:	a8 63 0b b8 	l.ori r3,r3,0xbb8
  408d18:	00 00 00 05 	l.j 408d2c <ScanDirectory+0x175c>
  408d1c:	d8 03 20 00 	l.sb 0x0(r3),r4
                if (pEntry->Attributes == ATTR_LFN) // long file name entry
                {
                    if (options & SCAN_LFN)
                    {
                        sequence_number = ((unsigned char*)pEntry)[0];
                        name_checksum = ((unsigned char*)pEntry)[13];
  408d20:	ab 16 00 00 	l.ori r24,r22,0x0
            {
                if (pEntry->Attributes == ATTR_LFN) // long file name entry
                {
                    if (options & SCAN_LFN)
                    {
                        sequence_number = ((unsigned char*)pEntry)[0];
  408d24:	aa 8e 00 00 	l.ori r20,r14,0x0
                            *ptr++ = ((unsigned char*)pEntry)[22];
                            *ptr++ = ((unsigned char*)pEntry)[24]; // next 6 characters
                            *ptr++ = ((unsigned char*)pEntry)[28];
                            *ptr++ = ((unsigned char*)pEntry)[30]; // last 2 characters

                            if (sequence_number & 0x40) // last lfn part
  408d28:	d4 01 58 10 	l.sw 0x10(r1),r11
        nEntries = fat32 ?  cluster_size << 4 : root_directory_size << 4; // 16 entries per sector
    }

    while (1)
    {
        for (iEntry = 0; iEntry < nEntries; iEntry++)
  408d2c:	84 a1 00 08 	l.lwz r5,0x8(r1)
  408d30:	84 41 00 1c 	l.lwz r2,0x1c(r1)
  408d34:	9c a5 00 01 	l.addi r5,r5,0x1
  408d38:	d4 01 28 08 	l.sw 0x8(r1),r5
  408d3c:	84 c1 00 08 	l.lwz r6,0x8(r1)
  408d40:	84 e1 00 18 	l.lwz r7,0x18(r1)
  408d44:	e4 86 38 00 	l.sfltu r6,r7
  408d48:	13 ff fa ce 	l.bf 407880 <ScanDirectory+0x2b0>
  408d4c:	84 81 00 08 	l.lwz r4,0x8(r1)
                    }
                    lfn[0] = 0;
                }
            }
        }
        if (iCurrentDirectory || fat32) // subdirectory is a linked cluster chain
  408d50:	18 a0 00 41 	l.movhi r5,0x41
  408d54:	aa 58 00 00 	l.ori r18,r24,0x0
  408d58:	a8 a5 a3 54 	l.ori r5,r5,0xa354
  408d5c:	84 a5 00 00 	l.lwz r5,0x0(r5)
  408d60:	bc 25 00 00 	l.sfnei r5,0x0
  408d64:	10 00 00 08 	l.bf 408d84 <ScanDirectory+0x17b4>
  408d68:	87 01 00 34 	l.lwz r24,0x34(r1)
  408d6c:	18 40 00 41 	l.movhi r2,0x41
  408d70:	a8 42 a3 51 	l.ori r2,r2,0xa351
  408d74:	8c a2 00 00 	l.lbz r5,0x0(r2)
  408d78:	bc 05 00 00 	l.sfeqi r5,0x0
  408d7c:	10 00 00 23 	l.bf 408e08 <ScanDirectory+0x1838>
  408d80:	bc 1c 00 00 	l.sfeqi r28,0x0
        {
            iDirectoryCluster = GetFATLink(iDirectoryCluster); // get next cluster in chain
  408d84:	07 ff f2 a1 	l.jal 405808 <GetFATLink>
  408d88:	a8 78 00 00 	l.ori r3,r24,0x0

            if (fat32 ? (iDirectoryCluster & 0x0FFFFFF8) == 0x0FFFFFF8 : (iDirectoryCluster & 0xFFF8) == 0xFFF8) // check if end of chain
  408d8c:	18 60 00 41 	l.movhi r3,0x41
  408d90:	a8 63 a3 51 	l.ori r3,r3,0xa351
  408d94:	8c a3 00 00 	l.lbz r5,0x0(r3)
  408d98:	bc 05 00 00 	l.sfeqi r5,0x0
  408d9c:	10 00 00 07 	l.bf 408db8 <ScanDirectory+0x17e8>
  408da0:	ab 0b 00 00 	l.ori r24,r11,0x0
  408da4:	18 80 0f ff 	l.movhi r4,0xfff
  408da8:	a8 84 ff f8 	l.ori r4,r4,0xfff8
  408dac:	e0 4b 20 03 	l.and r2,r11,r4
  408db0:	00 00 00 05 	l.j 408dc4 <ScanDirectory+0x17f4>
  408db4:	e0 42 20 05 	l.xor r2,r2,r4
  408db8:	a8 c0 ff f8 	l.ori r6,r0,0xfff8
  408dbc:	a4 4b ff f8 	l.andi r2,r11,0xfff8
  408dc0:	e0 42 30 05 	l.xor r2,r2,r6
  408dc4:	e0 a0 10 02 	l.sub r5,r0,r2
  408dc8:	e0 45 10 04 	l.or r2,r5,r2
  408dcc:	ac 42 ff ff 	l.xori r2,r2,0xffffffff
  408dd0:	b8 42 00 5f 	l.srli r2,r2,0x1f
  408dd4:	bc 22 00 00 	l.sfnei r2,0x0
  408dd8:	10 00 00 0b 	l.bf 408e04 <ScanDirectory+0x1834>
  408ddc:	18 a0 00 41 	l.movhi r5,0x41
                break; // no more clusters in chain

            iDirectorySector = data_start + cluster_size * (iDirectoryCluster - 2); // calculate first sector address of the new cluster
  408de0:	9c 78 ff fe 	l.addi r3,r24,0xfffffffe
  408de4:	a8 a5 a8 dc 	l.ori r5,r5,0xa8dc
  408de8:	07 ff dc a0 	l.jal 400068 <__mulsi3>
  408dec:	8c 85 00 00 	l.lbz r4,0x0(r5)
  408df0:	18 a0 00 41 	l.movhi r5,0x41
  408df4:	a8 a5 dc 8c 	l.ori r5,r5,0xdc8c
  408df8:	84 45 00 00 	l.lwz r2,0x0(r5)
        }
        else
            break;
    }
  408dfc:	03 ff fa 9c 	l.j 40786c <ScanDirectory+0x29c>
  408e00:	e0 4b 10 00 	l.add r2,r11,r2
    if (nNewEntries)
  408e04:	bc 1c 00 00 	l.sfeqi r28,0x0
  408e08:	10 00 00 f6 	l.bf 4091e0 <ScanDirectory+0x1c10>
  408e0c:	85 61 00 00 	l.lwz r11,0x0(r1)
    {
        if (mode == SCAN_NEXT_PAGE)
  408e10:	bc 3e 00 02 	l.sfnei r30,0x2
  408e14:	10 00 00 3c 	l.bf 408f04 <ScanDirectory+0x1934>
  408e18:	bc 3e ff fe 	l.sfnei r30,0xfffffffe
        {
            unsigned char j = 8 - nNewEntries; // number of remaining old entries to scroll
  408e1c:	9e 40 00 08 	l.addi r18,r0,0x8
  408e20:	18 40 00 41 	l.movhi r2,0x41
  408e24:	e2 52 e0 02 	l.sub r18,r18,r28
  408e28:	a8 42 e7 d0 	l.ori r2,r2,0xe7d0
  408e2c:	a6 52 00 ff 	l.andi r18,r18,0xff

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408e30:	e0 7c 10 00 	l.add r3,r28,r2
    if (nNewEntries)
    {
        if (mode == SCAN_NEXT_PAGE)
        {
            unsigned char j = 8 - nNewEntries; // number of remaining old entries to scroll
            for (i = 0; i < j; i++)
  408e34:	00 00 00 08 	l.j 408e54 <ScanDirectory+0x1884>
  408e38:	e0 92 10 00 	l.add r4,r18,r2
            {
                x = sort_table[i];
                sort_table[i] = sort_table[i + nNewEntries];
  408e3c:	8c e3 00 00 	l.lbz r7,0x0(r3)
        if (mode == SCAN_NEXT_PAGE)
        {
            unsigned char j = 8 - nNewEntries; // number of remaining old entries to scroll
            for (i = 0; i < j; i++)
            {
                x = sort_table[i];
  408e40:	8c a2 00 00 	l.lbz r5,0x0(r2)
                sort_table[i] = sort_table[i + nNewEntries];
  408e44:	d8 02 38 00 	l.sb 0x0(r2),r7
                sort_table[i + nNewEntries] = x;
  408e48:	d8 03 28 00 	l.sb 0x0(r3),r5
  408e4c:	9c 42 00 01 	l.addi r2,r2,0x1
  408e50:	9c 63 00 01 	l.addi r3,r3,0x1
    if (nNewEntries)
    {
        if (mode == SCAN_NEXT_PAGE)
        {
            unsigned char j = 8 - nNewEntries; // number of remaining old entries to scroll
            for (i = 0; i < j; i++)
  408e54:	e4 22 20 00 	l.sfne r2,r4
  408e58:	13 ff ff f9 	l.bf 408e3c <ScanDirectory+0x186c>
  408e5c:	15 00 00 00 	l.nop 0x0

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408e60:	18 40 00 41 	l.movhi r2,0x41
  408e64:	a8 42 e7 d0 	l.ori r2,r2,0xe7d0
  408e68:	e2 52 10 00 	l.add r18,r18,r2
  408e6c:	00 00 00 21 	l.j 408ef0 <ScanDirectory+0x1920>
  408e70:	9c 40 00 00 	l.addi r2,r0,0x0
  408e74:	18 80 00 41 	l.movhi r4,0x41
                sort_table[i + nNewEntries] = x;
            }
            // copy temporary buffer to display
            for (i = 0; i < nNewEntries; i++)
            {
                DirEntry[sort_table[i + j]] = t_DirEntry[t_sort_table[i]];
  408e78:	8e 12 00 00 	l.lbz r16,0x0(r18)

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408e7c:	a8 84 f1 00 	l.ori r4,r4,0xf100
  408e80:	e0 62 20 00 	l.add r3,r2,r4
                sort_table[i + nNewEntries] = x;
            }
            // copy temporary buffer to display
            for (i = 0; i < nNewEntries; i++)
            {
                DirEntry[sort_table[i + j]] = t_DirEntry[t_sort_table[i]];
  408e84:	18 c0 00 41 	l.movhi r6,0x41
  408e88:	8d c3 00 00 	l.lbz r14,0x0(r3)
  408e8c:	b8 70 00 05 	l.slli r3,r16,0x5
  408e90:	b8 8e 00 05 	l.slli r4,r14,0x5
  408e94:	a8 c6 f0 00 	l.ori r6,r6,0xf000
  408e98:	a8 a5 e6 d0 	l.ori r5,r5,0xe6d0
  408e9c:	e0 84 30 00 	l.add r4,r4,r6
  408ea0:	e0 63 28 00 	l.add r3,r3,r5
  408ea4:	9c a0 00 20 	l.addi r5,r0,0x20
  408ea8:	07 ff dc f6 	l.jal 400280 <memcpy>
  408eac:	9c 42 00 01 	l.addi r2,r2,0x1
                strcpy(DirEntryLFN[sort_table[i + j]], t_DirEntryLFN[t_sort_table[i]]);
  408eb0:	b8 90 00 02 	l.slli r4,r16,0x2
  408eb4:	b8 70 00 08 	l.slli r3,r16,0x8
  408eb8:	18 e0 00 41 	l.movhi r7,0x41
  408ebc:	18 a0 00 41 	l.movhi r5,0x41
  408ec0:	e0 64 18 00 	l.add r3,r4,r3
  408ec4:	b8 8e 00 02 	l.slli r4,r14,0x2
  408ec8:	e2 03 80 00 	l.add r16,r3,r16
  408ecc:	b8 6e 00 08 	l.slli r3,r14,0x8
  408ed0:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  408ed4:	a8 a5 e7 d8 	l.ori r5,r5,0xe7d8
  408ed8:	e0 64 18 00 	l.add r3,r4,r3
  408edc:	9e 52 00 01 	l.addi r18,r18,0x1
  408ee0:	e1 c3 70 00 	l.add r14,r3,r14
  408ee4:	e0 70 38 00 	l.add r3,r16,r7
  408ee8:	07 ff dc f9 	l.jal 4002cc <strcpy>
  408eec:	e0 8e 28 00 	l.add r4,r14,r5
                x = sort_table[i];
                sort_table[i] = sort_table[i + nNewEntries];
                sort_table[i + nNewEntries] = x;
            }
            // copy temporary buffer to display
            for (i = 0; i < nNewEntries; i++)
  408ef0:	e5 82 e0 00 	l.sflts r2,r28
  408ef4:	13 ff ff e0 	l.bf 408e74 <ScanDirectory+0x18a4>
  408ef8:	18 a0 00 41 	l.movhi r5,0x41
    printf("ScanDirectory(): %lu ms\r", time >> 20);
    */
    return rc;

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}
  408efc:	00 00 00 b9 	l.j 4091e0 <ScanDirectory+0x1c10>
  408f00:	85 61 00 00 	l.lwz r11,0x0(r1)
            {
                DirEntry[sort_table[i + j]] = t_DirEntry[t_sort_table[i]];
                strcpy(DirEntryLFN[sort_table[i + j]], t_DirEntryLFN[t_sort_table[i]]);
            }
        }
        else if (mode == SCAN_PREV_PAGE)
  408f04:	10 00 00 47 	l.bf 409020 <ScanDirectory+0x1a50>
  408f08:	9c 80 00 07 	l.addi r4,r0,0x7

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408f0c:	18 c0 00 41 	l.movhi r6,0x41
                strcpy(DirEntryLFN[sort_table[i + j]], t_DirEntryLFN[t_sort_table[i]]);
            }
        }
        else if (mode == SCAN_PREV_PAGE)
        { // note: temporary buffer entries are in reverse order
            unsigned char j = nNewEntries - 1;
  408f10:	9e 5c ff ff 	l.addi r18,r28,0xffffffff
  408f14:	18 60 00 41 	l.movhi r3,0x41
            for (i = 7; i > j; i--)
            {
                x = sort_table[i];
                sort_table[i] = sort_table[i - nNewEntries];
  408f18:	e0 44 e0 02 	l.sub r2,r4,r28

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408f1c:	a8 c6 e7 d0 	l.ori r6,r6,0xe7d0
                strcpy(DirEntryLFN[sort_table[i + j]], t_DirEntryLFN[t_sort_table[i]]);
            }
        }
        else if (mode == SCAN_PREV_PAGE)
        { // note: temporary buffer entries are in reverse order
            unsigned char j = nNewEntries - 1;
  408f20:	a6 52 00 ff 	l.andi r18,r18,0xff
  408f24:	a8 63 e7 d7 	l.ori r3,r3,0xe7d7
            for (i = 7; i > j; i--)
  408f28:	00 00 00 09 	l.j 408f4c <ScanDirectory+0x197c>
  408f2c:	e0 42 30 00 	l.add r2,r2,r6
            {
                x = sort_table[i];
                sort_table[i] = sort_table[i - nNewEntries];
  408f30:	8c e2 00 00 	l.lbz r7,0x0(r2)
        else if (mode == SCAN_PREV_PAGE)
        { // note: temporary buffer entries are in reverse order
            unsigned char j = nNewEntries - 1;
            for (i = 7; i > j; i--)
            {
                x = sort_table[i];
  408f34:	8c a3 00 00 	l.lbz r5,0x0(r3)
                sort_table[i] = sort_table[i - nNewEntries];
  408f38:	d8 03 38 00 	l.sb 0x0(r3),r7
                sort_table[i - nNewEntries] = x;
  408f3c:	d8 02 28 00 	l.sb 0x0(r2),r5
  408f40:	9c 84 ff ff 	l.addi r4,r4,0xffffffff
  408f44:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  408f48:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
            }
        }
        else if (mode == SCAN_PREV_PAGE)
        { // note: temporary buffer entries are in reverse order
            unsigned char j = nNewEntries - 1;
            for (i = 7; i > j; i--)
  408f4c:	e5 44 90 00 	l.sfgts r4,r18
  408f50:	13 ff ff f8 	l.bf 408f30 <ScanDirectory+0x1960>
  408f54:	15 00 00 00 	l.nop 0x0

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408f58:	18 40 00 41 	l.movhi r2,0x41
  408f5c:	a8 42 e7 d0 	l.ori r2,r2,0xe7d0
  408f60:	e2 52 10 00 	l.add r18,r18,r2
  408f64:	00 00 00 21 	l.j 408fe8 <ScanDirectory+0x1a18>
  408f68:	9c 40 00 00 	l.addi r2,r0,0x0
                sort_table[i - nNewEntries] = x;
            }
            // copy temporary buffer to display
            for (i = 0; i < nNewEntries; i++)
            {
                DirEntry[sort_table[j - i]] = t_DirEntry[t_sort_table[i]];
  408f6c:	8e 12 00 00 	l.lbz r16,0x0(r18)

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408f70:	a8 84 f1 00 	l.ori r4,r4,0xf100
                sort_table[i - nNewEntries] = x;
            }
            // copy temporary buffer to display
            for (i = 0; i < nNewEntries; i++)
            {
                DirEntry[sort_table[j - i]] = t_DirEntry[t_sort_table[i]];
  408f74:	18 a0 00 41 	l.movhi r5,0x41

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  408f78:	e0 62 20 00 	l.add r3,r2,r4
                sort_table[i - nNewEntries] = x;
            }
            // copy temporary buffer to display
            for (i = 0; i < nNewEntries; i++)
            {
                DirEntry[sort_table[j - i]] = t_DirEntry[t_sort_table[i]];
  408f7c:	18 c0 00 41 	l.movhi r6,0x41
  408f80:	8d c3 00 00 	l.lbz r14,0x0(r3)
  408f84:	b8 70 00 05 	l.slli r3,r16,0x5
  408f88:	b8 8e 00 05 	l.slli r4,r14,0x5
  408f8c:	a8 c6 f0 00 	l.ori r6,r6,0xf000
  408f90:	a8 a5 e6 d0 	l.ori r5,r5,0xe6d0
  408f94:	e0 84 30 00 	l.add r4,r4,r6
  408f98:	e0 63 28 00 	l.add r3,r3,r5
  408f9c:	9c a0 00 20 	l.addi r5,r0,0x20
  408fa0:	07 ff dc b8 	l.jal 400280 <memcpy>
  408fa4:	9c 42 00 01 	l.addi r2,r2,0x1
                strcpy(DirEntryLFN[sort_table[j - i]], t_DirEntryLFN[t_sort_table[i]]);
  408fa8:	b8 90 00 02 	l.slli r4,r16,0x2
  408fac:	b8 70 00 08 	l.slli r3,r16,0x8
  408fb0:	18 e0 00 41 	l.movhi r7,0x41
  408fb4:	18 a0 00 41 	l.movhi r5,0x41
  408fb8:	e0 64 18 00 	l.add r3,r4,r3
  408fbc:	b8 8e 00 02 	l.slli r4,r14,0x2
  408fc0:	e2 03 80 00 	l.add r16,r3,r16
  408fc4:	b8 6e 00 08 	l.slli r3,r14,0x8
  408fc8:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  408fcc:	a8 a5 e7 d8 	l.ori r5,r5,0xe7d8
  408fd0:	e0 64 18 00 	l.add r3,r4,r3
  408fd4:	9e 52 ff ff 	l.addi r18,r18,0xffffffff
  408fd8:	e1 c3 70 00 	l.add r14,r3,r14
  408fdc:	e0 70 38 00 	l.add r3,r16,r7
  408fe0:	07 ff dc bb 	l.jal 4002cc <strcpy>
  408fe4:	e0 8e 28 00 	l.add r4,r14,r5
                x = sort_table[i];
                sort_table[i] = sort_table[i - nNewEntries];
                sort_table[i - nNewEntries] = x;
            }
            // copy temporary buffer to display
            for (i = 0; i < nNewEntries; i++)
  408fe8:	e5 82 e0 00 	l.sflts r2,r28
  408fec:	13 ff ff e0 	l.bf 408f6c <ScanDirectory+0x199c>
  408ff0:	18 80 00 41 	l.movhi r4,0x41
            {
                DirEntry[sort_table[j - i]] = t_DirEntry[t_sort_table[i]];
                strcpy(DirEntryLFN[sort_table[j - i]], t_DirEntryLFN[t_sort_table[i]]);
            }
            nDirEntries += nNewEntries;
  408ff4:	18 40 00 41 	l.movhi r2,0x41
  408ff8:	a8 42 a3 52 	l.ori r2,r2,0xa352
  408ffc:	8c 82 00 00 	l.lbz r4,0x0(r2)
  409000:	e0 7c 20 00 	l.add r3,r28,r4
  409004:	a4 63 00 ff 	l.andi r3,r3,0xff
            if (nDirEntries > MAXDIRENTRIES)
  409008:	bc a3 00 08 	l.sfleui r3,0x8
  40900c:	10 00 00 74 	l.bf 4091dc <ScanDirectory+0x1c0c>
  409010:	d8 02 18 00 	l.sb 0x0(r2),r3
                nDirEntries = MAXDIRENTRIES;
  409014:	9c c0 00 08 	l.addi r6,r0,0x8
  409018:	00 00 00 71 	l.j 4091dc <ScanDirectory+0x1c0c>
  40901c:	d8 02 30 00 	l.sb 0x0(r2),r6
        }
        else if ((mode >= '0' && mode <= '9') || (mode >= 'A' && mode <= 'Z'))
  409020:	9c 9e ff bf 	l.addi r4,r30,0xffffffbf
  409024:	bc a4 00 19 	l.sfleui r4,0x19
  409028:	10 00 00 03 	l.bf 409034 <ScanDirectory+0x1a64>
  40902c:	9c a0 00 01 	l.addi r5,r0,0x1
  409030:	9c a0 00 00 	l.addi r5,r0,0x0
  409034:	a4 a5 00 ff 	l.andi r5,r5,0xff
  409038:	bc 25 00 00 	l.sfnei r5,0x0
  40903c:	10 00 00 0c 	l.bf 40906c <ScanDirectory+0x1a9c>
  409040:	18 80 00 41 	l.movhi r4,0x41
  409044:	9c de ff d0 	l.addi r6,r30,0xffffffd0
  409048:	bc a6 00 09 	l.sfleui r6,0x9
  40904c:	10 00 00 03 	l.bf 409058 <ScanDirectory+0x1a88>
  409050:	9c 80 00 01 	l.addi r4,r0,0x1
  409054:	a8 85 00 00 	l.ori r4,r5,0x0
  409058:	a4 84 00 ff 	l.andi r4,r4,0xff
  40905c:	bc 04 00 00 	l.sfeqi r4,0x0
  409060:	10 00 00 60 	l.bf 4091e0 <ScanDirectory+0x1c10>
  409064:	85 61 00 00 	l.lwz r11,0x0(r1)
        {
            if (t_DirEntry[t_sort_table[0]].Name[0] == mode)
  409068:	18 80 00 41 	l.movhi r4,0x41
  40906c:	18 e0 00 41 	l.movhi r7,0x41
  409070:	a8 84 f1 00 	l.ori r4,r4,0xf100
  409074:	a8 e7 f0 00 	l.ori r7,r7,0xf000
  409078:	8c 84 00 00 	l.lbz r4,0x0(r4)
  40907c:	b8 84 00 05 	l.slli r4,r4,0x5
  409080:	e0 84 38 00 	l.add r4,r4,r7
  409084:	8c a4 00 00 	l.lbz r5,0x0(r4)
  409088:	e4 25 f0 00 	l.sfne r5,r30
  40908c:	10 00 00 55 	l.bf 4091e0 <ScanDirectory+0x1c10>
  409090:	85 61 00 00 	l.lwz r11,0x0(r1)
            {
                x = 1; // if we were looking for a file we couldn't find anything other
                if (find_dir)
  409094:	84 41 00 0c 	l.lwz r2,0xc(r1)
  409098:	bc 02 00 00 	l.sfeqi r2,0x0
  40909c:	10 00 00 06 	l.bf 4090b4 <ScanDirectory+0x1ae4>
  4090a0:	15 00 00 00 	l.nop 0x0
                { // when looking for a directory we could find a file beginning with the same character as given one
                     x = t_DirEntry[t_sort_table[0]].Attributes & ATTR_DIRECTORY;
  4090a4:	8c 64 00 0b 	l.lbz r3,0xb(r4)
  4090a8:	a4 63 00 10 	l.andi r3,r3,0x10
  4090ac:	00 00 00 19 	l.j 409110 <ScanDirectory+0x1b40>
  4090b0:	a4 63 00 ff 	l.andi r3,r3,0xff
                }
                else if (!find_file) // find_next
  4090b4:	84 61 00 14 	l.lwz r3,0x14(r1)
  4090b8:	bc 23 00 00 	l.sfnei r3,0x0
  4090bc:	10 00 00 3c 	l.bf 4091ac <ScanDirectory+0x1bdc>
  4090c0:	84 41 00 0c 	l.lwz r2,0xc(r1)
                { // when looking for a directory we could find a file beginning with the same character as given one
                    x = (t_DirEntry[t_sort_table[0]].Attributes & ATTR_DIRECTORY) == (DirEntry[sort_table[iSelectedEntry]].Attributes & ATTR_DIRECTORY);
  4090c4:	18 40 00 41 	l.movhi r2,0x41
  4090c8:	18 a0 00 41 	l.movhi r5,0x41
  4090cc:	a8 42 a3 53 	l.ori r2,r2,0xa353
  4090d0:	a8 a5 e7 d0 	l.ori r5,r5,0xe7d0
  4090d4:	8c 42 00 00 	l.lbz r2,0x0(r2)
  4090d8:	e0 42 28 00 	l.add r2,r2,r5
  4090dc:	18 c0 00 41 	l.movhi r6,0x41
  4090e0:	8c 42 00 00 	l.lbz r2,0x0(r2)
  4090e4:	b8 42 00 05 	l.slli r2,r2,0x5
  4090e8:	a8 c6 e6 d0 	l.ori r6,r6,0xe6d0
  4090ec:	e0 42 30 00 	l.add r2,r2,r6
  4090f0:	8c a2 00 0b 	l.lbz r5,0xb(r2)
  4090f4:	8c 44 00 0b 	l.lbz r2,0xb(r4)
  4090f8:	e0 45 10 05 	l.xor r2,r5,r2
  4090fc:	a4 42 00 10 	l.andi r2,r2,0x10
  409100:	e0 80 10 02 	l.sub r4,r0,r2
  409104:	e0 44 10 04 	l.or r2,r4,r2
  409108:	ac 62 ff ff 	l.xori r3,r2,0xffffffff
  40910c:	b8 63 00 5f 	l.srli r3,r3,0x1f
                }

                if (x)
  409110:	9c 40 00 00 	l.addi r2,r0,0x0
  409114:	e4 23 10 00 	l.sfne r3,r2
  409118:	10 00 00 26 	l.bf 4091b0 <ScanDirectory+0x1be0>
  40911c:	e5 82 e0 00 	l.sflts r2,r28
    printf("ScanDirectory(): %lu ms\r", time >> 20);
    */
    return rc;

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}
  409120:	00 00 00 30 	l.j 4091e0 <ScanDirectory+0x1c10>
  409124:	85 61 00 00 	l.lwz r11,0x0(r1)

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  409128:	18 80 00 41 	l.movhi r4,0x41
  40912c:	a8 e7 e7 d0 	l.ori r7,r7,0xe7d0
  409130:	a8 84 f1 00 	l.ori r4,r4,0xf100
  409134:	e0 62 38 00 	l.add r3,r2,r7

                if (x)
                { // first entry is what we were searching for
                    for (i = 0; i < nNewEntries; i++)
                    {
                        DirEntry[sort_table[i]] = t_DirEntry[t_sort_table[i]];
  409138:	18 a0 00 41 	l.movhi r5,0x41
  40913c:	8e 03 00 00 	l.lbz r16,0x0(r3)

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}


char ScanDirectory(unsigned long mode, char *extension, unsigned char options)
  409140:	e0 62 20 00 	l.add r3,r2,r4

                if (x)
                { // first entry is what we were searching for
                    for (i = 0; i < nNewEntries; i++)
                    {
                        DirEntry[sort_table[i]] = t_DirEntry[t_sort_table[i]];
  409144:	18 c0 00 41 	l.movhi r6,0x41
  409148:	8d c3 00 00 	l.lbz r14,0x0(r3)
  40914c:	b8 70 00 05 	l.slli r3,r16,0x5
  409150:	b8 8e 00 05 	l.slli r4,r14,0x5
  409154:	a8 c6 f0 00 	l.ori r6,r6,0xf000
  409158:	a8 a5 e6 d0 	l.ori r5,r5,0xe6d0
  40915c:	e0 84 30 00 	l.add r4,r4,r6
  409160:	e0 63 28 00 	l.add r3,r3,r5
  409164:	9c a0 00 20 	l.addi r5,r0,0x20
  409168:	07 ff dc 46 	l.jal 400280 <memcpy>
  40916c:	9c 42 00 01 	l.addi r2,r2,0x1
                        strcpy(DirEntryLFN[sort_table[i]], t_DirEntryLFN[t_sort_table[i]]);
  409170:	b8 90 00 02 	l.slli r4,r16,0x2
  409174:	b8 70 00 08 	l.slli r3,r16,0x8
  409178:	18 e0 00 41 	l.movhi r7,0x41
  40917c:	18 a0 00 41 	l.movhi r5,0x41
  409180:	e0 64 18 00 	l.add r3,r4,r3
  409184:	b8 8e 00 02 	l.slli r4,r14,0x2
  409188:	e2 03 80 00 	l.add r16,r3,r16
  40918c:	b8 6e 00 08 	l.slli r3,r14,0x8
  409190:	a8 e7 de a8 	l.ori r7,r7,0xdea8
  409194:	a8 a5 e7 d8 	l.ori r5,r5,0xe7d8
  409198:	e0 64 18 00 	l.add r3,r4,r3
  40919c:	e1 c3 70 00 	l.add r14,r3,r14
  4091a0:	e0 70 38 00 	l.add r3,r16,r7
  4091a4:	07 ff dc 4a 	l.jal 4002cc <strcpy>
  4091a8:	e0 8e 28 00 	l.add r4,r14,r5
                    x = (t_DirEntry[t_sort_table[0]].Attributes & ATTR_DIRECTORY) == (DirEntry[sort_table[iSelectedEntry]].Attributes & ATTR_DIRECTORY);
                }

                if (x)
                { // first entry is what we were searching for
                    for (i = 0; i < nNewEntries; i++)
  4091ac:	e5 82 e0 00 	l.sflts r2,r28
  4091b0:	13 ff ff de 	l.bf 409128 <ScanDirectory+0x1b58>
  4091b4:	18 e0 00 41 	l.movhi r7,0x41
                    {
                        DirEntry[sort_table[i]] = t_DirEntry[t_sort_table[i]];
                        strcpy(DirEntryLFN[sort_table[i]], t_DirEntryLFN[t_sort_table[i]]);
                    }
                    nDirEntries = nNewEntries;
  4091b8:	18 40 00 41 	l.movhi r2,0x41
                    iSelectedEntry = 0;
  4091bc:	9c c0 00 00 	l.addi r6,r0,0x0
                    for (i = 0; i < nNewEntries; i++)
                    {
                        DirEntry[sort_table[i]] = t_DirEntry[t_sort_table[i]];
                        strcpy(DirEntryLFN[sort_table[i]], t_DirEntryLFN[t_sort_table[i]]);
                    }
                    nDirEntries = nNewEntries;
  4091c0:	a8 42 a3 52 	l.ori r2,r2,0xa352
                    iSelectedEntry = 0;
                    rc = 1; // inform the caller that the search succeeded
  4091c4:	9c e0 00 01 	l.addi r7,r0,0x1
                    for (i = 0; i < nNewEntries; i++)
                    {
                        DirEntry[sort_table[i]] = t_DirEntry[t_sort_table[i]];
                        strcpy(DirEntryLFN[sort_table[i]], t_DirEntryLFN[t_sort_table[i]]);
                    }
                    nDirEntries = nNewEntries;
  4091c8:	d8 02 e0 00 	l.sb 0x0(r2),r28
                    iSelectedEntry = 0;
  4091cc:	18 40 00 41 	l.movhi r2,0x41
  4091d0:	a8 42 a3 53 	l.ori r2,r2,0xa353
  4091d4:	d8 02 30 00 	l.sb 0x0(r2),r6
                    rc = 1; // inform the caller that the search succeeded
  4091d8:	d4 01 38 00 	l.sw 0x0(r1),r7
    printf("ScanDirectory(): %lu ms\r", time >> 20);
    */
    return rc;

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L2);
}
  4091dc:	85 61 00 00 	l.lwz r11,0x0(r1)
  4091e0:	9c 21 00 64 	l.addi r1,r1,0x64
  4091e4:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  4091e8:	84 41 ff d4 	l.lwz r2,0xffffffd4(r1)
  4091ec:	85 c1 ff d8 	l.lwz r14,0xffffffd8(r1)
  4091f0:	86 01 ff dc 	l.lwz r16,0xffffffdc(r1)
  4091f4:	86 41 ff e0 	l.lwz r18,0xffffffe0(r1)
  4091f8:	86 81 ff e4 	l.lwz r20,0xffffffe4(r1)
  4091fc:	86 c1 ff e8 	l.lwz r22,0xffffffe8(r1)
  409200:	87 01 ff ec 	l.lwz r24,0xffffffec(r1)
  409204:	87 41 ff f0 	l.lwz r26,0xfffffff0(r1)
  409208:	87 81 ff f4 	l.lwz r28,0xfffffff4(r1)
  40920c:	44 00 48 00 	l.jr r9
  409210:	87 c1 ff f8 	l.lwz r30,0xfffffff8(r1)

00409214 <SelectFile>:

  DEBUG_FUNC_OUT(DEBUG_F_MENU | DEBUG_L2);
}

void SelectFile(char* pFileExt, unsigned char Options, unsigned char MenuSelect, unsigned char MenuCancel)
{
  409214:	d7 e1 17 ec 	l.sw 0xffffffec(r1),r2
  409218:	a8 44 00 00 	l.ori r2,r4,0x0
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L1);

    // this function displays file selection menu

    if (strncmp(pFileExt, fs_pFileExt, 3) != 0) // check desired file extension
  40921c:	18 80 00 41 	l.movhi r4,0x41

  DEBUG_FUNC_OUT(DEBUG_F_MENU | DEBUG_L2);
}

void SelectFile(char* pFileExt, unsigned char Options, unsigned char MenuSelect, unsigned char MenuCancel)
{
  409220:	d7 e1 77 f0 	l.sw 0xfffffff0(r1),r14
  409224:	d7 e1 87 f4 	l.sw 0xfffffff4(r1),r16
  409228:	d7 e1 97 f8 	l.sw 0xfffffff8(r1),r18
  40922c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L1);

    // this function displays file selection menu

    if (strncmp(pFileExt, fs_pFileExt, 3) != 0) // check desired file extension
  409230:	a8 84 a3 94 	l.ori r4,r4,0xa394

  DEBUG_FUNC_OUT(DEBUG_F_MENU | DEBUG_L2);
}

void SelectFile(char* pFileExt, unsigned char Options, unsigned char MenuSelect, unsigned char MenuCancel)
{
  409234:	9c 21 ff ec 	l.addi r1,r1,0xffffffec
  409238:	aa 45 00 00 	l.ori r18,r5,0x0
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L1);

    // this function displays file selection menu

    if (strncmp(pFileExt, fs_pFileExt, 3) != 0) // check desired file extension
  40923c:	84 84 00 00 	l.lwz r4,0x0(r4)
  409240:	9c a0 00 03 	l.addi r5,r0,0x3

  DEBUG_FUNC_OUT(DEBUG_F_MENU | DEBUG_L2);
}

void SelectFile(char* pFileExt, unsigned char Options, unsigned char MenuSelect, unsigned char MenuCancel)
{
  409244:	a9 c3 00 00 	l.ori r14,r3,0x0
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L1);

    // this function displays file selection menu

    if (strncmp(pFileExt, fs_pFileExt, 3) != 0) // check desired file extension
  409248:	07 ff dc 33 	l.jal 400314 <strncmp>
  40924c:	aa 06 00 00 	l.ori r16,r6,0x0
  409250:	bc 0b 00 00 	l.sfeqi r11,0x0
  409254:	10 00 00 09 	l.bf 409278 <SelectFile+0x64>
  409258:	18 60 00 41 	l.movhi r3,0x41
    { // if different from the current one go to the root directory and init entry buffer
        ChangeDirectory(DIRECTORY_ROOT);
  40925c:	07 ff e6 f1 	l.jal 402e20 <ChangeDirectory>
  409260:	9c 60 00 00 	l.addi r3,r0,0x0
        ScanDirectory(SCAN_INIT, pFileExt, Options);
  409264:	9c 60 00 00 	l.addi r3,r0,0x0
  409268:	a8 8e 00 00 	l.ori r4,r14,0x0
  40926c:	07 ff f8 d9 	l.jal 4075d0 <ScanDirectory>
  409270:	a8 a2 00 00 	l.ori r5,r2,0x0
    }

    fs_pFileExt = pFileExt;
  409274:	18 60 00 41 	l.movhi r3,0x41
  409278:	a8 63 a3 94 	l.ori r3,r3,0xa394
  40927c:	d4 03 70 00 	l.sw 0x0(r3),r14
    fs_Options = Options;
  409280:	18 60 00 41 	l.movhi r3,0x41
  409284:	a8 63 fd 59 	l.ori r3,r3,0xfd59
  409288:	d8 03 10 00 	l.sb 0x0(r3),r2
    fs_MenuSelect = MenuSelect;
  40928c:	18 40 00 41 	l.movhi r2,0x41
    fs_MenuCancel = MenuCancel;

    menustate = MENU_FILE_SELECT1;
  409290:	9c 60 00 08 	l.addi r3,r0,0x8
        ScanDirectory(SCAN_INIT, pFileExt, Options);
    }

    fs_pFileExt = pFileExt;
    fs_Options = Options;
    fs_MenuSelect = MenuSelect;
  409294:	a8 42 fd 5a 	l.ori r2,r2,0xfd5a
  409298:	d8 02 90 00 	l.sb 0x0(r2),r18
    fs_MenuCancel = MenuCancel;
  40929c:	18 40 00 41 	l.movhi r2,0x41
  4092a0:	a8 42 fd 5b 	l.ori r2,r2,0xfd5b
  4092a4:	d8 02 80 00 	l.sb 0x0(r2),r16

    menustate = MENU_FILE_SELECT1;
  4092a8:	18 40 00 41 	l.movhi r2,0x41
  4092ac:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4092b0:	d8 02 18 00 	l.sb 0x0(r2),r3

  DEBUG_FUNC_OUT(DEBUG_F_MENU | DEBUG_L1);
}
  4092b4:	9c 21 00 14 	l.addi r1,r1,0x14
  4092b8:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  4092bc:	84 41 ff ec 	l.lwz r2,0xffffffec(r1)
  4092c0:	85 c1 ff f0 	l.lwz r14,0xfffffff0(r1)
  4092c4:	86 01 ff f4 	l.lwz r16,0xfffffff4(r1)
  4092c8:	44 00 48 00 	l.jr r9
  4092cc:	86 41 ff f8 	l.lwz r18,0xfffffff8(r1)

004092d0 <FileOpen>:
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L1);
}


unsigned char FileOpen(fileTYPE *file, const char *name)
{
  4092d0:	d7 e1 17 d4 	l.sw 0xffffffd4(r1),r2
        iDirectorySector = data_start + cluster_size * (iDirectoryCluster - 2);
        nEntries = cluster_size << 4; // 16 entries per sector
    }
    else // root directory
    {
        iDirectoryCluster = root_directory_cluster;
  4092d4:	18 40 00 41 	l.movhi r2,0x41
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L1);
}


unsigned char FileOpen(fileTYPE *file, const char *name)
{
  4092d8:	d7 e1 77 d8 	l.sw 0xffffffd8(r1),r14
  4092dc:	d7 e1 b7 e8 	l.sw 0xffffffe8(r1),r22
  4092e0:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  4092e4:	d7 e1 87 dc 	l.sw 0xffffffdc(r1),r16
  4092e8:	d7 e1 97 e0 	l.sw 0xffffffe0(r1),r18
  4092ec:	d7 e1 a7 e4 	l.sw 0xffffffe4(r1),r20
  4092f0:	d7 e1 c7 ec 	l.sw 0xffffffec(r1),r24
  4092f4:	d7 e1 d7 f0 	l.sw 0xfffffff0(r1),r26
  4092f8:	d7 e1 e7 f4 	l.sw 0xfffffff4(r1),r28
  4092fc:	d7 e1 f7 f8 	l.sw 0xfffffff8(r1),r30
        iDirectorySector = data_start + cluster_size * (iDirectoryCluster - 2);
        nEntries = cluster_size << 4; // 16 entries per sector
    }
    else // root directory
    {
        iDirectoryCluster = root_directory_cluster;
  409300:	a8 42 dc 90 	l.ori r2,r2,0xdc90
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L1);
}


unsigned char FileOpen(fileTYPE *file, const char *name)
{
  409304:	9c 21 ff cc 	l.addi r1,r1,0xffffffcc
        iDirectorySector = data_start + cluster_size * (iDirectoryCluster - 2);
        nEntries = cluster_size << 4; // 16 entries per sector
    }
    else // root directory
    {
        iDirectoryCluster = root_directory_cluster;
  409308:	86 42 00 00 	l.lwz r18,0x0(r2)
        iDirectorySector = root_directory_start;
  40930c:	18 40 00 41 	l.movhi r2,0x41
  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L1);
}


unsigned char FileOpen(fileTYPE *file, const char *name)
{
  409310:	a9 c3 00 00 	l.ori r14,r3,0x0
        nEntries = cluster_size << 4; // 16 entries per sector
    }
    else // root directory
    {
        iDirectoryCluster = root_directory_cluster;
        iDirectorySector = root_directory_start;
  409314:	a8 42 dc 94 	l.ori r2,r2,0xdc94
  409318:	86 02 00 00 	l.lwz r16,0x0(r2)
        nEntries = fat32 ?  cluster_size << 4 : root_directory_size << 4; // 16 entries per sector
  40931c:	18 40 00 41 	l.movhi r2,0x41
  409320:	a8 42 a3 51 	l.ori r2,r2,0xa351
  409324:	8c 42 00 00 	l.lbz r2,0x0(r2)
  409328:	bc 02 00 00 	l.sfeqi r2,0x0
  40932c:	10 00 00 06 	l.bf 409344 <FileOpen+0x74>
  409330:	aa c4 00 00 	l.ori r22,r4,0x0
  409334:	18 40 00 41 	l.movhi r2,0x41
  409338:	a8 42 a8 dc 	l.ori r2,r2,0xa8dc
  40933c:	00 00 00 05 	l.j 409350 <FileOpen+0x80>
  409340:	8f c2 00 00 	l.lbz r30,0x0(r2)
  409344:	18 40 00 41 	l.movhi r2,0x41
  409348:	a8 42 dc 98 	l.ori r2,r2,0xdc98
  40934c:	87 c2 00 00 	l.lwz r30,0x0(r2)
                    }
                }
            }
        }

        if (iDirectory || fat32) // subdirectory is a linked cluster chain
  409350:	1b 80 00 41 	l.movhi r28,0x41
            iDirectoryCluster = GetFATLink(iDirectoryCluster); // get next cluster in chain

            if (fat32 ? (iDirectoryCluster & 0x0FFFFFF8) == 0x0FFFFFF8 : (iDirectoryCluster & 0xFFF8) == 0xFFF8) // check if end of cluster chain
                break; // no more clusters in chain

            iDirectorySector = data_start + cluster_size * (iDirectoryCluster - 2); // calculate first sector address of the new cluster
  409354:	1b 40 00 41 	l.movhi r26,0x41
    }
    else // root directory
    {
        iDirectoryCluster = root_directory_cluster;
        iDirectorySector = root_directory_start;
        nEntries = fat32 ?  cluster_size << 4 : root_directory_size << 4; // 16 entries per sector
  409358:	bb de 00 04 	l.slli r30,r30,0x4
unsigned char FileOpen(fileTYPE *file, const char *name)
{
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L1);

    unsigned long  iDirectory = 0;       // only root directory is supported
    DIRENTRY      *pEntry = NULL;        // pointer to current entry in sector buffer
  40935c:	9c 40 00 00 	l.addi r2,r0,0x0
                    }
                }
            }
        }

        if (iDirectory || fat32) // subdirectory is a linked cluster chain
  409360:	ab 9c a3 51 	l.ori r28,r28,0xa351
            iDirectoryCluster = GetFATLink(iDirectoryCluster); // get next cluster in chain

            if (fat32 ? (iDirectoryCluster & 0x0FFFFFF8) == 0x0FFFFFF8 : (iDirectoryCluster & 0xFFF8) == 0xFFF8) // check if end of cluster chain
                break; // no more clusters in chain

            iDirectorySector = data_start + cluster_size * (iDirectoryCluster - 2); // calculate first sector address of the new cluster
  409364:	ab 5a dc 8c 	l.ori r26,r26,0xdc8c
        nEntries = fat32 ?  cluster_size << 4 : root_directory_size << 4; // 16 entries per sector
    }

    while (1)
    {
        for (iEntry = 0; iEntry < nEntries; iEntry++)
  409368:	00 00 00 52 	l.j 4094b0 <FileOpen+0x1e0>
  40936c:	9e 80 00 00 	l.addi r20,r0,0x0
        {
            if ((iEntry & 0x0F) == 0) // first entry in sector, load the sector
  409370:	bc 38 00 00 	l.sfnei r24,0x0
  409374:	10 00 00 0b 	l.bf 4093a0 <FileOpen+0xd0>
  409378:	18 80 00 41 	l.movhi r4,0x41
            {
                MMC_Read(iDirectorySector++, sector_buffer); // root directory is linear
  40937c:	9c 50 00 01 	l.addi r2,r16,0x1
  409380:	d4 01 10 04 	l.sw 0x4(r1),r2
  409384:	a8 70 00 00 	l.ori r3,r16,0x0
  409388:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  40938c:	07 ff ef 50 	l.jal 4050cc <MMC_Read>
  409390:	18 40 00 41 	l.movhi r2,0x41
                pEntry = (DIRENTRY*)sector_buffer;
  409394:	a8 42 a4 dc 	l.ori r2,r2,0xa4dc
    {
        for (iEntry = 0; iEntry < nEntries; iEntry++)
        {
            if ((iEntry & 0x0F) == 0) // first entry in sector, load the sector
            {
                MMC_Read(iDirectorySector++, sector_buffer); // root directory is linear
  409398:	00 00 00 03 	l.j 4093a4 <FileOpen+0xd4>
  40939c:	86 01 00 04 	l.lwz r16,0x4(r1)
                pEntry = (DIRENTRY*)sector_buffer;
            }
            else
                pEntry++;
  4093a0:	9c 42 00 20 	l.addi r2,r2,0x20


            if (pEntry->Name[0] != SLOT_EMPTY && pEntry->Name[0] != SLOT_DELETED) // valid entry??
  4093a4:	8c 62 00 00 	l.lbz r3,0x0(r2)
  4093a8:	bc 03 00 e5 	l.sfeqi r3,0xe5
  4093ac:	10 00 00 40 	l.bf 4094ac <FileOpen+0x1dc>
  4093b0:	bc 03 00 00 	l.sfeqi r3,0x0
  4093b4:	10 00 00 3e 	l.bf 4094ac <FileOpen+0x1dc>
  4093b8:	15 00 00 00 	l.nop 0x0
            {
                if (!(pEntry->Attributes & (ATTR_VOLUME | ATTR_DIRECTORY))) // not a volume nor directory
  4093bc:	8c 62 00 0b 	l.lbz r3,0xb(r2)
  4093c0:	a4 63 00 18 	l.andi r3,r3,0x18
  4093c4:	bc 23 00 00 	l.sfnei r3,0x0
  4093c8:	10 00 00 39 	l.bf 4094ac <FileOpen+0x1dc>
  4093cc:	a8 62 00 00 	l.ori r3,r2,0x0
                {
                    if (strncmp((const char*)pEntry->Name, name, sizeof(file->name)) == 0)
  4093d0:	a8 96 00 00 	l.ori r4,r22,0x0
  4093d4:	07 ff db d0 	l.jal 400314 <strncmp>
  4093d8:	9c a0 00 0b 	l.addi r5,r0,0xb
  4093dc:	bc 2b 00 00 	l.sfnei r11,0x0
  4093e0:	10 00 00 34 	l.bf 4094b0 <FileOpen+0x1e0>
  4093e4:	9e 94 00 01 	l.addi r20,r20,0x1
                    {
                        strncpy(file->name, (const char*)pEntry->Name, sizeof(file->name));
  4093e8:	a8 6e 00 00 	l.ori r3,r14,0x0
  4093ec:	a8 82 00 00 	l.ori r4,r2,0x0
  4093f0:	07 ff db df 	l.jal 40036c <strncpy>
  4093f4:	9c a0 00 0b 	l.addi r5,r0,0xb
                        file->attributes = pEntry->Attributes;
  4093f8:	8c 62 00 0b 	l.lbz r3,0xb(r2)
  4093fc:	d8 0e 18 0b 	l.sb 0xb(r14),r3
//                        file->size = pEntry->FileSize; 																		// it only works when using little endian long representation
                        file->size = SwapBBBB(pEntry->FileSize); 		// for 68000
  409400:	18 c0 00 ff 	l.movhi r6,0xff
  409404:	84 62 00 1c 	l.lwz r3,0x1c(r2)
  409408:	b8 a3 00 18 	l.slli r5,r3,0x18
  40940c:	b8 83 00 58 	l.srli r4,r3,0x18
  409410:	e0 85 20 04 	l.or r4,r5,r4
  409414:	e0 a3 30 03 	l.and r5,r3,r6
  409418:	a4 63 ff 00 	l.andi r3,r3,0xff00
  40941c:	b8 a5 00 48 	l.srli r5,r5,0x8
  409420:	b8 63 00 08 	l.slli r3,r3,0x8
  409424:	e0 84 28 04 	l.or r4,r4,r5
  409428:	e0 64 18 04 	l.or r3,r4,r3
  40942c:	d4 0e 18 18 	l.sw 0x18(r14),r3
//                        file->size = ((file->size>>24)&0xFF)|((file->size>>8)&0xFF00)|((file->size<<8)&0xFF0000)|((file->size<<24)&0xFF000000); // for 68000 
//                        file->start_cluster = pEntry->StartCluster + (fat32 ? (pEntry->HighCluster & 0x0FFF) << 16 : 0); 	// it only works when using little endian long representation
                        file->start_cluster = SwapBB(pEntry->StartCluster) + (fat32 ? (SwapBB(pEntry->HighCluster) & 0x0FFF) << 16 : 0); 	// it only works when using little endian long representation for 68000 
  409430:	94 82 00 1a 	l.lhz r4,0x1a(r2)
  409434:	b8 64 00 08 	l.slli r3,r4,0x8
  409438:	b8 84 00 48 	l.srli r4,r4,0x8
  40943c:	a4 63 ff ff 	l.andi r3,r3,0xffff
  409440:	e0 83 20 04 	l.or r4,r3,r4
  409444:	18 60 00 41 	l.movhi r3,0x41
  409448:	a8 63 a3 51 	l.ori r3,r3,0xa351
  40944c:	8c 63 00 00 	l.lbz r3,0x0(r3)
  409450:	bc 03 00 00 	l.sfeqi r3,0x0
  409454:	10 00 00 09 	l.bf 409478 <FileOpen+0x1a8>
  409458:	e0 63 20 00 	l.add r3,r3,r4
  40945c:	94 42 00 14 	l.lhz r2,0x14(r2)
  409460:	b8 62 00 08 	l.slli r3,r2,0x8
  409464:	b8 42 00 48 	l.srli r2,r2,0x8
  409468:	a4 63 0f 00 	l.andi r3,r3,0xf00
  40946c:	e0 63 10 04 	l.or r3,r3,r2
  409470:	b8 63 00 10 	l.slli r3,r3,0x10
  409474:	e0 63 20 00 	l.add r3,r3,r4
//                        file->start_cluster = (((pEntry->StartCluster>>8)&0xFF)|((pEntry->StartCluster<<8)&0xFF00)) | (fat32 ? ((pEntry->HighCluster & 0x0F) << 24)|((pEntry->HighCluster & 0xFF00) << 8)  : 0);  // for 68000 
                        file->cluster =  file->start_cluster;
                        file->sector = 0;
  409478:	9c 40 00 00 	l.addi r2,r0,0x0
                        file->attributes = pEntry->Attributes;
//                        file->size = pEntry->FileSize; 																		// it only works when using little endian long representation
                        file->size = SwapBBBB(pEntry->FileSize); 		// for 68000
//                        file->size = ((file->size>>24)&0xFF)|((file->size>>8)&0xFF00)|((file->size<<8)&0xFF0000)|((file->size<<24)&0xFF000000); // for 68000 
//                        file->start_cluster = pEntry->StartCluster + (fat32 ? (pEntry->HighCluster & 0x0FFF) << 16 : 0); 	// it only works when using little endian long representation
                        file->start_cluster = SwapBB(pEntry->StartCluster) + (fat32 ? (SwapBB(pEntry->HighCluster) & 0x0FFF) << 16 : 0); 	// it only works when using little endian long representation for 68000 
  40947c:	d4 0e 18 20 	l.sw 0x20(r14),r3
//                        file->start_cluster = (((pEntry->StartCluster>>8)&0xFF)|((pEntry->StartCluster<<8)&0xFF00)) | (fat32 ? ((pEntry->HighCluster & 0x0F) << 24)|((pEntry->HighCluster & 0xFF00) << 8)  : 0);  // for 68000 
                        file->cluster =  file->start_cluster;
  409480:	d4 0e 18 1c 	l.sw 0x1c(r14),r3
                        file->sector = 0;
                        file->entry.sector = iDirectorySector - 1;
  409484:	9e 10 ff ff 	l.addi r16,r16,0xffffffff
                        file->entry.index = iEntry & 0x0F;

                        printf("file \"%s\" found\r", name);
  409488:	18 60 00 41 	l.movhi r3,0x41
//                        file->size = ((file->size>>24)&0xFF)|((file->size>>8)&0xFF00)|((file->size<<8)&0xFF0000)|((file->size<<24)&0xFF000000); // for 68000 
//                        file->start_cluster = pEntry->StartCluster + (fat32 ? (pEntry->HighCluster & 0x0FFF) << 16 : 0); 	// it only works when using little endian long representation
                        file->start_cluster = SwapBB(pEntry->StartCluster) + (fat32 ? (SwapBB(pEntry->HighCluster) & 0x0FFF) << 16 : 0); 	// it only works when using little endian long representation for 68000 
//                        file->start_cluster = (((pEntry->StartCluster>>8)&0xFF)|((pEntry->StartCluster<<8)&0xFF00)) | (fat32 ? ((pEntry->HighCluster & 0x0F) << 24)|((pEntry->HighCluster & 0xFF00) << 8)  : 0);  // for 68000 
                        file->cluster =  file->start_cluster;
                        file->sector = 0;
  40948c:	d4 0e 10 14 	l.sw 0x14(r14),r2
                        file->entry.sector = iDirectorySector - 1;
  409490:	d4 0e 80 0c 	l.sw 0xc(r14),r16
                        file->entry.index = iEntry & 0x0F;
  409494:	d4 0e c0 10 	l.sw 0x10(r14),r24

                        printf("file \"%s\" found\r", name);
  409498:	a8 63 7d 7e 	l.ori r3,r3,0x7d7e
  40949c:	07 ff ec 7e 	l.jal 404694 <printf>
  4094a0:	d4 01 b0 00 	l.sw 0x0(r1),r22

                        return(1);
  4094a4:	00 00 00 33 	l.j 409570 <FileOpen+0x2a0>
  4094a8:	9d 60 00 01 	l.addi r11,r0,0x1
        nEntries = fat32 ?  cluster_size << 4 : root_directory_size << 4; // 16 entries per sector
    }

    while (1)
    {
        for (iEntry = 0; iEntry < nEntries; iEntry++)
  4094ac:	9e 94 00 01 	l.addi r20,r20,0x1
  4094b0:	e4 94 f0 00 	l.sfltu r20,r30
  4094b4:	13 ff ff af 	l.bf 409370 <FileOpen+0xa0>
  4094b8:	a7 14 00 0f 	l.andi r24,r20,0xf
                    }
                }
            }
        }

        if (iDirectory || fat32) // subdirectory is a linked cluster chain
  4094bc:	8c 7c 00 00 	l.lbz r3,0x0(r28)
  4094c0:	bc 03 00 00 	l.sfeqi r3,0x0
  4094c4:	10 00 00 1f 	l.bf 409540 <FileOpen+0x270>
  4094c8:	18 60 00 41 	l.movhi r3,0x41
        {
            iDirectoryCluster = GetFATLink(iDirectoryCluster); // get next cluster in chain
  4094cc:	07 ff f0 cf 	l.jal 405808 <GetFATLink>
  4094d0:	a8 72 00 00 	l.ori r3,r18,0x0

            if (fat32 ? (iDirectoryCluster & 0x0FFFFFF8) == 0x0FFFFFF8 : (iDirectoryCluster & 0xFFF8) == 0xFFF8) // check if end of cluster chain
  4094d4:	8c 7c 00 00 	l.lbz r3,0x0(r28)
  4094d8:	bc 03 00 00 	l.sfeqi r3,0x0
  4094dc:	10 00 00 07 	l.bf 4094f8 <FileOpen+0x228>
  4094e0:	aa 4b 00 00 	l.ori r18,r11,0x0
  4094e4:	18 80 0f ff 	l.movhi r4,0xfff
  4094e8:	a8 84 ff f8 	l.ori r4,r4,0xfff8
  4094ec:	e0 6b 20 03 	l.and r3,r11,r4
  4094f0:	00 00 00 05 	l.j 409504 <FileOpen+0x234>
  4094f4:	e0 63 20 05 	l.xor r3,r3,r4
  4094f8:	a8 c0 ff f8 	l.ori r6,r0,0xfff8
  4094fc:	a4 6b ff f8 	l.andi r3,r11,0xfff8
  409500:	e0 63 30 05 	l.xor r3,r3,r6
  409504:	e0 80 18 02 	l.sub r4,r0,r3
  409508:	e0 64 18 04 	l.or r3,r4,r3
  40950c:	ac 63 ff ff 	l.xori r3,r3,0xffffffff
  409510:	b8 63 00 5f 	l.srli r3,r3,0x1f
  409514:	bc 23 00 00 	l.sfnei r3,0x0
  409518:	10 00 00 09 	l.bf 40953c <FileOpen+0x26c>
  40951c:	18 a0 00 41 	l.movhi r5,0x41
                break; // no more clusters in chain

            iDirectorySector = data_start + cluster_size * (iDirectoryCluster - 2); // calculate first sector address of the new cluster
  409520:	9c 72 ff fe 	l.addi r3,r18,0xfffffffe
  409524:	a8 a5 a8 dc 	l.ori r5,r5,0xa8dc
  409528:	07 ff da d0 	l.jal 400068 <__mulsi3>
  40952c:	8c 85 00 00 	l.lbz r4,0x0(r5)
  409530:	86 1a 00 00 	l.lwz r16,0x0(r26)
        }
        else
            break;
    }
  409534:	03 ff ff 8d 	l.j 409368 <FileOpen+0x98>
  409538:	e2 0b 80 00 	l.add r16,r11,r16

    printf("file \"%s\" not found\r", name);
  40953c:	18 60 00 41 	l.movhi r3,0x41
  409540:	d4 01 b0 00 	l.sw 0x0(r1),r22
  409544:	a8 63 7d 8f 	l.ori r3,r3,0x7d8f
  409548:	07 ff ec 53 	l.jal 404694 <printf>
  40954c:	9c 4e 01 2c 	l.addi r2,r14,0x12c
  409550:	00 00 00 05 	l.j 409564 <FileOpen+0x294>
  409554:	e4 2e 10 00 	l.sfne r14,r2
		*q++ = c;
  409558:	d8 0e 30 00 	l.sb 0x0(r14),r6
  40955c:	9d ce 00 01 	l.addi r14,r14,0x1
	asm volatile ("cld ; rep ; stosq ; movl %3,%%ecx ; rep ; stosb"
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
  409560:	e4 2e 10 00 	l.sfne r14,r2
  409564:	13 ff ff fd 	l.bf 409558 <FileOpen+0x288>
  409568:	9c c0 00 00 	l.addi r6,r0,0x0
    memset(file, 0, sizeof(fileTYPE));
    return(0);
  40956c:	9d 60 00 00 	l.addi r11,r0,0x0

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L1);
}
  409570:	9c 21 00 34 	l.addi r1,r1,0x34
  409574:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  409578:	84 41 ff d4 	l.lwz r2,0xffffffd4(r1)
  40957c:	85 c1 ff d8 	l.lwz r14,0xffffffd8(r1)
  409580:	86 01 ff dc 	l.lwz r16,0xffffffdc(r1)
  409584:	86 41 ff e0 	l.lwz r18,0xffffffe0(r1)
  409588:	86 81 ff e4 	l.lwz r20,0xffffffe4(r1)
  40958c:	86 c1 ff e8 	l.lwz r22,0xffffffe8(r1)
  409590:	87 01 ff ec 	l.lwz r24,0xffffffec(r1)
  409594:	87 41 ff f0 	l.lwz r26,0xfffffff0(r1)
  409598:	87 81 ff f4 	l.lwz r28,0xfffffff4(r1)
  40959c:	44 00 48 00 	l.jr r9
  4095a0:	87 c1 ff f8 	l.lwz r30,0xfffffff8(r1)

004095a4 <RAOpen>:
  DEBUG_FUNC_OUT(DEBUG_F_RAFILE | DEBUG_L1);
}


int RAOpen(RAFile *file,const char *filename)
{
  4095a4:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
  4095a8:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  4095ac:	a9 63 00 00 	l.ori r11,r3,0x0
  4095b0:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
  DEBUG_FUNC_IN(DEBUG_F_RAFILE | DEBUG_L1);

	int result=1;
	if(!file)
  4095b4:	bc 03 00 00 	l.sfeqi r3,0x0
  4095b8:	10 00 00 08 	l.bf 4095d8 <RAOpen+0x34>
  4095bc:	a8 43 00 00 	l.ori r2,r3,0x0
		return(0);
	result=FileOpen(&file->file,filename);
  4095c0:	07 ff ff 44 	l.jal 4092d0 <FileOpen>
  4095c4:	15 00 00 00 	l.nop 0x0
	file->size=file->file.size;
  4095c8:	84 62 00 18 	l.lwz r3,0x18(r2)
  4095cc:	d4 02 19 2c 	l.sw 0x12c(r2),r3
	file->ptr=0;
  4095d0:	9c 60 00 00 	l.addi r3,r0,0x0
  4095d4:	d4 02 19 30 	l.sw 0x130(r2),r3
	return(result);

  DEBUG_FUNC_OUT(DEBUG_F_RAFILE | DEBUG_L1);
}
  4095d8:	9c 21 00 08 	l.addi r1,r1,0x8
  4095dc:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  4095e0:	44 00 48 00 	l.jr r9
  4095e4:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

004095e8 <FindDrive>:
*/


// FindDrive() checks if a card is present and contains FAT formatted primary partition
unsigned char FindDrive(void)
{
  4095e8:	d7 e1 17 ec 	l.sw 0xffffffec(r1),r2
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L1);

    buffered_fat_index = -1;
  4095ec:	18 40 00 41 	l.movhi r2,0x41
  4095f0:	9c 60 ff ff 	l.addi r3,r0,0xffffffff
  4095f4:	a8 42 de a4 	l.ori r2,r2,0xdea4

    if (!MMC_Read(0, sector_buffer)) // read MBR
  4095f8:	18 80 00 41 	l.movhi r4,0x41
*/


// FindDrive() checks if a card is present and contains FAT formatted primary partition
unsigned char FindDrive(void)
{
  4095fc:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  409600:	d7 e1 77 f0 	l.sw 0xfffffff0(r1),r14
  409604:	d7 e1 87 f4 	l.sw 0xfffffff4(r1),r16
  409608:	d7 e1 97 f8 	l.sw 0xfffffff8(r1),r18
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L1);

    buffered_fat_index = -1;
  40960c:	d4 02 18 00 	l.sw 0x0(r2),r3
*/


// FindDrive() checks if a card is present and contains FAT formatted primary partition
unsigned char FindDrive(void)
{
  409610:	9c 21 ff e8 	l.addi r1,r1,0xffffffe8
  DEBUG_FUNC_IN(DEBUG_F_FAT | DEBUG_L1);

    buffered_fat_index = -1;

    if (!MMC_Read(0, sector_buffer)) // read MBR
  409614:	9c 60 00 00 	l.addi r3,r0,0x0
  409618:	07 ff ee ad 	l.jal 4050cc <MMC_Read>
  40961c:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  409620:	bc 0b 00 00 	l.sfeqi r11,0x0
  409624:	10 00 01 cd 	l.bf 409d58 <FindDrive+0x770>
  409628:	a8 6b 00 00 	l.ori r3,r11,0x0
        return(0);

	boot_sector=0;
  40962c:	18 40 00 41 	l.movhi r2,0x41
  409630:	9c 60 00 00 	l.addi r3,r0,0x0
  409634:	a8 42 dc 84 	l.ori r2,r2,0xdc84
	partitioncount=1;

	// If we can identify a filesystem on block 0 we don't look for partitions
    if (strncmp((const char*)&sector_buffer[0x36], "FAT16   ", 8)==0) // check for FAT16
  409638:	18 80 00 41 	l.movhi r4,0x41
    buffered_fat_index = -1;

    if (!MMC_Read(0, sector_buffer)) // read MBR
        return(0);

	boot_sector=0;
  40963c:	d4 02 18 00 	l.sw 0x0(r2),r3
	partitioncount=1;
  409640:	18 40 00 41 	l.movhi r2,0x41
  409644:	9c 60 00 01 	l.addi r3,r0,0x1
  409648:	a8 42 a4 d8 	l.ori r2,r2,0xa4d8

	// If we can identify a filesystem on block 0 we don't look for partitions
    if (strncmp((const char*)&sector_buffer[0x36], "FAT16   ", 8)==0) // check for FAT16
  40964c:	a8 84 7d a4 	l.ori r4,r4,0x7da4

    if (!MMC_Read(0, sector_buffer)) // read MBR
        return(0);

	boot_sector=0;
	partitioncount=1;
  409650:	d4 02 18 00 	l.sw 0x0(r2),r3

	// If we can identify a filesystem on block 0 we don't look for partitions
    if (strncmp((const char*)&sector_buffer[0x36], "FAT16   ", 8)==0) // check for FAT16
  409654:	18 60 00 41 	l.movhi r3,0x41
  409658:	9c a0 00 08 	l.addi r5,r0,0x8
  40965c:	07 ff db 2e 	l.jal 400314 <strncmp>
  409660:	a8 63 a5 12 	l.ori r3,r3,0xa512
  409664:	bc 2b 00 00 	l.sfnei r11,0x0
  409668:	10 00 00 03 	l.bf 409674 <FindDrive+0x8c>
  40966c:	18 60 00 41 	l.movhi r3,0x41
		partitioncount=0;
  409670:	d4 02 58 00 	l.sw 0x0(r2),r11
    if (strncmp((const char*)&sector_buffer[0x52], "FAT32   ", 8)==0) // check for FAT32
  409674:	18 80 00 41 	l.movhi r4,0x41
  409678:	a8 63 a5 2e 	l.ori r3,r3,0xa52e
  40967c:	a8 84 7d ad 	l.ori r4,r4,0x7dad
  409680:	07 ff db 25 	l.jal 400314 <strncmp>
  409684:	9c a0 00 08 	l.addi r5,r0,0x8
  409688:	bc 2b 00 00 	l.sfnei r11,0x0
  40968c:	10 00 00 05 	l.bf 4096a0 <FindDrive+0xb8>
  409690:	18 40 00 41 	l.movhi r2,0x41
		partitioncount=0;
  409694:	a8 42 a4 d8 	l.ori r2,r2,0xa4d8
  409698:	d4 02 58 00 	l.sw 0x0(r2),r11

	if(partitioncount)
  40969c:	18 40 00 41 	l.movhi r2,0x41
  4096a0:	a8 42 a4 d8 	l.ori r2,r2,0xa4d8
  4096a4:	84 42 00 00 	l.lwz r2,0x0(r2)
  4096a8:	bc 02 00 00 	l.sfeqi r2,0x0
  4096ac:	10 00 00 75 	l.bf 409880 <FindDrive+0x298>
  4096b0:	18 60 00 41 	l.movhi r3,0x41
	{
		// We have at least one partition, parse the MBR.
		struct MasterBootRecord *mbr=(struct MasterBootRecord *)sector_buffer;
  4096b4:	18 40 00 41 	l.movhi r2,0x41
		memcpy(&partitions[0],&mbr->Partition[0],sizeof(struct PartitionEntry));
  4096b8:	18 60 00 41 	l.movhi r3,0x41
		partitioncount=0;

	if(partitioncount)
	{
		// We have at least one partition, parse the MBR.
		struct MasterBootRecord *mbr=(struct MasterBootRecord *)sector_buffer;
  4096bc:	a8 42 a4 dc 	l.ori r2,r2,0xa4dc
		memcpy(&partitions[0],&mbr->Partition[0],sizeof(struct PartitionEntry));
  4096c0:	a8 63 a4 98 	l.ori r3,r3,0xa498
  4096c4:	9c 82 01 be 	l.addi r4,r2,0x1be
  4096c8:	07 ff da ee 	l.jal 400280 <memcpy>
  4096cc:	9c a0 00 10 	l.addi r5,r0,0x10
		memcpy(&partitions[1],&mbr->Partition[1],sizeof(struct PartitionEntry));
  4096d0:	18 60 00 41 	l.movhi r3,0x41
  4096d4:	9c 82 01 ce 	l.addi r4,r2,0x1ce
  4096d8:	a8 63 a4 a8 	l.ori r3,r3,0xa4a8
  4096dc:	07 ff da e9 	l.jal 400280 <memcpy>
  4096e0:	9c a0 00 10 	l.addi r5,r0,0x10
		memcpy(&partitions[2],&mbr->Partition[2],sizeof(struct PartitionEntry));
  4096e4:	18 60 00 41 	l.movhi r3,0x41
  4096e8:	9c 82 01 de 	l.addi r4,r2,0x1de
  4096ec:	a8 63 a4 b8 	l.ori r3,r3,0xa4b8
  4096f0:	07 ff da e4 	l.jal 400280 <memcpy>
  4096f4:	9c a0 00 10 	l.addi r5,r0,0x10
		memcpy(&partitions[3],&mbr->Partition[3],sizeof(struct PartitionEntry));
  4096f8:	18 60 00 41 	l.movhi r3,0x41
  4096fc:	9c 82 01 ee 	l.addi r4,r2,0x1ee
  409700:	a8 63 a4 c8 	l.ori r3,r3,0xa4c8
  409704:	07 ff da df 	l.jal 400280 <memcpy>
  409708:	9c a0 00 10 	l.addi r5,r0,0x10

		switch(mbr->Signature)
  40970c:	8c 62 01 fe 	l.lbz r3,0x1fe(r2)
  409710:	8c 42 01 ff 	l.lbz r2,0x1ff(r2)
  409714:	b8 63 00 08 	l.slli r3,r3,0x8
  409718:	e0 42 18 04 	l.or r2,r2,r3
  40971c:	bc 02 55 aa 	l.sfeqi r2,0x55aa
  409720:	10 00 00 08 	l.bf 409740 <FindDrive+0x158>
  409724:	18 60 00 41 	l.movhi r3,0x41
  409728:	a8 80 aa 55 	l.ori r4,r0,0xaa55
  40972c:	e4 02 20 00 	l.sfeq r2,r4
  409730:	0c 00 00 50 	l.bnf 409870 <FindDrive+0x288>
  409734:	18 60 00 41 	l.movhi r3,0x41
				SwapPartitionBytes(2);
				SwapPartitionBytes(3);
				// fall through...
			case 0xaa55:
				// get start of first partition
				boot_sector = partitions[0].startlba;
  409738:	00 00 00 0d 	l.j 40976c <FindDrive+0x184>
  40973c:	18 40 00 41 	l.movhi r2,0x41
		memcpy(&partitions[3],&mbr->Partition[3],sizeof(struct PartitionEntry));

		switch(mbr->Signature)
		{
			case 0x55aa:	// Little-endian MBR on a big-endian system
				BootPrint("Swapping byte order of partition entries");
  409740:	07 ff f2 6b 	l.jal 4060ec <BootPrint>
  409744:	a8 63 7d b6 	l.ori r3,r3,0x7db6
				SwapPartitionBytes(0);
  409748:	07 ff e5 3c 	l.jal 402c38 <SwapPartitionBytes>
  40974c:	9c 60 00 00 	l.addi r3,r0,0x0
				SwapPartitionBytes(1);
  409750:	07 ff e5 3a 	l.jal 402c38 <SwapPartitionBytes>
  409754:	9c 60 00 01 	l.addi r3,r0,0x1
				SwapPartitionBytes(2);
  409758:	07 ff e5 38 	l.jal 402c38 <SwapPartitionBytes>
  40975c:	9c 60 00 02 	l.addi r3,r0,0x2
				SwapPartitionBytes(3);
  409760:	07 ff e5 36 	l.jal 402c38 <SwapPartitionBytes>
  409764:	9c 60 00 03 	l.addi r3,r0,0x3
				// fall through...
			case 0xaa55:
				// get start of first partition
				boot_sector = partitions[0].startlba;
  409768:	18 40 00 41 	l.movhi r2,0x41
				bprintfl("Start: %ld\n",partitions[0].startlba);
  40976c:	18 60 00 41 	l.movhi r3,0x41
				SwapPartitionBytes(2);
				SwapPartitionBytes(3);
				// fall through...
			case 0xaa55:
				// get start of first partition
				boot_sector = partitions[0].startlba;
  409770:	a8 42 a4 98 	l.ori r2,r2,0xa498
				bprintfl("Start: %ld\n",partitions[0].startlba);
  409774:	a8 63 7d df 	l.ori r3,r3,0x7ddf
				SwapPartitionBytes(2);
				SwapPartitionBytes(3);
				// fall through...
			case 0xaa55:
				// get start of first partition
				boot_sector = partitions[0].startlba;
  409778:	84 82 00 08 	l.lwz r4,0x8(r2)
  40977c:	18 40 00 41 	l.movhi r2,0x41
  409780:	a8 42 dc 84 	l.ori r2,r2,0xdc84
				bprintfl("Start: %ld\n",partitions[0].startlba);
  409784:	07 ff f2 64 	l.jal 406114 <bprintfl>
  409788:	d4 02 20 00 	l.sw 0x0(r2),r4
				for(partitioncount=4;(partitions[partitioncount-1].sectors==0) && (partitioncount>1); --partitioncount)
  40978c:	00 00 00 03 	l.j 409798 <FindDrive+0x1b0>
  409790:	9c 80 00 04 	l.addi r4,r0,0x4
  409794:	a8 82 00 00 	l.ori r4,r2,0x0
  409798:	9c 44 ff ff 	l.addi r2,r4,0xffffffff
  40979c:	18 a0 00 41 	l.movhi r5,0x41
  4097a0:	b8 62 00 04 	l.slli r3,r2,0x4
  4097a4:	a8 a5 a4 98 	l.ori r5,r5,0xa498
  4097a8:	e0 63 28 00 	l.add r3,r3,r5
  4097ac:	84 63 00 0c 	l.lwz r3,0xc(r3)
  4097b0:	bc 03 00 00 	l.sfeqi r3,0x0
  4097b4:	0c 00 00 05 	l.bnf 4097c8 <FindDrive+0x1e0>
  4097b8:	15 00 00 00 	l.nop 0x0
  4097bc:	bd 44 00 01 	l.sfgtsi r4,0x1
  4097c0:	13 ff ff f5 	l.bf 409794 <FindDrive+0x1ac>
  4097c4:	15 00 00 00 	l.nop 0x0
  4097c8:	18 40 00 41 	l.movhi r2,0x41
					;
				bprintfl("PartitionCount: %ld\n",partitioncount);
  4097cc:	18 60 00 41 	l.movhi r3,0x41
				// fall through...
			case 0xaa55:
				// get start of first partition
				boot_sector = partitions[0].startlba;
				bprintfl("Start: %ld\n",partitions[0].startlba);
				for(partitioncount=4;(partitions[partitioncount-1].sectors==0) && (partitioncount>1); --partitioncount)
  4097d0:	a8 42 a4 d8 	l.ori r2,r2,0xa4d8
					;
				bprintfl("PartitionCount: %ld\n",partitioncount);
  4097d4:	a8 63 7d eb 	l.ori r3,r3,0x7deb
				// fall through...
			case 0xaa55:
				// get start of first partition
				boot_sector = partitions[0].startlba;
				bprintfl("Start: %ld\n",partitions[0].startlba);
				for(partitioncount=4;(partitions[partitioncount-1].sectors==0) && (partitioncount>1); --partitioncount)
  4097d8:	d4 02 20 00 	l.sw 0x0(r2),r4
					;
				bprintfl("PartitionCount: %ld\n",partitioncount);
  4097dc:	07 ff f2 4e 	l.jal 406114 <bprintfl>
  4097e0:	19 c0 00 41 	l.movhi r14,0x41
				int i;
				for(i=0;i<partitioncount;++i)
  4097e4:	9c 40 00 00 	l.addi r2,r0,0x0
  4097e8:	00 00 00 12 	l.j 409830 <FindDrive+0x248>
  4097ec:	a9 ce a4 d8 	l.ori r14,r14,0xa4d8
				{
					bprintfl("Partition: %ld",i);
  4097f0:	a8 82 00 00 	l.ori r4,r2,0x0
  4097f4:	a8 63 7e 00 	l.ori r3,r3,0x7e00
  4097f8:	07 ff f2 47 	l.jal 406114 <bprintfl>
  4097fc:	ba 02 00 04 	l.slli r16,r2,0x4
					bprintfl("  Start: %ld",partitions[i].startlba);
  409800:	18 60 00 41 	l.movhi r3,0x41
				bprintfl("Start: %ld\n",partitions[0].startlba);
				for(partitioncount=4;(partitions[partitioncount-1].sectors==0) && (partitioncount>1); --partitioncount)
					;
				bprintfl("PartitionCount: %ld\n",partitioncount);
				int i;
				for(i=0;i<partitioncount;++i)
  409804:	9c 42 00 01 	l.addi r2,r2,0x1
				{
					bprintfl("Partition: %ld",i);
					bprintfl("  Start: %ld",partitions[i].startlba);
  409808:	a8 63 a4 98 	l.ori r3,r3,0xa498
  40980c:	e2 10 18 00 	l.add r16,r16,r3
  409810:	18 60 00 41 	l.movhi r3,0x41
  409814:	84 90 00 08 	l.lwz r4,0x8(r16)
  409818:	07 ff f2 3f 	l.jal 406114 <bprintfl>
  40981c:	a8 63 7e 0f 	l.ori r3,r3,0x7e0f
					bprintfl("  Size: %ld\n",partitions[i].sectors);
  409820:	18 60 00 41 	l.movhi r3,0x41
  409824:	84 90 00 0c 	l.lwz r4,0xc(r16)
  409828:	07 ff f2 3b 	l.jal 406114 <bprintfl>
  40982c:	a8 63 7e 1c 	l.ori r3,r3,0x7e1c
				bprintfl("Start: %ld\n",partitions[0].startlba);
				for(partitioncount=4;(partitions[partitioncount-1].sectors==0) && (partitioncount>1); --partitioncount)
					;
				bprintfl("PartitionCount: %ld\n",partitioncount);
				int i;
				for(i=0;i<partitioncount;++i)
  409830:	84 6e 00 00 	l.lwz r3,0x0(r14)
  409834:	e5 82 18 00 	l.sflts r2,r3
  409838:	13 ff ff ee 	l.bf 4097f0 <FindDrive+0x208>
  40983c:	18 60 00 41 	l.movhi r3,0x41
					bprintfl("Partition: %ld",i);
					bprintfl("  Start: %ld",partitions[i].startlba);
					bprintfl("  Size: %ld\n",partitions[i].sectors);
				}
//				WaitTimer(5000);
				if (!MMC_Read(boot_sector, sector_buffer)) // read discriptor
  409840:	18 40 00 41 	l.movhi r2,0x41
  409844:	18 80 00 41 	l.movhi r4,0x41
  409848:	a8 42 dc 84 	l.ori r2,r2,0xdc84
  40984c:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  409850:	07 ff ee 1f 	l.jal 4050cc <MMC_Read>
  409854:	84 62 00 00 	l.lwz r3,0x0(r2)
  409858:	bc 0b 00 00 	l.sfeqi r11,0x0
  40985c:	10 00 01 3f 	l.bf 409d58 <FindDrive+0x770>
  409860:	a8 6b 00 00 	l.ori r3,r11,0x0
				    return(0);
				BootPrint("Read boot sector from first partition\n");
  409864:	18 60 00 41 	l.movhi r3,0x41
  409868:	00 00 00 03 	l.j 409874 <FindDrive+0x28c>
  40986c:	a8 63 7e 29 	l.ori r3,r3,0x7e29
				break;
			default:
				BootPrint("No partition signature found\n");
  409870:	a8 63 7e 50 	l.ori r3,r3,0x7e50
  409874:	07 ff f2 1e 	l.jal 4060ec <BootPrint>
  409878:	15 00 00 00 	l.nop 0x0
				break;
		}
	}

    if (strncmp((const char*)&sector_buffer[0x36], "FAT16   ", 8)==0) // check for FAT16
  40987c:	18 60 00 41 	l.movhi r3,0x41
  409880:	18 80 00 41 	l.movhi r4,0x41
  409884:	a8 63 a5 12 	l.ori r3,r3,0xa512
  409888:	a8 84 7d a4 	l.ori r4,r4,0x7da4
  40988c:	07 ff da a2 	l.jal 400314 <strncmp>
  409890:	9c a0 00 08 	l.addi r5,r0,0x8
  409894:	bc 2b 00 00 	l.sfnei r11,0x0
  409898:	10 00 00 06 	l.bf 4098b0 <FindDrive+0x2c8>
  40989c:	18 60 00 41 	l.movhi r3,0x41
		fattype = 16;
  4098a0:	18 40 00 41 	l.movhi r2,0x41
  4098a4:	9c 80 00 10 	l.addi r4,r0,0x10
  4098a8:	a8 42 dc 80 	l.ori r2,r2,0xdc80
  4098ac:	d8 02 20 00 	l.sb 0x0(r2),r4

    if (strncmp((const char*)&sector_buffer[0x52], "FAT32   ", 8)==0) // check for FAT32
  4098b0:	18 80 00 41 	l.movhi r4,0x41
  4098b4:	a8 63 a5 2e 	l.ori r3,r3,0xa52e
  4098b8:	a8 84 7d ad 	l.ori r4,r4,0x7dad
  4098bc:	07 ff da 96 	l.jal 400314 <strncmp>
  4098c0:	9c a0 00 08 	l.addi r5,r0,0x8
  4098c4:	bc 2b 00 00 	l.sfnei r11,0x0
  4098c8:	10 00 00 05 	l.bf 4098dc <FindDrive+0x2f4>
  4098cc:	9c a0 00 20 	l.addi r5,r0,0x20
		fattype = 32;
  4098d0:	18 40 00 41 	l.movhi r2,0x41
  4098d4:	a8 42 dc 80 	l.ori r2,r2,0xdc80
  4098d8:	d8 02 28 00 	l.sb 0x0(r2),r5
	
    printf("partition type: 0x%02X (", sector_buffer[450]);
  4098dc:	18 40 00 41 	l.movhi r2,0x41
  4098e0:	18 60 00 41 	l.movhi r3,0x41
  4098e4:	a8 42 a4 dc 	l.ori r2,r2,0xa4dc
  4098e8:	a8 63 7e 6e 	l.ori r3,r3,0x7e6e
  4098ec:	8c 42 01 c2 	l.lbz r2,0x1c2(r2)
  4098f0:	d4 01 10 00 	l.sw 0x0(r1),r2
  4098f4:	07 ff eb 68 	l.jal 404694 <printf>
  4098f8:	18 40 00 41 	l.movhi r2,0x41
    switch (fattype)
  4098fc:	a8 42 dc 80 	l.ori r2,r2,0xdc80
  409900:	8c 42 00 00 	l.lbz r2,0x0(r2)
  409904:	bc 02 00 0c 	l.sfeqi r2,0xc
  409908:	10 00 00 12 	l.bf 409950 <FindDrive+0x368>
  40990c:	bc 42 00 0c 	l.sfgtui r2,0xc
  409910:	10 00 00 07 	l.bf 40992c <FindDrive+0x344>
  409914:	bc 02 00 10 	l.sfeqi r2,0x10
  409918:	bc 02 00 00 	l.sfeqi r2,0x0
  40991c:	10 00 00 0a 	l.bf 409944 <FindDrive+0x35c>
  409920:	15 00 00 00 	l.nop 0x0
		case 32:
		    printf("FAT32");
		    fat32 = 1;
		    break;
		default:
		    printf("UNKNOWN");
  409924:	00 00 00 18 	l.j 409984 <FindDrive+0x39c>
  409928:	18 60 00 41 	l.movhi r3,0x41

    if (strncmp((const char*)&sector_buffer[0x52], "FAT32   ", 8)==0) // check for FAT32
		fattype = 32;
	
    printf("partition type: 0x%02X (", sector_buffer[450]);
    switch (fattype)
  40992c:	10 00 00 0c 	l.bf 40995c <FindDrive+0x374>
  409930:	bc 02 00 20 	l.sfeqi r2,0x20
  409934:	0c 00 00 13 	l.bnf 409980 <FindDrive+0x398>
  409938:	18 60 00 41 	l.movhi r3,0x41
		case 16:
		    printf("FAT16");
		    break;
		case 32:
		    printf("FAT32");
		    fat32 = 1;
  40993c:	00 00 00 0b 	l.j 409968 <FindDrive+0x380>
  409940:	18 40 00 41 	l.movhi r2,0x41
	
    printf("partition type: 0x%02X (", sector_buffer[450]);
    switch (fattype)
    {
		case 0:
		    printf("NONE");
  409944:	18 60 00 41 	l.movhi r3,0x41
  409948:	00 00 00 10 	l.j 409988 <FindDrive+0x3a0>
  40994c:	a8 63 7e 87 	l.ori r3,r3,0x7e87
		    break;
		case 12:
		    printf("FAT12");
  409950:	18 60 00 41 	l.movhi r3,0x41
  409954:	00 00 00 0d 	l.j 409988 <FindDrive+0x3a0>
  409958:	a8 63 7e 8c 	l.ori r3,r3,0x7e8c
		    break;
		case 16:
		    printf("FAT16");
  40995c:	18 60 00 41 	l.movhi r3,0x41
  409960:	00 00 00 0a 	l.j 409988 <FindDrive+0x3a0>
  409964:	a8 63 7e 92 	l.ori r3,r3,0x7e92
		    break;
		case 32:
		    printf("FAT32");
  409968:	a8 63 7e 98 	l.ori r3,r3,0x7e98
  40996c:	07 ff eb 4a 	l.jal 404694 <printf>
  409970:	a8 42 a3 51 	l.ori r2,r2,0xa351
		    fat32 = 1;
  409974:	9c 60 00 01 	l.addi r3,r0,0x1
		    break;
  409978:	00 00 00 06 	l.j 409990 <FindDrive+0x3a8>
  40997c:	d8 02 18 00 	l.sb 0x0(r2),r3
		default:
		    printf("UNKNOWN");
  409980:	18 60 00 41 	l.movhi r3,0x41
  409984:	a8 63 7e 9e 	l.ori r3,r3,0x7e9e
  409988:	07 ff eb 43 	l.jal 404694 <printf>
  40998c:	15 00 00 00 	l.nop 0x0
		    break;
    }
    printf(")\r");
  409990:	18 60 00 41 	l.movhi r3,0x41

    if (fattype != 32 && fattype != 16) // first partition filesystem type: FAT16 or FAT32
  409994:	18 40 00 41 	l.movhi r2,0x41
		    break;
		default:
		    printf("UNKNOWN");
		    break;
    }
    printf(")\r");
  409998:	a8 63 8e 04 	l.ori r3,r3,0x8e04
  40999c:	07 ff eb 3e 	l.jal 404694 <printf>
  4099a0:	a8 42 dc 80 	l.ori r2,r2,0xdc80

    if (fattype != 32 && fattype != 16) // first partition filesystem type: FAT16 or FAT32
  4099a4:	8c 42 00 00 	l.lbz r2,0x0(r2)
  4099a8:	bc 02 00 10 	l.sfeqi r2,0x10
  4099ac:	10 00 00 09 	l.bf 4099d0 <FindDrive+0x3e8>
  4099b0:	bc 02 00 20 	l.sfeqi r2,0x20
  4099b4:	10 00 00 08 	l.bf 4099d4 <FindDrive+0x3ec>
  4099b8:	18 40 00 41 	l.movhi r2,0x41
    {
        printf("Unsupported partition type!\r");
  4099bc:	18 60 00 41 	l.movhi r3,0x41
  4099c0:	07 ff eb 35 	l.jal 404694 <printf>
  4099c4:	a8 63 7e a6 	l.ori r3,r3,0x7ea6
        return(0);
  4099c8:	00 00 00 e4 	l.j 409d58 <FindDrive+0x770>
  4099cc:	9c 60 00 00 	l.addi r3,r0,0x0
    }

    if (sector_buffer[510] != 0x55 || sector_buffer[511] != 0xaa)  // check signature
  4099d0:	18 40 00 41 	l.movhi r2,0x41
  4099d4:	a8 42 a4 dc 	l.ori r2,r2,0xa4dc
  4099d8:	8c 82 01 fe 	l.lbz r4,0x1fe(r2)
  4099dc:	bc 24 00 55 	l.sfnei r4,0x55
  4099e0:	10 00 00 de 	l.bf 409d58 <FindDrive+0x770>
  4099e4:	9c 60 00 00 	l.addi r3,r0,0x0
  4099e8:	8c 82 01 ff 	l.lbz r4,0x1ff(r2)
  4099ec:	bc 24 00 aa 	l.sfnei r4,0xaa
  4099f0:	10 00 00 da 	l.bf 409d58 <FindDrive+0x770>
  4099f4:	15 00 00 00 	l.nop 0x0

//    if (!MMC_Read(boot_sector, sector_buffer)) // read boot sector
//        return(0);

    // check for near-jump or short-jump opcode
    if (sector_buffer[0] != 0xe9 && sector_buffer[0] != 0xeb)
  4099f8:	8c 42 00 00 	l.lbz r2,0x0(r2)
  4099fc:	bc 02 00 eb 	l.sfeqi r2,0xeb
  409a00:	10 00 00 04 	l.bf 409a10 <FindDrive+0x428>
  409a04:	bc 22 00 e9 	l.sfnei r2,0xe9
  409a08:	10 00 00 d4 	l.bf 409d58 <FindDrive+0x770>
  409a0c:	15 00 00 00 	l.nop 0x0
        return(0);

    // check if blocksize is really 512 bytes
    if (sector_buffer[11] != 0x00 || sector_buffer[12] != 0x02)
  409a10:	18 40 00 41 	l.movhi r2,0x41
        return(0);
  409a14:	9c 60 00 00 	l.addi r3,r0,0x0
    // check for near-jump or short-jump opcode
    if (sector_buffer[0] != 0xe9 && sector_buffer[0] != 0xeb)
        return(0);

    // check if blocksize is really 512 bytes
    if (sector_buffer[11] != 0x00 || sector_buffer[12] != 0x02)
  409a18:	a8 42 a4 dc 	l.ori r2,r2,0xa4dc
  409a1c:	8d c2 00 0b 	l.lbz r14,0xb(r2)
  409a20:	e4 2e 18 00 	l.sfne r14,r3
  409a24:	10 00 00 cd 	l.bf 409d58 <FindDrive+0x770>
  409a28:	15 00 00 00 	l.nop 0x0
  409a2c:	8c 82 00 0c 	l.lbz r4,0xc(r2)
  409a30:	bc 24 00 02 	l.sfnei r4,0x2
  409a34:	10 00 00 c9 	l.bf 409d58 <FindDrive+0x770>
  409a38:	a8 6e 00 00 	l.ori r3,r14,0x0
        return(0);

    // check medium descriptor byte, must be 0xf8 for hard drive
    if (sector_buffer[21] != 0xf8)
  409a3c:	8c 82 00 15 	l.lbz r4,0x15(r2)
  409a40:	bc 24 00 f8 	l.sfnei r4,0xf8
  409a44:	10 00 00 c5 	l.bf 409d58 <FindDrive+0x770>
  409a48:	15 00 00 00 	l.nop 0x0
        return(0);

    if (fat32)
  409a4c:	18 60 00 41 	l.movhi r3,0x41
  409a50:	a8 63 a3 51 	l.ori r3,r3,0xa351
  409a54:	8e 03 00 00 	l.lbz r16,0x0(r3)
  409a58:	bc 10 00 00 	l.sfeqi r16,0x0
  409a5c:	10 00 00 4f 	l.bf 409b98 <FindDrive+0x5b0>
  409a60:	18 a0 00 41 	l.movhi r5,0x41
    {
        if (strncmp((const char*)&sector_buffer[0x52], "FAT32   ", 8) != 0) // check file system type
  409a64:	18 80 00 41 	l.movhi r4,0x41
  409a68:	9c 62 00 52 	l.addi r3,r2,0x52
  409a6c:	a8 84 7d ad 	l.ori r4,r4,0x7dad
  409a70:	07 ff da 29 	l.jal 400314 <strncmp>
  409a74:	9c a0 00 08 	l.addi r5,r0,0x8
  409a78:	bc 2b 00 00 	l.sfnei r11,0x0
  409a7c:	10 00 00 b7 	l.bf 409d58 <FindDrive+0x770>
  409a80:	a8 6e 00 00 	l.ori r3,r14,0x0
            return(0);

        cluster_size = sector_buffer[0x0D]; // get cluster_size in sectors
  409a84:	18 60 00 41 	l.movhi r3,0x41
  409a88:	8d c2 00 0d 	l.lbz r14,0xd(r2)
  409a8c:	a8 63 a8 dc 	l.ori r3,r3,0xa8dc
        cluster_mask = ~(cluster_size - 1); // calculate cluster mask
  409a90:	e0 80 70 02 	l.sub r4,r0,r14
    if (fat32)
    {
        if (strncmp((const char*)&sector_buffer[0x52], "FAT32   ", 8) != 0) // check file system type
            return(0);

        cluster_size = sector_buffer[0x0D]; // get cluster_size in sectors
  409a94:	d8 03 70 00 	l.sb 0x0(r3),r14
        cluster_mask = ~(cluster_size - 1); // calculate cluster mask
  409a98:	18 60 00 41 	l.movhi r3,0x41
        dir_entries = cluster_size << 4; // total number of dir entries (16 entries per sector)
        root_directory_size = cluster_size; // root directory size in sectors
        fat_start = boot_sector + sector_buffer[0x0E] + (sector_buffer[0x0F] << 8); // reserved sector count before FAT table (usually 32 for FAT32)
  409a9c:	8e 02 00 0e 	l.lbz r16,0xe(r2)
    {
        if (strncmp((const char*)&sector_buffer[0x52], "FAT32   ", 8) != 0) // check file system type
            return(0);

        cluster_size = sector_buffer[0x0D]; // get cluster_size in sectors
        cluster_mask = ~(cluster_size - 1); // calculate cluster mask
  409aa0:	a8 63 a8 e0 	l.ori r3,r3,0xa8e0
        dir_entries = cluster_size << 4; // total number of dir entries (16 entries per sector)
        root_directory_size = cluster_size; // root directory size in sectors
        fat_start = boot_sector + sector_buffer[0x0E] + (sector_buffer[0x0F] << 8); // reserved sector count before FAT table (usually 32 for FAT32)
        fat_number = sector_buffer[0x10];
        fat_size = sector_buffer[0x24] + (sector_buffer[0x25] << 8) + (sector_buffer[0x26] << 16) + (sector_buffer[0x27] << 24);
  409aa4:	8c a2 00 25 	l.lbz r5,0x25(r2)
    {
        if (strncmp((const char*)&sector_buffer[0x52], "FAT32   ", 8) != 0) // check file system type
            return(0);

        cluster_size = sector_buffer[0x0D]; // get cluster_size in sectors
        cluster_mask = ~(cluster_size - 1); // calculate cluster mask
  409aa8:	d4 03 20 00 	l.sw 0x0(r3),r4
        dir_entries = cluster_size << 4; // total number of dir entries (16 entries per sector)
  409aac:	18 60 00 41 	l.movhi r3,0x41
  409ab0:	b8 8e 00 04 	l.slli r4,r14,0x4
  409ab4:	a8 63 dc 9e 	l.ori r3,r3,0xdc9e
        root_directory_size = cluster_size; // root directory size in sectors
        fat_start = boot_sector + sector_buffer[0x0E] + (sector_buffer[0x0F] << 8); // reserved sector count before FAT table (usually 32 for FAT32)
        fat_number = sector_buffer[0x10];
        fat_size = sector_buffer[0x24] + (sector_buffer[0x25] << 8) + (sector_buffer[0x26] << 16) + (sector_buffer[0x27] << 24);
  409ab8:	b8 a5 00 08 	l.slli r5,r5,0x8
        if (strncmp((const char*)&sector_buffer[0x52], "FAT32   ", 8) != 0) // check file system type
            return(0);

        cluster_size = sector_buffer[0x0D]; // get cluster_size in sectors
        cluster_mask = ~(cluster_size - 1); // calculate cluster mask
        dir_entries = cluster_size << 4; // total number of dir entries (16 entries per sector)
  409abc:	dc 03 20 00 	l.sh 0x0(r3),r4
        root_directory_size = cluster_size; // root directory size in sectors
  409ac0:	18 60 00 41 	l.movhi r3,0x41
        fat_start = boot_sector + sector_buffer[0x0E] + (sector_buffer[0x0F] << 8); // reserved sector count before FAT table (usually 32 for FAT32)
        fat_number = sector_buffer[0x10];
  409ac4:	8c 82 00 10 	l.lbz r4,0x10(r2)
            return(0);

        cluster_size = sector_buffer[0x0D]; // get cluster_size in sectors
        cluster_mask = ~(cluster_size - 1); // calculate cluster mask
        dir_entries = cluster_size << 4; // total number of dir entries (16 entries per sector)
        root_directory_size = cluster_size; // root directory size in sectors
  409ac8:	a8 63 dc 98 	l.ori r3,r3,0xdc98
  409acc:	d4 03 70 00 	l.sw 0x0(r3),r14
        fat_start = boot_sector + sector_buffer[0x0E] + (sector_buffer[0x0F] << 8); // reserved sector count before FAT table (usually 32 for FAT32)
  409ad0:	18 60 00 41 	l.movhi r3,0x41
  409ad4:	a8 63 dc 84 	l.ori r3,r3,0xdc84
  409ad8:	84 63 00 00 	l.lwz r3,0x0(r3)
  409adc:	e2 10 18 00 	l.add r16,r16,r3
  409ae0:	8c 62 00 0f 	l.lbz r3,0xf(r2)
  409ae4:	b8 63 00 08 	l.slli r3,r3,0x8
  409ae8:	e2 10 18 00 	l.add r16,r16,r3
  409aec:	18 60 00 41 	l.movhi r3,0x41
  409af0:	a8 63 dc 88 	l.ori r3,r3,0xdc88
  409af4:	d4 03 80 00 	l.sw 0x0(r3),r16
        fat_number = sector_buffer[0x10];
  409af8:	18 60 00 41 	l.movhi r3,0x41
  409afc:	a8 63 dc 9c 	l.ori r3,r3,0xdc9c
  409b00:	d8 03 20 00 	l.sb 0x0(r3),r4
        fat_size = sector_buffer[0x24] + (sector_buffer[0x25] << 8) + (sector_buffer[0x26] << 16) + (sector_buffer[0x27] << 24);
  409b04:	8c 62 00 26 	l.lbz r3,0x26(r2)
  409b08:	b8 63 00 10 	l.slli r3,r3,0x10
  409b0c:	e0 65 18 00 	l.add r3,r5,r3
  409b10:	8c a2 00 24 	l.lbz r5,0x24(r2)
  409b14:	e0 63 28 00 	l.add r3,r3,r5
  409b18:	8c a2 00 27 	l.lbz r5,0x27(r2)
  409b1c:	b8 a5 00 18 	l.slli r5,r5,0x18
  409b20:	e0 63 28 00 	l.add r3,r3,r5
  409b24:	18 a0 00 41 	l.movhi r5,0x41
  409b28:	a8 a5 dc a0 	l.ori r5,r5,0xdca0
        data_start = fat_start + (fat_number * fat_size);
  409b2c:	07 ff d9 4f 	l.jal 400068 <__mulsi3>
  409b30:	d4 05 18 00 	l.sw 0x0(r5),r3
  409b34:	18 60 00 41 	l.movhi r3,0x41
  409b38:	e2 0b 80 00 	l.add r16,r11,r16
  409b3c:	a8 63 dc 8c 	l.ori r3,r3,0xdc8c
        root_directory_cluster = sector_buffer[0x2C] + (sector_buffer[0x2D] << 8) + (sector_buffer[0x2E] << 16) + ((sector_buffer[0x2F] & 0x0F) << 24);
  409b40:	8c 82 00 2d 	l.lbz r4,0x2d(r2)
        dir_entries = cluster_size << 4; // total number of dir entries (16 entries per sector)
        root_directory_size = cluster_size; // root directory size in sectors
        fat_start = boot_sector + sector_buffer[0x0E] + (sector_buffer[0x0F] << 8); // reserved sector count before FAT table (usually 32 for FAT32)
        fat_number = sector_buffer[0x10];
        fat_size = sector_buffer[0x24] + (sector_buffer[0x25] << 8) + (sector_buffer[0x26] << 16) + (sector_buffer[0x27] << 24);
        data_start = fat_start + (fat_number * fat_size);
  409b44:	d4 03 80 00 	l.sw 0x0(r3),r16
        root_directory_cluster = sector_buffer[0x2C] + (sector_buffer[0x2D] << 8) + (sector_buffer[0x2E] << 16) + ((sector_buffer[0x2F] & 0x0F) << 24);
  409b48:	8c 62 00 2e 	l.lbz r3,0x2e(r2)
  409b4c:	b8 84 00 08 	l.slli r4,r4,0x8
  409b50:	b8 63 00 10 	l.slli r3,r3,0x10
  409b54:	e0 64 18 00 	l.add r3,r4,r3
  409b58:	8c 82 00 2c 	l.lbz r4,0x2c(r2)
  409b5c:	8c 42 00 2f 	l.lbz r2,0x2f(r2)
  409b60:	a4 42 00 0f 	l.andi r2,r2,0xf
  409b64:	e0 63 20 00 	l.add r3,r3,r4
  409b68:	b8 42 00 18 	l.slli r2,r2,0x18
        root_directory_start = (root_directory_cluster - 2) * cluster_size + data_start;
  409b6c:	a8 8e 00 00 	l.ori r4,r14,0x0
        root_directory_size = cluster_size; // root directory size in sectors
        fat_start = boot_sector + sector_buffer[0x0E] + (sector_buffer[0x0F] << 8); // reserved sector count before FAT table (usually 32 for FAT32)
        fat_number = sector_buffer[0x10];
        fat_size = sector_buffer[0x24] + (sector_buffer[0x25] << 8) + (sector_buffer[0x26] << 16) + (sector_buffer[0x27] << 24);
        data_start = fat_start + (fat_number * fat_size);
        root_directory_cluster = sector_buffer[0x2C] + (sector_buffer[0x2D] << 8) + (sector_buffer[0x2E] << 16) + ((sector_buffer[0x2F] & 0x0F) << 24);
  409b70:	e0 63 10 00 	l.add r3,r3,r2
  409b74:	18 40 00 41 	l.movhi r2,0x41
  409b78:	a8 42 dc 90 	l.ori r2,r2,0xdc90
  409b7c:	d4 02 18 00 	l.sw 0x0(r2),r3
        root_directory_start = (root_directory_cluster - 2) * cluster_size + data_start;
  409b80:	9c 63 ff fe 	l.addi r3,r3,0xfffffffe
  409b84:	07 ff d9 39 	l.jal 400068 <__mulsi3>
  409b88:	18 40 00 41 	l.movhi r2,0x41
  409b8c:	a8 42 dc 94 	l.ori r2,r2,0xdc94
  409b90:	00 00 00 38 	l.j 409c70 <FindDrive+0x688>
  409b94:	e1 6b 80 00 	l.add r11,r11,r16
    }
    else
    {
        // calculate drive's parameters from bootsector, first up is size of directory
        dir_entries = sector_buffer[17] + (sector_buffer[18] << 8);
  409b98:	8d c2 00 12 	l.lbz r14,0x12(r2)
  409b9c:	8c 62 00 11 	l.lbz r3,0x11(r2)
  409ba0:	b9 ce 00 08 	l.slli r14,r14,0x8
        root_directory_size = ((dir_entries << 5) + 511) >> 9;

        // calculate start of FAT,size of FAT and number of FAT's
        fat_start = boot_sector + sector_buffer[14] + (sector_buffer[15] << 8);
  409ba4:	8e 42 00 0e 	l.lbz r18,0xe(r2)
        root_directory_start = (root_directory_cluster - 2) * cluster_size + data_start;
    }
    else
    {
        // calculate drive's parameters from bootsector, first up is size of directory
        dir_entries = sector_buffer[17] + (sector_buffer[18] << 8);
  409ba8:	e1 ce 18 00 	l.add r14,r14,r3
  409bac:	18 60 00 41 	l.movhi r3,0x41
  409bb0:	a5 ce ff ff 	l.andi r14,r14,0xffff
  409bb4:	a8 63 dc 9e 	l.ori r3,r3,0xdc9e
        root_directory_size = ((dir_entries << 5) + 511) >> 9;

        // calculate start of FAT,size of FAT and number of FAT's
        fat_start = boot_sector + sector_buffer[14] + (sector_buffer[15] << 8);
        fat_size = sector_buffer[22] + (sector_buffer[23] << 8);
  409bb8:	8c 82 00 16 	l.lbz r4,0x16(r2)
        root_directory_start = (root_directory_cluster - 2) * cluster_size + data_start;
    }
    else
    {
        // calculate drive's parameters from bootsector, first up is size of directory
        dir_entries = sector_buffer[17] + (sector_buffer[18] << 8);
  409bbc:	dc 03 70 00 	l.sh 0x0(r3),r14
        root_directory_size = ((dir_entries << 5) + 511) >> 9;
  409bc0:	b9 ce 00 05 	l.slli r14,r14,0x5
  409bc4:	18 60 00 41 	l.movhi r3,0x41
  409bc8:	9d ce 01 ff 	l.addi r14,r14,0x1ff
  409bcc:	a8 63 dc 98 	l.ori r3,r3,0xdc98
  409bd0:	b9 ce 00 89 	l.srai r14,r14,0x9

        // calculate start of FAT,size of FAT and number of FAT's
        fat_start = boot_sector + sector_buffer[14] + (sector_buffer[15] << 8);
        fat_size = sector_buffer[22] + (sector_buffer[23] << 8);
        fat_number = sector_buffer[16];
  409bd4:	a8 a5 dc 9c 	l.ori r5,r5,0xdc9c
    }
    else
    {
        // calculate drive's parameters from bootsector, first up is size of directory
        dir_entries = sector_buffer[17] + (sector_buffer[18] << 8);
        root_directory_size = ((dir_entries << 5) + 511) >> 9;
  409bd8:	d4 03 70 00 	l.sw 0x0(r3),r14

        // calculate start of FAT,size of FAT and number of FAT's
        fat_start = boot_sector + sector_buffer[14] + (sector_buffer[15] << 8);
  409bdc:	18 60 00 41 	l.movhi r3,0x41
  409be0:	a8 63 dc 84 	l.ori r3,r3,0xdc84
  409be4:	84 63 00 00 	l.lwz r3,0x0(r3)
  409be8:	e2 52 18 00 	l.add r18,r18,r3
  409bec:	8c 62 00 0f 	l.lbz r3,0xf(r2)
  409bf0:	b8 63 00 08 	l.slli r3,r3,0x8
  409bf4:	e2 52 18 00 	l.add r18,r18,r3
  409bf8:	18 60 00 41 	l.movhi r3,0x41
  409bfc:	a8 63 dc 88 	l.ori r3,r3,0xdc88
  409c00:	d4 03 90 00 	l.sw 0x0(r3),r18
        fat_size = sector_buffer[22] + (sector_buffer[23] << 8);
  409c04:	8c 62 00 17 	l.lbz r3,0x17(r2)
  409c08:	b8 63 00 08 	l.slli r3,r3,0x8
  409c0c:	e0 63 20 00 	l.add r3,r3,r4
  409c10:	18 80 00 41 	l.movhi r4,0x41
  409c14:	a8 84 dc a0 	l.ori r4,r4,0xdca0
  409c18:	d4 04 18 00 	l.sw 0x0(r4),r3
        fat_number = sector_buffer[16];
  409c1c:	8c 82 00 10 	l.lbz r4,0x10(r2)

        // calculate start of directory
        root_directory_start = fat_start + (fat_number * fat_size);
  409c20:	07 ff d9 12 	l.jal 400068 <__mulsi3>
  409c24:	d8 05 20 00 	l.sb 0x0(r5),r4
  409c28:	18 60 00 41 	l.movhi r3,0x41
  409c2c:	e1 6b 90 00 	l.add r11,r11,r18
  409c30:	a8 63 dc 94 	l.ori r3,r3,0xdc94
        root_directory_cluster = 0; // unused

        // get cluster_size
        cluster_size = sector_buffer[13];
  409c34:	8c 42 00 0d 	l.lbz r2,0xd(r2)
        fat_start = boot_sector + sector_buffer[14] + (sector_buffer[15] << 8);
        fat_size = sector_buffer[22] + (sector_buffer[23] << 8);
        fat_number = sector_buffer[16];

        // calculate start of directory
        root_directory_start = fat_start + (fat_number * fat_size);
  409c38:	d4 03 58 00 	l.sw 0x0(r3),r11
        root_directory_cluster = 0; // unused
  409c3c:	18 60 00 41 	l.movhi r3,0x41

        // calculate cluster mask
        cluster_mask = ~(cluster_size - 1);

        // calculate start of data
        data_start = root_directory_start + root_directory_size;
  409c40:	e1 6e 58 00 	l.add r11,r14,r11
        fat_size = sector_buffer[22] + (sector_buffer[23] << 8);
        fat_number = sector_buffer[16];

        // calculate start of directory
        root_directory_start = fat_start + (fat_number * fat_size);
        root_directory_cluster = 0; // unused
  409c44:	a8 63 dc 90 	l.ori r3,r3,0xdc90
  409c48:	d4 03 80 00 	l.sw 0x0(r3),r16

        // get cluster_size
        cluster_size = sector_buffer[13];
  409c4c:	18 60 00 41 	l.movhi r3,0x41
  409c50:	a8 63 a8 dc 	l.ori r3,r3,0xa8dc
  409c54:	d8 03 10 00 	l.sb 0x0(r3),r2

        // calculate cluster mask
        cluster_mask = ~(cluster_size - 1);
  409c58:	18 60 00 41 	l.movhi r3,0x41
  409c5c:	e0 40 10 02 	l.sub r2,r0,r2
  409c60:	a8 63 a8 e0 	l.ori r3,r3,0xa8e0
  409c64:	d4 03 10 00 	l.sw 0x0(r3),r2

        // calculate start of data
        data_start = root_directory_start + root_directory_size;
  409c68:	18 40 00 41 	l.movhi r2,0x41
  409c6c:	a8 42 dc 8c 	l.ori r2,r2,0xdc8c
  409c70:	d4 02 58 00 	l.sw 0x0(r2),r11
    }


    // some debug output
    printf("fat_size: %lu\r", fat_size);
  409c74:	18 40 00 41 	l.movhi r2,0x41
  409c78:	18 60 00 41 	l.movhi r3,0x41
  409c7c:	a8 42 dc a0 	l.ori r2,r2,0xdca0
  409c80:	a8 63 7e c3 	l.ori r3,r3,0x7ec3
  409c84:	84 42 00 00 	l.lwz r2,0x0(r2)
  409c88:	d4 01 10 00 	l.sw 0x0(r1),r2
  409c8c:	07 ff ea 82 	l.jal 404694 <printf>
  409c90:	18 40 00 41 	l.movhi r2,0x41
    printf("fat_number: %u\r", fat_number);
  409c94:	a8 42 dc 9c 	l.ori r2,r2,0xdc9c
  409c98:	18 60 00 41 	l.movhi r3,0x41
  409c9c:	8c 42 00 00 	l.lbz r2,0x0(r2)
  409ca0:	d4 01 10 00 	l.sw 0x0(r1),r2
    printf("fat_start: %lu\r", fat_start);
  409ca4:	18 40 00 41 	l.movhi r2,0x41
    }


    // some debug output
    printf("fat_size: %lu\r", fat_size);
    printf("fat_number: %u\r", fat_number);
  409ca8:	a8 63 7e d2 	l.ori r3,r3,0x7ed2
  409cac:	07 ff ea 7a 	l.jal 404694 <printf>
  409cb0:	a8 42 dc 88 	l.ori r2,r2,0xdc88
    printf("fat_start: %lu\r", fat_start);
  409cb4:	84 42 00 00 	l.lwz r2,0x0(r2)
  409cb8:	18 60 00 41 	l.movhi r3,0x41
  409cbc:	d4 01 10 00 	l.sw 0x0(r1),r2
    printf("root_directory_start: %lu\r", root_directory_start);
  409cc0:	18 40 00 41 	l.movhi r2,0x41


    // some debug output
    printf("fat_size: %lu\r", fat_size);
    printf("fat_number: %u\r", fat_number);
    printf("fat_start: %lu\r", fat_start);
  409cc4:	a8 63 7e e2 	l.ori r3,r3,0x7ee2
  409cc8:	07 ff ea 73 	l.jal 404694 <printf>
  409ccc:	a8 42 dc 94 	l.ori r2,r2,0xdc94
    printf("root_directory_start: %lu\r", root_directory_start);
  409cd0:	84 42 00 00 	l.lwz r2,0x0(r2)
  409cd4:	18 60 00 41 	l.movhi r3,0x41
  409cd8:	d4 01 10 00 	l.sw 0x0(r1),r2
    printf("dir_entries: %u\r", dir_entries);
  409cdc:	18 40 00 41 	l.movhi r2,0x41

    // some debug output
    printf("fat_size: %lu\r", fat_size);
    printf("fat_number: %u\r", fat_number);
    printf("fat_start: %lu\r", fat_start);
    printf("root_directory_start: %lu\r", root_directory_start);
  409ce0:	a8 63 7e f2 	l.ori r3,r3,0x7ef2
  409ce4:	07 ff ea 6c 	l.jal 404694 <printf>
  409ce8:	a8 42 dc 9e 	l.ori r2,r2,0xdc9e
    printf("dir_entries: %u\r", dir_entries);
  409cec:	94 42 00 00 	l.lhz r2,0x0(r2)
  409cf0:	18 60 00 41 	l.movhi r3,0x41
  409cf4:	d4 01 10 00 	l.sw 0x0(r1),r2
    printf("data_start: %lu\r", data_start);
  409cf8:	18 40 00 41 	l.movhi r2,0x41
    // some debug output
    printf("fat_size: %lu\r", fat_size);
    printf("fat_number: %u\r", fat_number);
    printf("fat_start: %lu\r", fat_start);
    printf("root_directory_start: %lu\r", root_directory_start);
    printf("dir_entries: %u\r", dir_entries);
  409cfc:	a8 63 7f 0d 	l.ori r3,r3,0x7f0d
  409d00:	07 ff ea 65 	l.jal 404694 <printf>
  409d04:	a8 42 dc 8c 	l.ori r2,r2,0xdc8c
    printf("data_start: %lu\r", data_start);
  409d08:	84 42 00 00 	l.lwz r2,0x0(r2)
  409d0c:	18 60 00 41 	l.movhi r3,0x41
  409d10:	d4 01 10 00 	l.sw 0x0(r1),r2
    printf("cluster_size: %u\r", cluster_size);
  409d14:	18 40 00 41 	l.movhi r2,0x41
    printf("fat_size: %lu\r", fat_size);
    printf("fat_number: %u\r", fat_number);
    printf("fat_start: %lu\r", fat_start);
    printf("root_directory_start: %lu\r", root_directory_start);
    printf("dir_entries: %u\r", dir_entries);
    printf("data_start: %lu\r", data_start);
  409d18:	a8 63 7f 1e 	l.ori r3,r3,0x7f1e
  409d1c:	07 ff ea 5e 	l.jal 404694 <printf>
  409d20:	a8 42 a8 dc 	l.ori r2,r2,0xa8dc
    printf("cluster_size: %u\r", cluster_size);
  409d24:	18 60 00 41 	l.movhi r3,0x41
  409d28:	8c 42 00 00 	l.lbz r2,0x0(r2)
  409d2c:	a8 63 7f 2f 	l.ori r3,r3,0x7f2f
  409d30:	d4 01 10 00 	l.sw 0x0(r1),r2
  409d34:	07 ff ea 58 	l.jal 404694 <printf>
  409d38:	18 40 00 41 	l.movhi r2,0x41
    printf("cluster_mask: %08lX\r", cluster_mask);
  409d3c:	a8 42 a8 e0 	l.ori r2,r2,0xa8e0
  409d40:	18 60 00 41 	l.movhi r3,0x41
  409d44:	84 42 00 00 	l.lwz r2,0x0(r2)
  409d48:	a8 63 7f 41 	l.ori r3,r3,0x7f41
  409d4c:	07 ff ea 52 	l.jal 404694 <printf>
  409d50:	d4 01 10 00 	l.sw 0x0(r1),r2

    return(1);
  409d54:	9c 60 00 01 	l.addi r3,r0,0x1

  DEBUG_FUNC_OUT(DEBUG_F_FAT | DEBUG_L1);
}
  409d58:	9c 21 00 18 	l.addi r1,r1,0x18
  409d5c:	a9 63 00 00 	l.ori r11,r3,0x0
  409d60:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  409d64:	84 41 ff ec 	l.lwz r2,0xffffffec(r1)
  409d68:	85 c1 ff f0 	l.lwz r14,0xfffffff0(r1)
  409d6c:	86 01 ff f4 	l.lwz r16,0xfffffff4(r1)
  409d70:	44 00 48 00 	l.jr r9
  409d74:	86 41 ff f8 	l.lwz r18,0xfffffff8(r1)

00409d78 <UploadKickstart>:

RAFile romfile;


char UploadKickstart(char *name)
{
  409d78:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  409d7c:	d7 e1 17 d4 	l.sw 0xffffffd4(r1),r2
  409d80:	d7 e1 77 d8 	l.sw 0xffffffd8(r1),r14
  409d84:	d7 e1 87 dc 	l.sw 0xffffffdc(r1),r16
  409d88:	d7 e1 97 e0 	l.sw 0xffffffe0(r1),r18
  409d8c:	d7 e1 a7 e4 	l.sw 0xffffffe4(r1),r20
  409d90:	d7 e1 b7 e8 	l.sw 0xffffffe8(r1),r22
  409d94:	d7 e1 c7 ec 	l.sw 0xffffffec(r1),r24
  409d98:	d7 e1 d7 f0 	l.sw 0xfffffff0(r1),r26
  409d9c:	d7 e1 e7 f4 	l.sw 0xfffffff4(r1),r28
  409da0:	d7 e1 f7 f8 	l.sw 0xfffffff8(r1),r30
  409da4:	9c 21 ff c4 	l.addi r1,r1,0xffffffc4
  DEBUG_FUNC_IN(DEBUG_F_CONFIG | DEBUG_L0);

	int keysize=0;
    char filename[12];
    strncpy(filename, name, 8); // copy base name
  409da8:	9c a0 00 08 	l.addi r5,r0,0x8

RAFile romfile;


char UploadKickstart(char *name)
{
  409dac:	a8 83 00 00 	l.ori r4,r3,0x0
  DEBUG_FUNC_IN(DEBUG_F_CONFIG | DEBUG_L0);

	int keysize=0;
    char filename[12];
    strncpy(filename, name, 8); // copy base name
  409db0:	9c 61 00 04 	l.addi r3,r1,0x4
  409db4:	07 ff d9 6e 	l.jal 40036c <strncpy>
  409db8:	18 40 00 41 	l.movhi r2,0x41
    strcpy(&filename[8], "ROM"); // add extension
  409dbc:	18 80 00 41 	l.movhi r4,0x41
  409dc0:	9c 61 00 0c 	l.addi r3,r1,0xc
  409dc4:	a8 84 87 46 	l.ori r4,r4,0x8746
  409dc8:	07 ff d9 41 	l.jal 4002cc <strcpy>
  409dcc:	a8 42 cb 80 	l.ori r2,r2,0xcb80

	BootPrint("Checking for Amiga Forever key file:");
  409dd0:	18 60 00 41 	l.movhi r3,0x41
  409dd4:	07 ff f0 c6 	l.jal 4060ec <BootPrint>
  409dd8:	a8 63 7f 56 	l.ori r3,r3,0x7f56
	if(FileOpen(&file,"ROM     KEY"))
  409ddc:	18 80 00 41 	l.movhi r4,0x41
  409de0:	a8 62 00 00 	l.ori r3,r2,0x0
  409de4:	07 ff fd 3b 	l.jal 4092d0 <FileOpen>
  409de8:	a8 84 7f 7b 	l.ori r4,r4,0x7f7b
  409dec:	bc 0b 00 00 	l.sfeqi r11,0x0
  409df0:	10 00 00 1b 	l.bf 409e5c <UploadKickstart+0xe4>
  409df4:	18 60 00 41 	l.movhi r3,0x41
	{
		keysize=file.size;
  409df8:	85 c2 00 18 	l.lwz r14,0x18(r2)
		if(file.size<sizeof(romkey))
  409dfc:	bc 4e 0b ff 	l.sfgtui r14,0xbff
  409e00:	0c 00 00 0d 	l.bnf 409e34 <UploadKickstart+0xbc>
  409e04:	9c 40 00 00 	l.addi r2,r0,0x0
				FileNextSector(&file);
			}
			BootPrint("Loaded Amiga Forever key file");
		}
		else
			BootPrint("Amiga Forever keyfile is too large!");
  409e08:	00 00 00 11 	l.j 409e4c <UploadKickstart+0xd4>
  409e0c:	18 60 00 41 	l.movhi r3,0x41
		if(file.size<sizeof(romkey))
		{
			int c=0;
			while(c<keysize)
			{
		        FileRead(&file, &romkey[c]);
  409e10:	18 60 00 41 	l.movhi r3,0x41
  409e14:	a8 a5 cd 4c 	l.ori r5,r5,0xcd4c
  409e18:	a8 63 cb 80 	l.ori r3,r3,0xcb80
  409e1c:	e0 82 28 00 	l.add r4,r2,r5
  409e20:	07 ff ed 25 	l.jal 4052b4 <FileRead>
  409e24:	9c 42 02 00 	l.addi r2,r2,0x200
				c+=512;
				FileNextSector(&file);
  409e28:	18 60 00 41 	l.movhi r3,0x41
  409e2c:	07 ff ed c7 	l.jal 405548 <FileNextSector>
  409e30:	a8 63 cb 80 	l.ori r3,r3,0xcb80
	{
		keysize=file.size;
		if(file.size<sizeof(romkey))
		{
			int c=0;
			while(c<keysize)
  409e34:	e5 82 70 00 	l.sflts r2,r14
  409e38:	13 ff ff f6 	l.bf 409e10 <UploadKickstart+0x98>
  409e3c:	18 a0 00 41 	l.movhi r5,0x41
			{
		        FileRead(&file, &romkey[c]);
				c+=512;
				FileNextSector(&file);
			}
			BootPrint("Loaded Amiga Forever key file");
  409e40:	18 60 00 41 	l.movhi r3,0x41
  409e44:	00 00 00 03 	l.j 409e50 <UploadKickstart+0xd8>
  409e48:	a8 63 7f 87 	l.ori r3,r3,0x7f87
		}
		else
			BootPrint("Amiga Forever keyfile is too large!");
  409e4c:	a8 63 7f a5 	l.ori r3,r3,0x7fa5
  409e50:	07 ff f0 a7 	l.jal 4060ec <BootPrint>
  409e54:	15 00 00 00 	l.nop 0x0
	}

	BootPrint("Loading file: ");
  409e58:	18 60 00 41 	l.movhi r3,0x41
	BootPrint(filename);
  409e5c:	9c 41 00 04 	l.addi r2,r1,0x4
		}
		else
			BootPrint("Amiga Forever keyfile is too large!");
	}

	BootPrint("Loading file: ");
  409e60:	07 ff f0 a3 	l.jal 4060ec <BootPrint>
  409e64:	a8 63 7f c9 	l.ori r3,r3,0x7fc9
	BootPrint(filename);
  409e68:	07 ff f0 a1 	l.jal 4060ec <BootPrint>
  409e6c:	a8 62 00 00 	l.ori r3,r2,0x0
  //SPI(4);
  //DisableOsd();
  //SPIN(); SPIN();
  //while ((read32(REG_SYS_STAT_ADR) & 0x2));

  if (RAOpen(&romfile, filename))
  409e70:	18 60 00 41 	l.movhi r3,0x41
  409e74:	a8 82 00 00 	l.ori r4,r2,0x0
  409e78:	07 ff fd cb 	l.jal 4095a4 <RAOpen>
  409e7c:	a8 63 d9 4c 	l.ori r3,r3,0xd94c
  409e80:	bc 0b 00 00 	l.sfeqi r11,0x0
  409e84:	10 00 01 b4 	l.bf 40a554 <UploadKickstart+0x7dc>
  409e88:	a9 cb 00 00 	l.ori r14,r11,0x0
  {
    int i,j;
    unsigned int adr, size, base=0x180000, offset=0xc00000, data;
    //BootPrintEx("Uploading 512KB Kickstart ...");
    size = ((romfile.file.size)+511)>>9;
  409e8c:	18 40 00 41 	l.movhi r2,0x41
    printf("File size: %d\r", size);
  409e90:	18 60 00 41 	l.movhi r3,0x41
  if (RAOpen(&romfile, filename))
  {
    int i,j;
    unsigned int adr, size, base=0x180000, offset=0xc00000, data;
    //BootPrintEx("Uploading 512KB Kickstart ...");
    size = ((romfile.file.size)+511)>>9;
  409e94:	a8 42 d9 4c 	l.ori r2,r2,0xd94c
    printf("File size: %d\r", size);
  409e98:	a8 63 7f d8 	l.ori r3,r3,0x7fd8
  if (RAOpen(&romfile, filename))
  {
    int i,j;
    unsigned int adr, size, base=0x180000, offset=0xc00000, data;
    //BootPrintEx("Uploading 512KB Kickstart ...");
    size = ((romfile.file.size)+511)>>9;
  409e9c:	87 02 00 18 	l.lwz r24,0x18(r2)
    printf("File size: %d\r", size);

    printf("[");
    for (i=0; i<size; i++) {
  409ea0:	9e 00 00 00 	l.addi r16,r0,0x0
  if (RAOpen(&romfile, filename))
  {
    int i,j;
    unsigned int adr, size, base=0x180000, offset=0xc00000, data;
    //BootPrintEx("Uploading 512KB Kickstart ...");
    size = ((romfile.file.size)+511)>>9;
  409ea4:	9f 18 01 ff 	l.addi r24,r24,0x1ff
    printf("File size: %d\r", size);

    printf("[");
    for (i=0; i<size; i++) {
      if (!(i&31)) printf("*");
      RARead(&romfile,sector_buffer,512);
  409ea8:	aa c2 00 00 	l.ori r22,r2,0x0
  if (RAOpen(&romfile, filename))
  {
    int i,j;
    unsigned int adr, size, base=0x180000, offset=0xc00000, data;
    //BootPrintEx("Uploading 512KB Kickstart ...");
    size = ((romfile.file.size)+511)>>9;
  409eac:	bb 18 00 49 	l.srli r24,r24,0x9
      //for (j=0; j<512; j=j+4) {
      //  data = ((unsigned int*)sector_buffer)[j>>2];
      //  write32(adr+j, data);
      //  if (data != read32(adr+j)) printf("Mismatch @ 0x%08x : 0x%08x != 0x%08x\r", adr+j, data, read32(adr+j));
      //}
      EnableOsd();
  409eb0:	18 40 00 80 	l.movhi r2,0x80
      adr = 0xf80000 + i*512;
      SPI(OSD_CMD_WR);
  409eb4:	9f 80 00 1c 	l.addi r28,r0,0x1c
  {
    int i,j;
    unsigned int adr, size, base=0x180000, offset=0xc00000, data;
    //BootPrintEx("Uploading 512KB Kickstart ...");
    size = ((romfile.file.size)+511)>>9;
    printf("File size: %d\r", size);
  409eb8:	07 ff e9 f7 	l.jal 404694 <printf>
  409ebc:	d4 01 c0 00 	l.sw 0x0(r1),r24

    printf("[");
  409ec0:	18 60 00 41 	l.movhi r3,0x41
      //for (j=0; j<512; j=j+4) {
      //  data = ((unsigned int*)sector_buffer)[j>>2];
      //  write32(adr+j, data);
      //  if (data != read32(adr+j)) printf("Mismatch @ 0x%08x : 0x%08x != 0x%08x\r", adr+j, data, read32(adr+j));
      //}
      EnableOsd();
  409ec4:	aa 82 00 20 	l.ori r20,r2,0x20
    unsigned int adr, size, base=0x180000, offset=0xc00000, data;
    //BootPrintEx("Uploading 512KB Kickstart ...");
    size = ((romfile.file.size)+511)>>9;
    printf("File size: %d\r", size);

    printf("[");
  409ec8:	a8 63 7f e7 	l.ori r3,r3,0x7fe7
  409ecc:	07 ff e9 f2 	l.jal 404694 <printf>
  409ed0:	a9 c2 00 24 	l.ori r14,r2,0x24
    for (i=0; i<size; i++) {
  409ed4:	aa 50 00 00 	l.ori r18,r16,0x0
      //for (j=0; j<512; j=j+4) {
      //  data = ((unsigned int*)sector_buffer)[j>>2];
      //  write32(adr+j, data);
      //  if (data != read32(adr+j)) printf("Mismatch @ 0x%08x : 0x%08x != 0x%08x\r", adr+j, data, read32(adr+j));
      //}
      EnableOsd();
  409ed8:	9f c0 00 44 	l.addi r30,r0,0x44
      adr = 0xf80000 + i*512;
      SPI(OSD_CMD_WR);
      SPIN(); SPIN(); SPIN(); SPIN();
  409edc:	e0 42 e0 04 	l.or r2,r2,r28
    //BootPrintEx("Uploading 512KB Kickstart ...");
    size = ((romfile.file.size)+511)>>9;
    printf("File size: %d\r", size);

    printf("[");
    for (i=0; i<size; i++) {
  409ee0:	00 00 01 96 	l.j 40a538 <UploadKickstart+0x7c0>
  409ee4:	9f 40 00 40 	l.addi r26,r0,0x40
      if (!(i&31)) printf("*");
  409ee8:	a4 72 00 1f 	l.andi r3,r18,0x1f
  409eec:	bc 23 00 00 	l.sfnei r3,0x0
  409ef0:	10 00 00 04 	l.bf 409f00 <UploadKickstart+0x188>
  409ef4:	18 60 00 41 	l.movhi r3,0x41
  409ef8:	07 ff e9 e7 	l.jal 404694 <printf>
  409efc:	a8 63 8d 30 	l.ori r3,r3,0x8d30
      RARead(&romfile,sector_buffer,512);
  409f00:	18 60 00 41 	l.movhi r3,0x41
  409f04:	18 80 00 41 	l.movhi r4,0x41
  409f08:	a8 63 d9 4c 	l.ori r3,r3,0xd94c
  409f0c:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  409f10:	07 ff ed e5 	l.jal 4056a4 <RARead>
  409f14:	9c a0 02 00 	l.addi r5,r0,0x200
      //for (j=0; j<512; j=j+4) {
      //  data = ((unsigned int*)sector_buffer)[j>>2];
      //  write32(adr+j, data);
      //  if (data != read32(adr+j)) printf("Mismatch @ 0x%08x : 0x%08x != 0x%08x\r", adr+j, data, read32(adr+j));
      //}
      EnableOsd();
  409f18:	d4 14 f0 00 	l.sw 0x0(r20),r30
      adr = 0xf80000 + i*512;
      SPI(OSD_CMD_WR);
  409f1c:	d4 0e e0 00 	l.sw 0x0(r14),r28
      //for (j=0; j<512; j=j+4) {
      //  data = ((unsigned int*)sector_buffer)[j>>2];
      //  write32(adr+j, data);
      //  if (data != read32(adr+j)) printf("Mismatch @ 0x%08x : 0x%08x != 0x%08x\r", adr+j, data, read32(adr+j));
      //}
      EnableOsd();
  409f20:	18 c0 00 f8 	l.movhi r6,0xf8
      adr = 0xf80000 + i*512;
      SPI(OSD_CMD_WR);
  409f24:	84 8e 00 00 	l.lwz r4,0x0(r14)
      SPIN(); SPIN(); SPIN(); SPIN();
  409f28:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f2c:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f30:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f34:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f38:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f3c:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f40:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f44:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f48:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f4c:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f50:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f54:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f58:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f5c:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f60:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f64:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f68:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f6c:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f70:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f74:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f78:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f7c:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f80:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f84:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f88:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f8c:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f90:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f94:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f98:	84 82 00 00 	l.lwz r4,0x0(r2)
  409f9c:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fa0:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fa4:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fa8:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fac:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fb0:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fb4:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fb8:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fbc:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fc0:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fc4:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fc8:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fcc:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fd0:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fd4:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fd8:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fdc:	84 82 00 00 	l.lwz r4,0x0(r2)
      //for (j=0; j<512; j=j+4) {
      //  data = ((unsigned int*)sector_buffer)[j>>2];
      //  write32(adr+j, data);
      //  if (data != read32(adr+j)) printf("Mismatch @ 0x%08x : 0x%08x != 0x%08x\r", adr+j, data, read32(adr+j));
      //}
      EnableOsd();
  409fe0:	e0 70 30 00 	l.add r3,r16,r6
      adr = 0xf80000 + i*512;
      SPI(OSD_CMD_WR);
      SPIN(); SPIN(); SPIN(); SPIN();
  409fe4:	84 82 00 00 	l.lwz r4,0x0(r2)
  409fe8:	84 82 00 00 	l.lwz r4,0x0(r2)
      SPI(adr&0xff); adr = adr>>8;
  409fec:	a4 83 00 ff 	l.andi r4,r3,0xff
unsigned char romkey[3072];

RAFile romfile;


char UploadKickstart(char *name)
  409ff0:	18 e0 00 dc 	l.movhi r7,0xdc
      //}
      EnableOsd();
      adr = 0xf80000 + i*512;
      SPI(OSD_CMD_WR);
      SPIN(); SPIN(); SPIN(); SPIN();
      SPI(adr&0xff); adr = adr>>8;
  409ff4:	d4 0e 20 00 	l.sw 0x0(r14),r4
  409ff8:	84 8e 00 00 	l.lwz r4,0x0(r14)
  409ffc:	b8 83 00 48 	l.srli r4,r3,0x8
      SPI(adr&0xff); adr = adr>>8;
  40a000:	a4 84 00 ff 	l.andi r4,r4,0xff
  40a004:	d4 0e 20 00 	l.sw 0x0(r14),r4
  40a008:	84 8e 00 00 	l.lwz r4,0x0(r14)
      SPIN(); SPIN(); SPIN(); SPIN();
  40a00c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a010:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a014:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a018:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a01c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a020:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a024:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a028:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a02c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a030:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a034:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a038:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a03c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a040:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a044:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a048:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a04c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a050:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a054:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a058:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a05c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a060:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a064:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a068:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a06c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a070:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a074:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a078:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a07c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a080:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a084:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a088:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a08c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a090:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a094:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a098:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a09c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a0a0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a0a4:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a0a8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a0ac:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a0b0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a0b4:	84 a2 00 00 	l.lwz r5,0x0(r2)
      EnableOsd();
      adr = 0xf80000 + i*512;
      SPI(OSD_CMD_WR);
      SPIN(); SPIN(); SPIN(); SPIN();
      SPI(adr&0xff); adr = adr>>8;
      SPI(adr&0xff); adr = adr>>8;
  40a0b8:	b8 83 00 50 	l.srli r4,r3,0x10
      SPIN(); SPIN(); SPIN(); SPIN();
  40a0bc:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a0c0:	84 a2 00 00 	l.lwz r5,0x0(r2)
      SPI(adr&0xff); adr = adr>>8;
      SPI(adr&0xff); adr = adr>>8;
  40a0c4:	b8 63 00 58 	l.srli r3,r3,0x18
      adr = 0xf80000 + i*512;
      SPI(OSD_CMD_WR);
      SPIN(); SPIN(); SPIN(); SPIN();
      SPI(adr&0xff); adr = adr>>8;
      SPI(adr&0xff); adr = adr>>8;
      SPIN(); SPIN(); SPIN(); SPIN();
  40a0c8:	84 a2 00 00 	l.lwz r5,0x0(r2)
      SPI(adr&0xff); adr = adr>>8;
  40a0cc:	a4 84 00 ff 	l.andi r4,r4,0xff
      adr = 0xf80000 + i*512;
      SPI(OSD_CMD_WR);
      SPIN(); SPIN(); SPIN(); SPIN();
      SPI(adr&0xff); adr = adr>>8;
      SPI(adr&0xff); adr = adr>>8;
      SPIN(); SPIN(); SPIN(); SPIN();
  40a0d0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40a0d4:	84 a2 00 00 	l.lwz r5,0x0(r2)
      SPI(adr&0xff); adr = adr>>8;
  40a0d8:	d4 0e 20 00 	l.sw 0x0(r14),r4
  40a0dc:	84 8e 00 00 	l.lwz r4,0x0(r14)
      SPI(adr&0xff); adr = adr>>8;
  40a0e0:	d4 0e 18 00 	l.sw 0x0(r14),r3
      SPIN(); SPIN(); SPIN(); SPIN();
      for (j=0; j<512; j=j+4) {
  40a0e4:	9c 80 00 00 	l.addi r4,r0,0x0
      SPIN(); SPIN(); SPIN(); SPIN();
      SPI(adr&0xff); adr = adr>>8;
      SPI(adr&0xff); adr = adr>>8;
      SPIN(); SPIN(); SPIN(); SPIN();
      SPI(adr&0xff); adr = adr>>8;
      SPI(adr&0xff); adr = adr>>8;
  40a0e8:	84 6e 00 00 	l.lwz r3,0x0(r14)
      SPIN(); SPIN(); SPIN(); SPIN();
  40a0ec:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a0f0:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a0f4:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a0f8:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a0fc:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a100:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a104:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a108:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a10c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a110:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a114:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a118:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a11c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a120:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a124:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a128:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a12c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a130:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a134:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a138:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a13c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a140:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a144:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a148:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a14c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a150:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a154:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a158:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a15c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a160:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a164:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a168:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a16c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a170:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a174:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a178:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a17c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a180:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a184:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a188:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a18c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a190:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a194:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a198:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a19c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a1a0:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a1a4:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a1a8:	84 62 00 00 	l.lwz r3,0x0(r2)
  40a1ac:	18 60 00 41 	l.movhi r3,0x41
unsigned char romkey[3072];

RAFile romfile;


char UploadKickstart(char *name)
  40a1b0:	e0 b0 38 00 	l.add r5,r16,r7
      SPI(adr&0xff); adr = adr>>8;
      SPI(adr&0xff); adr = adr>>8;
      SPIN(); SPIN(); SPIN(); SPIN();
      SPI(adr&0xff); adr = adr>>8;
      SPI(adr&0xff); adr = adr>>8;
      SPIN(); SPIN(); SPIN(); SPIN();
  40a1b4:	a8 63 a4 dc 	l.ori r3,r3,0xa4dc
      for (j=0; j<512; j=j+4) {
        SPI(sector_buffer[j+0]);
  40a1b8:	8c c3 00 00 	l.lbz r6,0x0(r3)
  40a1bc:	d4 0e 30 00 	l.sw 0x0(r14),r6
        SPI(sector_buffer[j+1]);
        SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN();
        SPI(sector_buffer[j+2]);
        SPI(sector_buffer[j+3]);
        SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN();
        data = ((unsigned int*)sector_buffer)[j>>2];
  40a1c0:	9d 00 ff fc 	l.addi r8,r0,0xfffffffc
      SPIN(); SPIN(); SPIN(); SPIN();
      SPI(adr&0xff); adr = adr>>8;
      SPI(adr&0xff); adr = adr>>8;
      SPIN(); SPIN(); SPIN(); SPIN();
      for (j=0; j<512; j=j+4) {
        SPI(sector_buffer[j+0]);
  40a1c4:	84 ce 00 00 	l.lwz r6,0x0(r14)
        SPI(sector_buffer[j+1]);
  40a1c8:	8c c3 00 01 	l.lbz r6,0x1(r3)
  40a1cc:	d4 0e 30 00 	l.sw 0x0(r14),r6
        SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN();
        SPI(sector_buffer[j+2]);
        SPI(sector_buffer[j+3]);
        SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN();
        data = ((unsigned int*)sector_buffer)[j>>2];
  40a1d0:	18 e0 00 41 	l.movhi r7,0x41
      SPI(adr&0xff); adr = adr>>8;
      SPI(adr&0xff); adr = adr>>8;
      SPIN(); SPIN(); SPIN(); SPIN();
      for (j=0; j<512; j=j+4) {
        SPI(sector_buffer[j+0]);
        SPI(sector_buffer[j+1]);
  40a1d4:	84 ce 00 00 	l.lwz r6,0x0(r14)
        SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN();
  40a1d8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a1dc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a1e0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a1e4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a1e8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a1ec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a1f0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a1f4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a1f8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a1fc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a200:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a204:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a208:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a20c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a210:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a214:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a218:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a21c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a220:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a224:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a228:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a22c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a230:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a234:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a238:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a23c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a240:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a244:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a248:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a24c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a250:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a254:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a258:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a25c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a260:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a264:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a268:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a26c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a270:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a274:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a278:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a27c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a280:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a284:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a288:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a28c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a290:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a294:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a298:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a29c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2a0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2a4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2a8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2ac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2b0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2b4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2b8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2bc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2c0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2c4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2c8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2cc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2d0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2d4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2d8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2dc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2e0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2e4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2e8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2ec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2f0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2f4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2f8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a2fc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a300:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a304:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a308:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a30c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a310:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a314:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a318:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a31c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a320:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a324:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a328:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a32c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a330:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a334:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a338:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a33c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a340:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a344:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a348:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a34c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a350:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a354:	84 c2 00 00 	l.lwz r6,0x0(r2)
        SPI(sector_buffer[j+2]);
  40a358:	8c c3 00 02 	l.lbz r6,0x2(r3)
  40a35c:	d4 0e 30 00 	l.sw 0x0(r14),r6
  40a360:	84 ce 00 00 	l.lwz r6,0x0(r14)
        SPI(sector_buffer[j+3]);
  40a364:	8c c3 00 03 	l.lbz r6,0x3(r3)
  40a368:	d4 0e 30 00 	l.sw 0x0(r14),r6
        SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN();
        data = ((unsigned int*)sector_buffer)[j>>2];
  40a36c:	a8 e7 a4 dc 	l.ori r7,r7,0xa4dc
      for (j=0; j<512; j=j+4) {
        SPI(sector_buffer[j+0]);
        SPI(sector_buffer[j+1]);
        SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN();
        SPI(sector_buffer[j+2]);
        SPI(sector_buffer[j+3]);
  40a370:	84 ce 00 00 	l.lwz r6,0x0(r14)
        SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN();
  40a374:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a378:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a37c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a380:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a384:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a388:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a38c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a390:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a394:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a398:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a39c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3a0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3a4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3a8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3ac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3b0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3b4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3b8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3bc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3c0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3c4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3c8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3cc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3d0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3d4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3d8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3dc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3e0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3e4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3e8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3ec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3f0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3f4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3f8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a3fc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a400:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a404:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a408:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a40c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a410:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a414:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a418:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a41c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a420:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a424:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a428:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a42c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a430:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a434:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a438:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a43c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a440:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a444:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a448:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a44c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a450:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a454:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a458:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a45c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a460:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a464:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a468:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a46c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a470:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a474:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a478:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a47c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a480:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a484:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a488:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a48c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a490:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a494:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a498:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a49c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4a0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4a4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4a8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4ac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4b0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4b4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4b8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4bc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4c0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4c4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4c8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4cc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4d0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4d4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4d8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4dc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4e0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4e4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4e8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4ec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40a4f0:	84 c2 00 00 	l.lwz r6,0x0(r2)
        data = ((unsigned int*)sector_buffer)[j>>2];
  40a4f4:	e0 c4 40 03 	l.and r6,r4,r8
        //if (data != read32(offset+base+i*512+j)) printf("Mismatch @ 0x%08x : 0x%08x != 0x%08x\r", offset+base+i*512+j, data, read32(offset+base+i*512+j));
        // For 256k roms (e.g. 1.3), copy the content to both 0xf80000 and 0xfc0000.
        // This is necessary, since minimig will overlay the kickrom at boot to
        // 0 => 0xf80000, but the 256k roms will expect to run at 0xfc0000
        if (romfile.size == 0x40000)
  40a4f8:	19 00 00 04 	l.movhi r8,0x4
        SPI(sector_buffer[j+1]);
        SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN();
        SPI(sector_buffer[j+2]);
        SPI(sector_buffer[j+3]);
        SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN(); SPIN();
        data = ((unsigned int*)sector_buffer)[j>>2];
  40a4fc:	e0 c6 38 00 	l.add r6,r6,r7
  40a500:	84 e6 00 00 	l.lwz r7,0x0(r6)
        //if (data != read32(offset+base+i*512+j)) printf("Mismatch @ 0x%08x : 0x%08x != 0x%08x\r", offset+base+i*512+j, data, read32(offset+base+i*512+j));
        // For 256k roms (e.g. 1.3), copy the content to both 0xf80000 and 0xfc0000.
        // This is necessary, since minimig will overlay the kickrom at boot to
        // 0 => 0xf80000, but the 256k roms will expect to run at 0xfc0000
        if (romfile.size == 0x40000)
  40a504:	84 d6 01 2c 	l.lwz r6,0x12c(r22)
  40a508:	e4 26 40 00 	l.sfne r6,r8
  40a50c:	10 00 00 04 	l.bf 40a51c <UploadKickstart+0x7a4>
  40a510:	15 00 00 00 	l.nop 0x0
unsigned char romkey[3072];

RAFile romfile;


char UploadKickstart(char *name)
  40a514:	e0 c5 20 00 	l.add r6,r5,r4
        //if (data != read32(offset+base+i*512+j)) printf("Mismatch @ 0x%08x : 0x%08x != 0x%08x\r", offset+base+i*512+j, data, read32(offset+base+i*512+j));
        // For 256k roms (e.g. 1.3), copy the content to both 0xf80000 and 0xfc0000.
        // This is necessary, since minimig will overlay the kickrom at boot to
        // 0 => 0xf80000, but the 256k roms will expect to run at 0xfc0000
        if (romfile.size == 0x40000)
          write32(offset+base+0x40000+i*512+j, data);
  40a518:	d4 06 38 00 	l.sw 0x0(r6),r7
      SPI(adr&0xff); adr = adr>>8;
      SPIN(); SPIN(); SPIN(); SPIN();
      SPI(adr&0xff); adr = adr>>8;
      SPI(adr&0xff); adr = adr>>8;
      SPIN(); SPIN(); SPIN(); SPIN();
      for (j=0; j<512; j=j+4) {
  40a51c:	9c 84 00 04 	l.addi r4,r4,0x4
  40a520:	bc 24 02 00 	l.sfnei r4,0x200
  40a524:	13 ff ff 25 	l.bf 40a1b8 <UploadKickstart+0x440>
  40a528:	9c 63 00 04 	l.addi r3,r3,0x4
        // This is necessary, since minimig will overlay the kickrom at boot to
        // 0 => 0xf80000, but the 256k roms will expect to run at 0xfc0000
        if (romfile.size == 0x40000)
          write32(offset+base+0x40000+i*512+j, data);
      }
      DisableOsd();
  40a52c:	d4 14 d0 00 	l.sw 0x0(r20),r26
    //BootPrintEx("Uploading 512KB Kickstart ...");
    size = ((romfile.file.size)+511)>>9;
    printf("File size: %d\r", size);

    printf("[");
    for (i=0; i<size; i++) {
  40a530:	9e 52 00 01 	l.addi r18,r18,0x1
  40a534:	9e 10 02 00 	l.addi r16,r16,0x200
  40a538:	e4 92 c0 00 	l.sfltu r18,r24
  40a53c:	13 ff fe 6b 	l.bf 409ee8 <UploadKickstart+0x170>
  40a540:	18 60 00 41 	l.movhi r3,0x41
        if (romfile.size == 0x40000)
          write32(offset+base+0x40000+i*512+j, data);
      }
      DisableOsd();
    }
    printf("]\r");
  40a544:	07 ff e8 54 	l.jal 404694 <printf>
  40a548:	a8 63 7f e9 	l.ori r3,r3,0x7fe9
    return(1);
  40a54c:	00 00 00 0c 	l.j 40a57c <UploadKickstart+0x804>
  40a550:	9d 60 00 01 	l.addi r11,r0,0x1
        }
    }
*/
    else
    {
        sprintf(s, "No \"%s\" file!", filename);
  40a554:	18 60 00 41 	l.movhi r3,0x41
  40a558:	18 80 00 41 	l.movhi r4,0x41
  40a55c:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40a560:	a8 84 7f ec 	l.ori r4,r4,0x7fec
  40a564:	07 ff e7 c8 	l.jal 404484 <sprintf>
  40a568:	d4 01 10 00 	l.sw 0x0(r1),r2
        BootPrint(s);
  40a56c:	18 60 00 41 	l.movhi r3,0x41
  40a570:	07 ff ee df 	l.jal 4060ec <BootPrint>
  40a574:	a8 63 cd 18 	l.ori r3,r3,0xcd18
    }
    return(0);
  40a578:	a9 6e 00 00 	l.ori r11,r14,0x0

  DEBUG_FUNC_OUT(DEBUG_F_CONFIG | DEBUG_L0);
}
  40a57c:	9c 21 00 3c 	l.addi r1,r1,0x3c
  40a580:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  40a584:	84 41 ff d4 	l.lwz r2,0xffffffd4(r1)
  40a588:	85 c1 ff d8 	l.lwz r14,0xffffffd8(r1)
  40a58c:	86 01 ff dc 	l.lwz r16,0xffffffdc(r1)
  40a590:	86 41 ff e0 	l.lwz r18,0xffffffe0(r1)
  40a594:	86 81 ff e4 	l.lwz r20,0xffffffe4(r1)
  40a598:	86 c1 ff e8 	l.lwz r22,0xffffffe8(r1)
  40a59c:	87 01 ff ec 	l.lwz r24,0xffffffec(r1)
  40a5a0:	87 41 ff f0 	l.lwz r26,0xfffffff0(r1)
  40a5a4:	87 81 ff f4 	l.lwz r28,0xfffffff4(r1)
  40a5a8:	44 00 48 00 	l.jr r9
  40a5ac:	87 c1 ff f8 	l.lwz r30,0xfffffff8(r1)

0040a5b0 <BootPrintEx>:
}


//// BootPrint() ////
void BootPrintEx(char * str)
{
  40a5b0:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  40a5b4:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
  40a5b8:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
  40a5bc:	9c 21 ff f4 	l.addi r1,r1,0xfffffff4
  static int adr = 0x80000 + 120*640/8;
  char buf[2];
  unsigned char i,j;
  unsigned char len;

  printf(str);
  40a5c0:	07 ff e8 35 	l.jal 404694 <printf>
  40a5c4:	a8 43 00 00 	l.ori r2,r3,0x0
  printf("\r");
  40a5c8:	18 60 00 41 	l.movhi r3,0x41
  40a5cc:	07 ff e8 32 	l.jal 404694 <printf>
  40a5d0:	a8 63 82 8e 	l.ori r3,r3,0x828e

  len = strlen(str);
  40a5d4:	07 ff d7 48 	l.jal 4002f4 <strlen>
  40a5d8:	a8 62 00 00 	l.ori r3,r2,0x0
  len = (len>80) ? 80 : len;
  40a5dc:	a4 6b 00 ff 	l.andi r3,r11,0xff
  40a5e0:	bc a3 00 50 	l.sfleui r3,0x50
  40a5e4:	10 00 00 03 	l.bf 40a5f0 <BootPrintEx+0x40>
  40a5e8:	18 60 00 41 	l.movhi r3,0x41
  40a5ec:	9d 60 00 50 	l.addi r11,r0,0x50

  for(j=0; j<8; j++) {
    MEM_UPLOAD_INIT(adr);
  40a5f0:	18 80 00 80 	l.movhi r4,0x80

  printf(str);
  printf("\r");

  len = strlen(str);
  len = (len>80) ? 80 : len;
  40a5f4:	a8 63 a3 48 	l.ori r3,r3,0xa348
  40a5f8:	a5 6b 00 ff 	l.andi r11,r11,0xff
  40a5fc:	85 83 00 00 	l.lwz r12,0x0(r3)

  for(j=0; j<8; j++) {
    MEM_UPLOAD_INIT(adr);
  40a600:	9e 60 00 1c 	l.addi r19,r0,0x1c
  40a604:	a9 a4 00 20 	l.ori r13,r4,0x20
  40a608:	a8 a4 00 24 	l.ori r5,r4,0x24

  printf(str);
  printf("\r");

  len = strlen(str);
  len = (len>80) ? 80 : len;
  40a60c:	a8 ec 00 00 	l.ori r7,r12,0x0
  40a610:	9c c0 00 00 	l.addi r6,r0,0x0

  for(j=0; j<8; j++) {
    MEM_UPLOAD_INIT(adr);
  40a614:	9e a0 00 44 	l.addi r21,r0,0x44
    for(i=0; i<len; i+=2) {
      SPI(boot_font[str[i]-32][j]);
      if (i==(len-1))
  40a618:	9e 2b ff ff 	l.addi r17,r11,0xffffffff
        SPI(boot_font[0][j]);
      else
        SPI(boot_font[str[i+1]-32][j]);
      SPIN(); SPIN(); SPIN(); SPIN();
  40a61c:	e0 84 98 04 	l.or r4,r4,r19
    }
    MEM_UPLOAD_FINI();
  40a620:	9d e0 00 40 	l.addi r15,r0,0x40

  len = strlen(str);
  len = (len>80) ? 80 : len;

  for(j=0; j<8; j++) {
    MEM_UPLOAD_INIT(adr);
  40a624:	d4 0d a8 00 	l.sw 0x0(r13),r21
  40a628:	d4 05 98 00 	l.sw 0x0(r5),r19
    for(i=0; i<len; i+=2) {
  40a62c:	9d 00 00 00 	l.addi r8,r0,0x0

  len = strlen(str);
  len = (len>80) ? 80 : len;

  for(j=0; j<8; j++) {
    MEM_UPLOAD_INIT(adr);
  40a630:	84 65 00 00 	l.lwz r3,0x0(r5)
  40a634:	a4 67 00 ff 	l.andi r3,r7,0xff
  40a638:	d4 05 18 00 	l.sw 0x0(r5),r3
  40a63c:	84 65 00 00 	l.lwz r3,0x0(r5)
  40a640:	b8 67 00 88 	l.srai r3,r7,0x8
  40a644:	a4 63 00 ff 	l.andi r3,r3,0xff
  40a648:	d4 05 18 00 	l.sw 0x0(r5),r3
  40a64c:	84 65 00 00 	l.lwz r3,0x0(r5)
  40a650:	b8 67 00 90 	l.srai r3,r7,0x10
  40a654:	a4 63 00 ff 	l.andi r3,r3,0xff
  40a658:	d4 05 18 00 	l.sw 0x0(r5),r3
  40a65c:	84 65 00 00 	l.lwz r3,0x0(r5)
  40a660:	b8 67 00 58 	l.srli r3,r7,0x18
  40a664:	d4 05 18 00 	l.sw 0x0(r5),r3
  40a668:	84 65 00 00 	l.lwz r3,0x0(r5)
  //}
}


//// BootPrint() ////
void BootPrintEx(char * str)
  40a66c:	18 60 00 41 	l.movhi r3,0x41
  40a670:	a8 63 74 20 	l.ori r3,r3,0x7420
  len = strlen(str);
  len = (len>80) ? 80 : len;

  for(j=0; j<8; j++) {
    MEM_UPLOAD_INIT(adr);
    for(i=0; i<len; i+=2) {
  40a674:	00 00 00 4c 	l.j 40a7a4 <BootPrintEx+0x1f4>
  40a678:	e2 e6 18 00 	l.add r23,r6,r3
      SPI(boot_font[str[i]-32][j]);
  40a67c:	19 c0 00 41 	l.movhi r14,0x41
  40a680:	93 23 00 00 	l.lbs r25,0x0(r3)
  40a684:	9f 39 ff e0 	l.addi r25,r25,0xffffffe0
  40a688:	a9 ce 74 20 	l.ori r14,r14,0x7420
  40a68c:	bb 39 00 03 	l.slli r25,r25,0x3
      if (i==(len-1))
  40a690:	e4 28 88 00 	l.sfne r8,r17
  len = (len>80) ? 80 : len;

  for(j=0; j<8; j++) {
    MEM_UPLOAD_INIT(adr);
    for(i=0; i<len; i+=2) {
      SPI(boot_font[str[i]-32][j]);
  40a694:	e3 39 30 00 	l.add r25,r25,r6
  40a698:	e3 39 70 00 	l.add r25,r25,r14
  40a69c:	93 39 00 00 	l.lbs r25,0x0(r25)
  40a6a0:	d4 05 c8 00 	l.sw 0x0(r5),r25
  40a6a4:	87 25 00 00 	l.lwz r25,0x0(r5)
      if (i==(len-1))
  40a6a8:	10 00 00 04 	l.bf 40a6b8 <BootPrintEx+0x108>
  40a6ac:	19 c0 00 41 	l.movhi r14,0x41
        SPI(boot_font[0][j]);
  40a6b0:	00 00 00 09 	l.j 40a6d4 <BootPrintEx+0x124>
  40a6b4:	90 77 00 00 	l.lbs r3,0x0(r23)
      else
        SPI(boot_font[str[i+1]-32][j]);
  40a6b8:	90 63 00 01 	l.lbs r3,0x1(r3)
  40a6bc:	9c 63 ff e0 	l.addi r3,r3,0xffffffe0
  40a6c0:	b8 63 00 03 	l.slli r3,r3,0x3
  40a6c4:	a9 ce 74 20 	l.ori r14,r14,0x7420
  40a6c8:	e0 63 30 00 	l.add r3,r3,r6
  40a6cc:	e0 63 70 00 	l.add r3,r3,r14
  40a6d0:	90 63 00 00 	l.lbs r3,0x0(r3)
  40a6d4:	d4 05 18 00 	l.sw 0x0(r5),r3
  len = strlen(str);
  len = (len>80) ? 80 : len;

  for(j=0; j<8; j++) {
    MEM_UPLOAD_INIT(adr);
    for(i=0; i<len; i+=2) {
  40a6d8:	9d 08 00 02 	l.addi r8,r8,0x2
      SPI(boot_font[str[i]-32][j]);
      if (i==(len-1))
        SPI(boot_font[0][j]);
      else
        SPI(boot_font[str[i+1]-32][j]);
  40a6dc:	84 65 00 00 	l.lwz r3,0x0(r5)
      SPIN(); SPIN(); SPIN(); SPIN();
  40a6e0:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a6e4:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a6e8:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a6ec:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a6f0:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a6f4:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a6f8:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a6fc:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a700:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a704:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a708:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a70c:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a710:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a714:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a718:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a71c:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a720:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a724:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a728:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a72c:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a730:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a734:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a738:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a73c:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a740:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a744:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a748:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a74c:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a750:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a754:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a758:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a75c:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a760:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a764:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a768:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a76c:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a770:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a774:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a778:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a77c:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a780:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a784:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a788:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a78c:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a790:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a794:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a798:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a79c:	84 64 00 00 	l.lwz r3,0x0(r4)
  len = strlen(str);
  len = (len>80) ? 80 : len;

  for(j=0; j<8; j++) {
    MEM_UPLOAD_INIT(adr);
    for(i=0; i<len; i+=2) {
  40a7a0:	a5 08 00 ff 	l.andi r8,r8,0xff
  40a7a4:	e4 88 58 00 	l.sfltu r8,r11
  40a7a8:	13 ff ff b5 	l.bf 40a67c <BootPrintEx+0xcc>
  40a7ac:	e0 62 40 00 	l.add r3,r2,r8
        SPI(boot_font[0][j]);
      else
        SPI(boot_font[str[i+1]-32][j]);
      SPIN(); SPIN(); SPIN(); SPIN();
    }
    MEM_UPLOAD_FINI();
  40a7b0:	d4 0d 78 00 	l.sw 0x0(r13),r15
  40a7b4:	9c c6 00 01 	l.addi r6,r6,0x1
  40a7b8:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7bc:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7c0:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7c4:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7c8:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7cc:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7d0:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7d4:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7d8:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7dc:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7e0:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7e4:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7e8:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7ec:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7f0:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7f4:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7f8:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a7fc:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a800:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a804:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a808:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a80c:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a810:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a814:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a818:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a81c:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a820:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a824:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a828:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a82c:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a830:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a834:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a838:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a83c:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a840:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a844:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a848:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a84c:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a850:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a854:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a858:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a85c:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a860:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a864:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a868:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a86c:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a870:	84 64 00 00 	l.lwz r3,0x0(r4)
  40a874:	84 64 00 00 	l.lwz r3,0x0(r4)
  printf("\r");

  len = strlen(str);
  len = (len>80) ? 80 : len;

  for(j=0; j<8; j++) {
  40a878:	bc 26 00 08 	l.sfnei r6,0x8
  40a87c:	13 ff ff 6a 	l.bf 40a624 <BootPrintEx+0x74>
  40a880:	9c e7 00 50 	l.addi r7,r7,0x50
  40a884:	18 40 00 41 	l.movhi r2,0x41
  40a888:	9d 8c 02 80 	l.addi r12,r12,0x280
  40a88c:	a8 42 a3 48 	l.ori r2,r2,0xa348
  40a890:	d4 02 60 00 	l.sw 0x0(r2),r12
    MEM_UPLOAD_FINI();
    adr += 640/8;
  }

  DEBUG_FUNC_OUT(DEBUG_F_BOOT_PRINT | DEBUG_L1);
}
  40a894:	9c 21 00 0c 	l.addi r1,r1,0xc
  40a898:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  40a89c:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
  40a8a0:	44 00 48 00 	l.jr r9
  40a8a4:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

0040a8a8 <FatalError>:
char s[40];
char led = 0;

//// FatalError() ////
void FatalError(unsigned long error)
{
  40a8a8:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  40a8ac:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
  40a8b0:	9c 21 ff f4 	l.addi r1,r1,0xfffffff4
  40a8b4:	a8 43 00 00 	l.ori r2,r3,0x0
  DEBUG_FUNC_IN(DEBUG_F_MAIN | DEBUG_L2);

  sprintf(s,"Fatal error: %lu", error);
  40a8b8:	d4 01 18 00 	l.sw 0x0(r1),r3
  40a8bc:	18 80 00 41 	l.movhi r4,0x41
  40a8c0:	18 60 00 41 	l.movhi r3,0x41
  40a8c4:	a8 84 7f fa 	l.ori r4,r4,0x7ffa
  40a8c8:	07 ff e6 ef 	l.jal 404484 <sprintf>
  40a8cc:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  BootPrintEx(s);
  40a8d0:	18 60 00 41 	l.movhi r3,0x41
  40a8d4:	07 ff ff 37 	l.jal 40a5b0 <BootPrintEx>
  40a8d8:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  printf(s);
  40a8dc:	18 60 00 41 	l.movhi r3,0x41
  40a8e0:	07 ff e7 6d 	l.jal 404694 <printf>
  40a8e4:	a8 63 cd 18 	l.ori r3,r3,0xcd18

  // loop forever
  while(1) {
    TIMER_wait(200);
  40a8e8:	18 60 00 80 	l.movhi r3,0x80
  40a8ec:	a8 83 00 18 	l.ori r4,r3,0x18
    LEDS(0x0);
  40a8f0:	a8 63 00 04 	l.ori r3,r3,0x4
  BootPrintEx(s);
  printf(s);

  // loop forever
  while(1) {
    TIMER_wait(200);
  40a8f4:	9c a0 00 00 	l.addi r5,r0,0x0
  40a8f8:	d4 04 28 00 	l.sw 0x0(r4),r5
  40a8fc:	84 a4 00 00 	l.lwz r5,0x0(r4)
  40a900:	bc a5 00 c7 	l.sfleui r5,0xc7
  40a904:	13 ff ff fe 	l.bf 40a8fc <FatalError+0x54>
  40a908:	9c a0 00 00 	l.addi r5,r0,0x0
    LEDS(0x0);
  40a90c:	dc 03 28 00 	l.sh 0x0(r3),r5
    TIMER_wait(200);
  40a910:	9c a0 00 00 	l.addi r5,r0,0x0
  40a914:	d4 04 28 00 	l.sw 0x0(r4),r5
  40a918:	84 a4 00 00 	l.lwz r5,0x0(r4)
  40a91c:	bc a5 00 c7 	l.sfleui r5,0xc7
  40a920:	13 ff ff fe 	l.bf 40a918 <FatalError+0x70>
  40a924:	15 00 00 00 	l.nop 0x0
    LEDS(error);
  40a928:	dc 03 10 00 	l.sh 0x0(r3),r2
  }
  40a92c:	03 ff ff f3 	l.j 40a8f8 <FatalError+0x50>
  40a930:	9c a0 00 00 	l.addi r5,r0,0x0

0040a934 <OsdReset.clone.0>:

void OsdReset(unsigned char boot)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    EnableOsd();
  40a934:	18 60 00 80 	l.movhi r3,0x80
  40a938:	9c e0 00 44 	l.addi r7,r0,0x44
  40a93c:	a8 83 00 20 	l.ori r4,r3,0x20

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdReset(unsigned char boot)
  40a940:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    EnableOsd();
    //SPI(OSDCMDRST | (boot & 0x01));
    SPI(OSD_CMD_RST);
  40a944:	a8 63 00 24 	l.ori r3,r3,0x24
  40a948:	9c c0 00 08 	l.addi r6,r0,0x8

void OsdReset(unsigned char boot)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    EnableOsd();
  40a94c:	d4 04 38 00 	l.sw 0x0(r4),r7
    //SPI(OSDCMDRST | (boot & 0x01));
    SPI(OSD_CMD_RST);
  40a950:	d4 03 30 00 	l.sw 0x0(r3),r6
    //SPI(0x2 | (boot & 0x01));
    SPI(0x1);
    DisableOsd();
    EnableOsd();
    SPI(OSD_CMD_RST);
    SPI(0x0);
  40a954:	9c 40 00 00 	l.addi r2,r0,0x0
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    EnableOsd();
    //SPI(OSDCMDRST | (boot & 0x01));
    SPI(OSD_CMD_RST);
  40a958:	84 a3 00 00 	l.lwz r5,0x0(r3)
    //SPI(0x2 | (boot & 0x01));
    SPI(0x1);
  40a95c:	9c a0 00 01 	l.addi r5,r0,0x1

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdReset(unsigned char boot)
  40a960:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc

    EnableOsd();
    //SPI(OSDCMDRST | (boot & 0x01));
    SPI(OSD_CMD_RST);
    //SPI(0x2 | (boot & 0x01));
    SPI(0x1);
  40a964:	d4 03 28 00 	l.sw 0x0(r3),r5
  40a968:	84 a3 00 00 	l.lwz r5,0x0(r3)
    DisableOsd();
  40a96c:	9c a0 00 40 	l.addi r5,r0,0x40
  40a970:	d4 04 28 00 	l.sw 0x0(r4),r5
    EnableOsd();
  40a974:	d4 04 38 00 	l.sw 0x0(r4),r7
    SPI(OSD_CMD_RST);
  40a978:	d4 03 30 00 	l.sw 0x0(r3),r6
  40a97c:	84 c3 00 00 	l.lwz r6,0x0(r3)
    SPI(0x0);
  40a980:	d4 03 10 00 	l.sw 0x0(r3),r2
  40a984:	84 63 00 00 	l.lwz r3,0x0(r3)
    DisableOsd();
  40a988:	d4 04 28 00 	l.sw 0x0(r4),r5

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}
  40a98c:	9c 21 00 04 	l.addi r1,r1,0x4
  40a990:	44 00 48 00 	l.jr r9
  40a994:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

0040a998 <HandleHDD.clone.1>:

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


void HandleHDD(unsigned char c1, unsigned char c2)
  40a998:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  40a99c:	d7 e1 17 d4 	l.sw 0xffffffd4(r1),r2
  40a9a0:	d7 e1 77 d8 	l.sw 0xffffffd8(r1),r14
  40a9a4:	d7 e1 87 dc 	l.sw 0xffffffdc(r1),r16
  40a9a8:	d7 e1 97 e0 	l.sw 0xffffffe0(r1),r18
  40a9ac:	d7 e1 a7 e4 	l.sw 0xffffffe4(r1),r20
  40a9b0:	d7 e1 b7 e8 	l.sw 0xffffffe8(r1),r22
  40a9b4:	d7 e1 c7 ec 	l.sw 0xffffffec(r1),r24
  40a9b8:	d7 e1 d7 f0 	l.sw 0xfffffff0(r1),r26
  40a9bc:	d7 e1 e7 f4 	l.sw 0xfffffff4(r1),r28
  40a9c0:	d7 e1 f7 f8 	l.sw 0xfffffff8(r1),r30
    unsigned char  head;
    unsigned char  unit;
    unsigned short sector_count;
    unsigned short block_count;

    if (c1 & CMD_IDECMD)
  40a9c4:	a4 63 00 04 	l.andi r3,r3,0x4
  40a9c8:	bc 03 00 00 	l.sfeqi r3,0x0
  40a9cc:	10 00 06 01 	l.bf 40c1d0 <HandleHDD.clone.1+0x1838>
  40a9d0:	9c 21 fd c4 	l.addi r1,r1,0xfffffdc4
    {
        DISKLED_ON;
        EnableFpga();
  40a9d4:	18 40 00 80 	l.movhi r2,0x80
  40a9d8:	9c 80 00 22 	l.addi r4,r0,0x22
  40a9dc:	a8 62 00 20 	l.ori r3,r2,0x20
        SPI(CMD_IDE_REGS_RD); // read task file registers
  40a9e0:	a8 42 00 24 	l.ori r2,r2,0x24
    unsigned short block_count;

    if (c1 & CMD_IDECMD)
    {
        DISKLED_ON;
        EnableFpga();
  40a9e4:	d4 03 20 00 	l.sw 0x0(r3),r4
        SPI(CMD_IDE_REGS_RD); // read task file registers
  40a9e8:	9c 60 00 80 	l.addi r3,r0,0x80
        SPI(0x00);
        SPI(0x00);
  40a9ec:	9c 80 00 00 	l.addi r4,r0,0x0

    if (c1 & CMD_IDECMD)
    {
        DISKLED_ON;
        EnableFpga();
        SPI(CMD_IDE_REGS_RD); // read task file registers
  40a9f0:	d4 02 18 00 	l.sw 0x0(r2),r3
  40a9f4:	84 62 00 00 	l.lwz r3,0x0(r2)
        SPI(0x00);
  40a9f8:	9c 60 00 00 	l.addi r3,r0,0x0
  40a9fc:	d4 02 18 00 	l.sw 0x0(r2),r3
  40aa00:	84 62 00 00 	l.lwz r3,0x0(r2)
        SPI(0x00);
  40aa04:	d4 02 20 00 	l.sw 0x0(r2),r4
  40aa08:	84 62 00 00 	l.lwz r3,0x0(r2)
        SPI(0x00);
  40aa0c:	d4 02 20 00 	l.sw 0x0(r2),r4
  40aa10:	84 62 00 00 	l.lwz r3,0x0(r2)
        SPI(0x00);
  40aa14:	d4 02 20 00 	l.sw 0x0(r2),r4
  40aa18:	84 62 00 00 	l.lwz r3,0x0(r2)
        SPI(0x00);
  40aa1c:	d4 02 20 00 	l.sw 0x0(r2),r4

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


void HandleHDD(unsigned char c1, unsigned char c2)
  40aa20:	9c 81 02 10 	l.addi r4,r1,0x210
        SPI(CMD_IDE_REGS_RD); // read task file registers
        SPI(0x00);
        SPI(0x00);
        SPI(0x00);
        SPI(0x00);
        SPI(0x00);
  40aa24:	84 62 00 00 	l.lwz r3,0x0(r2)
  40aa28:	9c 61 02 08 	l.addi r3,r1,0x208

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


void HandleHDD(unsigned char c1, unsigned char c2)
  40aa2c:	aa 43 00 00 	l.ori r18,r3,0x0
        SPI(0x00);
        SPI(0x00);
        SPI(0x00);
        for (i = 0; i < 8; i++)
        {
            SPI(0);
  40aa30:	9c a0 00 00 	l.addi r5,r0,0x0
            tfr[i] = SPI(0);
  40aa34:	9d 60 00 00 	l.addi r11,r0,0x0
        SPI(0x00);
        SPI(0x00);
        SPI(0x00);
        for (i = 0; i < 8; i++)
        {
            SPI(0);
  40aa38:	d4 02 28 00 	l.sw 0x0(r2),r5
  40aa3c:	84 a2 00 00 	l.lwz r5,0x0(r2)
            tfr[i] = SPI(0);
  40aa40:	d4 02 58 00 	l.sw 0x0(r2),r11
  40aa44:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40aa48:	d8 03 28 00 	l.sb 0x0(r3),r5
  40aa4c:	9c 63 00 01 	l.addi r3,r3,0x1
        SPI(0x00);
        SPI(0x00);
        SPI(0x00);
        SPI(0x00);
        SPI(0x00);
        for (i = 0; i < 8; i++)
  40aa50:	e4 23 20 00 	l.sfne r3,r4
  40aa54:	13 ff ff f8 	l.bf 40aa34 <HandleHDD.clone.1+0x9c>
  40aa58:	9c a0 00 00 	l.addi r5,r0,0x0
        {
            SPI(0);
            tfr[i] = SPI(0);
        }
        DisableFpga();
  40aa5c:	9c 60 00 20 	l.addi r3,r0,0x20
  40aa60:	18 40 00 80 	l.movhi r2,0x80
  40aa64:	e0 42 18 04 	l.or r2,r2,r3
  40aa68:	d4 02 18 00 	l.sw 0x0(r2),r3
            printf("IDE:");
            for (i = 1; i < 7; i++)
                printf("%02X.",tfr[i]);
            printf("%02X\r", tfr[7]);
        }
        if ((tfr[7] & 0xF0) == ACMD_RECALIBRATE) // Recalibrate 0x10-0x1F (class 3 command: no data)
  40aa6c:	8c 41 02 0f 	l.lbz r2,0x20f(r1)
  40aa70:	a4 62 00 f0 	l.andi r3,r2,0xf0
  40aa74:	bc 23 00 10 	l.sfnei r3,0x10
  40aa78:	10 00 00 0c 	l.bf 40aaa8 <HandleHDD.clone.1+0x110>
  40aa7c:	8e 01 02 0e 	l.lbz r16,0x20e(r1)
        {
            printf("Recalibrate\r");
  40aa80:	18 60 00 41 	l.movhi r3,0x41
  40aa84:	07 ff e7 04 	l.jal 404694 <printf>
  40aa88:	a8 63 80 0b 	l.ori r3,r3,0x800b
            WriteTaskFile(0, 0, 1, 0, 0, tfr[6] & 0xF0);
  40aa8c:	9c 60 00 00 	l.addi r3,r0,0x0
  40aa90:	9c a0 00 01 	l.addi r5,r0,0x1
  40aa94:	a8 83 00 00 	l.ori r4,r3,0x0
  40aa98:	a8 c3 00 00 	l.ori r6,r3,0x0
  40aa9c:	a8 e3 00 00 	l.ori r7,r3,0x0
  40aaa0:	00 00 01 0f 	l.j 40aedc <HandleHDD.clone.1+0x544>
  40aaa4:	a5 10 00 f0 	l.andi r8,r16,0xf0
            SPI(0);
            tfr[i] = SPI(0);
        }
        DisableFpga();

        unit = tfr[6] & 0x10 ? 1 : 0; // master/slave selection
  40aaa8:	b9 d0 00 44 	l.srli r14,r16,0x4
        {
            printf("Recalibrate\r");
            WriteTaskFile(0, 0, 1, 0, 0, tfr[6] & 0xF0);
            WriteStatus(IDE_STATUS_END | IDE_STATUS_IRQ);
        }
        else if (tfr[7] == ACMD_IDENTIFY_DEVICE) // Identify Device
  40aaac:	bc 22 00 ec 	l.sfnei r2,0xec
  40aab0:	10 00 00 ed 	l.bf 40ae64 <HandleHDD.clone.1+0x4cc>
  40aab4:	a5 ce 00 01 	l.andi r14,r14,0x1
        {
            printf("Identify Device\r");
  40aab8:	18 60 00 41 	l.movhi r3,0x41

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


void HandleHDD(unsigned char c1, unsigned char c2)
  40aabc:	9e 81 02 08 	l.addi r20,r1,0x208
            WriteTaskFile(0, 0, 1, 0, 0, tfr[6] & 0xF0);
            WriteStatus(IDE_STATUS_END | IDE_STATUS_IRQ);
        }
        else if (tfr[7] == ACMD_IDENTIFY_DEVICE) // Identify Device
        {
            printf("Identify Device\r");
  40aac0:	07 ff e6 f5 	l.jal 404694 <printf>
  40aac4:	a8 63 80 18 	l.ori r3,r3,0x8018
void IdentifyDevice(unsigned short *pBuffer, unsigned char unit)
{ // builds Identify Device struct
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

    char *p, i, x;
    unsigned long total_sectors = hdf[unit].cylinders * hdf[unit].heads * hdf[unit].sectors;
  40aac8:	a8 6e 00 00 	l.ori r3,r14,0x0
  40aacc:	07 ff d5 67 	l.jal 400068 <__mulsi3>
  40aad0:	9c 80 11 44 	l.addi r4,r0,0x1144
  40aad4:	18 60 00 41 	l.movhi r3,0x41
  40aad8:	a8 63 a8 f8 	l.ori r3,r3,0xa8f8
  40aadc:	e0 4b 18 00 	l.add r2,r11,r3
  40aae0:	9c 82 01 30 	l.addi r4,r2,0x130
  40aae4:	94 64 00 02 	l.lhz r3,0x2(r4)
  40aae8:	07 ff d5 60 	l.jal 400068 <__mulsi3>
  40aaec:	94 84 00 00 	l.lhz r4,0x0(r4)
  40aaf0:	94 82 01 34 	l.lhz r4,0x134(r2)
  40aaf4:	a8 6b 00 00 	l.ori r3,r11,0x0
  40aaf8:	07 ff d5 5c 	l.jal 400068 <__mulsi3>
  40aafc:	9c 41 00 08 	l.addi r2,r1,0x8

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


void HandleHDD(unsigned char c1, unsigned char c2)
  40ab00:	aa c2 00 00 	l.ori r22,r2,0x0
void IdentifyDevice(unsigned short *pBuffer, unsigned char unit)
{ // builds Identify Device struct
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

    char *p, i, x;
    unsigned long total_sectors = hdf[unit].cylinders * hdf[unit].heads * hdf[unit].sectors;
  40ab04:	00 00 00 04 	l.j 40ab14 <HandleHDD.clone.1+0x17c>
  40ab08:	aa 4b 00 00 	l.ori r18,r11,0x0
		*q++ = c;
  40ab0c:	d8 02 20 00 	l.sb 0x0(r2),r4
  40ab10:	9c 42 00 01 	l.addi r2,r2,0x1
	asm volatile ("cld ; rep ; stosq ; movl %3,%%ecx ; rep ; stosb"
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
  40ab14:	e4 22 a0 00 	l.sfne r2,r20
  40ab18:	13 ff ff fd 	l.bf 40ab0c <HandleHDD.clone.1+0x174>
  40ab1c:	9c 80 00 00 	l.addi r4,r0,0x0

    memset(pBuffer, 0, 512);

	switch(hdf[unit].type)
  40ab20:	a8 6e 00 00 	l.ori r3,r14,0x0
  40ab24:	07 ff d5 51 	l.jal 400068 <__mulsi3>
  40ab28:	9c 80 11 44 	l.addi r4,r0,0x1144
  40ab2c:	18 a0 00 41 	l.movhi r5,0x41
  40ab30:	a8 a5 a8 f8 	l.ori r5,r5,0xa8f8
  40ab34:	e0 4b 28 00 	l.add r2,r11,r5
  40ab38:	84 62 00 00 	l.lwz r3,0x0(r2)
  40ab3c:	bd 43 00 06 	l.sfgtsi r3,0x6
  40ab40:	10 00 00 05 	l.bf 40ab54 <HandleHDD.clone.1+0x1bc>
  40ab44:	bc 03 00 81 	l.sfeqi r3,0x81
  40ab48:	bd 63 00 02 	l.sfgesi r3,0x2
  40ab4c:	10 00 00 4f 	l.bf 40ac88 <HandleHDD.clone.1+0x2f0>
  40ab50:	bc 03 00 01 	l.sfeqi r3,0x1
  40ab54:	0c 00 00 81 	l.bnf 40ad58 <HandleHDD.clone.1+0x3c0>
  40ab58:	18 60 00 41 	l.movhi r3,0x41
	{
		case HDF_FILE | HDF_SYNTHRDB:
		case HDF_FILE:
			DebugMessage("Identify - Type: HDF_FILE");
  40ab5c:	07 ff e1 78 	l.jal 40313c <DebugMessage>
  40ab60:	a8 63 80 29 	l.ori r3,r3,0x8029
			pBuffer[0] = 1 << 6; // hard disk
  40ab64:	9d 60 00 40 	l.addi r11,r0,0x40
			pBuffer[1] = hdf[unit].cylinders; // cyl count
  40ab68:	a8 6e 00 00 	l.ori r3,r14,0x0
  40ab6c:	9c 80 11 44 	l.addi r4,r0,0x1144
  40ab70:	07 ff d5 3e 	l.jal 400068 <__mulsi3>
  40ab74:	dc 01 58 08 	l.sh 0x8(r1),r11
  40ab78:	18 60 00 41 	l.movhi r3,0x41
  40ab7c:	a8 63 a8 f8 	l.ori r3,r3,0xa8f8
  40ab80:	e0 4b 18 00 	l.add r2,r11,r3
  40ab84:	9c 62 01 30 	l.addi r3,r2,0x130
			pBuffer[3] = hdf[unit].heads; // head count
			pBuffer[6] = hdf[unit].sectors; // sectors per track
  40ab88:	94 a2 01 34 	l.lhz r5,0x134(r2)
	{
		case HDF_FILE | HDF_SYNTHRDB:
		case HDF_FILE:
			DebugMessage("Identify - Type: HDF_FILE");
			pBuffer[0] = 1 << 6; // hard disk
			pBuffer[1] = hdf[unit].cylinders; // cyl count
  40ab8c:	94 83 00 00 	l.lhz r4,0x0(r3)
			pBuffer[3] = hdf[unit].heads; // head count
  40ab90:	94 63 00 02 	l.lhz r3,0x2(r3)
	{
		case HDF_FILE | HDF_SYNTHRDB:
		case HDF_FILE:
			DebugMessage("Identify - Type: HDF_FILE");
			pBuffer[0] = 1 << 6; // hard disk
			pBuffer[1] = hdf[unit].cylinders; // cyl count
  40ab94:	dc 01 20 0a 	l.sh 0xa(r1),r4
			pBuffer[3] = hdf[unit].heads; // head count
			pBuffer[6] = hdf[unit].sectors; // sectors per track
			// FIXME - can get serial no from card itself.
			memcpy((char*)&pBuffer[10], "1234567890ABCDEFGHIJ", 20); // serial number - byte swapped
  40ab98:	18 80 00 41 	l.movhi r4,0x41
		case HDF_FILE | HDF_SYNTHRDB:
		case HDF_FILE:
			DebugMessage("Identify - Type: HDF_FILE");
			pBuffer[0] = 1 << 6; // hard disk
			pBuffer[1] = hdf[unit].cylinders; // cyl count
			pBuffer[3] = hdf[unit].heads; // head count
  40ab9c:	dc 01 18 0e 	l.sh 0xe(r1),r3
			pBuffer[6] = hdf[unit].sectors; // sectors per track
  40aba0:	dc 01 28 14 	l.sh 0x14(r1),r5
			// FIXME - can get serial no from card itself.
			memcpy((char*)&pBuffer[10], "1234567890ABCDEFGHIJ", 20); // serial number - byte swapped
  40aba4:	9c 61 00 1c 	l.addi r3,r1,0x1c
  40aba8:	a8 84 80 43 	l.ori r4,r4,0x8043
  40abac:	07 ff d5 b5 	l.jal 400280 <memcpy>
  40abb0:	9c a0 00 14 	l.addi r5,r0,0x14
			memcpy((char*)&pBuffer[23], ".100    ", 8); // firmware version - byte swapped
  40abb4:	18 80 00 41 	l.movhi r4,0x41
  40abb8:	9c 61 00 36 	l.addi r3,r1,0x36
  40abbc:	a8 84 80 58 	l.ori r4,r4,0x8058
  40abc0:	07 ff d5 b0 	l.jal 400280 <memcpy>
  40abc4:	9c a0 00 08 	l.addi r5,r0,0x8
			p = (char*)&pBuffer[27];
			// FIXME - likewise the model name can be fetched from the card.
			if(hdf[unit].type & HDF_SYNTHRDB)
  40abc8:	84 42 00 00 	l.lwz r2,0x0(r2)
  40abcc:	a4 42 00 80 	l.andi r2,r2,0x80
  40abd0:	bc 02 00 00 	l.sfeqi r2,0x0
  40abd4:	10 00 00 0b 	l.bf 40ac00 <HandleHDD.clone.1+0x268>
  40abd8:	9c 61 00 3e 	l.addi r3,r1,0x3e
			{
				memcpy(p, "DON'T                                   ", 40);
  40abdc:	18 80 00 41 	l.movhi r4,0x41
  40abe0:	9c a0 00 28 	l.addi r5,r0,0x28
  40abe4:	07 ff d5 a7 	l.jal 400280 <memcpy>
  40abe8:	a8 84 80 61 	l.ori r4,r4,0x8061
				p += 8;
				memcpy(p, "REPARTITION!    ", 16);
  40abec:	18 80 00 41 	l.movhi r4,0x41
  40abf0:	9c 61 00 46 	l.addi r3,r1,0x46
  40abf4:	a8 84 80 8a 	l.ori r4,r4,0x808a
  40abf8:	00 00 00 4b 	l.j 40ad24 <HandleHDD.clone.1+0x38c>
  40abfc:	9c a0 00 10 	l.addi r5,r0,0x10
			}
			else
			{
				memcpy(p, "YAQUBE                                  ", 40); // model name - byte swapped
  40ac00:	18 80 00 41 	l.movhi r4,0x41
  40ac04:	9c a0 00 28 	l.addi r5,r0,0x28
  40ac08:	a8 84 80 9b 	l.ori r4,r4,0x809b
  40ac0c:	07 ff d5 9d 	l.jal 400280 <memcpy>
  40ac10:	b8 4e 00 02 	l.slli r2,r14,0x2
				p += 8;
				if (config.hardfile[unit].long_name[0])
  40ac14:	b8 8e 00 05 	l.slli r4,r14,0x5
  40ac18:	19 60 00 41 	l.movhi r11,0x41
  40ac1c:	e0 84 10 02 	l.sub r4,r4,r2
  40ac20:	a9 6b cc ac 	l.ori r11,r11,0xccac
  40ac24:	e0 44 58 00 	l.add r2,r4,r11
  40ac28:	90 42 00 3a 	l.lbs r2,0x3a(r2)
  40ac2c:	bc 02 00 00 	l.sfeqi r2,0x0
  40ac30:	10 00 00 11 	l.bf 40ac74 <HandleHDD.clone.1+0x2dc>
  40ac34:	9c 61 00 46 	l.addi r3,r1,0x46

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


void HandleHDD(unsigned char c1, unsigned char c2)
  40ac38:	18 40 00 41 	l.movhi r2,0x41
  40ac3c:	9c b6 00 4e 	l.addi r5,r22,0x4e
  40ac40:	a8 42 cc e6 	l.ori r2,r2,0xcce6
  40ac44:	00 00 00 04 	l.j 40ac54 <HandleHDD.clone.1+0x2bc>
  40ac48:	e0 84 10 00 	l.add r4,r4,r2
				memcpy(p, "YAQUBE                                  ", 40); // model name - byte swapped
				p += 8;
				if (config.hardfile[unit].long_name[0])
				{
					for (i = 0; (x = config.hardfile[unit].long_name[i]) && i < 16; i++) // copy file name as model name
						p[i] = x;
  40ac4c:	d8 03 10 00 	l.sb 0x0(r3),r2
  40ac50:	9c 63 00 01 	l.addi r3,r3,0x1
			{
				memcpy(p, "YAQUBE                                  ", 40); // model name - byte swapped
				p += 8;
				if (config.hardfile[unit].long_name[0])
				{
					for (i = 0; (x = config.hardfile[unit].long_name[i]) && i < 16; i++) // copy file name as model name
  40ac54:	90 44 00 00 	l.lbs r2,0x0(r4)
  40ac58:	bc 02 00 00 	l.sfeqi r2,0x0
  40ac5c:	10 00 00 3f 	l.bf 40ad58 <HandleHDD.clone.1+0x3c0>
  40ac60:	e4 23 28 00 	l.sfne r3,r5
  40ac64:	13 ff ff fa 	l.bf 40ac4c <HandleHDD.clone.1+0x2b4>
  40ac68:	9c 84 00 01 	l.addi r4,r4,0x1
			//    SwapBytes((char*)&pBuffer[27], 40); //not for 68000
			break;
	}

    pBuffer[47] = 0x8010; //maximum sectors per block in Read/Write Multiple command
    pBuffer[53] = 1;
  40ac6c:	00 00 00 3c 	l.j 40ad5c <HandleHDD.clone.1+0x3c4>
  40ac70:	9c 60 00 01 	l.addi r3,r0,0x1
					for (i = 0; (x = config.hardfile[unit].long_name[i]) && i < 16; i++) // copy file name as model name
						p[i] = x;
				}
				else
				{
					memcpy(p, config.hardfile[unit].name, 8); // copy file name as model name
  40ac74:	18 a0 00 41 	l.movhi r5,0x41
  40ac78:	a8 a5 cc de 	l.ori r5,r5,0xccde
  40ac7c:	e0 84 28 00 	l.add r4,r4,r5
  40ac80:	00 00 00 29 	l.j 40ad24 <HandleHDD.clone.1+0x38c>
  40ac84:	9c a0 00 08 	l.addi r5,r0,0x8
		case HDF_CARD:
		case HDF_CARDPART0:
		case HDF_CARDPART1:
		case HDF_CARDPART2:
		case HDF_CARDPART3:
			DebugMessage("Identify - Type: HDF_CARD");
  40ac88:	18 60 00 41 	l.movhi r3,0x41
  40ac8c:	07 ff e1 2c 	l.jal 40313c <DebugMessage>
  40ac90:	a8 63 80 c4 	l.ori r3,r3,0x80c4
			pBuffer[0] = 1 << 6; // hard disk
			pBuffer[1] = hdf[unit].cylinders; // cyl count
  40ac94:	9c 62 01 30 	l.addi r3,r2,0x130
			pBuffer[3] = hdf[unit].heads; // head count
			pBuffer[6] = hdf[unit].sectors; // sectors per track
  40ac98:	94 a2 01 34 	l.lhz r5,0x134(r2)
		case HDF_CARDPART1:
		case HDF_CARDPART2:
		case HDF_CARDPART3:
			DebugMessage("Identify - Type: HDF_CARD");
			pBuffer[0] = 1 << 6; // hard disk
			pBuffer[1] = hdf[unit].cylinders; // cyl count
  40ac9c:	94 83 00 00 	l.lhz r4,0x0(r3)
			pBuffer[3] = hdf[unit].heads; // head count
  40aca0:	94 63 00 02 	l.lhz r3,0x2(r3)
		case HDF_CARDPART1:
		case HDF_CARDPART2:
		case HDF_CARDPART3:
			DebugMessage("Identify - Type: HDF_CARD");
			pBuffer[0] = 1 << 6; // hard disk
			pBuffer[1] = hdf[unit].cylinders; // cyl count
  40aca4:	dc 01 20 0a 	l.sh 0xa(r1),r4
			pBuffer[3] = hdf[unit].heads; // head count
			pBuffer[6] = hdf[unit].sectors; // sectors per track
			// FIXME - can get serial no from card itself.
			memcpy((char*)&pBuffer[10], "TC64MiniMigSD0      ", 20); // serial number - byte swapped
  40aca8:	18 80 00 41 	l.movhi r4,0x41
		case HDF_CARDPART0:
		case HDF_CARDPART1:
		case HDF_CARDPART2:
		case HDF_CARDPART3:
			DebugMessage("Identify - Type: HDF_CARD");
			pBuffer[0] = 1 << 6; // hard disk
  40acac:	9d 60 00 40 	l.addi r11,r0,0x40
			pBuffer[1] = hdf[unit].cylinders; // cyl count
			pBuffer[3] = hdf[unit].heads; // head count
  40acb0:	dc 01 18 0e 	l.sh 0xe(r1),r3
			pBuffer[6] = hdf[unit].sectors; // sectors per track
  40acb4:	dc 01 28 14 	l.sh 0x14(r1),r5
			// FIXME - can get serial no from card itself.
			memcpy((char*)&pBuffer[10], "TC64MiniMigSD0      ", 20); // serial number - byte swapped
  40acb8:	9c 61 00 1c 	l.addi r3,r1,0x1c
  40acbc:	a8 84 80 de 	l.ori r4,r4,0x80de
  40acc0:	9c a0 00 14 	l.addi r5,r0,0x14
  40acc4:	07 ff d5 6f 	l.jal 400280 <memcpy>
  40acc8:	dc 01 58 08 	l.sh 0x8(r1),r11
			pBuffer[23]+=hdf[unit].type-HDF_CARD;
  40accc:	94 61 00 36 	l.lhz r3,0x36(r1)
  40acd0:	84 82 00 00 	l.lwz r4,0x0(r2)
  40acd4:	9c 63 ff fe 	l.addi r3,r3,0xfffffffe
			memcpy((char*)&pBuffer[23], ".100    ", 8); // firmware version - byte swapped
  40acd8:	9c a0 00 08 	l.addi r5,r0,0x8
			pBuffer[1] = hdf[unit].cylinders; // cyl count
			pBuffer[3] = hdf[unit].heads; // head count
			pBuffer[6] = hdf[unit].sectors; // sectors per track
			// FIXME - can get serial no from card itself.
			memcpy((char*)&pBuffer[10], "TC64MiniMigSD0      ", 20); // serial number - byte swapped
			pBuffer[23]+=hdf[unit].type-HDF_CARD;
  40acdc:	e0 63 20 00 	l.add r3,r3,r4
			memcpy((char*)&pBuffer[23], ".100    ", 8); // firmware version - byte swapped
  40ace0:	18 80 00 41 	l.movhi r4,0x41
			pBuffer[1] = hdf[unit].cylinders; // cyl count
			pBuffer[3] = hdf[unit].heads; // head count
			pBuffer[6] = hdf[unit].sectors; // sectors per track
			// FIXME - can get serial no from card itself.
			memcpy((char*)&pBuffer[10], "TC64MiniMigSD0      ", 20); // serial number - byte swapped
			pBuffer[23]+=hdf[unit].type-HDF_CARD;
  40ace4:	dc 01 18 36 	l.sh 0x36(r1),r3
			memcpy((char*)&pBuffer[23], ".100    ", 8); // firmware version - byte swapped
  40ace8:	a8 84 80 58 	l.ori r4,r4,0x8058
  40acec:	07 ff d5 65 	l.jal 400280 <memcpy>
  40acf0:	9c 61 00 36 	l.addi r3,r1,0x36
			p = (char*)&pBuffer[27];
			// FIXME - likewise the model name can be fetched from the card.
			memcpy(p, "YAQUBE                                  ", 40); // model name - byte swapped
  40acf4:	18 80 00 41 	l.movhi r4,0x41
  40acf8:	9c 61 00 3e 	l.addi r3,r1,0x3e
  40acfc:	a8 84 80 9b 	l.ori r4,r4,0x809b
  40ad00:	07 ff d5 60 	l.jal 400280 <memcpy>
  40ad04:	9c a0 00 28 	l.addi r5,r0,0x28
			p += 8;
			if(hdf[unit].type==HDF_CARD)
  40ad08:	84 62 00 00 	l.lwz r3,0x0(r2)
  40ad0c:	bc 23 00 02 	l.sfnei r3,0x2
  40ad10:	10 00 00 09 	l.bf 40ad34 <HandleHDD.clone.1+0x39c>
  40ad14:	9c 61 00 46 	l.addi r3,r1,0x46
				memcpy(p, "SD/MMC Card", 11); // copy file name as model name
  40ad18:	18 80 00 41 	l.movhi r4,0x41
  40ad1c:	9c a0 00 0b 	l.addi r5,r0,0xb
  40ad20:	a8 84 80 f3 	l.ori r4,r4,0x80f3
  40ad24:	07 ff d5 57 	l.jal 400280 <memcpy>
  40ad28:	15 00 00 00 	l.nop 0x0
			//    SwapBytes((char*)&pBuffer[27], 40); //not for 68000
			break;
	}

    pBuffer[47] = 0x8010; //maximum sectors per block in Read/Write Multiple command
    pBuffer[53] = 1;
  40ad2c:	00 00 00 0c 	l.j 40ad5c <HandleHDD.clone.1+0x3c4>
  40ad30:	9c 60 00 01 	l.addi r3,r0,0x1
			p += 8;
			if(hdf[unit].type==HDF_CARD)
				memcpy(p, "SD/MMC Card", 11); // copy file name as model name
			else
			{
				memcpy(p, "Card Part 1", 11); // copy file name as model name
  40ad34:	18 80 00 41 	l.movhi r4,0x41
  40ad38:	9c a0 00 0b 	l.addi r5,r0,0xb
  40ad3c:	07 ff d5 51 	l.jal 400280 <memcpy>
  40ad40:	a8 84 80 ff 	l.ori r4,r4,0x80ff
				p[10]+=hdf[unit].partition;
  40ad44:	9c 61 00 50 	l.addi r3,r1,0x50
  40ad48:	8c 42 01 39 	l.lbz r2,0x139(r2)
  40ad4c:	8c 83 00 00 	l.lbz r4,0x0(r3)
  40ad50:	e0 44 10 00 	l.add r2,r4,r2
  40ad54:	d8 03 10 00 	l.sb 0x0(r3),r2
			//    SwapBytes((char*)&pBuffer[27], 40); //not for 68000
			break;
	}

    pBuffer[47] = 0x8010; //maximum sectors per block in Read/Write Multiple command
    pBuffer[53] = 1;
  40ad58:	9c 60 00 01 	l.addi r3,r0,0x1
			}
			//    SwapBytes((char*)&pBuffer[27], 40); //not for 68000
			break;
	}

    pBuffer[47] = 0x8010; //maximum sectors per block in Read/Write Multiple command
  40ad5c:	9c 40 80 10 	l.addi r2,r0,0xffff8010
    pBuffer[53] = 1;
  40ad60:	dc 01 18 72 	l.sh 0x72(r1),r3
    pBuffer[54] = hdf[unit].cylinders;
  40ad64:	9c 80 11 44 	l.addi r4,r0,0x1144
  40ad68:	a8 6e 00 00 	l.ori r3,r14,0x0
  40ad6c:	07 ff d4 bf 	l.jal 400068 <__mulsi3>
  40ad70:	dc 01 10 66 	l.sh 0x66(r1),r2
  40ad74:	18 80 00 41 	l.movhi r4,0x41
    pBuffer[55] = hdf[unit].heads;
    pBuffer[56] = hdf[unit].sectors;
    pBuffer[57] = (unsigned short)total_sectors;
  40ad78:	dc 01 90 7a 	l.sh 0x7a(r1),r18
			break;
	}

    pBuffer[47] = 0x8010; //maximum sectors per block in Read/Write Multiple command
    pBuffer[53] = 1;
    pBuffer[54] = hdf[unit].cylinders;
  40ad7c:	a8 84 a8 f8 	l.ori r4,r4,0xa8f8
        }
        else if (tfr[7] == ACMD_IDENTIFY_DEVICE) // Identify Device
        {
            printf("Identify Device\r");
            IdentifyDevice(id, unit);
            WriteTaskFile(0, tfr[2], tfr[3], tfr[4], tfr[5], tfr[6]);
  40ad80:	8c c1 02 0c 	l.lbz r6,0x20c(r1)
			break;
	}

    pBuffer[47] = 0x8010; //maximum sectors per block in Read/Write Multiple command
    pBuffer[53] = 1;
    pBuffer[54] = hdf[unit].cylinders;
  40ad84:	e0 4b 20 00 	l.add r2,r11,r4
        }
        else if (tfr[7] == ACMD_IDENTIFY_DEVICE) // Identify Device
        {
            printf("Identify Device\r");
            IdentifyDevice(id, unit);
            WriteTaskFile(0, tfr[2], tfr[3], tfr[4], tfr[5], tfr[6]);
  40ad88:	8c e1 02 0d 	l.lbz r7,0x20d(r1)
			break;
	}

    pBuffer[47] = 0x8010; //maximum sectors per block in Read/Write Multiple command
    pBuffer[53] = 1;
    pBuffer[54] = hdf[unit].cylinders;
  40ad8c:	9c 62 01 30 	l.addi r3,r2,0x130
        }
        else if (tfr[7] == ACMD_IDENTIFY_DEVICE) // Identify Device
        {
            printf("Identify Device\r");
            IdentifyDevice(id, unit);
            WriteTaskFile(0, tfr[2], tfr[3], tfr[4], tfr[5], tfr[6]);
  40ad90:	8c 81 02 0a 	l.lbz r4,0x20a(r1)
			break;
	}

    pBuffer[47] = 0x8010; //maximum sectors per block in Read/Write Multiple command
    pBuffer[53] = 1;
    pBuffer[54] = hdf[unit].cylinders;
  40ad94:	94 a3 00 00 	l.lhz r5,0x0(r3)
    pBuffer[55] = hdf[unit].heads;
  40ad98:	94 63 00 02 	l.lhz r3,0x2(r3)
    pBuffer[56] = hdf[unit].sectors;
  40ad9c:	94 42 01 34 	l.lhz r2,0x134(r2)
			break;
	}

    pBuffer[47] = 0x8010; //maximum sectors per block in Read/Write Multiple command
    pBuffer[53] = 1;
    pBuffer[54] = hdf[unit].cylinders;
  40ada0:	dc 01 28 74 	l.sh 0x74(r1),r5
    pBuffer[55] = hdf[unit].heads;
    pBuffer[56] = hdf[unit].sectors;
    pBuffer[57] = (unsigned short)total_sectors;
    pBuffer[58] = (unsigned short)(total_sectors >> 16);
  40ada4:	ba 52 00 50 	l.srli r18,r18,0x10
        }
        else if (tfr[7] == ACMD_IDENTIFY_DEVICE) // Identify Device
        {
            printf("Identify Device\r");
            IdentifyDevice(id, unit);
            WriteTaskFile(0, tfr[2], tfr[3], tfr[4], tfr[5], tfr[6]);
  40ada8:	8c a1 02 0b 	l.lbz r5,0x20b(r1)
	}

    pBuffer[47] = 0x8010; //maximum sectors per block in Read/Write Multiple command
    pBuffer[53] = 1;
    pBuffer[54] = hdf[unit].cylinders;
    pBuffer[55] = hdf[unit].heads;
  40adac:	dc 01 18 76 	l.sh 0x76(r1),r3
        }
        else if (tfr[7] == ACMD_IDENTIFY_DEVICE) // Identify Device
        {
            printf("Identify Device\r");
            IdentifyDevice(id, unit);
            WriteTaskFile(0, tfr[2], tfr[3], tfr[4], tfr[5], tfr[6]);
  40adb0:	a9 10 00 00 	l.ori r8,r16,0x0
  40adb4:	9c 60 00 00 	l.addi r3,r0,0x0

    pBuffer[47] = 0x8010; //maximum sectors per block in Read/Write Multiple command
    pBuffer[53] = 1;
    pBuffer[54] = hdf[unit].cylinders;
    pBuffer[55] = hdf[unit].heads;
    pBuffer[56] = hdf[unit].sectors;
  40adb8:	dc 01 10 78 	l.sh 0x78(r1),r2
        }
        else if (tfr[7] == ACMD_IDENTIFY_DEVICE) // Identify Device
        {
            printf("Identify Device\r");
            IdentifyDevice(id, unit);
            WriteTaskFile(0, tfr[2], tfr[3], tfr[4], tfr[5], tfr[6]);
  40adbc:	07 ff e0 3b 	l.jal 402ea8 <WriteTaskFile>
  40adc0:	dc 01 90 7c 	l.sh 0x7c(r1),r18
            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type
  40adc4:	9c 60 00 08 	l.addi r3,r0,0x8
  40adc8:	07 ff e0 6e 	l.jal 402f80 <WriteStatus>
  40adcc:	18 40 00 80 	l.movhi r2,0x80
            EnableFpga();
  40add0:	a8 62 00 20 	l.ori r3,r2,0x20
  40add4:	9c 80 00 22 	l.addi r4,r0,0x22
            SPI(CMD_IDE_DATA_WR); // write data command
  40add8:	a8 42 00 24 	l.ori r2,r2,0x24
        {
            printf("Identify Device\r");
            IdentifyDevice(id, unit);
            WriteTaskFile(0, tfr[2], tfr[3], tfr[4], tfr[5], tfr[6]);
            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type
            EnableFpga();
  40addc:	d4 03 20 00 	l.sw 0x0(r3),r4
            SPI(CMD_IDE_DATA_WR); // write data command
  40ade0:	9c 60 00 a0 	l.addi r3,r0,0xa0
            SPI(0x00);
  40ade4:	9d 60 00 00 	l.addi r11,r0,0x0
            printf("Identify Device\r");
            IdentifyDevice(id, unit);
            WriteTaskFile(0, tfr[2], tfr[3], tfr[4], tfr[5], tfr[6]);
            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type
            EnableFpga();
            SPI(CMD_IDE_DATA_WR); // write data command
  40ade8:	d4 02 18 00 	l.sw 0x0(r2),r3
  40adec:	84 62 00 00 	l.lwz r3,0x0(r2)
            SPI(0x00);
  40adf0:	d4 02 58 00 	l.sw 0x0(r2),r11
  40adf4:	84 62 00 00 	l.lwz r3,0x0(r2)
            SPI(0x00);
  40adf8:	d4 02 58 00 	l.sw 0x0(r2),r11
  40adfc:	84 62 00 00 	l.lwz r3,0x0(r2)
            SPI(0x00);
  40ae00:	d4 02 58 00 	l.sw 0x0(r2),r11
  40ae04:	84 62 00 00 	l.lwz r3,0x0(r2)
            SPI(0x00);
  40ae08:	d4 02 58 00 	l.sw 0x0(r2),r11
  40ae0c:	84 62 00 00 	l.lwz r3,0x0(r2)
            SPI(0x00);
  40ae10:	d4 02 58 00 	l.sw 0x0(r2),r11
  40ae14:	84 62 00 00 	l.lwz r3,0x0(r2)
  40ae18:	9c 61 00 08 	l.addi r3,r1,0x8
            for (i = 0; i < 256; i++)
            {
                SPI((unsigned char)id[i]);
  40ae1c:	94 83 00 00 	l.lhz r4,0x0(r3)
  40ae20:	a4 84 00 ff 	l.andi r4,r4,0xff
  40ae24:	d4 02 20 00 	l.sw 0x0(r2),r4
  40ae28:	84 82 00 00 	l.lwz r4,0x0(r2)
                SPI((unsigned char)(id[i] >> 8));
  40ae2c:	94 83 00 00 	l.lhz r4,0x0(r3)
  40ae30:	b8 84 00 48 	l.srli r4,r4,0x8
  40ae34:	9c 63 00 02 	l.addi r3,r3,0x2
  40ae38:	d4 02 20 00 	l.sw 0x0(r2),r4
            SPI(0x00);
            SPI(0x00);
            SPI(0x00);
            SPI(0x00);
            SPI(0x00);
            for (i = 0; i < 256; i++)
  40ae3c:	e4 23 a0 00 	l.sfne r3,r20
            {
                SPI((unsigned char)id[i]);
                SPI((unsigned char)(id[i] >> 8));
  40ae40:	84 82 00 00 	l.lwz r4,0x0(r2)
            SPI(0x00);
            SPI(0x00);
            SPI(0x00);
            SPI(0x00);
            SPI(0x00);
            for (i = 0; i < 256; i++)
  40ae44:	13 ff ff f6 	l.bf 40ae1c <HandleHDD.clone.1+0x484>
  40ae48:	15 00 00 00 	l.nop 0x0
            {
                SPI((unsigned char)id[i]);
                SPI((unsigned char)(id[i] >> 8));
            }
            DisableFpga();
  40ae4c:	9c 60 00 20 	l.addi r3,r0,0x20
  40ae50:	18 40 00 80 	l.movhi r2,0x80
  40ae54:	e0 42 18 04 	l.or r2,r2,r3
  40ae58:	d4 02 18 00 	l.sw 0x0(r2),r3
            WriteStatus(IDE_STATUS_END | IDE_STATUS_IRQ);
  40ae5c:	00 00 04 db 	l.j 40c1c8 <HandleHDD.clone.1+0x1830>
  40ae60:	9c 60 00 90 	l.addi r3,r0,0x90
        }
        else if (tfr[7] == ACMD_INITIALIZE_DEVICE_PARAMETERS) // Initiallize Device Parameters
  40ae64:	bc 22 00 91 	l.sfnei r2,0x91
  40ae68:	10 00 00 21 	l.bf 40aeec <HandleHDD.clone.1+0x554>
  40ae6c:	bc 22 00 20 	l.sfnei r2,0x20
        {
            printf("Initialize Device Parameters\r");
  40ae70:	18 60 00 41 	l.movhi r3,0x41
            printf("IDE:");
  40ae74:	9d c1 02 09 	l.addi r14,r1,0x209
            DisableFpga();
            WriteStatus(IDE_STATUS_END | IDE_STATUS_IRQ);
        }
        else if (tfr[7] == ACMD_INITIALIZE_DEVICE_PARAMETERS) // Initiallize Device Parameters
        {
            printf("Initialize Device Parameters\r");
  40ae78:	a8 63 81 0b 	l.ori r3,r3,0x810b
  40ae7c:	07 ff e6 06 	l.jal 404694 <printf>
  40ae80:	9e 52 00 07 	l.addi r18,r18,0x7
            printf("IDE:");
  40ae84:	18 60 00 41 	l.movhi r3,0x41
  40ae88:	07 ff e6 03 	l.jal 404694 <printf>
  40ae8c:	a8 63 81 29 	l.ori r3,r3,0x8129
            for (i = 1; i < 7; i++)
                printf("%02X.", tfr[i]);
  40ae90:	8c 6e 00 00 	l.lbz r3,0x0(r14)
  40ae94:	d4 01 18 00 	l.sw 0x0(r1),r3
  40ae98:	18 60 00 41 	l.movhi r3,0x41
  40ae9c:	9d ce 00 01 	l.addi r14,r14,0x1
  40aea0:	07 ff e5 fd 	l.jal 404694 <printf>
  40aea4:	a8 63 81 2e 	l.ori r3,r3,0x812e
        }
        else if (tfr[7] == ACMD_INITIALIZE_DEVICE_PARAMETERS) // Initiallize Device Parameters
        {
            printf("Initialize Device Parameters\r");
            printf("IDE:");
            for (i = 1; i < 7; i++)
  40aea8:	e4 2e 90 00 	l.sfne r14,r18
  40aeac:	13 ff ff f9 	l.bf 40ae90 <HandleHDD.clone.1+0x4f8>
  40aeb0:	15 00 00 00 	l.nop 0x0
                printf("%02X.", tfr[i]);
            printf("%02X\r", tfr[7]);
  40aeb4:	18 60 00 41 	l.movhi r3,0x41
  40aeb8:	d4 01 10 00 	l.sw 0x0(r1),r2
  40aebc:	07 ff e5 f6 	l.jal 404694 <printf>
  40aec0:	a8 63 8e 1d 	l.ori r3,r3,0x8e1d
            WriteTaskFile(0, tfr[2], tfr[3], tfr[4], tfr[5], tfr[6]);
  40aec4:	8c 81 02 0a 	l.lbz r4,0x20a(r1)
  40aec8:	8c a1 02 0b 	l.lbz r5,0x20b(r1)
  40aecc:	8c c1 02 0c 	l.lbz r6,0x20c(r1)
  40aed0:	8c e1 02 0d 	l.lbz r7,0x20d(r1)
  40aed4:	9c 60 00 00 	l.addi r3,r0,0x0
  40aed8:	a9 10 00 00 	l.ori r8,r16,0x0
  40aedc:	07 ff df f3 	l.jal 402ea8 <WriteTaskFile>
  40aee0:	15 00 00 00 	l.nop 0x0
  40aee4:	00 00 04 b9 	l.j 40c1c8 <HandleHDD.clone.1+0x1830>
  40aee8:	9c 60 00 90 	l.addi r3,r0,0x90
            WriteStatus(IDE_STATUS_END | IDE_STATUS_IRQ);
        }
        else if (tfr[7] == ACMD_READ_SECTORS) // Read Sectors
  40aeec:	10 00 01 ce 	l.bf 40b624 <HandleHDD.clone.1+0xc8c>
  40aef0:	bc 22 00 c6 	l.sfnei r2,0xc6
        {
			long lba;

            sector = tfr[3];
            cylinder = tfr[4] | (tfr[5] << 8);
  40aef4:	8e c1 02 0d 	l.lbz r22,0x20d(r1)
            head = tfr[6] & 0x0F;
            sector_count = tfr[2];
  40aef8:	8f c1 02 0a 	l.lbz r30,0x20a(r1)
        }
        else if (tfr[7] == ACMD_READ_SECTORS) // Read Sectors
        {
			long lba;

            sector = tfr[3];
  40aefc:	8e 81 02 0b 	l.lbz r20,0x20b(r1)
            cylinder = tfr[4] | (tfr[5] << 8);
  40af00:	ba d6 00 08 	l.slli r22,r22,0x8
  40af04:	8c 41 02 0c 	l.lbz r2,0x20c(r1)
        }
        else if (tfr[7] == ACMD_READ_SECTORS) // Read Sectors
        {
			long lba;

            sector = tfr[3];
  40af08:	a7 14 ff ff 	l.andi r24,r20,0xffff
            cylinder = tfr[4] | (tfr[5] << 8);
  40af0c:	e2 d6 10 04 	l.or r22,r22,r2
            head = tfr[6] & 0x0F;
  40af10:	a6 50 00 0f 	l.andi r18,r16,0xf
            sector_count = tfr[2];
            if (sector_count == 0)
  40af14:	bc 1e 00 00 	l.sfeqi r30,0x0
  40af18:	0c 00 00 03 	l.bnf 40af24 <HandleHDD.clone.1+0x58c>
  40af1c:	ab 5e 00 00 	l.ori r26,r30,0x0
               sector_count = 0x100;
  40af20:	9f 40 01 00 	l.addi r26,r0,0x100

			switch(hdf[unit].type)
  40af24:	18 40 00 41 	l.movhi r2,0x41
  40af28:	a8 6e 00 00 	l.ori r3,r14,0x0
  40af2c:	9c 80 11 44 	l.addi r4,r0,0x1144
  40af30:	07 ff d4 4e 	l.jal 400068 <__mulsi3>
  40af34:	a8 42 a8 f8 	l.ori r2,r2,0xa8f8
  40af38:	e3 8b 10 00 	l.add r28,r11,r2
  40af3c:	84 7c 00 00 	l.lwz r3,0x0(r28)
  40af40:	bd 43 00 06 	l.sfgtsi r3,0x6
  40af44:	10 00 00 05 	l.bf 40af58 <HandleHDD.clone.1+0x5c0>
  40af48:	bc 03 00 81 	l.sfeqi r3,0x81
  40af4c:	bd 63 00 02 	l.sfgesi r3,0x2
  40af50:	10 00 01 69 	l.bf 40b4f4 <HandleHDD.clone.1+0xb5c>
  40af54:	bc 03 00 01 	l.sfeqi r3,0x1
  40af58:	0c 00 04 9e 	l.bnf 40c1d0 <HandleHDD.clone.1+0x1838>
  40af5c:	a8 6e 00 00 	l.ori r3,r14,0x0

unsigned long chs2lba(unsigned short cylinder, unsigned char head, unsigned short sector, unsigned char unit)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    return(cylinder * hdf[unit].heads + head) * hdf[unit].sectors + sector - 1;
  40af60:	9c 80 11 44 	l.addi r4,r0,0x1144
  40af64:	07 ff d4 41 	l.jal 400068 <__mulsi3>
  40af68:	a6 94 ff ff 	l.andi r20,r20,0xffff
  40af6c:	18 60 00 41 	l.movhi r3,0x41
  40af70:	9e 94 ff ff 	l.addi r20,r20,0xffffffff
  40af74:	a8 63 a8 f8 	l.ori r3,r3,0xa8f8
  40af78:	e0 4b 18 00 	l.add r2,r11,r3
  40af7c:	a8 76 00 00 	l.ori r3,r22,0x0
  40af80:	07 ff d4 3a 	l.jal 400068 <__mulsi3>
  40af84:	94 82 01 32 	l.lhz r4,0x132(r2)
  40af88:	94 82 01 34 	l.lhz r4,0x134(r2)
  40af8c:	07 ff d4 37 	l.jal 400068 <__mulsi3>
  40af90:	e0 6b 90 00 	l.add r3,r11,r18
			switch(hdf[unit].type)
			{
				case HDF_FILE | HDF_SYNTHRDB:
				case HDF_FILE:
					lba=chs2lba(cylinder, head, sector, unit);
					DEBUG2("Read HDF_File %ld",lba+hdf[unit].offset);
  40af94:	18 60 00 41 	l.movhi r3,0x41
  40af98:	a8 63 a3 50 	l.ori r3,r3,0xa350
  40af9c:	90 63 00 00 	l.lbs r3,0x0(r3)
  40afa0:	bc 03 00 00 	l.sfeqi r3,0x0
  40afa4:	10 00 00 0d 	l.bf 40afd8 <HandleHDD.clone.1+0x640>
  40afa8:	e2 94 58 00 	l.add r20,r20,r11
  40afac:	84 42 01 3c 	l.lwz r2,0x13c(r2)
  40afb0:	18 60 00 41 	l.movhi r3,0x41
  40afb4:	18 80 00 41 	l.movhi r4,0x41
  40afb8:	a8 63 a3 60 	l.ori r3,r3,0xa360
  40afbc:	e0 54 10 00 	l.add r2,r20,r2
  40afc0:	a8 84 81 34 	l.ori r4,r4,0x8134
  40afc4:	07 ff e5 30 	l.jal 404484 <sprintf>
  40afc8:	d4 01 10 00 	l.sw 0x0(r1),r2
  40afcc:	18 60 00 41 	l.movhi r3,0x41
  40afd0:	07 ff e0 5b 	l.jal 40313c <DebugMessage>
  40afd4:	a8 63 a3 60 	l.ori r3,r3,0xa360
					DEBUG2("Offset %ld",hdf[unit].offset);
  40afd8:	18 40 00 41 	l.movhi r2,0x41
  40afdc:	a8 42 a3 50 	l.ori r2,r2,0xa350
  40afe0:	90 42 00 00 	l.lbs r2,0x0(r2)
  40afe4:	bc 02 00 00 	l.sfeqi r2,0x0
  40afe8:	10 00 00 11 	l.bf 40b02c <HandleHDD.clone.1+0x694>
  40afec:	a8 6e 00 00 	l.ori r3,r14,0x0
  40aff0:	07 ff d4 1e 	l.jal 400068 <__mulsi3>
  40aff4:	9c 80 11 44 	l.addi r4,r0,0x1144
  40aff8:	18 80 00 41 	l.movhi r4,0x41
  40affc:	18 60 00 41 	l.movhi r3,0x41
  40b000:	a8 84 a8 f8 	l.ori r4,r4,0xa8f8
  40b004:	a8 63 a3 60 	l.ori r3,r3,0xa360
  40b008:	e1 6b 20 00 	l.add r11,r11,r4
  40b00c:	18 80 00 41 	l.movhi r4,0x41
  40b010:	84 4b 01 3c 	l.lwz r2,0x13c(r11)
  40b014:	a8 84 81 46 	l.ori r4,r4,0x8146
  40b018:	07 ff e5 1b 	l.jal 404484 <sprintf>
  40b01c:	d4 01 10 00 	l.sw 0x0(r1),r2
  40b020:	18 60 00 41 	l.movhi r3,0x41
  40b024:	07 ff e0 46 	l.jal 40313c <DebugMessage>
  40b028:	a8 63 a3 60 	l.ori r3,r3,0xa360
				    if (hdf[unit].file.size)
  40b02c:	a8 6e 00 00 	l.ori r3,r14,0x0
  40b030:	07 ff d4 0e 	l.jal 400068 <__mulsi3>
  40b034:	9c 80 11 44 	l.addi r4,r0,0x1144
  40b038:	18 a0 00 41 	l.movhi r5,0x41
  40b03c:	a8 a5 a8 f8 	l.ori r5,r5,0xa8f8
  40b040:	e0 6b 28 00 	l.add r3,r11,r5
  40b044:	84 43 00 1c 	l.lwz r2,0x1c(r3)
  40b048:	bc 02 00 00 	l.sfeqi r2,0x0
  40b04c:	10 00 00 09 	l.bf 40b070 <HandleHDD.clone.1+0x6d8>
  40b050:	18 40 00 41 	l.movhi r2,0x41
				        HardFileSeek(&hdf[unit], (lba+hdf[unit].offset) < 0 ? 0 : lba+hdf[unit].offset);
  40b054:	84 43 01 3c 	l.lwz r2,0x13c(r3)
  40b058:	e0 54 10 00 	l.add r2,r20,r2
  40b05c:	ac 82 ff ff 	l.xori r4,r2,0xffffffff
  40b060:	b8 84 00 9f 	l.srai r4,r4,0x1f
  40b064:	07 ff e0 0d 	l.jal 403098 <HardFileSeek>
  40b068:	e0 82 20 03 	l.and r4,r2,r4
static void FakeRDB(int unit,int block)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

	int i;
	DebugMessage("Clearing sector buffer");
  40b06c:	18 40 00 41 	l.movhi r2,0x41

							FakeRDB(unit,lba);

							WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
				            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type
				            EnableFpga();
  40b070:	1a 00 00 80 	l.movhi r16,0x80
//				 decrease sector count
						if(sector_count!=1)
						{
							if (sector == hdf[unit].sectors)
							{
								sector = 1;
  40b074:	9f c0 00 01 	l.addi r30,r0,0x1
static void FakeRDB(int unit,int block)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

	int i;
	DebugMessage("Clearing sector buffer");
  40b078:	a8 42 a4 dc 	l.ori r2,r2,0xa4dc
							FakeRDB(unit,lba);

							WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
				            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type
				            EnableFpga();
				            SPI(CMD_IDE_DATA_WR); // write data command
  40b07c:	aa 10 00 24 	l.ori r16,r16,0x24
				        HardFileSeek(&hdf[unit], (lba+hdf[unit].offset) < 0 ? 0 : lba+hdf[unit].offset);

				    while (sector_count)
				    {
//				 decrease sector count
						if(sector_count!=1)
  40b080:	bc 1a 00 01 	l.sfeqi r26,0x1
  40b084:	10 00 00 16 	l.bf 40b0dc <HandleHDD.clone.1+0x744>
  40b088:	a8 6e 00 00 	l.ori r3,r14,0x0
						{
							if (sector == hdf[unit].sectors)
  40b08c:	07 ff d3 f7 	l.jal 400068 <__mulsi3>
  40b090:	9c 80 11 44 	l.addi r4,r0,0x1144
  40b094:	18 60 00 41 	l.movhi r3,0x41
  40b098:	a8 63 a8 f8 	l.ori r3,r3,0xa8f8
  40b09c:	e1 6b 18 00 	l.add r11,r11,r3
  40b0a0:	94 6b 01 34 	l.lhz r3,0x134(r11)
  40b0a4:	e4 23 c0 00 	l.sfne r3,r24
  40b0a8:	10 00 00 0c 	l.bf 40b0d8 <HandleHDD.clone.1+0x740>
  40b0ac:	9f 18 00 01 	l.addi r24,r24,0x1
							{
								sector = 1;
								head++;
  40b0b0:	9e 52 00 01 	l.addi r18,r18,0x1
								if (head == hdf[unit].heads)
  40b0b4:	94 6b 01 32 	l.lhz r3,0x132(r11)
						if(sector_count!=1)
						{
							if (sector == hdf[unit].sectors)
							{
								sector = 1;
								head++;
  40b0b8:	a6 52 00 ff 	l.andi r18,r18,0xff
								if (head == hdf[unit].heads)
  40b0bc:	e4 23 90 00 	l.sfne r3,r18
  40b0c0:	10 00 00 07 	l.bf 40b0dc <HandleHDD.clone.1+0x744>
  40b0c4:	9f 00 00 01 	l.addi r24,r0,0x1
								{
									head = 0;
									cylinder++;
  40b0c8:	e2 d6 c0 00 	l.add r22,r22,r24
							{
								sector = 1;
								head++;
								if (head == hdf[unit].heads)
								{
									head = 0;
  40b0cc:	9e 40 00 00 	l.addi r18,r0,0x0
									cylinder++;
  40b0d0:	00 00 00 03 	l.j 40b0dc <HandleHDD.clone.1+0x744>
  40b0d4:	a6 d6 ff ff 	l.andi r22,r22,0xffff
								}
							}
							else
								sector++;
  40b0d8:	a7 18 ff ff 	l.andi r24,r24,0xffff
						}
			
						if((lba+hdf[unit].offset)<0)
  40b0dc:	a8 6e 00 00 	l.ori r3,r14,0x0
  40b0e0:	07 ff d3 e2 	l.jal 400068 <__mulsi3>
  40b0e4:	9c 80 11 44 	l.addi r4,r0,0x1144
  40b0e8:	18 80 00 41 	l.movhi r4,0x41
  40b0ec:	a8 84 a8 f8 	l.ori r4,r4,0xa8f8
  40b0f0:	e1 6b 20 00 	l.add r11,r11,r4
  40b0f4:	84 6b 01 3c 	l.lwz r3,0x13c(r11)
  40b0f8:	e0 74 18 00 	l.add r3,r20,r3
  40b0fc:	bd 63 00 00 	l.sfgesi r3,0x0
  40b100:	10 00 00 d0 	l.bf 40b440 <HandleHDD.clone.1+0xaa8>
  40b104:	18 a0 00 41 	l.movhi r5,0x41
						{
							DEBUG2("RDB %ld",lba);
  40b108:	a8 a5 a3 50 	l.ori r5,r5,0xa350
  40b10c:	90 65 00 00 	l.lbs r3,0x0(r5)
  40b110:	bc 03 00 00 	l.sfeqi r3,0x0
  40b114:	10 00 00 0a 	l.bf 40b13c <HandleHDD.clone.1+0x7a4>
  40b118:	18 80 00 41 	l.movhi r4,0x41
  40b11c:	18 60 00 41 	l.movhi r3,0x41
  40b120:	a8 63 a3 60 	l.ori r3,r3,0xa360
  40b124:	a8 84 81 51 	l.ori r4,r4,0x8151
  40b128:	07 ff e4 d7 	l.jal 404484 <sprintf>
  40b12c:	d4 01 a0 00 	l.sw 0x0(r1),r20
  40b130:	18 60 00 41 	l.movhi r3,0x41
  40b134:	07 ff e0 02 	l.jal 40313c <DebugMessage>
  40b138:	a8 63 a3 60 	l.ori r3,r3,0xa360
static void FakeRDB(int unit,int block)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

	int i;
	DebugMessage("Clearing sector buffer");
  40b13c:	18 60 00 41 	l.movhi r3,0x41
  40b140:	07 ff df ff 	l.jal 40313c <DebugMessage>
  40b144:	a8 63 81 59 	l.ori r3,r3,0x8159
  40b148:	19 60 00 41 	l.movhi r11,0x41
  40b14c:	a9 6b a4 dc 	l.ori r11,r11,0xa4dc
  40b150:	d4 01 58 04 	l.sw 0x4(r1),r11

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


void HandleHDD(unsigned char c1, unsigned char c2)
  40b154:	ab 8b 00 00 	l.ori r28,r11,0x0

	int i;
	DebugMessage("Clearing sector buffer");
	// Start by clearing the sector buffer
	for(i=0;i<512;++i)
		sector_buffer[i]=0;
  40b158:	9c 60 00 00 	l.addi r3,r0,0x0
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

	int i;
	DebugMessage("Clearing sector buffer");
	// Start by clearing the sector buffer
	for(i=0;i<512;++i)
  40b15c:	18 80 00 41 	l.movhi r4,0x41
		sector_buffer[i]=0;
  40b160:	d8 1c 18 00 	l.sb 0x0(r28),r3
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

	int i;
	DebugMessage("Clearing sector buffer");
	// Start by clearing the sector buffer
	for(i=0;i<512;++i)
  40b164:	a8 84 a6 dc 	l.ori r4,r4,0xa6dc
		sector_buffer[i]=0;
  40b168:	9f 9c 00 01 	l.addi r28,r28,0x1
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

	int i;
	DebugMessage("Clearing sector buffer");
	// Start by clearing the sector buffer
	for(i=0;i<512;++i)
  40b16c:	e4 3c 20 00 	l.sfne r28,r4
  40b170:	13 ff ff fb 	l.bf 40b15c <HandleHDD.clone.1+0x7c4>
  40b174:	bc 14 00 00 	l.sfeqi r20,0x0
		sector_buffer[i]=0;

	// If we're asked for LBA 0 we create an RDSK block, and if LBA 1, a PART block.
	switch(block)
  40b178:	10 00 00 06 	l.bf 40b190 <HandleHDD.clone.1+0x7f8>
  40b17c:	bc 14 00 01 	l.sfeqi r20,0x1
  40b180:	0c 00 00 7b 	l.bnf 40b36c <HandleHDD.clone.1+0x9d4>
  40b184:	15 00 00 00 	l.nop 0x0
			}
			break;
		case 1: // Partition
			{
				struct PartitionBlock *pb=(struct PartitionBlock *)sector_buffer;
				DebugMessage("Creating RDB...");
  40b188:	00 00 00 41 	l.j 40b28c <HandleHDD.clone.1+0x8f4>
  40b18c:	18 60 00 41 	l.movhi r3,0x41
	switch(block)
	{
		case 0: // RDB
			{
				struct RigidDiskBlock *rdb=(struct RigidDiskBlock *)sector_buffer;
				DebugMessage("Creating RDB...");
  40b190:	18 60 00 41 	l.movhi r3,0x41
  40b194:	07 ff df ea 	l.jal 40313c <DebugMessage>
  40b198:	a8 63 81 70 	l.ori r3,r3,0x8170
				rdb->rdb_ID = 'R'<<24 | 'D' << 16 | 'S' << 8 | 'K';
				
				rdb->rdb_Summedlongs=0x40;
  40b19c:	9c 60 00 40 	l.addi r3,r0,0x40
	{
		case 0: // RDB
			{
				struct RigidDiskBlock *rdb=(struct RigidDiskBlock *)sector_buffer;
				DebugMessage("Creating RDB...");
				rdb->rdb_ID = 'R'<<24 | 'D' << 16 | 'S' << 8 | 'K';
  40b1a0:	18 a0 52 44 	l.movhi r5,0x5244
				
				rdb->rdb_Summedlongs=0x40;
  40b1a4:	d4 02 18 04 	l.sw 0x4(r2),r3
				rdb->rdb_HostID=0x07;
  40b1a8:	9c 60 00 07 	l.addi r3,r0,0x7
				rdb->rdb_BlockBytes=0x200;
				rdb->rdb_Flags=0x12; // (Disk ID valid, no LUNs after this one)
				rdb->rdb_BadBlockList=0xffffffff; // We don't provide a bad block list
  40b1ac:	9c 80 ff ff 	l.addi r4,r0,0xffffffff
				struct RigidDiskBlock *rdb=(struct RigidDiskBlock *)sector_buffer;
				DebugMessage("Creating RDB...");
				rdb->rdb_ID = 'R'<<24 | 'D' << 16 | 'S' << 8 | 'K';
				
				rdb->rdb_Summedlongs=0x40;
				rdb->rdb_HostID=0x07;
  40b1b0:	d4 02 18 0c 	l.sw 0xc(r2),r3
				rdb->rdb_BlockBytes=0x200;
  40b1b4:	9c 60 02 00 	l.addi r3,r0,0x200
	{
		case 0: // RDB
			{
				struct RigidDiskBlock *rdb=(struct RigidDiskBlock *)sector_buffer;
				DebugMessage("Creating RDB...");
				rdb->rdb_ID = 'R'<<24 | 'D' << 16 | 'S' << 8 | 'K';
  40b1b8:	a8 a5 53 4b 	l.ori r5,r5,0x534b
				
				rdb->rdb_Summedlongs=0x40;
				rdb->rdb_HostID=0x07;
				rdb->rdb_BlockBytes=0x200;
  40b1bc:	d4 02 18 10 	l.sw 0x10(r2),r3
				rdb->rdb_Flags=0x12; // (Disk ID valid, no LUNs after this one)
  40b1c0:	9c 60 00 12 	l.addi r3,r0,0x12
	{
		case 0: // RDB
			{
				struct RigidDiskBlock *rdb=(struct RigidDiskBlock *)sector_buffer;
				DebugMessage("Creating RDB...");
				rdb->rdb_ID = 'R'<<24 | 'D' << 16 | 'S' << 8 | 'K';
  40b1c4:	d4 02 28 00 	l.sw 0x0(r2),r5
				
				rdb->rdb_Summedlongs=0x40;
				rdb->rdb_HostID=0x07;
				rdb->rdb_BlockBytes=0x200;
				rdb->rdb_Flags=0x12; // (Disk ID valid, no LUNs after this one)
  40b1c8:	d4 02 18 14 	l.sw 0x14(r2),r3
				rdb->rdb_BadBlockList=0xffffffff; // We don't provide a bad block list
  40b1cc:	d4 02 20 18 	l.sw 0x18(r2),r4
				rdb->rdb_PartitionList=1;
				rdb->rdb_FileSysHeaderList=0xffffffff;
  40b1d0:	d4 02 20 20 	l.sw 0x20(r2),r4
				rdb->rdb_DriveInit=0xffffffff;
  40b1d4:	d4 02 20 24 	l.sw 0x24(r2),r4
				rdb->rdb_Reserved1[0]=0xffffffff;
  40b1d8:	d4 02 20 28 	l.sw 0x28(r2),r4
				rdb->rdb_Reserved1[1]=0xffffffff;
  40b1dc:	d4 02 20 2c 	l.sw 0x2c(r2),r4
				rdb->rdb_Reserved1[2]=0xffffffff;
  40b1e0:	d4 02 20 30 	l.sw 0x30(r2),r4
				rdb->rdb_Reserved1[3]=0xffffffff;
  40b1e4:	d4 02 20 34 	l.sw 0x34(r2),r4
				rdb->rdb_Reserved1[4]=0xffffffff;
  40b1e8:	d4 02 20 38 	l.sw 0x38(r2),r4
				rdb->rdb_Reserved1[5]=0xffffffff;
  40b1ec:	d4 02 20 3c 	l.sw 0x3c(r2),r4
				rdb->rdb_Cylinders=hdf[unit].cylinders;
  40b1f0:	a8 6e 00 00 	l.ori r3,r14,0x0
				rdb->rdb_Summedlongs=0x40;
				rdb->rdb_HostID=0x07;
				rdb->rdb_BlockBytes=0x200;
				rdb->rdb_Flags=0x12; // (Disk ID valid, no LUNs after this one)
				rdb->rdb_BadBlockList=0xffffffff; // We don't provide a bad block list
				rdb->rdb_PartitionList=1;
  40b1f4:	d4 02 f0 1c 	l.sw 0x1c(r2),r30
				rdb->rdb_Reserved1[1]=0xffffffff;
				rdb->rdb_Reserved1[2]=0xffffffff;
				rdb->rdb_Reserved1[3]=0xffffffff;
				rdb->rdb_Reserved1[4]=0xffffffff;
				rdb->rdb_Reserved1[5]=0xffffffff;
				rdb->rdb_Cylinders=hdf[unit].cylinders;
  40b1f8:	07 ff d3 9c 	l.jal 400068 <__mulsi3>
  40b1fc:	9c 80 11 44 	l.addi r4,r0,0x1144
  40b200:	18 60 00 41 	l.movhi r3,0x41
				rdb->rdb_Heads=hdf[unit].heads;
				rdb->rdb_Interleave=1;
				rdb->rdb_Park=rdb->rdb_Cylinders;
				rdb->rdb_WritePreComp=rdb->rdb_Cylinders;
				rdb->rdb_ReducedWrite=rdb->rdb_Cylinders;
				rdb->rdb_StepRate=3;
  40b204:	9c c0 00 03 	l.addi r6,r0,0x3
				rdb->rdb_Reserved1[1]=0xffffffff;
				rdb->rdb_Reserved1[2]=0xffffffff;
				rdb->rdb_Reserved1[3]=0xffffffff;
				rdb->rdb_Reserved1[4]=0xffffffff;
				rdb->rdb_Reserved1[5]=0xffffffff;
				rdb->rdb_Cylinders=hdf[unit].cylinders;
  40b208:	a8 63 a8 f8 	l.ori r3,r3,0xa8f8
				rdb->rdb_Heads=hdf[unit].heads;
				rdb->rdb_Interleave=1;
				rdb->rdb_Park=rdb->rdb_Cylinders;
				rdb->rdb_WritePreComp=rdb->rdb_Cylinders;
				rdb->rdb_ReducedWrite=rdb->rdb_Cylinders;
				rdb->rdb_StepRate=3;
  40b20c:	d4 02 30 68 	l.sw 0x68(r2),r6
				rdb->rdb_Reserved1[1]=0xffffffff;
				rdb->rdb_Reserved1[2]=0xffffffff;
				rdb->rdb_Reserved1[3]=0xffffffff;
				rdb->rdb_Reserved1[4]=0xffffffff;
				rdb->rdb_Reserved1[5]=0xffffffff;
				rdb->rdb_Cylinders=hdf[unit].cylinders;
  40b210:	e1 6b 18 00 	l.add r11,r11,r3
				rdb->rdb_Sectors=hdf[unit].sectors;
				rdb->rdb_Heads=hdf[unit].heads;
				rdb->rdb_Interleave=1;
  40b214:	d4 02 f0 4c 	l.sw 0x4c(r2),r30
				rdb->rdb_Reserved1[1]=0xffffffff;
				rdb->rdb_Reserved1[2]=0xffffffff;
				rdb->rdb_Reserved1[3]=0xffffffff;
				rdb->rdb_Reserved1[4]=0xffffffff;
				rdb->rdb_Reserved1[5]=0xffffffff;
				rdb->rdb_Cylinders=hdf[unit].cylinders;
  40b218:	9c 6b 01 30 	l.addi r3,r11,0x130
				rdb->rdb_Sectors=hdf[unit].sectors;
  40b21c:	94 8b 01 34 	l.lhz r4,0x134(r11)
				rdb->rdb_Reserved1[1]=0xffffffff;
				rdb->rdb_Reserved1[2]=0xffffffff;
				rdb->rdb_Reserved1[3]=0xffffffff;
				rdb->rdb_Reserved1[4]=0xffffffff;
				rdb->rdb_Reserved1[5]=0xffffffff;
				rdb->rdb_Cylinders=hdf[unit].cylinders;
  40b220:	94 a3 00 00 	l.lhz r5,0x0(r3)
				rdb->rdb_Sectors=hdf[unit].sectors;
				rdb->rdb_Heads=hdf[unit].heads;
  40b224:	94 63 00 02 	l.lhz r3,0x2(r3)
				rdb->rdb_Reserved1[1]=0xffffffff;
				rdb->rdb_Reserved1[2]=0xffffffff;
				rdb->rdb_Reserved1[3]=0xffffffff;
				rdb->rdb_Reserved1[4]=0xffffffff;
				rdb->rdb_Reserved1[5]=0xffffffff;
				rdb->rdb_Cylinders=hdf[unit].cylinders;
  40b228:	d4 02 28 40 	l.sw 0x40(r2),r5
				rdb->rdb_Sectors=hdf[unit].sectors;
				rdb->rdb_Heads=hdf[unit].heads;
				rdb->rdb_Interleave=1;
				rdb->rdb_Park=rdb->rdb_Cylinders;
  40b22c:	d4 02 28 50 	l.sw 0x50(r2),r5
				rdb->rdb_WritePreComp=rdb->rdb_Cylinders;
  40b230:	d4 02 28 60 	l.sw 0x60(r2),r5
				rdb->rdb_ReducedWrite=rdb->rdb_Cylinders;
  40b234:	d4 02 28 64 	l.sw 0x64(r2),r5
				rdb->rdb_StepRate=3;
				rdb->rdb_RDBBlocksLo=0;
				rdb->rdb_RDBBlocksHi=1;
				rdb->rdb_LoCylinder=1;
				rdb->rdb_HiCylinder=rdb->rdb_Cylinders-1;
  40b238:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
				rdb->rdb_Reserved1[2]=0xffffffff;
				rdb->rdb_Reserved1[3]=0xffffffff;
				rdb->rdb_Reserved1[4]=0xffffffff;
				rdb->rdb_Reserved1[5]=0xffffffff;
				rdb->rdb_Cylinders=hdf[unit].cylinders;
				rdb->rdb_Sectors=hdf[unit].sectors;
  40b23c:	d4 02 20 44 	l.sw 0x44(r2),r4
				rdb->rdb_Heads=hdf[unit].heads;
  40b240:	d4 02 18 48 	l.sw 0x48(r2),r3
				rdb->rdb_ReducedWrite=rdb->rdb_Cylinders;
				rdb->rdb_StepRate=3;
				rdb->rdb_RDBBlocksLo=0;
				rdb->rdb_RDBBlocksHi=1;
				rdb->rdb_LoCylinder=1;
				rdb->rdb_HiCylinder=rdb->rdb_Cylinders-1;
  40b244:	d4 02 28 8c 	l.sw 0x8c(r2),r5
				rdb->rdb_Interleave=1;
				rdb->rdb_Park=rdb->rdb_Cylinders;
				rdb->rdb_WritePreComp=rdb->rdb_Cylinders;
				rdb->rdb_ReducedWrite=rdb->rdb_Cylinders;
				rdb->rdb_StepRate=3;
				rdb->rdb_RDBBlocksLo=0;
  40b248:	d4 02 a0 80 	l.sw 0x80(r2),r20
				rdb->rdb_RDBBlocksHi=1;
  40b24c:	d4 02 f0 84 	l.sw 0x84(r2),r30
				rdb->rdb_LoCylinder=1;
				rdb->rdb_HiCylinder=rdb->rdb_Cylinders-1;
				rdb->rdb_CylBlocks=rdb->rdb_Heads * rdb->rdb_Sectors;
  40b250:	07 ff d3 86 	l.jal 400068 <__mulsi3>
  40b254:	d4 02 f0 88 	l.sw 0x88(r2),r30
				rdb->rdb_AutoParkSeconds=0;
				rdb->rdb_HighRDSKBlock=1;
				strcpy(rdb->rdb_DiskVendor,"Do not ");
  40b258:	18 80 00 41 	l.movhi r4,0x41
  40b25c:	9c 7c fe a0 	l.addi r3,r28,0xfffffea0
				rdb->rdb_StepRate=3;
				rdb->rdb_RDBBlocksLo=0;
				rdb->rdb_RDBBlocksHi=1;
				rdb->rdb_LoCylinder=1;
				rdb->rdb_HiCylinder=rdb->rdb_Cylinders-1;
				rdb->rdb_CylBlocks=rdb->rdb_Heads * rdb->rdb_Sectors;
  40b260:	d4 02 58 90 	l.sw 0x90(r2),r11
				rdb->rdb_AutoParkSeconds=0;
  40b264:	d4 02 a0 94 	l.sw 0x94(r2),r20
				rdb->rdb_HighRDSKBlock=1;
  40b268:	d4 02 f0 98 	l.sw 0x98(r2),r30
				strcpy(rdb->rdb_DiskVendor,"Do not ");
  40b26c:	07 ff d4 18 	l.jal 4002cc <strcpy>
  40b270:	a8 84 81 80 	l.ori r4,r4,0x8180
				strcpy(rdb->rdb_DiskProduct, "repartition!");
  40b274:	18 80 00 41 	l.movhi r4,0x41
  40b278:	9c 7c fe a8 	l.addi r3,r28,0xfffffea8
  40b27c:	07 ff d4 14 	l.jal 4002cc <strcpy>
  40b280:	a8 84 81 88 	l.ori r4,r4,0x8188
				pb->pb_Environment.de_NumBuffers=30;
				pb->pb_Environment.de_MaxTransfer=0xffffff;
				pb->pb_Environment.de_Mask=0x7ffffffe;
				pb->pb_Environment.de_DosType=0x444f5301;

				RDBChecksum((unsigned long *)pb);
  40b284:	00 00 00 38 	l.j 40b364 <HandleHDD.clone.1+0x9cc>
  40b288:	18 60 00 41 	l.movhi r3,0x41
			}
			break;
		case 1: // Partition
			{
				struct PartitionBlock *pb=(struct PartitionBlock *)sector_buffer;
				DebugMessage("Creating RDB...");
  40b28c:	07 ff df ac 	l.jal 40313c <DebugMessage>
  40b290:	a8 63 81 70 	l.ori r3,r3,0x8170
				pb->pb_ID = 'P'<<24 | 'A' << 16 | 'R' << 8 | 'T';
			
				pb->pb_Summedlongs=0x40;
  40b294:	9c 60 00 40 	l.addi r3,r0,0x40
			break;
		case 1: // Partition
			{
				struct PartitionBlock *pb=(struct PartitionBlock *)sector_buffer;
				DebugMessage("Creating RDB...");
				pb->pb_ID = 'P'<<24 | 'A' << 16 | 'R' << 8 | 'T';
  40b298:	18 80 50 41 	l.movhi r4,0x5041
			
				pb->pb_Summedlongs=0x40;
  40b29c:	d4 02 18 04 	l.sw 0x4(r2),r3
			break;
		case 1: // Partition
			{
				struct PartitionBlock *pb=(struct PartitionBlock *)sector_buffer;
				DebugMessage("Creating RDB...");
				pb->pb_ID = 'P'<<24 | 'A' << 16 | 'R' << 8 | 'T';
  40b2a0:	a8 84 52 54 	l.ori r4,r4,0x5254
			
				pb->pb_Summedlongs=0x40;
				pb->pb_HostID=0x07;
  40b2a4:	9c 60 00 07 	l.addi r3,r0,0x7
				pb->pb_Next=0xffffffff;
				pb->pb_Flags=0x1; // Bootable
				pb->pb_DevFlags=0;
  40b2a8:	9c a0 00 00 	l.addi r5,r0,0x0
			break;
		case 1: // Partition
			{
				struct PartitionBlock *pb=(struct PartitionBlock *)sector_buffer;
				DebugMessage("Creating RDB...");
				pb->pb_ID = 'P'<<24 | 'A' << 16 | 'R' << 8 | 'T';
  40b2ac:	d4 02 20 00 	l.sw 0x0(r2),r4
			
				pb->pb_Summedlongs=0x40;
				pb->pb_HostID=0x07;
  40b2b0:	d4 02 18 0c 	l.sw 0xc(r2),r3
				pb->pb_Next=0xffffffff;
				pb->pb_Flags=0x1; // Bootable
				pb->pb_DevFlags=0;
				strcpy(pb->pb_DriveName," DH0");
  40b2b4:	18 80 00 41 	l.movhi r4,0x41
				DebugMessage("Creating RDB...");
				pb->pb_ID = 'P'<<24 | 'A' << 16 | 'R' << 8 | 'T';
			
				pb->pb_Summedlongs=0x40;
				pb->pb_HostID=0x07;
				pb->pb_Next=0xffffffff;
  40b2b8:	9c 60 ff ff 	l.addi r3,r0,0xffffffff
				pb->pb_Flags=0x1; // Bootable
				pb->pb_DevFlags=0;
  40b2bc:	d4 02 28 20 	l.sw 0x20(r2),r5
				DebugMessage("Creating RDB...");
				pb->pb_ID = 'P'<<24 | 'A' << 16 | 'R' << 8 | 'T';
			
				pb->pb_Summedlongs=0x40;
				pb->pb_HostID=0x07;
				pb->pb_Next=0xffffffff;
  40b2c0:	d4 02 18 10 	l.sw 0x10(r2),r3
				pb->pb_Flags=0x1; // Bootable
				pb->pb_DevFlags=0;
				strcpy(pb->pb_DriveName," DH0");
  40b2c4:	a8 84 81 95 	l.ori r4,r4,0x8195
  40b2c8:	9c 7c fe 24 	l.addi r3,r28,0xfffffe24
  40b2cc:	07 ff d4 00 	l.jal 4002cc <strcpy>
  40b2d0:	d4 02 a0 14 	l.sw 0x14(r2),r20
				pb->pb_DriveName[0]=3;	// BCPL string

				pb->pb_Environment.de_TableSize=0x10;
  40b2d4:	9c 60 00 10 	l.addi r3,r0,0x10
				pb->pb_HostID=0x07;
				pb->pb_Next=0xffffffff;
				pb->pb_Flags=0x1; // Bootable
				pb->pb_DevFlags=0;
				strcpy(pb->pb_DriveName," DH0");
				pb->pb_DriveName[0]=3;	// BCPL string
  40b2d8:	9d 60 00 03 	l.addi r11,r0,0x3

				pb->pb_Environment.de_TableSize=0x10;
  40b2dc:	d4 02 18 80 	l.sw 0x80(r2),r3
				pb->pb_Environment.de_SizeBlock=0x80;
  40b2e0:	9c 60 00 80 	l.addi r3,r0,0x80
				pb->pb_Environment.de_Surfaces=hdf[unit].heads;
  40b2e4:	9c 80 11 44 	l.addi r4,r0,0x1144
				pb->pb_DevFlags=0;
				strcpy(pb->pb_DriveName," DH0");
				pb->pb_DriveName[0]=3;	// BCPL string

				pb->pb_Environment.de_TableSize=0x10;
				pb->pb_Environment.de_SizeBlock=0x80;
  40b2e8:	d4 02 18 84 	l.sw 0x84(r2),r3
				pb->pb_HostID=0x07;
				pb->pb_Next=0xffffffff;
				pb->pb_Flags=0x1; // Bootable
				pb->pb_DevFlags=0;
				strcpy(pb->pb_DriveName," DH0");
				pb->pb_DriveName[0]=3;	// BCPL string
  40b2ec:	d8 02 58 24 	l.sb 0x24(r2),r11

				pb->pb_Environment.de_TableSize=0x10;
				pb->pb_Environment.de_SizeBlock=0x80;
				pb->pb_Environment.de_Surfaces=hdf[unit].heads;
  40b2f0:	07 ff d3 5e 	l.jal 400068 <__mulsi3>
  40b2f4:	a8 6e 00 00 	l.ori r3,r14,0x0
  40b2f8:	18 60 00 41 	l.movhi r3,0x41
				pb->pb_Environment.de_Reserved=2;
				pb->pb_Environment.de_LowCyl=1;
				pb->pb_Environment.de_HighCyl=hdf[unit].cylinders-1;
				pb->pb_Environment.de_NumBuffers=30;
				pb->pb_Environment.de_MaxTransfer=0xffffff;
				pb->pb_Environment.de_Mask=0x7ffffffe;
  40b2fc:	18 a0 7f ff 	l.movhi r5,0x7fff
				strcpy(pb->pb_DriveName," DH0");
				pb->pb_DriveName[0]=3;	// BCPL string

				pb->pb_Environment.de_TableSize=0x10;
				pb->pb_Environment.de_SizeBlock=0x80;
				pb->pb_Environment.de_Surfaces=hdf[unit].heads;
  40b300:	a8 63 a8 f8 	l.ori r3,r3,0xa8f8
				pb->pb_Environment.de_Reserved=2;
				pb->pb_Environment.de_LowCyl=1;
				pb->pb_Environment.de_HighCyl=hdf[unit].cylinders-1;
				pb->pb_Environment.de_NumBuffers=30;
				pb->pb_Environment.de_MaxTransfer=0xffffff;
				pb->pb_Environment.de_Mask=0x7ffffffe;
  40b304:	a8 a5 ff fe 	l.ori r5,r5,0xfffe
				strcpy(pb->pb_DriveName," DH0");
				pb->pb_DriveName[0]=3;	// BCPL string

				pb->pb_Environment.de_TableSize=0x10;
				pb->pb_Environment.de_SizeBlock=0x80;
				pb->pb_Environment.de_Surfaces=hdf[unit].heads;
  40b308:	e1 6b 18 00 	l.add r11,r11,r3
				pb->pb_Environment.de_SectorPerBlock=1;
  40b30c:	d4 02 a0 90 	l.sw 0x90(r2),r20
				strcpy(pb->pb_DriveName," DH0");
				pb->pb_DriveName[0]=3;	// BCPL string

				pb->pb_Environment.de_TableSize=0x10;
				pb->pb_Environment.de_SizeBlock=0x80;
				pb->pb_Environment.de_Surfaces=hdf[unit].heads;
  40b310:	9c 6b 01 30 	l.addi r3,r11,0x130
				pb->pb_Environment.de_SectorPerBlock=1;
				pb->pb_Environment.de_BlocksPerTrack=hdf[unit].sectors;
				pb->pb_Environment.de_Reserved=2;
				pb->pb_Environment.de_LowCyl=1;
  40b314:	d4 02 a0 a4 	l.sw 0xa4(r2),r20
				strcpy(pb->pb_DriveName," DH0");
				pb->pb_DriveName[0]=3;	// BCPL string

				pb->pb_Environment.de_TableSize=0x10;
				pb->pb_Environment.de_SizeBlock=0x80;
				pb->pb_Environment.de_Surfaces=hdf[unit].heads;
  40b318:	94 83 00 02 	l.lhz r4,0x2(r3)
  40b31c:	d4 02 20 8c 	l.sw 0x8c(r2),r4
				pb->pb_Environment.de_SectorPerBlock=1;
				pb->pb_Environment.de_BlocksPerTrack=hdf[unit].sectors;
  40b320:	94 8b 01 34 	l.lhz r4,0x134(r11)
				pb->pb_Environment.de_Reserved=2;
				pb->pb_Environment.de_LowCyl=1;
				pb->pb_Environment.de_HighCyl=hdf[unit].cylinders-1;
  40b324:	94 63 00 00 	l.lhz r3,0x0(r3)

				pb->pb_Environment.de_TableSize=0x10;
				pb->pb_Environment.de_SizeBlock=0x80;
				pb->pb_Environment.de_Surfaces=hdf[unit].heads;
				pb->pb_Environment.de_SectorPerBlock=1;
				pb->pb_Environment.de_BlocksPerTrack=hdf[unit].sectors;
  40b328:	d4 02 20 94 	l.sw 0x94(r2),r4
				pb->pb_Environment.de_Reserved=2;
  40b32c:	9c 80 00 02 	l.addi r4,r0,0x2
				pb->pb_Environment.de_LowCyl=1;
				pb->pb_Environment.de_HighCyl=hdf[unit].cylinders-1;
  40b330:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
				pb->pb_Environment.de_TableSize=0x10;
				pb->pb_Environment.de_SizeBlock=0x80;
				pb->pb_Environment.de_Surfaces=hdf[unit].heads;
				pb->pb_Environment.de_SectorPerBlock=1;
				pb->pb_Environment.de_BlocksPerTrack=hdf[unit].sectors;
				pb->pb_Environment.de_Reserved=2;
  40b334:	d4 02 20 98 	l.sw 0x98(r2),r4
				pb->pb_Environment.de_LowCyl=1;
				pb->pb_Environment.de_HighCyl=hdf[unit].cylinders-1;
				pb->pb_Environment.de_NumBuffers=30;
				pb->pb_Environment.de_MaxTransfer=0xffffff;
				pb->pb_Environment.de_Mask=0x7ffffffe;
				pb->pb_Environment.de_DosType=0x444f5301;
  40b338:	19 60 44 4f 	l.movhi r11,0x444f
				pb->pb_Environment.de_BlocksPerTrack=hdf[unit].sectors;
				pb->pb_Environment.de_Reserved=2;
				pb->pb_Environment.de_LowCyl=1;
				pb->pb_Environment.de_HighCyl=hdf[unit].cylinders-1;
				pb->pb_Environment.de_NumBuffers=30;
				pb->pb_Environment.de_MaxTransfer=0xffffff;
  40b33c:	18 80 00 ff 	l.movhi r4,0xff
				pb->pb_Environment.de_Surfaces=hdf[unit].heads;
				pb->pb_Environment.de_SectorPerBlock=1;
				pb->pb_Environment.de_BlocksPerTrack=hdf[unit].sectors;
				pb->pb_Environment.de_Reserved=2;
				pb->pb_Environment.de_LowCyl=1;
				pb->pb_Environment.de_HighCyl=hdf[unit].cylinders-1;
  40b340:	d4 02 18 a8 	l.sw 0xa8(r2),r3
				pb->pb_Environment.de_NumBuffers=30;
				pb->pb_Environment.de_MaxTransfer=0xffffff;
  40b344:	a8 84 ff ff 	l.ori r4,r4,0xffff
				pb->pb_Environment.de_SectorPerBlock=1;
				pb->pb_Environment.de_BlocksPerTrack=hdf[unit].sectors;
				pb->pb_Environment.de_Reserved=2;
				pb->pb_Environment.de_LowCyl=1;
				pb->pb_Environment.de_HighCyl=hdf[unit].cylinders-1;
				pb->pb_Environment.de_NumBuffers=30;
  40b348:	9c 60 00 1e 	l.addi r3,r0,0x1e
				pb->pb_Environment.de_MaxTransfer=0xffffff;
				pb->pb_Environment.de_Mask=0x7ffffffe;
				pb->pb_Environment.de_DosType=0x444f5301;
  40b34c:	a9 6b 53 01 	l.ori r11,r11,0x5301
				pb->pb_Environment.de_SectorPerBlock=1;
				pb->pb_Environment.de_BlocksPerTrack=hdf[unit].sectors;
				pb->pb_Environment.de_Reserved=2;
				pb->pb_Environment.de_LowCyl=1;
				pb->pb_Environment.de_HighCyl=hdf[unit].cylinders-1;
				pb->pb_Environment.de_NumBuffers=30;
  40b350:	d4 02 18 ac 	l.sw 0xac(r2),r3
				pb->pb_Environment.de_MaxTransfer=0xffffff;
  40b354:	d4 02 20 b4 	l.sw 0xb4(r2),r4
				pb->pb_Environment.de_Mask=0x7ffffffe;
  40b358:	d4 02 28 b8 	l.sw 0xb8(r2),r5
				pb->pb_Environment.de_DosType=0x444f5301;
  40b35c:	d4 02 58 c0 	l.sw 0xc0(r2),r11

				RDBChecksum((unsigned long *)pb);
  40b360:	18 60 00 41 	l.movhi r3,0x41
  40b364:	07 ff df 91 	l.jal 4031a8 <RDBChecksum.33881>
  40b368:	a8 63 a4 dc 	l.ori r3,r3,0xa4dc
						{
							DEBUG2("RDB %ld",lba);

							FakeRDB(unit,lba);

							WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
  40b36c:	8d 01 02 0e 	l.lbz r8,0x20e(r1)
  40b370:	9c 60 ff f0 	l.addi r3,r0,0xfffffff0
  40b374:	8c 81 02 0a 	l.lbz r4,0x20a(r1)
  40b378:	e1 08 18 03 	l.and r8,r8,r3
  40b37c:	b8 f6 00 48 	l.srli r7,r22,0x8
  40b380:	a4 b8 00 ff 	l.andi r5,r24,0xff
  40b384:	9c 60 00 00 	l.addi r3,r0,0x0
  40b388:	a4 d6 00 ff 	l.andi r6,r22,0xff
  40b38c:	07 ff de c7 	l.jal 402ea8 <WriteTaskFile>
  40b390:	e1 12 40 04 	l.or r8,r18,r8
				            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type
  40b394:	07 ff de fb 	l.jal 402f80 <WriteStatus>
  40b398:	9c 60 00 08 	l.addi r3,r0,0x8
				            EnableFpga();
  40b39c:	18 80 00 80 	l.movhi r4,0x80
  40b3a0:	9c a0 00 22 	l.addi r5,r0,0x22
  40b3a4:	a8 84 00 20 	l.ori r4,r4,0x20
				            SPI(CMD_IDE_DATA_WR); // write data command
  40b3a8:	9d 60 00 a0 	l.addi r11,r0,0xa0

							FakeRDB(unit,lba);

							WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
				            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type
				            EnableFpga();
  40b3ac:	d4 04 28 00 	l.sw 0x0(r4),r5
				            SPI(CMD_IDE_DATA_WR); // write data command
  40b3b0:	d4 10 58 00 	l.sw 0x0(r16),r11
				            SPI(0x00);
				            SPI(0x00);
  40b3b4:	9c 80 00 00 	l.addi r4,r0,0x0
							FakeRDB(unit,lba);

							WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
				            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type
				            EnableFpga();
				            SPI(CMD_IDE_DATA_WR); // write data command
  40b3b8:	84 70 00 00 	l.lwz r3,0x0(r16)
				            SPI(0x00);
  40b3bc:	9c 60 00 00 	l.addi r3,r0,0x0
  40b3c0:	d4 10 18 00 	l.sw 0x0(r16),r3
  40b3c4:	84 70 00 00 	l.lwz r3,0x0(r16)
				            SPI(0x00);
  40b3c8:	d4 10 20 00 	l.sw 0x0(r16),r4
  40b3cc:	84 70 00 00 	l.lwz r3,0x0(r16)
				            SPI(0x00);
  40b3d0:	d4 10 20 00 	l.sw 0x0(r16),r4
  40b3d4:	84 70 00 00 	l.lwz r3,0x0(r16)
				            SPI(0x00);
  40b3d8:	d4 10 20 00 	l.sw 0x0(r16),r4
  40b3dc:	84 70 00 00 	l.lwz r3,0x0(r16)
				            SPI(0x00);
  40b3e0:	d4 10 20 00 	l.sw 0x0(r16),r4
  40b3e4:	84 70 00 00 	l.lwz r3,0x0(r16)
				            for (i = 0; i < 512; i++)
				            {
				                SPI(sector_buffer[i]);
  40b3e8:	84 a1 00 04 	l.lwz r5,0x4(r1)
				            SPI(0x00);
				            SPI(0x00);
				            SPI(0x00);
				            SPI(0x00);
				            SPI(0x00);
				            for (i = 0; i < 512; i++)
  40b3ec:	19 60 00 41 	l.movhi r11,0x41
				            {
				                SPI(sector_buffer[i]);
  40b3f0:	8c 65 00 00 	l.lbz r3,0x0(r5)
  40b3f4:	9c a5 00 01 	l.addi r5,r5,0x1
  40b3f8:	d4 10 18 00 	l.sw 0x0(r16),r3
				            SPI(0x00);
				            SPI(0x00);
				            SPI(0x00);
				            SPI(0x00);
				            SPI(0x00);
				            for (i = 0; i < 512; i++)
  40b3fc:	a9 6b a6 dc 	l.ori r11,r11,0xa6dc
				            {
				                SPI(sector_buffer[i]);
  40b400:	84 70 00 00 	l.lwz r3,0x0(r16)
				            SPI(0x00);
				            SPI(0x00);
				            SPI(0x00);
				            SPI(0x00);
				            SPI(0x00);
				            for (i = 0; i < 512; i++)
  40b404:	e4 25 58 00 	l.sfne r5,r11
  40b408:	13 ff ff f8 	l.bf 40b3e8 <HandleHDD.clone.1+0xa50>
  40b40c:	d4 01 28 04 	l.sw 0x4(r1),r5
				            {
				                SPI(sector_buffer[i]);
				            }
				            DisableFpga();
  40b410:	9c 80 00 20 	l.addi r4,r0,0x20
  40b414:	18 60 00 80 	l.movhi r3,0x80
				            WriteStatus(sector_count==1 ? IDE_STATUS_IRQ|IDE_STATUS_END : IDE_STATUS_IRQ);
  40b418:	bc 3a 00 01 	l.sfnei r26,0x1
				            SPI(0x00);
				            for (i = 0; i < 512; i++)
				            {
				                SPI(sector_buffer[i]);
				            }
				            DisableFpga();
  40b41c:	e0 63 20 04 	l.or r3,r3,r4
  40b420:	d4 03 20 00 	l.sw 0x0(r3),r4
				            WriteStatus(sector_count==1 ? IDE_STATUS_IRQ|IDE_STATUS_END : IDE_STATUS_IRQ);
  40b424:	10 00 00 03 	l.bf 40b430 <HandleHDD.clone.1+0xa98>
  40b428:	9c 60 00 10 	l.addi r3,r0,0x10
  40b42c:	9c 60 00 90 	l.addi r3,r0,0x90
  40b430:	07 ff de d4 	l.jal 402f80 <WriteStatus>
  40b434:	9f 5a ff ff 	l.addi r26,r26,0xffffffff
						        FileRead(&hdf[unit].file, 0);
						        FileSeek(&hdf[unit].file, 1, SEEK_CUR);
						    }
						}
						lba++;
					    sector_count--; // decrease sector count
  40b438:	00 00 00 2a 	l.j 40b4e0 <HandleHDD.clone.1+0xb48>
  40b43c:	a7 5a ff ff 	l.andi r26,r26,0xffff
				            DisableFpga();
				            WriteStatus(sector_count==1 ? IDE_STATUS_IRQ|IDE_STATUS_END : IDE_STATUS_IRQ);
						}
						else
						{
				            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type
  40b440:	07 ff de d0 	l.jal 402f80 <WriteStatus>
  40b444:	9c 60 00 08 	l.addi r3,r0,0x8
							WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
  40b448:	8d 01 02 0e 	l.lbz r8,0x20e(r1)
  40b44c:	9c a0 ff f0 	l.addi r5,r0,0xfffffff0
  40b450:	8c 81 02 0a 	l.lbz r4,0x20a(r1)
  40b454:	e1 08 28 03 	l.and r8,r8,r5
  40b458:	b8 f6 00 48 	l.srli r7,r22,0x8
  40b45c:	9c 60 00 00 	l.addi r3,r0,0x0
  40b460:	a4 b8 00 ff 	l.andi r5,r24,0xff
  40b464:	a4 d6 00 ff 	l.andi r6,r22,0xff
  40b468:	07 ff de 90 	l.jal 402ea8 <WriteTaskFile>
  40b46c:	e1 12 40 04 	l.or r8,r18,r8

					        while (!(GetFPGAStatus() & CMD_IDECMD)); // wait for empty sector buffer
  40b470:	07 ff de 74 	l.jal 402e40 <GetFPGAStatus>
  40b474:	15 00 00 00 	l.nop 0x0
  40b478:	a5 6b 00 04 	l.andi r11,r11,0x4
  40b47c:	bc 0b 00 00 	l.sfeqi r11,0x0
  40b480:	13 ff ff fc 	l.bf 40b470 <HandleHDD.clone.1+0xad8>
  40b484:	15 00 00 00 	l.nop 0x0

						    WriteStatus(IDE_STATUS_IRQ);
  40b488:	07 ff de be 	l.jal 402f80 <WriteStatus>
  40b48c:	9c 60 00 10 	l.addi r3,r0,0x10

						    if (hdf[unit].file.size)
  40b490:	a8 6e 00 00 	l.ori r3,r14,0x0
  40b494:	07 ff d2 f5 	l.jal 400068 <__mulsi3>
  40b498:	9c 80 11 44 	l.addi r4,r0,0x1144
  40b49c:	18 80 00 41 	l.movhi r4,0x41
  40b4a0:	a8 84 a8 f8 	l.ori r4,r4,0xa8f8
  40b4a4:	e0 6b 20 00 	l.add r3,r11,r4
  40b4a8:	84 63 00 1c 	l.lwz r3,0x1c(r3)
  40b4ac:	bc 03 00 00 	l.sfeqi r3,0x0
  40b4b0:	10 00 00 0a 	l.bf 40b4d8 <HandleHDD.clone.1+0xb40>
  40b4b4:	9d 6b 00 04 	l.addi r11,r11,0x4
						    {
			//                    FileRead(&hdf[unit].file, NULL);
						        FileRead(&hdf[unit].file, 0);
  40b4b8:	e3 8b 20 00 	l.add r28,r11,r4
  40b4bc:	9c 80 00 00 	l.addi r4,r0,0x0
  40b4c0:	07 ff e7 7d 	l.jal 4052b4 <FileRead>
  40b4c4:	a8 7c 00 00 	l.ori r3,r28,0x0
						        FileSeek(&hdf[unit].file, 1, SEEK_CUR);
  40b4c8:	9c 80 00 01 	l.addi r4,r0,0x1
  40b4cc:	a8 7c 00 00 	l.ori r3,r28,0x0
  40b4d0:	07 ff e7 9b 	l.jal 40533c <FileSeek>
  40b4d4:	a8 a4 00 00 	l.ori r5,r4,0x0
						    }
						}
						lba++;
					    sector_count--; // decrease sector count
  40b4d8:	9f 5a ff ff 	l.addi r26,r26,0xffffffff
  40b4dc:	a7 5a ff ff 	l.andi r26,r26,0xffff
					DEBUG2("Read HDF_File %ld",lba+hdf[unit].offset);
					DEBUG2("Offset %ld",hdf[unit].offset);
				    if (hdf[unit].file.size)
				        HardFileSeek(&hdf[unit], (lba+hdf[unit].offset) < 0 ? 0 : lba+hdf[unit].offset);

				    while (sector_count)
  40b4e0:	bc 1a 00 00 	l.sfeqi r26,0x0
  40b4e4:	10 00 03 3b 	l.bf 40c1d0 <HandleHDD.clone.1+0x1838>
  40b4e8:	9e 94 00 01 	l.addi r20,r20,0x1
				    {
//				 decrease sector count
						if(sector_count!=1)
  40b4ec:	03 ff fe e6 	l.j 40b084 <HandleHDD.clone.1+0x6ec>
  40b4f0:	bc 1a 00 01 	l.sfeqi r26,0x1
				case HDF_CARDPART0:
				case HDF_CARDPART1:
				case HDF_CARDPART2:
				case HDF_CARDPART3:
					{
			            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type
  40b4f4:	9c 60 00 08 	l.addi r3,r0,0x8
  40b4f8:	07 ff de a2 	l.jal 402f80 <WriteStatus>
  40b4fc:	a6 94 ff ff 	l.andi r20,r20,0xffff

unsigned long chs2lba(unsigned short cylinder, unsigned char head, unsigned short sector, unsigned char unit)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    return(cylinder * hdf[unit].heads + head) * hdf[unit].sectors + sector - 1;
  40b500:	94 9c 01 32 	l.lhz r4,0x132(r28)
  40b504:	a8 76 00 00 	l.ori r3,r22,0x0
  40b508:	07 ff d2 d8 	l.jal 400068 <__mulsi3>
  40b50c:	9e 94 ff ff 	l.addi r20,r20,0xffffffff
  40b510:	94 9c 01 34 	l.lhz r4,0x134(r28)
  40b514:	07 ff d2 d5 	l.jal 400068 <__mulsi3>
  40b518:	e0 6b 90 00 	l.add r3,r11,r18
				case HDF_CARDPART2:
				case HDF_CARDPART3:
					{
			            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type
				        lba=chs2lba(cylinder, head, sector, unit)+hdf[unit].offset;
						DEBUG2("Read HDF_Card: %ld",lba);
  40b51c:	18 60 00 41 	l.movhi r3,0x41

unsigned long chs2lba(unsigned short cylinder, unsigned char head, unsigned short sector, unsigned char unit)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    return(cylinder * hdf[unit].heads + head) * hdf[unit].sectors + sector - 1;
  40b520:	e1 74 58 00 	l.add r11,r20,r11
				case HDF_CARDPART2:
				case HDF_CARDPART3:
					{
			            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type
				        lba=chs2lba(cylinder, head, sector, unit)+hdf[unit].offset;
						DEBUG2("Read HDF_Card: %ld",lba);
  40b524:	a8 63 a3 50 	l.ori r3,r3,0xa350
				case HDF_CARDPART1:
				case HDF_CARDPART2:
				case HDF_CARDPART3:
					{
			            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type
				        lba=chs2lba(cylinder, head, sector, unit)+hdf[unit].offset;
  40b528:	84 5c 01 3c 	l.lwz r2,0x13c(r28)
						DEBUG2("Read HDF_Card: %ld",lba);
  40b52c:	90 63 00 00 	l.lbs r3,0x0(r3)
  40b530:	bc 03 00 00 	l.sfeqi r3,0x0
  40b534:	10 00 00 0b 	l.bf 40b560 <HandleHDD.clone.1+0xbc8>
  40b538:	e0 4b 10 00 	l.add r2,r11,r2
  40b53c:	18 60 00 41 	l.movhi r3,0x41
  40b540:	18 80 00 41 	l.movhi r4,0x41
  40b544:	a8 63 a3 60 	l.ori r3,r3,0xa360
  40b548:	a8 84 81 9a 	l.ori r4,r4,0x819a
  40b54c:	07 ff e3 ce 	l.jal 404484 <sprintf>
  40b550:	d4 01 10 00 	l.sw 0x0(r1),r2
  40b554:	18 60 00 41 	l.movhi r3,0x41
  40b558:	07 ff de f9 	l.jal 40313c <DebugMessage>
  40b55c:	a8 63 a3 60 	l.ori r3,r3,0xa360
								}
								else
									sector++;
							}

							WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
  40b560:	9c a0 ff f0 	l.addi r5,r0,0xfffffff0
  40b564:	e2 10 28 03 	l.and r16,r16,r5
				        lba=chs2lba(cylinder, head, sector, unit)+hdf[unit].offset;
						DEBUG2("Read HDF_Card: %ld",lba);
					    while (sector_count)
					    {
//				 decrease sector count
							if(sector_count!=1)
  40b568:	bc 1a 00 01 	l.sfeqi r26,0x1
  40b56c:	10 00 00 16 	l.bf 40b5c4 <HandleHDD.clone.1+0xc2c>
  40b570:	a8 6e 00 00 	l.ori r3,r14,0x0
							{
								if (sector == hdf[unit].sectors)
  40b574:	07 ff d2 bd 	l.jal 400068 <__mulsi3>
  40b578:	9c 80 11 44 	l.addi r4,r0,0x1144
  40b57c:	18 60 00 41 	l.movhi r3,0x41
  40b580:	a8 63 a8 f8 	l.ori r3,r3,0xa8f8
  40b584:	e1 6b 18 00 	l.add r11,r11,r3
  40b588:	94 6b 01 34 	l.lhz r3,0x134(r11)
  40b58c:	e4 23 c0 00 	l.sfne r3,r24
  40b590:	10 00 00 0c 	l.bf 40b5c0 <HandleHDD.clone.1+0xc28>
  40b594:	9f 18 00 01 	l.addi r24,r24,0x1
								{
									sector = 1;
									head++;
  40b598:	9e 52 00 01 	l.addi r18,r18,0x1
									if (head == hdf[unit].heads)
  40b59c:	94 6b 01 32 	l.lhz r3,0x132(r11)
							if(sector_count!=1)
							{
								if (sector == hdf[unit].sectors)
								{
									sector = 1;
									head++;
  40b5a0:	a6 52 00 ff 	l.andi r18,r18,0xff
									if (head == hdf[unit].heads)
  40b5a4:	e4 23 90 00 	l.sfne r3,r18
  40b5a8:	10 00 00 07 	l.bf 40b5c4 <HandleHDD.clone.1+0xc2c>
  40b5ac:	9f 00 00 01 	l.addi r24,r0,0x1
									{
										head = 0;
										cylinder++;
  40b5b0:	e2 d6 c0 00 	l.add r22,r22,r24
								{
									sector = 1;
									head++;
									if (head == hdf[unit].heads)
									{
										head = 0;
  40b5b4:	9e 40 00 00 	l.addi r18,r0,0x0
										cylinder++;
  40b5b8:	00 00 00 03 	l.j 40b5c4 <HandleHDD.clone.1+0xc2c>
  40b5bc:	a6 d6 ff ff 	l.andi r22,r22,0xffff
									}
								}
								else
									sector++;
  40b5c0:	a7 18 ff ff 	l.andi r24,r24,0xffff
							}

							WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
  40b5c4:	b8 f6 00 48 	l.srli r7,r22,0x8
  40b5c8:	9c 60 00 00 	l.addi r3,r0,0x0
  40b5cc:	a8 9e 00 00 	l.ori r4,r30,0x0
  40b5d0:	a4 b8 00 ff 	l.andi r5,r24,0xff
  40b5d4:	a4 d6 00 ff 	l.andi r6,r22,0xff
  40b5d8:	07 ff de 34 	l.jal 402ea8 <WriteTaskFile>
  40b5dc:	e1 12 80 04 	l.or r8,r18,r16

					        while (!(GetFPGAStatus() & CMD_IDECMD)); // wait for empty sector buffer
  40b5e0:	07 ff de 18 	l.jal 402e40 <GetFPGAStatus>
  40b5e4:	15 00 00 00 	l.nop 0x0
  40b5e8:	a5 6b 00 04 	l.andi r11,r11,0x4
  40b5ec:	bc 0b 00 00 	l.sfeqi r11,0x0
  40b5f0:	13 ff ff fc 	l.bf 40b5e0 <HandleHDD.clone.1+0xc48>
  40b5f4:	9c 60 00 10 	l.addi r3,r0,0x10
					        WriteStatus(IDE_STATUS_IRQ);
  40b5f8:	07 ff de 62 	l.jal 402f80 <WriteStatus>
  40b5fc:	9f 5a ff ff 	l.addi r26,r26,0xffffffff
							MMC_Read(lba,0);
  40b600:	a8 62 00 00 	l.ori r3,r2,0x0
  40b604:	9c 80 00 00 	l.addi r4,r0,0x0
  40b608:	07 ff e6 b1 	l.jal 4050cc <MMC_Read>
  40b60c:	a7 5a ff ff 	l.andi r26,r26,0xffff
				case HDF_CARDPART3:
					{
			            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type
				        lba=chs2lba(cylinder, head, sector, unit)+hdf[unit].offset;
						DEBUG2("Read HDF_Card: %ld",lba);
					    while (sector_count)
  40b610:	bc 1a 00 00 	l.sfeqi r26,0x0
  40b614:	10 00 02 ef 	l.bf 40c1d0 <HandleHDD.clone.1+0x1838>
  40b618:	9c 42 00 01 	l.addi r2,r2,0x1
					    {
//				 decrease sector count
							if(sector_count!=1)
  40b61c:	03 ff ff d4 	l.j 40b56c <HandleHDD.clone.1+0xbd4>
  40b620:	bc 1a 00 01 	l.sfeqi r26,0x1
						}
					}
					break;
			}
        }
        else if (tfr[7] == ACMD_SET_MULTIPLE_MODE) // Set Multiple Mode
  40b624:	10 00 00 21 	l.bf 40b6a8 <HandleHDD.clone.1+0xd10>
  40b628:	bc 22 00 c4 	l.sfnei r2,0xc4
        {
            hdf[unit].sectors_per_block = tfr[2];
  40b62c:	a8 6e 00 00 	l.ori r3,r14,0x0
  40b630:	9c 80 11 44 	l.addi r4,r0,0x1144
  40b634:	07 ff d2 8d 	l.jal 400068 <__mulsi3>
  40b638:	9d c1 02 09 	l.addi r14,r1,0x209
  40b63c:	18 80 00 41 	l.movhi r4,0x41
  40b640:	8c 61 02 0a 	l.lbz r3,0x20a(r1)
  40b644:	a8 84 a8 f8 	l.ori r4,r4,0xa8f8

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L2);
}


void HandleHDD(unsigned char c1, unsigned char c2)
  40b648:	9e 52 00 07 	l.addi r18,r18,0x7
					break;
			}
        }
        else if (tfr[7] == ACMD_SET_MULTIPLE_MODE) // Set Multiple Mode
        {
            hdf[unit].sectors_per_block = tfr[2];
  40b64c:	e1 6b 20 00 	l.add r11,r11,r4
  40b650:	dc 0b 19 36 	l.sh 0x136(r11),r3

            printf("Set Multiple Mode\r");
  40b654:	18 60 00 41 	l.movhi r3,0x41
  40b658:	07 ff e4 0f 	l.jal 404694 <printf>
  40b65c:	a8 63 81 ad 	l.ori r3,r3,0x81ad
            printf("IDE:");
  40b660:	18 60 00 41 	l.movhi r3,0x41
  40b664:	07 ff e4 0c 	l.jal 404694 <printf>
  40b668:	a8 63 81 29 	l.ori r3,r3,0x8129
            for (i = 1; i < 7; i++)
                printf("%02X.", tfr[i]);
  40b66c:	8c 6e 00 00 	l.lbz r3,0x0(r14)
  40b670:	d4 01 18 00 	l.sw 0x0(r1),r3
  40b674:	18 60 00 41 	l.movhi r3,0x41
  40b678:	9d ce 00 01 	l.addi r14,r14,0x1
  40b67c:	07 ff e4 06 	l.jal 404694 <printf>
  40b680:	a8 63 81 2e 	l.ori r3,r3,0x812e
        {
            hdf[unit].sectors_per_block = tfr[2];

            printf("Set Multiple Mode\r");
            printf("IDE:");
            for (i = 1; i < 7; i++)
  40b684:	e4 2e 90 00 	l.sfne r14,r18
  40b688:	13 ff ff f9 	l.bf 40b66c <HandleHDD.clone.1+0xcd4>
  40b68c:	15 00 00 00 	l.nop 0x0
                printf("%02X.", tfr[i]);
            printf("%02X\r", tfr[7]);
  40b690:	18 60 00 41 	l.movhi r3,0x41
  40b694:	d4 01 10 00 	l.sw 0x0(r1),r2
  40b698:	07 ff e3 ff 	l.jal 404694 <printf>
  40b69c:	a8 63 8e 1d 	l.ori r3,r3,0x8e1d
  40b6a0:	00 00 02 ca 	l.j 40c1c8 <HandleHDD.clone.1+0x1830>
  40b6a4:	9c 60 00 90 	l.addi r3,r0,0x90

            WriteStatus(IDE_STATUS_END | IDE_STATUS_IRQ);
        }
        else if (tfr[7] == ACMD_READ_MULTIPLE) // Read Multiple Sectors (multiple sector transfer per IRQ)
  40b6a8:	10 00 01 00 	l.bf 40baa8 <HandleHDD.clone.1+0x1110>
  40b6ac:	bc 22 00 30 	l.sfnei r2,0x30
        {
			long lba;
            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type
  40b6b0:	9c 60 00 08 	l.addi r3,r0,0x8
  40b6b4:	07 ff de 33 	l.jal 402f80 <WriteStatus>
  40b6b8:	a6 50 00 0f 	l.andi r18,r16,0xf

            sector = tfr[3];
            cylinder = tfr[4] | (tfr[5] << 8);
  40b6bc:	8e c1 02 0d 	l.lbz r22,0x20d(r1)
  40b6c0:	8c 41 02 0c 	l.lbz r2,0x20c(r1)
            head = tfr[6] & 0x0F;
            sector_count = tfr[2];
  40b6c4:	8f 01 02 0a 	l.lbz r24,0x20a(r1)
        else if (tfr[7] == ACMD_READ_MULTIPLE) // Read Multiple Sectors (multiple sector transfer per IRQ)
        {
			long lba;
            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type

            sector = tfr[3];
  40b6c8:	8f 41 02 0b 	l.lbz r26,0x20b(r1)
            cylinder = tfr[4] | (tfr[5] << 8);
  40b6cc:	ba d6 00 08 	l.slli r22,r22,0x8
        else if (tfr[7] == ACMD_READ_MULTIPLE) // Read Multiple Sectors (multiple sector transfer per IRQ)
        {
			long lba;
            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type

            sector = tfr[3];
  40b6d0:	a6 9a ff ff 	l.andi r20,r26,0xffff
            cylinder = tfr[4] | (tfr[5] << 8);
            head = tfr[6] & 0x0F;
            sector_count = tfr[2];
            if (sector_count == 0)
  40b6d4:	bc 18 00 00 	l.sfeqi r24,0x0
        {
			long lba;
            WriteStatus(IDE_STATUS_RDY); // pio in (class 1) command type

            sector = tfr[3];
            cylinder = tfr[4] | (tfr[5] << 8);
  40b6d8:	e2 d6 10 04 	l.or r22,r22,r2
            head = tfr[6] & 0x0F;
            sector_count = tfr[2];
            if (sector_count == 0)
  40b6dc:	0c 00 00 03 	l.bnf 40b6e8 <HandleHDD.clone.1+0xd50>
  40b6e0:	a8 58 00 00 	l.ori r2,r24,0x0
               sector_count = 0x100;
  40b6e4:	9c 40 01 00 	l.addi r2,r0,0x100

			switch(hdf[unit].type)
  40b6e8:	a8 6e 00 00 	l.ori r3,r14,0x0
  40b6ec:	07 ff d2 5f 	l.jal 400068 <__mulsi3>
  40b6f0:	9c 80 11 44 	l.addi r4,r0,0x1144
  40b6f4:	18 a0 00 41 	l.movhi r5,0x41
  40b6f8:	a8 a5 a8 f8 	l.ori r5,r5,0xa8f8
  40b6fc:	e3 8b 28 00 	l.add r28,r11,r5
  40b700:	84 7c 00 00 	l.lwz r3,0x0(r28)
  40b704:	bd 43 00 06 	l.sfgtsi r3,0x6
  40b708:	10 00 00 05 	l.bf 40b71c <HandleHDD.clone.1+0xd84>
  40b70c:	bc 03 00 81 	l.sfeqi r3,0x81
  40b710:	bd 63 00 02 	l.sfgesi r3,0x2
  40b714:	10 00 00 82 	l.bf 40b91c <HandleHDD.clone.1+0xf84>
  40b718:	bc 03 00 01 	l.sfeqi r3,0x1
  40b71c:	0c 00 02 ad 	l.bnf 40c1d0 <HandleHDD.clone.1+0x1838>
  40b720:	a8 6e 00 00 	l.ori r3,r14,0x0

unsigned long chs2lba(unsigned short cylinder, unsigned char head, unsigned short sector, unsigned char unit)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    return(cylinder * hdf[unit].heads + head) * hdf[unit].sectors + sector - 1;
  40b724:	9c 80 11 44 	l.addi r4,r0,0x1144
  40b728:	07 ff d2 50 	l.jal 400068 <__mulsi3>
  40b72c:	a7 5a ff ff 	l.andi r26,r26,0xffff
  40b730:	18 60 00 41 	l.movhi r3,0x41
  40b734:	9f 5a ff ff 	l.addi r26,r26,0xffffffff
  40b738:	a8 63 a8 f8 	l.ori r3,r3,0xa8f8
  40b73c:	e3 8b 18 00 	l.add r28,r11,r3
  40b740:	a8 76 00 00 	l.ori r3,r22,0x0
  40b744:	07 ff d2 49 	l.jal 400068 <__mulsi3>
  40b748:	94 9c 01 32 	l.lhz r4,0x132(r28)
  40b74c:	94 9c 01 34 	l.lhz r4,0x134(r28)
  40b750:	07 ff d2 46 	l.jal 400068 <__mulsi3>
  40b754:	e0 6b 90 00 	l.add r3,r11,r18
			switch(hdf[unit].type)
			{
				case HDF_FILE | HDF_SYNTHRDB:
				case HDF_FILE:
					lba=chs2lba(cylinder, head, sector, unit);
					DEBUG2("ReadM HDF_File, %ld",lba);
  40b758:	18 60 00 41 	l.movhi r3,0x41
  40b75c:	a8 63 a3 50 	l.ori r3,r3,0xa350
  40b760:	90 63 00 00 	l.lbs r3,0x0(r3)
  40b764:	bc 03 00 00 	l.sfeqi r3,0x0
  40b768:	10 00 00 0b 	l.bf 40b794 <HandleHDD.clone.1+0xdfc>
  40b76c:	e3 5a 58 00 	l.add r26,r26,r11
  40b770:	18 60 00 41 	l.movhi r3,0x41
  40b774:	18 80 00 41 	l.movhi r4,0x41
  40b778:	a8 63 a3 60 	l.ori r3,r3,0xa360
  40b77c:	a8 84 81 c0 	l.ori r4,r4,0x81c0
  40b780:	07 ff e3 41 	l.jal 404484 <sprintf>
  40b784:	d4 01 d0 00 	l.sw 0x0(r1),r26
  40b788:	18 60 00 41 	l.movhi r3,0x41
  40b78c:	07 ff de 6c 	l.jal 40313c <DebugMessage>
  40b790:	a8 63 a3 60 	l.ori r3,r3,0xa360
				    if (hdf[unit].file.size)
  40b794:	a8 6e 00 00 	l.ori r3,r14,0x0
  40b798:	07 ff d2 34 	l.jal 400068 <__mulsi3>
  40b79c:	9c 80 11 44 	l.addi r4,r0,0x1144
  40b7a0:	18 80 00 41 	l.movhi r4,0x41
  40b7a4:	a8 84 a8 f8 	l.ori r4,r4,0xa8f8
  40b7a8:	e0 6b 20 00 	l.add r3,r11,r4
  40b7ac:	84 83 00 1c 	l.lwz r4,0x1c(r3)
  40b7b0:	bc 04 00 00 	l.sfeqi r4,0x0
  40b7b4:	10 00 00 09 	l.bf 40b7d8 <HandleHDD.clone.1+0xe40>
  40b7b8:	9c a0 ff f0 	l.addi r5,r0,0xfffffff0
				        HardFileSeek(&hdf[unit], (lba+hdf[unit].offset) < 0 ? 0 : lba + hdf[unit].offset);
  40b7bc:	84 83 01 3c 	l.lwz r4,0x13c(r3)
  40b7c0:	e3 5a 20 00 	l.add r26,r26,r4
  40b7c4:	ac 9a ff ff 	l.xori r4,r26,0xffffffff
  40b7c8:	b8 84 00 9f 	l.srai r4,r4,0x1f
  40b7cc:	07 ff de 33 	l.jal 403098 <HardFileSeek>
  40b7d0:	e0 9a 20 03 	l.and r4,r26,r4
								else
									sector++;
							}
							sector_count--;
						}	
						WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
  40b7d4:	9c a0 ff f0 	l.addi r5,r0,0xfffffff0
  40b7d8:	e2 10 28 03 	l.and r16,r16,r5
					// FIXME - READM could cross the fake RDB -> real disk boundary.
					// FIXME - but first we should make some attempt to generate fake RGB in multiple mode.

				    while (sector_count)
				    {
				        while (!(GetFPGAStatus() & CMD_IDECMD)); // wait for empty sector buffer
  40b7dc:	07 ff dd 99 	l.jal 402e40 <GetFPGAStatus>
  40b7e0:	15 00 00 00 	l.nop 0x0
  40b7e4:	a5 6b 00 04 	l.andi r11,r11,0x4
  40b7e8:	bc 0b 00 00 	l.sfeqi r11,0x0
  40b7ec:	13 ff ff fc 	l.bf 40b7dc <HandleHDD.clone.1+0xe44>
  40b7f0:	a8 6e 00 00 	l.ori r3,r14,0x0

				        block_count = sector_count;
				        if (block_count > hdf[unit].sectors_per_block)
  40b7f4:	9c 80 11 44 	l.addi r4,r0,0x1144
  40b7f8:	07 ff d2 1c 	l.jal 400068 <__mulsi3>
  40b7fc:	ab 82 00 00 	l.ori r28,r2,0x0
  40b800:	18 60 00 41 	l.movhi r3,0x41
  40b804:	a8 63 a8 f8 	l.ori r3,r3,0xa8f8
  40b808:	e1 6b 18 00 	l.add r11,r11,r3
					// FIXME - READM could cross the fake RDB -> real disk boundary.
					// FIXME - but first we should make some attempt to generate fake RGB in multiple mode.

				    while (sector_count)
				    {
				        while (!(GetFPGAStatus() & CMD_IDECMD)); // wait for empty sector buffer
  40b80c:	94 6b 01 36 	l.lhz r3,0x136(r11)
  40b810:	e4 a2 18 00 	l.sfleu r2,r3
  40b814:	10 00 00 03 	l.bf 40b820 <HandleHDD.clone.1+0xe88>
  40b818:	15 00 00 00 	l.nop 0x0
  40b81c:	ab 83 00 00 	l.ori r28,r3,0x0

				        block_count = sector_count;
				        if (block_count > hdf[unit].sectors_per_block)
				            block_count = hdf[unit].sectors_per_block;

				        WriteStatus(IDE_STATUS_IRQ);
  40b820:	9c 60 00 10 	l.addi r3,r0,0x10
  40b824:	07 ff dd d7 	l.jal 402f80 <WriteStatus>
  40b828:	a7 9c ff ff 	l.andi r28,r28,0xffff

				        if (hdf[unit].file.size)
  40b82c:	a8 6e 00 00 	l.ori r3,r14,0x0
  40b830:	07 ff d2 0e 	l.jal 400068 <__mulsi3>
  40b834:	9c 80 11 44 	l.addi r4,r0,0x1144
  40b838:	18 80 00 41 	l.movhi r4,0x41
  40b83c:	a8 84 a8 f8 	l.ori r4,r4,0xa8f8
  40b840:	e0 6b 20 00 	l.add r3,r11,r4
  40b844:	84 63 00 1c 	l.lwz r3,0x1c(r3)
  40b848:	bc 03 00 00 	l.sfeqi r3,0x0
  40b84c:	10 00 00 06 	l.bf 40b864 <HandleHDD.clone.1+0xecc>
  40b850:	9c 6b 00 04 	l.addi r3,r11,0x4
		//                    FileReadEx(&hdf[unit].file, NULL, block_count); // NULL enables direct transfer to the FPGA
				            FileReadEx(&hdf[unit].file, 0, block_count); // NULL enables direct transfer to the FPGA
  40b854:	a8 bc 00 00 	l.ori r5,r28,0x0
  40b858:	e0 63 20 00 	l.add r3,r3,r4
  40b85c:	07 ff e5 08 	l.jal 404c7c <FileReadEx>
  40b860:	9c 80 00 00 	l.addi r4,r0,0x0
						{	
							if(sector_count!=1)
							{
								if (sector == hdf[unit].sectors)
								{
									sector = 1;
  40b864:	ab 5c 00 00 	l.ori r26,r28,0x0
  40b868:	00 00 00 1c 	l.j 40b8d8 <HandleHDD.clone.1+0xf40>
  40b86c:	ab c2 00 00 	l.ori r30,r2,0x0
		//                    FileReadEx(&hdf[unit].file, NULL, block_count); // NULL enables direct transfer to the FPGA
				            FileReadEx(&hdf[unit].file, 0, block_count); // NULL enables direct transfer to the FPGA

						while (block_count--)
						{	
							if(sector_count!=1)
  40b870:	10 00 00 16 	l.bf 40b8c8 <HandleHDD.clone.1+0xf30>
  40b874:	a8 6e 00 00 	l.ori r3,r14,0x0
							{
								if (sector == hdf[unit].sectors)
  40b878:	07 ff d1 fc 	l.jal 400068 <__mulsi3>
  40b87c:	9c 80 11 44 	l.addi r4,r0,0x1144
  40b880:	18 a0 00 41 	l.movhi r5,0x41
  40b884:	a8 a5 a8 f8 	l.ori r5,r5,0xa8f8
  40b888:	e1 6b 28 00 	l.add r11,r11,r5
  40b88c:	94 6b 01 34 	l.lhz r3,0x134(r11)
  40b890:	e4 23 a0 00 	l.sfne r3,r20
  40b894:	10 00 00 0c 	l.bf 40b8c4 <HandleHDD.clone.1+0xf2c>
  40b898:	9e 94 00 01 	l.addi r20,r20,0x1
								{
									sector = 1;
									head++;
  40b89c:	9e 52 00 01 	l.addi r18,r18,0x1
									if (head == hdf[unit].heads)
  40b8a0:	94 6b 01 32 	l.lhz r3,0x132(r11)
							if(sector_count!=1)
							{
								if (sector == hdf[unit].sectors)
								{
									sector = 1;
									head++;
  40b8a4:	a6 52 00 ff 	l.andi r18,r18,0xff
									if (head == hdf[unit].heads)
  40b8a8:	e4 23 90 00 	l.sfne r3,r18
  40b8ac:	10 00 00 07 	l.bf 40b8c8 <HandleHDD.clone.1+0xf30>
  40b8b0:	9e 80 00 01 	l.addi r20,r0,0x1
									{
										head = 0;
										cylinder++;
  40b8b4:	e2 d6 a0 00 	l.add r22,r22,r20
								{
									sector = 1;
									head++;
									if (head == hdf[unit].heads)
									{
										head = 0;
  40b8b8:	9e 40 00 00 	l.addi r18,r0,0x0
										cylinder++;
  40b8bc:	00 00 00 03 	l.j 40b8c8 <HandleHDD.clone.1+0xf30>
  40b8c0:	a6 d6 ff ff 	l.andi r22,r22,0xffff
									}
								}
								else
									sector++;
  40b8c4:	a6 94 ff ff 	l.andi r20,r20,0xffff
							}
							sector_count--;
  40b8c8:	9f de ff ff 	l.addi r30,r30,0xffffffff
  40b8cc:	9f 5a ff ff 	l.addi r26,r26,0xffffffff
  40b8d0:	a7 de ff ff 	l.andi r30,r30,0xffff
  40b8d4:	a7 5a ff ff 	l.andi r26,r26,0xffff

				        if (hdf[unit].file.size)
		//                    FileReadEx(&hdf[unit].file, NULL, block_count); // NULL enables direct transfer to the FPGA
				            FileReadEx(&hdf[unit].file, 0, block_count); // NULL enables direct transfer to the FPGA

						while (block_count--)
  40b8d8:	bc 3a 00 00 	l.sfnei r26,0x0
  40b8dc:	13 ff ff e5 	l.bf 40b870 <HandleHDD.clone.1+0xed8>
  40b8e0:	bc 1e 00 01 	l.sfeqi r30,0x1
  40b8e4:	e0 42 e0 02 	l.sub r2,r2,r28
								else
									sector++;
							}
							sector_count--;
						}	
						WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
  40b8e8:	b8 f6 00 48 	l.srli r7,r22,0x8
  40b8ec:	a8 7a 00 00 	l.ori r3,r26,0x0
  40b8f0:	a8 98 00 00 	l.ori r4,r24,0x0
  40b8f4:	a4 b4 00 ff 	l.andi r5,r20,0xff
  40b8f8:	a4 d6 00 ff 	l.andi r6,r22,0xff
  40b8fc:	e1 12 80 04 	l.or r8,r18,r16
  40b900:	07 ff dd 6a 	l.jal 402ea8 <WriteTaskFile>
  40b904:	a4 42 ff ff 	l.andi r2,r2,0xffff
				    if (hdf[unit].file.size)
				        HardFileSeek(&hdf[unit], (lba+hdf[unit].offset) < 0 ? 0 : lba + hdf[unit].offset);
					// FIXME - READM could cross the fake RDB -> real disk boundary.
					// FIXME - but first we should make some attempt to generate fake RGB in multiple mode.

				    while (sector_count)
  40b908:	bc 22 00 00 	l.sfnei r2,0x0
  40b90c:	13 ff ff b4 	l.bf 40b7dc <HandleHDD.clone.1+0xe44>
  40b910:	15 00 00 00 	l.nop 0x0
        }
        DISKLED_OFF;
    }

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L3);
}
  40b914:	00 00 02 30 	l.j 40c1d4 <HandleHDD.clone.1+0x183c>
  40b918:	9c 21 02 3c 	l.addi r1,r1,0x23c

unsigned long chs2lba(unsigned short cylinder, unsigned char head, unsigned short sector, unsigned char unit)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    return(cylinder * hdf[unit].heads + head) * hdf[unit].sectors + sector - 1;
  40b91c:	94 9c 01 32 	l.lhz r4,0x132(r28)
  40b920:	a8 76 00 00 	l.ori r3,r22,0x0
  40b924:	07 ff d1 d1 	l.jal 400068 <__mulsi3>
  40b928:	a7 5a ff ff 	l.andi r26,r26,0xffff
  40b92c:	94 9c 01 34 	l.lhz r4,0x134(r28)
  40b930:	e0 6b 90 00 	l.add r3,r11,r18
  40b934:	07 ff d1 cd 	l.jal 400068 <__mulsi3>
  40b938:	9f 5a ff ff 	l.addi r26,r26,0xffffffff
				case HDF_CARDPART1:
				case HDF_CARDPART2:
				case HDF_CARDPART3:
					{
				        long lba=chs2lba(cylinder, head, sector, unit)+hdf[unit].offset;
						DEBUG2("ReadM HDF_Card, %ld",lba);
  40b93c:	18 60 00 41 	l.movhi r3,0x41

unsigned long chs2lba(unsigned short cylinder, unsigned char head, unsigned short sector, unsigned char unit)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    return(cylinder * hdf[unit].heads + head) * hdf[unit].sectors + sector - 1;
  40b940:	e1 7a 58 00 	l.add r11,r26,r11
				case HDF_CARDPART1:
				case HDF_CARDPART2:
				case HDF_CARDPART3:
					{
				        long lba=chs2lba(cylinder, head, sector, unit)+hdf[unit].offset;
						DEBUG2("ReadM HDF_Card, %ld",lba);
  40b944:	a8 63 a3 50 	l.ori r3,r3,0xa350
				case HDF_CARDPART0:
				case HDF_CARDPART1:
				case HDF_CARDPART2:
				case HDF_CARDPART3:
					{
				        long lba=chs2lba(cylinder, head, sector, unit)+hdf[unit].offset;
  40b948:	87 5c 01 3c 	l.lwz r26,0x13c(r28)
						DEBUG2("ReadM HDF_Card, %ld",lba);
  40b94c:	90 63 00 00 	l.lbs r3,0x0(r3)
  40b950:	bc 03 00 00 	l.sfeqi r3,0x0
  40b954:	10 00 00 0b 	l.bf 40b980 <HandleHDD.clone.1+0xfe8>
  40b958:	e3 4b d0 00 	l.add r26,r11,r26
  40b95c:	18 60 00 41 	l.movhi r3,0x41
  40b960:	18 80 00 41 	l.movhi r4,0x41
  40b964:	a8 63 a3 60 	l.ori r3,r3,0xa360
  40b968:	a8 84 81 d4 	l.ori r4,r4,0x81d4
  40b96c:	07 ff e2 c6 	l.jal 404484 <sprintf>
  40b970:	d4 01 d0 00 	l.sw 0x0(r1),r26
  40b974:	18 60 00 41 	l.movhi r3,0x41
  40b978:	07 ff dd f1 	l.jal 40313c <DebugMessage>
  40b97c:	a8 63 a3 60 	l.ori r3,r3,0xa360
										sector++;
										
								}
								sector_count--;
							}	
							WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
  40b980:	9d 60 ff f0 	l.addi r11,r0,0xfffffff0
  40b984:	e1 70 58 03 	l.and r11,r16,r11
  40b988:	d4 01 58 04 	l.sw 0x4(r1),r11
					{
				        long lba=chs2lba(cylinder, head, sector, unit)+hdf[unit].offset;
						DEBUG2("ReadM HDF_Card, %ld",lba);
					    while (sector_count)
					    {
					        while (!(GetFPGAStatus() & CMD_IDECMD)); // wait for empty sector buffer
  40b98c:	07 ff dd 2d 	l.jal 402e40 <GetFPGAStatus>
  40b990:	15 00 00 00 	l.nop 0x0
  40b994:	a5 6b 00 04 	l.andi r11,r11,0x4
  40b998:	bc 0b 00 00 	l.sfeqi r11,0x0
  40b99c:	13 ff ff fc 	l.bf 40b98c <HandleHDD.clone.1+0xff4>
  40b9a0:	a8 6e 00 00 	l.ori r3,r14,0x0

						    block_count = sector_count;
						    if (block_count > hdf[unit].sectors_per_block)
  40b9a4:	9c 80 11 44 	l.addi r4,r0,0x1144
  40b9a8:	07 ff d1 b0 	l.jal 400068 <__mulsi3>
  40b9ac:	ab 82 00 00 	l.ori r28,r2,0x0
  40b9b0:	18 60 00 41 	l.movhi r3,0x41
  40b9b4:	a8 63 a8 f8 	l.ori r3,r3,0xa8f8
  40b9b8:	e1 6b 18 00 	l.add r11,r11,r3
					{
				        long lba=chs2lba(cylinder, head, sector, unit)+hdf[unit].offset;
						DEBUG2("ReadM HDF_Card, %ld",lba);
					    while (sector_count)
					    {
					        while (!(GetFPGAStatus() & CMD_IDECMD)); // wait for empty sector buffer
  40b9bc:	94 6b 01 36 	l.lhz r3,0x136(r11)
  40b9c0:	e4 a2 18 00 	l.sfleu r2,r3
  40b9c4:	10 00 00 03 	l.bf 40b9d0 <HandleHDD.clone.1+0x1038>
  40b9c8:	15 00 00 00 	l.nop 0x0
  40b9cc:	ab 83 00 00 	l.ori r28,r3,0x0

						    block_count = sector_count;
						    if (block_count > hdf[unit].sectors_per_block)
						        block_count = hdf[unit].sectors_per_block;

					        WriteStatus(IDE_STATUS_IRQ);
  40b9d0:	9c 60 00 10 	l.addi r3,r0,0x10
  40b9d4:	07 ff dd 6b 	l.jal 402f80 <WriteStatus>
  40b9d8:	a7 9c ff ff 	l.andi r28,r28,0xffff
							MMC_ReadMultiple(lba,0,block_count);
  40b9dc:	a8 7a 00 00 	l.ori r3,r26,0x0
  40b9e0:	9c 80 00 00 	l.addi r4,r0,0x0
  40b9e4:	a8 bc 00 00 	l.ori r5,r28,0x0
  40b9e8:	07 ff e3 dd 	l.jal 40495c <MMC_ReadMultiple>
  40b9ec:	ab dc 00 00 	l.ori r30,r28,0x0
  40b9f0:	00 00 00 1c 	l.j 40ba60 <HandleHDD.clone.1+0x10c8>
  40b9f4:	aa 02 00 00 	l.ori r16,r2,0x0
							lba+=block_count;
							
							while (block_count--)
							{	
								if(sector_count!=1)
  40b9f8:	10 00 00 16 	l.bf 40ba50 <HandleHDD.clone.1+0x10b8>
  40b9fc:	a8 6e 00 00 	l.ori r3,r14,0x0
								{
									if (sector == hdf[unit].sectors)
  40ba00:	07 ff d1 9a 	l.jal 400068 <__mulsi3>
  40ba04:	9c 80 11 44 	l.addi r4,r0,0x1144
  40ba08:	18 80 00 41 	l.movhi r4,0x41
  40ba0c:	a8 84 a8 f8 	l.ori r4,r4,0xa8f8
  40ba10:	e1 6b 20 00 	l.add r11,r11,r4
  40ba14:	94 6b 01 34 	l.lhz r3,0x134(r11)
  40ba18:	e4 23 a0 00 	l.sfne r3,r20
  40ba1c:	10 00 00 0c 	l.bf 40ba4c <HandleHDD.clone.1+0x10b4>
  40ba20:	9e 94 00 01 	l.addi r20,r20,0x1
									{
										sector = 1;
										head++;
  40ba24:	9e 52 00 01 	l.addi r18,r18,0x1
										if (head == hdf[unit].heads)
  40ba28:	94 6b 01 32 	l.lhz r3,0x132(r11)
								if(sector_count!=1)
								{
									if (sector == hdf[unit].sectors)
									{
										sector = 1;
										head++;
  40ba2c:	a6 52 00 ff 	l.andi r18,r18,0xff
										if (head == hdf[unit].heads)
  40ba30:	e4 23 90 00 	l.sfne r3,r18
  40ba34:	10 00 00 07 	l.bf 40ba50 <HandleHDD.clone.1+0x10b8>
  40ba38:	9e 80 00 01 	l.addi r20,r0,0x1
										{
											head = 0;
											cylinder++;
  40ba3c:	e2 d6 a0 00 	l.add r22,r22,r20
									{
										sector = 1;
										head++;
										if (head == hdf[unit].heads)
										{
											head = 0;
  40ba40:	9e 40 00 00 	l.addi r18,r0,0x0
											cylinder++;
  40ba44:	00 00 00 03 	l.j 40ba50 <HandleHDD.clone.1+0x10b8>
  40ba48:	a6 d6 ff ff 	l.andi r22,r22,0xffff
										}
									}
									else
										sector++;
  40ba4c:	a6 94 ff ff 	l.andi r20,r20,0xffff
										
								}
								sector_count--;
  40ba50:	9e 10 ff ff 	l.addi r16,r16,0xffffffff
  40ba54:	9f de ff ff 	l.addi r30,r30,0xffffffff
  40ba58:	a6 10 ff ff 	l.andi r16,r16,0xffff
  40ba5c:	a7 de ff ff 	l.andi r30,r30,0xffff

					        WriteStatus(IDE_STATUS_IRQ);
							MMC_ReadMultiple(lba,0,block_count);
							lba+=block_count;
							
							while (block_count--)
  40ba60:	bc 3e 00 00 	l.sfnei r30,0x0
  40ba64:	13 ff ff e5 	l.bf 40b9f8 <HandleHDD.clone.1+0x1060>
  40ba68:	bc 10 00 01 	l.sfeqi r16,0x1
										sector++;
										
								}
								sector_count--;
							}	
							WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
  40ba6c:	85 61 00 04 	l.lwz r11,0x4(r1)

					        WriteStatus(IDE_STATUS_IRQ);
							MMC_ReadMultiple(lba,0,block_count);
							lba+=block_count;
							
							while (block_count--)
  40ba70:	e0 42 e0 02 	l.sub r2,r2,r28
										sector++;
										
								}
								sector_count--;
							}	
							WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
  40ba74:	b8 f6 00 48 	l.srli r7,r22,0x8
  40ba78:	a8 7e 00 00 	l.ori r3,r30,0x0
  40ba7c:	a8 98 00 00 	l.ori r4,r24,0x0
  40ba80:	a4 b4 00 ff 	l.andi r5,r20,0xff
  40ba84:	a4 d6 00 ff 	l.andi r6,r22,0xff
  40ba88:	e1 12 58 04 	l.or r8,r18,r11
  40ba8c:	07 ff dd 07 	l.jal 402ea8 <WriteTaskFile>
  40ba90:	a4 42 ff ff 	l.andi r2,r2,0xffff
				case HDF_CARDPART2:
				case HDF_CARDPART3:
					{
				        long lba=chs2lba(cylinder, head, sector, unit)+hdf[unit].offset;
						DEBUG2("ReadM HDF_Card, %ld",lba);
					    while (sector_count)
  40ba94:	bc 02 00 00 	l.sfeqi r2,0x0
  40ba98:	10 00 01 ce 	l.bf 40c1d0 <HandleHDD.clone.1+0x1838>
  40ba9c:	e3 5a e0 00 	l.add r26,r26,r28
  40baa0:	03 ff ff bb 	l.j 40b98c <HandleHDD.clone.1+0xff4>
  40baa4:	15 00 00 00 	l.nop 0x0
			//			WriteTaskFile(0, 0, sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
					}
					break;
			}
        }
        else if (tfr[7] == ACMD_WRITE_SECTORS) // write sectors
  40baa8:	10 00 00 c4 	l.bf 40bdb8 <HandleHDD.clone.1+0x1420>
  40baac:	bc 22 00 c5 	l.sfnei r2,0xc5
        {
            WriteStatus(IDE_STATUS_REQ); // pio out (class 2) command type
  40bab0:	9c 60 00 04 	l.addi r3,r0,0x4
  40bab4:	07 ff dd 33 	l.jal 402f80 <WriteStatus>
  40bab8:	a6 10 00 0f 	l.andi r16,r16,0xf

            sector = tfr[3];
            cylinder = tfr[4] | (tfr[5] << 8);
  40babc:	8f 01 02 0d 	l.lbz r24,0x20d(r1)
        }
        else if (tfr[7] == ACMD_WRITE_SECTORS) // write sectors
        {
            WriteStatus(IDE_STATUS_REQ); // pio out (class 2) command type

            sector = tfr[3];
  40bac0:	8e 41 02 0b 	l.lbz r18,0x20b(r1)
            cylinder = tfr[4] | (tfr[5] << 8);
  40bac4:	bb 18 00 08 	l.slli r24,r24,0x8
  40bac8:	8c 41 02 0c 	l.lbz r2,0x20c(r1)
            head = tfr[6] & 0x0F;
            sector_count = tfr[2];
  40bacc:	8e 81 02 0a 	l.lbz r20,0x20a(r1)
        }
        else if (tfr[7] == ACMD_WRITE_SECTORS) // write sectors
        {
            WriteStatus(IDE_STATUS_REQ); // pio out (class 2) command type

            sector = tfr[3];
  40bad0:	a6 d2 ff ff 	l.andi r22,r18,0xffff
            cylinder = tfr[4] | (tfr[5] << 8);
            head = tfr[6] & 0x0F;
            sector_count = tfr[2];
            if (sector_count == 0)
  40bad4:	bc 14 00 00 	l.sfeqi r20,0x0
  40bad8:	0c 00 00 03 	l.bnf 40bae4 <HandleHDD.clone.1+0x114c>
  40badc:	e3 18 10 04 	l.or r24,r24,r2
                sector_count = 0x100;
  40bae0:	9e 80 01 00 	l.addi r20,r0,0x100

unsigned long chs2lba(unsigned short cylinder, unsigned char head, unsigned short sector, unsigned char unit)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    return(cylinder * hdf[unit].heads + head) * hdf[unit].sectors + sector - 1;
  40bae4:	a8 6e 00 00 	l.ori r3,r14,0x0
  40bae8:	9c 80 11 44 	l.addi r4,r0,0x1144
  40baec:	07 ff d1 5f 	l.jal 400068 <__mulsi3>
  40baf0:	a6 52 ff ff 	l.andi r18,r18,0xffff
  40baf4:	18 60 00 41 	l.movhi r3,0x41
  40baf8:	9e 52 ff ff 	l.addi r18,r18,0xffffffff
  40bafc:	a8 63 a8 f8 	l.ori r3,r3,0xa8f8
  40bb00:	e0 4b 18 00 	l.add r2,r11,r3
  40bb04:	a8 78 00 00 	l.ori r3,r24,0x0
  40bb08:	07 ff d1 58 	l.jal 400068 <__mulsi3>
  40bb0c:	94 82 01 32 	l.lhz r4,0x132(r2)
  40bb10:	94 82 01 34 	l.lhz r4,0x134(r2)
            sector_count = tfr[2];
            if (sector_count == 0)
                sector_count = 0x100;

		    long lba=chs2lba(cylinder, head, sector, unit);
			DEBUG2("Write lba %ld",lba);
  40bb14:	18 40 00 41 	l.movhi r2,0x41

unsigned long chs2lba(unsigned short cylinder, unsigned char head, unsigned short sector, unsigned char unit)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    return(cylinder * hdf[unit].heads + head) * hdf[unit].sectors + sector - 1;
  40bb18:	e0 6b 80 00 	l.add r3,r11,r16
  40bb1c:	07 ff d1 53 	l.jal 400068 <__mulsi3>
  40bb20:	a8 42 a3 50 	l.ori r2,r2,0xa350
            sector_count = tfr[2];
            if (sector_count == 0)
                sector_count = 0x100;

		    long lba=chs2lba(cylinder, head, sector, unit);
			DEBUG2("Write lba %ld",lba);
  40bb24:	90 42 00 00 	l.lbs r2,0x0(r2)
  40bb28:	bc 02 00 00 	l.sfeqi r2,0x0
  40bb2c:	10 00 00 0b 	l.bf 40bb58 <HandleHDD.clone.1+0x11c0>
  40bb30:	e2 52 58 00 	l.add r18,r18,r11
  40bb34:	18 60 00 41 	l.movhi r3,0x41
  40bb38:	18 80 00 41 	l.movhi r4,0x41
  40bb3c:	a8 63 a3 60 	l.ori r3,r3,0xa360
  40bb40:	a8 84 81 e8 	l.ori r4,r4,0x81e8
  40bb44:	07 ff e2 50 	l.jal 404484 <sprintf>
  40bb48:	d4 01 90 00 	l.sw 0x0(r1),r18
  40bb4c:	18 60 00 41 	l.movhi r3,0x41
  40bb50:	07 ff dd 7b 	l.jal 40313c <DebugMessage>
  40bb54:	a8 63 a3 60 	l.ori r3,r3,0xa360
//			if(hdf[unit].type>=HDF_CARDPART0)
				lba+=hdf[unit].offset;
  40bb58:	a8 6e 00 00 	l.ori r3,r14,0x0
  40bb5c:	07 ff d1 43 	l.jal 400068 <__mulsi3>
  40bb60:	9c 80 11 44 	l.addi r4,r0,0x1144
  40bb64:	18 80 00 41 	l.movhi r4,0x41
  40bb68:	a8 84 a8 f8 	l.ori r4,r4,0xa8f8
  40bb6c:	e0 6b 20 00 	l.add r3,r11,r4
  40bb70:	84 43 01 3c 	l.lwz r2,0x13c(r3)
  40bb74:	e2 52 10 00 	l.add r18,r18,r2

		        if (hdf[unit].file.size)	// File size will be 0 in direct card modes
  40bb78:	84 43 00 1c 	l.lwz r2,0x1c(r3)
  40bb7c:	bc 02 00 00 	l.sfeqi r2,0x0
  40bb80:	10 00 00 07 	l.bf 40bb9c <HandleHDD.clone.1+0x1204>
  40bb84:	18 40 00 80 	l.movhi r2,0x80
		            HardFileSeek(&hdf[unit], (lba>-1) ? lba : 0);
  40bb88:	ac 92 ff ff 	l.xori r4,r18,0xffffffff
  40bb8c:	b8 84 00 9f 	l.srai r4,r4,0x1f
  40bb90:	07 ff dd 42 	l.jal 403098 <HardFileSeek>
  40bb94:	e0 92 20 03 	l.and r4,r18,r4
							sector++;
					}
	
					WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);

		            EnableFpga();
  40bb98:	18 40 00 80 	l.movhi r2,0x80
		            SPI(0x00);
		            SPI(0x00);
		            SPI(0x00);
		            for (i = 0; i < 512; i++)
		                sector_buffer[i] = SPI(0xFF);
		            DisableFpga();
  40bb9c:	9f c0 00 20 	l.addi r30,r0,0x20
							sector++;
					}
	
					WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);

		            EnableFpga();
  40bba0:	ab 82 00 20 	l.ori r28,r2,0x20
		            SPI(CMD_IDE_DATA_RD); // read data command
  40bba4:	a8 42 00 24 	l.ori r2,r2,0x24
		        if (hdf[unit].file.size)	// File size will be 0 in direct card modes
		            HardFileSeek(&hdf[unit], (lba>-1) ? lba : 0);

		        while (sector_count)
		        {
		            while (!(GetFPGAStatus() & CMD_IDEDAT)); // wait for full write buffer
  40bba8:	07 ff dc a6 	l.jal 402e40 <GetFPGAStatus>
  40bbac:	15 00 00 00 	l.nop 0x0
  40bbb0:	a5 6b 00 08 	l.andi r11,r11,0x8
  40bbb4:	bc 0b 00 00 	l.sfeqi r11,0x0
  40bbb8:	13 ff ff fc 	l.bf 40bba8 <HandleHDD.clone.1+0x1210>
  40bbbc:	bc 14 00 01 	l.sfeqi r20,0x1

	//				 decrease sector count
					if(sector_count!=1)
  40bbc0:	10 00 00 16 	l.bf 40bc18 <HandleHDD.clone.1+0x1280>
  40bbc4:	a8 6e 00 00 	l.ori r3,r14,0x0
					{
						if (sector == hdf[unit].sectors)
  40bbc8:	07 ff d1 28 	l.jal 400068 <__mulsi3>
  40bbcc:	9c 80 11 44 	l.addi r4,r0,0x1144
  40bbd0:	18 a0 00 41 	l.movhi r5,0x41
  40bbd4:	a8 a5 a8 f8 	l.ori r5,r5,0xa8f8
  40bbd8:	e1 6b 28 00 	l.add r11,r11,r5
  40bbdc:	94 6b 01 34 	l.lhz r3,0x134(r11)
  40bbe0:	e4 23 b0 00 	l.sfne r3,r22
  40bbe4:	10 00 00 0c 	l.bf 40bc14 <HandleHDD.clone.1+0x127c>
  40bbe8:	9e d6 00 01 	l.addi r22,r22,0x1
						{
							sector = 1;
							head++;
  40bbec:	9e 10 00 01 	l.addi r16,r16,0x1
							if (head == hdf[unit].heads)
  40bbf0:	94 6b 01 32 	l.lhz r3,0x132(r11)
					if(sector_count!=1)
					{
						if (sector == hdf[unit].sectors)
						{
							sector = 1;
							head++;
  40bbf4:	a6 10 00 ff 	l.andi r16,r16,0xff
							if (head == hdf[unit].heads)
  40bbf8:	e4 23 80 00 	l.sfne r3,r16
  40bbfc:	10 00 00 07 	l.bf 40bc18 <HandleHDD.clone.1+0x1280>
  40bc00:	9e c0 00 01 	l.addi r22,r0,0x1
							{
								head = 0;
								cylinder++;
  40bc04:	e3 18 b0 00 	l.add r24,r24,r22
						{
							sector = 1;
							head++;
							if (head == hdf[unit].heads)
							{
								head = 0;
  40bc08:	9e 00 00 00 	l.addi r16,r0,0x0
								cylinder++;
  40bc0c:	00 00 00 03 	l.j 40bc18 <HandleHDD.clone.1+0x1280>
  40bc10:	a7 18 ff ff 	l.andi r24,r24,0xffff
							}
						}
						else
							sector++;
  40bc14:	a6 d6 ff ff 	l.andi r22,r22,0xffff
					}
	
					WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
  40bc18:	8d 01 02 0e 	l.lbz r8,0x20e(r1)
  40bc1c:	9d 60 ff f0 	l.addi r11,r0,0xfffffff0
  40bc20:	8c 81 02 0a 	l.lbz r4,0x20a(r1)
  40bc24:	e1 08 58 03 	l.and r8,r8,r11
  40bc28:	b8 f8 00 48 	l.srli r7,r24,0x8
  40bc2c:	9c 60 00 00 	l.addi r3,r0,0x0
  40bc30:	a4 b6 00 ff 	l.andi r5,r22,0xff
  40bc34:	a4 d8 00 ff 	l.andi r6,r24,0xff
  40bc38:	07 ff dc 9c 	l.jal 402ea8 <WriteTaskFile>
  40bc3c:	e1 10 40 04 	l.or r8,r16,r8

		            EnableFpga();
  40bc40:	9c 60 00 22 	l.addi r3,r0,0x22
		            SPI(CMD_IDE_DATA_RD); // read data command
  40bc44:	9c 80 00 b0 	l.addi r4,r0,0xb0
							sector++;
					}
	
					WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);

		            EnableFpga();
  40bc48:	d4 1c 18 00 	l.sw 0x0(r28),r3
		            SPI(CMD_IDE_DATA_RD); // read data command
  40bc4c:	d4 02 20 00 	l.sw 0x0(r2),r4
		            SPI(0x00);
  40bc50:	9c a0 00 00 	l.addi r5,r0,0x0
					}
	
					WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);

		            EnableFpga();
		            SPI(CMD_IDE_DATA_RD); // read data command
  40bc54:	84 62 00 00 	l.lwz r3,0x0(r2)
		            SPI(0x00);
  40bc58:	d4 02 28 00 	l.sw 0x0(r2),r5
  40bc5c:	84 62 00 00 	l.lwz r3,0x0(r2)
		            SPI(0x00);
  40bc60:	d4 02 28 00 	l.sw 0x0(r2),r5
  40bc64:	84 62 00 00 	l.lwz r3,0x0(r2)
		            SPI(0x00);
  40bc68:	d4 02 28 00 	l.sw 0x0(r2),r5
  40bc6c:	84 62 00 00 	l.lwz r3,0x0(r2)
		            SPI(0x00);
  40bc70:	d4 02 28 00 	l.sw 0x0(r2),r5
  40bc74:	84 62 00 00 	l.lwz r3,0x0(r2)
		            SPI(0x00);
  40bc78:	d4 02 28 00 	l.sw 0x0(r2),r5
  40bc7c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40bc80:	18 60 00 41 	l.movhi r3,0x41
  40bc84:	a8 63 a4 dc 	l.ori r3,r3,0xa4dc
		            for (i = 0; i < 512; i++)
		                sector_buffer[i] = SPI(0xFF);
  40bc88:	9d 60 00 ff 	l.addi r11,r0,0xff
  40bc8c:	d4 02 58 00 	l.sw 0x0(r2),r11
  40bc90:	84 82 00 00 	l.lwz r4,0x0(r2)
  40bc94:	d8 03 20 00 	l.sb 0x0(r3),r4
		            SPI(0x00);
		            SPI(0x00);
		            SPI(0x00);
		            SPI(0x00);
		            SPI(0x00);
		            for (i = 0; i < 512; i++)
  40bc98:	18 80 00 41 	l.movhi r4,0x41
		                sector_buffer[i] = SPI(0xFF);
  40bc9c:	9c 63 00 01 	l.addi r3,r3,0x1
		            SPI(0x00);
		            SPI(0x00);
		            SPI(0x00);
		            SPI(0x00);
		            SPI(0x00);
		            for (i = 0; i < 512; i++)
  40bca0:	a8 84 a6 dc 	l.ori r4,r4,0xa6dc
  40bca4:	e4 23 20 00 	l.sfne r3,r4
  40bca8:	13 ff ff f9 	l.bf 40bc8c <HandleHDD.clone.1+0x12f4>
  40bcac:	9d 60 00 ff 	l.addi r11,r0,0xff
		                sector_buffer[i] = SPI(0xFF);
		            DisableFpga();
  40bcb0:	18 a0 00 80 	l.movhi r5,0x80

		            sector_count--; // decrease sector count
  40bcb4:	9e 94 ff ff 	l.addi r20,r20,0xffffffff
		            SPI(0x00);
		            SPI(0x00);
		            SPI(0x00);
		            for (i = 0; i < 512; i++)
		                sector_buffer[i] = SPI(0xFF);
		            DisableFpga();
  40bcb8:	a8 a5 00 20 	l.ori r5,r5,0x20

		            sector_count--; // decrease sector count
  40bcbc:	a6 94 ff ff 	l.andi r20,r20,0xffff
		            SPI(0x00);
		            SPI(0x00);
		            SPI(0x00);
		            for (i = 0; i < 512; i++)
		                sector_buffer[i] = SPI(0xFF);
		            DisableFpga();
  40bcc0:	d4 05 f0 00 	l.sw 0x0(r5),r30

		            sector_count--; // decrease sector count

		            if (sector_count)
  40bcc4:	bc 14 00 00 	l.sfeqi r20,0x0
  40bcc8:	0c 00 00 03 	l.bnf 40bcd4 <HandleHDD.clone.1+0x133c>
  40bccc:	9c 60 00 10 	l.addi r3,r0,0x10
		                WriteStatus(IDE_STATUS_IRQ);
		            else
		                WriteStatus(IDE_STATUS_END | IDE_STATUS_IRQ);
  40bcd0:	9c 60 00 90 	l.addi r3,r0,0x90
  40bcd4:	07 ff dc ab 	l.jal 402f80 <WriteStatus>
  40bcd8:	15 00 00 00 	l.nop 0x0

					switch(hdf[unit].type)
  40bcdc:	a8 6e 00 00 	l.ori r3,r14,0x0
  40bce0:	07 ff d0 e2 	l.jal 400068 <__mulsi3>
  40bce4:	9c 80 11 44 	l.addi r4,r0,0x1144
  40bce8:	18 60 00 41 	l.movhi r3,0x41
  40bcec:	a8 63 a8 f8 	l.ori r3,r3,0xa8f8
  40bcf0:	e1 6b 18 00 	l.add r11,r11,r3
  40bcf4:	84 6b 00 00 	l.lwz r3,0x0(r11)
  40bcf8:	bd 43 00 06 	l.sfgtsi r3,0x6
  40bcfc:	10 00 00 05 	l.bf 40bd10 <HandleHDD.clone.1+0x1378>
  40bd00:	bc 03 00 81 	l.sfeqi r3,0x81
  40bd04:	bd 63 00 02 	l.sfgesi r3,0x2
  40bd08:	10 00 00 1f 	l.bf 40bd84 <HandleHDD.clone.1+0x13ec>
  40bd0c:	bc 03 00 01 	l.sfeqi r3,0x1
  40bd10:	0c 00 00 26 	l.bnf 40bda8 <HandleHDD.clone.1+0x1410>
  40bd14:	bc 34 00 00 	l.sfnei r20,0x0
					{
						case HDF_FILE | HDF_SYNTHRDB:
						case HDF_FILE:
						    if (hdf[unit].file.size && (lba>-1))	// Don't attempt to write to fake RDB
  40bd18:	bd 92 00 00 	l.sfltsi r18,0x0
  40bd1c:	10 00 00 21 	l.bf 40bda0 <HandleHDD.clone.1+0x1408>
  40bd20:	a8 6e 00 00 	l.ori r3,r14,0x0
  40bd24:	07 ff d0 d1 	l.jal 400068 <__mulsi3>
  40bd28:	9c 80 11 44 	l.addi r4,r0,0x1144
  40bd2c:	18 80 00 41 	l.movhi r4,0x41
  40bd30:	a8 84 a8 f8 	l.ori r4,r4,0xa8f8
  40bd34:	e0 6b 20 00 	l.add r3,r11,r4
  40bd38:	84 63 00 1c 	l.lwz r3,0x1c(r3)
  40bd3c:	e0 80 18 02 	l.sub r4,r0,r3
  40bd40:	e0 64 18 04 	l.or r3,r4,r3
  40bd44:	bd 63 00 00 	l.sfgesi r3,0x0
  40bd48:	10 00 00 16 	l.bf 40bda0 <HandleHDD.clone.1+0x1408>
  40bd4c:	18 a0 00 41 	l.movhi r5,0x41
						    {
						        FileWrite(&hdf[unit].file, sector_buffer);
  40bd50:	9d 6b 00 04 	l.addi r11,r11,0x4
  40bd54:	a8 a5 a8 f8 	l.ori r5,r5,0xa8f8
  40bd58:	18 80 00 41 	l.movhi r4,0x41
  40bd5c:	e3 4b 28 00 	l.add r26,r11,r5
  40bd60:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  40bd64:	07 ff e2 dc 	l.jal 4048d4 <FileWrite>
  40bd68:	a8 7a 00 00 	l.ori r3,r26,0x0
						        FileSeek(&hdf[unit].file, 1, SEEK_CUR);
  40bd6c:	9c 80 00 01 	l.addi r4,r0,0x1
  40bd70:	a8 7a 00 00 	l.ori r3,r26,0x0
  40bd74:	07 ff e5 72 	l.jal 40533c <FileSeek>
  40bd78:	a8 a4 00 00 	l.ori r5,r4,0x0
						case HDF_CARDPART1:
						case HDF_CARDPART2:
						case HDF_CARDPART3:
							DebugMessage("Write HDF_Card");
							MMC_Write(lba,sector_buffer);
							++lba;
  40bd7c:	00 00 00 0a 	l.j 40bda4 <HandleHDD.clone.1+0x140c>
  40bd80:	9e 52 00 01 	l.addi r18,r18,0x1
						case HDF_CARD:
						case HDF_CARDPART0:
						case HDF_CARDPART1:
						case HDF_CARDPART2:
						case HDF_CARDPART3:
							DebugMessage("Write HDF_Card");
  40bd84:	18 60 00 41 	l.movhi r3,0x41
  40bd88:	07 ff dc ed 	l.jal 40313c <DebugMessage>
  40bd8c:	a8 63 81 f6 	l.ori r3,r3,0x81f6
							MMC_Write(lba,sector_buffer);
  40bd90:	18 80 00 41 	l.movhi r4,0x41
  40bd94:	a8 72 00 00 	l.ori r3,r18,0x0
  40bd98:	07 ff e2 59 	l.jal 4046fc <MMC_Write>
  40bd9c:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
							++lba;
  40bda0:	9e 52 00 01 	l.addi r18,r18,0x1
				lba+=hdf[unit].offset;

		        if (hdf[unit].file.size)	// File size will be 0 in direct card modes
		            HardFileSeek(&hdf[unit], (lba>-1) ? lba : 0);

		        while (sector_count)
  40bda4:	bc 34 00 00 	l.sfnei r20,0x0
  40bda8:	13 ff ff 80 	l.bf 40bba8 <HandleHDD.clone.1+0x1210>
  40bdac:	15 00 00 00 	l.nop 0x0
        }
        DISKLED_OFF;
    }

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L3);
}
  40bdb0:	00 00 01 09 	l.j 40c1d4 <HandleHDD.clone.1+0x183c>
  40bdb4:	9c 21 02 3c 	l.addi r1,r1,0x23c
							++lba;
							break;
					}
		        }
		} 
       else if (tfr[7] == ACMD_WRITE_MULTIPLE) // write sectors
  40bdb8:	10 00 00 e8 	l.bf 40c158 <HandleHDD.clone.1+0x17c0>
  40bdbc:	18 60 00 41 	l.movhi r3,0x41
        {
            WriteStatus(IDE_STATUS_REQ); // pio out (class 2) command type
  40bdc0:	9c 60 00 04 	l.addi r3,r0,0x4
  40bdc4:	07 ff dc 6f 	l.jal 402f80 <WriteStatus>
  40bdc8:	a6 10 00 0f 	l.andi r16,r16,0xf

            sector = tfr[3];
            cylinder = tfr[4] | (tfr[5] << 8);
  40bdcc:	8f 01 02 0d 	l.lbz r24,0x20d(r1)
		} 
       else if (tfr[7] == ACMD_WRITE_MULTIPLE) // write sectors
        {
            WriteStatus(IDE_STATUS_REQ); // pio out (class 2) command type

            sector = tfr[3];
  40bdd0:	8e 81 02 0b 	l.lbz r20,0x20b(r1)
            cylinder = tfr[4] | (tfr[5] << 8);
  40bdd4:	bb 18 00 08 	l.slli r24,r24,0x8
  40bdd8:	8c 41 02 0c 	l.lbz r2,0x20c(r1)
            head = tfr[6] & 0x0F;
            sector_count = tfr[2];
  40bddc:	8e 41 02 0a 	l.lbz r18,0x20a(r1)
		} 
       else if (tfr[7] == ACMD_WRITE_MULTIPLE) // write sectors
        {
            WriteStatus(IDE_STATUS_REQ); // pio out (class 2) command type

            sector = tfr[3];
  40bde0:	a6 d4 ff ff 	l.andi r22,r20,0xffff
            cylinder = tfr[4] | (tfr[5] << 8);
            head = tfr[6] & 0x0F;
            sector_count = tfr[2];
            if (sector_count == 0)
  40bde4:	bc 12 00 00 	l.sfeqi r18,0x0
  40bde8:	0c 00 00 03 	l.bnf 40bdf4 <HandleHDD.clone.1+0x145c>
  40bdec:	e3 18 10 04 	l.or r24,r24,r2
                sector_count = 0x100;
  40bdf0:	9e 40 01 00 	l.addi r18,r0,0x100

unsigned long chs2lba(unsigned short cylinder, unsigned char head, unsigned short sector, unsigned char unit)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    return(cylinder * hdf[unit].heads + head) * hdf[unit].sectors + sector - 1;
  40bdf4:	a8 6e 00 00 	l.ori r3,r14,0x0
  40bdf8:	9c 80 11 44 	l.addi r4,r0,0x1144
  40bdfc:	07 ff d0 9b 	l.jal 400068 <__mulsi3>
  40be00:	a6 94 ff ff 	l.andi r20,r20,0xffff
  40be04:	18 60 00 41 	l.movhi r3,0x41
  40be08:	9e 94 ff ff 	l.addi r20,r20,0xffffffff
  40be0c:	a8 63 a8 f8 	l.ori r3,r3,0xa8f8
  40be10:	e0 4b 18 00 	l.add r2,r11,r3
  40be14:	a8 78 00 00 	l.ori r3,r24,0x0
  40be18:	07 ff d0 94 	l.jal 400068 <__mulsi3>
  40be1c:	94 82 01 32 	l.lhz r4,0x132(r2)
  40be20:	94 82 01 34 	l.lhz r4,0x134(r2)
            sector_count = tfr[2];
            if (sector_count == 0)
                sector_count = 0x100;

		    long lba=chs2lba(cylinder, head, sector, unit);
			DEBUG2("WriteM lba %ld",lba);
  40be24:	18 40 00 41 	l.movhi r2,0x41

unsigned long chs2lba(unsigned short cylinder, unsigned char head, unsigned short sector, unsigned char unit)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L2);

    return(cylinder * hdf[unit].heads + head) * hdf[unit].sectors + sector - 1;
  40be28:	e0 6b 80 00 	l.add r3,r11,r16
  40be2c:	07 ff d0 8f 	l.jal 400068 <__mulsi3>
  40be30:	a8 42 a3 50 	l.ori r2,r2,0xa350
            sector_count = tfr[2];
            if (sector_count == 0)
                sector_count = 0x100;

		    long lba=chs2lba(cylinder, head, sector, unit);
			DEBUG2("WriteM lba %ld",lba);
  40be34:	90 42 00 00 	l.lbs r2,0x0(r2)
  40be38:	bc 02 00 00 	l.sfeqi r2,0x0
  40be3c:	10 00 00 0b 	l.bf 40be68 <HandleHDD.clone.1+0x14d0>
  40be40:	e2 94 58 00 	l.add r20,r20,r11
  40be44:	18 60 00 41 	l.movhi r3,0x41
  40be48:	18 80 00 41 	l.movhi r4,0x41
  40be4c:	a8 63 a3 60 	l.ori r3,r3,0xa360
  40be50:	a8 84 82 05 	l.ori r4,r4,0x8205
  40be54:	07 ff e1 8c 	l.jal 404484 <sprintf>
  40be58:	d4 01 a0 00 	l.sw 0x0(r1),r20
  40be5c:	18 60 00 41 	l.movhi r3,0x41
  40be60:	07 ff dc b7 	l.jal 40313c <DebugMessage>
  40be64:	a8 63 a3 60 	l.ori r3,r3,0xa360
//			if(hdf[unit].type>=HDF_CARDPART0)
				lba+=hdf[unit].offset;
  40be68:	a8 6e 00 00 	l.ori r3,r14,0x0
  40be6c:	07 ff d0 7f 	l.jal 400068 <__mulsi3>
  40be70:	9c 80 11 44 	l.addi r4,r0,0x1144
  40be74:	18 80 00 41 	l.movhi r4,0x41
  40be78:	a8 84 a8 f8 	l.ori r4,r4,0xa8f8
  40be7c:	e0 6b 20 00 	l.add r3,r11,r4
  40be80:	84 43 01 3c 	l.lwz r2,0x13c(r3)
  40be84:	e2 94 10 00 	l.add r20,r20,r2

		        if (hdf[unit].file.size)	// File size will be 0 in direct card modes
  40be88:	84 43 00 1c 	l.lwz r2,0x1c(r3)
  40be8c:	bc 02 00 00 	l.sfeqi r2,0x0
  40be90:	10 00 00 07 	l.bf 40beac <HandleHDD.clone.1+0x1514>
  40be94:	18 40 00 80 	l.movhi r2,0x80
		            HardFileSeek(&hdf[unit], (lba>-1) ? lba : 0);
  40be98:	ac 94 ff ff 	l.xori r4,r20,0xffffffff
  40be9c:	b8 84 00 9f 	l.srai r4,r4,0x1f
  40bea0:	07 ff dc 7e 	l.jal 403098 <HardFileSeek>
  40bea4:	e0 94 20 03 	l.and r4,r20,r4
								sector++;
						}
		
		//				WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);

				        EnableFpga();
  40bea8:	18 40 00 80 	l.movhi r2,0x80
				        SPI(CMD_IDE_DATA_RD); // read data command
  40beac:	a8 42 00 24 	l.ori r2,r2,0x24
		            HardFileSeek(&hdf[unit], (lba>-1) ? lba : 0);

		        while (sector_count)
		        {
		            block_count = sector_count;
		            if (block_count > hdf[unit].sectors_per_block)
  40beb0:	a8 6e 00 00 	l.ori r3,r14,0x0
  40beb4:	07 ff d0 6d 	l.jal 400068 <__mulsi3>
  40beb8:	9c 80 11 44 	l.addi r4,r0,0x1144
  40bebc:	18 a0 00 41 	l.movhi r5,0x41
  40bec0:	a8 a5 a8 f8 	l.ori r5,r5,0xa8f8
  40bec4:	e1 6b 28 00 	l.add r11,r11,r5
  40bec8:	94 8b 01 36 	l.lhz r4,0x136(r11)
  40becc:	e4 b2 20 00 	l.sfleu r18,r4
  40bed0:	10 00 00 03 	l.bf 40bedc <HandleHDD.clone.1+0x1544>
  40bed4:	a8 72 00 00 	l.ori r3,r18,0x0
  40bed8:	a8 64 00 00 	l.ori r3,r4,0x0
  40bedc:	a4 63 ff ff 	l.andi r3,r3,0xffff
  40bee0:	ab 92 00 00 	l.ori r28,r18,0x0
  40bee4:	d4 01 18 04 	l.sw 0x4(r1),r3
  40bee8:	00 00 00 86 	l.j 40c100 <HandleHDD.clone.1+0x1768>
  40beec:	ab 43 00 00 	l.ori r26,r3,0x0
		                block_count = hdf[unit].sectors_per_block;

		            while (block_count)
		            {
		                while (!(GetFPGAStatus() & CMD_IDEDAT)); // wait for full write buffer
  40bef0:	07 ff db d4 	l.jal 402e40 <GetFPGAStatus>
  40bef4:	15 00 00 00 	l.nop 0x0
  40bef8:	a5 6b 00 08 	l.andi r11,r11,0x8
  40befc:	bc 0b 00 00 	l.sfeqi r11,0x0
  40bf00:	13 ff ff fc 	l.bf 40bef0 <HandleHDD.clone.1+0x1558>
  40bf04:	bc 1c 00 01 	l.sfeqi r28,0x1

		//				 decrease sector count
						if(sector_count!=1)
  40bf08:	10 00 00 16 	l.bf 40bf60 <HandleHDD.clone.1+0x15c8>
  40bf0c:	a8 6e 00 00 	l.ori r3,r14,0x0
						{
							if (sector == hdf[unit].sectors)
  40bf10:	07 ff d0 56 	l.jal 400068 <__mulsi3>
  40bf14:	9c 80 11 44 	l.addi r4,r0,0x1144
  40bf18:	18 60 00 41 	l.movhi r3,0x41
  40bf1c:	a8 63 a8 f8 	l.ori r3,r3,0xa8f8
  40bf20:	e1 6b 18 00 	l.add r11,r11,r3
  40bf24:	94 6b 01 34 	l.lhz r3,0x134(r11)
  40bf28:	e4 23 b0 00 	l.sfne r3,r22
  40bf2c:	10 00 00 0c 	l.bf 40bf5c <HandleHDD.clone.1+0x15c4>
  40bf30:	9e d6 00 01 	l.addi r22,r22,0x1
							{
								sector = 1;
								head++;
  40bf34:	9e 10 00 01 	l.addi r16,r16,0x1
								if (head == hdf[unit].heads)
  40bf38:	94 6b 01 32 	l.lhz r3,0x132(r11)
						if(sector_count!=1)
						{
							if (sector == hdf[unit].sectors)
							{
								sector = 1;
								head++;
  40bf3c:	a6 10 00 ff 	l.andi r16,r16,0xff
								if (head == hdf[unit].heads)
  40bf40:	e4 23 80 00 	l.sfne r3,r16
  40bf44:	10 00 00 07 	l.bf 40bf60 <HandleHDD.clone.1+0x15c8>
  40bf48:	9e c0 00 01 	l.addi r22,r0,0x1
								{
									head = 0;
									cylinder++;
  40bf4c:	e3 18 b0 00 	l.add r24,r24,r22
							{
								sector = 1;
								head++;
								if (head == hdf[unit].heads)
								{
									head = 0;
  40bf50:	9e 00 00 00 	l.addi r16,r0,0x0
									cylinder++;
  40bf54:	00 00 00 03 	l.j 40bf60 <HandleHDD.clone.1+0x15c8>
  40bf58:	a7 18 ff ff 	l.andi r24,r24,0xffff
								}
							}
							else
								sector++;
  40bf5c:	a6 d6 ff ff 	l.andi r22,r22,0xffff
						}
		
		//				WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);

				        EnableFpga();
  40bf60:	18 80 00 80 	l.movhi r4,0x80
  40bf64:	9c a0 00 22 	l.addi r5,r0,0x22
  40bf68:	a8 84 00 20 	l.ori r4,r4,0x20
				        SPI(CMD_IDE_DATA_RD); // read data command
  40bf6c:	9d 60 00 b0 	l.addi r11,r0,0xb0
								sector++;
						}
		
		//				WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);

				        EnableFpga();
  40bf70:	d4 04 28 00 	l.sw 0x0(r4),r5
				        SPI(CMD_IDE_DATA_RD); // read data command
  40bf74:	d4 02 58 00 	l.sw 0x0(r2),r11
				        SPI(0x00);
					    SPI(0x00);
  40bf78:	9c 80 00 00 	l.addi r4,r0,0x0
						}
		
		//				WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);

				        EnableFpga();
				        SPI(CMD_IDE_DATA_RD); // read data command
  40bf7c:	84 62 00 00 	l.lwz r3,0x0(r2)
				        SPI(0x00);
  40bf80:	9c 60 00 00 	l.addi r3,r0,0x0
  40bf84:	d4 02 18 00 	l.sw 0x0(r2),r3
  40bf88:	84 62 00 00 	l.lwz r3,0x0(r2)
					    SPI(0x00);
  40bf8c:	d4 02 20 00 	l.sw 0x0(r2),r4
  40bf90:	84 62 00 00 	l.lwz r3,0x0(r2)
				        SPI(0x00);
  40bf94:	d4 02 20 00 	l.sw 0x0(r2),r4
  40bf98:	84 62 00 00 	l.lwz r3,0x0(r2)
				        SPI(0x00);
  40bf9c:	d4 02 20 00 	l.sw 0x0(r2),r4
  40bfa0:	84 62 00 00 	l.lwz r3,0x0(r2)
				        SPI(0x00);
  40bfa4:	d4 02 20 00 	l.sw 0x0(r2),r4
  40bfa8:	84 62 00 00 	l.lwz r3,0x0(r2)
  40bfac:	18 60 00 41 	l.movhi r3,0x41
  40bfb0:	a8 63 a4 dc 	l.ori r3,r3,0xa4dc
				        for (i = 0; i < 512; i++)
				            sector_buffer[i] = SPI(0xFF);
  40bfb4:	9c a0 00 ff 	l.addi r5,r0,0xff
				        SPI(0x00);
					    SPI(0x00);
				        SPI(0x00);
				        SPI(0x00);
				        SPI(0x00);
				        for (i = 0; i < 512; i++)
  40bfb8:	19 60 00 41 	l.movhi r11,0x41
				            sector_buffer[i] = SPI(0xFF);
  40bfbc:	d4 02 28 00 	l.sw 0x0(r2),r5
				        SPI(0x00);
					    SPI(0x00);
				        SPI(0x00);
				        SPI(0x00);
				        SPI(0x00);
				        for (i = 0; i < 512; i++)
  40bfc0:	a9 6b a6 dc 	l.ori r11,r11,0xa6dc
				            sector_buffer[i] = SPI(0xFF);
  40bfc4:	84 82 00 00 	l.lwz r4,0x0(r2)
  40bfc8:	d8 03 20 00 	l.sb 0x0(r3),r4
  40bfcc:	9c 63 00 01 	l.addi r3,r3,0x1
				        SPI(0x00);
					    SPI(0x00);
				        SPI(0x00);
				        SPI(0x00);
				        SPI(0x00);
				        for (i = 0; i < 512; i++)
  40bfd0:	e4 23 58 00 	l.sfne r3,r11
  40bfd4:	13 ff ff f9 	l.bf 40bfb8 <HandleHDD.clone.1+0x1620>
  40bfd8:	9c a0 00 ff 	l.addi r5,r0,0xff
				            sector_buffer[i] = SPI(0xFF);
				        DisableFpga();
  40bfdc:	9c 80 00 20 	l.addi r4,r0,0x20
  40bfe0:	18 60 00 80 	l.movhi r3,0x80
  40bfe4:	e0 63 20 04 	l.or r3,r3,r4
  40bfe8:	d4 03 20 00 	l.sw 0x0(r3),r4
						switch(hdf[unit].type)
  40bfec:	a8 6e 00 00 	l.ori r3,r14,0x0
  40bff0:	07 ff d0 1e 	l.jal 400068 <__mulsi3>
  40bff4:	9c 80 11 44 	l.addi r4,r0,0x1144
  40bff8:	18 a0 00 41 	l.movhi r5,0x41
  40bffc:	a8 a5 a8 f8 	l.ori r5,r5,0xa8f8
  40c000:	e3 cb 28 00 	l.add r30,r11,r5
  40c004:	84 7e 00 00 	l.lwz r3,0x0(r30)
  40c008:	bd 43 00 06 	l.sfgtsi r3,0x6
  40c00c:	10 00 00 05 	l.bf 40c020 <HandleHDD.clone.1+0x1688>
  40c010:	bc 03 00 81 	l.sfeqi r3,0x81
  40c014:	bd 63 00 02 	l.sfgesi r3,0x2
  40c018:	10 00 00 1e 	l.bf 40c090 <HandleHDD.clone.1+0x16f8>
  40c01c:	bc 03 00 01 	l.sfeqi r3,0x1
  40c020:	0c 00 00 34 	l.bnf 40c0f0 <HandleHDD.clone.1+0x1758>
  40c024:	bd 94 00 00 	l.sfltsi r20,0x0
						{
							case HDF_FILE | HDF_SYNTHRDB:
							case HDF_FILE:
							    if (hdf[unit].file.size && (lba>-1))
  40c028:	10 00 00 31 	l.bf 40c0ec <HandleHDD.clone.1+0x1754>
  40c02c:	a8 6e 00 00 	l.ori r3,r14,0x0
  40c030:	07 ff d0 0e 	l.jal 400068 <__mulsi3>
  40c034:	9c 80 11 44 	l.addi r4,r0,0x1144
  40c038:	18 80 00 41 	l.movhi r4,0x41
  40c03c:	a8 84 a8 f8 	l.ori r4,r4,0xa8f8
  40c040:	e0 6b 20 00 	l.add r3,r11,r4
  40c044:	84 63 00 1c 	l.lwz r3,0x1c(r3)
  40c048:	e0 80 18 02 	l.sub r4,r0,r3
  40c04c:	e0 64 18 04 	l.or r3,r4,r3
  40c050:	bd 63 00 00 	l.sfgesi r3,0x0
  40c054:	10 00 00 26 	l.bf 40c0ec <HandleHDD.clone.1+0x1754>
  40c058:	18 a0 00 41 	l.movhi r5,0x41
							    {
							        FileWrite(&hdf[unit].file, sector_buffer);
  40c05c:	9d 6b 00 04 	l.addi r11,r11,0x4
  40c060:	a8 a5 a8 f8 	l.ori r5,r5,0xa8f8
  40c064:	18 80 00 41 	l.movhi r4,0x41
  40c068:	e3 cb 28 00 	l.add r30,r11,r5
  40c06c:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  40c070:	07 ff e2 19 	l.jal 4048d4 <FileWrite>
  40c074:	a8 7e 00 00 	l.ori r3,r30,0x0
							        FileSeek(&hdf[unit].file, 1, SEEK_CUR);
  40c078:	9c 80 00 01 	l.addi r4,r0,0x1
  40c07c:	a8 7e 00 00 	l.ori r3,r30,0x0
  40c080:	07 ff e4 af 	l.jal 40533c <FileSeek>
  40c084:	a8 a4 00 00 	l.ori r5,r4,0x0
							case HDF_CARDPART2:
							case HDF_CARDPART3:
								DebugMessage("Write HDF_Card");
								DEBUG2("SPB: %d",hdf[unit].sectors_per_block);
								MMC_Write(lba,sector_buffer);
								++lba;
  40c088:	00 00 00 1a 	l.j 40c0f0 <HandleHDD.clone.1+0x1758>
  40c08c:	9e 94 00 01 	l.addi r20,r20,0x1
							case HDF_CARD:
							case HDF_CARDPART0:
							case HDF_CARDPART1:
							case HDF_CARDPART2:
							case HDF_CARDPART3:
								DebugMessage("Write HDF_Card");
  40c090:	18 60 00 41 	l.movhi r3,0x41
  40c094:	07 ff dc 2a 	l.jal 40313c <DebugMessage>
  40c098:	a8 63 81 f6 	l.ori r3,r3,0x81f6
								DEBUG2("SPB: %d",hdf[unit].sectors_per_block);
  40c09c:	19 60 00 41 	l.movhi r11,0x41
  40c0a0:	a9 6b a3 50 	l.ori r11,r11,0xa350
  40c0a4:	90 6b 00 00 	l.lbs r3,0x0(r11)
  40c0a8:	bc 03 00 00 	l.sfeqi r3,0x0
  40c0ac:	10 00 00 0c 	l.bf 40c0dc <HandleHDD.clone.1+0x1744>
  40c0b0:	15 00 00 00 	l.nop 0x0
  40c0b4:	94 7e 01 36 	l.lhz r3,0x136(r30)
  40c0b8:	18 80 00 41 	l.movhi r4,0x41
  40c0bc:	d4 01 18 00 	l.sw 0x0(r1),r3
  40c0c0:	18 60 00 41 	l.movhi r3,0x41
  40c0c4:	a8 84 82 14 	l.ori r4,r4,0x8214
  40c0c8:	07 ff e0 ef 	l.jal 404484 <sprintf>
  40c0cc:	a8 63 a3 60 	l.ori r3,r3,0xa360
  40c0d0:	18 60 00 41 	l.movhi r3,0x41
  40c0d4:	07 ff dc 1a 	l.jal 40313c <DebugMessage>
  40c0d8:	a8 63 a3 60 	l.ori r3,r3,0xa360
								MMC_Write(lba,sector_buffer);
  40c0dc:	18 80 00 41 	l.movhi r4,0x41
  40c0e0:	a8 74 00 00 	l.ori r3,r20,0x0
  40c0e4:	07 ff e1 86 	l.jal 4046fc <MMC_Write>
  40c0e8:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
								++lba;
  40c0ec:	9e 94 00 01 	l.addi r20,r20,0x1
								break;
						}
		                block_count--;  // decrease block count
  40c0f0:	9f 5a ff ff 	l.addi r26,r26,0xffffffff
		                sector_count--; // decrease sector count
  40c0f4:	9f 9c ff ff 	l.addi r28,r28,0xffffffff
								DEBUG2("SPB: %d",hdf[unit].sectors_per_block);
								MMC_Write(lba,sector_buffer);
								++lba;
								break;
						}
		                block_count--;  // decrease block count
  40c0f8:	a7 5a ff ff 	l.andi r26,r26,0xffff
		                sector_count--; // decrease sector count
  40c0fc:	a7 9c ff ff 	l.andi r28,r28,0xffff
		        {
		            block_count = sector_count;
		            if (block_count > hdf[unit].sectors_per_block)
		                block_count = hdf[unit].sectors_per_block;

		            while (block_count)
  40c100:	bc 3a 00 00 	l.sfnei r26,0x0
  40c104:	13 ff ff 7b 	l.bf 40bef0 <HandleHDD.clone.1+0x1558>
  40c108:	8d 01 02 0e 	l.lbz r8,0x20e(r1)
								break;
						}
		                block_count--;  // decrease block count
		                sector_count--; // decrease sector count
		            }
					WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
  40c10c:	9c 80 ff f0 	l.addi r4,r0,0xfffffff0
		        {
		            block_count = sector_count;
		            if (block_count > hdf[unit].sectors_per_block)
		                block_count = hdf[unit].sectors_per_block;

		            while (block_count)
  40c110:	84 61 00 04 	l.lwz r3,0x4(r1)
								break;
						}
		                block_count--;  // decrease block count
		                sector_count--; // decrease sector count
		            }
					WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
  40c114:	e1 08 20 03 	l.and r8,r8,r4
		        {
		            block_count = sector_count;
		            if (block_count > hdf[unit].sectors_per_block)
		                block_count = hdf[unit].sectors_per_block;

		            while (block_count)
  40c118:	e2 52 18 02 	l.sub r18,r18,r3
								break;
						}
		                block_count--;  // decrease block count
		                sector_count--; // decrease sector count
		            }
					WriteTaskFile(0, tfr[2], sector, (unsigned char)cylinder, (unsigned char)(cylinder >> 8), (tfr[6] & 0xF0) | head);
  40c11c:	8c 81 02 0a 	l.lbz r4,0x20a(r1)
  40c120:	b8 f8 00 48 	l.srli r7,r24,0x8
  40c124:	a8 7a 00 00 	l.ori r3,r26,0x0
  40c128:	a4 b6 00 ff 	l.andi r5,r22,0xff
  40c12c:	a4 d8 00 ff 	l.andi r6,r24,0xff
  40c130:	e1 10 40 04 	l.or r8,r16,r8
  40c134:	07 ff db 5d 	l.jal 402ea8 <WriteTaskFile>
  40c138:	a6 52 ff ff 	l.andi r18,r18,0xffff

		            if (sector_count)
  40c13c:	bc 12 00 00 	l.sfeqi r18,0x0
  40c140:	13 ff fb 47 	l.bf 40ae5c <HandleHDD.clone.1+0x4c4>
  40c144:	15 00 00 00 	l.nop 0x0
		                WriteStatus(IDE_STATUS_IRQ);
  40c148:	07 ff db 8e 	l.jal 402f80 <WriteStatus>
  40c14c:	9c 60 00 10 	l.addi r3,r0,0x10
		            HardFileSeek(&hdf[unit], (lba>-1) ? lba : 0);

		        while (sector_count)
		        {
		            block_count = sector_count;
		            if (block_count > hdf[unit].sectors_per_block)
  40c150:	03 ff ff 59 	l.j 40beb4 <HandleHDD.clone.1+0x151c>
  40c154:	a8 6e 00 00 	l.ori r3,r14,0x0
        }
        else
        {
            printf("Unknown ATA command\r");

            printf("IDE:");
  40c158:	9d c1 02 09 	l.addi r14,r1,0x209
		                WriteStatus(IDE_STATUS_END | IDE_STATUS_IRQ);
		        }
        }
        else
        {
            printf("Unknown ATA command\r");
  40c15c:	a8 63 82 1c 	l.ori r3,r3,0x821c
  40c160:	07 ff e1 4d 	l.jal 404694 <printf>
  40c164:	9e 52 00 07 	l.addi r18,r18,0x7

            printf("IDE:");
  40c168:	18 60 00 41 	l.movhi r3,0x41
  40c16c:	07 ff e1 4a 	l.jal 404694 <printf>
  40c170:	a8 63 81 29 	l.ori r3,r3,0x8129
            for (i = 1; i < 7; i++)
                printf("%02X.", tfr[i]);
  40c174:	8c 6e 00 00 	l.lbz r3,0x0(r14)
  40c178:	d4 01 18 00 	l.sw 0x0(r1),r3
  40c17c:	18 60 00 41 	l.movhi r3,0x41
  40c180:	9d ce 00 01 	l.addi r14,r14,0x1
  40c184:	07 ff e1 44 	l.jal 404694 <printf>
  40c188:	a8 63 81 2e 	l.ori r3,r3,0x812e
        else
        {
            printf("Unknown ATA command\r");

            printf("IDE:");
            for (i = 1; i < 7; i++)
  40c18c:	e4 2e 90 00 	l.sfne r14,r18
  40c190:	13 ff ff f9 	l.bf 40c174 <HandleHDD.clone.1+0x17dc>
  40c194:	15 00 00 00 	l.nop 0x0
                printf("%02X.", tfr[i]);
            printf("%02X\r", tfr[7]);
  40c198:	18 60 00 41 	l.movhi r3,0x41
  40c19c:	d4 01 10 00 	l.sw 0x0(r1),r2
  40c1a0:	07 ff e1 3d 	l.jal 404694 <printf>
  40c1a4:	a8 63 8e 1d 	l.ori r3,r3,0x8e1d
            WriteTaskFile(0x04, tfr[2], tfr[3], tfr[4], tfr[5], tfr[6]);
  40c1a8:	8c 81 02 0a 	l.lbz r4,0x20a(r1)
  40c1ac:	8c a1 02 0b 	l.lbz r5,0x20b(r1)
  40c1b0:	8c c1 02 0c 	l.lbz r6,0x20c(r1)
  40c1b4:	8c e1 02 0d 	l.lbz r7,0x20d(r1)
  40c1b8:	9c 60 00 04 	l.addi r3,r0,0x4
  40c1bc:	07 ff db 3b 	l.jal 402ea8 <WriteTaskFile>
  40c1c0:	a9 10 00 00 	l.ori r8,r16,0x0
            WriteStatus(IDE_STATUS_END | IDE_STATUS_IRQ | IDE_STATUS_ERR);
  40c1c4:	9c 60 00 91 	l.addi r3,r0,0x91
  40c1c8:	07 ff db 6e 	l.jal 402f80 <WriteStatus>
  40c1cc:	15 00 00 00 	l.nop 0x0
        }
        DISKLED_OFF;
    }

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L3);
}
  40c1d0:	9c 21 02 3c 	l.addi r1,r1,0x23c
  40c1d4:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  40c1d8:	84 41 ff d4 	l.lwz r2,0xffffffd4(r1)
  40c1dc:	85 c1 ff d8 	l.lwz r14,0xffffffd8(r1)
  40c1e0:	86 01 ff dc 	l.lwz r16,0xffffffdc(r1)
  40c1e4:	86 41 ff e0 	l.lwz r18,0xffffffe0(r1)
  40c1e8:	86 81 ff e4 	l.lwz r20,0xffffffe4(r1)
  40c1ec:	86 c1 ff e8 	l.lwz r22,0xffffffe8(r1)
  40c1f0:	87 01 ff ec 	l.lwz r24,0xffffffec(r1)
  40c1f4:	87 41 ff f0 	l.lwz r26,0xfffffff0(r1)
  40c1f8:	87 81 ff f4 	l.lwz r28,0xfffffff4(r1)
  40c1fc:	44 00 48 00 	l.jr r9
  40c200:	87 c1 ff f8 	l.lwz r30,0xfffffff8(r1)

0040c204 <HandleFpga>:
{
  DEBUG_FUNC_IN(DEBUG_F_MAIN | DEBUG_L3);

  unsigned char  c1, c2;

  LEDS(led = !led);
  40c204:	18 60 00 41 	l.movhi r3,0x41
}


//// HandleFpga() ////
void HandleFpga(void)
{
  40c208:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  40c20c:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
  40c210:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
  DEBUG_FUNC_IN(DEBUG_F_MAIN | DEBUG_L3);

  unsigned char  c1, c2;

  LEDS(led = !led);
  40c214:	a8 63 a3 88 	l.ori r3,r3,0xa388
  40c218:	18 80 00 80 	l.movhi r4,0x80
  40c21c:	8c 43 00 00 	l.lbz r2,0x0(r3)
  40c220:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
  EnableFpga();
  c1 = SPI(0); // cmd request and drive number
  40c224:	9c a0 00 00 	l.addi r5,r0,0x0
{
  DEBUG_FUNC_IN(DEBUG_F_MAIN | DEBUG_L3);

  unsigned char  c1, c2;

  LEDS(led = !led);
  40c228:	b8 42 00 5f 	l.srli r2,r2,0x1f
}


//// HandleFpga() ////
void HandleFpga(void)
{
  40c22c:	9c 21 ff f4 	l.addi r1,r1,0xfffffff4
  DEBUG_FUNC_IN(DEBUG_F_MAIN | DEBUG_L3);

  unsigned char  c1, c2;

  LEDS(led = !led);
  40c230:	d8 03 10 00 	l.sb 0x0(r3),r2
  40c234:	a8 64 00 04 	l.ori r3,r4,0x4
  40c238:	a4 42 ff ff 	l.andi r2,r2,0xffff
  40c23c:	dc 03 10 00 	l.sh 0x0(r3),r2
  EnableFpga();
  40c240:	a8 64 00 20 	l.ori r3,r4,0x20
  40c244:	9c 40 00 22 	l.addi r2,r0,0x22
  c1 = SPI(0); // cmd request and drive number
  40c248:	a8 84 00 24 	l.ori r4,r4,0x24
  DEBUG_FUNC_IN(DEBUG_F_MAIN | DEBUG_L3);

  unsigned char  c1, c2;

  LEDS(led = !led);
  EnableFpga();
  40c24c:	d4 03 10 00 	l.sw 0x0(r3),r2
  c1 = SPI(0); // cmd request and drive number
  40c250:	d4 04 28 00 	l.sw 0x0(r4),r5
  40c254:	84 44 00 00 	l.lwz r2,0x0(r4)
  c2 = SPI(0); // track number
  40c258:	d4 04 28 00 	l.sw 0x0(r4),r5

  unsigned char  c1, c2;

  LEDS(led = !led);
  EnableFpga();
  c1 = SPI(0); // cmd request and drive number
  40c25c:	a4 42 00 ff 	l.andi r2,r2,0xff
  c2 = SPI(0); // track number
  40c260:	85 c4 00 00 	l.lwz r14,0x0(r4)
  SPI(0);
  40c264:	d4 04 28 00 	l.sw 0x0(r4),r5
  unsigned char  c1, c2;

  LEDS(led = !led);
  EnableFpga();
  c1 = SPI(0); // cmd request and drive number
  c2 = SPI(0); // track number
  40c268:	a5 ce 00 ff 	l.andi r14,r14,0xff
  SPI(0);
  40c26c:	84 a4 00 00 	l.lwz r5,0x0(r4)
  SPI(0);
  40c270:	9c a0 00 00 	l.addi r5,r0,0x0
  40c274:	d4 04 28 00 	l.sw 0x0(r4),r5
  40c278:	84 a4 00 00 	l.lwz r5,0x0(r4)
  SPI(0);
  40c27c:	9c a0 00 00 	l.addi r5,r0,0x0
  40c280:	d4 04 28 00 	l.sw 0x0(r4),r5
  40c284:	84 a4 00 00 	l.lwz r5,0x0(r4)
  SPI(0);
  40c288:	9c a0 00 00 	l.addi r5,r0,0x0
  40c28c:	d4 04 28 00 	l.sw 0x0(r4),r5
  40c290:	84 84 00 00 	l.lwz r4,0x0(r4)
  DisableFpga();
  40c294:	9c 80 00 20 	l.addi r4,r0,0x20
  40c298:	d4 03 20 00 	l.sw 0x0(r3),r4
void HandleFDD(unsigned char c1, unsigned char c2)
{
  DEBUG_FUNC_IN(DEBUG_F_FDD | DEBUG_L3);

    unsigned char sel;
    drives = (c1 >> 4) & 0x03; // number of active floppy drives
  40c29c:	b8 82 00 44 	l.srli r4,r2,0x4
  40c2a0:	18 60 00 41 	l.movhi r3,0x41
  40c2a4:	a4 84 00 03 	l.andi r4,r4,0x3
  40c2a8:	a8 63 a3 5c 	l.ori r3,r3,0xa35c
  40c2ac:	d8 03 20 00 	l.sb 0x0(r3),r4

    if (c1 & CMD_RDTRK)
  40c2b0:	a4 62 00 01 	l.andi r3,r2,0x1
  40c2b4:	e4 03 28 00 	l.sfeq r3,r5
  40c2b8:	10 00 00 0b 	l.bf 40c2e4 <HandleFpga+0xe0>
  40c2bc:	b8 62 00 46 	l.srli r3,r2,0x6
    {
        DISKLED_ON;
        sel = (c1 >> 6) & 0x03;
        df[sel].track = c2;
  40c2c0:	07 ff cf 6a 	l.jal 400068 <__mulsi3>
  40c2c4:	9c 80 02 bc 	l.addi r4,r0,0x2bc
  40c2c8:	18 80 00 41 	l.movhi r4,0x41
  40c2cc:	a8 84 f1 08 	l.ori r4,r4,0xf108
  40c2d0:	e0 6b 20 00 	l.add r3,r11,r4
        ReadTrack(&df[sel]);
  40c2d4:	04 00 08 64 	l.jal 40e464 <ReadTrack>
  40c2d8:	d8 03 72 a1 	l.sb 0x2a1(r3),r14

  HandleFDD(c1, c2);
  HandleHDD(c1, c2);
  40c2dc:	00 00 00 0f 	l.j 40c318 <HandleFpga+0x114>
  40c2e0:	a8 62 00 00 	l.ori r3,r2,0x0
        DISKLED_OFF;
    }
    else if (c1 & CMD_WRTRK)
  40c2e4:	a4 62 00 02 	l.andi r3,r2,0x2
  40c2e8:	bc 03 00 00 	l.sfeqi r3,0x0
  40c2ec:	10 00 00 0b 	l.bf 40c318 <HandleFpga+0x114>
  40c2f0:	a8 62 00 00 	l.ori r3,r2,0x0
    {
        DISKLED_ON;
        sel = (c1 >> 6) & 0x03;
        df[sel].track = c2;
  40c2f4:	b8 62 00 46 	l.srli r3,r2,0x6
  40c2f8:	07 ff cf 5c 	l.jal 400068 <__mulsi3>
  40c2fc:	9c 80 02 bc 	l.addi r4,r0,0x2bc
  40c300:	18 a0 00 41 	l.movhi r5,0x41
  40c304:	a8 a5 f1 08 	l.ori r5,r5,0xf108
  40c308:	e0 6b 28 00 	l.add r3,r11,r5
        WriteTrack(&df[sel]);
  40c30c:	07 ff e7 91 	l.jal 406150 <WriteTrack>
  40c310:	d8 03 72 a1 	l.sb 0x2a1(r3),r14
  40c314:	a8 62 00 00 	l.ori r3,r2,0x0
  40c318:	07 ff f9 a0 	l.jal 40a998 <HandleHDD.clone.1>
  40c31c:	18 40 00 80 	l.movhi r2,0x80

void UpdateDriveStatus(void)
{
  DEBUG_FUNC_IN(DEBUG_F_FDD | DEBUG_L2);

    EnableFpga();
  40c320:	a8 82 00 20 	l.ori r4,r2,0x20
  40c324:	9c 60 00 22 	l.addi r3,r0,0x22
    SPI(0x10);
  40c328:	a8 42 00 24 	l.ori r2,r2,0x24

void UpdateDriveStatus(void)
{
  DEBUG_FUNC_IN(DEBUG_F_FDD | DEBUG_L2);

    EnableFpga();
  40c32c:	d4 04 18 00 	l.sw 0x0(r4),r3
    SPI(0x10);
  40c330:	9c 60 00 10 	l.addi r3,r0,0x10
  40c334:	d4 02 18 00 	l.sw 0x0(r2),r3
  40c338:	84 62 00 00 	l.lwz r3,0x0(r2)
    SPI(df[0].status | (df[1].status << 1) | (df[2].status << 2) | (df[3].status << 3));
  40c33c:	18 60 00 41 	l.movhi r3,0x41
  40c340:	a8 63 f1 08 	l.ori r3,r3,0xf108
  40c344:	8c c3 05 78 	l.lbz r6,0x578(r3)
  40c348:	8c a3 02 bc 	l.lbz r5,0x2bc(r3)
  40c34c:	b8 c6 00 02 	l.slli r6,r6,0x2
  40c350:	e0 a5 28 00 	l.add r5,r5,r5
  40c354:	e0 a5 30 04 	l.or r5,r5,r6
  40c358:	8c c3 00 00 	l.lbz r6,0x0(r3)
  40c35c:	8c 63 08 34 	l.lbz r3,0x834(r3)
  40c360:	b8 63 00 03 	l.slli r3,r3,0x3
  40c364:	e0 a5 30 04 	l.or r5,r5,r6
  40c368:	e0 a5 18 04 	l.or r5,r5,r3
  40c36c:	d4 02 28 00 	l.sw 0x0(r2),r5
  40c370:	84 42 00 00 	l.lwz r2,0x0(r2)
    DisableFpga();
  40c374:	9c 40 00 20 	l.addi r2,r0,0x20
  40c378:	d4 04 10 00 	l.sw 0x0(r4),r2

  UpdateDriveStatus();

  DEBUG_FUNC_OUT(DEBUG_F_MAIN | DEBUG_L3);
}
  40c37c:	9c 21 00 0c 	l.addi r1,r1,0xc
  40c380:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  40c384:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
  40c388:	44 00 48 00 	l.jr r9
  40c38c:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

0040c390 <txbuf_emit.50045.clone.2>:

// txbuf_emit()
static int txbuf_emit(const int wait)
{
  int ret = 0;
  if ((txln > 0) && (TX_READY() || wait)) {
  40c390:	18 60 00 42 	l.movhi r3,0x42
  if (*c==0) return NULL;
  else return c;
}

// txbuf_emit()
static int txbuf_emit(const int wait)
  40c394:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
{
  int ret = 0;
  if ((txln > 0) && (TX_READY() || wait)) {
  40c398:	a8 63 09 c0 	l.ori r3,r3,0x9c0
  if (*c==0) return NULL;
  else return c;
}

// txbuf_emit()
static int txbuf_emit(const int wait)
  40c39c:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
{
  int ret = 0;
  if ((txln > 0) && (TX_READY() || wait)) {
  40c3a0:	8c 83 00 00 	l.lbz r4,0x0(r3)
  40c3a4:	bc 04 00 00 	l.sfeqi r4,0x0
  40c3a8:	10 00 00 1a 	l.bf 40c410 <txbuf_emit.50045.clone.2+0x80>
  40c3ac:	9d 60 ff ff 	l.addi r11,r0,0xffffffff
  40c3b0:	18 c0 00 80 	l.movhi r6,0x80
    TX_CHAR(txbuf[txrp]);
  40c3b4:	18 40 00 42 	l.movhi r2,0x42

// txbuf_emit()
static int txbuf_emit(const int wait)
{
  int ret = 0;
  if ((txln > 0) && (TX_READY() || wait)) {
  40c3b8:	a8 66 00 14 	l.ori r3,r6,0x14
    TX_CHAR(txbuf[txrp]);
  40c3bc:	a8 42 09 b8 	l.ori r2,r2,0x9b8

// txbuf_emit()
static int txbuf_emit(const int wait)
{
  int ret = 0;
  if ((txln > 0) && (TX_READY() || wait)) {
  40c3c0:	84 63 00 00 	l.lwz r3,0x0(r3)
    TX_CHAR(txbuf[txrp]);
  40c3c4:	18 60 00 42 	l.movhi r3,0x42
  40c3c8:	a8 c6 00 0c 	l.ori r6,r6,0xc
  40c3cc:	a8 63 09 b4 	l.ori r3,r3,0x9b4
  40c3d0:	8c a3 00 00 	l.lbz r5,0x0(r3)
  40c3d4:	e0 e5 10 00 	l.add r7,r5,r2
    if (++txrp >= TXBUFLEN) txrp = 0;
  40c3d8:	9c a5 00 01 	l.addi r5,r5,0x1
// txbuf_emit()
static int txbuf_emit(const int wait)
{
  int ret = 0;
  if ((txln > 0) && (TX_READY() || wait)) {
    TX_CHAR(txbuf[txrp]);
  40c3dc:	90 e7 00 00 	l.lbs r7,0x0(r7)
    if (++txrp >= TXBUFLEN) txrp = 0;
  40c3e0:	a4 a5 00 ff 	l.andi r5,r5,0xff
// txbuf_emit()
static int txbuf_emit(const int wait)
{
  int ret = 0;
  if ((txln > 0) && (TX_READY() || wait)) {
    TX_CHAR(txbuf[txrp]);
  40c3e4:	d4 06 38 00 	l.sw 0x0(r6),r7
    if (++txrp >= TXBUFLEN) txrp = 0;
  40c3e8:	bc a5 00 07 	l.sfleui r5,0x7
  40c3ec:	10 00 00 04 	l.bf 40c3fc <txbuf_emit.50045.clone.2+0x6c>
  40c3f0:	d8 03 28 00 	l.sb 0x0(r3),r5
  40c3f4:	9c 40 00 00 	l.addi r2,r0,0x0
  40c3f8:	d8 03 10 00 	l.sb 0x0(r3),r2
    txln--;
  40c3fc:	18 60 00 42 	l.movhi r3,0x42
  40c400:	9c 84 ff ff 	l.addi r4,r4,0xffffffff
  40c404:	a8 63 09 c0 	l.ori r3,r3,0x9c0
}

// txbuf_emit()
static int txbuf_emit(const int wait)
{
  int ret = 0;
  40c408:	9d 60 00 00 	l.addi r11,r0,0x0
  if ((txln > 0) && (TX_READY() || wait)) {
    TX_CHAR(txbuf[txrp]);
    if (++txrp >= TXBUFLEN) txrp = 0;
    txln--;
  40c40c:	d8 03 20 00 	l.sb 0x0(r3),r4
  } else ret = -1;
  //SPIN(); // just some delay
  return ret;
}
  40c410:	9c 21 00 04 	l.addi r1,r1,0x4
  40c414:	44 00 48 00 	l.jr r9
  40c418:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

0040c41c <txbuf_put.50049>:

// txbuf_put()
static int txbuf_put(const char c)
{
  40c41c:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
  int ret = 0;
  if (txln < TXBUFLEN) {
  40c420:	18 40 00 42 	l.movhi r2,0x42
  return ret;
}

// txbuf_put()
static int txbuf_put(const char c)
{
  40c424:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  int ret = 0;
  if (txln < TXBUFLEN) {
  40c428:	a8 42 09 c0 	l.ori r2,r2,0x9c0
  return ret;
}

// txbuf_put()
static int txbuf_put(const char c)
{
  40c42c:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
  int ret = 0;
  if (txln < TXBUFLEN) {
  40c430:	8c a2 00 00 	l.lbz r5,0x0(r2)
  40c434:	bc 45 00 07 	l.sfgtui r5,0x7
  40c438:	10 00 00 15 	l.bf 40c48c <txbuf_put.50049+0x70>
  40c43c:	9c 40 ff ff 	l.addi r2,r0,0xffffffff
    txbuf[txwp] = c;
  40c440:	18 80 00 42 	l.movhi r4,0x42
  40c444:	18 e0 00 42 	l.movhi r7,0x42
  40c448:	a8 84 09 b5 	l.ori r4,r4,0x9b5
  40c44c:	a8 e7 09 b8 	l.ori r7,r7,0x9b8
  40c450:	8c 44 00 00 	l.lbz r2,0x0(r4)
  40c454:	e0 c2 38 00 	l.add r6,r2,r7
    if (++txwp >= TXBUFLEN) txwp = 0;
  40c458:	9c 42 00 01 	l.addi r2,r2,0x1
// txbuf_put()
static int txbuf_put(const char c)
{
  int ret = 0;
  if (txln < TXBUFLEN) {
    txbuf[txwp] = c;
  40c45c:	d8 06 18 00 	l.sb 0x0(r6),r3
    if (++txwp >= TXBUFLEN) txwp = 0;
  40c460:	a4 42 00 ff 	l.andi r2,r2,0xff
  40c464:	bc a2 00 07 	l.sfleui r2,0x7
  40c468:	10 00 00 04 	l.bf 40c478 <txbuf_put.50049+0x5c>
  40c46c:	d8 04 10 00 	l.sb 0x0(r4),r2
  40c470:	9c e0 00 00 	l.addi r7,r0,0x0
  40c474:	d8 04 38 00 	l.sb 0x0(r4),r7
    txln++;
  40c478:	18 40 00 42 	l.movhi r2,0x42
  40c47c:	9c a5 00 01 	l.addi r5,r5,0x1
  40c480:	a8 42 09 c0 	l.ori r2,r2,0x9c0
  40c484:	d8 02 28 00 	l.sb 0x0(r2),r5
}

// txbuf_put()
static int txbuf_put(const char c)
{
  int ret = 0;
  40c488:	9c 40 00 00 	l.addi r2,r0,0x0
  if (txln < TXBUFLEN) {
    txbuf[txwp] = c;
    if (++txwp >= TXBUFLEN) txwp = 0;
    txln++;
  } else ret = -1;
  txbuf_emit(1); // TODO debug why NOT sending the char immediately doesn't work properly!
  40c48c:	07 ff ff c1 	l.jal 40c390 <txbuf_emit.50045.clone.2>
  40c490:	15 00 00 00 	l.nop 0x0
  return ret;
}
  40c494:	9c 21 00 08 	l.addi r1,r1,0x8
  40c498:	a9 62 00 00 	l.ori r11,r2,0x0
  40c49c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  40c4a0:	44 00 48 00 	l.jr r9
  40c4a4:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

0040c4a8 <txbuf_puts.50053>:

// txbuf_puts()
static int txbuf_puts(const char* const s)
{
  40c4a8:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
  40c4ac:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  40c4b0:	a8 43 00 00 	l.ori r2,r3,0x0
  40c4b4:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
  const char* p = s;
  int ret = 0;
  while (*p != '\0') {
  40c4b8:	00 00 00 04 	l.j 40c4c8 <txbuf_puts.50053+0x20>
  40c4bc:	9d 60 00 00 	l.addi r11,r0,0x0
    ret = txbuf_put(*(p++));
  40c4c0:	07 ff ff d7 	l.jal 40c41c <txbuf_put.50049>
  40c4c4:	9c 42 00 01 	l.addi r2,r2,0x1
// txbuf_puts()
static int txbuf_puts(const char* const s)
{
  const char* p = s;
  int ret = 0;
  while (*p != '\0') {
  40c4c8:	90 62 00 00 	l.lbs r3,0x0(r2)
  40c4cc:	bc 23 00 00 	l.sfnei r3,0x0
  40c4d0:	13 ff ff fc 	l.bf 40c4c0 <txbuf_puts.50053+0x18>
  40c4d4:	15 00 00 00 	l.nop 0x0
    ret = txbuf_put(*(p++));
  }
  return ret;
}
  40c4d8:	9c 21 00 08 	l.addi r1,r1,0x8
  40c4dc:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  40c4e0:	44 00 48 00 	l.jr r9
  40c4e4:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

0040c4e8 <mon_illcmd.50060>:

// mon_illcmd()
static void mon_illcmd()
{
  rxwp = 0;
  40c4e8:	18 60 00 42 	l.movhi r3,0x42
  return ret;
}

// mon_illcmd()
static void mon_illcmd()
{
  40c4ec:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
  rxwp = 0;
  40c4f0:	a8 63 09 71 	l.ori r3,r3,0x971
  40c4f4:	9c 40 00 00 	l.addi r2,r0,0x0
  return ret;
}

// mon_illcmd()
static void mon_illcmd()
{
  40c4f8:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  rxwp = 0;
  40c4fc:	d8 03 10 00 	l.sb 0x0(r3),r2
  txbuf_puts("Unknown command. Enter 'h' for help.\r");
  40c500:	18 60 00 41 	l.movhi r3,0x41
  return ret;
}

// mon_illcmd()
static void mon_illcmd()
{
  40c504:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
  rxwp = 0;
  txbuf_puts("Unknown command. Enter 'h' for help.\r");
  40c508:	07 ff ff e8 	l.jal 40c4a8 <txbuf_puts.50053>
  40c50c:	a8 63 82 31 	l.ori r3,r3,0x8231
  txbuf_puts(MON_PROMPT);
  40c510:	18 60 00 41 	l.movhi r3,0x41
}
  40c514:	9c 21 00 08 	l.addi r1,r1,0x8
// mon_illcmd()
static void mon_illcmd()
{
  rxwp = 0;
  txbuf_puts("Unknown command. Enter 'h' for help.\r");
  txbuf_puts(MON_PROMPT);
  40c518:	a8 63 82 57 	l.ori r3,r3,0x8257
}
  40c51c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
// mon_illcmd()
static void mon_illcmd()
{
  rxwp = 0;
  txbuf_puts("Unknown command. Enter 'h' for help.\r");
  txbuf_puts(MON_PROMPT);
  40c520:	03 ff ff e2 	l.j 40c4a8 <txbuf_puts.50053>
  40c524:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

0040c528 <HandleSerial>:
  }
}

// HandleSerial()
void HandleSerial()
{
  40c528:	d7 e1 17 f0 	l.sw 0xfffffff0(r1),r2
  char rx;

  txbuf_emit(1);

  // wait for monitor enabled, in that case parse commands
  if (mon_en) {
  40c52c:	18 40 00 42 	l.movhi r2,0x42
  }
}

// HandleSerial()
void HandleSerial()
{
  40c530:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  40c534:	d7 e1 77 f4 	l.sw 0xfffffff4(r1),r14
  40c538:	d7 e1 87 f8 	l.sw 0xfffffff8(r1),r16
  char rx;

  txbuf_emit(1);

  // wait for monitor enabled, in that case parse commands
  if (mon_en) {
  40c53c:	a8 42 09 68 	l.ori r2,r2,0x968
void HandleSerial()
{
  int cmd=0;
  char rx;

  txbuf_emit(1);
  40c540:	07 ff ff 94 	l.jal 40c390 <txbuf_emit.50045.clone.2>
  40c544:	9c 21 ff dc 	l.addi r1,r1,0xffffffdc

  // wait for monitor enabled, in that case parse commands
  if (mon_en) {
  40c548:	84 42 00 00 	l.lwz r2,0x0(r2)
  40c54c:	bc 02 00 00 	l.sfeqi r2,0x0
  40c550:	10 00 01 c7 	l.bf 40cc6c <HandleSerial+0x744>
  40c554:	18 40 00 80 	l.movhi r2,0x80
static int mon_parsecmd()
{
  char rx;
  int ret = 0;

  if(RX_READY()) {
  40c558:	a8 62 00 14 	l.ori r3,r2,0x14
  40c55c:	84 63 00 00 	l.lwz r3,0x0(r3)
  40c560:	a4 63 00 01 	l.andi r3,r3,0x1
  40c564:	bc 03 00 00 	l.sfeqi r3,0x0
  40c568:	10 00 02 31 	l.bf 40ce2c <HandleSerial+0x904>
  40c56c:	a8 42 00 10 	l.ori r2,r2,0x10
    rx = RX_CHAR();
  40c570:	84 42 00 00 	l.lwz r2,0x0(r2)
  40c574:	b8 42 00 18 	l.slli r2,r2,0x18
  40c578:	b8 42 00 98 	l.srai r2,r2,0x18
    switch (rx) {
  40c57c:	bc 02 00 0d 	l.sfeqi r2,0xd
  40c580:	10 00 00 09 	l.bf 40c5a4 <HandleSerial+0x7c>
  40c584:	bc 02 00 1b 	l.sfeqi r2,0x1b
  40c588:	10 00 00 40 	l.bf 40c688 <HandleSerial+0x160>
  40c58c:	19 c0 00 42 	l.movhi r14,0x42
  40c590:	bc 02 00 08 	l.sfeqi r2,0x8
  40c594:	0c 00 00 46 	l.bnf 40c6ac <HandleSerial+0x184>
  40c598:	a9 ce 09 71 	l.ori r14,r14,0x971
          ret = 1;
        }
        else txbuf_puts(MON_PROMPT);
        break;
      case MON_BS:
        if (rxwp > 0) {
  40c59c:	00 00 00 30 	l.j 40c65c <HandleSerial+0x134>
  40c5a0:	8e 0e 00 00 	l.lbz r16,0x0(r14)

  if(RX_READY()) {
    rx = RX_CHAR();
    switch (rx) {
      case MON_EOL:
        txbuf_put(rx);
  40c5a4:	a8 62 00 00 	l.ori r3,r2,0x0
  40c5a8:	07 ff ff 9d 	l.jal 40c41c <txbuf_put.50049>
  40c5ac:	18 40 00 42 	l.movhi r2,0x42
        //txbuf_put('\n');
        if (rxwp) {
  40c5b0:	a8 42 09 71 	l.ori r2,r2,0x971
  40c5b4:	8c 42 00 00 	l.lbz r2,0x0(r2)
  40c5b8:	bc 02 00 00 	l.sfeqi r2,0x0
  40c5bc:	0c 00 00 05 	l.bnf 40c5d0 <HandleSerial+0xa8>
  40c5c0:	18 60 00 41 	l.movhi r3,0x41
  40c5c4:	00 00 00 36 	l.j 40c69c <HandleSerial+0x174>
  40c5c8:	15 00 00 00 	l.nop 0x0
          while (rxbuf[rxwp-1]==MON_BLANK) rxwp--;
  40c5cc:	a8 46 00 00 	l.ori r2,r6,0x0
  40c5d0:	18 60 00 42 	l.movhi r3,0x42
  40c5d4:	9c c2 ff ff 	l.addi r6,r2,0xffffffff
  40c5d8:	a8 63 09 74 	l.ori r3,r3,0x974
  40c5dc:	e0 82 18 00 	l.add r4,r2,r3
  40c5e0:	90 a4 ff ff 	l.lbs r5,0xffffffff(r4)
  40c5e4:	bc 05 00 20 	l.sfeqi r5,0x20
  40c5e8:	13 ff ff f9 	l.bf 40c5cc <HandleSerial+0xa4>
  40c5ec:	a4 c6 00 ff 	l.andi r6,r6,0xff
          rxbuf[rxwp++] = '\0';
  40c5f0:	9c a0 00 00 	l.addi r5,r0,0x0
  40c5f4:	19 c0 00 42 	l.movhi r14,0x42
  40c5f8:	9c 42 00 01 	l.addi r2,r2,0x1
  40c5fc:	d8 04 28 00 	l.sb 0x0(r4),r5
  40c600:	a9 ce 09 71 	l.ori r14,r14,0x971
  40c604:	d8 0e 10 00 	l.sb 0x0(r14),r2
  int adr;
  int len;
  int val;
  char fname[32];

  switch (rxbuf[0]) {
  40c608:	90 43 00 00 	l.lbs r2,0x0(r3)
  40c60c:	bc 02 00 65 	l.sfeqi r2,0x65
  40c610:	10 00 00 7d 	l.bf 40c804 <HandleSerial+0x2dc>
  40c614:	bd 42 00 65 	l.sfgtsi r2,0x65
  40c618:	10 00 00 09 	l.bf 40c63c <HandleSerial+0x114>
  40c61c:	bc 02 00 72 	l.sfeqi r2,0x72
  40c620:	bc 02 00 61 	l.sfeqi r2,0x61
  40c624:	10 00 00 d4 	l.bf 40c974 <HandleSerial+0x44c>
  40c628:	bc 02 00 63 	l.sfeqi r2,0x63
  40c62c:	0c 00 02 00 	l.bnf 40ce2c <HandleSerial+0x904>
  40c630:	15 00 00 00 	l.nop 0x0
        mon_en = 0;
      } else mon_illcmd();
      break;
    case 'c':
      // ctrl read/write
      if (rxbuf[1] == 'w') {
  40c634:	00 00 00 99 	l.j 40c898 <HandleSerial+0x370>
  40c638:	90 43 00 01 	l.lbs r2,0x1(r3)
  int adr;
  int len;
  int val;
  char fname[32];

  switch (rxbuf[0]) {
  40c63c:	10 00 00 60 	l.bf 40c7bc <HandleSerial+0x294>
  40c640:	bc 02 00 75 	l.sfeqi r2,0x75
  40c644:	10 00 01 7c 	l.bf 40cc34 <HandleSerial+0x70c>
  40c648:	bc 02 00 68 	l.sfeqi r2,0x68
  40c64c:	0c 00 01 f8 	l.bnf 40ce2c <HandleSerial+0x904>
  40c650:	15 00 00 00 	l.nop 0x0
    case 'h':
      // help
      if (rxbuf[1]==0 || rxbuf[1]=='\n' || rxbuf[1]=='\r') {
  40c654:	00 00 00 23 	l.j 40c6e0 <HandleSerial+0x1b8>
  40c658:	90 43 00 01 	l.lbs r2,0x1(r3)
          ret = 1;
        }
        else txbuf_puts(MON_PROMPT);
        break;
      case MON_BS:
        if (rxwp > 0) {
  40c65c:	bc 10 00 00 	l.sfeqi r16,0x0
  40c660:	10 00 01 f3 	l.bf 40ce2c <HandleSerial+0x904>
  40c664:	a8 62 00 00 	l.ori r3,r2,0x0
          txbuf_put(rx);
  40c668:	07 ff ff 6d 	l.jal 40c41c <txbuf_put.50049>
  40c66c:	9e 10 ff ff 	l.addi r16,r16,0xffffffff
          txbuf_put(' ');
  40c670:	07 ff ff 6b 	l.jal 40c41c <txbuf_put.50049>
  40c674:	9c 60 00 20 	l.addi r3,r0,0x20
          txbuf_put(rx);
  40c678:	07 ff ff 69 	l.jal 40c41c <txbuf_put.50049>
  40c67c:	a8 62 00 00 	l.ori r3,r2,0x0
        txbuf_puts(MON_PROMPT);
        break;
      default:
        if (rxwp < RXBUFLEN) {
          txbuf_put(rx);
          rxbuf[rxwp++] = rx;
  40c680:	00 00 01 eb 	l.j 40ce2c <HandleSerial+0x904>
  40c684:	d8 0e 80 00 	l.sb 0x0(r14),r16
          txbuf_put(rx);
          rxwp--;
        }
        break;
      case MON_ESC:
        rxwp = 0;
  40c688:	18 40 00 42 	l.movhi r2,0x42
  40c68c:	9c 60 00 00 	l.addi r3,r0,0x0
  40c690:	a8 42 09 71 	l.ori r2,r2,0x971
  40c694:	d8 02 18 00 	l.sb 0x0(r2),r3
        txbuf_puts(MON_PROMPT);
  40c698:	18 60 00 41 	l.movhi r3,0x41
  40c69c:	07 ff ff 83 	l.jal 40c4a8 <txbuf_puts.50053>
  40c6a0:	a8 63 82 57 	l.ori r3,r3,0x8257
          break;
      }
      txbuf_emit(1);
    }
  }
}
  40c6a4:	00 00 01 e3 	l.j 40ce30 <HandleSerial+0x908>
  40c6a8:	9c 21 00 24 	l.addi r1,r1,0x24
      case MON_ESC:
        rxwp = 0;
        txbuf_puts(MON_PROMPT);
        break;
      default:
        if (rxwp < RXBUFLEN) {
  40c6ac:	8e 0e 00 00 	l.lbz r16,0x0(r14)
  40c6b0:	bc 50 00 3f 	l.sfgtui r16,0x3f
  40c6b4:	10 00 01 de 	l.bf 40ce2c <HandleSerial+0x904>
  40c6b8:	15 00 00 00 	l.nop 0x0
          txbuf_put(rx);
  40c6bc:	07 ff ff 58 	l.jal 40c41c <txbuf_put.50049>
  40c6c0:	a8 62 00 00 	l.ori r3,r2,0x0
          rxbuf[rxwp++] = rx;
  40c6c4:	18 80 00 42 	l.movhi r4,0x42
  40c6c8:	a8 84 09 74 	l.ori r4,r4,0x974
  40c6cc:	e0 70 20 00 	l.add r3,r16,r4
  40c6d0:	9e 10 00 01 	l.addi r16,r16,0x1
  40c6d4:	d8 03 10 00 	l.sb 0x0(r3),r2
  40c6d8:	00 00 01 d5 	l.j 40ce2c <HandleSerial+0x904>
  40c6dc:	d8 0e 80 00 	l.sb 0x0(r14),r16
  char fname[32];

  switch (rxbuf[0]) {
    case 'h':
      // help
      if (rxbuf[1]==0 || rxbuf[1]=='\n' || rxbuf[1]=='\r') {
  40c6e0:	ac 62 00 0a 	l.xori r3,r2,0xa
  40c6e4:	a4 63 00 ff 	l.andi r3,r3,0xff
  40c6e8:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  40c6ec:	bd 83 00 00 	l.sfltsi r3,0x0
  40c6f0:	10 00 00 09 	l.bf 40c714 <HandleSerial+0x1ec>
  40c6f4:	15 00 00 00 	l.nop 0x0
  40c6f8:	a4 62 00 ff 	l.andi r3,r2,0xff
  40c6fc:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  40c700:	bd 83 00 00 	l.sfltsi r3,0x0
  40c704:	10 00 00 04 	l.bf 40c714 <HandleSerial+0x1ec>
  40c708:	bc 22 00 0d 	l.sfnei r2,0xd
  40c70c:	10 00 01 4f 	l.bf 40cc48 <HandleSerial+0x720>
  40c710:	15 00 00 00 	l.nop 0x0
//  txbuf_puts("- \x1b[1mh \x1b[0m          - this help message");
//  txbuf_puts(MON_PROMPT);
//}
static void mon_usage()
{
  rxwp = 0;
  40c714:	18 40 00 42 	l.movhi r2,0x42
  40c718:	9c 60 00 00 	l.addi r3,r0,0x0
  40c71c:	a8 42 09 71 	l.ori r2,r2,0x971
  40c720:	d8 02 18 00 	l.sb 0x0(r2),r3
  // usage msg
  txbuf_puts("\r");
  40c724:	18 60 00 41 	l.movhi r3,0x41
  40c728:	07 ff ff 60 	l.jal 40c4a8 <txbuf_puts.50053>
  40c72c:	a8 63 82 8e 	l.ori r3,r3,0x828e
  txbuf_puts("MINIMIG-DE1 Monitor\r");
  40c730:	18 60 00 41 	l.movhi r3,0x41
  40c734:	07 ff ff 5d 	l.jal 40c4a8 <txbuf_puts.50053>
  40c738:	a8 63 82 5e 	l.ori r3,r3,0x825e
  txbuf_puts("2014, rok.krajnc@gmail.com\r\r");
  40c73c:	18 60 00 41 	l.movhi r3,0x41
  40c740:	07 ff ff 5a 	l.jal 40c4a8 <txbuf_puts.50053>
  40c744:	a8 63 82 73 	l.ori r3,r3,0x8273
  txbuf_puts("Commands:\r");
  40c748:	18 60 00 41 	l.movhi r3,0x41
  40c74c:	07 ff ff 57 	l.jal 40c4a8 <txbuf_puts.50053>
  40c750:	a8 63 82 90 	l.ori r3,r3,0x8290
  txbuf_puts("- u  FILE LEN - upload file to SD card\r");
  40c754:	18 60 00 41 	l.movhi r3,0x41
  40c758:	07 ff ff 54 	l.jal 40c4a8 <txbuf_puts.50053>
  40c75c:	a8 63 82 9b 	l.ori r3,r3,0x829b
  txbuf_puts("- cw ADR VAL  - write 32bit VAL to ADR in ctrl space \r");
  40c760:	18 60 00 41 	l.movhi r3,0x41
  40c764:	07 ff ff 51 	l.jal 40c4a8 <txbuf_puts.50053>
  40c768:	a8 63 82 c3 	l.ori r3,r3,0x82c3
  txbuf_puts("- cr ADR      - read 32bit ADR in ctrl space\r");
  40c76c:	18 60 00 41 	l.movhi r3,0x41
  40c770:	07 ff ff 4e 	l.jal 40c4a8 <txbuf_puts.50053>
  40c774:	a8 63 82 fa 	l.ori r3,r3,0x82fa
  txbuf_puts("- aw ADR VAL  - write 16bit VAL to ADR in Amiga space \r");
  40c778:	18 60 00 41 	l.movhi r3,0x41
  40c77c:	07 ff ff 4b 	l.jal 40c4a8 <txbuf_puts.50053>
  40c780:	a8 63 83 28 	l.ori r3,r3,0x8328
  txbuf_puts("- ar ADR      - read 16bit ADR in Amiga space\r");
  40c784:	18 60 00 41 	l.movhi r3,0x41
  40c788:	07 ff ff 48 	l.jal 40c4a8 <txbuf_puts.50053>
  40c78c:	a8 63 83 60 	l.ori r3,r3,0x8360
  txbuf_puts("- e           - exit\r");
  40c790:	18 60 00 41 	l.movhi r3,0x41
  40c794:	07 ff ff 45 	l.jal 40c4a8 <txbuf_puts.50053>
  40c798:	a8 63 83 8f 	l.ori r3,r3,0x838f
  txbuf_puts("- r           - reboot\r");
  40c79c:	18 60 00 41 	l.movhi r3,0x41
  40c7a0:	07 ff ff 42 	l.jal 40c4a8 <txbuf_puts.50053>
  40c7a4:	a8 63 83 a5 	l.ori r3,r3,0x83a5
  txbuf_puts("- h           - this help message\r");
  40c7a8:	18 60 00 41 	l.movhi r3,0x41
  40c7ac:	07 ff ff 3f 	l.jal 40c4a8 <txbuf_puts.50053>
  40c7b0:	a8 63 83 bd 	l.ori r3,r3,0x83bd
          rxwp--;
        }
        break;
      case MON_ESC:
        rxwp = 0;
        txbuf_puts(MON_PROMPT);
  40c7b4:	03 ff ff ba 	l.j 40c69c <HandleSerial+0x174>
  40c7b8:	18 60 00 41 	l.movhi r3,0x41
        mon_usage();
      } else mon_illcmd();
      break;
    case 'r':
      // reboot
      if (rxbuf[1]==0 || rxbuf[1]=='\n' || rxbuf[1]=='\r') {
  40c7bc:	90 43 00 01 	l.lbs r2,0x1(r3)
  40c7c0:	ac 62 00 0a 	l.xori r3,r2,0xa
  40c7c4:	a4 63 00 ff 	l.andi r3,r3,0xff
  40c7c8:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  40c7cc:	bd 83 00 00 	l.sfltsi r3,0x0
  40c7d0:	10 00 00 08 	l.bf 40c7f0 <HandleSerial+0x2c8>
  40c7d4:	a4 62 00 ff 	l.andi r3,r2,0xff
  40c7d8:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  40c7dc:	bd 83 00 00 	l.sfltsi r3,0x0
  40c7e0:	10 00 00 04 	l.bf 40c7f0 <HandleSerial+0x2c8>
  40c7e4:	bc 22 00 0d 	l.sfnei r2,0xd
  40c7e8:	10 00 01 18 	l.bf 40cc48 <HandleSerial+0x720>
  40c7ec:	15 00 00 00 	l.nop 0x0
        RST_system();
  40c7f0:	9c 60 00 01 	l.addi r3,r0,0x1
  40c7f4:	18 40 00 80 	l.movhi r2,0x80
  40c7f8:	d4 02 18 00 	l.sw 0x0(r2),r3
          break;
      }
      txbuf_emit(1);
    }
  }
}
  40c7fc:	00 00 01 8d 	l.j 40ce30 <HandleSerial+0x908>
  40c800:	9c 21 00 24 	l.addi r1,r1,0x24
        RST_system();
      } else mon_illcmd();
      break;
    case 'e':
      // exit mon
      if (rxbuf[1]==0 || rxbuf[1]=='\n' || rxbuf[1]=='\r') {
  40c804:	90 43 00 01 	l.lbs r2,0x1(r3)
  40c808:	ac 62 00 0a 	l.xori r3,r2,0xa
  40c80c:	a4 63 00 ff 	l.andi r3,r3,0xff
  40c810:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  40c814:	bd 83 00 00 	l.sfltsi r3,0x0
  40c818:	10 00 00 08 	l.bf 40c838 <HandleSerial+0x310>
  40c81c:	a4 62 00 ff 	l.andi r3,r2,0xff
  40c820:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  40c824:	bd 83 00 00 	l.sfltsi r3,0x0
  40c828:	10 00 00 04 	l.bf 40c838 <HandleSerial+0x310>
  40c82c:	bc 22 00 0d 	l.sfnei r2,0xd
  40c830:	10 00 01 06 	l.bf 40cc48 <HandleSerial+0x720>
  40c834:	15 00 00 00 	l.nop 0x0
        rxwp = rxrp = txwp = txrp = txln = 0;
  40c838:	18 40 00 42 	l.movhi r2,0x42
  40c83c:	9c 60 00 00 	l.addi r3,r0,0x0
  40c840:	a8 42 09 c0 	l.ori r2,r2,0x9c0
        mon_step = 0;
  40c844:	9c 80 00 00 	l.addi r4,r0,0x0
      } else mon_illcmd();
      break;
    case 'e':
      // exit mon
      if (rxbuf[1]==0 || rxbuf[1]=='\n' || rxbuf[1]=='\r') {
        rxwp = rxrp = txwp = txrp = txln = 0;
  40c848:	d8 02 18 00 	l.sb 0x0(r2),r3
  40c84c:	18 40 00 42 	l.movhi r2,0x42
  40c850:	a8 42 09 b4 	l.ori r2,r2,0x9b4
  40c854:	d8 02 18 00 	l.sb 0x0(r2),r3
  40c858:	18 40 00 42 	l.movhi r2,0x42
  40c85c:	a8 42 09 b5 	l.ori r2,r2,0x9b5
  40c860:	d8 02 18 00 	l.sb 0x0(r2),r3
  40c864:	18 40 00 42 	l.movhi r2,0x42
  40c868:	a8 42 09 70 	l.ori r2,r2,0x970
  40c86c:	d8 02 18 00 	l.sb 0x0(r2),r3
  40c870:	18 40 00 42 	l.movhi r2,0x42
  40c874:	a8 42 09 71 	l.ori r2,r2,0x971
  40c878:	d8 02 18 00 	l.sb 0x0(r2),r3
        mon_step = 0;
  40c87c:	18 40 00 42 	l.movhi r2,0x42
  40c880:	a8 42 09 6c 	l.ori r2,r2,0x96c
  40c884:	d4 02 20 00 	l.sw 0x0(r2),r4
        mon_en = 0;
  40c888:	18 40 00 42 	l.movhi r2,0x42
  40c88c:	a8 42 09 68 	l.ori r2,r2,0x968
  40c890:	00 00 01 67 	l.j 40ce2c <HandleSerial+0x904>
  40c894:	d4 02 20 00 	l.sw 0x0(r2),r4
      } else mon_illcmd();
      break;
    case 'c':
      // ctrl read/write
      if (rxbuf[1] == 'w') {
  40c898:	bc 22 00 77 	l.sfnei r2,0x77
  40c89c:	10 00 00 1a 	l.bf 40c904 <HandleSerial+0x3dc>
  40c8a0:	bc 22 00 72 	l.sfnei r2,0x72
        // write
        if ((s = next_word(rxbuf)) == NULL) { mon_illcmd(); break;}
  40c8a4:	07 ff de e0 	l.jal 404424 <next_word>
  40c8a8:	15 00 00 00 	l.nop 0x0
  40c8ac:	bc 2b 00 00 	l.sfnei r11,0x0
  40c8b0:	0c 00 00 e6 	l.bnf 40cc48 <HandleSerial+0x720>
  40c8b4:	a8 4b 00 00 	l.ori r2,r11,0x0
        scani(s, &adr);
  40c8b8:	a8 6b 00 00 	l.ori r3,r11,0x0
  40c8bc:	07 ff de 90 	l.jal 4042fc <scani>
  40c8c0:	9c 81 00 10 	l.addi r4,r1,0x10
        adr = adr&0xfffffffc;
  40c8c4:	84 61 00 10 	l.lwz r3,0x10(r1)
  40c8c8:	9c a0 ff fc 	l.addi r5,r0,0xfffffffc
  40c8cc:	e0 63 28 03 	l.and r3,r3,r5
  40c8d0:	d4 01 18 10 	l.sw 0x10(r1),r3
        if ( (s = next_word(s)) == NULL ) { mon_illcmd(); break;}
  40c8d4:	07 ff de d4 	l.jal 404424 <next_word>
  40c8d8:	a8 62 00 00 	l.ori r3,r2,0x0
  40c8dc:	bc 2b 00 00 	l.sfnei r11,0x0
  40c8e0:	0c 00 00 da 	l.bnf 40cc48 <HandleSerial+0x720>
  40c8e4:	a8 6b 00 00 	l.ori r3,r11,0x0
        scani(s, &val);
  40c8e8:	07 ff de 85 	l.jal 4042fc <scani>
  40c8ec:	9c 81 00 0c 	l.addi r4,r1,0xc
        write32(adr, val);
  40c8f0:	84 61 00 0c 	l.lwz r3,0xc(r1)
  40c8f4:	84 41 00 10 	l.lwz r2,0x10(r1)
  40c8f8:	d4 02 18 00 	l.sw 0x0(r2),r3
        MEM_UPLOAD_FINI();
        EnableOsd();
        rstval = rstval & ~SPI_CPU_HLT;
        SPI(rstval);
        DisableOsd();
        rxwp = 0;
  40c8fc:	00 00 00 c5 	l.j 40cc10 <HandleSerial+0x6e8>
  40c900:	9c 40 00 00 	l.addi r2,r0,0x0
        adr = adr&0xfffffffc;
        if ( (s = next_word(s)) == NULL ) { mon_illcmd(); break;}
        scani(s, &val);
        write32(adr, val);
        rxwp = 0;
      } else if (rxbuf[1] == 'r') {
  40c904:	10 00 00 d1 	l.bf 40cc48 <HandleSerial+0x720>
  40c908:	15 00 00 00 	l.nop 0x0
        // read
        if ((s = next_word(rxbuf)) == NULL) { mon_illcmd(); break;}
  40c90c:	07 ff de c6 	l.jal 404424 <next_word>
  40c910:	15 00 00 00 	l.nop 0x0
  40c914:	bc 2b 00 00 	l.sfnei r11,0x0
  40c918:	0c 00 00 cc 	l.bnf 40cc48 <HandleSerial+0x720>
  40c91c:	a8 6b 00 00 	l.ori r3,r11,0x0
        scani(s, &adr);
  40c920:	07 ff de 77 	l.jal 4042fc <scani>
  40c924:	9c 81 00 10 	l.addi r4,r1,0x10
        adr = adr&0xfffffffc;
  40c928:	9c 60 ff fc 	l.addi r3,r0,0xfffffffc
  40c92c:	84 41 00 10 	l.lwz r2,0x10(r1)
        val = read32(adr);
        sprintf(stbuf, "0x%8x = 0x%8x (b%32b)\r\n", adr, val, val);
  40c930:	18 80 00 41 	l.movhi r4,0x41
        rxwp = 0;
      } else if (rxbuf[1] == 'r') {
        // read
        if ((s = next_word(rxbuf)) == NULL) { mon_illcmd(); break;}
        scani(s, &adr);
        adr = adr&0xfffffffc;
  40c934:	e0 42 18 03 	l.and r2,r2,r3
        val = read32(adr);
        sprintf(stbuf, "0x%8x = 0x%8x (b%32b)\r\n", adr, val, val);
  40c938:	a8 84 83 e0 	l.ori r4,r4,0x83e0
        rxwp = 0;
      } else if (rxbuf[1] == 'r') {
        // read
        if ((s = next_word(rxbuf)) == NULL) { mon_illcmd(); break;}
        scani(s, &adr);
        adr = adr&0xfffffffc;
  40c93c:	d4 01 10 10 	l.sw 0x10(r1),r2
        val = read32(adr);
  40c940:	84 62 00 00 	l.lwz r3,0x0(r2)
        sprintf(stbuf, "0x%8x = 0x%8x (b%32b)\r\n", adr, val, val);
  40c944:	d4 01 10 00 	l.sw 0x0(r1),r2
      } else if (rxbuf[1] == 'r') {
        // read
        if ((s = next_word(rxbuf)) == NULL) { mon_illcmd(); break;}
        scani(s, &adr);
        adr = adr&0xfffffffc;
        val = read32(adr);
  40c948:	d4 01 18 0c 	l.sw 0xc(r1),r3
        sprintf(stbuf, "0x%8x = 0x%8x (b%32b)\r\n", adr, val, val);
  40c94c:	d4 01 18 04 	l.sw 0x4(r1),r3
  40c950:	d4 01 18 08 	l.sw 0x8(r1),r3
  40c954:	18 60 00 42 	l.movhi r3,0x42
  40c958:	07 ff de cb 	l.jal 404484 <sprintf>
  40c95c:	a8 63 09 c4 	l.ori r3,r3,0x9c4
        txbuf_puts(stbuf);
  40c960:	18 60 00 42 	l.movhi r3,0x42
  40c964:	07 ff fe d1 	l.jal 40c4a8 <txbuf_puts.50053>
  40c968:	a8 63 09 c4 	l.ori r3,r3,0x9c4
    case 'u':
      // file upload
      if ((s = next_word(rxbuf)) == NULL) { mon_illcmd(); break;}
      //scani(s, fname);
      printf("File upload currently unimplemented.\r");
      rxwp = 0;
  40c96c:	00 00 00 be 	l.j 40cc64 <HandleSerial+0x73c>
  40c970:	9c 80 00 00 	l.addi r4,r0,0x0
        rxwp = 0;
      } else mon_illcmd();
      break;
    case 'a':
      // amiga read/write
      if (rxbuf[1] == 'w') {
  40c974:	90 43 00 01 	l.lbs r2,0x1(r3)
  40c978:	bc 22 00 77 	l.sfnei r2,0x77
  40c97c:	10 00 00 a7 	l.bf 40cc18 <HandleSerial+0x6f0>
  40c980:	bc 22 00 72 	l.sfnei r2,0x72
        // write
        if ((s = next_word(rxbuf)) == NULL) { mon_illcmd(); break;}
  40c984:	07 ff de a8 	l.jal 404424 <next_word>
  40c988:	15 00 00 00 	l.nop 0x0
  40c98c:	bc 2b 00 00 	l.sfnei r11,0x0
  40c990:	0c 00 00 ae 	l.bnf 40cc48 <HandleSerial+0x720>
  40c994:	a8 4b 00 00 	l.ori r2,r11,0x0
        scani(s, &adr);
  40c998:	a8 6b 00 00 	l.ori r3,r11,0x0
  40c99c:	07 ff de 58 	l.jal 4042fc <scani>
  40c9a0:	9c 81 00 10 	l.addi r4,r1,0x10
        adr = adr&0xfffffffc;
  40c9a4:	84 61 00 10 	l.lwz r3,0x10(r1)
  40c9a8:	9c a0 ff fc 	l.addi r5,r0,0xfffffffc
  40c9ac:	e0 63 28 03 	l.and r3,r3,r5
  40c9b0:	d4 01 18 10 	l.sw 0x10(r1),r3
        if ( (s = next_word(s)) == NULL ) { mon_illcmd(); break;}
  40c9b4:	07 ff de 9c 	l.jal 404424 <next_word>
  40c9b8:	a8 62 00 00 	l.ori r3,r2,0x0
  40c9bc:	bc 2b 00 00 	l.sfnei r11,0x0
  40c9c0:	0c 00 00 a2 	l.bnf 40cc48 <HandleSerial+0x720>
  40c9c4:	a8 6b 00 00 	l.ori r3,r11,0x0
        scani(s, &val);
  40c9c8:	07 ff de 4d 	l.jal 4042fc <scani>
  40c9cc:	9c 81 00 0c 	l.addi r4,r1,0xc
        EnableOsd();
  40c9d0:	18 60 00 80 	l.movhi r3,0x80
  40c9d4:	9c e0 00 44 	l.addi r7,r0,0x44
  40c9d8:	a8 43 00 20 	l.ori r2,r3,0x20
        rstval = rstval | SPI_CPU_HLT;
  40c9dc:	19 00 00 41 	l.movhi r8,0x41
        if ((s = next_word(rxbuf)) == NULL) { mon_illcmd(); break;}
        scani(s, &adr);
        adr = adr&0xfffffffc;
        if ( (s = next_word(s)) == NULL ) { mon_illcmd(); break;}
        scani(s, &val);
        EnableOsd();
  40c9e0:	d4 02 38 00 	l.sw 0x0(r2),r7
        rstval = rstval | SPI_CPU_HLT;
  40c9e4:	a9 08 a3 4c 	l.ori r8,r8,0xa34c
        SPI(rstval);
  40c9e8:	a8 83 00 24 	l.ori r4,r3,0x24
        scani(s, &adr);
        adr = adr&0xfffffffc;
        if ( (s = next_word(s)) == NULL ) { mon_illcmd(); break;}
        scani(s, &val);
        EnableOsd();
        rstval = rstval | SPI_CPU_HLT;
  40c9ec:	85 68 00 00 	l.lwz r11,0x0(r8)
        SPI(rstval);
        DisableOsd();
  40c9f0:	9c c0 00 40 	l.addi r6,r0,0x40
        scani(s, &adr);
        adr = adr&0xfffffffc;
        if ( (s = next_word(s)) == NULL ) { mon_illcmd(); break;}
        scani(s, &val);
        EnableOsd();
        rstval = rstval | SPI_CPU_HLT;
  40c9f4:	a9 6b 00 04 	l.ori r11,r11,0x4
        SPI(rstval);
        DisableOsd();
        MEM_UPLOAD_INIT(adr);
  40c9f8:	9d 80 00 1c 	l.addi r12,r0,0x1c
        adr = adr&0xfffffffc;
        if ( (s = next_word(s)) == NULL ) { mon_illcmd(); break;}
        scani(s, &val);
        EnableOsd();
        rstval = rstval | SPI_CPU_HLT;
        SPI(rstval);
  40c9fc:	d4 04 58 00 	l.sw 0x0(r4),r11
        DisableOsd();
        MEM_UPLOAD_INIT(adr);
        MEM_WRITE16(val);
  40ca00:	a8 63 00 1c 	l.ori r3,r3,0x1c
        adr = adr&0xfffffffc;
        if ( (s = next_word(s)) == NULL ) { mon_illcmd(); break;}
        scani(s, &val);
        EnableOsd();
        rstval = rstval | SPI_CPU_HLT;
        SPI(rstval);
  40ca04:	84 a4 00 00 	l.lwz r5,0x0(r4)
        DisableOsd();
  40ca08:	d4 02 30 00 	l.sw 0x0(r2),r6
        MEM_UPLOAD_INIT(adr);
  40ca0c:	84 a1 00 10 	l.lwz r5,0x10(r1)
  40ca10:	d4 02 38 00 	l.sw 0x0(r2),r7
  40ca14:	d4 04 60 00 	l.sw 0x0(r4),r12
  40ca18:	85 84 00 00 	l.lwz r12,0x0(r4)
  40ca1c:	a5 85 00 ff 	l.andi r12,r5,0xff
  40ca20:	d4 04 60 00 	l.sw 0x0(r4),r12
  40ca24:	85 84 00 00 	l.lwz r12,0x0(r4)
  40ca28:	b9 85 00 88 	l.srai r12,r5,0x8
  40ca2c:	a5 8c 00 ff 	l.andi r12,r12,0xff
  40ca30:	d4 04 60 00 	l.sw 0x0(r4),r12
  40ca34:	85 84 00 00 	l.lwz r12,0x0(r4)
  40ca38:	b9 85 00 90 	l.srai r12,r5,0x10
  40ca3c:	b8 a5 00 58 	l.srli r5,r5,0x18
  40ca40:	a5 8c 00 ff 	l.andi r12,r12,0xff
  40ca44:	d4 04 60 00 	l.sw 0x0(r4),r12
  40ca48:	85 84 00 00 	l.lwz r12,0x0(r4)
  40ca4c:	d4 04 28 00 	l.sw 0x0(r4),r5
  40ca50:	84 a4 00 00 	l.lwz r5,0x0(r4)
        MEM_WRITE16(val);
  40ca54:	8c a1 00 0e 	l.lbz r5,0xe(r1)
  40ca58:	d4 04 28 00 	l.sw 0x0(r4),r5
  40ca5c:	84 a4 00 00 	l.lwz r5,0x0(r4)
  40ca60:	8c a1 00 0f 	l.lbz r5,0xf(r1)
  40ca64:	d4 04 28 00 	l.sw 0x0(r4),r5
  40ca68:	84 a4 00 00 	l.lwz r5,0x0(r4)
  40ca6c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40ca70:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40ca74:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40ca78:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40ca7c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40ca80:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40ca84:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40ca88:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40ca8c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40ca90:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40ca94:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40ca98:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40ca9c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40caa0:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40caa4:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40caa8:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40caac:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cab0:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cab4:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cab8:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cabc:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cac0:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cac4:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cac8:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cacc:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cad0:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cad4:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cad8:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cadc:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cae0:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cae4:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cae8:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40caec:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40caf0:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40caf4:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40caf8:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cafc:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb00:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb04:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb08:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb0c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb10:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb14:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb18:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb1c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb20:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb24:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb28:	84 a3 00 00 	l.lwz r5,0x0(r3)
        MEM_UPLOAD_FINI();
  40cb2c:	d4 02 30 00 	l.sw 0x0(r2),r6
  40cb30:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb34:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb38:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb3c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb40:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb44:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb48:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb4c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb50:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb54:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb58:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb5c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb60:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb64:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb68:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb6c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb70:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb74:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb78:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb7c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb80:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb84:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb88:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb8c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb90:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb94:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb98:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cb9c:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cba0:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cba4:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cba8:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cbac:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cbb0:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cbb4:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cbb8:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cbbc:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cbc0:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cbc4:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cbc8:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cbcc:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cbd0:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cbd4:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cbd8:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cbdc:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cbe0:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cbe4:	84 a3 00 00 	l.lwz r5,0x0(r3)
  40cbe8:	84 a3 00 00 	l.lwz r5,0x0(r3)
        EnableOsd();
        rstval = rstval & ~SPI_CPU_HLT;
  40cbec:	9c a0 ff fb 	l.addi r5,r0,0xfffffffb
        rstval = rstval | SPI_CPU_HLT;
        SPI(rstval);
        DisableOsd();
        MEM_UPLOAD_INIT(adr);
        MEM_WRITE16(val);
        MEM_UPLOAD_FINI();
  40cbf0:	84 63 00 00 	l.lwz r3,0x0(r3)
        EnableOsd();
        rstval = rstval & ~SPI_CPU_HLT;
  40cbf4:	e0 6b 28 03 	l.and r3,r11,r5
        SPI(rstval);
        DisableOsd();
        MEM_UPLOAD_INIT(adr);
        MEM_WRITE16(val);
        MEM_UPLOAD_FINI();
        EnableOsd();
  40cbf8:	d4 02 38 00 	l.sw 0x0(r2),r7
        rstval = rstval & ~SPI_CPU_HLT;
  40cbfc:	d4 08 18 00 	l.sw 0x0(r8),r3
        SPI(rstval);
  40cc00:	d4 04 18 00 	l.sw 0x0(r4),r3
  40cc04:	84 64 00 00 	l.lwz r3,0x0(r4)
        DisableOsd();
  40cc08:	d4 02 30 00 	l.sw 0x0(r2),r6
        rxwp = 0;
  40cc0c:	9c 40 00 00 	l.addi r2,r0,0x0
  40cc10:	00 00 00 87 	l.j 40ce2c <HandleSerial+0x904>
  40cc14:	d8 0e 10 00 	l.sb 0x0(r14),r2
      } else if (rxbuf[1] == 'r') {
  40cc18:	10 00 00 0c 	l.bf 40cc48 <HandleSerial+0x720>
  40cc1c:	18 60 00 41 	l.movhi r3,0x41
        // read
        printf("Amiga mem read currently unimplemented.\r");
  40cc20:	07 ff de 9d 	l.jal 404694 <printf>
  40cc24:	a8 63 83 f8 	l.ori r3,r3,0x83f8
        rxwp = 0;
  40cc28:	9c 60 00 00 	l.addi r3,r0,0x0
  40cc2c:	00 00 00 80 	l.j 40ce2c <HandleSerial+0x904>
  40cc30:	d8 0e 18 00 	l.sb 0x0(r14),r3
      } else mon_illcmd();
      break;
    case 'u':
      // file upload
      if ((s = next_word(rxbuf)) == NULL) { mon_illcmd(); break;}
  40cc34:	07 ff dd fc 	l.jal 404424 <next_word>
  40cc38:	15 00 00 00 	l.nop 0x0
  40cc3c:	bc 2b 00 00 	l.sfnei r11,0x0
  40cc40:	10 00 00 06 	l.bf 40cc58 <HandleSerial+0x730>
  40cc44:	18 60 00 41 	l.movhi r3,0x41
  40cc48:	07 ff fe 28 	l.jal 40c4e8 <mon_illcmd.50060>
  40cc4c:	15 00 00 00 	l.nop 0x0
          break;
      }
      txbuf_emit(1);
    }
  }
}
  40cc50:	00 00 00 78 	l.j 40ce30 <HandleSerial+0x908>
  40cc54:	9c 21 00 24 	l.addi r1,r1,0x24
      break;
    case 'u':
      // file upload
      if ((s = next_word(rxbuf)) == NULL) { mon_illcmd(); break;}
      //scani(s, fname);
      printf("File upload currently unimplemented.\r");
  40cc58:	07 ff de 8f 	l.jal 404694 <printf>
  40cc5c:	a8 63 84 21 	l.ori r3,r3,0x8421
      rxwp = 0;
  40cc60:	9c 80 00 00 	l.addi r4,r0,0x0
  40cc64:	00 00 00 72 	l.j 40ce2c <HandleSerial+0x904>
  40cc68:	d8 0e 20 00 	l.sb 0x0(r14),r4
  // wait for monitor enabled, in that case parse commands
  if (mon_en) {
    cmd = mon_parsecmd();
    if (cmd) mon_decodecmd();
  } else {
    if (RX_READY()) {
  40cc6c:	a8 62 00 14 	l.ori r3,r2,0x14
  40cc70:	84 63 00 00 	l.lwz r3,0x0(r3)
  40cc74:	a4 63 00 01 	l.andi r3,r3,0x1
  40cc78:	bc 03 00 00 	l.sfeqi r3,0x0
  40cc7c:	10 00 00 6c 	l.bf 40ce2c <HandleSerial+0x904>
  40cc80:	a8 42 00 10 	l.ori r2,r2,0x10
      rx = RX_CHAR();
      switch (mon_step) {
  40cc84:	18 60 00 42 	l.movhi r3,0x42
  if (mon_en) {
    cmd = mon_parsecmd();
    if (cmd) mon_decodecmd();
  } else {
    if (RX_READY()) {
      rx = RX_CHAR();
  40cc88:	84 42 00 00 	l.lwz r2,0x0(r2)
      switch (mon_step) {
  40cc8c:	a8 63 09 6c 	l.ori r3,r3,0x96c
  if (mon_en) {
    cmd = mon_parsecmd();
    if (cmd) mon_decodecmd();
  } else {
    if (RX_READY()) {
      rx = RX_CHAR();
  40cc90:	b8 42 00 18 	l.slli r2,r2,0x18
      switch (mon_step) {
  40cc94:	84 63 00 00 	l.lwz r3,0x0(r3)
  40cc98:	bc 43 00 04 	l.sfgtui r3,0x4
  40cc9c:	10 00 00 62 	l.bf 40ce24 <HandleSerial+0x8fc>
  40cca0:	b8 42 00 98 	l.srai r2,r2,0x18
  40cca4:	18 a0 00 41 	l.movhi r5,0x41
  40cca8:	b8 63 00 02 	l.slli r3,r3,0x2
  40ccac:	a8 a5 6d 60 	l.ori r5,r5,0x6d60
  40ccb0:	e0 63 28 00 	l.add r3,r3,r5
  40ccb4:	84 63 00 00 	l.lwz r3,0x0(r3)
  40ccb8:	44 00 18 00 	l.jr r3
  40ccbc:	15 00 00 00 	l.nop 0x0
        case 0 :
          if (rx == 'm') mon_step++;
  40ccc0:	bc 22 00 6d 	l.sfnei r2,0x6d
  40ccc4:	18 40 00 42 	l.movhi r2,0x42
  40ccc8:	10 00 00 04 	l.bf 40ccd8 <HandleSerial+0x7b0>
  40cccc:	a8 42 09 6c 	l.ori r2,r2,0x96c
  40ccd0:	00 00 00 50 	l.j 40ce10 <HandleSerial+0x8e8>
  40ccd4:	9c 60 00 01 	l.addi r3,r0,0x1
          else mon_step = 0;
  40ccd8:	00 00 00 4e 	l.j 40ce10 <HandleSerial+0x8e8>
  40ccdc:	9c 60 00 00 	l.addi r3,r0,0x0
          break;
        case 1 :
          if (rx == 'o') mon_step++;
  40cce0:	bc 22 00 6f 	l.sfnei r2,0x6f
  40cce4:	18 40 00 42 	l.movhi r2,0x42
  40cce8:	10 00 00 04 	l.bf 40ccf8 <HandleSerial+0x7d0>
  40ccec:	a8 42 09 6c 	l.ori r2,r2,0x96c
  40ccf0:	00 00 00 48 	l.j 40ce10 <HandleSerial+0x8e8>
  40ccf4:	9c 60 00 02 	l.addi r3,r0,0x2
          else mon_step = 0;
  40ccf8:	9c 80 00 00 	l.addi r4,r0,0x0
  40ccfc:	00 00 00 4a 	l.j 40ce24 <HandleSerial+0x8fc>
  40cd00:	d4 02 20 00 	l.sw 0x0(r2),r4
          break;
        case 2 :
          if (rx == 'n') mon_step++;
  40cd04:	bc 22 00 6e 	l.sfnei r2,0x6e
  40cd08:	18 40 00 42 	l.movhi r2,0x42
  40cd0c:	10 00 00 04 	l.bf 40cd1c <HandleSerial+0x7f4>
  40cd10:	a8 42 09 6c 	l.ori r2,r2,0x96c
  40cd14:	00 00 00 3f 	l.j 40ce10 <HandleSerial+0x8e8>
  40cd18:	9c 60 00 03 	l.addi r3,r0,0x3
          else mon_step = 0;
  40cd1c:	9c a0 00 00 	l.addi r5,r0,0x0
  40cd20:	00 00 00 41 	l.j 40ce24 <HandleSerial+0x8fc>
  40cd24:	d4 02 28 00 	l.sw 0x0(r2),r5
          break;
        case 3 :
          if ((rx == '\r') || (rx == '\n')) mon_step++;
  40cd28:	ac 62 00 0a 	l.xori r3,r2,0xa
  40cd2c:	a4 63 00 ff 	l.andi r3,r3,0xff
  40cd30:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  40cd34:	bd 83 00 00 	l.sfltsi r3,0x0
  40cd38:	10 00 00 34 	l.bf 40ce08 <HandleSerial+0x8e0>
  40cd3c:	9c 60 00 04 	l.addi r3,r0,0x4
  40cd40:	ac 42 00 0d 	l.xori r2,r2,0xd
  40cd44:	a4 42 00 ff 	l.andi r2,r2,0xff
  40cd48:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
  40cd4c:	b8 42 00 5f 	l.srli r2,r2,0x1f
  40cd50:	bc 02 00 00 	l.sfeqi r2,0x0
  40cd54:	10 00 00 31 	l.bf 40ce18 <HandleSerial+0x8f0>
  40cd58:	15 00 00 00 	l.nop 0x0
            txbuf[txwp] = '\0';
            //txbuf_puts(ANSI_ERASE_DISPLAY);
            //txbuf_puts(ANSI_GOTO_00);
            txbuf_put('\r');
            txbuf_puts(MON_PROMPT);
            mon_step++;
  40cd5c:	00 00 00 2c 	l.j 40ce0c <HandleSerial+0x8e4>
  40cd60:	18 40 00 42 	l.movhi r2,0x42
        case 3 :
          if ((rx == '\r') || (rx == '\n')) mon_step++;
          else mon_step = 0;
          break;
        case 4 :
          if ((rx == '\r') || (rx == '\n')) {
  40cd64:	ac 62 00 0a 	l.xori r3,r2,0xa
  40cd68:	a4 63 00 ff 	l.andi r3,r3,0xff
  40cd6c:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  40cd70:	bd 83 00 00 	l.sfltsi r3,0x0
  40cd74:	10 00 00 08 	l.bf 40cd94 <HandleSerial+0x86c>
  40cd78:	ac 42 00 0d 	l.xori r2,r2,0xd
  40cd7c:	a4 42 00 ff 	l.andi r2,r2,0xff
  40cd80:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
  40cd84:	b8 42 00 5f 	l.srli r2,r2,0x1f
  40cd88:	bc 02 00 00 	l.sfeqi r2,0x0
  40cd8c:	10 00 00 23 	l.bf 40ce18 <HandleSerial+0x8f0>
  40cd90:	15 00 00 00 	l.nop 0x0
            mon_en = 1;
  40cd94:	18 40 00 42 	l.movhi r2,0x42
  40cd98:	9c 60 00 01 	l.addi r3,r0,0x1
  40cd9c:	a8 42 09 68 	l.ori r2,r2,0x968
  40cda0:	d4 02 18 00 	l.sw 0x0(r2),r3
            rxwp = rxrp = 0;
  40cda4:	18 40 00 42 	l.movhi r2,0x42
  40cda8:	9c 60 00 00 	l.addi r3,r0,0x0
  40cdac:	a8 42 09 70 	l.ori r2,r2,0x970
  40cdb0:	d8 02 18 00 	l.sb 0x0(r2),r3
  40cdb4:	18 40 00 42 	l.movhi r2,0x42
  40cdb8:	a8 42 09 71 	l.ori r2,r2,0x971
  40cdbc:	d8 02 18 00 	l.sb 0x0(r2),r3
            rxbuf[rxwp] = '\0';
  40cdc0:	18 40 00 42 	l.movhi r2,0x42
  40cdc4:	a8 42 09 74 	l.ori r2,r2,0x974
  40cdc8:	d8 02 18 00 	l.sb 0x0(r2),r3
            txwp = txrp = 0;
  40cdcc:	18 40 00 42 	l.movhi r2,0x42
  40cdd0:	a8 42 09 b4 	l.ori r2,r2,0x9b4
  40cdd4:	d8 02 18 00 	l.sb 0x0(r2),r3
  40cdd8:	18 40 00 42 	l.movhi r2,0x42
  40cddc:	a8 42 09 b5 	l.ori r2,r2,0x9b5
  40cde0:	d8 02 18 00 	l.sb 0x0(r2),r3
            txbuf[txwp] = '\0';
  40cde4:	18 40 00 42 	l.movhi r2,0x42
  40cde8:	a8 42 09 b8 	l.ori r2,r2,0x9b8
  40cdec:	d8 02 18 00 	l.sb 0x0(r2),r3
            //txbuf_puts(ANSI_ERASE_DISPLAY);
            //txbuf_puts(ANSI_GOTO_00);
            txbuf_put('\r');
  40cdf0:	07 ff fd 8b 	l.jal 40c41c <txbuf_put.50049>
  40cdf4:	9c 60 00 0d 	l.addi r3,r0,0xd
            txbuf_puts(MON_PROMPT);
  40cdf8:	18 60 00 41 	l.movhi r3,0x41
  40cdfc:	07 ff fd ab 	l.jal 40c4a8 <txbuf_puts.50053>
  40ce00:	a8 63 82 57 	l.ori r3,r3,0x8257
            mon_step++;
  40ce04:	9c 60 00 05 	l.addi r3,r0,0x5
  40ce08:	18 40 00 42 	l.movhi r2,0x42
  40ce0c:	a8 42 09 6c 	l.ori r2,r2,0x96c
  40ce10:	00 00 00 05 	l.j 40ce24 <HandleSerial+0x8fc>
  40ce14:	d4 02 18 00 	l.sw 0x0(r2),r3
          } else mon_step = 0;
  40ce18:	18 60 00 42 	l.movhi r3,0x42
  40ce1c:	a8 63 09 6c 	l.ori r3,r3,0x96c
  40ce20:	d4 03 10 00 	l.sw 0x0(r3),r2
          break;
      }
      txbuf_emit(1);
  40ce24:	07 ff fd 5b 	l.jal 40c390 <txbuf_emit.50045.clone.2>
  40ce28:	15 00 00 00 	l.nop 0x0
    }
  }
}
  40ce2c:	9c 21 00 24 	l.addi r1,r1,0x24
  40ce30:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  40ce34:	84 41 ff f0 	l.lwz r2,0xfffffff0(r1)
  40ce38:	85 c1 ff f4 	l.lwz r14,0xfffffff4(r1)
  40ce3c:	44 00 48 00 	l.jr r9
  40ce40:	86 01 ff f8 	l.lwz r16,0xfffffff8(r1)

0040ce44 <strcat.clone.3>:
_PTR 	 _EXFUN(memchr,(const _PTR, int, size_t));
int 	 _EXFUN(memcmp,(const _PTR, const _PTR, size_t));
_PTR 	 _EXFUN(memcpy,(_PTR, const _PTR, size_t));
_PTR	 _EXFUN(memmove,(_PTR, const _PTR, size_t));
_PTR	 _EXFUN(memset,(_PTR, int, size_t));
char 	*_EXFUN(strcat,(char *, const char *));
  40ce44:	a8 83 00 00 	l.ori r4,r3,0x0
  40ce48:	18 60 00 41 	l.movhi r3,0x41
  40ce4c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  40ce50:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40ce54:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc

#include <string.h>

char *strchr(const char *s, int c)
{
	while (*s != (char)c) {
  40ce58:	90 a3 00 00 	l.lbs r5,0x0(r3)
  40ce5c:	bc 25 00 00 	l.sfnei r5,0x0
  40ce60:	13 ff ff fe 	l.bf 40ce58 <strcat.clone.3+0x14>
  40ce64:	9c 63 00 01 	l.addi r3,r3,0x1

#include <string.h>

char *strcat(char *dst, const char *src)
{
	strcpy(strchr(dst, '\0'), src);
  40ce68:	07 ff cd 19 	l.jal 4002cc <strcpy>
  40ce6c:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
	return dst;
}
  40ce70:	9c 21 00 04 	l.addi r1,r1,0x4
  40ce74:	19 60 00 41 	l.movhi r11,0x41
  40ce78:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  40ce7c:	44 00 48 00 	l.jr r9
  40ce80:	a9 6b cd 18 	l.ori r11,r11,0xcd18

0040ce84 <strncat.clone.4>:
int	 _EXFUN(strcoll,(const char *, const char *));
char 	*_EXFUN(strcpy,(char *, const char *));
size_t	 _EXFUN(strcspn,(const char *, const char *));
char 	*_EXFUN(strerror,(int));
size_t	 _EXFUN(strlen,(const char *));
char 	*_EXFUN(strncat,(char *, const char *, size_t));
  40ce84:	18 a0 00 41 	l.movhi r5,0x41
  40ce88:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  40ce8c:	a8 a5 cd 18 	l.ori r5,r5,0xcd18
  40ce90:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  40ce94:	90 c5 00 00 	l.lbs r6,0x0(r5)
  40ce98:	bc 26 00 00 	l.sfnei r6,0x0
  40ce9c:	13 ff ff fe 	l.bf 40ce94 <strncat.clone.4+0x10>
  40cea0:	9c a5 00 01 	l.addi r5,r5,0x1
  40cea4:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
{
	char *q = strchr(dst, '\0');
	const char *p = src;
	char ch;

	while (n--) {
  40cea8:	00 00 00 0a 	l.j 40ced0 <strncat.clone.4+0x4c>
  40ceac:	e4 24 30 00 	l.sfne r4,r6
  40ceb0:	e0 e3 30 00 	l.add r7,r3,r6
		*q++ = ch = *p++;
  40ceb4:	9c c6 00 01 	l.addi r6,r6,0x1
  40ceb8:	90 e7 00 00 	l.lbs r7,0x0(r7)
		if (!ch)
  40cebc:	bc 07 00 00 	l.sfeqi r7,0x0
  40cec0:	10 00 00 07 	l.bf 40cedc <strncat.clone.4+0x58>
  40cec4:	d8 05 38 00 	l.sb 0x0(r5),r7
	char *q = strchr(dst, '\0');
	const char *p = src;
	char ch;

	while (n--) {
		*q++ = ch = *p++;
  40cec8:	9c a5 00 01 	l.addi r5,r5,0x1
{
	char *q = strchr(dst, '\0');
	const char *p = src;
	char ch;

	while (n--) {
  40cecc:	e4 24 30 00 	l.sfne r4,r6
  40ced0:	13 ff ff f8 	l.bf 40ceb0 <strncat.clone.4+0x2c>
  40ced4:	9c 40 00 00 	l.addi r2,r0,0x0
		*q++ = ch = *p++;
		if (!ch)
			return dst;
	}
	*q = '\0';
  40ced8:	d8 05 10 00 	l.sb 0x0(r5),r2

	return dst;
}
  40cedc:	19 60 00 41 	l.movhi r11,0x41
  40cee0:	9c 21 00 04 	l.addi r1,r1,0x4
  40cee4:	a9 6b cd 18 	l.ori r11,r11,0xcd18
  40cee8:	44 00 48 00 	l.jr r9
  40ceec:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

0040cef0 <BootClearScreen.clone.5>:

//// BootClearScreen() ////
void BootClearScreen(int adr, int size)
{
  int i;
  MEM_UPLOAD_INIT(adr);
  40cef0:	18 60 00 80 	l.movhi r3,0x80
  40cef4:	9c a0 00 44 	l.addi r5,r0,0x44
  40cef8:	a8 83 00 20 	l.ori r4,r3,0x20
  //SPIN(); SPIN(); SPIN(); SPIN();
  //while ((read32(REG_SYS_STAT_ADR) & 0x2));
}

//// BootClearScreen() ////
void BootClearScreen(int adr, int size)
  40cefc:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
{
  int i;
  MEM_UPLOAD_INIT(adr);
  40cf00:	d4 04 28 00 	l.sw 0x0(r4),r5
  40cf04:	a8 83 00 24 	l.ori r4,r3,0x24
  40cf08:	9c a0 00 1c 	l.addi r5,r0,0x1c
  40cf0c:	9c 40 00 00 	l.addi r2,r0,0x0
  40cf10:	d4 04 28 00 	l.sw 0x0(r4),r5
  //SPIN(); SPIN(); SPIN(); SPIN();
  //while ((read32(REG_SYS_STAT_ADR) & 0x2));
}

//// BootClearScreen() ////
void BootClearScreen(int adr, int size)
  40cf14:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
{
  int i;
  MEM_UPLOAD_INIT(adr);
  40cf18:	84 a4 00 00 	l.lwz r5,0x0(r4)
  40cf1c:	d4 04 10 00 	l.sw 0x0(r4),r2
  for (i=0; i<size; i++) {
    MEM_WRITE16(0x0000);
  40cf20:	a8 63 00 1c 	l.ori r3,r3,0x1c

//// BootClearScreen() ////
void BootClearScreen(int adr, int size)
{
  int i;
  MEM_UPLOAD_INIT(adr);
  40cf24:	84 a4 00 00 	l.lwz r5,0x0(r4)
  40cf28:	d4 04 10 00 	l.sw 0x0(r4),r2
  40cf2c:	84 a4 00 00 	l.lwz r5,0x0(r4)
  40cf30:	9c a0 00 08 	l.addi r5,r0,0x8
  40cf34:	d4 04 28 00 	l.sw 0x0(r4),r5
  40cf38:	84 a4 00 00 	l.lwz r5,0x0(r4)
  40cf3c:	d4 04 10 00 	l.sw 0x0(r4),r2
  40cf40:	84 a4 00 00 	l.lwz r5,0x0(r4)
  for (i=0; i<size; i++) {
  40cf44:	a8 a2 00 00 	l.ori r5,r2,0x0
    MEM_WRITE16(0x0000);
  40cf48:	9c 40 00 00 	l.addi r2,r0,0x0
//// BootClearScreen() ////
void BootClearScreen(int adr, int size)
{
  int i;
  MEM_UPLOAD_INIT(adr);
  for (i=0; i<size; i++) {
  40cf4c:	9c a5 00 01 	l.addi r5,r5,0x1
    MEM_WRITE16(0x0000);
  40cf50:	d4 04 10 00 	l.sw 0x0(r4),r2
  40cf54:	84 c4 00 00 	l.lwz r6,0x0(r4)
  40cf58:	d4 04 10 00 	l.sw 0x0(r4),r2
//// BootClearScreen() ////
void BootClearScreen(int adr, int size)
{
  int i;
  MEM_UPLOAD_INIT(adr);
  for (i=0; i<size; i++) {
  40cf5c:	a8 40 a0 00 	l.ori r2,r0,0xa000
    MEM_WRITE16(0x0000);
  40cf60:	84 c4 00 00 	l.lwz r6,0x0(r4)
  40cf64:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cf68:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cf6c:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cf70:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cf74:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cf78:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cf7c:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cf80:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cf84:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cf88:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cf8c:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cf90:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cf94:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cf98:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cf9c:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfa0:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfa4:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfa8:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfac:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfb0:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfb4:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfb8:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfbc:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfc0:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfc4:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfc8:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfcc:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfd0:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfd4:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfd8:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfdc:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfe0:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfe4:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfe8:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cfec:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cff0:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cff4:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cff8:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40cffc:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40d000:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40d004:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40d008:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40d00c:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40d010:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40d014:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40d018:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40d01c:	84 c3 00 00 	l.lwz r6,0x0(r3)
  40d020:	84 c3 00 00 	l.lwz r6,0x0(r3)
//// BootClearScreen() ////
void BootClearScreen(int adr, int size)
{
  int i;
  MEM_UPLOAD_INIT(adr);
  for (i=0; i<size; i++) {
  40d024:	e4 25 10 00 	l.sfne r5,r2
  40d028:	13 ff ff c8 	l.bf 40cf48 <BootClearScreen.clone.5+0x58>
  40d02c:	15 00 00 00 	l.nop 0x0
    MEM_WRITE16(0x0000);
    //MEM_WRITE16(i);
  }
  MEM_UPLOAD_FINI();
  40d030:	18 80 00 80 	l.movhi r4,0x80
  40d034:	9c a0 00 40 	l.addi r5,r0,0x40
  40d038:	a8 84 00 20 	l.ori r4,r4,0x20
  40d03c:	d4 04 28 00 	l.sw 0x0(r4),r5
  40d040:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d044:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d048:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d04c:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d050:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d054:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d058:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d05c:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d060:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d064:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d068:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d06c:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d070:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d074:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d078:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d07c:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d080:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d084:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d088:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d08c:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d090:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d094:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d098:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d09c:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0a0:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0a4:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0a8:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0ac:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0b0:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0b4:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0b8:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0bc:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0c0:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0c4:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0c8:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0cc:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0d0:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0d4:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0d8:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0dc:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0e0:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0e4:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0e8:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0ec:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0f0:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0f4:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0f8:	84 83 00 00 	l.lwz r4,0x0(r3)
  40d0fc:	84 63 00 00 	l.lwz r3,0x0(r3)
}
  40d100:	9c 21 00 04 	l.addi r1,r1,0x4
  40d104:	44 00 48 00 	l.jr r9
  40d108:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

0040d10c <ConfigurationExists.clone.6>:
{
  DEBUG_FUNC_IN(DEBUG_F_CONFIG | DEBUG_L1);

	if(!filename)
		filename=configfilename;	// Use slot-based filename if none provided.
    if (FileOpen(&file, filename))
  40d10c:	18 60 00 41 	l.movhi r3,0x41
  40d110:	18 80 00 41 	l.movhi r4,0x41

  DEBUG_FUNC_OUT(DEBUG_F_CONFIG | DEBUG_L1);
}


unsigned char ConfigurationExists(char *filename)
  40d114:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
{
  DEBUG_FUNC_IN(DEBUG_F_CONFIG | DEBUG_L1);

	if(!filename)
		filename=configfilename;	// Use slot-based filename if none provided.
    if (FileOpen(&file, filename))
  40d118:	a8 63 cb 80 	l.ori r3,r3,0xcb80

  DEBUG_FUNC_OUT(DEBUG_F_CONFIG | DEBUG_L1);
}


unsigned char ConfigurationExists(char *filename)
  40d11c:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
{
  DEBUG_FUNC_IN(DEBUG_F_CONFIG | DEBUG_L1);

	if(!filename)
		filename=configfilename;	// Use slot-based filename if none provided.
    if (FileOpen(&file, filename))
  40d120:	07 ff f0 6c 	l.jal 4092d0 <FileOpen>
  40d124:	a8 84 cd 40 	l.ori r4,r4,0xcd40
		return(1);
	}
	return(0);

  DEBUG_FUNC_OUT(DEBUG_F_CONFIG | DEBUG_L1);
}
  40d128:	9c 21 00 04 	l.addi r1,r1,0x4

	if(!filename)
		filename=configfilename;	// Use slot-based filename if none provided.
    if (FileOpen(&file, filename))
    {
		return(1);
  40d12c:	e1 60 58 02 	l.sub r11,r0,r11
	}
	return(0);

  DEBUG_FUNC_OUT(DEBUG_F_CONFIG | DEBUG_L1);
}
  40d130:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  40d134:	44 00 48 00 	l.jr r9
  40d138:	b9 6b 00 5f 	l.srli r11,r11,0x1f

0040d13c <LoadConfiguration.clone.7>:


unsigned char LoadConfiguration(char *filename)
  40d13c:	d7 e1 17 e4 	l.sw 0xffffffe4(r1),r2

	if(!filename)
		filename=configfilename;	// Use slot-based filename if none provided.

    // load configuration data
    if (FileOpen(&file, filename))
  40d140:	18 40 00 41 	l.movhi r2,0x41
  40d144:	18 80 00 41 	l.movhi r4,0x41
  40d148:	a8 42 cb 80 	l.ori r2,r2,0xcb80

  DEBUG_FUNC_OUT(DEBUG_F_CONFIG | DEBUG_L1);
}


unsigned char LoadConfiguration(char *filename)
  40d14c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  40d150:	d7 e1 77 e8 	l.sw 0xffffffe8(r1),r14
  40d154:	d7 e1 87 ec 	l.sw 0xffffffec(r1),r16
  40d158:	d7 e1 97 f0 	l.sw 0xfffffff0(r1),r18
  40d15c:	d7 e1 a7 f4 	l.sw 0xfffffff4(r1),r20
  40d160:	d7 e1 b7 f8 	l.sw 0xfffffff8(r1),r22

	if(!filename)
		filename=configfilename;	// Use slot-based filename if none provided.

    // load configuration data
    if (FileOpen(&file, filename))
  40d164:	a8 62 00 00 	l.ori r3,r2,0x0

  DEBUG_FUNC_OUT(DEBUG_F_CONFIG | DEBUG_L1);
}


unsigned char LoadConfiguration(char *filename)
  40d168:	9c 21 ff d8 	l.addi r1,r1,0xffffffd8

	if(!filename)
		filename=configfilename;	// Use slot-based filename if none provided.

    // load configuration data
    if (FileOpen(&file, filename))
  40d16c:	07 ff f0 59 	l.jal 4092d0 <FileOpen>
  40d170:	a8 84 cd 40 	l.ori r4,r4,0xcd40
  40d174:	bc 0b 00 00 	l.sfeqi r11,0x0
  40d178:	10 00 00 3f 	l.bf 40d274 <LoadConfiguration.clone.7+0x138>
  40d17c:	15 00 00 00 	l.nop 0x0
    {
		BootPrint("Opened configuration file\n");
  40d180:	18 60 00 41 	l.movhi r3,0x41
  40d184:	07 ff e3 da 	l.jal 4060ec <BootPrint>
  40d188:	a8 63 84 76 	l.ori r3,r3,0x8476
        printf("Configuration file size: %lu\r", file.size);
  40d18c:	84 62 00 18 	l.lwz r3,0x18(r2)
  40d190:	d4 01 18 00 	l.sw 0x0(r1),r3
  40d194:	18 60 00 41 	l.movhi r3,0x41
  40d198:	07 ff dd 3f 	l.jal 404694 <printf>
  40d19c:	a8 63 84 91 	l.ori r3,r3,0x8491
        if (file.size == sizeof(config))
  40d1a0:	84 62 00 18 	l.lwz r3,0x18(r2)
  40d1a4:	bc 23 00 6c 	l.sfnei r3,0x6c
  40d1a8:	10 00 00 2d 	l.bf 40d25c <LoadConfiguration.clone.7+0x120>
  40d1ac:	15 00 00 00 	l.nop 0x0
        {
            FileRead(&file, sector_buffer);
  40d1b0:	18 80 00 41 	l.movhi r4,0x41
  40d1b4:	a8 62 00 00 	l.ori r3,r2,0x0
  40d1b8:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  40d1bc:	07 ff e0 3e 	l.jal 4052b4 <FileRead>
  40d1c0:	18 40 00 41 	l.movhi r2,0x41

			configTYPE *tmpconf=(configTYPE *)&sector_buffer;
  40d1c4:	a8 42 a4 dc 	l.ori r2,r2,0xa4dc

            // check file id and version
            if (strncmp(tmpconf->id, config_id, sizeof(config.id)) == 0)
  40d1c8:	18 80 00 41 	l.movhi r4,0x41
  40d1cc:	a8 62 00 00 	l.ori r3,r2,0x0
  40d1d0:	a8 84 74 14 	l.ori r4,r4,0x7414
  40d1d4:	07 ff cc 50 	l.jal 400314 <strncmp>
  40d1d8:	9c a0 00 08 	l.addi r5,r0,0x8
  40d1dc:	bc 2b 00 00 	l.sfnei r11,0x0
  40d1e0:	10 00 00 1a 	l.bf 40d248 <LoadConfiguration.clone.7+0x10c>
  40d1e4:	18 60 00 41 	l.movhi r3,0x41
            {
				// A few more sanity checks...
				if(tmpconf->floppy.drives<=4) 
  40d1e8:	8c 62 00 29 	l.lbz r3,0x29(r2)
  40d1ec:	bc 43 00 04 	l.sfgtui r3,0x4
  40d1f0:	10 00 00 13 	l.bf 40d23c <LoadConfiguration.clone.7+0x100>
  40d1f4:	9c a0 00 08 	l.addi r5,r0,0x8
				{
					// If either the old config and new config have a different kickstart file,
					// or this is the first boot, we need to upload a kickstart image.
					if(strncmp(tmpconf->kickstart.name,config.kickstart.name,8)!=0)
  40d1f8:	18 80 00 41 	l.movhi r4,0x41
  40d1fc:	9c 62 00 0c 	l.addi r3,r2,0xc
  40d200:	a8 84 cc b8 	l.ori r4,r4,0xccb8
  40d204:	07 ff cc 44 	l.jal 400314 <strncmp>
  40d208:	9d c0 ff ff 	l.addi r14,r0,0xffffffff
  40d20c:	bc 2b 00 00 	l.sfnei r11,0x0
  40d210:	10 00 00 03 	l.bf 40d21c <LoadConfiguration.clone.7+0xe0>
  40d214:	18 60 00 41 	l.movhi r3,0x41
unsigned char LoadConfiguration(char *filename)
{
  DEBUG_FUNC_IN(DEBUG_F_CONFIG | DEBUG_L1);

    static const char config_id[] = "MNMGCFG0";
	char updatekickstart=0;
  40d218:	a9 cb 00 00 	l.ori r14,r11,0x0
				{
					// If either the old config and new config have a different kickstart file,
					// or this is the first boot, we need to upload a kickstart image.
					if(strncmp(tmpconf->kickstart.name,config.kickstart.name,8)!=0)
						updatekickstart=true;
	                memcpy((void*)&config, (void*)sector_buffer, sizeof(config));
  40d21c:	18 80 00 41 	l.movhi r4,0x41
  40d220:	a8 63 cc ac 	l.ori r3,r3,0xccac
  40d224:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  40d228:	9c a0 00 6c 	l.addi r5,r0,0x6c
  40d22c:	07 ff cc 15 	l.jal 400280 <memcpy>
  40d230:	9e 80 00 01 	l.addi r20,r0,0x1
  40d234:	00 00 00 4e 	l.j 40d36c <LoadConfiguration.clone.7+0x230>
  40d238:	15 00 00 00 	l.nop 0x0
					result=1; // We successfully loaded the config.
				}
				else
					BootPrint("Config file sanity check failed!\n");
  40d23c:	18 60 00 41 	l.movhi r3,0x41
  40d240:	00 00 00 03 	l.j 40d24c <LoadConfiguration.clone.7+0x110>
  40d244:	a8 63 84 af 	l.ori r3,r3,0x84af
            }
            else
                BootPrint("Wrong configuration file format!\n");
  40d248:	a8 63 84 d1 	l.ori r3,r3,0x84d1
  40d24c:	07 ff e3 a8 	l.jal 4060ec <BootPrint>
  40d250:	15 00 00 00 	l.nop 0x0
        else
            printf("Wrong configuration file size: %lu (expected: %lu)\r", file.size, sizeof(config));
    }
    if(!result)
	{
        BootPrint("Can not open configuration file!\n");
  40d254:	00 00 00 09 	l.j 40d278 <LoadConfiguration.clone.7+0x13c>
  40d258:	18 60 00 41 	l.movhi r3,0x41
            }
            else
                BootPrint("Wrong configuration file format!\n");
        }
        else
            printf("Wrong configuration file size: %lu (expected: %lu)\r", file.size, sizeof(config));
  40d25c:	d4 01 18 00 	l.sw 0x0(r1),r3
  40d260:	18 60 00 41 	l.movhi r3,0x41
  40d264:	9c 40 00 6c 	l.addi r2,r0,0x6c
  40d268:	a8 63 84 f3 	l.ori r3,r3,0x84f3
  40d26c:	07 ff dd 0a 	l.jal 404694 <printf>
  40d270:	d4 01 10 04 	l.sw 0x4(r1),r2
    }
    if(!result)
	{
        BootPrint("Can not open configuration file!\n");
  40d274:	18 60 00 41 	l.movhi r3,0x41
#include <string.h>
#include <stdint.h>

void *memset(void *dst, int c, size_t n)
{
	char *q = dst;
  40d278:	18 40 00 41 	l.movhi r2,0x41
  40d27c:	a8 63 85 27 	l.ori r3,r3,0x8527
  40d280:	07 ff e3 9b 	l.jal 4060ec <BootPrint>
  40d284:	a8 42 cc ac 	l.ori r2,r2,0xccac

		BootPrint("Setting config defaults\n");
  40d288:	18 60 00 41 	l.movhi r3,0x41
  40d28c:	07 ff e3 98 	l.jal 4060ec <BootPrint>
  40d290:	a8 63 85 49 	l.ori r3,r3,0x8549
	asm volatile ("cld ; rep ; stosq ; movl %3,%%ecx ; rep ; stosb"
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
  40d294:	00 00 00 06 	l.j 40d2ac <LoadConfiguration.clone.7+0x170>
  40d298:	18 80 00 41 	l.movhi r4,0x41
		*q++ = c;
  40d29c:	9c 60 00 00 	l.addi r3,r0,0x0
  40d2a0:	d8 02 18 00 	l.sb 0x0(r2),r3
  40d2a4:	9c 42 00 01 	l.addi r2,r2,0x1
	asm volatile ("cld ; rep ; stosq ; movl %3,%%ecx ; rep ; stosb"
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
  40d2a8:	18 80 00 41 	l.movhi r4,0x41
  40d2ac:	a8 84 cd 18 	l.ori r4,r4,0xcd18
  40d2b0:	e4 22 20 00 	l.sfne r2,r4
  40d2b4:	13 ff ff fa 	l.bf 40d29c <LoadConfiguration.clone.7+0x160>
  40d2b8:	18 60 00 41 	l.movhi r3,0x41

		// set default configuration
		memset((void*)&config, 0, sizeof(config));	// Finally found default config bug - params were reversed!
		strncpy(config.id, config_id, sizeof(config.id));
  40d2bc:	18 80 00 41 	l.movhi r4,0x41
  40d2c0:	a8 63 cc ac 	l.ori r3,r3,0xccac
  40d2c4:	a8 84 74 14 	l.ori r4,r4,0x7414
  40d2c8:	9c a0 00 08 	l.addi r5,r0,0x8
  40d2cc:	07 ff cc 28 	l.jal 40036c <strncpy>
  40d2d0:	9e 80 00 00 	l.addi r20,r0,0x0
		strncpy(config.kickstart.name, "KICK    ", sizeof(config.kickstart.name));
  40d2d4:	18 80 00 41 	l.movhi r4,0x41
  40d2d8:	9c 62 ff a0 	l.addi r3,r2,0xffffffa0
  40d2dc:	a8 84 85 62 	l.ori r4,r4,0x8562
  40d2e0:	9c a0 00 08 	l.addi r5,r0,0x8
  40d2e4:	07 ff cc 22 	l.jal 40036c <strncpy>
  40d2e8:	18 40 00 41 	l.movhi r2,0x41
		config.kickstart.long_name[0] = 0;
  40d2ec:	a8 42 cc ac 	l.ori r2,r2,0xccac
  40d2f0:	9c a0 00 00 	l.addi r5,r0,0x0
		config.memory = 0x15;
  40d2f4:	9c e0 00 15 	l.addi r7,r0,0x15
		config.cpu = 0;
		config.chipset = 0;
		config.floppy.speed=CONFIG_FLOPPY2X;
  40d2f8:	9c 60 00 01 	l.addi r3,r0,0x1
		config.floppy.drives=1;
		config.enable_ide=0;
		config.hardfile[0].enabled = 1;
		strncpy(config.hardfile[0].name, "HARDFILE", sizeof(config.hardfile[0].name));
  40d2fc:	18 80 00 41 	l.movhi r4,0x41
		// set default configuration
		memset((void*)&config, 0, sizeof(config));	// Finally found default config bug - params were reversed!
		strncpy(config.id, config_id, sizeof(config.id));
		strncpy(config.kickstart.name, "KICK    ", sizeof(config.kickstart.name));
		config.kickstart.long_name[0] = 0;
		config.memory = 0x15;
  40d300:	d8 02 38 26 	l.sb 0x26(r2),r7

		// set default configuration
		memset((void*)&config, 0, sizeof(config));	// Finally found default config bug - params were reversed!
		strncpy(config.id, config_id, sizeof(config.id));
		strncpy(config.kickstart.name, "KICK    ", sizeof(config.kickstart.name));
		config.kickstart.long_name[0] = 0;
  40d304:	d8 02 28 14 	l.sb 0x14(r2),r5
		config.memory = 0x15;
		config.cpu = 0;
  40d308:	d8 02 28 68 	l.sb 0x68(r2),r5
		config.chipset = 0;
  40d30c:	d8 02 28 27 	l.sb 0x27(r2),r5
		config.floppy.speed=CONFIG_FLOPPY2X;
  40d310:	d8 02 18 28 	l.sb 0x28(r2),r3
		config.floppy.drives=1;
  40d314:	d8 02 18 29 	l.sb 0x29(r2),r3
		config.enable_ide=0;
  40d318:	d8 02 28 2b 	l.sb 0x2b(r2),r5
		config.hardfile[0].enabled = 1;
  40d31c:	d8 02 18 30 	l.sb 0x30(r2),r3
		strncpy(config.hardfile[0].name, "HARDFILE", sizeof(config.hardfile[0].name));
  40d320:	a8 84 85 6b 	l.ori r4,r4,0x856b
  40d324:	9c 62 00 32 	l.addi r3,r2,0x32
  40d328:	9c a0 00 08 	l.addi r5,r0,0x8
  40d32c:	07 ff cc 10 	l.jal 40036c <strncpy>
  40d330:	9d c0 ff ff 	l.addi r14,r0,0xffffffff
		config.hardfile[0].long_name[0]=0;
  40d334:	9c 80 00 00 	l.addi r4,r0,0x0
		strncpy(config.hardfile[1].name, "HARDFILE", sizeof(config.hardfile[1].name));
  40d338:	9c 62 00 4e 	l.addi r3,r2,0x4e
		config.floppy.speed=CONFIG_FLOPPY2X;
		config.floppy.drives=1;
		config.enable_ide=0;
		config.hardfile[0].enabled = 1;
		strncpy(config.hardfile[0].name, "HARDFILE", sizeof(config.hardfile[0].name));
		config.hardfile[0].long_name[0]=0;
  40d33c:	d8 02 20 3a 	l.sb 0x3a(r2),r4
		strncpy(config.hardfile[1].name, "HARDFILE", sizeof(config.hardfile[1].name));
  40d340:	18 80 00 41 	l.movhi r4,0x41
  40d344:	9c a0 00 08 	l.addi r5,r0,0x8
  40d348:	07 ff cc 09 	l.jal 40036c <strncpy>
  40d34c:	a8 84 85 6b 	l.ori r4,r4,0x856b
		config.hardfile[1].long_name[0]=0;
  40d350:	9c a0 00 00 	l.addi r5,r0,0x0
		config.hardfile[1].enabled = 2;	// Default is access to entire SD card
  40d354:	9c e0 00 02 	l.addi r7,r0,0x2
		updatekickstart=true;

		BootPrint("Defaults set\n");
  40d358:	18 60 00 41 	l.movhi r3,0x41
		config.enable_ide=0;
		config.hardfile[0].enabled = 1;
		strncpy(config.hardfile[0].name, "HARDFILE", sizeof(config.hardfile[0].name));
		config.hardfile[0].long_name[0]=0;
		strncpy(config.hardfile[1].name, "HARDFILE", sizeof(config.hardfile[1].name));
		config.hardfile[1].long_name[0]=0;
  40d35c:	d8 02 28 56 	l.sb 0x56(r2),r5
		config.hardfile[1].enabled = 2;	// Default is access to entire SD card
  40d360:	d8 02 38 4c 	l.sb 0x4c(r2),r7
		updatekickstart=true;

		BootPrint("Defaults set\n");
  40d364:	07 ff e3 62 	l.jal 4060ec <BootPrint>
  40d368:	a8 63 85 74 	l.ori r3,r3,0x8574
	}

    key = OsdGetCtrl();
  40d36c:	07 ff db 81 	l.jal 404170 <OsdGetCtrl>
  40d370:	15 00 00 00 	l.nop 0x0
    if (key == KEY_F1)
  40d374:	bc 2b 00 50 	l.sfnei r11,0x50
  40d378:	10 00 00 07 	l.bf 40d394 <LoadConfiguration.clone.7+0x258>
  40d37c:	bc 2b 00 51 	l.sfnei r11,0x51
       config.chipset |= CONFIG_NTSC; // force NTSC mode if F1 pressed
  40d380:	18 40 00 41 	l.movhi r2,0x41
  40d384:	a8 42 cc ac 	l.ori r2,r2,0xccac
  40d388:	8c 62 00 27 	l.lbz r3,0x27(r2)
  40d38c:	00 00 00 08 	l.j 40d3ac <LoadConfiguration.clone.7+0x270>
  40d390:	a8 63 00 02 	l.ori r3,r3,0x2

    if (key == KEY_F2)
  40d394:	10 00 00 07 	l.bf 40d3b0 <LoadConfiguration.clone.7+0x274>
  40d398:	18 40 00 41 	l.movhi r2,0x41
       config.chipset &= ~CONFIG_NTSC; // force PAL mode if F2 pressed
  40d39c:	9c 80 ff fd 	l.addi r4,r0,0xfffffffd
  40d3a0:	a8 42 cc ac 	l.ori r2,r2,0xccac
  40d3a4:	8c 62 00 27 	l.lbz r3,0x27(r2)
  40d3a8:	e0 63 20 03 	l.and r3,r3,r4
  40d3ac:	d8 02 18 27 	l.sb 0x27(r2),r3

void ApplyConfiguration(char reloadkickstart)
{
  DEBUG_FUNC_IN(DEBUG_F_CONFIG | DEBUG_L1);

    ConfigCPU(config.cpu);
  40d3b0:	18 40 00 41 	l.movhi r2,0x41
  40d3b4:	a8 42 cc ac 	l.ori r2,r2,0xccac
  40d3b8:	07 ff db 24 	l.jal 404048 <ConfigCPU>
  40d3bc:	8c 62 00 68 	l.lbz r3,0x68(r2)

	if(reloadkickstart)
  40d3c0:	bc 2e 00 00 	l.sfnei r14,0x0
  40d3c4:	10 00 00 07 	l.bf 40d3e0 <LoadConfiguration.clone.7+0x2a4>
  40d3c8:	15 00 00 00 	l.nop 0x0
		//		UploadActionReplay();
		//}
	}
	else
	{
	    ConfigChipset(config.chipset);
  40d3cc:	07 ff db 2e 	l.jal 404084 <ConfigChipset>
  40d3d0:	8c 62 00 27 	l.lbz r3,0x27(r2)
	    ConfigFloppy(config.floppy.drives, config.floppy.speed);
  40d3d4:	8c 62 00 29 	l.lbz r3,0x29(r2)
  40d3d8:	07 ff db 39 	l.jal 4040bc <ConfigFloppy>
  40d3dc:	8c 82 00 28 	l.lbz r4,0x28(r2)
	}

	// Whether or not we uploaded a kickstart image we now need to set various parameters from the config.

  	if(OpenHardfile(0))
  40d3e0:	07 ff e2 7e 	l.jal 405dd8 <OpenHardfile>
  40d3e4:	9c 60 00 00 	l.addi r3,r0,0x0
  40d3e8:	bc 0b 00 00 	l.sfeqi r11,0x0
  40d3ec:	10 00 00 5c 	l.bf 40d55c <LoadConfiguration.clone.7+0x420>
  40d3f0:	18 40 00 41 	l.movhi r2,0x41
	{
		switch(hdf[0].type) // Customise message for SD card access
  40d3f4:	a8 42 a8 f8 	l.ori r2,r2,0xa8f8
  40d3f8:	84 62 00 00 	l.lwz r3,0x0(r2)
  40d3fc:	bc 03 00 02 	l.sfeqi r3,0x2
  40d400:	10 00 00 1c 	l.bf 40d470 <LoadConfiguration.clone.7+0x334>
  40d404:	bc 03 00 81 	l.sfeqi r3,0x81
  40d408:	10 00 00 06 	l.bf 40d420 <LoadConfiguration.clone.7+0x2e4>
  40d40c:	bc 03 00 01 	l.sfeqi r3,0x1
  40d410:	0c 00 00 1f 	l.bnf 40d48c <LoadConfiguration.clone.7+0x350>
  40d414:	15 00 00 00 	l.nop 0x0
		{
			case (HDF_FILE | HDF_SYNTHRDB):
		        sprintf(s, "Hardfile 1 (with fake RDB): %.8s.%.3s", hdf[1].file.name, &hdf[1].file.name[8]);
				break;
			case HDF_FILE:
		        sprintf(s, "Hardfile 0: %.8s.%.3s", hdf[0].file.name, &hdf[0].file.name[8]);
  40d418:	00 00 00 0b 	l.j 40d444 <LoadConfiguration.clone.7+0x308>
  40d41c:	9c 62 00 04 	l.addi r3,r2,0x4
  	if(OpenHardfile(0))
	{
		switch(hdf[0].type) // Customise message for SD card access
		{
			case (HDF_FILE | HDF_SYNTHRDB):
		        sprintf(s, "Hardfile 1 (with fake RDB): %.8s.%.3s", hdf[1].file.name, &hdf[1].file.name[8]);
  40d420:	9c 62 11 48 	l.addi r3,r2,0x1148
  40d424:	18 80 00 41 	l.movhi r4,0x41
  40d428:	d4 01 18 00 	l.sw 0x0(r1),r3
  40d42c:	9c 42 11 50 	l.addi r2,r2,0x1150
  40d430:	18 60 00 41 	l.movhi r3,0x41
  40d434:	d4 01 10 04 	l.sw 0x4(r1),r2
  40d438:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d43c:	00 00 00 09 	l.j 40d460 <LoadConfiguration.clone.7+0x324>
  40d440:	a8 84 85 82 	l.ori r4,r4,0x8582
				break;
			case HDF_FILE:
		        sprintf(s, "Hardfile 0: %.8s.%.3s", hdf[0].file.name, &hdf[0].file.name[8]);
  40d444:	18 80 00 41 	l.movhi r4,0x41
  40d448:	d4 01 18 00 	l.sw 0x0(r1),r3
  40d44c:	9c 42 00 0c 	l.addi r2,r2,0xc
  40d450:	18 60 00 41 	l.movhi r3,0x41
  40d454:	d4 01 10 04 	l.sw 0x4(r1),r2
  40d458:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d45c:	a8 84 85 a8 	l.ori r4,r4,0x85a8
  40d460:	07 ff dc 09 	l.jal 404484 <sprintf>
  40d464:	15 00 00 00 	l.nop 0x0
				break;
			default:
		        sprintf(s, "Hardfile 0: using SD card partition %d",hdf[0].type-HDF_CARD);	// Number from 1
				break;
		}
        BootPrint(s);
  40d468:	00 00 00 11 	l.j 40d4ac <LoadConfiguration.clone.7+0x370>
  40d46c:	18 60 00 41 	l.movhi r3,0x41
				break;
			case HDF_FILE:
		        sprintf(s, "Hardfile 0: %.8s.%.3s", hdf[0].file.name, &hdf[0].file.name[8]);
				break;
			case HDF_CARD:
		        sprintf(s, "Hardfile 0: using entire SD card");
  40d470:	18 60 00 41 	l.movhi r3,0x41
  40d474:	18 80 00 41 	l.movhi r4,0x41
  40d478:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d47c:	07 ff dc 02 	l.jal 404484 <sprintf>
  40d480:	a8 84 85 be 	l.ori r4,r4,0x85be
				break;
			default:
		        sprintf(s, "Hardfile 0: using SD card partition %d",hdf[0].type-HDF_CARD);	// Number from 1
				break;
		}
        BootPrint(s);
  40d484:	00 00 00 0a 	l.j 40d4ac <LoadConfiguration.clone.7+0x370>
  40d488:	18 60 00 41 	l.movhi r3,0x41
				break;
			case HDF_CARD:
		        sprintf(s, "Hardfile 0: using entire SD card");
				break;
			default:
		        sprintf(s, "Hardfile 0: using SD card partition %d",hdf[0].type-HDF_CARD);	// Number from 1
  40d48c:	9c 63 ff fe 	l.addi r3,r3,0xfffffffe
  40d490:	18 80 00 41 	l.movhi r4,0x41
  40d494:	d4 01 18 00 	l.sw 0x0(r1),r3
  40d498:	18 60 00 41 	l.movhi r3,0x41
  40d49c:	a8 84 85 df 	l.ori r4,r4,0x85df
  40d4a0:	07 ff db f9 	l.jal 404484 <sprintf>
  40d4a4:	a8 63 cd 18 	l.ori r3,r3,0xcd18
				break;
		}
        BootPrint(s);
  40d4a8:	18 60 00 41 	l.movhi r3,0x41
        sprintf(s, "CHS: %u.%u.%u", hdf[0].cylinders, hdf[0].heads, hdf[0].sectors);
  40d4ac:	18 40 00 41 	l.movhi r2,0x41
				break;
			default:
		        sprintf(s, "Hardfile 0: using SD card partition %d",hdf[0].type-HDF_CARD);	// Number from 1
				break;
		}
        BootPrint(s);
  40d4b0:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d4b4:	07 ff e3 0e 	l.jal 4060ec <BootPrint>
  40d4b8:	a8 42 a8 f8 	l.ori r2,r2,0xa8f8
        sprintf(s, "CHS: %u.%u.%u", hdf[0].cylinders, hdf[0].heads, hdf[0].sectors);
  40d4bc:	94 62 01 30 	l.lhz r3,0x130(r2)
  40d4c0:	d4 01 18 00 	l.sw 0x0(r1),r3
  40d4c4:	18 80 00 41 	l.movhi r4,0x41
  40d4c8:	94 62 01 32 	l.lhz r3,0x132(r2)
  40d4cc:	d4 01 18 04 	l.sw 0x4(r1),r3
  40d4d0:	a8 84 7b 1d 	l.ori r4,r4,0x7b1d
  40d4d4:	94 62 01 34 	l.lhz r3,0x134(r2)
  40d4d8:	d4 01 18 08 	l.sw 0x8(r1),r3
  40d4dc:	18 60 00 41 	l.movhi r3,0x41
  40d4e0:	07 ff db e9 	l.jal 404484 <sprintf>
  40d4e4:	a8 63 cd 18 	l.ori r3,r3,0xcd18
        BootPrint(s);
  40d4e8:	18 60 00 41 	l.movhi r3,0x41
  40d4ec:	07 ff e3 00 	l.jal 4060ec <BootPrint>
  40d4f0:	a8 63 cd 18 	l.ori r3,r3,0xcd18
        sprintf(s, "Size: %lu MB", ((((unsigned long) hdf[0].cylinders) * hdf[0].heads * hdf[0].sectors) >> 11));
  40d4f4:	94 62 01 32 	l.lhz r3,0x132(r2)
  40d4f8:	07 ff ca dc 	l.jal 400068 <__mulsi3>
  40d4fc:	94 82 01 30 	l.lhz r4,0x130(r2)
  40d500:	94 82 01 34 	l.lhz r4,0x134(r2)
  40d504:	07 ff ca d9 	l.jal 400068 <__mulsi3>
  40d508:	a8 6b 00 00 	l.ori r3,r11,0x0
  40d50c:	18 60 00 41 	l.movhi r3,0x41
  40d510:	18 80 00 41 	l.movhi r4,0x41
  40d514:	b9 6b 00 4b 	l.srli r11,r11,0xb
  40d518:	a8 84 86 06 	l.ori r4,r4,0x8606
  40d51c:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d520:	07 ff db d9 	l.jal 404484 <sprintf>
  40d524:	d4 01 58 00 	l.sw 0x0(r1),r11
        BootPrint(s);
  40d528:	18 60 00 41 	l.movhi r3,0x41
  40d52c:	07 ff e2 f0 	l.jal 4060ec <BootPrint>
  40d530:	a8 63 cd 18 	l.ori r3,r3,0xcd18
        sprintf(s, "Offset: %ld", hdf[0].offset);
  40d534:	18 60 00 41 	l.movhi r3,0x41
  40d538:	18 80 00 41 	l.movhi r4,0x41
  40d53c:	84 42 01 3c 	l.lwz r2,0x13c(r2)
  40d540:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d544:	a8 84 86 13 	l.ori r4,r4,0x8613
  40d548:	07 ff db cf 	l.jal 404484 <sprintf>
  40d54c:	d4 01 10 00 	l.sw 0x0(r1),r2
		BootPrint(s);
  40d550:	18 60 00 41 	l.movhi r3,0x41
  40d554:	07 ff e2 e6 	l.jal 4060ec <BootPrint>
  40d558:	a8 63 cd 18 	l.ori r3,r3,0xcd18
	}
   	if(OpenHardfile(1))
  40d55c:	07 ff e2 1f 	l.jal 405dd8 <OpenHardfile>
  40d560:	9c 60 00 01 	l.addi r3,r0,0x1
  40d564:	bc 0b 00 00 	l.sfeqi r11,0x0
  40d568:	10 00 00 5e 	l.bf 40d6e0 <LoadConfiguration.clone.7+0x5a4>
  40d56c:	18 40 00 41 	l.movhi r2,0x41
	{
		switch(hdf[1].type)
  40d570:	18 40 00 41 	l.movhi r2,0x41
  40d574:	a8 42 a8 f8 	l.ori r2,r2,0xa8f8
  40d578:	84 62 11 44 	l.lwz r3,0x1144(r2)
  40d57c:	bc 03 00 02 	l.sfeqi r3,0x2
  40d580:	10 00 00 1c 	l.bf 40d5f0 <LoadConfiguration.clone.7+0x4b4>
  40d584:	bc 03 00 81 	l.sfeqi r3,0x81
  40d588:	10 00 00 06 	l.bf 40d5a0 <LoadConfiguration.clone.7+0x464>
  40d58c:	bc 03 00 01 	l.sfeqi r3,0x1
  40d590:	0c 00 00 1f 	l.bnf 40d60c <LoadConfiguration.clone.7+0x4d0>
  40d594:	15 00 00 00 	l.nop 0x0
		{
			case (HDF_FILE | HDF_SYNTHRDB):
		        sprintf(s, "Hardfile 1 (with fake RDB): %.8s.%.3s", hdf[1].file.name, &hdf[1].file.name[8]);
				break;
			case HDF_FILE:
		        sprintf(s, "Hardfile 1: %.8s.%.3s", hdf[1].file.name, &hdf[1].file.name[8]);
  40d598:	00 00 00 0b 	l.j 40d5c4 <LoadConfiguration.clone.7+0x488>
  40d59c:	9c 62 11 48 	l.addi r3,r2,0x1148
   	if(OpenHardfile(1))
	{
		switch(hdf[1].type)
		{
			case (HDF_FILE | HDF_SYNTHRDB):
		        sprintf(s, "Hardfile 1 (with fake RDB): %.8s.%.3s", hdf[1].file.name, &hdf[1].file.name[8]);
  40d5a0:	9c 62 11 48 	l.addi r3,r2,0x1148
  40d5a4:	18 80 00 41 	l.movhi r4,0x41
  40d5a8:	d4 01 18 00 	l.sw 0x0(r1),r3
  40d5ac:	9c 42 11 50 	l.addi r2,r2,0x1150
  40d5b0:	18 60 00 41 	l.movhi r3,0x41
  40d5b4:	d4 01 10 04 	l.sw 0x4(r1),r2
  40d5b8:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d5bc:	00 00 00 09 	l.j 40d5e0 <LoadConfiguration.clone.7+0x4a4>
  40d5c0:	a8 84 85 82 	l.ori r4,r4,0x8582
				break;
			case HDF_FILE:
		        sprintf(s, "Hardfile 1: %.8s.%.3s", hdf[1].file.name, &hdf[1].file.name[8]);
  40d5c4:	18 80 00 41 	l.movhi r4,0x41
  40d5c8:	d4 01 18 00 	l.sw 0x0(r1),r3
  40d5cc:	9c 42 11 50 	l.addi r2,r2,0x1150
  40d5d0:	18 60 00 41 	l.movhi r3,0x41
  40d5d4:	d4 01 10 04 	l.sw 0x4(r1),r2
  40d5d8:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d5dc:	a8 84 86 1f 	l.ori r4,r4,0x861f
  40d5e0:	07 ff db a9 	l.jal 404484 <sprintf>
  40d5e4:	15 00 00 00 	l.nop 0x0
				break;
			default:
		        sprintf(s, "Hardfile 1: using SD card partition %d",hdf[1].type-HDF_CARD);	// Number from 1
				break;
		}
        BootPrint(s);
  40d5e8:	00 00 00 11 	l.j 40d62c <LoadConfiguration.clone.7+0x4f0>
  40d5ec:	18 60 00 41 	l.movhi r3,0x41
				break;
			case HDF_FILE:
		        sprintf(s, "Hardfile 1: %.8s.%.3s", hdf[1].file.name, &hdf[1].file.name[8]);
				break;
			case HDF_CARD:
		        sprintf(s, "Hardfile 1: using entire SD card");
  40d5f0:	18 60 00 41 	l.movhi r3,0x41
  40d5f4:	18 80 00 41 	l.movhi r4,0x41
  40d5f8:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d5fc:	07 ff db a2 	l.jal 404484 <sprintf>
  40d600:	a8 84 86 35 	l.ori r4,r4,0x8635
				break;
			default:
		        sprintf(s, "Hardfile 1: using SD card partition %d",hdf[1].type-HDF_CARD);	// Number from 1
				break;
		}
        BootPrint(s);
  40d604:	00 00 00 0a 	l.j 40d62c <LoadConfiguration.clone.7+0x4f0>
  40d608:	18 60 00 41 	l.movhi r3,0x41
				break;
			case HDF_CARD:
		        sprintf(s, "Hardfile 1: using entire SD card");
				break;
			default:
		        sprintf(s, "Hardfile 1: using SD card partition %d",hdf[1].type-HDF_CARD);	// Number from 1
  40d60c:	9c 63 ff fe 	l.addi r3,r3,0xfffffffe
  40d610:	18 80 00 41 	l.movhi r4,0x41
  40d614:	d4 01 18 00 	l.sw 0x0(r1),r3
  40d618:	18 60 00 41 	l.movhi r3,0x41
  40d61c:	a8 84 86 56 	l.ori r4,r4,0x8656
  40d620:	07 ff db 99 	l.jal 404484 <sprintf>
  40d624:	a8 63 cd 18 	l.ori r3,r3,0xcd18
				break;
		}
        BootPrint(s);
  40d628:	18 60 00 41 	l.movhi r3,0x41
        sprintf(s, "CHS: %u.%u.%u", hdf[1].cylinders, hdf[1].heads, hdf[1].sectors);
  40d62c:	18 40 00 41 	l.movhi r2,0x41
				break;
			default:
		        sprintf(s, "Hardfile 1: using SD card partition %d",hdf[1].type-HDF_CARD);	// Number from 1
				break;
		}
        BootPrint(s);
  40d630:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d634:	07 ff e2 ae 	l.jal 4060ec <BootPrint>
  40d638:	a8 42 a8 f8 	l.ori r2,r2,0xa8f8
        sprintf(s, "CHS: %u.%u.%u", hdf[1].cylinders, hdf[1].heads, hdf[1].sectors);
  40d63c:	94 62 12 74 	l.lhz r3,0x1274(r2)
  40d640:	d4 01 18 00 	l.sw 0x0(r1),r3
  40d644:	18 80 00 41 	l.movhi r4,0x41
  40d648:	94 62 12 76 	l.lhz r3,0x1276(r2)
  40d64c:	d4 01 18 04 	l.sw 0x4(r1),r3
  40d650:	a8 84 7b 1d 	l.ori r4,r4,0x7b1d
  40d654:	94 62 12 78 	l.lhz r3,0x1278(r2)
  40d658:	d4 01 18 08 	l.sw 0x8(r1),r3
  40d65c:	18 60 00 41 	l.movhi r3,0x41
  40d660:	07 ff db 89 	l.jal 404484 <sprintf>
  40d664:	a8 63 cd 18 	l.ori r3,r3,0xcd18
        BootPrint(s);
  40d668:	18 60 00 41 	l.movhi r3,0x41
  40d66c:	07 ff e2 a0 	l.jal 4060ec <BootPrint>
  40d670:	a8 63 cd 18 	l.ori r3,r3,0xcd18
        sprintf(s, "Size: %lu MB", ((((unsigned long) hdf[1].cylinders) * hdf[1].heads * hdf[1].sectors) >> 11));
  40d674:	94 62 12 76 	l.lhz r3,0x1276(r2)
  40d678:	07 ff ca 7c 	l.jal 400068 <__mulsi3>
  40d67c:	94 82 12 74 	l.lhz r4,0x1274(r2)
  40d680:	94 82 12 78 	l.lhz r4,0x1278(r2)
  40d684:	07 ff ca 79 	l.jal 400068 <__mulsi3>
  40d688:	a8 6b 00 00 	l.ori r3,r11,0x0
  40d68c:	18 60 00 41 	l.movhi r3,0x41
  40d690:	18 80 00 41 	l.movhi r4,0x41
  40d694:	b9 6b 00 4b 	l.srli r11,r11,0xb
  40d698:	a8 84 86 06 	l.ori r4,r4,0x8606
  40d69c:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d6a0:	07 ff db 79 	l.jal 404484 <sprintf>
  40d6a4:	d4 01 58 00 	l.sw 0x0(r1),r11
        BootPrint(s);
  40d6a8:	18 60 00 41 	l.movhi r3,0x41
  40d6ac:	07 ff e2 90 	l.jal 4060ec <BootPrint>
  40d6b0:	a8 63 cd 18 	l.ori r3,r3,0xcd18
        sprintf(s, "Offset: %ld", hdf[1].offset);
  40d6b4:	18 60 00 41 	l.movhi r3,0x41
  40d6b8:	18 80 00 41 	l.movhi r4,0x41
  40d6bc:	84 42 12 80 	l.lwz r2,0x1280(r2)
  40d6c0:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d6c4:	a8 84 86 13 	l.ori r4,r4,0x8613
  40d6c8:	07 ff db 6f 	l.jal 404484 <sprintf>
  40d6cc:	d4 01 10 00 	l.sw 0x0(r1),r2
        BootPrint(s);
  40d6d0:	18 60 00 41 	l.movhi r3,0x41
  40d6d4:	07 ff e2 86 	l.jal 4060ec <BootPrint>
  40d6d8:	a8 63 cd 18 	l.ori r3,r3,0xcd18
	}

    ConfigIDE(config.enable_ide, config.hardfile[0].present && config.hardfile[0].enabled, config.hardfile[1].present && config.hardfile[1].enabled);
  40d6dc:	18 40 00 41 	l.movhi r2,0x41
  40d6e0:	a8 42 cc ac 	l.ori r2,r2,0xccac
  40d6e4:	8c 82 00 31 	l.lbz r4,0x31(r2)
  40d6e8:	bc 04 00 00 	l.sfeqi r4,0x0
  40d6ec:	10 00 00 05 	l.bf 40d700 <LoadConfiguration.clone.7+0x5c4>
  40d6f0:	8c 62 00 2b 	l.lbz r3,0x2b(r2)

  DEBUG_FUNC_OUT(DEBUG_F_CONFIG | DEBUG_L1);
}


unsigned char LoadConfiguration(char *filename)
  40d6f4:	8c 82 00 30 	l.lbz r4,0x30(r2)
  40d6f8:	e0 80 20 02 	l.sub r4,r0,r4
  40d6fc:	b8 84 00 5f 	l.srli r4,r4,0x1f
        BootPrint(s);
        sprintf(s, "Offset: %ld", hdf[1].offset);
        BootPrint(s);
	}

    ConfigIDE(config.enable_ide, config.hardfile[0].present && config.hardfile[0].enabled, config.hardfile[1].present && config.hardfile[1].enabled);
  40d700:	18 40 00 41 	l.movhi r2,0x41
  40d704:	a8 42 cc ac 	l.ori r2,r2,0xccac
  40d708:	8c a2 00 4d 	l.lbz r5,0x4d(r2)
  40d70c:	bc 05 00 00 	l.sfeqi r5,0x0
  40d710:	10 00 00 05 	l.bf 40d724 <LoadConfiguration.clone.7+0x5e8>
  40d714:	a4 84 00 ff 	l.andi r4,r4,0xff

  DEBUG_FUNC_OUT(DEBUG_F_CONFIG | DEBUG_L1);
}


unsigned char LoadConfiguration(char *filename)
  40d718:	8c a2 00 4c 	l.lbz r5,0x4c(r2)
  40d71c:	e0 a0 28 02 	l.sub r5,r0,r5
  40d720:	b8 a5 00 5f 	l.srli r5,r5,0x1f
        BootPrint(s);
        sprintf(s, "Offset: %ld", hdf[1].offset);
        BootPrint(s);
	}

    ConfigIDE(config.enable_ide, config.hardfile[0].present && config.hardfile[0].enabled, config.hardfile[1].present && config.hardfile[1].enabled);
  40d724:	07 ff da 77 	l.jal 404100 <ConfigIDE>
  40d728:	18 40 00 41 	l.movhi r2,0x41

    sprintf(s, "CPU clock     : %s", config.chipset & 0x01 ? "turbo" : "normal");
  40d72c:	a8 42 cc ac 	l.ori r2,r2,0xccac
  40d730:	8c 62 00 27 	l.lbz r3,0x27(r2)
  40d734:	18 40 00 41 	l.movhi r2,0x41
  40d738:	a4 63 00 01 	l.andi r3,r3,0x1
  40d73c:	bc 03 00 00 	l.sfeqi r3,0x0
  40d740:	10 00 00 04 	l.bf 40d750 <LoadConfiguration.clone.7+0x614>
  40d744:	a8 42 84 4d 	l.ori r2,r2,0x844d
  40d748:	18 40 00 41 	l.movhi r2,0x41
  40d74c:	a8 42 84 47 	l.ori r2,r2,0x8447
  40d750:	18 60 00 41 	l.movhi r3,0x41
  40d754:	18 80 00 41 	l.movhi r4,0x41
  40d758:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d75c:	a8 84 86 7d 	l.ori r4,r4,0x867d
  40d760:	07 ff db 49 	l.jal 404484 <sprintf>
  40d764:	d4 01 10 00 	l.sw 0x0(r1),r2
    BootPrint(s);
  40d768:	18 60 00 41 	l.movhi r3,0x41
    sprintf(s, "Chip RAM size : %s", config_memory_chip_msg[config.memory & 0x03]);
  40d76c:	18 40 00 41 	l.movhi r2,0x41
	}

    ConfigIDE(config.enable_ide, config.hardfile[0].present && config.hardfile[0].enabled, config.hardfile[1].present && config.hardfile[1].enabled);

    sprintf(s, "CPU clock     : %s", config.chipset & 0x01 ? "turbo" : "normal");
    BootPrint(s);
  40d770:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d774:	07 ff e2 5e 	l.jal 4060ec <BootPrint>
  40d778:	a8 42 cc ac 	l.ori r2,r2,0xccac
    sprintf(s, "Chip RAM size : %s", config_memory_chip_msg[config.memory & 0x03]);
  40d77c:	8c 62 00 26 	l.lbz r3,0x26(r2)
  40d780:	a4 63 00 03 	l.andi r3,r3,0x3
  40d784:	18 a0 00 41 	l.movhi r5,0x41
  40d788:	b8 63 00 02 	l.slli r3,r3,0x2
  40d78c:	a8 a5 6e 7c 	l.ori r5,r5,0x6e7c
  40d790:	18 80 00 41 	l.movhi r4,0x41
  40d794:	e0 63 28 00 	l.add r3,r3,r5
  40d798:	a8 84 86 90 	l.ori r4,r4,0x8690
  40d79c:	84 63 00 00 	l.lwz r3,0x0(r3)
  40d7a0:	d4 01 18 00 	l.sw 0x0(r1),r3
  40d7a4:	18 60 00 41 	l.movhi r3,0x41
  40d7a8:	07 ff db 37 	l.jal 404484 <sprintf>
  40d7ac:	a8 63 cd 18 	l.ori r3,r3,0xcd18
    BootPrint(s);
  40d7b0:	18 60 00 41 	l.movhi r3,0x41
  40d7b4:	07 ff e2 4e 	l.jal 4060ec <BootPrint>
  40d7b8:	a8 63 cd 18 	l.ori r3,r3,0xcd18
    sprintf(s, "Slow RAM size : %s", config_memory_slow_msg[config.memory >> 2 & 0x03]);
  40d7bc:	8c 62 00 26 	l.lbz r3,0x26(r2)
  40d7c0:	18 e0 00 41 	l.movhi r7,0x41
  40d7c4:	a4 63 00 0c 	l.andi r3,r3,0xc
  40d7c8:	a8 e7 6e 8c 	l.ori r7,r7,0x6e8c
  40d7cc:	18 80 00 41 	l.movhi r4,0x41
  40d7d0:	e0 63 38 00 	l.add r3,r3,r7
  40d7d4:	a8 84 86 a3 	l.ori r4,r4,0x86a3
  40d7d8:	84 63 00 00 	l.lwz r3,0x0(r3)
  40d7dc:	d4 01 18 00 	l.sw 0x0(r1),r3
  40d7e0:	18 60 00 41 	l.movhi r3,0x41
  40d7e4:	07 ff db 28 	l.jal 404484 <sprintf>
  40d7e8:	a8 63 cd 18 	l.ori r3,r3,0xcd18
    BootPrint(s);
  40d7ec:	18 60 00 41 	l.movhi r3,0x41
  40d7f0:	07 ff e2 3f 	l.jal 4060ec <BootPrint>
  40d7f4:	a8 63 cd 18 	l.ori r3,r3,0xcd18
    sprintf(s, "Fast RAM size : %s", config_memory_fast_msg[config.memory >> 4 & 0x03]);
  40d7f8:	8c 62 00 26 	l.lbz r3,0x26(r2)
  40d7fc:	b8 63 00 42 	l.srli r3,r3,0x2
  40d800:	18 80 00 41 	l.movhi r4,0x41
  40d804:	a4 63 00 0c 	l.andi r3,r3,0xc
  40d808:	a8 84 6e a8 	l.ori r4,r4,0x6ea8
  40d80c:	e0 63 20 00 	l.add r3,r3,r4
  40d810:	18 80 00 41 	l.movhi r4,0x41
  40d814:	84 63 00 00 	l.lwz r3,0x0(r3)
  40d818:	a8 84 86 b6 	l.ori r4,r4,0x86b6
  40d81c:	d4 01 18 00 	l.sw 0x0(r1),r3
  40d820:	18 60 00 41 	l.movhi r3,0x41
  40d824:	07 ff db 18 	l.jal 404484 <sprintf>
  40d828:	a8 63 cd 18 	l.ori r3,r3,0xcd18
    BootPrint(s);
  40d82c:	18 60 00 41 	l.movhi r3,0x41
  40d830:	07 ff e2 2f 	l.jal 4060ec <BootPrint>
  40d834:	a8 63 cd 18 	l.ori r3,r3,0xcd18


    sprintf(s, "Floppy drives : %u", config.floppy.drives + 1);
  40d838:	8c 62 00 29 	l.lbz r3,0x29(r2)
  40d83c:	9c 63 00 01 	l.addi r3,r3,0x1
  40d840:	18 80 00 41 	l.movhi r4,0x41
  40d844:	d4 01 18 00 	l.sw 0x0(r1),r3
  40d848:	18 60 00 41 	l.movhi r3,0x41
  40d84c:	a8 84 86 c9 	l.ori r4,r4,0x86c9
  40d850:	07 ff db 0d 	l.jal 404484 <sprintf>
  40d854:	a8 63 cd 18 	l.ori r3,r3,0xcd18
    BootPrint(s);
  40d858:	18 60 00 41 	l.movhi r3,0x41
  40d85c:	07 ff e2 24 	l.jal 4060ec <BootPrint>
  40d860:	a8 63 cd 18 	l.ori r3,r3,0xcd18
    sprintf(s, "Floppy speed  : %s", config.floppy.speed ? "fast": "normal");
  40d864:	8c 62 00 28 	l.lbz r3,0x28(r2)
  40d868:	18 40 00 41 	l.movhi r2,0x41
  40d86c:	bc 03 00 00 	l.sfeqi r3,0x0
  40d870:	10 00 00 04 	l.bf 40d880 <LoadConfiguration.clone.7+0x744>
  40d874:	a8 42 84 4d 	l.ori r2,r2,0x844d
  40d878:	18 40 00 41 	l.movhi r2,0x41
  40d87c:	a8 42 84 54 	l.ori r2,r2,0x8454
  40d880:	18 60 00 41 	l.movhi r3,0x41
  40d884:	18 80 00 41 	l.movhi r4,0x41
  40d888:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d88c:	a8 84 86 dc 	l.ori r4,r4,0x86dc
  40d890:	07 ff da fd 	l.jal 404484 <sprintf>
  40d894:	d4 01 10 00 	l.sw 0x0(r1),r2
    BootPrint(s);
  40d898:	18 60 00 41 	l.movhi r3,0x41

    BootPrint("");

    sprintf(s, "\nA600 IDE HDC is %s.", config.enable_ide ? "enabled" : "disabled");
  40d89c:	18 40 00 41 	l.movhi r2,0x41


    sprintf(s, "Floppy drives : %u", config.floppy.drives + 1);
    BootPrint(s);
    sprintf(s, "Floppy speed  : %s", config.floppy.speed ? "fast": "normal");
    BootPrint(s);
  40d8a0:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d8a4:	07 ff e2 12 	l.jal 4060ec <BootPrint>
  40d8a8:	a8 42 cc ac 	l.ori r2,r2,0xccac

    BootPrint("");
  40d8ac:	18 60 00 41 	l.movhi r3,0x41
  40d8b0:	07 ff e2 0f 	l.jal 4060ec <BootPrint>
  40d8b4:	a8 63 83 f7 	l.ori r3,r3,0x83f7

    sprintf(s, "\nA600 IDE HDC is %s.", config.enable_ide ? "enabled" : "disabled");
  40d8b8:	8c 62 00 2b 	l.lbz r3,0x2b(r2)
  40d8bc:	18 40 00 41 	l.movhi r2,0x41
  40d8c0:	bc 03 00 00 	l.sfeqi r3,0x0
  40d8c4:	10 00 00 04 	l.bf 40d8d4 <LoadConfiguration.clone.7+0x798>
  40d8c8:	a8 42 84 61 	l.ori r2,r2,0x8461
  40d8cc:	18 40 00 41 	l.movhi r2,0x41
  40d8d0:	a8 42 84 59 	l.ori r2,r2,0x8459
  40d8d4:	18 60 00 41 	l.movhi r3,0x41
  40d8d8:	18 80 00 41 	l.movhi r4,0x41
  40d8dc:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d8e0:	a8 84 86 ef 	l.ori r4,r4,0x86ef
  40d8e4:	07 ff da e8 	l.jal 404484 <sprintf>
  40d8e8:	d4 01 10 00 	l.sw 0x0(r1),r2
    BootPrint(s);
  40d8ec:	18 60 00 41 	l.movhi r3,0x41
    sprintf(s, "Master HDD is %s.", config.hardfile[0].present ? config.hardfile[0].enabled ? "enabled" : "disabled" : "not present");
  40d8f0:	18 40 00 41 	l.movhi r2,0x41
    BootPrint(s);

    BootPrint("");

    sprintf(s, "\nA600 IDE HDC is %s.", config.enable_ide ? "enabled" : "disabled");
    BootPrint(s);
  40d8f4:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d8f8:	07 ff e1 fd 	l.jal 4060ec <BootPrint>
  40d8fc:	a8 42 84 6a 	l.ori r2,r2,0x846a
    sprintf(s, "Master HDD is %s.", config.hardfile[0].present ? config.hardfile[0].enabled ? "enabled" : "disabled" : "not present");
  40d900:	18 60 00 41 	l.movhi r3,0x41
  40d904:	a8 63 cc ac 	l.ori r3,r3,0xccac
  40d908:	8c 83 00 31 	l.lbz r4,0x31(r3)
  40d90c:	bc 04 00 00 	l.sfeqi r4,0x0
  40d910:	10 00 00 09 	l.bf 40d934 <LoadConfiguration.clone.7+0x7f8>
  40d914:	15 00 00 00 	l.nop 0x0
  40d918:	8c 63 00 30 	l.lbz r3,0x30(r3)
  40d91c:	18 40 00 41 	l.movhi r2,0x41
  40d920:	bc 03 00 00 	l.sfeqi r3,0x0
  40d924:	10 00 00 04 	l.bf 40d934 <LoadConfiguration.clone.7+0x7f8>
  40d928:	a8 42 84 61 	l.ori r2,r2,0x8461
  40d92c:	18 40 00 41 	l.movhi r2,0x41
  40d930:	a8 42 84 59 	l.ori r2,r2,0x8459
  40d934:	18 60 00 41 	l.movhi r3,0x41
  40d938:	18 80 00 41 	l.movhi r4,0x41
  40d93c:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d940:	a8 84 87 04 	l.ori r4,r4,0x8704
  40d944:	07 ff da d0 	l.jal 404484 <sprintf>
  40d948:	d4 01 10 00 	l.sw 0x0(r1),r2
    BootPrint(s);
  40d94c:	18 60 00 41 	l.movhi r3,0x41
    sprintf(s, "Slave HDD is %s.", config.hardfile[1].present ? config.hardfile[1].enabled ? "enabled" : "disabled" : "not present");
  40d950:	18 40 00 41 	l.movhi r2,0x41
    BootPrint("");

    sprintf(s, "\nA600 IDE HDC is %s.", config.enable_ide ? "enabled" : "disabled");
    BootPrint(s);
    sprintf(s, "Master HDD is %s.", config.hardfile[0].present ? config.hardfile[0].enabled ? "enabled" : "disabled" : "not present");
    BootPrint(s);
  40d954:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d958:	07 ff e1 e5 	l.jal 4060ec <BootPrint>
  40d95c:	a8 42 84 6a 	l.ori r2,r2,0x846a
    sprintf(s, "Slave HDD is %s.", config.hardfile[1].present ? config.hardfile[1].enabled ? "enabled" : "disabled" : "not present");
  40d960:	18 60 00 41 	l.movhi r3,0x41
  40d964:	a8 63 cc ac 	l.ori r3,r3,0xccac
  40d968:	8c 83 00 4d 	l.lbz r4,0x4d(r3)
  40d96c:	bc 04 00 00 	l.sfeqi r4,0x0
  40d970:	10 00 00 09 	l.bf 40d994 <LoadConfiguration.clone.7+0x858>
  40d974:	15 00 00 00 	l.nop 0x0
  40d978:	8c 63 00 4c 	l.lbz r3,0x4c(r3)
  40d97c:	18 40 00 41 	l.movhi r2,0x41
  40d980:	bc 03 00 00 	l.sfeqi r3,0x0
  40d984:	10 00 00 04 	l.bf 40d994 <LoadConfiguration.clone.7+0x858>
  40d988:	a8 42 84 61 	l.ori r2,r2,0x8461
  40d98c:	18 40 00 41 	l.movhi r2,0x41
  40d990:	a8 42 84 59 	l.ori r2,r2,0x8459
  40d994:	18 60 00 41 	l.movhi r3,0x41
  40d998:	18 80 00 41 	l.movhi r4,0x41
  40d99c:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d9a0:	a8 84 87 16 	l.ori r4,r4,0x8716
  40d9a4:	07 ff da b8 	l.jal 404484 <sprintf>
  40d9a8:	d4 01 10 00 	l.sw 0x0(r1),r2
    BootPrint(s);
  40d9ac:	18 60 00 41 	l.movhi r3,0x41
    printf("Bootloading is complete.\r");
#endif

    BootPrint("\nExiting bootloader...");

    ConfigMemory(config.memory);
  40d9b0:	18 40 00 41 	l.movhi r2,0x41
    sprintf(s, "\nA600 IDE HDC is %s.", config.enable_ide ? "enabled" : "disabled");
    BootPrint(s);
    sprintf(s, "Master HDD is %s.", config.hardfile[0].present ? config.hardfile[0].enabled ? "enabled" : "disabled" : "not present");
    BootPrint(s);
    sprintf(s, "Slave HDD is %s.", config.hardfile[1].present ? config.hardfile[1].enabled ? "enabled" : "disabled" : "not present");
    BootPrint(s);
  40d9b4:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40d9b8:	07 ff e1 cd 	l.jal 4060ec <BootPrint>
  40d9bc:	a8 42 cc ac 	l.ori r2,r2,0xccac
        BootPrint(  "***************************************************");
    }
    printf("Bootloading is complete.\r");
#endif

    BootPrint("\nExiting bootloader...");
  40d9c0:	18 60 00 41 	l.movhi r3,0x41
  40d9c4:	07 ff e1 ca 	l.jal 4060ec <BootPrint>
  40d9c8:	a8 63 87 27 	l.ori r3,r3,0x8727

    ConfigMemory(config.memory);
  40d9cc:	07 ff d9 91 	l.jal 404010 <ConfigMemory>
  40d9d0:	8c 62 00 26 	l.lbz r3,0x26(r2)
    ConfigCPU(config.cpu);
  40d9d4:	07 ff d9 9d 	l.jal 404048 <ConfigCPU>
  40d9d8:	8c 62 00 68 	l.lbz r3,0x68(r2)
    //ConfigFilter(config.filter.lores, config.filter.hires);
    //ConfigScanlines(config.scanlines);
    ConfigVideo(config.filter.hires, config.filter.lores, config.scanlines);
  40d9dc:	8c 82 00 24 	l.lbz r4,0x24(r2)
  40d9e0:	8c a2 00 2c 	l.lbz r5,0x2c(r2)
  40d9e4:	07 ff d9 76 	l.jal 403fbc <ConfigVideo>
  40d9e8:	8c 62 00 25 	l.lbz r3,0x25(r2)
    ConfigChipset(config.chipset);
  40d9ec:	07 ff d9 a6 	l.jal 404084 <ConfigChipset>
  40d9f0:	8c 62 00 27 	l.lbz r3,0x27(r2)
    ConfigFloppy(config.floppy.drives, config.floppy.speed);
  40d9f4:	8c 62 00 29 	l.lbz r3,0x29(r2)
  40d9f8:	07 ff d9 b1 	l.jal 4040bc <ConfigFloppy>
  40d9fc:	8c 82 00 28 	l.lbz r4,0x28(r2)


	if(reloadkickstart)
  40da00:	bc 0e 00 00 	l.sfeqi r14,0x0
  40da04:	10 00 02 14 	l.bf 40e254 <LoadConfiguration.clone.7+0x1118>
  40da08:	18 60 00 41 	l.movhi r3,0x41
  //SPI(4);
  //DisableOsd();
  //SPIN(); SPIN();
  //while ((read32(REG_SYS_STAT_ADR) & 0x2));

  if (RAOpen(&romfile, "HRTMON  ROM")) {
  40da0c:	18 60 00 41 	l.movhi r3,0x41
  40da10:	18 80 00 41 	l.movhi r4,0x41
  40da14:	a8 63 d9 4c 	l.ori r3,r3,0xd94c
  40da18:	07 ff ee e3 	l.jal 4095a4 <RAOpen>
  40da1c:	a8 84 87 3e 	l.ori r4,r4,0x873e
  40da20:	bc 0b 00 00 	l.sfeqi r11,0x0
  40da24:	10 00 01 63 	l.bf 40dfb0 <LoadConfiguration.clone.7+0xe74>
  40da28:	18 60 00 41 	l.movhi r3,0x41
    //BootPrintEx("Uploading HRTmon ROM...");
    size = ((romfile.file.size)+511)>>9;
  40da2c:	18 40 00 41 	l.movhi r2,0x41
  40da30:	a8 42 d9 4c 	l.ori r2,r2,0xd94c
    printf("File size: %d\r", size);
  40da34:	a8 63 7f d8 	l.ori r3,r3,0x7fd8
  //SPIN(); SPIN();
  //while ((read32(REG_SYS_STAT_ADR) & 0x2));

  if (RAOpen(&romfile, "HRTMON  ROM")) {
    //BootPrintEx("Uploading HRTmon ROM...");
    size = ((romfile.file.size)+511)>>9;
  40da38:	86 c2 00 18 	l.lwz r22,0x18(r2)
    printf("File size: %d\r", size);
    printf("[");
  40da3c:	1a 40 00 d0 	l.movhi r18,0xd0
  //SPIN(); SPIN();
  //while ((read32(REG_SYS_STAT_ADR) & 0x2));

  if (RAOpen(&romfile, "HRTMON  ROM")) {
    //BootPrintEx("Uploading HRTmon ROM...");
    size = ((romfile.file.size)+511)>>9;
  40da40:	9e d6 01 ff 	l.addi r22,r22,0x1ff
    printf("File size: %d\r", size);
    printf("[");
    for (i=0; i<size; i++) {
  40da44:	9d c0 00 00 	l.addi r14,r0,0x0
  //SPIN(); SPIN();
  //while ((read32(REG_SYS_STAT_ADR) & 0x2));

  if (RAOpen(&romfile, "HRTMON  ROM")) {
    //BootPrintEx("Uploading HRTmon ROM...");
    size = ((romfile.file.size)+511)>>9;
  40da48:	ba d6 00 49 	l.srli r22,r22,0x9
    printf("File size: %d\r", size);
  40da4c:	07 ff db 12 	l.jal 404694 <printf>
  40da50:	d4 01 b0 00 	l.sw 0x0(r1),r22
    printf("[");
  40da54:	18 60 00 41 	l.movhi r3,0x41
  40da58:	07 ff db 0f 	l.jal 404694 <printf>
  40da5c:	a8 63 7f e7 	l.ori r3,r3,0x7fe7
    for (i=0; i<size; i++) {
  40da60:	00 00 00 29 	l.j 40db04 <LoadConfiguration.clone.7+0x9c8>
  40da64:	e4 8e b0 00 	l.sfltu r14,r22
      if (!(i&15)) printf("*");
  40da68:	a4 4e 00 0f 	l.andi r2,r14,0xf
  40da6c:	bc 22 00 00 	l.sfnei r2,0x0
  40da70:	10 00 00 04 	l.bf 40da80 <LoadConfiguration.clone.7+0x944>
  40da74:	18 60 00 41 	l.movhi r3,0x41
  40da78:	07 ff db 07 	l.jal 404694 <printf>
  40da7c:	a8 63 8d 30 	l.ori r3,r3,0x8d30
      RARead(&romfile,sector_buffer,512);
  40da80:	18 60 00 41 	l.movhi r3,0x41
  40da84:	18 80 00 41 	l.movhi r4,0x41
  40da88:	a8 63 d9 4c 	l.ori r3,r3,0xd94c
  40da8c:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  40da90:	9c a0 02 00 	l.addi r5,r0,0x200
  40da94:	a8 52 00 00 	l.ori r2,r18,0x0
  40da98:	07 ff df 03 	l.jal 4056a4 <RARead>
  40da9c:	9e 00 00 00 	l.addi r16,r0,0x0
      adr = offset + base + i*512;
      for (j=0; j<512; j=j+4) {
        data = ((unsigned int*)sector_buffer)[j>>2];
  40daa0:	9c a0 ff fc 	l.addi r5,r0,0xfffffffc
  40daa4:	18 e0 00 41 	l.movhi r7,0x41
  40daa8:	e0 70 28 03 	l.and r3,r16,r5
  40daac:	a8 e7 a4 dc 	l.ori r7,r7,0xa4dc
  40dab0:	e0 63 38 00 	l.add r3,r3,r7
  40dab4:	84 63 00 00 	l.lwz r3,0x0(r3)
        write32(adr+j, data);
  40dab8:	d4 02 18 00 	l.sw 0x0(r2),r3
        if (data != read32(adr+j)) printf("Mismatch @ 0x%08x : 0x%08x != 0x%08x\r", adr+j, data, read32(adr+j));
  40dabc:	84 82 00 00 	l.lwz r4,0x0(r2)
  40dac0:	e4 03 20 00 	l.sfeq r3,r4
  40dac4:	10 00 00 09 	l.bf 40dae8 <LoadConfiguration.clone.7+0x9ac>
  40dac8:	15 00 00 00 	l.nop 0x0
  40dacc:	84 82 00 00 	l.lwz r4,0x0(r2)
  40dad0:	d4 01 18 04 	l.sw 0x4(r1),r3
  40dad4:	18 60 00 41 	l.movhi r3,0x41
  40dad8:	d4 01 10 00 	l.sw 0x0(r1),r2
  40dadc:	a8 63 87 4a 	l.ori r3,r3,0x874a
  40dae0:	07 ff da ed 	l.jal 404694 <printf>
  40dae4:	d4 01 20 08 	l.sw 0x8(r1),r4
    printf("[");
    for (i=0; i<size; i++) {
      if (!(i&15)) printf("*");
      RARead(&romfile,sector_buffer,512);
      adr = offset + base + i*512;
      for (j=0; j<512; j=j+4) {
  40dae8:	9e 10 00 04 	l.addi r16,r16,0x4
  40daec:	bc 30 02 00 	l.sfnei r16,0x200
  40daf0:	13 ff ff ec 	l.bf 40daa0 <LoadConfiguration.clone.7+0x964>
  40daf4:	9c 42 00 04 	l.addi r2,r2,0x4
  if (RAOpen(&romfile, "HRTMON  ROM")) {
    //BootPrintEx("Uploading HRTmon ROM...");
    size = ((romfile.file.size)+511)>>9;
    printf("File size: %d\r", size);
    printf("[");
    for (i=0; i<size; i++) {
  40daf8:	9d ce 00 01 	l.addi r14,r14,0x1
  40dafc:	9e 52 02 00 	l.addi r18,r18,0x200
  40db00:	e4 8e b0 00 	l.sfltu r14,r22
  40db04:	13 ff ff d9 	l.bf 40da68 <LoadConfiguration.clone.7+0x92c>
  40db08:	18 60 00 41 	l.movhi r3,0x41
    //DisableOsd();
    printf("]\r");

    // configure HRTmon
    volatile hrtmon_cfg_t* hrtcfg = (hrtmon_cfg_t*)(0xd00000);
    hrtcfg->col0h       = 0x00;
  40db0c:	18 40 00 d0 	l.movhi r2,0xd0
    //SPI(adr&0xff); adr = adr>>8;
    //SPI(adr&0xff); adr = adr>>8;
    //SPI(sector_buffer[j+0]);
    //SPI(sector_buffer[j+1]);
    //DisableOsd();
    printf("]\r");
  40db10:	07 ff da e1 	l.jal 404694 <printf>
  40db14:	a8 63 7f e9 	l.ori r3,r3,0x7fe9

    // configure HRTmon
    volatile hrtmon_cfg_t* hrtcfg = (hrtmon_cfg_t*)(0xd00000);
    hrtcfg->col0h       = 0x00;
  40db18:	9c 60 00 00 	l.addi r3,r0,0x0
    hrtcfg->col0l       = 0x5a;
  40db1c:	9c 80 00 5a 	l.addi r4,r0,0x5a
    //DisableOsd();
    printf("]\r");

    // configure HRTmon
    volatile hrtmon_cfg_t* hrtcfg = (hrtmon_cfg_t*)(0xd00000);
    hrtcfg->col0h       = 0x00;
  40db20:	d8 02 18 18 	l.sb 0x18(r2),r3
    hrtcfg->col0l       = 0x5a;
    hrtcfg->col1h       = 0x0f;
  40db24:	9c a0 00 0f 	l.addi r5,r0,0xf
    printf("]\r");

    // configure HRTmon
    volatile hrtmon_cfg_t* hrtcfg = (hrtmon_cfg_t*)(0xd00000);
    hrtcfg->col0h       = 0x00;
    hrtcfg->col0l       = 0x5a;
  40db28:	d8 02 20 19 	l.sb 0x19(r2),r4
    hrtcfg->col1h       = 0x0f;
    hrtcfg->col1l       = 0xff;
  40db2c:	9c e0 ff ff 	l.addi r7,r0,0xffffffff

    // configure HRTmon
    volatile hrtmon_cfg_t* hrtcfg = (hrtmon_cfg_t*)(0xd00000);
    hrtcfg->col0h       = 0x00;
    hrtcfg->col0l       = 0x5a;
    hrtcfg->col1h       = 0x0f;
  40db30:	d8 02 28 1a 	l.sb 0x1a(r2),r5
    hrtcfg->col1l       = 0xff;
  40db34:	d8 02 38 1b 	l.sb 0x1b(r2),r7
    hrtcfg->aga         = 0; // AGA?
  40db38:	d8 02 18 21 	l.sb 0x21(r2),r3
    hrtcfg->cd32        = 0; // CD32?
  40db3c:	d8 02 18 25 	l.sb 0x25(r2),r3
    hrtcfg->screenmode  = 0; // NTSC?
  40db40:	d8 02 18 26 	l.sb 0x26(r2),r3
    hrtcfg->novbr       = 1; // VBR?
  40db44:	9c 60 00 01 	l.addi r3,r0,0x1
    hrtcfg->hexmode     = 1; // HEXMODE?
    hrtcfg->entered     = 0;
  40db48:	9c 80 00 00 	l.addi r4,r0,0x0
    hrtcfg->col1h       = 0x0f;
    hrtcfg->col1l       = 0xff;
    hrtcfg->aga         = 0; // AGA?
    hrtcfg->cd32        = 0; // CD32?
    hrtcfg->screenmode  = 0; // NTSC?
    hrtcfg->novbr       = 1; // VBR?
  40db4c:	d8 02 18 27 	l.sb 0x27(r2),r3
    hrtcfg->hexmode     = 1; // HEXMODE?
  40db50:	d8 02 18 29 	l.sb 0x29(r2),r3
    hrtcfg->entered     = 0;
  40db54:	d8 02 20 28 	l.sb 0x28(r2),r4
    hrtcfg->keyboard    = 0; // LANG?
  40db58:	d8 02 20 1d 	l.sb 0x1d(r2),r4
    hrtcfg->max_chip    = 1; // CHIPMEM_SIZE? (in 512kB blocks)
  40db5c:	9c a0 00 01 	l.addi r5,r0,0x1
  40db60:	8c 62 00 44 	l.lbz r3,0x44(r2)
  40db64:	d8 02 20 44 	l.sb 0x44(r2),r4
    hrtcfg->mon_size    = 0x800000; // MON_SIZE? (this could be wrong, but this is in WinUAE)
  40db68:	9c e0 ff 80 	l.addi r7,r0,0xffffff80
    hrtcfg->screenmode  = 0; // NTSC?
    hrtcfg->novbr       = 1; // VBR?
    hrtcfg->hexmode     = 1; // HEXMODE?
    hrtcfg->entered     = 0;
    hrtcfg->keyboard    = 0; // LANG?
    hrtcfg->max_chip    = 1; // CHIPMEM_SIZE? (in 512kB blocks)
  40db6c:	8c 62 00 45 	l.lbz r3,0x45(r2)
  40db70:	d8 02 20 45 	l.sb 0x45(r2),r4
  40db74:	8c 62 00 46 	l.lbz r3,0x46(r2)
  40db78:	d8 02 20 46 	l.sb 0x46(r2),r4
  40db7c:	8c 62 00 47 	l.lbz r3,0x47(r2)
  40db80:	d8 02 28 47 	l.sb 0x47(r2),r5
    hrtcfg->mon_size    = 0x800000; // MON_SIZE? (this could be wrong, but this is in WinUAE)
  40db84:	8c 62 00 14 	l.lbz r3,0x14(r2)
  40db88:	d8 02 20 14 	l.sb 0x14(r2),r4
  40db8c:	8c 62 00 15 	l.lbz r3,0x15(r2)
  40db90:	d8 02 38 15 	l.sb 0x15(r2),r7
  40db94:	8c 62 00 16 	l.lbz r3,0x16(r2)
  40db98:	d8 02 20 16 	l.sb 0x16(r2),r4
  40db9c:	8c 62 00 17 	l.lbz r3,0x17(r2)
  DEBUG_FUNC_IN(DEBUG_F_CONFIG | DEBUG_L2);

  int i;
  volatile hrtmon_cfg_t* hrtcfg = (hrtmon_cfg_t*)(0xd00000);

  printf("HRTCFG:\r");
  40dba0:	18 60 00 41 	l.movhi r3,0x41
    hrtcfg->novbr       = 1; // VBR?
    hrtcfg->hexmode     = 1; // HEXMODE?
    hrtcfg->entered     = 0;
    hrtcfg->keyboard    = 0; // LANG?
    hrtcfg->max_chip    = 1; // CHIPMEM_SIZE? (in 512kB blocks)
    hrtcfg->mon_size    = 0x800000; // MON_SIZE? (this could be wrong, but this is in WinUAE)
  40dba4:	d8 02 20 17 	l.sb 0x17(r2),r4
    hrtcfg->ide         = 0; // IDE_ENABLED?
  40dba8:	d8 02 20 1f 	l.sb 0x1f(r2),r4
    hrtcfg->a1200       = 1; // IDE_TYPE? (1 = A600/A1200, 0 = A4000)
  40dbac:	d8 02 28 20 	l.sb 0x20(r2),r5
  DEBUG_FUNC_IN(DEBUG_F_CONFIG | DEBUG_L2);

  int i;
  volatile hrtmon_cfg_t* hrtcfg = (hrtmon_cfg_t*)(0xd00000);

  printf("HRTCFG:\r");
  40dbb0:	a8 63 87 70 	l.ori r3,r3,0x8770
  40dbb4:	07 ff da b8 	l.jal 404694 <printf>
  40dbb8:	9c 40 00 00 	l.addi r2,r0,0x0
  for (i=0; i<(4+4); i++) printf("dummy[%d]: %x\r", i, hrtcfg->dummy[i]);
  40dbbc:	18 80 00 d0 	l.movhi r4,0xd0
  40dbc0:	e0 62 20 00 	l.add r3,r2,r4
  40dbc4:	8c 63 00 00 	l.lbz r3,0x0(r3)
  40dbc8:	d4 01 18 04 	l.sw 0x4(r1),r3
  40dbcc:	18 60 00 41 	l.movhi r3,0x41
  40dbd0:	d4 01 10 00 	l.sw 0x0(r1),r2
  40dbd4:	a8 63 87 79 	l.ori r3,r3,0x8779
  40dbd8:	07 ff da af 	l.jal 404694 <printf>
  40dbdc:	9c 42 00 01 	l.addi r2,r2,0x1
  40dbe0:	bc 22 00 08 	l.sfnei r2,0x8
  40dbe4:	13 ff ff f7 	l.bf 40dbc0 <LoadConfiguration.clone.7+0xa84>
  40dbe8:	18 80 00 d0 	l.movhi r4,0xd0
  40dbec:	9d c0 00 00 	l.addi r14,r0,0x0
  for (i=0; i<(3*4); i++) printf("jmps[%d]: %x\r", i, hrtcfg->jmps[i]);
  40dbf0:	18 40 00 d0 	l.movhi r2,0xd0
  40dbf4:	a8 a2 00 08 	l.ori r5,r2,0x8
  40dbf8:	e0 6e 28 00 	l.add r3,r14,r5
  40dbfc:	8c 63 00 00 	l.lbz r3,0x0(r3)
  40dc00:	d4 01 18 04 	l.sw 0x4(r1),r3
  40dc04:	18 60 00 41 	l.movhi r3,0x41
  40dc08:	d4 01 70 00 	l.sw 0x0(r1),r14
  40dc0c:	a8 63 87 88 	l.ori r3,r3,0x8788
  40dc10:	07 ff da a1 	l.jal 404694 <printf>
  40dc14:	9d ce 00 01 	l.addi r14,r14,0x1
  40dc18:	bc 2e 00 0c 	l.sfnei r14,0xc
  40dc1c:	13 ff ff f5 	l.bf 40dbf0 <LoadConfiguration.clone.7+0xab4>
  40dc20:	15 00 00 00 	l.nop 0x0
  printf("mon_size: %x\r",  hrtcfg->mon_size);
  40dc24:	8c a2 00 14 	l.lbz r5,0x14(r2)
  40dc28:	8c 82 00 15 	l.lbz r4,0x15(r2)
  40dc2c:	8c 62 00 16 	l.lbz r3,0x16(r2)
  40dc30:	b8 a5 00 18 	l.slli r5,r5,0x18
  40dc34:	b8 84 00 10 	l.slli r4,r4,0x10
  40dc38:	b8 63 00 08 	l.slli r3,r3,0x8
  40dc3c:	e0 84 28 04 	l.or r4,r4,r5
  40dc40:	e0 63 20 04 	l.or r3,r3,r4
  40dc44:	8c 82 00 17 	l.lbz r4,0x17(r2)
  40dc48:	e0 64 18 04 	l.or r3,r4,r3
  40dc4c:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dc50:	18 60 00 41 	l.movhi r3,0x41
  40dc54:	07 ff da 90 	l.jal 404694 <printf>
  40dc58:	a8 63 87 96 	l.ori r3,r3,0x8796
  printf("col0h: %x\r", hrtcfg->col0h);
  40dc5c:	8c 62 00 18 	l.lbz r3,0x18(r2)
  40dc60:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dc64:	18 60 00 41 	l.movhi r3,0x41
  40dc68:	07 ff da 8b 	l.jal 404694 <printf>
  40dc6c:	a8 63 87 a4 	l.ori r3,r3,0x87a4
  printf("col0l: %x\r", hrtcfg->col0l);
  40dc70:	8c 62 00 19 	l.lbz r3,0x19(r2)
  40dc74:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dc78:	18 60 00 41 	l.movhi r3,0x41
  40dc7c:	07 ff da 86 	l.jal 404694 <printf>
  40dc80:	a8 63 87 af 	l.ori r3,r3,0x87af
  printf("col1h: %x\r", hrtcfg->col1h);
  40dc84:	8c 62 00 1a 	l.lbz r3,0x1a(r2)
  40dc88:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dc8c:	18 60 00 41 	l.movhi r3,0x41
  40dc90:	07 ff da 81 	l.jal 404694 <printf>
  40dc94:	a8 63 87 ba 	l.ori r3,r3,0x87ba
  printf("col1l: %x\r", hrtcfg->col1l);
  40dc98:	8c 62 00 1b 	l.lbz r3,0x1b(r2)
  40dc9c:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dca0:	18 60 00 41 	l.movhi r3,0x41
  40dca4:	07 ff da 7c 	l.jal 404694 <printf>
  40dca8:	a8 63 87 c5 	l.ori r3,r3,0x87c5
  printf("right: %x\r", hrtcfg->right);
  40dcac:	8c 62 00 1c 	l.lbz r3,0x1c(r2)
  40dcb0:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dcb4:	18 60 00 41 	l.movhi r3,0x41
  40dcb8:	07 ff da 77 	l.jal 404694 <printf>
  40dcbc:	a8 63 87 d0 	l.ori r3,r3,0x87d0
  printf("keyboard: %x\r", hrtcfg->keyboard);
  40dcc0:	8c 62 00 1d 	l.lbz r3,0x1d(r2)
  40dcc4:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dcc8:	18 60 00 41 	l.movhi r3,0x41
  40dccc:	07 ff da 72 	l.jal 404694 <printf>
  40dcd0:	a8 63 87 db 	l.ori r3,r3,0x87db
  printf("key: %x\r", hrtcfg->key);
  40dcd4:	8c 62 00 1e 	l.lbz r3,0x1e(r2)
  40dcd8:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dcdc:	18 60 00 41 	l.movhi r3,0x41
  40dce0:	07 ff da 6d 	l.jal 404694 <printf>
  40dce4:	a8 63 87 e9 	l.ori r3,r3,0x87e9
  printf("ide: %x\r", hrtcfg->ide);
  40dce8:	8c 62 00 1f 	l.lbz r3,0x1f(r2)
  40dcec:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dcf0:	18 60 00 41 	l.movhi r3,0x41
  40dcf4:	07 ff da 68 	l.jal 404694 <printf>
  40dcf8:	a8 63 87 f2 	l.ori r3,r3,0x87f2
  printf("a1200: %x\r", hrtcfg->a1200);
  40dcfc:	8c 62 00 20 	l.lbz r3,0x20(r2)
  40dd00:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dd04:	18 60 00 41 	l.movhi r3,0x41
  40dd08:	07 ff da 63 	l.jal 404694 <printf>
  40dd0c:	a8 63 87 fb 	l.ori r3,r3,0x87fb
  printf("aga: %x\r", hrtcfg->aga);
  40dd10:	8c 62 00 21 	l.lbz r3,0x21(r2)
  40dd14:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dd18:	18 60 00 41 	l.movhi r3,0x41
  40dd1c:	07 ff da 5e 	l.jal 404694 <printf>
  40dd20:	a8 63 88 06 	l.ori r3,r3,0x8806
  printf("insert: %x\r", hrtcfg->insert);
  40dd24:	8c 62 00 22 	l.lbz r3,0x22(r2)
  40dd28:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dd2c:	18 60 00 41 	l.movhi r3,0x41
  40dd30:	07 ff da 59 	l.jal 404694 <printf>
  40dd34:	a8 63 88 0f 	l.ori r3,r3,0x880f
  printf("delay: %x\r", hrtcfg->delay);
  40dd38:	8c 62 00 23 	l.lbz r3,0x23(r2)
  40dd3c:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dd40:	18 60 00 41 	l.movhi r3,0x41
  40dd44:	07 ff da 54 	l.jal 404694 <printf>
  40dd48:	a8 63 88 1b 	l.ori r3,r3,0x881b
  printf("lview: %x\r", hrtcfg->lview);
  40dd4c:	8c 62 00 24 	l.lbz r3,0x24(r2)
  40dd50:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dd54:	18 60 00 41 	l.movhi r3,0x41
  40dd58:	07 ff da 4f 	l.jal 404694 <printf>
  40dd5c:	a8 63 88 26 	l.ori r3,r3,0x8826
  printf("cd32: %x\r", hrtcfg->cd32);
  40dd60:	8c 62 00 25 	l.lbz r3,0x25(r2)
  40dd64:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dd68:	18 60 00 41 	l.movhi r3,0x41
  40dd6c:	07 ff da 4a 	l.jal 404694 <printf>
  40dd70:	a8 63 88 31 	l.ori r3,r3,0x8831
  printf("screenmode: %x\r", hrtcfg->screenmode);
  40dd74:	8c 62 00 26 	l.lbz r3,0x26(r2)
  40dd78:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dd7c:	18 60 00 41 	l.movhi r3,0x41
  40dd80:	07 ff da 45 	l.jal 404694 <printf>
  40dd84:	a8 63 88 3b 	l.ori r3,r3,0x883b
  printf("novbr: %x\r", hrtcfg->novbr);
  40dd88:	8c 62 00 27 	l.lbz r3,0x27(r2)
  40dd8c:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dd90:	18 60 00 41 	l.movhi r3,0x41
  40dd94:	07 ff da 40 	l.jal 404694 <printf>
  40dd98:	a8 63 88 4b 	l.ori r3,r3,0x884b
  printf("entered: %x\r", hrtcfg->entered);
  40dd9c:	8c 62 00 28 	l.lbz r3,0x28(r2)
  40dda0:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dda4:	18 60 00 41 	l.movhi r3,0x41
  40dda8:	07 ff da 3b 	l.jal 404694 <printf>
  40ddac:	a8 63 88 56 	l.ori r3,r3,0x8856
  printf("hexmode: %x\r", hrtcfg->hexmode);
  40ddb0:	8c 62 00 29 	l.lbz r3,0x29(r2)
  40ddb4:	d4 01 18 00 	l.sw 0x0(r1),r3
  40ddb8:	18 60 00 41 	l.movhi r3,0x41
  40ddbc:	07 ff da 36 	l.jal 404694 <printf>
  40ddc0:	a8 63 88 63 	l.ori r3,r3,0x8863
  printf("error_sr: %x\r", hrtcfg->error_sr);
  40ddc4:	8c 62 00 2a 	l.lbz r3,0x2a(r2)
  40ddc8:	8c 82 00 2b 	l.lbz r4,0x2b(r2)
  40ddcc:	b8 63 00 08 	l.slli r3,r3,0x8
  40ddd0:	e0 64 18 04 	l.or r3,r4,r3
  40ddd4:	d4 01 18 00 	l.sw 0x0(r1),r3
  40ddd8:	18 60 00 41 	l.movhi r3,0x41
  40dddc:	07 ff da 2e 	l.jal 404694 <printf>
  40dde0:	a8 63 88 70 	l.ori r3,r3,0x8870
  printf("error_pc: %x\r", hrtcfg->error_pc);
  40dde4:	8c a2 00 2c 	l.lbz r5,0x2c(r2)
  40dde8:	8c 82 00 2d 	l.lbz r4,0x2d(r2)
  40ddec:	8c 62 00 2e 	l.lbz r3,0x2e(r2)
  40ddf0:	b8 a5 00 18 	l.slli r5,r5,0x18
  40ddf4:	b8 84 00 10 	l.slli r4,r4,0x10
  40ddf8:	b8 63 00 08 	l.slli r3,r3,0x8
  40ddfc:	e0 84 28 04 	l.or r4,r4,r5
  40de00:	e0 63 20 04 	l.or r3,r3,r4
  40de04:	8c 82 00 2f 	l.lbz r4,0x2f(r2)
  40de08:	e0 64 18 04 	l.or r3,r4,r3
  40de0c:	d4 01 18 00 	l.sw 0x0(r1),r3
  40de10:	18 60 00 41 	l.movhi r3,0x41
  40de14:	07 ff da 20 	l.jal 404694 <printf>
  40de18:	a8 63 88 7e 	l.ori r3,r3,0x887e
  printf("error_status: %x\r", hrtcfg->error_status);
  40de1c:	8c 62 00 30 	l.lbz r3,0x30(r2)
  40de20:	8c 82 00 31 	l.lbz r4,0x31(r2)
  40de24:	b8 63 00 08 	l.slli r3,r3,0x8
  40de28:	e0 64 18 04 	l.or r3,r4,r3
  40de2c:	d4 01 18 00 	l.sw 0x0(r1),r3
  40de30:	18 60 00 41 	l.movhi r3,0x41
  40de34:	07 ff da 18 	l.jal 404694 <printf>
  40de38:	a8 63 88 8c 	l.ori r3,r3,0x888c
  printf("newid[0]: %x\r", hrtcfg->newid[0]);
  40de3c:	8c 62 00 32 	l.lbz r3,0x32(r2)
  40de40:	d4 01 18 00 	l.sw 0x0(r1),r3
  40de44:	18 60 00 41 	l.movhi r3,0x41
  40de48:	07 ff da 13 	l.jal 404694 <printf>
  40de4c:	a8 63 88 9e 	l.ori r3,r3,0x889e
  printf("mon_version: %x\r", hrtcfg->mon_version);
  40de50:	8c 62 00 38 	l.lbz r3,0x38(r2)
  40de54:	8c 82 00 39 	l.lbz r4,0x39(r2)
  40de58:	b8 63 00 08 	l.slli r3,r3,0x8
  40de5c:	e0 64 18 04 	l.or r3,r4,r3
  40de60:	d4 01 18 00 	l.sw 0x0(r1),r3
  40de64:	18 60 00 41 	l.movhi r3,0x41
  40de68:	07 ff da 0b 	l.jal 404694 <printf>
  40de6c:	a8 63 88 ac 	l.ori r3,r3,0x88ac
  printf("mon_revision: %x\r", hrtcfg->mon_revision);
  40de70:	8c 62 00 3a 	l.lbz r3,0x3a(r2)
  40de74:	8c 82 00 3b 	l.lbz r4,0x3b(r2)
  40de78:	b8 63 00 08 	l.slli r3,r3,0x8
  40de7c:	e0 64 18 04 	l.or r3,r4,r3
  40de80:	d4 01 18 00 	l.sw 0x0(r1),r3
  40de84:	18 60 00 41 	l.movhi r3,0x41
  40de88:	07 ff da 03 	l.jal 404694 <printf>
  40de8c:	a8 63 88 bd 	l.ori r3,r3,0x88bd
  printf("whd_base: %x\r", hrtcfg->whd_base);
  40de90:	8c a2 00 3c 	l.lbz r5,0x3c(r2)
  40de94:	8c 82 00 3d 	l.lbz r4,0x3d(r2)
  40de98:	8c 62 00 3e 	l.lbz r3,0x3e(r2)
  40de9c:	b8 a5 00 18 	l.slli r5,r5,0x18
  40dea0:	b8 84 00 10 	l.slli r4,r4,0x10
  40dea4:	b8 63 00 08 	l.slli r3,r3,0x8
  40dea8:	e0 84 28 04 	l.or r4,r4,r5
  40deac:	e0 63 20 04 	l.or r3,r3,r4
  40deb0:	8c 82 00 3f 	l.lbz r4,0x3f(r2)
  40deb4:	e0 64 18 04 	l.or r3,r4,r3
  40deb8:	d4 01 18 00 	l.sw 0x0(r1),r3
  40debc:	18 60 00 41 	l.movhi r3,0x41
  40dec0:	07 ff d9 f5 	l.jal 404694 <printf>
  40dec4:	a8 63 88 cf 	l.ori r3,r3,0x88cf
  printf("whd_version: %x\r", hrtcfg->whd_version);
  40dec8:	8c 62 00 40 	l.lbz r3,0x40(r2)
  40decc:	8c 82 00 41 	l.lbz r4,0x41(r2)
  40ded0:	b8 63 00 08 	l.slli r3,r3,0x8
  40ded4:	e0 64 18 04 	l.or r3,r4,r3
  40ded8:	d4 01 18 00 	l.sw 0x0(r1),r3
  40dedc:	18 60 00 41 	l.movhi r3,0x41
  40dee0:	07 ff d9 ed 	l.jal 404694 <printf>
  40dee4:	a8 63 88 dd 	l.ori r3,r3,0x88dd
  printf("whd_revision: %x\r", hrtcfg->whd_revision);
  40dee8:	8c 62 00 42 	l.lbz r3,0x42(r2)
  40deec:	8c 82 00 43 	l.lbz r4,0x43(r2)
  40def0:	b8 63 00 08 	l.slli r3,r3,0x8
  40def4:	e0 64 18 04 	l.or r3,r4,r3
  40def8:	d4 01 18 00 	l.sw 0x0(r1),r3
  40defc:	18 60 00 41 	l.movhi r3,0x41
  40df00:	07 ff d9 e5 	l.jal 404694 <printf>
  40df04:	a8 63 88 ee 	l.ori r3,r3,0x88ee
  printf("max_chip: %x\r", hrtcfg->max_chip);
  40df08:	8c a2 00 44 	l.lbz r5,0x44(r2)
  40df0c:	8c 82 00 45 	l.lbz r4,0x45(r2)
  40df10:	8c 62 00 46 	l.lbz r3,0x46(r2)
  40df14:	b8 a5 00 18 	l.slli r5,r5,0x18
  40df18:	b8 84 00 10 	l.slli r4,r4,0x10
  40df1c:	b8 63 00 08 	l.slli r3,r3,0x8
  40df20:	e0 84 28 04 	l.or r4,r4,r5
  40df24:	e0 63 20 04 	l.or r3,r3,r4
  40df28:	8c 82 00 47 	l.lbz r4,0x47(r2)
  40df2c:	e0 64 18 04 	l.or r3,r4,r3
  40df30:	d4 01 18 00 	l.sw 0x0(r1),r3
  40df34:	18 60 00 41 	l.movhi r3,0x41
  40df38:	07 ff d9 d7 	l.jal 404694 <printf>
  40df3c:	a8 63 89 00 	l.ori r3,r3,0x8900
  printf("whd_expstrt: %x\r", hrtcfg->whd_expstrt);
  40df40:	8c a2 00 48 	l.lbz r5,0x48(r2)
  40df44:	8c 82 00 49 	l.lbz r4,0x49(r2)
  40df48:	8c 62 00 4a 	l.lbz r3,0x4a(r2)
  40df4c:	b8 a5 00 18 	l.slli r5,r5,0x18
  40df50:	b8 84 00 10 	l.slli r4,r4,0x10
  40df54:	b8 63 00 08 	l.slli r3,r3,0x8
  40df58:	e0 84 28 04 	l.or r4,r4,r5
  40df5c:	e0 63 20 04 	l.or r3,r3,r4
  40df60:	8c 82 00 4b 	l.lbz r4,0x4b(r2)
  40df64:	e0 64 18 04 	l.or r3,r4,r3
  40df68:	d4 01 18 00 	l.sw 0x0(r1),r3
  40df6c:	18 60 00 41 	l.movhi r3,0x41
  40df70:	07 ff d9 c9 	l.jal 404694 <printf>
  40df74:	a8 63 89 0e 	l.ori r3,r3,0x890e
  printf("whd_expstop: %x\r", hrtcfg->whd_expstop);
  40df78:	8c a2 00 4c 	l.lbz r5,0x4c(r2)
  40df7c:	8c 82 00 4d 	l.lbz r4,0x4d(r2)
  40df80:	8c 62 00 4e 	l.lbz r3,0x4e(r2)
  40df84:	b8 a5 00 18 	l.slli r5,r5,0x18
  40df88:	b8 84 00 10 	l.slli r4,r4,0x10
  40df8c:	b8 63 00 08 	l.slli r3,r3,0x8
  40df90:	8c 42 00 4f 	l.lbz r2,0x4f(r2)
  40df94:	e0 84 28 04 	l.or r4,r4,r5
  40df98:	e0 63 20 04 	l.or r3,r3,r4
  40df9c:	e0 42 18 04 	l.or r2,r2,r3
  40dfa0:	18 60 00 41 	l.movhi r3,0x41
  40dfa4:	d4 01 10 00 	l.sw 0x0(r1),r2
  40dfa8:	07 ff d9 bb 	l.jal 404694 <printf>
  40dfac:	a8 63 89 1f 	l.ori r3,r3,0x891f

	if(reloadkickstart)
	{
    UploadActionReplay();

    printf("Reloading kickstart ...\r");
  40dfb0:	18 60 00 41 	l.movhi r3,0x41
	  TIMER_wait(1000);
  40dfb4:	18 40 00 80 	l.movhi r2,0x80

	if(reloadkickstart)
	{
    UploadActionReplay();

    printf("Reloading kickstart ...\r");
  40dfb8:	a8 63 89 30 	l.ori r3,r3,0x8930
  40dfbc:	07 ff d9 b6 	l.jal 404694 <printf>
  40dfc0:	a8 42 00 18 	l.ori r2,r2,0x18
	  TIMER_wait(1000);
  40dfc4:	9c e0 00 00 	l.addi r7,r0,0x0
  40dfc8:	a8 62 00 00 	l.ori r3,r2,0x0
  40dfcc:	d4 02 38 00 	l.sw 0x0(r2),r7
  40dfd0:	84 83 00 00 	l.lwz r4,0x0(r3)
  40dfd4:	bc a4 03 e7 	l.sfleui r4,0x3e7
  40dfd8:	13 ff ff fe 	l.bf 40dfd0 <LoadConfiguration.clone.7+0xe94>
  40dfdc:	18 40 00 80 	l.movhi r2,0x80
	    //BootExit();
    EnableOsd();
  40dfe0:	a8 a2 00 20 	l.ori r5,r2,0x20
  40dfe4:	9c 60 00 44 	l.addi r3,r0,0x44
    SPI(OSD_CMD_RST);
  40dfe8:	9c 80 00 08 	l.addi r4,r0,0x8
    UploadActionReplay();

    printf("Reloading kickstart ...\r");
	  TIMER_wait(1000);
	    //BootExit();
    EnableOsd();
  40dfec:	d4 05 18 00 	l.sw 0x0(r5),r3
    SPI(OSD_CMD_RST);
  40dff0:	a8 62 00 24 	l.ori r3,r2,0x24
    rstval |= (SPI_RST_CPU | SPI_CPU_HLT);
    SPI(rstval);
    DisableOsd();
    SPIN(); SPIN(); SPIN(); SPIN();
  40dff4:	a8 42 00 1c 	l.ori r2,r2,0x1c

    printf("Reloading kickstart ...\r");
	  TIMER_wait(1000);
	    //BootExit();
    EnableOsd();
    SPI(OSD_CMD_RST);
  40dff8:	d4 03 20 00 	l.sw 0x0(r3),r4
  40dffc:	84 83 00 00 	l.lwz r4,0x0(r3)
    rstval |= (SPI_RST_CPU | SPI_CPU_HLT);
  40e000:	18 80 00 41 	l.movhi r4,0x41
  40e004:	a8 84 a3 4c 	l.ori r4,r4,0xa34c
  40e008:	84 c4 00 00 	l.lwz r6,0x0(r4)
  40e00c:	a8 c6 00 06 	l.ori r6,r6,0x6
  40e010:	d4 04 30 00 	l.sw 0x0(r4),r6
    SPI(rstval);
  40e014:	d4 03 30 00 	l.sw 0x0(r3),r6
  40e018:	84 63 00 00 	l.lwz r3,0x0(r3)
    DisableOsd();
  40e01c:	9c 60 00 40 	l.addi r3,r0,0x40
  40e020:	d4 05 18 00 	l.sw 0x0(r5),r3
    SPIN(); SPIN(); SPIN(); SPIN();
  40e024:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e028:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e02c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e030:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e034:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e038:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e03c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e040:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e044:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e048:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e04c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e050:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e054:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e058:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e05c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e060:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e064:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e068:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e06c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e070:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e074:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e078:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e07c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e080:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e084:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e088:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e08c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e090:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e094:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e098:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e09c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e0a0:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e0a4:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e0a8:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e0ac:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e0b0:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e0b4:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e0b8:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e0bc:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e0c0:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e0c4:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e0c8:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e0cc:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e0d0:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e0d4:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e0d8:	84 62 00 00 	l.lwz r3,0x0(r2)
  40e0dc:	84 62 00 00 	l.lwz r3,0x0(r2)
		if (!UploadKickstart(config.kickstart.name))
  40e0e0:	18 60 00 41 	l.movhi r3,0x41
    EnableOsd();
    SPI(OSD_CMD_RST);
    rstval |= (SPI_RST_CPU | SPI_CPU_HLT);
    SPI(rstval);
    DisableOsd();
    SPIN(); SPIN(); SPIN(); SPIN();
  40e0e4:	84 42 00 00 	l.lwz r2,0x0(r2)
		if (!UploadKickstart(config.kickstart.name))
  40e0e8:	07 ff ef 24 	l.jal 409d78 <UploadKickstart>
  40e0ec:	a8 63 cc b8 	l.ori r3,r3,0xccb8
  40e0f0:	bc 2b 00 00 	l.sfnei r11,0x0
  40e0f4:	10 00 00 0f 	l.bf 40e130 <LoadConfiguration.clone.7+0xff4>
  40e0f8:	15 00 00 00 	l.nop 0x0
		{
		    strcpy(config.kickstart.name, "KICK    ");
  40e0fc:	18 60 00 41 	l.movhi r3,0x41
  40e100:	18 80 00 41 	l.movhi r4,0x41
  40e104:	a8 63 cc b8 	l.ori r3,r3,0xccb8
  40e108:	07 ff c8 71 	l.jal 4002cc <strcpy>
  40e10c:	a8 84 85 62 	l.ori r4,r4,0x8562
		    if (!UploadKickstart(config.kickstart.name))
  40e110:	18 60 00 41 	l.movhi r3,0x41
  40e114:	07 ff ef 19 	l.jal 409d78 <UploadKickstart>
  40e118:	a8 63 cc b8 	l.ori r3,r3,0xccb8
  40e11c:	bc 2b 00 00 	l.sfnei r11,0x0
  40e120:	10 00 00 04 	l.bf 40e130 <LoadConfiguration.clone.7+0xff4>
  40e124:	15 00 00 00 	l.nop 0x0
		        FatalError(6);
  40e128:	07 ff f1 e0 	l.jal 40a8a8 <FatalError>
  40e12c:	9c 60 00 06 	l.addi r3,r0,0x6
		}
    EnableOsd();
  40e130:	18 60 00 80 	l.movhi r3,0x80
  40e134:	9d 00 00 44 	l.addi r8,r0,0x44
  40e138:	a8 83 00 20 	l.ori r4,r3,0x20
    SPI(OSD_CMD_RST);
  40e13c:	a8 43 00 24 	l.ori r2,r3,0x24
  40e140:	9c e0 00 08 	l.addi r7,r0,0x8
		{
		    strcpy(config.kickstart.name, "KICK    ");
		    if (!UploadKickstart(config.kickstart.name))
		        FatalError(6);
		}
    EnableOsd();
  40e144:	d4 04 40 00 	l.sw 0x0(r4),r8
    SPI(OSD_CMD_RST);
  40e148:	d4 02 38 00 	l.sw 0x0(r2),r7
    rstval |= (SPI_RST_USR | SPI_RST_CPU);
    SPI(rstval);
    DisableOsd();
    SPIN(); SPIN(); SPIN(); SPIN();
  40e14c:	a8 63 00 1c 	l.ori r3,r3,0x1c
		    strcpy(config.kickstart.name, "KICK    ");
		    if (!UploadKickstart(config.kickstart.name))
		        FatalError(6);
		}
    EnableOsd();
    SPI(OSD_CMD_RST);
  40e150:	84 a2 00 00 	l.lwz r5,0x0(r2)
    rstval |= (SPI_RST_USR | SPI_RST_CPU);
  40e154:	18 a0 00 41 	l.movhi r5,0x41
  40e158:	a8 a5 a3 4c 	l.ori r5,r5,0xa34c
  40e15c:	84 c5 00 00 	l.lwz r6,0x0(r5)
  40e160:	a8 c6 00 03 	l.ori r6,r6,0x3
    SPI(rstval);
  40e164:	d4 02 30 00 	l.sw 0x0(r2),r6
  40e168:	84 c2 00 00 	l.lwz r6,0x0(r2)
    DisableOsd();
  40e16c:	9c c0 00 40 	l.addi r6,r0,0x40
  40e170:	d4 04 30 00 	l.sw 0x0(r4),r6
    SPIN(); SPIN(); SPIN(); SPIN();
  40e174:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e178:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e17c:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e180:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e184:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e188:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e18c:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e190:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e194:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e198:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e19c:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1a0:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1a4:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1a8:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1ac:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1b0:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1b4:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1b8:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1bc:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1c0:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1c4:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1c8:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1cc:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1d0:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1d4:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1d8:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1dc:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1e0:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1e4:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1e8:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1ec:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1f0:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1f4:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1f8:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e1fc:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e200:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e204:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e208:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e20c:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e210:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e214:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e218:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e21c:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e220:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e224:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e228:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e22c:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e230:	85 63 00 00 	l.lwz r11,0x0(r3)
    EnableOsd();
  40e234:	d4 04 40 00 	l.sw 0x0(r4),r8
    SPI(OSD_CMD_RST);
  40e238:	d4 02 38 00 	l.sw 0x0(r2),r7
  40e23c:	84 e2 00 00 	l.lwz r7,0x0(r2)
    rstval = 0;
  40e240:	9c e0 00 00 	l.addi r7,r0,0x0
  40e244:	d4 05 38 00 	l.sw 0x0(r5),r7
    SPI(rstval);
  40e248:	d4 02 38 00 	l.sw 0x0(r2),r7
  40e24c:	00 00 00 4a 	l.j 40e374 <LoadConfiguration.clone.7+0x1238>
  40e250:	15 00 00 00 	l.nop 0x0
    DisableOsd();
    SPIN(); SPIN(); SPIN(); SPIN();
      //while ((read32(REG_SYS_STAT_ADR) & 0x2));
	}
	else {
    printf("Resetting ...\r");
  40e254:	07 ff d9 10 	l.jal 404694 <printf>
  40e258:	a8 63 89 49 	l.ori r3,r3,0x8949
		//OsdReset(RESET_NORMAL);
    EnableOsd();
  40e25c:	18 60 00 80 	l.movhi r3,0x80
  40e260:	9d 00 00 44 	l.addi r8,r0,0x44
  40e264:	a8 83 00 20 	l.ori r4,r3,0x20
    SPI(OSD_CMD_RST);
  40e268:	a8 43 00 24 	l.ori r2,r3,0x24
  40e26c:	9c e0 00 08 	l.addi r7,r0,0x8
      //while ((read32(REG_SYS_STAT_ADR) & 0x2));
	}
	else {
    printf("Resetting ...\r");
		//OsdReset(RESET_NORMAL);
    EnableOsd();
  40e270:	d4 04 40 00 	l.sw 0x0(r4),r8
    SPI(OSD_CMD_RST);
  40e274:	d4 02 38 00 	l.sw 0x0(r2),r7
    rstval |= (SPI_RST_USR | SPI_RST_CPU);
    SPI(rstval);
    DisableOsd();
    SPIN(); SPIN(); SPIN(); SPIN();
  40e278:	a8 63 00 1c 	l.ori r3,r3,0x1c
	}
	else {
    printf("Resetting ...\r");
		//OsdReset(RESET_NORMAL);
    EnableOsd();
    SPI(OSD_CMD_RST);
  40e27c:	84 a2 00 00 	l.lwz r5,0x0(r2)
    rstval |= (SPI_RST_USR | SPI_RST_CPU);
  40e280:	18 a0 00 41 	l.movhi r5,0x41
  40e284:	a8 a5 a3 4c 	l.ori r5,r5,0xa34c
  40e288:	84 c5 00 00 	l.lwz r6,0x0(r5)
  40e28c:	a8 c6 00 03 	l.ori r6,r6,0x3
    SPI(rstval);
  40e290:	d4 02 30 00 	l.sw 0x0(r2),r6
  40e294:	84 c2 00 00 	l.lwz r6,0x0(r2)
    DisableOsd();
  40e298:	9c c0 00 40 	l.addi r6,r0,0x40
  40e29c:	d4 04 30 00 	l.sw 0x0(r4),r6
    SPIN(); SPIN(); SPIN(); SPIN();
  40e2a0:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2a4:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2a8:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2ac:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2b0:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2b4:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2b8:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2bc:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2c0:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2c4:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2c8:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2cc:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2d0:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2d4:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2d8:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2dc:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2e0:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2e4:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2e8:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2ec:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2f0:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2f4:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2f8:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e2fc:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e300:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e304:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e308:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e30c:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e310:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e314:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e318:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e31c:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e320:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e324:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e328:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e32c:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e330:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e334:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e338:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e33c:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e340:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e344:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e348:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e34c:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e350:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e354:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e358:	85 63 00 00 	l.lwz r11,0x0(r3)
  40e35c:	85 63 00 00 	l.lwz r11,0x0(r3)
    EnableOsd();
  40e360:	d4 04 40 00 	l.sw 0x0(r4),r8
    SPI(OSD_CMD_RST);
  40e364:	d4 02 38 00 	l.sw 0x0(r2),r7
  40e368:	84 e2 00 00 	l.lwz r7,0x0(r2)
    rstval = 0;
  40e36c:	d4 05 70 00 	l.sw 0x0(r5),r14
    SPI(rstval);
  40e370:	d4 02 70 00 	l.sw 0x0(r2),r14
  40e374:	84 42 00 00 	l.lwz r2,0x0(r2)
    DisableOsd();
  40e378:	d4 04 30 00 	l.sw 0x0(r4),r6
	ApplyConfiguration(updatekickstart);

    return(result);

  DEBUG_FUNC_OUT(DEBUG_F_CONFIG | DEBUG_L1);
}
  40e37c:	a9 74 00 00 	l.ori r11,r20,0x0
    EnableOsd();
    SPI(OSD_CMD_RST);
    rstval = 0;
    SPI(rstval);
    DisableOsd();
    SPIN(); SPIN(); SPIN(); SPIN();
  40e380:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e384:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e388:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e38c:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e390:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e394:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e398:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e39c:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3a0:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3a4:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3a8:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3ac:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3b0:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3b4:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3b8:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3bc:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3c0:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3c4:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3c8:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3cc:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3d0:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3d4:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3d8:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3dc:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3e0:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3e4:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3e8:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3ec:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3f0:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3f4:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3f8:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e3fc:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e400:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e404:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e408:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e40c:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e410:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e414:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e418:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e41c:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e420:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e424:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e428:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e42c:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e430:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e434:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e438:	84 43 00 00 	l.lwz r2,0x0(r3)
  40e43c:	84 43 00 00 	l.lwz r2,0x0(r3)
	ApplyConfiguration(updatekickstart);

    return(result);

  DEBUG_FUNC_OUT(DEBUG_F_CONFIG | DEBUG_L1);
}
  40e440:	9c 21 00 28 	l.addi r1,r1,0x28
  40e444:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  40e448:	84 41 ff e4 	l.lwz r2,0xffffffe4(r1)
  40e44c:	85 c1 ff e8 	l.lwz r14,0xffffffe8(r1)
  40e450:	86 01 ff ec 	l.lwz r16,0xffffffec(r1)
  40e454:	86 41 ff f0 	l.lwz r18,0xfffffff0(r1)
  40e458:	86 81 ff f4 	l.lwz r20,0xfffffff4(r1)
  40e45c:	44 00 48 00 	l.jr r9
  40e460:	86 c1 ff f8 	l.lwz r22,0xfffffff8(r1)

0040e464 <ReadTrack>:
}


// read a track from disk
void ReadTrack(adfTYPE *drive)
{ // track number is updated in drive struct before calling this function
  40e464:	d7 e1 77 d8 	l.sw 0xffffffd8(r1),r14
  40e468:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  40e46c:	d7 e1 17 d4 	l.sw 0xffffffd4(r1),r2
  40e470:	d7 e1 87 dc 	l.sw 0xffffffdc(r1),r16
  40e474:	d7 e1 97 e0 	l.sw 0xffffffe0(r1),r18
  40e478:	d7 e1 a7 e4 	l.sw 0xffffffe4(r1),r20
  40e47c:	d7 e1 b7 e8 	l.sw 0xffffffe8(r1),r22
  40e480:	d7 e1 c7 ec 	l.sw 0xffffffec(r1),r24
  40e484:	d7 e1 d7 f0 	l.sw 0xfffffff0(r1),r26
  40e488:	d7 e1 e7 f4 	l.sw 0xfffffff4(r1),r28
  40e48c:	d7 e1 f7 f8 	l.sw 0xfffffff8(r1),r30
  40e490:	a9 c3 00 00 	l.ori r14,r3,0x0
    unsigned char track;
    unsigned short dsksync;
    unsigned short dsklen;
    //unsigned short n;

    if (drive->track >= drive->tracks)
  40e494:	8c 43 02 a1 	l.lbz r2,0x2a1(r3)
  40e498:	8c 63 00 01 	l.lbz r3,0x1(r3)
  40e49c:	e4 43 10 00 	l.sfgtu r3,r2
  40e4a0:	10 00 00 0d 	l.bf 40e4d4 <ReadTrack+0x70>
  40e4a4:	9c 21 ff d0 	l.addi r1,r1,0xffffffd0
    {
        printf("Illegal track read: %d\r", drive->track);
  40e4a8:	18 60 00 41 	l.movhi r3,0x41
  40e4ac:	d4 01 10 00 	l.sw 0x0(r1),r2
  40e4b0:	07 ff d8 79 	l.jal 404694 <printf>
  40e4b4:	a8 63 89 58 	l.ori r3,r3,0x8958
        ErrorMessage("    Illegal track read!", drive->track);
  40e4b8:	18 60 00 41 	l.movhi r3,0x41
  40e4bc:	8c 8e 02 a1 	l.lbz r4,0x2a1(r14)
  40e4c0:	07 ff d7 fb 	l.jal 4044ac <ErrorMessage>
  40e4c4:	a8 63 89 70 	l.ori r3,r3,0x8970
        drive->track = drive->tracks - 1;
  40e4c8:	8c 4e 00 01 	l.lbz r2,0x1(r14)
  40e4cc:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
  40e4d0:	d8 0e 12 a1 	l.sb 0x2a1(r14),r2

    // display track number: cylinder & head
    if (vDEBUG)
        printf("*%u:", drive->track);

    if (drive->track != drive->track_prev)
  40e4d4:	8c 4e 02 a1 	l.lbz r2,0x2a1(r14)
  40e4d8:	8c 6e 02 a2 	l.lbz r3,0x2a2(r14)
  40e4dc:	18 80 00 41 	l.movhi r4,0x41
  40e4e0:	e4 03 10 00 	l.sfeq r3,r2
  40e4e4:	10 00 00 12 	l.bf 40e52c <ReadTrack+0xc8>
  40e4e8:	a8 84 cb 80 	l.ori r4,r4,0xcb80
    { // track step or track 0, start at beginning of track
        drive->track_prev = drive->track;
        sector = 0;
        file.cluster = drive->cache[drive->track];
  40e4ec:	9c 62 00 01 	l.addi r3,r2,0x1
        file.sector = drive->track * SECTOR_COUNT;
  40e4f0:	b8 a2 00 03 	l.slli r5,r2,0x3

    if (drive->track != drive->track_prev)
    { // track step or track 0, start at beginning of track
        drive->track_prev = drive->track;
        sector = 0;
        file.cluster = drive->cache[drive->track];
  40e4f4:	b8 63 00 02 	l.slli r3,r3,0x2
        file.sector = drive->track * SECTOR_COUNT;
  40e4f8:	e0 c2 10 00 	l.add r6,r2,r2
    if (vDEBUG)
        printf("*%u:", drive->track);

    if (drive->track != drive->track_prev)
    { // track step or track 0, start at beginning of track
        drive->track_prev = drive->track;
  40e4fc:	d8 0e 12 a2 	l.sb 0x2a2(r14),r2
        sector = 0;
        file.cluster = drive->cache[drive->track];
  40e500:	e0 6e 18 00 	l.add r3,r14,r3
        file.sector = drive->track * SECTOR_COUNT;
  40e504:	e0 a6 28 00 	l.add r5,r6,r5

    if (drive->track != drive->track_prev)
    { // track step or track 0, start at beginning of track
        drive->track_prev = drive->track;
        sector = 0;
        file.cluster = drive->cache[drive->track];
  40e508:	84 63 00 00 	l.lwz r3,0x0(r3)
        file.sector = drive->track * SECTOR_COUNT;
  40e50c:	e0 45 10 00 	l.add r2,r5,r2

    if (drive->track != drive->track_prev)
    { // track step or track 0, start at beginning of track
        drive->track_prev = drive->track;
        sector = 0;
        file.cluster = drive->cache[drive->track];
  40e510:	d4 04 18 1c 	l.sw 0x1c(r4),r3
        file.sector = drive->track * SECTOR_COUNT;
  40e514:	d4 04 10 14 	l.sw 0x14(r4),r2
        drive->sector_offset = sector;
  40e518:	9c 80 00 00 	l.addi r4,r0,0x0
        drive->cluster_offset = file.cluster;
  40e51c:	d4 0e 1a 9c 	l.sw 0x29c(r14),r3
    { // track step or track 0, start at beginning of track
        drive->track_prev = drive->track;
        sector = 0;
        file.cluster = drive->cache[drive->track];
        file.sector = drive->track * SECTOR_COUNT;
        drive->sector_offset = sector;
  40e520:	d8 0e 22 a0 	l.sb 0x2a0(r14),r4
        printf("*%u:", drive->track);

    if (drive->track != drive->track_prev)
    { // track step or track 0, start at beginning of track
        drive->track_prev = drive->track;
        sector = 0;
  40e524:	00 00 00 0b 	l.j 40e550 <ReadTrack+0xec>
  40e528:	9e 40 00 00 	l.addi r18,r0,0x0
        drive->cluster_offset = file.cluster;
    }
    else
    { // same track, start at next sector in track
        sector = drive->sector_offset;
        file.cluster = drive->cluster_offset;
  40e52c:	84 4e 02 9c 	l.lwz r2,0x29c(r14)
        file.sector = (drive->track * SECTOR_COUNT) + sector;
  40e530:	e0 a3 18 00 	l.add r5,r3,r3
        drive->cluster_offset = file.cluster;
    }
    else
    { // same track, start at next sector in track
        sector = drive->sector_offset;
        file.cluster = drive->cluster_offset;
  40e534:	d4 04 10 1c 	l.sw 0x1c(r4),r2
        file.sector = (drive->track * SECTOR_COUNT) + sector;
  40e538:	b8 43 00 03 	l.slli r2,r3,0x3
        drive->sector_offset = sector;
        drive->cluster_offset = file.cluster;
    }
    else
    { // same track, start at next sector in track
        sector = drive->sector_offset;
  40e53c:	8e 4e 02 a0 	l.lbz r18,0x2a0(r14)
        file.cluster = drive->cluster_offset;
        file.sector = (drive->track * SECTOR_COUNT) + sector;
  40e540:	e0 45 10 00 	l.add r2,r5,r2
  40e544:	e0 62 18 00 	l.add r3,r2,r3
  40e548:	e0 63 90 00 	l.add r3,r3,r18
  40e54c:	d4 04 18 14 	l.sw 0x14(r4),r3
    }

    EnableFpga();
  40e550:	18 40 00 80 	l.movhi r2,0x80
  40e554:	9c a0 00 22 	l.addi r5,r0,0x22
  40e558:	a8 62 00 20 	l.ori r3,r2,0x20
    status   = SPI(0); // read request signal
  40e55c:	9c c0 00 00 	l.addi r6,r0,0x0
  40e560:	a8 42 00 24 	l.ori r2,r2,0x24
        sector = drive->sector_offset;
        file.cluster = drive->cluster_offset;
        file.sector = (drive->track * SECTOR_COUNT) + sector;
    }

    EnableFpga();
  40e564:	d4 03 28 00 	l.sw 0x0(r3),r5
    status   = SPI(0); // read request signal
  40e568:	d4 02 30 00 	l.sw 0x0(r2),r6
    if (vDEBUG)
        printf("(%u)[%04X]:", status >> 6, dsksync);

    while (1)
    {
        FileRead(&file, sector_buffer);
  40e56c:	1a 80 00 41 	l.movhi r20,0x41
        file.cluster = drive->cluster_offset;
        file.sector = (drive->track * SECTOR_COUNT) + sector;
    }

    EnableFpga();
    status   = SPI(0); // read request signal
  40e570:	84 82 00 00 	l.lwz r4,0x0(r2)
    track    = SPI(0); // track number (cylinder & head)
  40e574:	d4 02 30 00 	l.sw 0x0(r2),r6
    if (vDEBUG)
        printf("(%u)[%04X]:", status >> 6, dsksync);

    while (1)
    {
        FileRead(&file, sector_buffer);
  40e578:	aa 94 cb 80 	l.ori r20,r20,0xcb80
        file.sector = (drive->track * SECTOR_COUNT) + sector;
    }

    EnableFpga();
    status   = SPI(0); // read request signal
    track    = SPI(0); // track number (cylinder & head)
  40e57c:	84 82 00 00 	l.lwz r4,0x0(r2)
    dsksync  = (SPI(0)) << 8; // disk sync high byte
  40e580:	d4 02 30 00 	l.sw 0x0(r2),r6

    while (1)
    {
        FileRead(&file, sector_buffer);

        EnableFpga();
  40e584:	ab 03 00 00 	l.ori r24,r3,0x0
    }

    EnableFpga();
    status   = SPI(0); // read request signal
    track    = SPI(0); // track number (cylinder & head)
    dsksync  = (SPI(0)) << 8; // disk sync high byte
  40e588:	84 82 00 00 	l.lwz r4,0x0(r2)
    dsksync |= SPI(0); // disk sync low byte
  40e58c:	d4 02 30 00 	l.sw 0x0(r2),r6

    while (1)
    {
        FileRead(&file, sector_buffer);

        EnableFpga();
  40e590:	ab c5 00 00 	l.ori r30,r5,0x0

    EnableFpga();
    status   = SPI(0); // read request signal
    track    = SPI(0); // track number (cylinder & head)
    dsksync  = (SPI(0)) << 8; // disk sync high byte
    dsksync |= SPI(0); // disk sync low byte
  40e594:	84 82 00 00 	l.lwz r4,0x0(r2)
    dsklen   = (SPI(0)) << 8 & 0x3F00; // msb of mfm words to transfer
  40e598:	d4 02 30 00 	l.sw 0x0(r2),r6
    unsigned short i;
    unsigned char x;
    unsigned char *p;

    // preamble
    SPI(0xAA);
  40e59c:	9e 00 00 aa 	l.addi r16,r0,0xaa
    EnableFpga();
    status   = SPI(0); // read request signal
    track    = SPI(0); // track number (cylinder & head)
    dsksync  = (SPI(0)) << 8; // disk sync high byte
    dsksync |= SPI(0); // disk sync low byte
    dsklen   = (SPI(0)) << 8 & 0x3F00; // msb of mfm words to transfer
  40e5a0:	84 82 00 00 	l.lwz r4,0x0(r2)
    dsklen  |= SPI(0); // lsb of mfm words to transfer
  40e5a4:	d4 02 30 00 	l.sw 0x0(r2),r6
    SPI(dsksyncl);

    // odd bits of header
    x = 0x55;
    checksum[0] = x;
    SPI(x);
  40e5a8:	9e c0 00 55 	l.addi r22,r0,0x55
    status   = SPI(0); // read request signal
    track    = SPI(0); // track number (cylinder & head)
    dsksync  = (SPI(0)) << 8; // disk sync high byte
    dsksync |= SPI(0); // disk sync low byte
    dsklen   = (SPI(0)) << 8 & 0x3F00; // msb of mfm words to transfer
    dsklen  |= SPI(0); // lsb of mfm words to transfer
  40e5ac:	84 82 00 00 	l.lwz r4,0x0(r2)
    DisableFpga();
  40e5b0:	9c 80 00 20 	l.addi r4,r0,0x20
    checksum[1] = x;
    SPI(x);
    x = sector >> 1 & 0x55;
    checksum[2] = x;
    SPI(x);
    x = 11 - sector >> 1 & 0x55;
  40e5b4:	9f 80 00 0b 	l.addi r28,r0,0xb
    track    = SPI(0); // track number (cylinder & head)
    dsksync  = (SPI(0)) << 8; // disk sync high byte
    dsksync |= SPI(0); // disk sync low byte
    dsklen   = (SPI(0)) << 8 & 0x3F00; // msb of mfm words to transfer
    dsklen  |= SPI(0); // lsb of mfm words to transfer
    DisableFpga();
  40e5b8:	d4 03 20 00 	l.sw 0x0(r3),r4
                    SendGap();
            }
        }

        // we are done accessing FPGA
        DisableFpga();
  40e5bc:	ab 44 00 00 	l.ori r26,r4,0x0
    if (vDEBUG)
        printf("(%u)[%04X]:", status >> 6, dsksync);

    while (1)
    {
        FileRead(&file, sector_buffer);
  40e5c0:	18 60 00 41 	l.movhi r3,0x41
  40e5c4:	18 80 00 41 	l.movhi r4,0x41
  40e5c8:	a8 63 cb 80 	l.ori r3,r3,0xcb80
  40e5cc:	07 ff db 3a 	l.jal 4052b4 <FileRead>
  40e5d0:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc

        EnableFpga();

        // check if FPGA is still asking for data
        status   = SPI(0); // read request signal
  40e5d4:	9d 80 00 00 	l.addi r12,r0,0x0

    while (1)
    {
        FileRead(&file, sector_buffer);

        EnableFpga();
  40e5d8:	d4 18 f0 00 	l.sw 0x0(r24),r30

        // check if FPGA is still asking for data
        status   = SPI(0); // read request signal
  40e5dc:	d4 02 60 00 	l.sw 0x0(r2),r12
  40e5e0:	85 62 00 00 	l.lwz r11,0x0(r2)
        track    = SPI(0); // track number (cylinder & head)
  40e5e4:	d4 02 60 00 	l.sw 0x0(r2),r12
        FileRead(&file, sector_buffer);

        EnableFpga();

        // check if FPGA is still asking for data
        status   = SPI(0); // read request signal
  40e5e8:	a5 6b 00 ff 	l.andi r11,r11,0xff
        track    = SPI(0); // track number (cylinder & head)
  40e5ec:	84 62 00 00 	l.lwz r3,0x0(r2)
        dsksync  = (SPI(0)) << 8; // disk sync high byte
  40e5f0:	d4 02 60 00 	l.sw 0x0(r2),r12

        EnableFpga();

        // check if FPGA is still asking for data
        status   = SPI(0); // read request signal
        track    = SPI(0); // track number (cylinder & head)
  40e5f4:	a4 63 00 ff 	l.andi r3,r3,0xff
        dsksync  = (SPI(0)) << 8; // disk sync high byte
  40e5f8:	84 82 00 00 	l.lwz r4,0x0(r2)
        dsksync |= SPI(0); // disk sync low byte
  40e5fc:	d4 02 60 00 	l.sw 0x0(r2),r12
        EnableFpga();

        // check if FPGA is still asking for data
        status   = SPI(0); // read request signal
        track    = SPI(0); // track number (cylinder & head)
        dsksync  = (SPI(0)) << 8; // disk sync high byte
  40e600:	b8 84 00 08 	l.slli r4,r4,0x8
        dsksync |= SPI(0); // disk sync low byte
  40e604:	84 a2 00 00 	l.lwz r5,0x0(r2)
        dsklen   = (SPI(0)) << 8 & 0x3F00; // msb of mfm words to transfer
  40e608:	d4 02 60 00 	l.sw 0x0(r2),r12

        // check if FPGA is still asking for data
        status   = SPI(0); // read request signal
        track    = SPI(0); // track number (cylinder & head)
        dsksync  = (SPI(0)) << 8; // disk sync high byte
        dsksync |= SPI(0); // disk sync low byte
  40e60c:	a4 84 ff ff 	l.andi r4,r4,0xffff
  40e610:	e0 84 28 04 	l.or r4,r4,r5
        dsklen   = (SPI(0)) << 8 & 0x3F00; // msb of mfm words to transfer
  40e614:	84 a2 00 00 	l.lwz r5,0x0(r2)
        dsklen  |= SPI(0); // lsb of mfm words to transfer
  40e618:	d4 02 60 00 	l.sw 0x0(r2),r12

        // check if FPGA is still asking for data
        status   = SPI(0); // read request signal
        track    = SPI(0); // track number (cylinder & head)
        dsksync  = (SPI(0)) << 8; // disk sync high byte
        dsksync |= SPI(0); // disk sync low byte
  40e61c:	a4 84 ff ff 	l.andi r4,r4,0xffff
        dsklen   = (SPI(0)) << 8 & 0x3F00; // msb of mfm words to transfer
        dsklen  |= SPI(0); // lsb of mfm words to transfer

        if (track >= drive->tracks)
  40e620:	8c ce 00 01 	l.lbz r6,0x1(r14)
        status   = SPI(0); // read request signal
        track    = SPI(0); // track number (cylinder & head)
        dsksync  = (SPI(0)) << 8; // disk sync high byte
        dsksync |= SPI(0); // disk sync low byte
        dsklen   = (SPI(0)) << 8 & 0x3F00; // msb of mfm words to transfer
        dsklen  |= SPI(0); // lsb of mfm words to transfer
  40e624:	84 a2 00 00 	l.lwz r5,0x0(r2)

        if (track >= drive->tracks)
  40e628:	e4 83 30 00 	l.sfltu r3,r6
  40e62c:	10 00 00 04 	l.bf 40e63c <ReadTrack+0x1d8>
  40e630:	15 00 00 00 	l.nop 0x0
            track = drive->tracks - 1;
  40e634:	9c 66 ff ff 	l.addi r3,r6,0xffffffff
  40e638:	a4 63 00 ff 	l.andi r3,r3,0xff

        // workaround for Copy Lock in Wiz'n'Liz and North&South (might brake other games)
        if (dsksync == 0x0000 || dsksync == 0x8914 || dsksync == 0xA144)
  40e63c:	a8 c0 89 14 	l.ori r6,r0,0x8914
  40e640:	e0 a4 30 05 	l.xor r5,r4,r6
  40e644:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  40e648:	bd 85 00 00 	l.sfltsi r5,0x0
  40e64c:	10 00 00 08 	l.bf 40e66c <ReadTrack+0x208>
  40e650:	9c a4 ff ff 	l.addi r5,r4,0xffffffff
  40e654:	bd 85 00 00 	l.sfltsi r5,0x0
  40e658:	10 00 00 05 	l.bf 40e66c <ReadTrack+0x208>
  40e65c:	a9 80 a1 44 	l.ori r12,r0,0xa144
  40e660:	e4 04 60 00 	l.sfeq r4,r12
  40e664:	0c 00 00 03 	l.bnf 40e670 <ReadTrack+0x20c>
  40e668:	15 00 00 00 	l.nop 0x0
            dsksync = 0x4489;
  40e66c:	9c 80 44 89 	l.addi r4,r0,0x4489

        // some loaders stop dma if sector header isn't what they expect
        // because we don't check dma transfer count after sending a word
        // the track can be changed while we are sending the rest of the previous sector
        // in this case let's start transfer from the beginning
        if (track == drive->track)
  40e670:	8c ae 02 a1 	l.lbz r5,0x2a1(r14)
  40e674:	e4 25 18 00 	l.sfne r5,r3
  40e678:	10 00 00 b2 	l.bf 40e940 <ReadTrack+0x4dc>
  40e67c:	a4 ab 00 01 	l.andi r5,r11,0x1
        {
            // send sector if fpga is still asking for data
            if (status & CMD_RDTRK)
  40e680:	bc 05 00 00 	l.sfeqi r5,0x0
  40e684:	10 00 00 af 	l.bf 40e940 <ReadTrack+0x4dc>
  40e688:	15 00 00 00 	l.nop 0x0
    unsigned short i;
    unsigned char x;
    unsigned char *p;

    // preamble
    SPI(0xAA);
  40e68c:	d4 02 80 00 	l.sw 0x0(r2),r16
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);

    // synchronization
    SPI(dsksynch);
  40e690:	b8 e4 00 48 	l.srli r7,r4,0x8
    unsigned short i;
    unsigned char x;
    unsigned char *p;

    // preamble
    SPI(0xAA);
  40e694:	84 a2 00 00 	l.lwz r5,0x0(r2)
    SPI(0xAA);
  40e698:	d4 02 80 00 	l.sw 0x0(r2),r16
    SPI(0xAA);
    SPI(0xAA);

    // synchronization
    SPI(dsksynch);
    SPI(dsksyncl);
  40e69c:	a4 c4 00 ff 	l.andi r6,r4,0xff
    unsigned char x;
    unsigned char *p;

    // preamble
    SPI(0xAA);
    SPI(0xAA);
  40e6a0:	84 a2 00 00 	l.lwz r5,0x0(r2)
    SPI(0xAA);
  40e6a4:	d4 02 80 00 	l.sw 0x0(r2),r16

    // odd bits of header
    x = 0x55;
    checksum[0] = x;
    SPI(x);
    x = track >> 1 & 0x55;
  40e6a8:	b9 a3 00 41 	l.srli r13,r3,0x1
    unsigned char *p;

    // preamble
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
  40e6ac:	84 a2 00 00 	l.lwz r5,0x0(r2)
    SPI(0xAA);
  40e6b0:	d4 02 80 00 	l.sw 0x0(r2),r16
    checksum[0] = x;
    SPI(x);
    x = track >> 1 & 0x55;
    checksum[1] = x;
    SPI(x);
    x = sector >> 1 & 0x55;
  40e6b4:	b9 92 00 41 	l.srli r12,r18,0x1

    // preamble
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
  40e6b8:	84 a2 00 00 	l.lwz r5,0x0(r2)

    // synchronization
    SPI(dsksynch);
  40e6bc:	d4 02 38 00 	l.sw 0x0(r2),r7

    // odd bits of header
    x = 0x55;
    checksum[0] = x;
    SPI(x);
    x = track >> 1 & 0x55;
  40e6c0:	a5 ad 00 55 	l.andi r13,r13,0x55
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);

    // synchronization
    SPI(dsksynch);
  40e6c4:	84 a2 00 00 	l.lwz r5,0x0(r2)
    SPI(dsksyncl);
  40e6c8:	d4 02 30 00 	l.sw 0x0(r2),r6
    checksum[0] = x;
    SPI(x);
    x = track >> 1 & 0x55;
    checksum[1] = x;
    SPI(x);
    x = sector >> 1 & 0x55;
  40e6cc:	a5 8c 00 55 	l.andi r12,r12,0x55
    SPI(0xAA);
    SPI(0xAA);

    // synchronization
    SPI(dsksynch);
    SPI(dsksyncl);
  40e6d0:	84 82 00 00 	l.lwz r4,0x0(r2)
    SPI(dsksynch);
  40e6d4:	d4 02 38 00 	l.sw 0x0(r2),r7

    // even bits of header
    x = 0x55;
    checksum[0] ^= x;
    SPI(x);
    x = track & 0x55;
  40e6d8:	a5 03 00 55 	l.andi r8,r3,0x55
    SPI(0xAA);

    // synchronization
    SPI(dsksynch);
    SPI(dsksyncl);
    SPI(dsksynch);
  40e6dc:	84 82 00 00 	l.lwz r4,0x0(r2)
    SPI(dsksyncl);
  40e6e0:	d4 02 30 00 	l.sw 0x0(r2),r6
    checksum[1] = x;
    SPI(x);
    x = sector >> 1 & 0x55;
    checksum[2] = x;
    SPI(x);
    x = 11 - sector >> 1 & 0x55;
  40e6e4:	e0 dc 90 02 	l.sub r6,r28,r18

    // synchronization
    SPI(dsksynch);
    SPI(dsksyncl);
    SPI(dsksynch);
    SPI(dsksyncl);
  40e6e8:	84 82 00 00 	l.lwz r4,0x0(r2)

    // odd bits of header
    x = 0x55;
    checksum[0] = x;
    SPI(x);
  40e6ec:	d4 02 b0 00 	l.sw 0x0(r2),r22
    checksum[1] = x;
    SPI(x);
    x = sector >> 1 & 0x55;
    checksum[2] = x;
    SPI(x);
    x = 11 - sector >> 1 & 0x55;
  40e6f0:	b8 e6 00 81 	l.srai r7,r6,0x1
    SPI(dsksyncl);

    // odd bits of header
    x = 0x55;
    checksum[0] = x;
    SPI(x);
  40e6f4:	84 82 00 00 	l.lwz r4,0x0(r2)
    x = track >> 1 & 0x55;
    checksum[1] = x;
    SPI(x);
  40e6f8:	d4 02 68 00 	l.sw 0x0(r2),r13
    x = sector >> 1 & 0x55;
    checksum[2] = x;
    SPI(x);
    x = 11 - sector >> 1 & 0x55;
  40e6fc:	a4 e7 00 55 	l.andi r7,r7,0x55
    x = 0x55;
    checksum[0] = x;
    SPI(x);
    x = track >> 1 & 0x55;
    checksum[1] = x;
    SPI(x);
  40e700:	84 82 00 00 	l.lwz r4,0x0(r2)
    x = sector >> 1 & 0x55;
    checksum[2] = x;
    SPI(x);
  40e704:	d4 02 60 00 	l.sw 0x0(r2),r12
    // even bits of header
    x = 0x55;
    checksum[0] ^= x;
    SPI(x);
    x = track & 0x55;
    checksum[1] ^= x;
  40e708:	e1 ad 40 05 	l.xor r13,r13,r8
    x = track >> 1 & 0x55;
    checksum[1] = x;
    SPI(x);
    x = sector >> 1 & 0x55;
    checksum[2] = x;
    SPI(x);
  40e70c:	84 82 00 00 	l.lwz r4,0x0(r2)
    x = 11 - sector >> 1 & 0x55;
    checksum[3] = x;
    SPI(x);
  40e710:	d4 02 38 00 	l.sw 0x0(r2),r7
    checksum[1] ^= x;
    SPI(x);
    x = sector & 0x55;
    checksum[2] ^= x;
    SPI(x);
    x = 11 - sector & 0x55;
  40e714:	a4 c6 00 55 	l.andi r6,r6,0x55
    x = sector >> 1 & 0x55;
    checksum[2] = x;
    SPI(x);
    x = 11 - sector >> 1 & 0x55;
    checksum[3] = x;
    SPI(x);
  40e718:	84 82 00 00 	l.lwz r4,0x0(r2)

    // even bits of header
    x = 0x55;
    checksum[0] ^= x;
    SPI(x);
  40e71c:	d4 02 b0 00 	l.sw 0x0(r2),r22
    SPI(x);
    x = sector & 0x55;
    checksum[2] ^= x;
    SPI(x);
    x = 11 - sector & 0x55;
    checksum[3] ^= x;
  40e720:	e0 e7 30 05 	l.xor r7,r7,r6
    SPI(x);

    // even bits of header
    x = 0x55;
    checksum[0] ^= x;
    SPI(x);
  40e724:	84 82 00 00 	l.lwz r4,0x0(r2)
    x = track & 0x55;
    checksum[1] ^= x;
    SPI(x);
  40e728:	d4 02 40 00 	l.sw 0x0(r2),r8
    x = sector & 0x55;
  40e72c:	a5 12 00 55 	l.andi r8,r18,0x55
    x = 0x55;
    checksum[0] ^= x;
    SPI(x);
    x = track & 0x55;
    checksum[1] ^= x;
    SPI(x);
  40e730:	84 82 00 00 	l.lwz r4,0x0(r2)
    x = sector & 0x55;
    checksum[2] ^= x;
    SPI(x);
  40e734:	d4 02 40 00 	l.sw 0x0(r2),r8
    SPI(x);
    x = track & 0x55;
    checksum[1] ^= x;
    SPI(x);
    x = sector & 0x55;
    checksum[2] ^= x;
  40e738:	e1 8c 40 05 	l.xor r12,r12,r8
    SPI(x);
  40e73c:	84 82 00 00 	l.lwz r4,0x0(r2)
    x = 11 - sector & 0x55;
    checksum[3] ^= x;
    SPI(x);
  40e740:	d4 02 30 00 	l.sw 0x0(r2),r6
  40e744:	9c a0 00 21 	l.addi r5,r0,0x21
  40e748:	84 82 00 00 	l.lwz r4,0x0(r2)

    // sector label and reserved area (changes nothing to checksum)
    i = 0x20;
    while (i--)
        SPI(0xAA);
  40e74c:	00 00 00 05 	l.j 40e760 <ReadTrack+0x2fc>
  40e750:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  40e754:	d4 02 80 00 	l.sw 0x0(r2),r16
  40e758:	84 82 00 00 	l.lwz r4,0x0(r2)
  40e75c:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  40e760:	a4 a5 ff ff 	l.andi r5,r5,0xffff
    checksum[3] ^= x;
    SPI(x);

    // sector label and reserved area (changes nothing to checksum)
    i = 0x20;
    while (i--)
  40e764:	bc 25 00 00 	l.sfnei r5,0x0
  40e768:	13 ff ff fb 	l.bf 40e754 <ReadTrack+0x2f0>
  40e76c:	15 00 00 00 	l.nop 0x0
        SPI(0xAA);

    // send header checksum
    SPI(0xAA);
  40e770:	d4 02 80 00 	l.sw 0x0(r2),r16
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
    SPI(checksum[0] | 0xAA);
    SPI(checksum[1] | 0xAA);
  40e774:	a9 ad 00 aa 	l.ori r13,r13,0xaa
    i = 0x20;
    while (i--)
        SPI(0xAA);

    // send header checksum
    SPI(0xAA);
  40e778:	84 82 00 00 	l.lwz r4,0x0(r2)
    SPI(0xAA);
  40e77c:	d4 02 80 00 	l.sw 0x0(r2),r16
    SPI(0xAA);
    SPI(0xAA);
    SPI(checksum[0] | 0xAA);
    SPI(checksum[1] | 0xAA);
    SPI(checksum[2] | 0xAA);
  40e780:	a9 8c 00 aa 	l.ori r12,r12,0xaa
    while (i--)
        SPI(0xAA);

    // send header checksum
    SPI(0xAA);
    SPI(0xAA);
  40e784:	84 82 00 00 	l.lwz r4,0x0(r2)
    SPI(0xAA);
  40e788:	d4 02 80 00 	l.sw 0x0(r2),r16
    SPI(0xAA);
    SPI(checksum[0] | 0xAA);
    SPI(checksum[1] | 0xAA);
    SPI(checksum[2] | 0xAA);
    SPI(checksum[3] | 0xAA);
  40e78c:	a8 e7 00 aa 	l.ori r7,r7,0xaa
        SPI(0xAA);

    // send header checksum
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
  40e790:	84 82 00 00 	l.lwz r4,0x0(r2)
    SPI(0xAA);
  40e794:	d4 02 80 00 	l.sw 0x0(r2),r16
    SPI(checksum[3] | 0xAA);

    // calculate data checksum
    checksum[0] = 0;
    checksum[1] = 0;
    checksum[2] = 0;
  40e798:	a8 c5 00 00 	l.ori r6,r5,0x0

    // send header checksum
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
  40e79c:	84 82 00 00 	l.lwz r4,0x0(r2)
    SPI(checksum[0] | 0xAA);
  40e7a0:	d4 02 80 00 	l.sw 0x0(r2),r16
    SPI(checksum[1] | 0xAA);
    SPI(checksum[2] | 0xAA);
    SPI(checksum[3] | 0xAA);

    // calculate data checksum
    checksum[0] = 0;
  40e7a4:	a9 05 00 00 	l.ori r8,r5,0x0
    // send header checksum
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
    SPI(checksum[0] | 0xAA);
  40e7a8:	84 82 00 00 	l.lwz r4,0x0(r2)
    SPI(checksum[1] | 0xAA);
  40e7ac:	d4 02 68 00 	l.sw 0x0(r2),r13
  40e7b0:	84 82 00 00 	l.lwz r4,0x0(r2)
    SPI(checksum[2] | 0xAA);
  40e7b4:	d4 02 60 00 	l.sw 0x0(r2),r12
  40e7b8:	84 82 00 00 	l.lwz r4,0x0(r2)
    SPI(checksum[3] | 0xAA);
  40e7bc:	d4 02 38 00 	l.sw 0x0(r2),r7

    // calculate data checksum
    checksum[0] = 0;
    checksum[1] = 0;
  40e7c0:	a8 e5 00 00 	l.ori r7,r5,0x0
    SPI(0xAA);
    SPI(0xAA);
    SPI(checksum[0] | 0xAA);
    SPI(checksum[1] | 0xAA);
    SPI(checksum[2] | 0xAA);
    SPI(checksum[3] | 0xAA);
  40e7c4:	84 82 00 00 	l.lwz r4,0x0(r2)
    checksum[0] = 0;
    checksum[1] = 0;
    checksum[2] = 0;
    checksum[3] = 0;

    p = pData;
  40e7c8:	18 80 00 41 	l.movhi r4,0x41
  40e7cc:	00 00 00 17 	l.j 40e828 <ReadTrack+0x3c4>
  40e7d0:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
    i = DATA_SIZE / 2 / 4;
    while (i--)
    {
        x = *p++;
  40e7d4:	8d 84 00 00 	l.lbz r12,0x0(r4)
        checksum[0] ^= x ^ x >> 1;
  40e7d8:	b9 ac 00 41 	l.srli r13,r12,0x1
  40e7dc:	e1 8c 68 05 	l.xor r12,r12,r13
  40e7e0:	e1 08 60 05 	l.xor r8,r8,r12
        x = *p++;
  40e7e4:	8d 84 00 01 	l.lbz r12,0x1(r4)
        checksum[1] ^= x ^ x >> 1;
  40e7e8:	b9 ac 00 41 	l.srli r13,r12,0x1
    p = pData;
    i = DATA_SIZE / 2 / 4;
    while (i--)
    {
        x = *p++;
        checksum[0] ^= x ^ x >> 1;
  40e7ec:	a5 08 00 ff 	l.andi r8,r8,0xff
        x = *p++;
        checksum[1] ^= x ^ x >> 1;
  40e7f0:	e1 8c 68 05 	l.xor r12,r12,r13
  40e7f4:	e0 e7 60 05 	l.xor r7,r7,r12
        x = *p++;
  40e7f8:	8d 84 00 02 	l.lbz r12,0x2(r4)
        checksum[2] ^= x ^ x >> 1;
  40e7fc:	b9 ac 00 41 	l.srli r13,r12,0x1
    while (i--)
    {
        x = *p++;
        checksum[0] ^= x ^ x >> 1;
        x = *p++;
        checksum[1] ^= x ^ x >> 1;
  40e800:	a4 e7 00 ff 	l.andi r7,r7,0xff
        x = *p++;
        checksum[2] ^= x ^ x >> 1;
  40e804:	e1 8c 68 05 	l.xor r12,r12,r13
  40e808:	e0 c6 60 05 	l.xor r6,r6,r12
        x = *p++;
  40e80c:	8d 84 00 03 	l.lbz r12,0x3(r4)
        checksum[3] ^= x ^ x >> 1;
  40e810:	b9 ac 00 41 	l.srli r13,r12,0x1
        x = *p++;
        checksum[0] ^= x ^ x >> 1;
        x = *p++;
        checksum[1] ^= x ^ x >> 1;
        x = *p++;
        checksum[2] ^= x ^ x >> 1;
  40e814:	a4 c6 00 ff 	l.andi r6,r6,0xff
  DEBUG_FUNC_OUT(DEBUG_F_FDD | DEBUG_L2);
}


// read a track from disk
void ReadTrack(adfTYPE *drive)
  40e818:	9c 84 00 04 	l.addi r4,r4,0x4
        x = *p++;
        checksum[1] ^= x ^ x >> 1;
        x = *p++;
        checksum[2] ^= x ^ x >> 1;
        x = *p++;
        checksum[3] ^= x ^ x >> 1;
  40e81c:	e1 8c 68 05 	l.xor r12,r12,r13
  40e820:	e0 a5 60 05 	l.xor r5,r5,r12
  40e824:	a4 a5 00 ff 	l.andi r5,r5,0xff
    checksum[2] = 0;
    checksum[3] = 0;

    p = pData;
    i = DATA_SIZE / 2 / 4;
    while (i--)
  40e828:	19 80 00 41 	l.movhi r12,0x41
  40e82c:	a9 8c a6 dc 	l.ori r12,r12,0xa6dc
  40e830:	e4 24 60 00 	l.sfne r4,r12
  40e834:	13 ff ff e8 	l.bf 40e7d4 <ReadTrack+0x370>
  40e838:	15 00 00 00 	l.nop 0x0
        x = *p++;
        checksum[3] ^= x ^ x >> 1;
    }

    // send data checksum
    SPI(0xAA);
  40e83c:	d4 02 80 00 	l.sw 0x0(r2),r16
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
    SPI(checksum[0] | 0xAA);
    SPI(checksum[1] | 0xAA);
  40e840:	9d 80 ff aa 	l.addi r12,r0,0xffffffaa
        x = *p++;
        checksum[3] ^= x ^ x >> 1;
    }

    // send data checksum
    SPI(0xAA);
  40e844:	84 82 00 00 	l.lwz r4,0x0(r2)
    SPI(0xAA);
  40e848:	d4 02 80 00 	l.sw 0x0(r2),r16
    SPI(0xAA);
    SPI(0xAA);
    SPI(checksum[0] | 0xAA);
    SPI(checksum[1] | 0xAA);
  40e84c:	e0 e7 60 04 	l.or r7,r7,r12
        checksum[3] ^= x ^ x >> 1;
    }

    // send data checksum
    SPI(0xAA);
    SPI(0xAA);
  40e850:	84 82 00 00 	l.lwz r4,0x0(r2)
    SPI(0xAA);
  40e854:	d4 02 80 00 	l.sw 0x0(r2),r16
    SPI(0xAA);
    SPI(checksum[0] | 0xAA);
    SPI(checksum[1] | 0xAA);
  40e858:	a4 e7 00 ff 	l.andi r7,r7,0xff
    }

    // send data checksum
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
  40e85c:	84 82 00 00 	l.lwz r4,0x0(r2)
    SPI(0xAA);
  40e860:	d4 02 80 00 	l.sw 0x0(r2),r16
    SPI(checksum[0] | 0xAA);
    SPI(checksum[1] | 0xAA);
    SPI(checksum[2] | 0xAA);
  40e864:	e0 c6 60 04 	l.or r6,r6,r12

    // send data checksum
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
  40e868:	84 82 00 00 	l.lwz r4,0x0(r2)
    SPI(checksum[0] | 0xAA);
  40e86c:	9c 80 ff aa 	l.addi r4,r0,0xffffffaa
    SPI(checksum[1] | 0xAA);
    SPI(checksum[2] | 0xAA);
  40e870:	a4 c6 00 ff 	l.andi r6,r6,0xff
    // send data checksum
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
    SPI(checksum[0] | 0xAA);
  40e874:	e1 08 20 04 	l.or r8,r8,r4
    SPI(checksum[1] | 0xAA);
    SPI(checksum[2] | 0xAA);
    SPI(checksum[3] | 0xAA);
  40e878:	e0 a5 60 04 	l.or r5,r5,r12
    // send data checksum
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
    SPI(checksum[0] | 0xAA);
  40e87c:	a5 08 00 ff 	l.andi r8,r8,0xff
    SPI(checksum[1] | 0xAA);
    SPI(checksum[2] | 0xAA);
    SPI(checksum[3] | 0xAA);
  40e880:	a4 a5 00 ff 	l.andi r5,r5,0xff
    // send data checksum
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
    SPI(0xAA);
    SPI(checksum[0] | 0xAA);
  40e884:	d4 02 40 00 	l.sw 0x0(r2),r8
  40e888:	84 82 00 00 	l.lwz r4,0x0(r2)
    SPI(checksum[1] | 0xAA);
  40e88c:	d4 02 38 00 	l.sw 0x0(r2),r7
  40e890:	84 82 00 00 	l.lwz r4,0x0(r2)
    SPI(checksum[2] | 0xAA);
  40e894:	d4 02 30 00 	l.sw 0x0(r2),r6
  40e898:	84 82 00 00 	l.lwz r4,0x0(r2)
    SPI(checksum[3] | 0xAA);
  40e89c:	d4 02 28 00 	l.sw 0x0(r2),r5
  40e8a0:	84 82 00 00 	l.lwz r4,0x0(r2)

    // odd bits of data field
    i = DATA_SIZE / 2;
    p = pData;
  40e8a4:	18 80 00 41 	l.movhi r4,0x41
  40e8a8:	00 00 00 08 	l.j 40e8c8 <ReadTrack+0x464>
  40e8ac:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
    while (i--)
        SPI(*p++ >> 1 | 0xAA);
  40e8b0:	8c a4 00 00 	l.lbz r5,0x0(r4)
  40e8b4:	b8 a5 00 41 	l.srli r5,r5,0x1
  40e8b8:	9c 84 00 01 	l.addi r4,r4,0x1
  40e8bc:	a8 a5 00 aa 	l.ori r5,r5,0xaa
  40e8c0:	d4 02 28 00 	l.sw 0x0(r2),r5
  40e8c4:	84 a2 00 00 	l.lwz r5,0x0(r2)
    SPI(checksum[3] | 0xAA);

    // odd bits of data field
    i = DATA_SIZE / 2;
    p = pData;
    while (i--)
  40e8c8:	18 a0 00 41 	l.movhi r5,0x41
  40e8cc:	a8 a5 a6 dc 	l.ori r5,r5,0xa6dc
  40e8d0:	e4 24 28 00 	l.sfne r4,r5
  40e8d4:	13 ff ff f7 	l.bf 40e8b0 <ReadTrack+0x44c>
  40e8d8:	15 00 00 00 	l.nop 0x0
  40e8dc:	18 80 00 41 	l.movhi r4,0x41
  40e8e0:	00 00 00 07 	l.j 40e8fc <ReadTrack+0x498>
  40e8e4:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc

    // even bits of data field
    i = DATA_SIZE / 2;
    p = pData;
    while (i--)
        SPI(*p++ | 0xAA);
  40e8e8:	8c a4 00 00 	l.lbz r5,0x0(r4)
  40e8ec:	a8 a5 00 aa 	l.ori r5,r5,0xaa
  40e8f0:	9c 84 00 01 	l.addi r4,r4,0x1
  40e8f4:	d4 02 28 00 	l.sw 0x0(r2),r5
  40e8f8:	84 a2 00 00 	l.lwz r5,0x0(r2)
        SPI(*p++ >> 1 | 0xAA);

    // even bits of data field
    i = DATA_SIZE / 2;
    p = pData;
    while (i--)
  40e8fc:	18 c0 00 41 	l.movhi r6,0x41
  40e900:	a8 c6 a6 dc 	l.ori r6,r6,0xa6dc
  40e904:	e4 24 30 00 	l.sfne r4,r6
  40e908:	13 ff ff f8 	l.bf 40e8e8 <ReadTrack+0x484>
  40e90c:	bc 32 00 0a 	l.sfnei r18,0xa
            {
                //GenerateHeader(sector_header, sector_buffer, sector, track, dsksync);
                //SendSector(sector_header, sector_buffer);
                SendSector(sector_buffer, sector, track, (unsigned char)(dsksync >> 8), (unsigned char)dsksync);

                if (sector == LAST_SECTOR)
  40e910:	10 00 00 0c 	l.bf 40e940 <ReadTrack+0x4dc>
  40e914:	9c 80 02 bc 	l.addi r4,r0,0x2bc
void SendGap(void)
{
  DEBUG_FUNC_IN(DEBUG_F_FDD | DEBUG_L2);

    unsigned short i = GAP_SIZE;
    while (i--)
  40e918:	00 00 00 05 	l.j 40e92c <ReadTrack+0x4c8>
  40e91c:	9c 84 ff ff 	l.addi r4,r4,0xffffffff
        SPI(0xAA);
  40e920:	d4 02 80 00 	l.sw 0x0(r2),r16
  40e924:	84 a2 00 00 	l.lwz r5,0x0(r2)
void SendGap(void)
{
  DEBUG_FUNC_IN(DEBUG_F_FDD | DEBUG_L2);

    unsigned short i = GAP_SIZE;
    while (i--)
  40e928:	9c 84 ff ff 	l.addi r4,r4,0xffffffff
  40e92c:	a9 80 ff ff 	l.ori r12,r0,0xffff
  40e930:	a4 84 ff ff 	l.andi r4,r4,0xffff
  40e934:	e4 24 60 00 	l.sfne r4,r12
  40e938:	13 ff ff fa 	l.bf 40e920 <ReadTrack+0x4bc>
  40e93c:	15 00 00 00 	l.nop 0x0
                    SendGap();
            }
        }

        // we are done accessing FPGA
        DisableFpga();
  40e940:	d4 18 d0 00 	l.sw 0x0(r24),r26

        // track has changed
        if (track != drive->track)
  40e944:	8c 8e 02 a1 	l.lbz r4,0x2a1(r14)
  40e948:	e4 24 18 00 	l.sfne r4,r3
  40e94c:	10 00 00 1c 	l.bf 40e9bc <ReadTrack+0x558>
  40e950:	a5 6b 00 01 	l.andi r11,r11,0x1
            break;

        // read dma request
        if (!(status & CMD_RDTRK))
  40e954:	bc 0b 00 00 	l.sfeqi r11,0x0
  40e958:	10 00 00 19 	l.bf 40e9bc <ReadTrack+0x558>
  40e95c:	9e 52 00 01 	l.addi r18,r18,0x1
            break;

        sector++;
  40e960:	a6 52 00 ff 	l.andi r18,r18,0xff
        if (sector < SECTOR_COUNT)
  40e964:	bc 52 00 0a 	l.sfgtui r18,0xa
  40e968:	10 00 00 07 	l.bf 40e984 <ReadTrack+0x520>
  40e96c:	9c c3 00 01 	l.addi r6,r3,0x1
        {
            FileNextSector(&file);
  40e970:	18 60 00 41 	l.movhi r3,0x41
  40e974:	07 ff da f5 	l.jal 405548 <FileNextSector>
  40e978:	a8 63 cb 80 	l.ori r3,r3,0xcb80
            file.cluster = drive->cache[drive->track];
            file.sector = drive->track * SECTOR_COUNT;
        }

        // remember current sector and cluster
        drive->sector_offset = sector;
  40e97c:	00 00 00 0d 	l.j 40e9b0 <ReadTrack+0x54c>
  40e980:	d8 0e 92 a0 	l.sb 0x2a0(r14),r18
        }
        else // go to the start of current track
        {
            sector = 0;
            file.cluster = drive->cache[drive->track];
            file.sector = drive->track * SECTOR_COUNT;
  40e984:	e0 a3 18 00 	l.add r5,r3,r3
            FileNextSector(&file);
        }
        else // go to the start of current track
        {
            sector = 0;
            file.cluster = drive->cache[drive->track];
  40e988:	b8 c6 00 02 	l.slli r6,r6,0x2
        {
            FileNextSector(&file);
        }
        else // go to the start of current track
        {
            sector = 0;
  40e98c:	9e 40 00 00 	l.addi r18,r0,0x0
            file.cluster = drive->cache[drive->track];
  40e990:	e0 ce 30 00 	l.add r6,r14,r6
  40e994:	84 86 00 00 	l.lwz r4,0x0(r6)
  40e998:	d4 14 20 1c 	l.sw 0x1c(r20),r4
            file.sector = drive->track * SECTOR_COUNT;
  40e99c:	b8 83 00 03 	l.slli r4,r3,0x3
  40e9a0:	e0 85 20 00 	l.add r4,r5,r4
  40e9a4:	e0 64 18 00 	l.add r3,r4,r3
  40e9a8:	d4 14 18 14 	l.sw 0x14(r20),r3
        }

        // remember current sector and cluster
        drive->sector_offset = sector;
  40e9ac:	d8 0e 92 a0 	l.sb 0x2a0(r14),r18
        drive->cluster_offset = file.cluster;
  40e9b0:	84 74 00 1c 	l.lwz r3,0x1c(r20)
  40e9b4:	03 ff ff 03 	l.j 40e5c0 <ReadTrack+0x15c>
  40e9b8:	d4 0e 1a 9c 	l.sw 0x29c(r14),r3
    }
    if (vDEBUG)
        printf(":OK\r");

  DEBUG_FUNC_OUT(DEBUG_F_FDD | DEBUG_L2);
}
  40e9bc:	9c 21 00 30 	l.addi r1,r1,0x30
  40e9c0:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  40e9c4:	84 41 ff d4 	l.lwz r2,0xffffffd4(r1)
  40e9c8:	85 c1 ff d8 	l.lwz r14,0xffffffd8(r1)
  40e9cc:	86 01 ff dc 	l.lwz r16,0xffffffdc(r1)
  40e9d0:	86 41 ff e0 	l.lwz r18,0xffffffe0(r1)
  40e9d4:	86 81 ff e4 	l.lwz r20,0xffffffe4(r1)
  40e9d8:	86 c1 ff e8 	l.lwz r22,0xffffffe8(r1)
  40e9dc:	87 01 ff ec 	l.lwz r24,0xffffffec(r1)
  40e9e0:	87 41 ff f0 	l.lwz r26,0xfffffff0(r1)
  40e9e4:	87 81 ff f4 	l.lwz r28,0xfffffff4(r1)
  40e9e8:	44 00 48 00 	l.jr r9
  40e9ec:	87 c1 ff f8 	l.lwz r30,0xfffffff8(r1)

0040e9f0 <GetHDFFileType.clone.10>:

unsigned char GetHDFFileType(char *filename)
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

	if(FileOpen(&rdbfile,filename))
  40e9f0:	18 60 00 41 	l.movhi r3,0x41
  40e9f4:	18 80 00 41 	l.movhi r4,0x41
}


fileTYPE rdbfile;	// We scan for RDB without mounting the file as a unit, so need a file struct specifically for this task.

unsigned char GetHDFFileType(char *filename)
  40e9f8:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
  40e9fc:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  40ea00:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

	if(FileOpen(&rdbfile,filename))
  40ea04:	a8 63 fb f8 	l.ori r3,r3,0xfbf8
}


fileTYPE rdbfile;	// We scan for RDB without mounting the file as a unit, so need a file struct specifically for this task.

unsigned char GetHDFFileType(char *filename)
  40ea08:	9c 21 ff f4 	l.addi r1,r1,0xfffffff4
{
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

	if(FileOpen(&rdbfile,filename))
  40ea0c:	a8 84 cb 80 	l.ori r4,r4,0xcb80
  40ea10:	07 ff ea 30 	l.jal 4092d0 <FileOpen>
  40ea14:	9c 40 00 01 	l.addi r2,r0,0x1
  40ea18:	bc 0b 00 00 	l.sfeqi r11,0x0
  40ea1c:	10 00 00 40 	l.bf 40eb1c <GetHDFFileType.clone.10+0x12c>
  40ea20:	18 60 00 41 	l.movhi r3,0x41
	{
		int i;
		DebugMessage("Hunting for RDB...");
		for(i=0;i<16;++i)
		{
			FileRead(&rdbfile,sector_buffer);
  40ea24:	18 40 00 41 	l.movhi r2,0x41
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

	if(FileOpen(&rdbfile,filename))
	{
		int i;
		DebugMessage("Hunting for RDB...");
  40ea28:	a8 63 89 88 	l.ori r3,r3,0x8988
		for(i=0;i<16;++i)
  40ea2c:	9d c0 00 00 	l.addi r14,r0,0x0
  DEBUG_FUNC_IN(DEBUG_F_HDD | DEBUG_L1);

	if(FileOpen(&rdbfile,filename))
	{
		int i;
		DebugMessage("Hunting for RDB...");
  40ea30:	07 ff d1 c3 	l.jal 40313c <DebugMessage>
  40ea34:	a8 42 a4 dc 	l.ori r2,r2,0xa4dc
		for(i=0;i<16;++i)
		{
			FileRead(&rdbfile,sector_buffer);
  40ea38:	18 60 00 41 	l.movhi r3,0x41
  40ea3c:	18 80 00 41 	l.movhi r4,0x41
  40ea40:	a8 63 fb f8 	l.ori r3,r3,0xfbf8
  40ea44:	07 ff da 1c 	l.jal 4052b4 <FileRead>
  40ea48:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
			FileSeek(&rdbfile,512,SEEK_CUR);
  40ea4c:	18 60 00 41 	l.movhi r3,0x41
  40ea50:	9c 80 02 00 	l.addi r4,r0,0x200
  40ea54:	a8 63 fb f8 	l.ori r3,r3,0xfbf8
  40ea58:	07 ff da 39 	l.jal 40533c <FileSeek>
  40ea5c:	9c a0 00 01 	l.addi r5,r0,0x1
			if(sector_buffer[0]=='R' && sector_buffer[1]=='D' && sector_buffer[2]=='S' && sector_buffer[3]=='K')
  40ea60:	8c 62 00 00 	l.lbz r3,0x0(r2)
  40ea64:	bc 23 00 52 	l.sfnei r3,0x52
  40ea68:	10 00 00 11 	l.bf 40eaac <GetHDFFileType.clone.10+0xbc>
  40ea6c:	bc 23 00 44 	l.sfnei r3,0x44
  40ea70:	8c 62 00 01 	l.lbz r3,0x1(r2)
  40ea74:	bc 23 00 44 	l.sfnei r3,0x44
  40ea78:	10 00 00 20 	l.bf 40eaf8 <GetHDFFileType.clone.10+0x108>
  40ea7c:	15 00 00 00 	l.nop 0x0
  40ea80:	8c 62 00 02 	l.lbz r3,0x2(r2)
  40ea84:	bc 23 00 53 	l.sfnei r3,0x53
  40ea88:	10 00 00 1c 	l.bf 40eaf8 <GetHDFFileType.clone.10+0x108>
  40ea8c:	15 00 00 00 	l.nop 0x0
  40ea90:	8c 62 00 03 	l.lbz r3,0x3(r2)
  40ea94:	bc 03 00 4b 	l.sfeqi r3,0x4b
  40ea98:	0c 00 00 19 	l.bnf 40eafc <GetHDFFileType.clone.10+0x10c>
  40ea9c:	9d ce 00 01 	l.addi r14,r14,0x1
  40eaa0:	9d ce ff ff 	l.addi r14,r14,0xffffffff
				return(HDF_FILETYPE_RDB);
  40eaa4:	00 00 00 1b 	l.j 40eb10 <GetHDFFileType.clone.10+0x120>
  40eaa8:	9c 40 00 02 	l.addi r2,r0,0x2
			if(sector_buffer[0]=='D' && sector_buffer[1]=='O' && sector_buffer[2]=='S')
  40eaac:	10 00 00 05 	l.bf 40eac0 <GetHDFFileType.clone.10+0xd0>
  40eab0:	15 00 00 00 	l.nop 0x0
  40eab4:	8c 62 00 01 	l.lbz r3,0x1(r2)
  40eab8:	00 00 00 0a 	l.j 40eae0 <GetHDFFileType.clone.10+0xf0>
  40eabc:	bc 23 00 4f 	l.sfnei r3,0x4f
				return(HDF_FILETYPE_DOS);
			if(sector_buffer[0]=='P' && sector_buffer[1]=='F' && sector_buffer[2]=='S')
  40eac0:	bc 23 00 50 	l.sfnei r3,0x50
  40eac4:	0c 00 00 05 	l.bnf 40ead8 <GetHDFFileType.clone.10+0xe8>
  40eac8:	15 00 00 00 	l.nop 0x0
				return(HDF_FILETYPE_DOS);
			if(sector_buffer[0]=='S' && sector_buffer[1]=='F' && sector_buffer[2]=='S')
  40eacc:	bc 23 00 53 	l.sfnei r3,0x53
  40ead0:	10 00 00 0a 	l.bf 40eaf8 <GetHDFFileType.clone.10+0x108>
  40ead4:	15 00 00 00 	l.nop 0x0
  40ead8:	8c 62 00 01 	l.lbz r3,0x1(r2)
  40eadc:	bc 23 00 46 	l.sfnei r3,0x46
  40eae0:	10 00 00 06 	l.bf 40eaf8 <GetHDFFileType.clone.10+0x108>
  40eae4:	15 00 00 00 	l.nop 0x0
  40eae8:	8c 62 00 02 	l.lbz r3,0x2(r2)
  40eaec:	bc 03 00 53 	l.sfeqi r3,0x53
  40eaf0:	10 00 00 0a 	l.bf 40eb18 <GetHDFFileType.clone.10+0x128>
  40eaf4:	15 00 00 00 	l.nop 0x0

	if(FileOpen(&rdbfile,filename))
	{
		int i;
		DebugMessage("Hunting for RDB...");
		for(i=0;i<16;++i)
  40eaf8:	9d ce 00 01 	l.addi r14,r14,0x1
  40eafc:	bc 2e 00 10 	l.sfnei r14,0x10
  40eb00:	13 ff ff cf 	l.bf 40ea3c <GetHDFFileType.clone.10+0x4c>
  40eb04:	18 60 00 41 	l.movhi r3,0x41
			if(sector_buffer[0]=='P' && sector_buffer[1]=='F' && sector_buffer[2]=='S')
				return(HDF_FILETYPE_DOS);
			if(sector_buffer[0]=='S' && sector_buffer[1]=='F' && sector_buffer[2]=='S')
				return(HDF_FILETYPE_DOS);
		}
		return(HDF_FILETYPE_UNKNOWN);
  40eb08:	00 00 00 05 	l.j 40eb1c <GetHDFFileType.clone.10+0x12c>
  40eb0c:	9c 40 00 00 	l.addi r2,r0,0x0
	}
	return(HDF_FILETYPE_NOTFOUND);

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L1);
}
  40eb10:	00 00 00 04 	l.j 40eb20 <GetHDFFileType.clone.10+0x130>
  40eb14:	9c 21 00 0c 	l.addi r1,r1,0xc
			if(sector_buffer[0]=='D' && sector_buffer[1]=='O' && sector_buffer[2]=='S')
				return(HDF_FILETYPE_DOS);
			if(sector_buffer[0]=='P' && sector_buffer[1]=='F' && sector_buffer[2]=='S')
				return(HDF_FILETYPE_DOS);
			if(sector_buffer[0]=='S' && sector_buffer[1]=='F' && sector_buffer[2]=='S')
				return(HDF_FILETYPE_DOS);
  40eb18:	9c 40 00 03 	l.addi r2,r0,0x3
		return(HDF_FILETYPE_UNKNOWN);
	}
	return(HDF_FILETYPE_NOTFOUND);

  DEBUG_FUNC_OUT(DEBUG_F_HDD | DEBUG_L1);
}
  40eb1c:	9c 21 00 0c 	l.addi r1,r1,0xc
  40eb20:	a9 62 00 00 	l.ori r11,r2,0x0
  40eb24:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  40eb28:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
  40eb2c:	44 00 48 00 	l.jr r9
  40eb30:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

0040eb34 <OsdDrawLogo.clone.11>:
    unsigned short i;
    const unsigned char *p;
	int linelimit=OSDLINELEN;

    // select OSD SPI device
    EnableOsd();
  40eb34:	18 a0 00 80 	l.movhi r5,0x80

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdDrawLogo(unsigned char n, char row,char superimpose)
  40eb38:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
    unsigned short i;
    const unsigned char *p;
	int linelimit=OSDLINELEN;

    // select OSD SPI device
    EnableOsd();
  40eb3c:	9c c0 00 44 	l.addi r6,r0,0x44

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdDrawLogo(unsigned char n, char row,char superimpose)
  40eb40:	a8 43 00 00 	l.ori r2,r3,0x0
  40eb44:	a8 64 00 00 	l.ori r3,r4,0x0
    unsigned short i;
    const unsigned char *p;
	int linelimit=OSDLINELEN;

    // select OSD SPI device
    EnableOsd();
  40eb48:	a8 85 00 20 	l.ori r4,r5,0x20

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdDrawLogo(unsigned char n, char row,char superimpose)
  40eb4c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    unsigned short i;
    const unsigned char *p;
	int linelimit=OSDLINELEN;

    // select OSD SPI device
    EnableOsd();
  40eb50:	d4 04 30 00 	l.sw 0x0(r4),r6

    // select buffer and line to write to
    //SPI(OSDCMDWRITE | n);
    SPI(OSD_CMD_OSD_WR);
  40eb54:	a8 a5 00 24 	l.ori r5,r5,0x24
  40eb58:	9c 80 00 0c 	l.addi r4,r0,0xc

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdDrawLogo(unsigned char n, char row,char superimpose)
  40eb5c:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
    // select OSD SPI device
    EnableOsd();

    // select buffer and line to write to
    //SPI(OSDCMDWRITE | n);
    SPI(OSD_CMD_OSD_WR);
  40eb60:	d4 05 20 00 	l.sw 0x0(r5),r4
    SPI(0x00); SPI(0x00); SPI(0x00); SPI(n);

	const unsigned char *lp=logodata[(int)row];
	int bytes=sizeof(logodata[0]);
	if((unsigned int)row>=(sizeof(logodata)/bytes))
		lp=0;
  40eb64:	9d 60 00 00 	l.addi r11,r0,0x0
    // select OSD SPI device
    EnableOsd();

    // select buffer and line to write to
    //SPI(OSDCMDWRITE | n);
    SPI(OSD_CMD_OSD_WR);
  40eb68:	84 85 00 00 	l.lwz r4,0x0(r5)
    SPI(0x00); SPI(0x00); SPI(0x00); SPI(n);
  40eb6c:	9c 80 00 00 	l.addi r4,r0,0x0

	const unsigned char *lp=logodata[(int)row];
	int bytes=sizeof(logodata[0]);
	if((unsigned int)row>=(sizeof(logodata)/bytes))
  40eb70:	bc 43 00 04 	l.sfgtui r3,0x4
    EnableOsd();

    // select buffer and line to write to
    //SPI(OSDCMDWRITE | n);
    SPI(OSD_CMD_OSD_WR);
    SPI(0x00); SPI(0x00); SPI(0x00); SPI(n);
  40eb74:	d4 05 20 00 	l.sw 0x0(r5),r4
  40eb78:	84 85 00 00 	l.lwz r4,0x0(r5)
  40eb7c:	9c 80 00 00 	l.addi r4,r0,0x0
  40eb80:	d4 05 20 00 	l.sw 0x0(r5),r4
  40eb84:	84 85 00 00 	l.lwz r4,0x0(r5)
  40eb88:	9c 80 00 00 	l.addi r4,r0,0x0
  40eb8c:	d4 05 20 00 	l.sw 0x0(r5),r4
  40eb90:	84 85 00 00 	l.lwz r4,0x0(r5)
  40eb94:	d4 05 10 00 	l.sw 0x0(r5),r2
  40eb98:	84 85 00 00 	l.lwz r4,0x0(r5)

	const unsigned char *lp=logodata[(int)row];
	int bytes=sizeof(logodata[0]);
	if((unsigned int)row>=(sizeof(logodata)/bytes))
  40eb9c:	10 00 00 07 	l.bf 40ebb8 <OsdDrawLogo.clone.11+0x84>
  40eba0:	15 00 00 00 	l.nop 0x0
    // select buffer and line to write to
    //SPI(OSDCMDWRITE | n);
    SPI(OSD_CMD_OSD_WR);
    SPI(0x00); SPI(0x00); SPI(0x00); SPI(n);

	const unsigned char *lp=logodata[(int)row];
  40eba4:	07 ff c5 31 	l.jal 400068 <__mulsi3>
  40eba8:	9c 80 00 e3 	l.addi r4,r0,0xe3
  40ebac:	18 60 00 41 	l.movhi r3,0x41
  40ebb0:	a8 63 6f 14 	l.ori r3,r3,0x6f14
  40ebb4:	e1 6b 18 00 	l.add r11,r11,r3
		char *bg=framebuffer[n];
		while (bytes)
		{
			if(i==0)	// Render sidestripe
			{
			    p = &titlebuffer[(7-n)*8];
  40ebb8:	9c 60 00 07 	l.addi r3,r0,0x7
    i = 0;
    // send all characters in string to OSD

	if(superimpose)
	{
		char *bg=framebuffer[n];
  40ebbc:	b9 02 00 08 	l.slli r8,r2,0x8
		while (bytes)
		{
			if(i==0)	// Render sidestripe
			{
			    p = &titlebuffer[(7-n)*8];
  40ebc0:	e0 63 10 02 	l.sub r3,r3,r2
    i = 0;
    // send all characters in string to OSD

	if(superimpose)
	{
		char *bg=framebuffer[n];
  40ebc4:	18 80 00 42 	l.movhi r4,0x42
		while (bytes)
		{
			if(i==0)	// Render sidestripe
			{
			    p = &titlebuffer[(7-n)*8];
  40ebc8:	18 40 00 42 	l.movhi r2,0x42
  40ebcc:	b8 63 00 03 	l.slli r3,r3,0x3
    i = 0;
    // send all characters in string to OSD

	if(superimpose)
	{
		char *bg=framebuffer[n];
  40ebd0:	a8 84 01 68 	l.ori r4,r4,0x168
		while (bytes)
		{
			if(i==0)	// Render sidestripe
			{
			    p = &titlebuffer[(7-n)*8];
  40ebd4:	a8 42 0a 1c 	l.ori r2,r2,0xa1c
    i = 0;
    // send all characters in string to OSD

	if(superimpose)
	{
		char *bg=framebuffer[n];
  40ebd8:	e1 08 20 00 	l.add r8,r8,r4
		while (bytes)
		{
			if(i==0)	// Render sidestripe
			{
			    p = &titlebuffer[(7-n)*8];
  40ebdc:	e0 63 10 00 	l.add r3,r3,r2
				SPI(0xff);
  40ebe0:	18 80 00 80 	l.movhi r4,0x80
				SPI(0xff);
			    SPI(255^*p); SPI(255^*p++);
  40ebe4:	9f 23 00 01 	l.addi r25,r3,0x1
			    SPI(255^*p); SPI(255^*p++);
  40ebe8:	9e e3 00 02 	l.addi r23,r3,0x2
			    SPI(255^*p); SPI(255^*p++);
  40ebec:	9e a3 00 03 	l.addi r21,r3,0x3
			    SPI(255^*p); SPI(255^*p++);
  40ebf0:	9e 63 00 04 	l.addi r19,r3,0x4
			    SPI(255^*p); SPI(255^*p++);
  40ebf4:	9e 23 00 05 	l.addi r17,r3,0x5
			    SPI(255^*p); SPI(255^*p++);
  40ebf8:	9d e3 00 06 	l.addi r15,r3,0x6
			    SPI(255^*p); SPI(255^*p++);
  40ebfc:	9c 43 00 07 	l.addi r2,r3,0x7

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void OsdDrawLogo(unsigned char n, char row,char superimpose)
  40ec00:	9d 88 00 01 	l.addi r12,r8,0x1
    //SPI(OSDCMDWRITE | n);
    SPI(OSD_CMD_OSD_WR);
    SPI(0x00); SPI(0x00); SPI(0x00); SPI(n);

	const unsigned char *lp=logodata[(int)row];
	int bytes=sizeof(logodata[0]);
  40ec04:	9d a0 00 e3 	l.addi r13,r0,0xe3
	if((unsigned int)row>=(sizeof(logodata)/bytes))
		lp=0;
    i = 0;
  40ec08:	9c a0 00 00 	l.addi r5,r0,0x0
		while (bytes)
		{
			if(i==0)	// Render sidestripe
			{
			    p = &titlebuffer[(7-n)*8];
				SPI(0xff);
  40ec0c:	a8 84 00 24 	l.ori r4,r4,0x24
  40ec10:	9c e0 00 ff 	l.addi r7,r0,0xff
	if(superimpose)
	{
		char *bg=framebuffer[n];
		while (bytes)
		{
			if(i==0)	// Render sidestripe
  40ec14:	bc 25 00 00 	l.sfnei r5,0x0
  40ec18:	10 00 00 60 	l.bf 40ed98 <OsdDrawLogo.clone.11+0x264>
  40ec1c:	a8 c8 00 00 	l.ori r6,r8,0x0
			{
			    p = &titlebuffer[(7-n)*8];
				SPI(0xff);
  40ec20:	d4 04 38 00 	l.sw 0x0(r4),r7
  40ec24:	84 c4 00 00 	l.lwz r6,0x0(r4)
				SPI(0xff);
  40ec28:	d4 04 38 00 	l.sw 0x0(r4),r7
  40ec2c:	84 c4 00 00 	l.lwz r6,0x0(r4)
			    SPI(255^*p); SPI(255^*p++);
  40ec30:	8c c3 00 00 	l.lbz r6,0x0(r3)
  40ec34:	ac c6 00 ff 	l.xori r6,r6,0xff
  40ec38:	a4 c6 00 ff 	l.andi r6,r6,0xff
  40ec3c:	d4 04 30 00 	l.sw 0x0(r4),r6
  40ec40:	84 c4 00 00 	l.lwz r6,0x0(r4)
  40ec44:	8c c3 00 00 	l.lbz r6,0x0(r3)
  40ec48:	ac c6 00 ff 	l.xori r6,r6,0xff
  40ec4c:	a4 c6 00 ff 	l.andi r6,r6,0xff
  40ec50:	d4 04 30 00 	l.sw 0x0(r4),r6
  40ec54:	84 c4 00 00 	l.lwz r6,0x0(r4)
			    SPI(255^*p); SPI(255^*p++);
  40ec58:	8c d9 00 00 	l.lbz r6,0x0(r25)
  40ec5c:	ac c6 00 ff 	l.xori r6,r6,0xff
  40ec60:	a4 c6 00 ff 	l.andi r6,r6,0xff
  40ec64:	d4 04 30 00 	l.sw 0x0(r4),r6
  40ec68:	84 c4 00 00 	l.lwz r6,0x0(r4)
  40ec6c:	8c d9 00 00 	l.lbz r6,0x0(r25)
  40ec70:	ac c6 00 ff 	l.xori r6,r6,0xff
  40ec74:	a4 c6 00 ff 	l.andi r6,r6,0xff
  40ec78:	d4 04 30 00 	l.sw 0x0(r4),r6
  40ec7c:	84 c4 00 00 	l.lwz r6,0x0(r4)
			    SPI(255^*p); SPI(255^*p++);
  40ec80:	8c d7 00 00 	l.lbz r6,0x0(r23)
  40ec84:	ac c6 00 ff 	l.xori r6,r6,0xff
  40ec88:	a4 c6 00 ff 	l.andi r6,r6,0xff
  40ec8c:	d4 04 30 00 	l.sw 0x0(r4),r6
  40ec90:	84 c4 00 00 	l.lwz r6,0x0(r4)
  40ec94:	8c d7 00 00 	l.lbz r6,0x0(r23)
  40ec98:	ac c6 00 ff 	l.xori r6,r6,0xff
  40ec9c:	a4 c6 00 ff 	l.andi r6,r6,0xff
  40eca0:	d4 04 30 00 	l.sw 0x0(r4),r6
  40eca4:	84 c4 00 00 	l.lwz r6,0x0(r4)
			    SPI(255^*p); SPI(255^*p++);
  40eca8:	8c d5 00 00 	l.lbz r6,0x0(r21)
  40ecac:	ac c6 00 ff 	l.xori r6,r6,0xff
  40ecb0:	a4 c6 00 ff 	l.andi r6,r6,0xff
  40ecb4:	d4 04 30 00 	l.sw 0x0(r4),r6
  40ecb8:	84 c4 00 00 	l.lwz r6,0x0(r4)
  40ecbc:	8c d5 00 00 	l.lbz r6,0x0(r21)
  40ecc0:	ac c6 00 ff 	l.xori r6,r6,0xff
  40ecc4:	a4 c6 00 ff 	l.andi r6,r6,0xff
  40ecc8:	d4 04 30 00 	l.sw 0x0(r4),r6
  40eccc:	84 c4 00 00 	l.lwz r6,0x0(r4)
			    SPI(255^*p); SPI(255^*p++);
  40ecd0:	8c d3 00 00 	l.lbz r6,0x0(r19)
  40ecd4:	ac c6 00 ff 	l.xori r6,r6,0xff
  40ecd8:	a4 c6 00 ff 	l.andi r6,r6,0xff
  40ecdc:	d4 04 30 00 	l.sw 0x0(r4),r6
  40ece0:	84 c4 00 00 	l.lwz r6,0x0(r4)
  40ece4:	8c d3 00 00 	l.lbz r6,0x0(r19)
  40ece8:	ac c6 00 ff 	l.xori r6,r6,0xff
  40ecec:	a4 c6 00 ff 	l.andi r6,r6,0xff
  40ecf0:	d4 04 30 00 	l.sw 0x0(r4),r6
  40ecf4:	84 c4 00 00 	l.lwz r6,0x0(r4)
			    SPI(255^*p); SPI(255^*p++);
  40ecf8:	8c d1 00 00 	l.lbz r6,0x0(r17)
  40ecfc:	ac c6 00 ff 	l.xori r6,r6,0xff
  40ed00:	a4 c6 00 ff 	l.andi r6,r6,0xff
  40ed04:	d4 04 30 00 	l.sw 0x0(r4),r6
  40ed08:	84 c4 00 00 	l.lwz r6,0x0(r4)
  40ed0c:	8c d1 00 00 	l.lbz r6,0x0(r17)
  40ed10:	ac c6 00 ff 	l.xori r6,r6,0xff
  40ed14:	a4 c6 00 ff 	l.andi r6,r6,0xff
  40ed18:	d4 04 30 00 	l.sw 0x0(r4),r6
  40ed1c:	84 c4 00 00 	l.lwz r6,0x0(r4)
			    SPI(255^*p); SPI(255^*p++);
  40ed20:	8c cf 00 00 	l.lbz r6,0x0(r15)
  40ed24:	ac c6 00 ff 	l.xori r6,r6,0xff
  40ed28:	a4 c6 00 ff 	l.andi r6,r6,0xff
  40ed2c:	d4 04 30 00 	l.sw 0x0(r4),r6
  40ed30:	84 c4 00 00 	l.lwz r6,0x0(r4)
  40ed34:	8c cf 00 00 	l.lbz r6,0x0(r15)
  40ed38:	ac c6 00 ff 	l.xori r6,r6,0xff
  40ed3c:	a4 c6 00 ff 	l.andi r6,r6,0xff
  40ed40:	d4 04 30 00 	l.sw 0x0(r4),r6
  40ed44:	84 c4 00 00 	l.lwz r6,0x0(r4)
			    SPI(255^*p); SPI(255^*p++);
  40ed48:	8c c2 00 00 	l.lbz r6,0x0(r2)
  40ed4c:	ac c6 00 ff 	l.xori r6,r6,0xff
  40ed50:	a4 c6 00 ff 	l.andi r6,r6,0xff
  40ed54:	d4 04 30 00 	l.sw 0x0(r4),r6
  40ed58:	84 c4 00 00 	l.lwz r6,0x0(r4)
  40ed5c:	8c c2 00 00 	l.lbz r6,0x0(r2)
  40ed60:	ac c6 00 ff 	l.xori r6,r6,0xff
  40ed64:	a4 c6 00 ff 	l.andi r6,r6,0xff
  40ed68:	d4 04 30 00 	l.sw 0x0(r4),r6
  40ed6c:	84 c4 00 00 	l.lwz r6,0x0(r4)
				SPI(0xff);
  40ed70:	d4 04 38 00 	l.sw 0x0(r4),r7
  40ed74:	84 c4 00 00 	l.lwz r6,0x0(r4)
				SPI(0xff);
  40ed78:	d4 04 38 00 	l.sw 0x0(r4),r7
  40ed7c:	84 c4 00 00 	l.lwz r6,0x0(r4)
				SPI(0x00);
  40ed80:	d4 04 28 00 	l.sw 0x0(r4),r5
  40ed84:	84 c4 00 00 	l.lwz r6,0x0(r4)
				SPI(0x00);
  40ed88:	d4 04 28 00 	l.sw 0x0(r4),r5
  40ed8c:	84 a4 00 00 	l.lwz r5,0x0(r4)
			    i += 22;
  40ed90:	00 00 00 05 	l.j 40eda4 <OsdDrawLogo.clone.11+0x270>
  40ed94:	9c a0 00 16 	l.addi r5,r0,0x16
			}
			if(i>=linelimit)
  40ed98:	bd 45 00 ff 	l.sfgtsi r5,0xff
  40ed9c:	10 00 00 1e 	l.bf 40ee14 <OsdDrawLogo.clone.11+0x2e0>
  40eda0:	15 00 00 00 	l.nop 0x0
				break;
			if(lp)
  40eda4:	bc 0b 00 00 	l.sfeqi r11,0x0
  40eda8:	10 00 00 08 	l.bf 40edc8 <OsdDrawLogo.clone.11+0x294>
  40edac:	90 c8 00 00 	l.lbs r6,0x0(r8)
				SPI(*lp++ | *bg++);
  40edb0:	8f 6b 00 00 	l.lbz r27,0x0(r11)
  40edb4:	e0 db 30 04 	l.or r6,r27,r6
  40edb8:	9d 6b 00 01 	l.addi r11,r11,0x1
  40edbc:	d4 04 30 00 	l.sw 0x0(r4),r6
			else
				SPI(*bg++);
			--bytes;
  40edc0:	00 00 00 04 	l.j 40edd0 <OsdDrawLogo.clone.11+0x29c>
  40edc4:	9d ad ff ff 	l.addi r13,r13,0xffffffff
			if(i>=linelimit)
				break;
			if(lp)
				SPI(*lp++ | *bg++);
			else
				SPI(*bg++);
  40edc8:	d4 04 30 00 	l.sw 0x0(r4),r6
			--bytes;
  40edcc:	9d ad ff ff 	l.addi r13,r13,0xffffffff
			++i;
  40edd0:	9c a5 00 01 	l.addi r5,r5,0x1
			if(i>=linelimit)
				break;
			if(lp)
				SPI(*lp++ | *bg++);
			else
				SPI(*bg++);
  40edd4:	87 64 00 00 	l.lwz r27,0x0(r4)
  40edd8:	a8 cc 00 00 	l.ori r6,r12,0x0
			--bytes;
			++i;
  40eddc:	a4 a5 ff ff 	l.andi r5,r5,0xffff
  40ede0:	9d 8c 00 01 	l.addi r12,r12,0x1
    // send all characters in string to OSD

	if(superimpose)
	{
		char *bg=framebuffer[n];
		while (bytes)
  40ede4:	bc 2d 00 00 	l.sfnei r13,0x0
  40ede8:	13 ff ff 8b 	l.bf 40ec14 <OsdDrawLogo.clone.11+0xe0>
  40edec:	9d 08 00 01 	l.addi r8,r8,0x1
				SPI(*bg++);
			--bytes;
			++i;
		}
	    for (; i < linelimit; i++) // clear end of line
	       SPI(*bg++);
  40edf0:	00 00 00 0a 	l.j 40ee18 <OsdDrawLogo.clone.11+0x2e4>
  40edf4:	18 40 00 80 	l.movhi r2,0x80
  40edf8:	90 66 00 00 	l.lbs r3,0x0(r6)
			else
				SPI(*bg++);
			--bytes;
			++i;
		}
	    for (; i < linelimit; i++) // clear end of line
  40edfc:	9c a5 00 01 	l.addi r5,r5,0x1
	       SPI(*bg++);
  40ee00:	d4 02 18 00 	l.sw 0x0(r2),r3
  40ee04:	9c c6 00 01 	l.addi r6,r6,0x1
  40ee08:	84 62 00 00 	l.lwz r3,0x0(r2)
			else
				SPI(*bg++);
			--bytes;
			++i;
		}
	    for (; i < linelimit; i++) // clear end of line
  40ee0c:	00 00 00 04 	l.j 40ee1c <OsdDrawLogo.clone.11+0x2e8>
  40ee10:	a4 a5 ff ff 	l.andi r5,r5,0xffff
	       SPI(*bg++);
  40ee14:	18 40 00 80 	l.movhi r2,0x80
  40ee18:	a8 42 00 24 	l.ori r2,r2,0x24
			else
				SPI(*bg++);
			--bytes;
			++i;
		}
	    for (; i < linelimit; i++) // clear end of line
  40ee1c:	bd a5 00 ff 	l.sflesi r5,0xff
  40ee20:	13 ff ff f6 	l.bf 40edf8 <OsdDrawLogo.clone.11+0x2c4>
  40ee24:	9c 60 00 40 	l.addi r3,r0,0x40
		}
	    for (; i < linelimit; i++) // clear end of line
	       SPI(0);
	}
    // deselect OSD SPI device
    DisableOsd();
  40ee28:	18 40 00 80 	l.movhi r2,0x80
  40ee2c:	a8 42 00 20 	l.ori r2,r2,0x20
  40ee30:	d4 02 18 00 	l.sw 0x0(r2),r3

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L1);
}
  40ee34:	9c 21 00 08 	l.addi r1,r1,0x8
  40ee38:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  40ee3c:	44 00 48 00 	l.jr r9
  40ee40:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

0040ee44 <ScrollText>:
  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void ScrollText(char n,const char *str, int len,int max_len,unsigned char invert)
{
  40ee44:	d7 e1 17 e4 	l.sw 0xffffffe4(r1),r2
  40ee48:	d7 e1 77 e8 	l.sw 0xffffffe8(r1),r14
  40ee4c:	d7 e1 87 ec 	l.sw 0xffffffec(r1),r16
  40ee50:	d7 e1 a7 f4 	l.sw 0xfffffff4(r1),r20
  40ee54:	d7 e1 b7 f8 	l.sw 0xfffffff8(r1),r22
  40ee58:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  40ee5c:	d7 e1 97 f0 	l.sw 0xfffffff0(r1),r18
  40ee60:	aa 04 00 00 	l.ori r16,r4,0x0
  40ee64:	9c 21 ff e4 	l.addi r1,r1,0xffffffe4
  40ee68:	a9 c5 00 00 	l.ori r14,r5,0x0
  40ee6c:	a8 46 00 00 	l.ori r2,r6,0x0
  40ee70:	aa c3 00 00 	l.ori r22,r3,0x0
// this function is called periodically when a string longer than the window is displayed.

    #define BLANKSPACE 10 // number of spaces between the end and start of repeated name

    long offset;
	if(!max_len)
  40ee74:	bc 06 00 00 	l.sfeqi r6,0x0
  40ee78:	0c 00 00 03 	l.bnf 40ee84 <ScrollText+0x40>
  40ee7c:	aa 87 00 00 	l.ori r20,r7,0x0
		max_len=30;
  40ee80:	9c 40 00 1e 	l.addi r2,r0,0x1e

    if (str && str[0] && CheckTimer(scroll_timer)) // scroll if long name and timer delay elapsed
  40ee84:	bc 10 00 00 	l.sfeqi r16,0x0
  40ee88:	10 00 00 e7 	l.bf 40f224 <ScrollText+0x3e0>
  40ee8c:	15 00 00 00 	l.nop 0x0
  40ee90:	90 70 00 00 	l.lbs r3,0x0(r16)
  40ee94:	bc 03 00 00 	l.sfeqi r3,0x0
  40ee98:	10 00 00 e3 	l.bf 40f224 <ScrollText+0x3e0>
  40ee9c:	1a 40 00 42 	l.movhi r18,0x42
  40eea0:	aa 52 0a 04 	l.ori r18,r18,0xa04
  40eea4:	07 ff c8 27 	l.jal 400f40 <CheckTimer>
  40eea8:	84 72 00 00 	l.lwz r3,0x0(r18)
  40eeac:	bc 0b 00 00 	l.sfeqi r11,0x0
  40eeb0:	10 00 00 dd 	l.bf 40f224 <ScrollText+0x3e0>
  40eeb4:	15 00 00 00 	l.nop 0x0
    {
        scroll_timer = GetTimer(SCROLL_DELAY2); // reset scroll timer to repeat delay
  40eeb8:	07 ff c8 1c 	l.jal 400f28 <GetTimer>
  40eebc:	9c 60 00 0a 	l.addi r3,r0,0xa

        scroll_offset++; // increase scroll position (1 pixel unit)
  40eec0:	18 80 00 42 	l.movhi r4,0x42
	if(!max_len)
		max_len=30;

    if (str && str[0] && CheckTimer(scroll_timer)) // scroll if long name and timer delay elapsed
    {
        scroll_timer = GetTimer(SCROLL_DELAY2); // reset scroll timer to repeat delay
  40eec4:	d4 12 58 00 	l.sw 0x0(r18),r11

        scroll_offset++; // increase scroll position (1 pixel unit)
  40eec8:	a8 84 0a 08 	l.ori r4,r4,0xa08
  40eecc:	86 44 00 00 	l.lwz r18,0x0(r4)
  40eed0:	9e 52 00 01 	l.addi r18,r18,0x1
  40eed4:	d4 04 90 00 	l.sw 0x0(r4),r18
#include <string.h>
#include <stdint.h>

void *memset(void *dst, int c, size_t n)
{
	char *q = dst;
  40eed8:	18 80 00 41 	l.movhi r4,0x41
  40eedc:	00 00 00 04 	l.j 40eeec <ScrollText+0xa8>
  40eee0:	a8 84 cd 18 	l.ori r4,r4,0xcd18
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
		*q++ = c;
  40eee4:	d8 04 18 00 	l.sb 0x0(r4),r3
  40eee8:	9c 84 00 01 	l.addi r4,r4,0x1
	asm volatile ("cld ; rep ; stosq ; movl %3,%%ecx ; rep ; stosb"
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
  40eeec:	18 a0 00 41 	l.movhi r5,0x41
  40eef0:	a8 a5 cd 38 	l.ori r5,r5,0xcd38
  40eef4:	e4 24 28 00 	l.sfne r4,r5
  40eef8:	13 ff ff fb 	l.bf 40eee4 <ScrollText+0xa0>
  40eefc:	9c 60 00 20 	l.addi r3,r0,0x20
        memset(s, ' ', 32); // clear buffer

		if(!len)
  40ef00:	bc 2e 00 00 	l.sfnei r14,0x0
  40ef04:	10 00 00 06 	l.bf 40ef1c <ScrollText+0xd8>
  40ef08:	e5 ae 10 00 	l.sfles r14,r2
	        len = strlen(str); // get name length
  40ef0c:	07 ff c4 fa 	l.jal 4002f4 <strlen>
  40ef10:	a8 70 00 00 	l.ori r3,r16,0x0
  40ef14:	a9 cb 00 00 	l.ori r14,r11,0x0

        if (len > max_len) // scroll name if longer than display size
  40ef18:	e5 ae 10 00 	l.sfles r14,r2
  40ef1c:	10 00 00 c2 	l.bf 40f224 <ScrollText+0x3e0>
  40ef20:	9c 6e 00 0a 	l.addi r3,r14,0xa
        {
            if (scroll_offset >= ((unsigned int)len + BLANKSPACE) << 3) // reset scroll position if it exceeds predefined maximum
  40ef24:	b8 63 00 03 	l.slli r3,r3,0x3
  40ef28:	e4 92 18 00 	l.sfltu r18,r3
  40ef2c:	10 00 00 06 	l.bf 40ef44 <ScrollText+0x100>
  40ef30:	18 60 00 42 	l.movhi r3,0x42
                scroll_offset = 0;
  40ef34:	9c c0 00 00 	l.addi r6,r0,0x0
  40ef38:	a8 63 0a 08 	l.ori r3,r3,0xa08
  40ef3c:	d4 03 30 00 	l.sw 0x0(r3),r6

            offset = scroll_offset >> 3; // get new starting character of the name (scroll_offset is no longer in 2 pixel unit)
  40ef40:	18 60 00 42 	l.movhi r3,0x42
  40ef44:	a8 63 0a 08 	l.ori r3,r3,0xa08
  40ef48:	86 43 00 00 	l.lwz r18,0x0(r3)
  40ef4c:	b8 92 00 43 	l.srli r4,r18,0x3

            len -= offset; // remaining number of characters in the name
  40ef50:	e1 ce 20 02 	l.sub r14,r14,r4
  40ef54:	e5 ae 10 00 	l.sfles r14,r2
  40ef58:	10 00 00 04 	l.bf 40ef68 <ScrollText+0x124>
  40ef5c:	bd ae 00 00 	l.sflesi r14,0x0
  40ef60:	a9 c2 00 00 	l.ori r14,r2,0x0

			if(len>max_len)
				len=max_len;

            if (len > 0)
  40ef64:	bd ae 00 00 	l.sflesi r14,0x0
  40ef68:	10 00 00 06 	l.bf 40ef80 <ScrollText+0x13c>
  40ef6c:	18 60 00 41 	l.movhi r3,0x41
                strncpy(s, &str[offset], len); // copy name substring
  40ef70:	e0 90 20 00 	l.add r4,r16,r4
  40ef74:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  40ef78:	07 ff c4 fd 	l.jal 40036c <strncpy>
  40ef7c:	a8 ae 00 00 	l.ori r5,r14,0x0

            if (len < max_len - BLANKSPACE) // file name substring and blank space is shorter than display line size
  40ef80:	9c a2 ff f6 	l.addi r5,r2,0xfffffff6
  40ef84:	e5 6e 28 00 	l.sfges r14,r5
  40ef88:	10 00 00 08 	l.bf 40efa8 <ScrollText+0x164>
  40ef8c:	18 c0 00 41 	l.movhi r6,0x41
                strncpy(s + len + BLANKSPACE, str, max_len - len - BLANKSPACE); // repeat the name after its end and predefined number of blank space
  40ef90:	9c 8e 00 0a 	l.addi r4,r14,0xa
  40ef94:	a8 c6 cd 18 	l.ori r6,r6,0xcd18
  40ef98:	e0 a5 70 02 	l.sub r5,r5,r14
  40ef9c:	e0 64 30 00 	l.add r3,r4,r6
  40efa0:	07 ff c4 f3 	l.jal 40036c <strncpy>
  40efa4:	a8 90 00 00 	l.ori r4,r16,0x0

    const unsigned char *p;
	int i,j;

    // select OSD SPI device
    EnableOsd();
  40efa8:	18 80 00 80 	l.movhi r4,0x80
                strncpy(s, &str[offset], len); // copy name substring

            if (len < max_len - BLANKSPACE) // file name substring and blank space is shorter than display line size
                strncpy(s + len + BLANKSPACE, str, max_len - len - BLANKSPACE); // repeat the name after its end and predefined number of blank space

            OSD_PrintText(n, s, 22, (max_len - 1) << 3, (scroll_offset & 0x7), invert); // OSD print function with pixel precision
  40efac:	9c c2 ff ff 	l.addi r6,r2,0xffffffff

    const unsigned char *p;
	int i,j;

    // select OSD SPI device
    EnableOsd();
  40efb0:	9c e0 00 44 	l.addi r7,r0,0x44
  40efb4:	a8 44 00 20 	l.ori r2,r4,0x20
    // select buffer and line to write to
//    if (invert)
//       SPI(OSDCMDWRITE | 0x10 | line);
//    else
    //SPI(OSDCMDWRITE | line);
    SPI(OSD_CMD_OSD_WR);
  40efb8:	a8 84 00 24 	l.ori r4,r4,0x24

    const unsigned char *p;
	int i,j;

    // select OSD SPI device
    EnableOsd();
  40efbc:	d4 02 38 00 	l.sw 0x0(r2),r7
    // select buffer and line to write to
//    if (invert)
//       SPI(OSDCMDWRITE | 0x10 | line);
//    else
    //SPI(OSDCMDWRITE | line);
    SPI(OSD_CMD_OSD_WR);
  40efc0:	9c 40 00 0c 	l.addi r2,r0,0xc
                strncpy(s, &str[offset], len); // copy name substring

            if (len < max_len - BLANKSPACE) // file name substring and blank space is shorter than display line size
                strncpy(s + len + BLANKSPACE, str, max_len - len - BLANKSPACE); // repeat the name after its end and predefined number of blank space

            OSD_PrintText(n, s, 22, (max_len - 1) << 3, (scroll_offset & 0x7), invert); // OSD print function with pixel precision
  40efc4:	a4 76 00 ff 	l.andi r3,r22,0xff
    // select buffer and line to write to
//    if (invert)
//       SPI(OSDCMDWRITE | 0x10 | line);
//    else
    //SPI(OSDCMDWRITE | line);
    SPI(OSD_CMD_OSD_WR);
  40efc8:	d4 04 10 00 	l.sw 0x0(r4),r2
                strncpy(s, &str[offset], len); // copy name substring

            if (len < max_len - BLANKSPACE) // file name substring and blank space is shorter than display line size
                strncpy(s + len + BLANKSPACE, str, max_len - len - BLANKSPACE); // repeat the name after its end and predefined number of blank space

            OSD_PrintText(n, s, 22, (max_len - 1) << 3, (scroll_offset & 0x7), invert); // OSD print function with pixel precision
  40efcc:	b8 c6 00 03 	l.slli r6,r6,0x3
    // select buffer and line to write to
//    if (invert)
//       SPI(OSDCMDWRITE | 0x10 | line);
//    else
    //SPI(OSDCMDWRITE | line);
    SPI(OSD_CMD_OSD_WR);
  40efd0:	84 44 00 00 	l.lwz r2,0x0(r4)
    SPI(0x00); SPI(0x00); SPI(0x00); SPI(line);
  40efd4:	9c 40 00 00 	l.addi r2,r0,0x0
                strncpy(s, &str[offset], len); // copy name substring

            if (len < max_len - BLANKSPACE) // file name substring and blank space is shorter than display line size
                strncpy(s + len + BLANKSPACE, str, max_len - len - BLANKSPACE); // repeat the name after its end and predefined number of blank space

            OSD_PrintText(n, s, 22, (max_len - 1) << 3, (scroll_offset & 0x7), invert); // OSD print function with pixel precision
  40efd8:	a4 b2 00 07 	l.andi r5,r18,0x7
//    if (invert)
//       SPI(OSDCMDWRITE | 0x10 | line);
//    else
    //SPI(OSDCMDWRITE | line);
    SPI(OSD_CMD_OSD_WR);
    SPI(0x00); SPI(0x00); SPI(0x00); SPI(line);
  40efdc:	d4 04 10 00 	l.sw 0x0(r4),r2

	if(invert)
  40efe0:	a8 f4 00 00 	l.ori r7,r20,0x0
//    if (invert)
//       SPI(OSDCMDWRITE | 0x10 | line);
//    else
    //SPI(OSDCMDWRITE | line);
    SPI(OSD_CMD_OSD_WR);
    SPI(0x00); SPI(0x00); SPI(0x00); SPI(line);
  40efe4:	84 44 00 00 	l.lwz r2,0x0(r4)
  40efe8:	9c 40 00 00 	l.addi r2,r0,0x0

	if(invert)
  40efec:	bc 14 00 00 	l.sfeqi r20,0x0
//    if (invert)
//       SPI(OSDCMDWRITE | 0x10 | line);
//    else
    //SPI(OSDCMDWRITE | line);
    SPI(OSD_CMD_OSD_WR);
    SPI(0x00); SPI(0x00); SPI(0x00); SPI(line);
  40eff0:	d4 04 10 00 	l.sw 0x0(r4),r2
  40eff4:	84 44 00 00 	l.lwz r2,0x0(r4)
  40eff8:	9c 40 00 00 	l.addi r2,r0,0x0
  40effc:	d4 04 10 00 	l.sw 0x0(r4),r2
  40f000:	84 44 00 00 	l.lwz r2,0x0(r4)
  40f004:	d4 04 18 00 	l.sw 0x0(r4),r3
  40f008:	84 44 00 00 	l.lwz r2,0x0(r4)

	if(invert)
  40f00c:	10 00 00 03 	l.bf 40f018 <ScrollText+0x1d4>
  40f010:	9c 40 00 07 	l.addi r2,r0,0x7
		invert=0xff;
  40f014:	9c e0 00 ff 	l.addi r7,r0,0xff

    p = &titlebuffer[(7-line)*8];
	if(start>2)
	{
		SPI(0xff); SPI(0xff); start-=2;
  40f018:	9c 80 00 ff 	l.addi r4,r0,0xff
    SPI(0x00); SPI(0x00); SPI(0x00); SPI(line);

	if(invert)
		invert=0xff;

    p = &titlebuffer[(7-line)*8];
  40f01c:	e0 42 18 02 	l.sub r2,r2,r3
  40f020:	18 60 00 42 	l.movhi r3,0x42
  40f024:	b8 42 00 03 	l.slli r2,r2,0x3
  40f028:	a8 63 0a 1c 	l.ori r3,r3,0xa1c
  40f02c:	e0 42 18 00 	l.add r2,r2,r3
	if(start>2)
	{
		SPI(0xff); SPI(0xff); start-=2;
  40f030:	18 60 00 80 	l.movhi r3,0x80
  40f034:	a8 63 00 24 	l.ori r3,r3,0x24
  40f038:	d4 03 20 00 	l.sw 0x0(r3),r4
  40f03c:	85 03 00 00 	l.lwz r8,0x0(r3)
  40f040:	d4 03 20 00 	l.sw 0x0(r3),r4
  40f044:	84 83 00 00 	l.lwz r4,0x0(r3)
	}
	
	i=start>16 ? 16 : start;
	for(j=0;j<(i/2);++j)
  40f048:	9c 80 00 00 	l.addi r4,r0,0x0
	{
		SPI(255^*p); SPI(255^*p++);
  40f04c:	8d 02 00 00 	l.lbz r8,0x0(r2)
  40f050:	ad 08 00 ff 	l.xori r8,r8,0xff
	{
		SPI(0xff); SPI(0xff); start-=2;
	}
	
	i=start>16 ? 16 : start;
	for(j=0;j<(i/2);++j)
  40f054:	9c 84 00 01 	l.addi r4,r4,0x1
	{
		SPI(255^*p); SPI(255^*p++);
  40f058:	a5 08 00 ff 	l.andi r8,r8,0xff
	{
		SPI(0xff); SPI(0xff); start-=2;
	}
	
	i=start>16 ? 16 : start;
	for(j=0;j<(i/2);++j)
  40f05c:	bc 24 00 08 	l.sfnei r4,0x8
	{
		SPI(255^*p); SPI(255^*p++);
  40f060:	d4 03 40 00 	l.sw 0x0(r3),r8
  40f064:	85 03 00 00 	l.lwz r8,0x0(r3)
  40f068:	8d 02 00 00 	l.lbz r8,0x0(r2)
  40f06c:	ad 08 00 ff 	l.xori r8,r8,0xff
  40f070:	9c 42 00 01 	l.addi r2,r2,0x1
  40f074:	a5 08 00 ff 	l.andi r8,r8,0xff
  40f078:	d4 03 40 00 	l.sw 0x0(r3),r8
  40f07c:	85 03 00 00 	l.lwz r8,0x0(r3)
	{
		SPI(0xff); SPI(0xff); start-=2;
	}
	
	i=start>16 ? 16 : start;
	for(j=0;j<(i/2);++j)
  40f080:	13 ff ff f3 	l.bf 40f04c <ScrollText+0x208>
  40f084:	bc 05 00 00 	l.sfeqi r5,0x0
	if(i&1)
		SPI(255^*p);
	start-=i;

	if(start>2)
		SPI(0xff), SPI(0xff), start-=2;
  40f088:	9c 40 00 ff 	l.addi r2,r0,0xff
  40f08c:	d4 03 10 00 	l.sw 0x0(r3),r2
  40f090:	84 83 00 00 	l.lwz r4,0x0(r3)

    while (start--)
          SPI(0x00);
  40f094:	9c 80 00 00 	l.addi r4,r0,0x0
	if(i&1)
		SPI(255^*p);
	start-=i;

	if(start>2)
		SPI(0xff), SPI(0xff), start-=2;
  40f098:	d4 03 10 00 	l.sw 0x0(r3),r2
  40f09c:	84 43 00 00 	l.lwz r2,0x0(r3)

    while (start--)
          SPI(0x00);
  40f0a0:	d4 03 20 00 	l.sw 0x0(r3),r4
  40f0a4:	84 43 00 00 	l.lwz r2,0x0(r3)
  40f0a8:	d4 03 20 00 	l.sw 0x0(r3),r4

    if (offset)
  40f0ac:	18 80 00 41 	l.movhi r4,0x41

	if(start>2)
		SPI(0xff), SPI(0xff), start-=2;

    while (start--)
          SPI(0x00);
  40f0b0:	84 43 00 00 	l.lwz r2,0x0(r3)

    if (offset)
  40f0b4:	10 00 00 41 	l.bf 40f1b8 <ScrollText+0x374>
  40f0b8:	a8 84 cd 18 	l.ori r4,r4,0xcd18
    {
        width -= 8 - offset;
        p = &charfont[(unsigned int)*text++][offset];
  40f0bc:	90 84 00 00 	l.lbs r4,0x0(r4)
    while (start--)
          SPI(0x00);

    if (offset)
    {
        width -= 8 - offset;
  40f0c0:	9c 45 ff f8 	l.addi r2,r5,0xfffffff8
        p = &charfont[(unsigned int)*text++][offset];
  40f0c4:	b8 84 00 03 	l.slli r4,r4,0x3
    while (start--)
          SPI(0x00);

    if (offset)
    {
        width -= 8 - offset;
  40f0c8:	e0 c6 10 00 	l.add r6,r6,r2
        p = &charfont[(unsigned int)*text++][offset];
  40f0cc:	18 40 00 41 	l.movhi r2,0x41
  40f0d0:	e0 84 28 00 	l.add r4,r4,r5
  40f0d4:	a8 42 9b 3c 	l.ori r2,r2,0x9b3c
  40f0d8:	e0 84 10 00 	l.add r4,r4,r2
  40f0dc:	9c 40 00 00 	l.addi r2,r0,0x0

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}


void ScrollText(char n,const char *str, int len,int max_len,unsigned char invert)
  40f0e0:	e1 04 10 00 	l.add r8,r4,r2
    if (offset)
    {
        width -= 8 - offset;
        p = &charfont[(unsigned int)*text++][offset];
        for (; offset < 8; offset++)
            SPI(*p++^invert);
  40f0e4:	9c 42 00 01 	l.addi r2,r2,0x1
  40f0e8:	8d 08 00 00 	l.lbz r8,0x0(r8)
  40f0ec:	e1 07 40 05 	l.xor r8,r7,r8
  40f0f0:	d4 03 40 00 	l.sw 0x0(r3),r8
  40f0f4:	85 03 00 00 	l.lwz r8,0x0(r3)

    if (offset)
    {
        width -= 8 - offset;
        p = &charfont[(unsigned int)*text++][offset];
        for (; offset < 8; offset++)
  40f0f8:	e1 02 28 00 	l.add r8,r2,r5
  40f0fc:	bc 28 00 08 	l.sfnei r8,0x8
  40f100:	13 ff ff f9 	l.bf 40f0e4 <ScrollText+0x2a0>
  40f104:	e1 04 10 00 	l.add r8,r4,r2
          SPI(0x00);

    if (offset)
    {
        width -= 8 - offset;
        p = &charfont[(unsigned int)*text++][offset];
  40f108:	18 80 00 41 	l.movhi r4,0x41
  40f10c:	00 00 00 2b 	l.j 40f1b8 <ScrollText+0x374>
  40f110:	a8 84 cd 19 	l.ori r4,r4,0xcd19
            SPI(*p++^invert);
    }

    while (width > 8)
    {
            p = &charfont[(unsigned int)*text++][0];
  40f114:	90 44 00 00 	l.lbs r2,0x0(r4)
  40f118:	b8 42 00 03 	l.slli r2,r2,0x3
  40f11c:	a8 a5 9b 3c 	l.ori r5,r5,0x9b3c
  40f120:	9c 84 00 01 	l.addi r4,r4,0x1
  40f124:	e0 42 28 00 	l.add r2,r2,r5
            SPI(*p++^invert);
            SPI(*p++^invert);
            SPI(*p++^invert);
            SPI(*p++^invert);
            SPI(*p++^invert);
            width -= 8;
  40f128:	9c c6 ff f8 	l.addi r6,r6,0xfffffff8
    }

    while (width > 8)
    {
            p = &charfont[(unsigned int)*text++][0];
            SPI(*p++^invert);
  40f12c:	8c a2 00 00 	l.lbz r5,0x0(r2)
  40f130:	e0 a7 28 05 	l.xor r5,r7,r5
  40f134:	d4 03 28 00 	l.sw 0x0(r3),r5
  40f138:	84 a3 00 00 	l.lwz r5,0x0(r3)
            SPI(*p++^invert);
  40f13c:	8c a2 00 01 	l.lbz r5,0x1(r2)
  40f140:	e0 a7 28 05 	l.xor r5,r7,r5
  40f144:	d4 03 28 00 	l.sw 0x0(r3),r5
  40f148:	84 a3 00 00 	l.lwz r5,0x0(r3)
            SPI(*p++^invert);
  40f14c:	8c a2 00 02 	l.lbz r5,0x2(r2)
  40f150:	e0 a7 28 05 	l.xor r5,r7,r5
  40f154:	d4 03 28 00 	l.sw 0x0(r3),r5
  40f158:	84 a3 00 00 	l.lwz r5,0x0(r3)
            SPI(*p++^invert);
  40f15c:	8c a2 00 03 	l.lbz r5,0x3(r2)
  40f160:	e0 a7 28 05 	l.xor r5,r7,r5
  40f164:	d4 03 28 00 	l.sw 0x0(r3),r5
  40f168:	84 a3 00 00 	l.lwz r5,0x0(r3)
            SPI(*p++^invert);
  40f16c:	8c a2 00 04 	l.lbz r5,0x4(r2)
  40f170:	e0 a7 28 05 	l.xor r5,r7,r5
  40f174:	d4 03 28 00 	l.sw 0x0(r3),r5
  40f178:	84 a3 00 00 	l.lwz r5,0x0(r3)
            SPI(*p++^invert);
  40f17c:	8c a2 00 05 	l.lbz r5,0x5(r2)
  40f180:	e0 a7 28 05 	l.xor r5,r7,r5
  40f184:	9c 42 00 06 	l.addi r2,r2,0x6
  40f188:	d4 03 28 00 	l.sw 0x0(r3),r5
  40f18c:	84 a3 00 00 	l.lwz r5,0x0(r3)
            SPI(*p++^invert);
  40f190:	8c a2 00 00 	l.lbz r5,0x0(r2)
  40f194:	e0 a7 28 05 	l.xor r5,r7,r5
  40f198:	d4 03 28 00 	l.sw 0x0(r3),r5
            SPI(*p++^invert);
  40f19c:	8c 42 00 01 	l.lbz r2,0x1(r2)
  40f1a0:	e0 47 10 05 	l.xor r2,r7,r2
            SPI(*p++^invert);
            SPI(*p++^invert);
            SPI(*p++^invert);
            SPI(*p++^invert);
            SPI(*p++^invert);
            SPI(*p++^invert);
  40f1a4:	84 a3 00 00 	l.lwz r5,0x0(r3)
            SPI(*p++^invert);
  40f1a8:	d4 03 10 00 	l.sw 0x0(r3),r2
  40f1ac:	84 43 00 00 	l.lwz r2,0x0(r3)
        p = &charfont[(unsigned int)*text++][offset];
        for (; offset < 8; offset++)
            SPI(*p++^invert);
    }

    while (width > 8)
  40f1b0:	00 00 00 05 	l.j 40f1c4 <ScrollText+0x380>
  40f1b4:	bc 46 00 08 	l.sfgtui r6,0x8
    {
            p = &charfont[(unsigned int)*text++][0];
            SPI(*p++^invert);
  40f1b8:	18 60 00 80 	l.movhi r3,0x80
  40f1bc:	a8 63 00 24 	l.ori r3,r3,0x24
        p = &charfont[(unsigned int)*text++][offset];
        for (; offset < 8; offset++)
            SPI(*p++^invert);
    }

    while (width > 8)
  40f1c0:	bc 46 00 08 	l.sfgtui r6,0x8
  40f1c4:	13 ff ff d4 	l.bf 40f114 <ScrollText+0x2d0>
  40f1c8:	18 a0 00 41 	l.movhi r5,0x41
            SPI(*p++^invert);
            SPI(*p++^invert);
            width -= 8;
    }

    if (width)
  40f1cc:	bc 06 00 00 	l.sfeqi r6,0x0
  40f1d0:	10 00 00 11 	l.bf 40f214 <ScrollText+0x3d0>
  40f1d4:	18 60 00 41 	l.movhi r3,0x41
    {
        p = &charfont[(unsigned int)*text++][0];
  40f1d8:	90 44 00 00 	l.lbs r2,0x0(r4)
  40f1dc:	b8 42 00 03 	l.slli r2,r2,0x3
  40f1e0:	a8 63 9b 3c 	l.ori r3,r3,0x9b3c
  40f1e4:	e0 42 18 00 	l.add r2,r2,r3
        while (width--)
              SPI(*p++^invert);
  40f1e8:	18 60 00 80 	l.movhi r3,0x80
  40f1ec:	a8 63 00 24 	l.ori r3,r3,0x24
  40f1f0:	8c 82 00 00 	l.lbz r4,0x0(r2)
  40f1f4:	e0 87 20 05 	l.xor r4,r7,r4
  40f1f8:	9c c6 ff ff 	l.addi r6,r6,0xffffffff
  40f1fc:	d4 03 20 00 	l.sw 0x0(r3),r4
  40f200:	9c 42 00 01 	l.addi r2,r2,0x1
  40f204:	84 83 00 00 	l.lwz r4,0x0(r3)
    }

    if (width)
    {
        p = &charfont[(unsigned int)*text++][0];
        while (width--)
  40f208:	bc 26 00 00 	l.sfnei r6,0x0
  40f20c:	13 ff ff f9 	l.bf 40f1f0 <ScrollText+0x3ac>
  40f210:	15 00 00 00 	l.nop 0x0
              SPI(*p++^invert);
    }

    DisableOsd();
  40f214:	18 40 00 80 	l.movhi r2,0x80
  40f218:	9c 60 00 40 	l.addi r3,r0,0x40
  40f21c:	a8 42 00 20 	l.ori r2,r2,0x20
  40f220:	d4 02 18 00 	l.sw 0x0(r2),r3
            OSD_PrintText(n, s, 22, (max_len - 1) << 3, (scroll_offset & 0x7), invert); // OSD print function with pixel precision
        }
    }

  DEBUG_FUNC_OUT(DEBUG_F_OSD | DEBUG_L2);
}
  40f224:	9c 21 00 1c 	l.addi r1,r1,0x1c
  40f228:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
  40f22c:	84 41 ff e4 	l.lwz r2,0xffffffe4(r1)
  40f230:	85 c1 ff e8 	l.lwz r14,0xffffffe8(r1)
  40f234:	86 01 ff ec 	l.lwz r16,0xffffffec(r1)
  40f238:	86 41 ff f0 	l.lwz r18,0xfffffff0(r1)
  40f23c:	86 81 ff f4 	l.lwz r20,0xfffffff4(r1)
  40f240:	44 00 48 00 	l.jr r9
  40f244:	86 c1 ff f8 	l.lwz r22,0xfffffff8(r1)

0040f248 <main>:
#ifdef __GNUC__
void main(void)
#else
__geta4 void main(void)
#endif
{
  40f248:	d7 e1 17 d4 	l.sw 0xffffffd4(r1),r2

  uint32_t spiclk;
  fileTYPE sd_boot_file;

  // enable normal SPI
  SPI_normal();
  40f24c:	18 40 00 80 	l.movhi r2,0x80
  40f250:	9c 80 00 04 	l.addi r4,r0,0x4
  40f254:	a8 62 00 1c 	l.ori r3,r2,0x1c
#ifdef __GNUC__
void main(void)
#else
__geta4 void main(void)
#endif
{
  40f258:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  40f25c:	d7 e1 77 d8 	l.sw 0xffffffd8(r1),r14
  40f260:	d7 e1 87 dc 	l.sw 0xffffffdc(r1),r16
  40f264:	d7 e1 97 e0 	l.sw 0xffffffe0(r1),r18
  40f268:	d7 e1 a7 e4 	l.sw 0xffffffe4(r1),r20
  40f26c:	d7 e1 b7 e8 	l.sw 0xffffffe8(r1),r22
  40f270:	d7 e1 c7 ec 	l.sw 0xffffffec(r1),r24
  40f274:	d7 e1 d7 f0 	l.sw 0xfffffff0(r1),r26
  40f278:	d7 e1 e7 f4 	l.sw 0xfffffff4(r1),r28
  40f27c:	d7 e1 f7 f8 	l.sw 0xfffffff8(r1),r30

  uint32_t spiclk;
  fileTYPE sd_boot_file;

  // enable normal SPI
  SPI_normal();
  40f280:	d4 03 20 00 	l.sw 0x0(r3),r4

  // wait for SDRAM controller
  printf("Waiting for SDRAM ... ");
  40f284:	18 60 00 41 	l.movhi r3,0x41
#ifdef __GNUC__
void main(void)
#else
__geta4 void main(void)
#endif
{
  40f288:	9c 21 ff c4 	l.addi r1,r1,0xffffffc4

  // enable normal SPI
  SPI_normal();

  // wait for SDRAM controller
  printf("Waiting for SDRAM ... ");
  40f28c:	07 ff d5 02 	l.jal 404694 <printf>
  40f290:	a8 63 89 b5 	l.ori r3,r3,0x89b5
  while ((read32(REG_SYS_STAT_ADR) & 0x1));
  40f294:	a8 62 00 08 	l.ori r3,r2,0x8
  40f298:	85 c3 00 00 	l.lwz r14,0x0(r3)
  40f29c:	a5 ce 00 01 	l.andi r14,r14,0x1
  40f2a0:	bc 2e 00 00 	l.sfnei r14,0x0
  40f2a4:	13 ff ff fd 	l.bf 40f298 <main+0x50>
  40f2a8:	18 40 00 80 	l.movhi r2,0x80
  printf("OK (%01x)\r", read32(REG_SYS_STAT_ADR));
  40f2ac:	84 63 00 00 	l.lwz r3,0x0(r3)
  40f2b0:	d4 01 18 00 	l.sw 0x0(r1),r3
  40f2b4:	18 60 00 41 	l.movhi r3,0x41
  40f2b8:	07 ff d4 f7 	l.jal 404694 <printf>
  40f2bc:	a8 63 89 cc 	l.ori r3,r3,0x89cc

  // reset, unreset and halt cpu
  printf("Unresetting from ctrl block ...\r");
  40f2c0:	18 60 00 41 	l.movhi r3,0x41
  40f2c4:	07 ff d4 f4 	l.jal 404694 <printf>
  40f2c8:	a8 63 89 d7 	l.ori r3,r3,0x89d7
  write32(REG_RST_ADR, 0);
  EnableOsd();
  40f2cc:	a8 82 00 20 	l.ori r4,r2,0x20
  40f2d0:	9c e0 00 44 	l.addi r7,r0,0x44
  while ((read32(REG_SYS_STAT_ADR) & 0x1));
  printf("OK (%01x)\r", read32(REG_SYS_STAT_ADR));

  // reset, unreset and halt cpu
  printf("Unresetting from ctrl block ...\r");
  write32(REG_RST_ADR, 0);
  40f2d4:	d4 02 70 00 	l.sw 0x0(r2),r14
  EnableOsd();
  SPI(OSD_CMD_RST);
  40f2d8:	a8 62 00 24 	l.ori r3,r2,0x24
  40f2dc:	9c c0 00 08 	l.addi r6,r0,0x8
  printf("OK (%01x)\r", read32(REG_SYS_STAT_ADR));

  // reset, unreset and halt cpu
  printf("Unresetting from ctrl block ...\r");
  write32(REG_RST_ADR, 0);
  EnableOsd();
  40f2e0:	d4 04 38 00 	l.sw 0x0(r4),r7
  SPI(OSD_CMD_RST);
  40f2e4:	d4 03 30 00 	l.sw 0x0(r3),r6
  rstval = (SPI_RST_USR | SPI_RST_CPU | SPI_CPU_HLT);
  SPI(rstval);
  DisableOsd();
  SPIN(); SPIN(); SPIN(); SPIN();
  40f2e8:	a8 42 00 1c 	l.ori r2,r2,0x1c

  // reset, unreset and halt cpu
  printf("Unresetting from ctrl block ...\r");
  write32(REG_RST_ADR, 0);
  EnableOsd();
  SPI(OSD_CMD_RST);
  40f2ec:	84 a3 00 00 	l.lwz r5,0x0(r3)
  rstval = (SPI_RST_USR | SPI_RST_CPU | SPI_CPU_HLT);
  SPI(rstval);
  40f2f0:	9c a0 00 07 	l.addi r5,r0,0x7
  40f2f4:	d4 03 28 00 	l.sw 0x0(r3),r5
  40f2f8:	84 a3 00 00 	l.lwz r5,0x0(r3)
  DisableOsd();
  40f2fc:	9c a0 00 40 	l.addi r5,r0,0x40
  40f300:	d4 04 28 00 	l.sw 0x0(r4),r5
  SPIN(); SPIN(); SPIN(); SPIN();
  40f304:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f308:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f30c:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f310:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f314:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f318:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f31c:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f320:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f324:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f328:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f32c:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f330:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f334:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f338:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f33c:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f340:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f344:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f348:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f34c:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f350:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f354:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f358:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f35c:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f360:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f364:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f368:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f36c:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f370:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f374:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f378:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f37c:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f380:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f384:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f388:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f38c:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f390:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f394:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f398:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f39c:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f3a0:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f3a4:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f3a8:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f3ac:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f3b0:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f3b4:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f3b8:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f3bc:	85 02 00 00 	l.lwz r8,0x0(r2)
  40f3c0:	85 02 00 00 	l.lwz r8,0x0(r2)
  EnableOsd();
  40f3c4:	d4 04 38 00 	l.sw 0x0(r4),r7
  SPI(OSD_CMD_RST);
  40f3c8:	d4 03 30 00 	l.sw 0x0(r3),r6
  rstval = (SPI_RST_CPU | SPI_CPU_HLT);
  40f3cc:	18 e0 00 41 	l.movhi r7,0x41
  rstval = (SPI_RST_USR | SPI_RST_CPU | SPI_CPU_HLT);
  SPI(rstval);
  DisableOsd();
  SPIN(); SPIN(); SPIN(); SPIN();
  EnableOsd();
  SPI(OSD_CMD_RST);
  40f3d0:	84 c3 00 00 	l.lwz r6,0x0(r3)
  rstval = (SPI_RST_CPU | SPI_CPU_HLT);
  40f3d4:	9c c0 00 06 	l.addi r6,r0,0x6
  40f3d8:	a8 e7 a3 4c 	l.ori r7,r7,0xa34c
  40f3dc:	d4 07 30 00 	l.sw 0x0(r7),r6
  SPI(rstval);
  40f3e0:	d4 03 30 00 	l.sw 0x0(r3),r6
  40f3e4:	84 63 00 00 	l.lwz r3,0x0(r3)
  DisableOsd();
  40f3e8:	d4 04 28 00 	l.sw 0x0(r4),r5
  SPIN(); SPIN(); SPIN(); SPIN();
  40f3ec:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f3f0:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f3f4:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f3f8:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f3fc:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f400:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f404:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f408:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f40c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f410:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f414:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f418:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f41c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f420:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f424:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f428:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f42c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f430:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f434:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f438:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f43c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f440:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f444:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f448:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f44c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f450:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f454:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f458:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f45c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f460:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f464:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f468:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f46c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f470:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f474:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f478:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f47c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f480:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f484:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f488:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f48c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f490:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f494:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f498:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f49c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f4a0:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f4a4:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f4a8:	84 42 00 00 	l.lwz r2,0x0(r2)

  // initialize SD card
  if (!MMC_Init()) FatalError(1);
  40f4ac:	07 ff d9 1c 	l.jal 40591c <MMC_Init>
  40f4b0:	15 00 00 00 	l.nop 0x0
  40f4b4:	bc 2b 00 00 	l.sfnei r11,0x0
  40f4b8:	10 00 00 04 	l.bf 40f4c8 <main+0x280>
  40f4bc:	15 00 00 00 	l.nop 0x0
  40f4c0:	07 ff ec fa 	l.jal 40a8a8 <FatalError>
  40f4c4:	9c 60 00 01 	l.addi r3,r0,0x1
  printf("SD card found ...\r");
  40f4c8:	18 60 00 41 	l.movhi r3,0x41
  40f4cc:	07 ff d4 72 	l.jal 404694 <printf>
  40f4d0:	a8 63 89 f8 	l.ori r3,r3,0x89f8

  // find filesystem
  if (!FindDrive()) FatalError(2);
  40f4d4:	07 ff e8 45 	l.jal 4095e8 <FindDrive>
  40f4d8:	15 00 00 00 	l.nop 0x0
  40f4dc:	bc 2b 00 00 	l.sfnei r11,0x0
  40f4e0:	10 00 00 04 	l.bf 40f4f0 <main+0x2a8>
  40f4e4:	15 00 00 00 	l.nop 0x0
  40f4e8:	07 ff ec f0 	l.jal 40a8a8 <FatalError>
  40f4ec:	9c 60 00 02 	l.addi r3,r0,0x2
  ChangeDirectory(DIRECTORY_ROOT);
  40f4f0:	9c 60 00 00 	l.addi r3,r0,0x0
  40f4f4:	07 ff ce 4b 	l.jal 402e20 <ChangeDirectory>
  40f4f8:	1a c0 00 80 	l.movhi r22,0x80
  printf("Drive found ...\r");
  40f4fc:	18 60 00 41 	l.movhi r3,0x41

//// BootEnableMem() ////
void BootEnableMem()
{
  // TEMP enable 1MB memory
  EnableOsd();
  40f500:	aa 16 00 20 	l.ori r16,r22,0x20
  40f504:	9e 80 00 44 	l.addi r20,r0,0x44
  40f508:	a8 63 8a 0b 	l.ori r3,r3,0x8a0b
  SPI(OSD_CMD_MEM);
  40f50c:	a9 d6 00 24 	l.ori r14,r22,0x24
  40f510:	07 ff d4 61 	l.jal 404694 <printf>
  40f514:	9c 40 00 24 	l.addi r2,r0,0x24

//// BootEnableMem() ////
void BootEnableMem()
{
  // TEMP enable 1MB memory
  EnableOsd();
  40f518:	d4 10 a0 00 	l.sw 0x0(r16),r20
  SPI(OSD_CMD_MEM);
  40f51c:	d4 0e 10 00 	l.sw 0x0(r14),r2
  SPI(0x5);
  DisableOsd();
  40f520:	9e 40 00 40 	l.addi r18,r0,0x40
//// BootEnableMem() ////
void BootEnableMem()
{
  // TEMP enable 1MB memory
  EnableOsd();
  SPI(OSD_CMD_MEM);
  40f524:	84 4e 00 00 	l.lwz r2,0x0(r14)
  SPI(0x5);
  40f528:	9c 40 00 05 	l.addi r2,r0,0x5
  40f52c:	d4 0e 10 00 	l.sw 0x0(r14),r2
  40f530:	84 4e 00 00 	l.lwz r2,0x0(r14)
  DisableOsd();
  SPIN(); SPIN(); SPIN(); SPIN();
  40f534:	a8 56 00 1c 	l.ori r2,r22,0x1c
{
  // TEMP enable 1MB memory
  EnableOsd();
  SPI(OSD_CMD_MEM);
  SPI(0x5);
  DisableOsd();
  40f538:	d4 10 90 00 	l.sw 0x0(r16),r18
  BootPrintEx(" ");
  spiclk = 100000 / (20*(read32(REG_SPI_DIV_ADR) + 2));
  sprintf(s, "SPI clock: %u.%uMHz", spiclk/100, spiclk%100);
  BootPrintEx(s);
  //BootPrintEx(" ");
  TIMER_wait(3000);
  40f53c:	aa d6 00 18 	l.ori r22,r22,0x18
  SPIN(); SPIN(); SPIN(); SPIN();
  40f540:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f544:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f548:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f54c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f550:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f554:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f558:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f55c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f560:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f564:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f568:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f56c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f570:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f574:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f578:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f57c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f580:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f584:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f588:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f58c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f590:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f594:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f598:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f59c:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5a0:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5a4:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5a8:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5ac:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5b0:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5b4:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5b8:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5bc:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5c0:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5c4:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5c8:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5cc:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5d0:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5d4:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5d8:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5dc:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5e0:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5e4:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5e8:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5ec:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5f0:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5f4:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5f8:	84 62 00 00 	l.lwz r3,0x0(r2)
  40f5fc:	84 62 00 00 	l.lwz r3,0x0(r2)

//// BootInit() ////
void BootInit()
{
  BootEnableMem();
  BootClearScreen(SCREEN_ADDRESS, SCREEN_MEM_SIZE);
  40f600:	07 ff f6 3c 	l.jal 40cef0 <BootClearScreen.clone.5>
  40f604:	15 00 00 00 	l.nop 0x0
  BootUploadLogo();
  40f608:	07 ff c6 55 	l.jal 400f5c <BootUploadLogo>
  40f60c:	15 00 00 00 	l.nop 0x0
  BootUploadBall();
  40f610:	07 ff c8 b7 	l.jal 4018ec <BootUploadBall>
  40f614:	15 00 00 00 	l.nop 0x0
  BootUploadCopper();
  40f618:	07 ff c9 b7 	l.jal 401cf4 <BootUploadCopper>
  40f61c:	15 00 00 00 	l.nop 0x0

//// BootCustomInit() ////
void BootCustomInit()
{
  //move.w #$0000,$dff1fc  ; FMODE, slow fetch mode for AGA compatibility
  MEM_UPLOAD_INIT(0xdff1fc);
  40f620:	9c 80 00 1c 	l.addi r4,r0,0x1c
  40f624:	d4 10 a0 00 	l.sw 0x0(r16),r20
  40f628:	d4 0e 20 00 	l.sw 0x0(r14),r4
  40f62c:	9d 00 00 f1 	l.addi r8,r0,0xf1
  40f630:	84 6e 00 00 	l.lwz r3,0x0(r14)
  40f634:	9c 60 00 fc 	l.addi r3,r0,0xfc
  MEM_WRITE16(0x0000);
  40f638:	9c c0 00 00 	l.addi r6,r0,0x0

//// BootCustomInit() ////
void BootCustomInit()
{
  //move.w #$0000,$dff1fc  ; FMODE, slow fetch mode for AGA compatibility
  MEM_UPLOAD_INIT(0xdff1fc);
  40f63c:	d4 0e 18 00 	l.sw 0x0(r14),r3
  MEM_WRITE16(0x0000);
  MEM_UPLOAD_FINI();

  //move.w #$0002,$dff02e  ; COPCON, enable danger mode
  MEM_UPLOAD_INIT(0xdff02e);
  40f640:	9c e0 00 00 	l.addi r7,r0,0x0

//// BootCustomInit() ////
void BootCustomInit()
{
  //move.w #$0000,$dff1fc  ; FMODE, slow fetch mode for AGA compatibility
  MEM_UPLOAD_INIT(0xdff1fc);
  40f644:	84 6e 00 00 	l.lwz r3,0x0(r14)
  40f648:	d4 0e 40 00 	l.sw 0x0(r14),r8
  MEM_WRITE16(0x0002);
  MEM_UPLOAD_FINI();

  //move.l #Copper1,$dff080  ; COP1LCH, copper 1 pointer
  //move.l #Copper2,$dff084  ; CPO2LCH, copper 2 pointer
  MEM_UPLOAD_INIT(0xdff080);
  40f64c:	9d 60 00 80 	l.addi r11,r0,0x80

//// BootCustomInit() ////
void BootCustomInit()
{
  //move.w #$0000,$dff1fc  ; FMODE, slow fetch mode for AGA compatibility
  MEM_UPLOAD_INIT(0xdff1fc);
  40f650:	84 6e 00 00 	l.lwz r3,0x0(r14)
  40f654:	9c 60 00 df 	l.addi r3,r0,0xdf

  //move.l #Copper1,$dff080  ; COP1LCH, copper 1 pointer
  //move.l #Copper2,$dff084  ; CPO2LCH, copper 2 pointer
  MEM_UPLOAD_INIT(0xdff080);
  MEM_WRITE16(0x0008); MEM_WRITE16(0xe680);
  MEM_WRITE16(0x0008); MEM_WRITE16(0xe69c);
  40f658:	9d a0 00 00 	l.addi r13,r0,0x0

//// BootCustomInit() ////
void BootCustomInit()
{
  //move.w #$0000,$dff1fc  ; FMODE, slow fetch mode for AGA compatibility
  MEM_UPLOAD_INIT(0xdff1fc);
  40f65c:	d4 0e 18 00 	l.sw 0x0(r14),r3
  40f660:	84 ae 00 00 	l.lwz r5,0x0(r14)
  40f664:	9c a0 00 00 	l.addi r5,r0,0x0
  40f668:	d4 0e 28 00 	l.sw 0x0(r14),r5
  40f66c:	84 ae 00 00 	l.lwz r5,0x0(r14)
  MEM_WRITE16(0x0000);
  40f670:	d4 0e 30 00 	l.sw 0x0(r14),r6
  40f674:	84 ae 00 00 	l.lwz r5,0x0(r14)
  40f678:	d4 0e 30 00 	l.sw 0x0(r14),r6
  40f67c:	84 ae 00 00 	l.lwz r5,0x0(r14)
  40f680:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f684:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f688:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f68c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f690:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f694:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f698:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f69c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6a0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6a4:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6a8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6ac:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6b0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6b4:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6b8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6bc:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6c0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6c4:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6c8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6cc:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6d0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6d4:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6d8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6dc:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6e0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6e4:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6e8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6ec:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6f0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6f4:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6f8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f6fc:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f700:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f704:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f708:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f70c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f710:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f714:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f718:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f71c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f720:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f724:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f728:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f72c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f730:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f734:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f738:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f73c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  MEM_UPLOAD_FINI();
  40f740:	d4 10 90 00 	l.sw 0x0(r16),r18
  40f744:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f748:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f74c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f750:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f754:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f758:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f75c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f760:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f764:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f768:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f76c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f770:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f774:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f778:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f77c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f780:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f784:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f788:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f78c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f790:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f794:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f798:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f79c:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7a0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7a4:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7a8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7ac:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7b0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7b4:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7b8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7bc:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7c0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7c4:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7c8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7cc:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7d0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7d4:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7d8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7dc:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7e0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7e4:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7e8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7ec:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7f0:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7f4:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7f8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f7fc:	84 a2 00 00 	l.lwz r5,0x0(r2)
  40f800:	84 a2 00 00 	l.lwz r5,0x0(r2)

  //move.w #$0002,$dff02e  ; COPCON, enable danger mode
  MEM_UPLOAD_INIT(0xdff02e);
  40f804:	d4 10 a0 00 	l.sw 0x0(r16),r20
  40f808:	d4 0e 20 00 	l.sw 0x0(r14),r4
  40f80c:	84 ae 00 00 	l.lwz r5,0x0(r14)
  40f810:	9c a0 00 2e 	l.addi r5,r0,0x2e
  40f814:	d4 0e 28 00 	l.sw 0x0(r14),r5
  40f818:	84 ae 00 00 	l.lwz r5,0x0(r14)
  40f81c:	9c a0 00 f0 	l.addi r5,r0,0xf0
  40f820:	d4 0e 28 00 	l.sw 0x0(r14),r5
  40f824:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40f828:	d4 0e 18 00 	l.sw 0x0(r14),r3
  40f82c:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40f830:	d4 0e 38 00 	l.sw 0x0(r14),r7
  40f834:	84 ce 00 00 	l.lwz r6,0x0(r14)
  MEM_WRITE16(0x0002);
  40f838:	d4 0e 38 00 	l.sw 0x0(r14),r7
  40f83c:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40f840:	9c c0 00 02 	l.addi r6,r0,0x2
  40f844:	d4 0e 30 00 	l.sw 0x0(r14),r6
  40f848:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40f84c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f850:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f854:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f858:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f85c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f860:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f864:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f868:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f86c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f870:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f874:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f878:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f87c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f880:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f884:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f888:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f88c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f890:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f894:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f898:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f89c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8a0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8a4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8a8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8ac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8b0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8b4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8b8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8bc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8c0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8c4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8c8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8cc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8d0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8d4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8d8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8dc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8e0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8e4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8e8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8ec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8f0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8f4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8f8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f8fc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f900:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f904:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f908:	84 c2 00 00 	l.lwz r6,0x0(r2)
  MEM_UPLOAD_FINI();
  40f90c:	d4 10 90 00 	l.sw 0x0(r16),r18
  40f910:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f914:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f918:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f91c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f920:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f924:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f928:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f92c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f930:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f934:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f938:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f93c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f940:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f944:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f948:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f94c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f950:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f954:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f958:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f95c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f960:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f964:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f968:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f96c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f970:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f974:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f978:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f97c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f980:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f984:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f988:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f98c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f990:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f994:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f998:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f99c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f9a0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f9a4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f9a8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f9ac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f9b0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f9b4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f9b8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f9bc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f9c0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f9c4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f9c8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40f9cc:	84 c2 00 00 	l.lwz r6,0x0(r2)

  //move.l #Copper1,$dff080  ; COP1LCH, copper 1 pointer
  //move.l #Copper2,$dff084  ; CPO2LCH, copper 2 pointer
  MEM_UPLOAD_INIT(0xdff080);
  40f9d0:	d4 10 a0 00 	l.sw 0x0(r16),r20
  40f9d4:	d4 0e 20 00 	l.sw 0x0(r14),r4
  40f9d8:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40f9dc:	d4 0e 58 00 	l.sw 0x0(r14),r11
  40f9e0:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40f9e4:	d4 0e 28 00 	l.sw 0x0(r14),r5
  40f9e8:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40f9ec:	d4 0e 18 00 	l.sw 0x0(r14),r3
  40f9f0:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40f9f4:	d4 0e 38 00 	l.sw 0x0(r14),r7
  40f9f8:	84 ce 00 00 	l.lwz r6,0x0(r14)
  MEM_WRITE16(0x0008); MEM_WRITE16(0xe680);
  40f9fc:	d4 0e 38 00 	l.sw 0x0(r14),r7
  40fa00:	9c e0 00 08 	l.addi r7,r0,0x8
  40fa04:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40fa08:	d4 0e 38 00 	l.sw 0x0(r14),r7
  40fa0c:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40fa10:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa14:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa18:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa1c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa20:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa24:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa28:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa2c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa30:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa34:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa38:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa3c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa40:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa44:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa48:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa4c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa50:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa54:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa58:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa5c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa60:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa64:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa68:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa6c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa70:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa74:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa78:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa7c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa80:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa84:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa88:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa8c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa90:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa94:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa98:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fa9c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40faa0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40faa4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40faa8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40faac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fab0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fab4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fab8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fabc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fac0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fac4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fac8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40facc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fad0:	9c c0 00 e6 	l.addi r6,r0,0xe6
  40fad4:	d4 0e 30 00 	l.sw 0x0(r14),r6
  40fad8:	85 8e 00 00 	l.lwz r12,0x0(r14)
  40fadc:	d4 0e 58 00 	l.sw 0x0(r14),r11
  40fae0:	85 8e 00 00 	l.lwz r12,0x0(r14)
  40fae4:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fae8:	85 82 00 00 	l.lwz r12,0x0(r2)
  40faec:	85 82 00 00 	l.lwz r12,0x0(r2)
  40faf0:	85 82 00 00 	l.lwz r12,0x0(r2)
  40faf4:	85 82 00 00 	l.lwz r12,0x0(r2)
  40faf8:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fafc:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb00:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb04:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb08:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb0c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb10:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb14:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb18:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb1c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb20:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb24:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb28:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb2c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb30:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb34:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb38:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb3c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb40:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb44:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb48:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb4c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb50:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb54:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb58:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb5c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb60:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb64:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb68:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb6c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb70:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb74:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb78:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb7c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb80:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb84:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb88:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb8c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb90:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb94:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb98:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fb9c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fba0:	85 82 00 00 	l.lwz r12,0x0(r2)
  MEM_WRITE16(0x0008); MEM_WRITE16(0xe69c);
  40fba4:	d4 0e 68 00 	l.sw 0x0(r14),r13
  40fba8:	85 8e 00 00 	l.lwz r12,0x0(r14)
  40fbac:	d4 0e 38 00 	l.sw 0x0(r14),r7
  40fbb0:	85 8e 00 00 	l.lwz r12,0x0(r14)
  40fbb4:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbb8:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbbc:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbc0:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbc4:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbc8:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbcc:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbd0:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbd4:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbd8:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbdc:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbe0:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbe4:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbe8:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbec:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbf0:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbf4:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbf8:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fbfc:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc00:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc04:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc08:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc0c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc10:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc14:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc18:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc1c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc20:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc24:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc28:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc2c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc30:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc34:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc38:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc3c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc40:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc44:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc48:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc4c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc50:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc54:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc58:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc5c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc60:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc64:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc68:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc6c:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc70:	85 82 00 00 	l.lwz r12,0x0(r2)
  40fc74:	d4 0e 30 00 	l.sw 0x0(r14),r6
  40fc78:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40fc7c:	9c c0 00 9c 	l.addi r6,r0,0x9c
  MEM_WRITE16(0xf4c1);
  MEM_WRITE16(0x003c);
  MEM_WRITE16(0x00d4);
  MEM_WRITE16(0x87c0);
  MEM_WRITE16(0x0000);
  MEM_WRITE16(0x7fff);
  40fc80:	9d 80 00 7f 	l.addi r12,r0,0x7f

  //move.l #Copper1,$dff080  ; COP1LCH, copper 1 pointer
  //move.l #Copper2,$dff084  ; CPO2LCH, copper 2 pointer
  MEM_UPLOAD_INIT(0xdff080);
  MEM_WRITE16(0x0008); MEM_WRITE16(0xe680);
  MEM_WRITE16(0x0008); MEM_WRITE16(0xe69c);
  40fc84:	d4 0e 30 00 	l.sw 0x0(r14),r6
  40fc88:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40fc8c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fc90:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fc94:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fc98:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fc9c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fca0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fca4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fca8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcb0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcb4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcb8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcbc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcc0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcc4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcc8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fccc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcd0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcd4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcd8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcdc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fce0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fce4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fce8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcf0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcf4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcf8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fcfc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd00:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd04:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd08:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd0c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd10:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd14:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd18:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd1c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd20:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd24:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd28:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd2c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd30:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd34:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd38:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd3c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd40:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd44:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd48:	84 c2 00 00 	l.lwz r6,0x0(r2)
  MEM_UPLOAD_FINI();
  40fd4c:	d4 10 90 00 	l.sw 0x0(r16),r18
  40fd50:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd54:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd58:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd5c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd60:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd64:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd68:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd6c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd70:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd74:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd78:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd7c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd80:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd84:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd88:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd8c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd90:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd94:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd98:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fd9c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fda0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fda4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fda8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdb0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdb4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdb8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdbc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdc0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdc4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdc8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdcc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdd0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdd4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdd8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fddc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fde0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fde4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fde8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdf0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdf4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdf8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fdfc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe00:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe04:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe08:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe0c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  //move.w #$87c0,$dff096  ; DMACON, enable important bits
  //move.w #$0000,$dff098  ; CLXCON, TODO
  //move.w #$7fff,$dff09a  ; INTENA, disable all interrupts
  //move.w #$7fff,$dff09c  ; INTREQ, disable all interrupts
  //move.w #$0000,$dff09e  ; ADKCON, TODO
  MEM_UPLOAD_INIT(0xdff08e);
  40fe10:	d4 10 a0 00 	l.sw 0x0(r16),r20
  40fe14:	d4 0e 20 00 	l.sw 0x0(r14),r4
  40fe18:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40fe1c:	9c c0 00 8e 	l.addi r6,r0,0x8e
  40fe20:	d4 0e 30 00 	l.sw 0x0(r14),r6
  40fe24:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40fe28:	d4 0e 28 00 	l.sw 0x0(r14),r5
  40fe2c:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40fe30:	d4 0e 18 00 	l.sw 0x0(r14),r3
  40fe34:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40fe38:	d4 0e 68 00 	l.sw 0x0(r14),r13
  40fe3c:	84 ce 00 00 	l.lwz r6,0x0(r14)
  //MEM_WRITE16(0x1d64);
  //MEM_WRITE16(0x38c7);
  //MEM_WRITE16(0x0028);
  //MEM_WRITE16(0x00d8);
  MEM_WRITE16(0x2c81);
  40fe40:	9c c0 00 2c 	l.addi r6,r0,0x2c
  40fe44:	d4 0e 30 00 	l.sw 0x0(r14),r6
  40fe48:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40fe4c:	9c c0 00 81 	l.addi r6,r0,0x81
  40fe50:	d4 0e 30 00 	l.sw 0x0(r14),r6
  40fe54:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40fe58:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe5c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe60:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe64:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe68:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe6c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe70:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe74:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe78:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe7c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe80:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe84:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe88:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe8c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe90:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe94:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe98:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fe9c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fea0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fea4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fea8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40feac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40feb0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40feb4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40feb8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40febc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fec0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fec4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fec8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fecc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fed0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fed4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fed8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fedc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fee0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fee4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fee8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40feec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fef0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fef4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fef8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40fefc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff00:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff04:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff08:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff0c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff10:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff14:	84 c2 00 00 	l.lwz r6,0x0(r2)
  MEM_WRITE16(0xf4c1);
  40ff18:	9c c0 00 f4 	l.addi r6,r0,0xf4
  40ff1c:	d4 0e 30 00 	l.sw 0x0(r14),r6
  40ff20:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40ff24:	9c c0 00 c1 	l.addi r6,r0,0xc1
  40ff28:	d4 0e 30 00 	l.sw 0x0(r14),r6
  40ff2c:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40ff30:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff34:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff38:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff3c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff40:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff44:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff48:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff4c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff50:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff54:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff58:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff5c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff60:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff64:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff68:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff6c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff70:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff74:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff78:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff7c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff80:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff84:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff88:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff8c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff90:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff94:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff98:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ff9c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffa0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffa4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffa8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffb0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffb4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffb8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffbc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffc0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffc4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffc8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffcc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffd0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffd4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffd8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffdc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffe0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffe4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffe8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  40ffec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  MEM_WRITE16(0x003c);
  40fff0:	d4 0e 68 00 	l.sw 0x0(r14),r13
  40fff4:	84 ce 00 00 	l.lwz r6,0x0(r14)
  40fff8:	9c c0 00 3c 	l.addi r6,r0,0x3c
  40fffc:	d4 0e 30 00 	l.sw 0x0(r14),r6
  410000:	84 ce 00 00 	l.lwz r6,0x0(r14)
  410004:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410008:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41000c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410010:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410014:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410018:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41001c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410020:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410024:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410028:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41002c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410030:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410034:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410038:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41003c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410040:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410044:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410048:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41004c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410050:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410054:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410058:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41005c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410060:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410064:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410068:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41006c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410070:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410074:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410078:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41007c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410080:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410084:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410088:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41008c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410090:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410094:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410098:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41009c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100a0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100a4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100a8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100ac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100b0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100b4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100b8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100bc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100c0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  MEM_WRITE16(0x00d4);
  4100c4:	d4 0e 68 00 	l.sw 0x0(r14),r13
  4100c8:	84 ce 00 00 	l.lwz r6,0x0(r14)
  4100cc:	9c c0 00 d4 	l.addi r6,r0,0xd4
  4100d0:	d4 0e 30 00 	l.sw 0x0(r14),r6
  4100d4:	84 ce 00 00 	l.lwz r6,0x0(r14)
  4100d8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100dc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100e0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100e4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100e8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100ec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100f0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100f4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100f8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4100fc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410100:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410104:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410108:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41010c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410110:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410114:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410118:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41011c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410120:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410124:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410128:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41012c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410130:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410134:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410138:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41013c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410140:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410144:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410148:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41014c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410150:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410154:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410158:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41015c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410160:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410164:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410168:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41016c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410170:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410174:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410178:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41017c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410180:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410184:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410188:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41018c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410190:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410194:	84 c2 00 00 	l.lwz r6,0x0(r2)
  MEM_WRITE16(0x87c0);
  410198:	9c c0 00 87 	l.addi r6,r0,0x87
  41019c:	d4 0e 30 00 	l.sw 0x0(r14),r6
  4101a0:	84 ce 00 00 	l.lwz r6,0x0(r14)
  4101a4:	9c c0 00 c0 	l.addi r6,r0,0xc0
  4101a8:	d4 0e 30 00 	l.sw 0x0(r14),r6
  4101ac:	84 ce 00 00 	l.lwz r6,0x0(r14)
  4101b0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101b4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101b8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101bc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101c0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101c4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101c8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101cc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101d0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101d4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101d8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101dc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101e0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101e4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101e8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101ec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101f0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101f4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101f8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4101fc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410200:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410204:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410208:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41020c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410210:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410214:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410218:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41021c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410220:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410224:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410228:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41022c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410230:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410234:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410238:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41023c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410240:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410244:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410248:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41024c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410250:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410254:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410258:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41025c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410260:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410264:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410268:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41026c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  MEM_WRITE16(0x0000);
  410270:	d4 0e 68 00 	l.sw 0x0(r14),r13
  410274:	84 ce 00 00 	l.lwz r6,0x0(r14)
  410278:	d4 0e 68 00 	l.sw 0x0(r14),r13
  41027c:	84 ce 00 00 	l.lwz r6,0x0(r14)
  410280:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410284:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410288:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41028c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410290:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410294:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410298:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41029c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102a0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102a4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102a8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102ac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102b0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102b4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102b8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102bc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102c0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102c4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102c8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102cc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102d0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102d4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102d8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102dc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102e0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102e4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102e8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102ec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102f0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102f4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102f8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4102fc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410300:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410304:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410308:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41030c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410310:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410314:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410318:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41031c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410320:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410324:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410328:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41032c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410330:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410334:	84 c2 00 00 	l.lwz r6,0x0(r2)
  410338:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41033c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  MEM_WRITE16(0x7fff);
  410340:	d4 0e 60 00 	l.sw 0x0(r14),r12
  410344:	84 ce 00 00 	l.lwz r6,0x0(r14)
  410348:	9c c0 00 ff 	l.addi r6,r0,0xff
  41034c:	d4 0e 30 00 	l.sw 0x0(r14),r6
  410350:	85 ae 00 00 	l.lwz r13,0x0(r14)
  410354:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410358:	85 a2 00 00 	l.lwz r13,0x0(r2)
  41035c:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410360:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410364:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410368:	85 a2 00 00 	l.lwz r13,0x0(r2)
  41036c:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410370:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410374:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410378:	85 a2 00 00 	l.lwz r13,0x0(r2)
  41037c:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410380:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410384:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410388:	85 a2 00 00 	l.lwz r13,0x0(r2)
  41038c:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410390:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410394:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410398:	85 a2 00 00 	l.lwz r13,0x0(r2)
  41039c:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103a0:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103a4:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103a8:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103ac:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103b0:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103b4:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103b8:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103bc:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103c0:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103c4:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103c8:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103cc:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103d0:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103d4:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103d8:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103dc:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103e0:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103e4:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103e8:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103ec:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103f0:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103f4:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103f8:	85 a2 00 00 	l.lwz r13,0x0(r2)
  4103fc:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410400:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410404:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410408:	85 a2 00 00 	l.lwz r13,0x0(r2)
  41040c:	85 a2 00 00 	l.lwz r13,0x0(r2)
  410410:	85 a2 00 00 	l.lwz r13,0x0(r2)
  MEM_WRITE16(0x7fff);
  410414:	d4 0e 60 00 	l.sw 0x0(r14),r12
  410418:	85 8e 00 00 	l.lwz r12,0x0(r14)
  41041c:	d4 0e 30 00 	l.sw 0x0(r14),r6
  //move.w #(bpl1>>16)&$ffff,$dff0e0  ; BPL1PTH
  //move.w #bpl1&$ffff,$dff0e2    ; BPL1PTL
  //move.w #(bpl2>>16)&$ffff,$dff0e4  ; BPL2PTH
  //move.w #bpl2&$ffff,$dff0e6    ; BPL2PTL
  MEM_UPLOAD_INIT(0xdff0e0);
  MEM_WRITE16(0x0008); MEM_WRITE16(0x0000);
  410420:	9d a0 00 00 	l.addi r13,r0,0x0
  MEM_WRITE16(0x003c);
  MEM_WRITE16(0x00d4);
  MEM_WRITE16(0x87c0);
  MEM_WRITE16(0x0000);
  MEM_WRITE16(0x7fff);
  MEM_WRITE16(0x7fff);
  410424:	85 8e 00 00 	l.lwz r12,0x0(r14)
  410428:	85 82 00 00 	l.lwz r12,0x0(r2)
  41042c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410430:	85 82 00 00 	l.lwz r12,0x0(r2)
  410434:	85 82 00 00 	l.lwz r12,0x0(r2)
  410438:	85 82 00 00 	l.lwz r12,0x0(r2)
  41043c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410440:	85 82 00 00 	l.lwz r12,0x0(r2)
  410444:	85 82 00 00 	l.lwz r12,0x0(r2)
  410448:	85 82 00 00 	l.lwz r12,0x0(r2)
  41044c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410450:	85 82 00 00 	l.lwz r12,0x0(r2)
  410454:	85 82 00 00 	l.lwz r12,0x0(r2)
  410458:	85 82 00 00 	l.lwz r12,0x0(r2)
  41045c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410460:	85 82 00 00 	l.lwz r12,0x0(r2)
  410464:	85 82 00 00 	l.lwz r12,0x0(r2)
  410468:	85 82 00 00 	l.lwz r12,0x0(r2)
  41046c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410470:	85 82 00 00 	l.lwz r12,0x0(r2)
  410474:	85 82 00 00 	l.lwz r12,0x0(r2)
  410478:	85 82 00 00 	l.lwz r12,0x0(r2)
  41047c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410480:	85 82 00 00 	l.lwz r12,0x0(r2)
  410484:	85 82 00 00 	l.lwz r12,0x0(r2)
  410488:	85 82 00 00 	l.lwz r12,0x0(r2)
  41048c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410490:	85 82 00 00 	l.lwz r12,0x0(r2)
  410494:	85 82 00 00 	l.lwz r12,0x0(r2)
  410498:	85 82 00 00 	l.lwz r12,0x0(r2)
  41049c:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104a0:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104a4:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104a8:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104ac:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104b0:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104b4:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104b8:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104bc:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104c0:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104c4:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104c8:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104cc:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104d0:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104d4:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104d8:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104dc:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104e0:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104e4:	85 82 00 00 	l.lwz r12,0x0(r2)
  MEM_UPLOAD_FINI();
  4104e8:	d4 10 90 00 	l.sw 0x0(r16),r18
  4104ec:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104f0:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104f4:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104f8:	85 82 00 00 	l.lwz r12,0x0(r2)
  4104fc:	85 82 00 00 	l.lwz r12,0x0(r2)
  410500:	85 82 00 00 	l.lwz r12,0x0(r2)
  410504:	85 82 00 00 	l.lwz r12,0x0(r2)
  410508:	85 82 00 00 	l.lwz r12,0x0(r2)
  41050c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410510:	85 82 00 00 	l.lwz r12,0x0(r2)
  410514:	85 82 00 00 	l.lwz r12,0x0(r2)
  410518:	85 82 00 00 	l.lwz r12,0x0(r2)
  41051c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410520:	85 82 00 00 	l.lwz r12,0x0(r2)
  410524:	85 82 00 00 	l.lwz r12,0x0(r2)
  410528:	85 82 00 00 	l.lwz r12,0x0(r2)
  41052c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410530:	85 82 00 00 	l.lwz r12,0x0(r2)
  410534:	85 82 00 00 	l.lwz r12,0x0(r2)
  410538:	85 82 00 00 	l.lwz r12,0x0(r2)
  41053c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410540:	85 82 00 00 	l.lwz r12,0x0(r2)
  410544:	85 82 00 00 	l.lwz r12,0x0(r2)
  410548:	85 82 00 00 	l.lwz r12,0x0(r2)
  41054c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410550:	85 82 00 00 	l.lwz r12,0x0(r2)
  410554:	85 82 00 00 	l.lwz r12,0x0(r2)
  410558:	85 82 00 00 	l.lwz r12,0x0(r2)
  41055c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410560:	85 82 00 00 	l.lwz r12,0x0(r2)
  410564:	85 82 00 00 	l.lwz r12,0x0(r2)
  410568:	85 82 00 00 	l.lwz r12,0x0(r2)
  41056c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410570:	85 82 00 00 	l.lwz r12,0x0(r2)
  410574:	85 82 00 00 	l.lwz r12,0x0(r2)
  410578:	85 82 00 00 	l.lwz r12,0x0(r2)
  41057c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410580:	85 82 00 00 	l.lwz r12,0x0(r2)
  410584:	85 82 00 00 	l.lwz r12,0x0(r2)
  410588:	85 82 00 00 	l.lwz r12,0x0(r2)
  41058c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410590:	85 82 00 00 	l.lwz r12,0x0(r2)
  410594:	85 82 00 00 	l.lwz r12,0x0(r2)
  410598:	85 82 00 00 	l.lwz r12,0x0(r2)
  41059c:	85 82 00 00 	l.lwz r12,0x0(r2)
  4105a0:	85 82 00 00 	l.lwz r12,0x0(r2)
  4105a4:	85 82 00 00 	l.lwz r12,0x0(r2)
  4105a8:	85 82 00 00 	l.lwz r12,0x0(r2)

  //move.w #(bpl1>>16)&$ffff,$dff0e0  ; BPL1PTH
  //move.w #bpl1&$ffff,$dff0e2    ; BPL1PTL
  //move.w #(bpl2>>16)&$ffff,$dff0e4  ; BPL2PTH
  //move.w #bpl2&$ffff,$dff0e6    ; BPL2PTL
  MEM_UPLOAD_INIT(0xdff0e0);
  4105ac:	d4 10 a0 00 	l.sw 0x0(r16),r20
  4105b0:	d4 0e 20 00 	l.sw 0x0(r14),r4
  4105b4:	85 8e 00 00 	l.lwz r12,0x0(r14)
  4105b8:	9d 80 00 e0 	l.addi r12,r0,0xe0
  4105bc:	d4 0e 60 00 	l.sw 0x0(r14),r12
  4105c0:	85 8e 00 00 	l.lwz r12,0x0(r14)
  4105c4:	d4 0e 28 00 	l.sw 0x0(r14),r5
  4105c8:	85 8e 00 00 	l.lwz r12,0x0(r14)
  4105cc:	d4 0e 18 00 	l.sw 0x0(r14),r3
  4105d0:	85 8e 00 00 	l.lwz r12,0x0(r14)
  4105d4:	9d 80 00 00 	l.addi r12,r0,0x0
  4105d8:	d4 0e 60 00 	l.sw 0x0(r14),r12
  4105dc:	85 8e 00 00 	l.lwz r12,0x0(r14)
  MEM_WRITE16(0x0008); MEM_WRITE16(0x0000);
  4105e0:	d4 0e 68 00 	l.sw 0x0(r14),r13
  4105e4:	85 8e 00 00 	l.lwz r12,0x0(r14)
  4105e8:	d4 0e 38 00 	l.sw 0x0(r14),r7
  4105ec:	85 8e 00 00 	l.lwz r12,0x0(r14)
  4105f0:	85 82 00 00 	l.lwz r12,0x0(r2)
  4105f4:	85 82 00 00 	l.lwz r12,0x0(r2)
  4105f8:	85 82 00 00 	l.lwz r12,0x0(r2)
  4105fc:	85 82 00 00 	l.lwz r12,0x0(r2)
  410600:	85 82 00 00 	l.lwz r12,0x0(r2)
  410604:	85 82 00 00 	l.lwz r12,0x0(r2)
  410608:	85 82 00 00 	l.lwz r12,0x0(r2)
  41060c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410610:	85 82 00 00 	l.lwz r12,0x0(r2)
  410614:	85 82 00 00 	l.lwz r12,0x0(r2)
  410618:	85 82 00 00 	l.lwz r12,0x0(r2)
  41061c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410620:	85 82 00 00 	l.lwz r12,0x0(r2)
  410624:	85 82 00 00 	l.lwz r12,0x0(r2)
  410628:	85 82 00 00 	l.lwz r12,0x0(r2)
  41062c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410630:	85 82 00 00 	l.lwz r12,0x0(r2)
  410634:	85 82 00 00 	l.lwz r12,0x0(r2)
  410638:	85 82 00 00 	l.lwz r12,0x0(r2)
  41063c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410640:	85 82 00 00 	l.lwz r12,0x0(r2)
  410644:	85 82 00 00 	l.lwz r12,0x0(r2)
  410648:	85 82 00 00 	l.lwz r12,0x0(r2)
  41064c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410650:	85 82 00 00 	l.lwz r12,0x0(r2)
  410654:	85 82 00 00 	l.lwz r12,0x0(r2)
  410658:	85 82 00 00 	l.lwz r12,0x0(r2)
  41065c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410660:	85 82 00 00 	l.lwz r12,0x0(r2)
  410664:	85 82 00 00 	l.lwz r12,0x0(r2)
  410668:	85 82 00 00 	l.lwz r12,0x0(r2)
  41066c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410670:	85 82 00 00 	l.lwz r12,0x0(r2)
  410674:	85 82 00 00 	l.lwz r12,0x0(r2)
  410678:	85 82 00 00 	l.lwz r12,0x0(r2)
  41067c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410680:	85 82 00 00 	l.lwz r12,0x0(r2)
  410684:	85 82 00 00 	l.lwz r12,0x0(r2)
  410688:	85 82 00 00 	l.lwz r12,0x0(r2)
  41068c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410690:	85 82 00 00 	l.lwz r12,0x0(r2)
  410694:	85 82 00 00 	l.lwz r12,0x0(r2)
  410698:	85 82 00 00 	l.lwz r12,0x0(r2)
  41069c:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106a0:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106a4:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106a8:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106ac:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106b0:	d4 0e 68 00 	l.sw 0x0(r14),r13
  4106b4:	85 8e 00 00 	l.lwz r12,0x0(r14)
  4106b8:	d4 0e 68 00 	l.sw 0x0(r14),r13
  4106bc:	85 8e 00 00 	l.lwz r12,0x0(r14)
  4106c0:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106c4:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106c8:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106cc:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106d0:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106d4:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106d8:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106dc:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106e0:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106e4:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106e8:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106ec:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106f0:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106f4:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106f8:	85 82 00 00 	l.lwz r12,0x0(r2)
  4106fc:	85 82 00 00 	l.lwz r12,0x0(r2)
  410700:	85 82 00 00 	l.lwz r12,0x0(r2)
  410704:	85 82 00 00 	l.lwz r12,0x0(r2)
  410708:	85 82 00 00 	l.lwz r12,0x0(r2)
  41070c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410710:	85 82 00 00 	l.lwz r12,0x0(r2)
  410714:	85 82 00 00 	l.lwz r12,0x0(r2)
  410718:	85 82 00 00 	l.lwz r12,0x0(r2)
  41071c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410720:	85 82 00 00 	l.lwz r12,0x0(r2)
  410724:	85 82 00 00 	l.lwz r12,0x0(r2)
  410728:	85 82 00 00 	l.lwz r12,0x0(r2)
  41072c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410730:	85 82 00 00 	l.lwz r12,0x0(r2)
  410734:	85 82 00 00 	l.lwz r12,0x0(r2)
  410738:	85 82 00 00 	l.lwz r12,0x0(r2)
  41073c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410740:	85 82 00 00 	l.lwz r12,0x0(r2)
  410744:	85 82 00 00 	l.lwz r12,0x0(r2)
  410748:	85 82 00 00 	l.lwz r12,0x0(r2)
  41074c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410750:	85 82 00 00 	l.lwz r12,0x0(r2)
  410754:	85 82 00 00 	l.lwz r12,0x0(r2)
  410758:	85 82 00 00 	l.lwz r12,0x0(r2)
  41075c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410760:	85 82 00 00 	l.lwz r12,0x0(r2)
  410764:	85 82 00 00 	l.lwz r12,0x0(r2)
  410768:	85 82 00 00 	l.lwz r12,0x0(r2)
  41076c:	85 82 00 00 	l.lwz r12,0x0(r2)
  410770:	85 82 00 00 	l.lwz r12,0x0(r2)
  410774:	85 82 00 00 	l.lwz r12,0x0(r2)
  410778:	85 82 00 00 	l.lwz r12,0x0(r2)
  41077c:	85 82 00 00 	l.lwz r12,0x0(r2)
  MEM_WRITE16(0x0008); MEM_WRITE16(0x5000);
  410780:	d4 0e 68 00 	l.sw 0x0(r14),r13
  410784:	85 8e 00 00 	l.lwz r12,0x0(r14)
  410788:	d4 0e 38 00 	l.sw 0x0(r14),r7
  41078c:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410790:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410794:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410798:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41079c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107a0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107a4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107a8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107ac:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107b0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107b4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107b8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107bc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107c0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107c4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107c8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107cc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107d0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107d4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107d8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107dc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107e0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107e4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107e8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107ec:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107f0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107f4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107f8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4107fc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410800:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410804:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410808:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41080c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410810:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410814:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410818:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41081c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410820:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410824:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410828:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41082c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410830:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410834:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410838:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41083c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410840:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410844:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410848:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41084c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410850:	9c e0 00 50 	l.addi r7,r0,0x50
  410854:	d4 0e 38 00 	l.sw 0x0(r14),r7
  410858:	84 ee 00 00 	l.lwz r7,0x0(r14)
  41085c:	d4 0e 68 00 	l.sw 0x0(r14),r13
  410860:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410864:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410868:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41086c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410870:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410874:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410878:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41087c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410880:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410884:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410888:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41088c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410890:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410894:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410898:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41089c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108a0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108a4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108a8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108ac:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108b0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108b4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108b8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108bc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108c0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108c4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108c8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108cc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108d0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108d4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108d8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108dc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108e0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108e4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108e8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108ec:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108f0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108f4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108f8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4108fc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410900:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410904:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410908:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41090c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410910:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410914:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410918:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41091c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410920:	84 e2 00 00 	l.lwz r7,0x0(r2)
  MEM_UPLOAD_FINI();
  410924:	d4 10 90 00 	l.sw 0x0(r16),r18
  410928:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41092c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410930:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410934:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410938:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41093c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410940:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410944:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410948:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41094c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410950:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410954:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410958:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41095c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410960:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410964:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410968:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41096c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410970:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410974:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410978:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41097c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410980:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410984:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410988:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41098c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410990:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410994:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410998:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41099c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109a0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109a4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109a8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109ac:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109b0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109b4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109b8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109bc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109c0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109c4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109c8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109cc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109d0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109d4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109d8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109dc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109e0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4109e4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  //move.w #$0000,$dff102  ; BPLCON1, bitplane control scroll value
  //move.w #$0000,$dff104  ; BPLCON2, misc bitplane bits
  //move.w #$0000,$dff106  ; BPLCON3, TODO
  //move.w #$0000,$dff108  ; BPL1MOD, bitplane modulo for odd planes
  //move.w #$0000,$dff10a  ; BPL2MOD, bitplane modulo for even planes
  MEM_UPLOAD_INIT(0xdff100);
  4109e8:	d4 10 a0 00 	l.sw 0x0(r16),r20
  4109ec:	d4 0e 20 00 	l.sw 0x0(r14),r4
  4109f0:	84 ee 00 00 	l.lwz r7,0x0(r14)
  4109f4:	d4 0e 68 00 	l.sw 0x0(r14),r13
  4109f8:	84 ee 00 00 	l.lwz r7,0x0(r14)
  4109fc:	d4 0e 40 00 	l.sw 0x0(r14),r8
  410a00:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410a04:	d4 0e 18 00 	l.sw 0x0(r14),r3
  410a08:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410a0c:	d4 0e 68 00 	l.sw 0x0(r14),r13
  410a10:	84 ee 00 00 	l.lwz r7,0x0(r14)
  MEM_WRITE16(0xa200);
  410a14:	9c e0 00 a2 	l.addi r7,r0,0xa2
  410a18:	d4 0e 38 00 	l.sw 0x0(r14),r7
  410a1c:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410a20:	d4 0e 68 00 	l.sw 0x0(r14),r13
  410a24:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410a28:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a2c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a30:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a34:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a38:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a3c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a40:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a44:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a48:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a4c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a50:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a54:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a58:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a5c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a60:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a64:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a68:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a6c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a70:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a74:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a78:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a7c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a80:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a84:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a88:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a8c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a90:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a94:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a98:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410a9c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410aa0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410aa4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410aa8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410aac:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ab0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ab4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ab8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410abc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ac0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ac4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ac8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410acc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ad0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ad4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ad8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410adc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ae0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ae4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  MEM_WRITE16(0x0000);
  410ae8:	d4 0e 68 00 	l.sw 0x0(r14),r13
  410aec:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410af0:	d4 0e 68 00 	l.sw 0x0(r14),r13
  410af4:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410af8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410afc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b00:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b04:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b08:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b0c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b10:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b14:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b18:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b1c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b20:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b24:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b28:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b2c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b30:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b34:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b38:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b3c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b40:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b44:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b48:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b4c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b50:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b54:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b58:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b5c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b60:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b64:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b68:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b6c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b70:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b74:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b78:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b7c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b80:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b84:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b88:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b8c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b90:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b94:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b98:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410b9c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ba0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ba4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ba8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410bac:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410bb0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410bb4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  MEM_WRITE16(0x0000);
  410bb8:	d4 0e 68 00 	l.sw 0x0(r14),r13
  410bbc:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410bc0:	d4 0e 68 00 	l.sw 0x0(r14),r13
  410bc4:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410bc8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410bcc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410bd0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410bd4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410bd8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410bdc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410be0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410be4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410be8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410bec:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410bf0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410bf4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410bf8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410bfc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c00:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c04:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c08:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c0c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c10:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c14:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c18:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c1c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c20:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c24:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c28:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c2c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c30:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c34:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c38:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c3c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c40:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c44:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c48:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c4c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c50:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c54:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c58:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c5c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c60:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c64:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c68:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c6c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c70:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c74:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c78:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c7c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c80:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c84:	84 e2 00 00 	l.lwz r7,0x0(r2)
  MEM_WRITE16(0x0000);
  410c88:	d4 0e 68 00 	l.sw 0x0(r14),r13
  410c8c:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410c90:	d4 0e 68 00 	l.sw 0x0(r14),r13
  410c94:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410c98:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410c9c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ca0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ca4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ca8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cac:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cb0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cb4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cb8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cbc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cc0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cc4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cc8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ccc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cd0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cd4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cd8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cdc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ce0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ce4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ce8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cec:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cf0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cf4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cf8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410cfc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d00:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d04:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d08:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d0c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d10:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d14:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d18:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d1c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d20:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d24:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d28:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d2c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d30:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d34:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d38:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d3c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d40:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d44:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d48:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d4c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d50:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d54:	84 e2 00 00 	l.lwz r7,0x0(r2)
  MEM_WRITE16(0x0000);
  410d58:	d4 0e 68 00 	l.sw 0x0(r14),r13
  410d5c:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410d60:	d4 0e 68 00 	l.sw 0x0(r14),r13
  410d64:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410d68:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d6c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d70:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d74:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d78:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d7c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d80:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d84:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d88:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d8c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d90:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d94:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d98:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410d9c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410da0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410da4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410da8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410dac:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410db0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410db4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410db8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410dbc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410dc0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410dc4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410dc8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410dcc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410dd0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410dd4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410dd8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ddc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410de0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410de4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410de8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410dec:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410df0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410df4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410df8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410dfc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e00:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e04:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e08:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e0c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e10:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e14:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e18:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e1c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e20:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e24:	84 e2 00 00 	l.lwz r7,0x0(r2)
  MEM_WRITE16(0x0000);
  410e28:	d4 0e 68 00 	l.sw 0x0(r14),r13
  410e2c:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410e30:	d4 0e 68 00 	l.sw 0x0(r14),r13
  410e34:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410e38:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e3c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e40:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e44:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e48:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e4c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e50:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e54:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e58:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e5c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e60:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e64:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e68:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e6c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e70:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e74:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e78:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e7c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e80:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e84:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e88:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e8c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e90:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e94:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e98:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410e9c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ea0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ea4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ea8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410eac:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410eb0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410eb4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410eb8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ebc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ec0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ec4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ec8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ecc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ed0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ed4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ed8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410edc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ee0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ee4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ee8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410eec:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ef0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410ef4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  MEM_UPLOAD_FINI();
  410ef8:	d4 10 90 00 	l.sw 0x0(r16),r18
  410efc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f00:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f04:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f08:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f0c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f10:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f14:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f18:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f1c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f20:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f24:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f28:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f2c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f30:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f34:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f38:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f3c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f40:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f44:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f48:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f4c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f50:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f54:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f58:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f5c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f60:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f64:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f68:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f6c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f70:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f74:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f78:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f7c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f80:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f84:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f88:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f8c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f90:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f94:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f98:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410f9c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410fa0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410fa4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410fa8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410fac:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410fb0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410fb4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  410fb8:	84 e2 00 00 	l.lwz r7,0x0(r2)

  //move.w #$09f0,$dff040  ; BLTCON0
  //move.w #$0000,$dff042  ; BLTCON1
  //move.w #$ffff,$dff044  ; BLTAFWM, blitter first word mask for srcA
  //move.w #$ffff,$dff046  ; BLTALWM, blitter last word mask for srcA
  MEM_UPLOAD_INIT(0xdff040);
  410fbc:	d4 10 a0 00 	l.sw 0x0(r16),r20
  410fc0:	d4 0e 20 00 	l.sw 0x0(r14),r4
  410fc4:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410fc8:	d4 0e 90 00 	l.sw 0x0(r14),r18
  410fcc:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410fd0:	d4 0e 28 00 	l.sw 0x0(r14),r5
  410fd4:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410fd8:	d4 0e 18 00 	l.sw 0x0(r14),r3
  410fdc:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410fe0:	d4 0e 68 00 	l.sw 0x0(r14),r13
  410fe4:	84 ee 00 00 	l.lwz r7,0x0(r14)
  MEM_WRITE16(0x09f0);
  410fe8:	9c e0 00 09 	l.addi r7,r0,0x9
  410fec:	d4 0e 38 00 	l.sw 0x0(r14),r7
  410ff0:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410ff4:	d4 0e 28 00 	l.sw 0x0(r14),r5
  410ff8:	84 ee 00 00 	l.lwz r7,0x0(r14)
  410ffc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411000:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411004:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411008:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41100c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411010:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411014:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411018:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41101c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411020:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411024:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411028:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41102c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411030:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411034:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411038:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41103c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411040:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411044:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411048:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41104c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411050:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411054:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411058:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41105c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411060:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411064:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411068:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41106c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411070:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411074:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411078:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41107c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411080:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411084:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411088:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41108c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411090:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411094:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411098:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41109c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110a0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110a4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110a8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110ac:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110b0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110b4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110b8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  MEM_WRITE16(0x0000);
  4110bc:	d4 0e 68 00 	l.sw 0x0(r14),r13
  4110c0:	84 ee 00 00 	l.lwz r7,0x0(r14)
  4110c4:	d4 0e 68 00 	l.sw 0x0(r14),r13
  4110c8:	84 ee 00 00 	l.lwz r7,0x0(r14)
  4110cc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110d0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110d4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110d8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110dc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110e0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110e4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110e8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110ec:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110f0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110f4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110f8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4110fc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411100:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411104:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411108:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41110c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411110:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411114:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411118:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41111c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411120:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411124:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411128:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41112c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411130:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411134:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411138:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41113c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411140:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411144:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411148:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41114c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411150:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411154:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411158:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41115c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411160:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411164:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411168:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41116c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411170:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411174:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411178:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41117c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411180:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411184:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411188:	84 e2 00 00 	l.lwz r7,0x0(r2)
  MEM_WRITE16(0xffff);
  41118c:	d4 0e 30 00 	l.sw 0x0(r14),r6
  411190:	84 ee 00 00 	l.lwz r7,0x0(r14)
  411194:	d4 0e 30 00 	l.sw 0x0(r14),r6
  411198:	84 ee 00 00 	l.lwz r7,0x0(r14)
  41119c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111a0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111a4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111a8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111ac:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111b0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111b4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111b8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111bc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111c0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111c4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111c8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111cc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111d0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111d4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111d8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111dc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111e0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111e4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111e8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111ec:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111f0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111f4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111f8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4111fc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411200:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411204:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411208:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41120c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411210:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411214:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411218:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41121c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411220:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411224:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411228:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41122c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411230:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411234:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411238:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41123c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411240:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411244:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411248:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41124c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411250:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411254:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411258:	84 e2 00 00 	l.lwz r7,0x0(r2)
  MEM_WRITE16(0xffff);
  41125c:	d4 0e 30 00 	l.sw 0x0(r14),r6
  411260:	84 ee 00 00 	l.lwz r7,0x0(r14)
  411264:	d4 0e 30 00 	l.sw 0x0(r14),r6
  411268:	84 ce 00 00 	l.lwz r6,0x0(r14)
  41126c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411270:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411274:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411278:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41127c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411280:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411284:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411288:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41128c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411290:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411294:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411298:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41129c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112a0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112a4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112a8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112ac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112b0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112b4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112b8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112bc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112c0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112c4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112c8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112cc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112d0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112d4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112d8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112dc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112e0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112e4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112e8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112ec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112f0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112f4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112f8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4112fc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411300:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411304:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411308:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41130c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411310:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411314:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411318:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41131c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411320:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411324:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411328:	84 c2 00 00 	l.lwz r6,0x0(r2)
  MEM_UPLOAD_FINI();
  41132c:	d4 10 90 00 	l.sw 0x0(r16),r18
  411330:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411334:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411338:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41133c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411340:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411344:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411348:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41134c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411350:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411354:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411358:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41135c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411360:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411364:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411368:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41136c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411370:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411374:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411378:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41137c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411380:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411384:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411388:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41138c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411390:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411394:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411398:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41139c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113a0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113a4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113a8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113ac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113b0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113b4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113b8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113bc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113c0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113c4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113c8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113cc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113d0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113d4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113d8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113dc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113e0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113e4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113e8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4113ec:	84 c2 00 00 	l.lwz r6,0x0(r2)

  //move.w #$0000,$dff064  ; BLTAMOD
  //move.w #BLITS,$dff066  ; BLTDMOD
  MEM_UPLOAD_INIT(0xdff064);
  4113f0:	d4 10 a0 00 	l.sw 0x0(r16),r20
  4113f4:	d4 0e 20 00 	l.sw 0x0(r14),r4
  4113f8:	84 ce 00 00 	l.lwz r6,0x0(r14)
  4113fc:	9c c0 00 64 	l.addi r6,r0,0x64
  411400:	d4 0e 30 00 	l.sw 0x0(r14),r6
  411404:	84 ce 00 00 	l.lwz r6,0x0(r14)
  411408:	d4 0e 28 00 	l.sw 0x0(r14),r5
  41140c:	84 ce 00 00 	l.lwz r6,0x0(r14)
  411410:	d4 0e 18 00 	l.sw 0x0(r14),r3
  411414:	84 ce 00 00 	l.lwz r6,0x0(r14)
  411418:	d4 0e 68 00 	l.sw 0x0(r14),r13
  41141c:	84 ce 00 00 	l.lwz r6,0x0(r14)
  MEM_WRITE16(0x0000);
  411420:	d4 0e 68 00 	l.sw 0x0(r14),r13
  411424:	84 ce 00 00 	l.lwz r6,0x0(r14)
  411428:	d4 0e 68 00 	l.sw 0x0(r14),r13
  41142c:	84 ce 00 00 	l.lwz r6,0x0(r14)
  411430:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411434:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411438:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41143c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411440:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411444:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411448:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41144c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411450:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411454:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411458:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41145c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411460:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411464:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411468:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41146c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411470:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411474:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411478:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41147c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411480:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411484:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411488:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41148c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411490:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411494:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411498:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41149c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114a0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114a4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114a8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114ac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114b0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114b4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114b8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114bc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114c0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114c4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114c8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114cc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114d0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114d4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114d8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114dc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114e0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114e4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114e8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4114ec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  MEM_WRITE16(BLITS);
  4114f0:	d4 0e 68 00 	l.sw 0x0(r14),r13
  4114f4:	84 ce 00 00 	l.lwz r6,0x0(r14)
  4114f8:	d4 0e 90 00 	l.sw 0x0(r14),r18
  4114fc:	84 ce 00 00 	l.lwz r6,0x0(r14)
  411500:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411504:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411508:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41150c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411510:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411514:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411518:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41151c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411520:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411524:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411528:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41152c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411530:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411534:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411538:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41153c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411540:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411544:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411548:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41154c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411550:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411554:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411558:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41155c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411560:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411564:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411568:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41156c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411570:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411574:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411578:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41157c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411580:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411584:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411588:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41158c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411590:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411594:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411598:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41159c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115a0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115a4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115a8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115ac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115b0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115b4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115b8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115bc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  MEM_UPLOAD_FINI();
  4115c0:	d4 10 90 00 	l.sw 0x0(r16),r18
  4115c4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115c8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115cc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115d0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115d4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115d8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115dc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115e0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115e4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115e8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115ec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115f0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115f4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115f8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4115fc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411600:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411604:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411608:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41160c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411610:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411614:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411618:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41161c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411620:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411624:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411628:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41162c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411630:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411634:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411638:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41163c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411640:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411644:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411648:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41164c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411650:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411654:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411658:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41165c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411660:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411664:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411668:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41166c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411670:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411674:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411678:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41167c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411680:	84 c2 00 00 	l.lwz r6,0x0(r2)

  //move.w #$0000,$dff180  ; COLOR00
  //move.w #$0aaa,$dff182  ; COLOR01
  //move.w #$0a00,$dff184  ; COLOR02
  //move.w #$0000,$dff186  ; COLOR03
  MEM_UPLOAD_INIT(0xdff180);
  411684:	d4 10 a0 00 	l.sw 0x0(r16),r20
  411688:	d4 0e 20 00 	l.sw 0x0(r14),r4
  41168c:	84 ce 00 00 	l.lwz r6,0x0(r14)
  411690:	d4 0e 58 00 	l.sw 0x0(r14),r11
  411694:	84 ce 00 00 	l.lwz r6,0x0(r14)
  411698:	d4 0e 40 00 	l.sw 0x0(r14),r8
  41169c:	84 ce 00 00 	l.lwz r6,0x0(r14)
  4116a0:	d4 0e 18 00 	l.sw 0x0(r14),r3
  4116a4:	84 ce 00 00 	l.lwz r6,0x0(r14)
  4116a8:	d4 0e 68 00 	l.sw 0x0(r14),r13
  4116ac:	84 ce 00 00 	l.lwz r6,0x0(r14)
  MEM_WRITE16(0x0000);
  4116b0:	d4 0e 68 00 	l.sw 0x0(r14),r13
  4116b4:	84 ce 00 00 	l.lwz r6,0x0(r14)
  4116b8:	d4 0e 68 00 	l.sw 0x0(r14),r13
  4116bc:	84 ce 00 00 	l.lwz r6,0x0(r14)
  4116c0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4116c4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4116c8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4116cc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4116d0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4116d4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4116d8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4116dc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4116e0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4116e4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4116e8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4116ec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4116f0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4116f4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4116f8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4116fc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411700:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411704:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411708:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41170c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411710:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411714:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411718:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41171c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411720:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411724:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411728:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41172c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411730:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411734:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411738:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41173c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411740:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411744:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411748:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41174c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411750:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411754:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411758:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41175c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411760:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411764:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411768:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41176c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411770:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411774:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411778:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41177c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  MEM_WRITE16(0x0aaa);
  411780:	9c c0 00 0a 	l.addi r6,r0,0xa
  411784:	d4 0e 30 00 	l.sw 0x0(r14),r6
  411788:	84 ee 00 00 	l.lwz r7,0x0(r14)
  41178c:	9c e0 00 aa 	l.addi r7,r0,0xaa
  411790:	d4 0e 38 00 	l.sw 0x0(r14),r7
  411794:	84 ee 00 00 	l.lwz r7,0x0(r14)
  411798:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41179c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117a0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117a4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117a8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117ac:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117b0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117b4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117b8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117bc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117c0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117c4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117c8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117cc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117d0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117d4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117d8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117dc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117e0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117e4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117e8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117ec:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117f0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117f4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117f8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4117fc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411800:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411804:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411808:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41180c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411810:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411814:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411818:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41181c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411820:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411824:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411828:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41182c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411830:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411834:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411838:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41183c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411840:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411844:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411848:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41184c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411850:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411854:	84 e2 00 00 	l.lwz r7,0x0(r2)
  MEM_WRITE16(0x0a00);
  411858:	d4 0e 30 00 	l.sw 0x0(r14),r6
  41185c:	84 ee 00 00 	l.lwz r7,0x0(r14)
  411860:	d4 0e 68 00 	l.sw 0x0(r14),r13
  411864:	84 ee 00 00 	l.lwz r7,0x0(r14)
  411868:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41186c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411870:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411874:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411878:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41187c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411880:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411884:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411888:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41188c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411890:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411894:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411898:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41189c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118a0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118a4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118a8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118ac:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118b0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118b4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118b8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118bc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118c0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118c4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118c8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118cc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118d0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118d4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118d8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118dc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118e0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118e4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118e8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118ec:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118f0:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118f4:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118f8:	84 e2 00 00 	l.lwz r7,0x0(r2)
  4118fc:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411900:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411904:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411908:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41190c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411910:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411914:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411918:	84 e2 00 00 	l.lwz r7,0x0(r2)
  41191c:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411920:	84 e2 00 00 	l.lwz r7,0x0(r2)
  411924:	84 e2 00 00 	l.lwz r7,0x0(r2)
  MEM_WRITE16(0x000a);
  411928:	d4 0e 68 00 	l.sw 0x0(r14),r13
  41192c:	84 ee 00 00 	l.lwz r7,0x0(r14)
  411930:	d4 0e 30 00 	l.sw 0x0(r14),r6
  411934:	84 ce 00 00 	l.lwz r6,0x0(r14)
  411938:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41193c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411940:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411944:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411948:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41194c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411950:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411954:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411958:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41195c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411960:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411964:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411968:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41196c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411970:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411974:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411978:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41197c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411980:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411984:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411988:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41198c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411990:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411994:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411998:	84 c2 00 00 	l.lwz r6,0x0(r2)
  41199c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119a0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119a4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119a8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119ac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119b0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119b4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119b8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119bc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119c0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119c4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119c8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119cc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119d0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119d4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119d8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119dc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119e0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119e4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119e8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119ec:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119f0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  4119f4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  MEM_UPLOAD_FINI();
  4119f8:	d4 10 90 00 	l.sw 0x0(r16),r18
  4119fc:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a00:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a04:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a08:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a0c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a10:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a14:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a18:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a1c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a20:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a24:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a28:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a2c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a30:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a34:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a38:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a3c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a40:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a44:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a48:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a4c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a50:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a54:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a58:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a5c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a60:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a64:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a68:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a6c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a70:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a74:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a78:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a7c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a80:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a84:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a88:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a8c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a90:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a94:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a98:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411a9c:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411aa0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411aa4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411aa8:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411aac:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411ab0:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411ab4:	84 c2 00 00 	l.lwz r6,0x0(r2)
  411ab8:	84 c2 00 00 	l.lwz r6,0x0(r2)

  //move.w #$0000,$dff088  ; COPJMP1, restart copper at location 1 
  MEM_UPLOAD_INIT(0xdff088);
  411abc:	d4 10 a0 00 	l.sw 0x0(r16),r20
  411ac0:	d4 0e 20 00 	l.sw 0x0(r14),r4
  411ac4:	84 8e 00 00 	l.lwz r4,0x0(r14)
  411ac8:	9c 80 00 88 	l.addi r4,r0,0x88
  411acc:	d4 0e 20 00 	l.sw 0x0(r14),r4
  411ad0:	84 8e 00 00 	l.lwz r4,0x0(r14)
  411ad4:	d4 0e 28 00 	l.sw 0x0(r14),r5
  411ad8:	84 8e 00 00 	l.lwz r4,0x0(r14)
  411adc:	d4 0e 18 00 	l.sw 0x0(r14),r3
  411ae0:	84 6e 00 00 	l.lwz r3,0x0(r14)
  411ae4:	d4 0e 68 00 	l.sw 0x0(r14),r13
  411ae8:	84 6e 00 00 	l.lwz r3,0x0(r14)
  MEM_WRITE16(0x0000);
  411aec:	d4 0e 68 00 	l.sw 0x0(r14),r13
  411af0:	84 6e 00 00 	l.lwz r3,0x0(r14)
  411af4:	d4 0e 68 00 	l.sw 0x0(r14),r13
  411af8:	84 6e 00 00 	l.lwz r3,0x0(r14)
  411afc:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b00:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b04:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b08:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b0c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b10:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b14:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b18:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b1c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b20:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b24:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b28:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b2c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b30:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b34:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b38:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b3c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b40:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b44:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b48:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b4c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b50:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b54:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b58:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b5c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b60:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b64:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b68:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b6c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b70:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b74:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b78:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b7c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b80:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b84:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b88:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b8c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b90:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b94:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b98:	84 62 00 00 	l.lwz r3,0x0(r2)
  411b9c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411ba0:	84 62 00 00 	l.lwz r3,0x0(r2)
  411ba4:	84 62 00 00 	l.lwz r3,0x0(r2)
  411ba8:	84 62 00 00 	l.lwz r3,0x0(r2)
  411bac:	84 62 00 00 	l.lwz r3,0x0(r2)
  411bb0:	84 62 00 00 	l.lwz r3,0x0(r2)
  411bb4:	84 62 00 00 	l.lwz r3,0x0(r2)
  411bb8:	84 62 00 00 	l.lwz r3,0x0(r2)
  MEM_UPLOAD_FINI(); 
  411bbc:	d4 10 90 00 	l.sw 0x0(r16),r18
  411bc0:	84 62 00 00 	l.lwz r3,0x0(r2)
  411bc4:	84 62 00 00 	l.lwz r3,0x0(r2)
  411bc8:	84 62 00 00 	l.lwz r3,0x0(r2)
  411bcc:	84 62 00 00 	l.lwz r3,0x0(r2)
  411bd0:	84 62 00 00 	l.lwz r3,0x0(r2)
  411bd4:	84 62 00 00 	l.lwz r3,0x0(r2)
  411bd8:	84 62 00 00 	l.lwz r3,0x0(r2)
  411bdc:	84 62 00 00 	l.lwz r3,0x0(r2)
  411be0:	84 62 00 00 	l.lwz r3,0x0(r2)
  411be4:	84 62 00 00 	l.lwz r3,0x0(r2)
  411be8:	84 62 00 00 	l.lwz r3,0x0(r2)
  411bec:	84 62 00 00 	l.lwz r3,0x0(r2)
  411bf0:	84 62 00 00 	l.lwz r3,0x0(r2)
  411bf4:	84 62 00 00 	l.lwz r3,0x0(r2)
  411bf8:	84 62 00 00 	l.lwz r3,0x0(r2)
  411bfc:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c00:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c04:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c08:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c0c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c10:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c14:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c18:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c1c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c20:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c24:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c28:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c2c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c30:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c34:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c38:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c3c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c40:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c44:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c48:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c4c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c50:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c54:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c58:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c5c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c60:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c64:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c68:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c6c:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c70:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c74:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c78:	84 62 00 00 	l.lwz r3,0x0(r2)
  411c7c:	84 62 00 00 	l.lwz r3,0x0(r2)
  ChangeDirectory(DIRECTORY_ROOT);
  printf("Drive found ...\r");

  // boot message
  BootInit();
  BootPrintEx("**** MINIMIG-DE1 by Rok Krajnc (rok.krajnc@gmail.com) ****");
  411c80:	18 60 00 41 	l.movhi r3,0x41
  411c84:	07 ff e2 4b 	l.jal 40a5b0 <BootPrintEx>
  411c88:	a8 63 8a 1c 	l.ori r3,r3,0x8a1c
  BootPrintEx(" ");
  411c8c:	18 60 00 41 	l.movhi r3,0x41
  411c90:	07 ff e2 48 	l.jal 40a5b0 <BootPrintEx>
  411c94:	a8 63 80 88 	l.ori r3,r3,0x8088
  BootPrintEx("Original Minimig by Dennis van Weeren");
  411c98:	18 60 00 41 	l.movhi r3,0x41
  411c9c:	07 ff e2 45 	l.jal 40a5b0 <BootPrintEx>
  411ca0:	a8 63 8a 57 	l.ori r3,r3,0x8a57
  BootPrintEx("Updates by Jakub Bednarski, Tobias Gubener, Sascha Boing, A.M. Robinson & others");
  411ca4:	18 60 00 41 	l.movhi r3,0x41
  411ca8:	07 ff e2 42 	l.jal 40a5b0 <BootPrintEx>
  411cac:	a8 63 8a 7d 	l.ori r3,r3,0x8a7d
  BootPrintEx("For updates & code see https://github.com/rkrajnc/minimig-de1");
  411cb0:	18 60 00 41 	l.movhi r3,0x41
  411cb4:	07 ff e2 3f 	l.jal 40a5b0 <BootPrintEx>
  411cb8:	a8 63 8a ce 	l.ori r3,r3,0x8ace
  BootPrintEx("For support, see http://www.minimig.net");
  411cbc:	18 60 00 41 	l.movhi r3,0x41
  411cc0:	07 ff e2 3c 	l.jal 40a5b0 <BootPrintEx>
  411cc4:	a8 63 8b 0c 	l.ori r3,r3,0x8b0c
  //BootPrintEx(" ");
  //sprintf(s, "Build git commit: %s", __BUILD_REV);
  //BootPrintEx(s);
  sprintf(s, "Build git tag: %s", __BUILD_TAG);
  411cc8:	18 60 00 41 	l.movhi r3,0x41
  411ccc:	18 80 00 41 	l.movhi r4,0x41
  411cd0:	a8 63 8b 46 	l.ori r3,r3,0x8b46
  411cd4:	a8 84 8b 34 	l.ori r4,r4,0x8b34
  411cd8:	d4 01 18 00 	l.sw 0x0(r1),r3
  411cdc:	18 60 00 41 	l.movhi r3,0x41
  411ce0:	07 ff c9 e9 	l.jal 404484 <sprintf>
  411ce4:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  BootPrintEx(s);
  411ce8:	18 60 00 41 	l.movhi r3,0x41
  411cec:	07 ff e2 31 	l.jal 40a5b0 <BootPrintEx>
  411cf0:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  BootPrintEx(" ");
  411cf4:	18 60 00 41 	l.movhi r3,0x41
  411cf8:	07 ff e2 2e 	l.jal 40a5b0 <BootPrintEx>
  411cfc:	a8 63 80 88 	l.ori r3,r3,0x8088
  spiclk = 100000 / (20*(read32(REG_SPI_DIV_ADR) + 2));
  411d00:	84 42 00 00 	l.lwz r2,0x0(r2)
  411d04:	18 60 00 01 	l.movhi r3,0x1
  411d08:	b8 82 00 02 	l.slli r4,r2,0x2
  411d0c:	b8 42 00 04 	l.slli r2,r2,0x4
  411d10:	a8 63 86 a0 	l.ori r3,r3,0x86a0
  411d14:	e0 84 10 00 	l.add r4,r4,r2
  411d18:	07 ff b8 e3 	l.jal 4000a4 <__udivsi3>
  411d1c:	9c 84 00 28 	l.addi r4,r4,0x28
  sprintf(s, "SPI clock: %u.%uMHz", spiclk/100, spiclk%100);
  411d20:	9c 80 00 64 	l.addi r4,r0,0x64
  411d24:	a8 6b 00 00 	l.ori r3,r11,0x0
  411d28:	07 ff b8 df 	l.jal 4000a4 <__udivsi3>
  411d2c:	a8 4b 00 00 	l.ori r2,r11,0x0
  411d30:	a8 62 00 00 	l.ori r3,r2,0x0
  411d34:	9c 80 00 64 	l.addi r4,r0,0x64
  411d38:	07 ff b9 34 	l.jal 400208 <__umodsi3>
  411d3c:	d4 01 58 00 	l.sw 0x0(r1),r11
  411d40:	18 60 00 41 	l.movhi r3,0x41
  411d44:	18 80 00 41 	l.movhi r4,0x41
  411d48:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  411d4c:	a8 84 8b 57 	l.ori r4,r4,0x8b57
  411d50:	07 ff c9 cd 	l.jal 404484 <sprintf>
  411d54:	d4 01 58 04 	l.sw 0x4(r1),r11
  BootPrintEx(s);
  411d58:	18 60 00 41 	l.movhi r3,0x41
  411d5c:	07 ff e2 15 	l.jal 40a5b0 <BootPrintEx>
  411d60:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  //BootPrintEx(" ");
  TIMER_wait(3000);
  411d64:	9c a0 00 00 	l.addi r5,r0,0x0
  411d68:	d4 16 28 00 	l.sw 0x0(r22),r5
  411d6c:	84 56 00 00 	l.lwz r2,0x0(r22)
  411d70:	bc a2 0b b7 	l.sfleui r2,0xbb7
  411d74:	13 ff ff fe 	l.bf 411d6c <main+0x2b24>
  411d78:	1b c0 00 80 	l.movhi r30,0x80

  //eject all disks
  df[0].status = 0;
  411d7c:	18 40 00 41 	l.movhi r2,0x41
  411d80:	9c c0 00 00 	l.addi r6,r0,0x0
  411d84:	a8 42 f1 08 	l.ori r2,r2,0xf108
  df[1].status = 0;
  df[2].status = 0;
  df[3].status = 0;
 
  BootPrintEx("Booting ...");
  411d88:	18 60 00 41 	l.movhi r3,0x41
  BootPrintEx(s);
  //BootPrintEx(" ");
  TIMER_wait(3000);

  //eject all disks
  df[0].status = 0;
  411d8c:	d8 02 30 00 	l.sb 0x0(r2),r6
  df[1].status = 0;
  411d90:	d8 02 32 bc 	l.sb 0x2bc(r2),r6
  df[2].status = 0;
  411d94:	d8 02 35 78 	l.sb 0x578(r2),r6
  df[3].status = 0;
  411d98:	d8 22 30 34 	l.sb 0x834(r2),r6
 
  BootPrintEx("Booting ...");
  411d9c:	a8 63 8b 6b 	l.ori r3,r3,0x8b6b
  411da0:	07 ff e2 04 	l.jal 40a5b0 <BootPrintEx>
  411da4:	18 40 00 41 	l.movhi r2,0x41
  config.kickstart.name[0]=0;
  411da8:	9c e0 00 00 	l.addi r7,r0,0x0
  411dac:	a8 42 cc ac 	l.ori r2,r2,0xccac
  SetConfigurationFilename(0); // Use default config
  411db0:	9c 60 00 00 	l.addi r3,r0,0x0
  df[1].status = 0;
  df[2].status = 0;
  df[3].status = 0;
 
  BootPrintEx("Booting ...");
  config.kickstart.name[0]=0;
  411db4:	d8 02 38 0c 	l.sb 0xc(r2),r7
  SetConfigurationFilename(0); // Use default config
  411db8:	07 ff ca 22 	l.jal 404640 <SetConfigurationFilename>
  411dbc:	a8 5e 00 1c 	l.ori r2,r30,0x1c

  LoadConfiguration(0);  // Use slot-based config filename
  411dc0:	07 ff ec df 	l.jal 40d13c <LoadConfiguration.clone.7>
  411dc4:	15 00 00 00 	l.nop 0x0

  SPI_fast();
  411dc8:	9d 80 00 00 	l.addi r12,r0,0x0
  411dcc:	d4 02 60 00 	l.sw 0x0(r2),r12

  // main loop
  while (1) {
    HandleFpga();
  411dd0:	07 ff e9 0d 	l.jal 40c204 <HandleFpga>
  411dd4:	15 00 00 00 	l.nop 0x0
	static long helptext_timer;
	static const char *helptext;
	static char helpstate=0;

    // get user control codes
    c = OsdGetCtrl();
  411dd8:	07 ff c8 e6 	l.jal 404170 <OsdGetCtrl>
  411ddc:	15 00 00 00 	l.nop 0x0
    left = false;
    right = false;
	plus=false;
	minus=false;

    switch (c)
  411de0:	bc 0b 00 4e 	l.sfeqi r11,0x4e
  411de4:	10 00 01 04 	l.bf 4121f4 <main+0x2fac>
  411de8:	ab 8b 00 00 	l.ori r28,r11,0x0
  411dec:	bc 4b 00 4e 	l.sfgtui r11,0x4e
  411df0:	10 00 00 19 	l.bf 411e54 <main+0x2c0c>
  411df4:	bc 0b 00 64 	l.sfeqi r11,0x64
  411df8:	bc 0b 00 45 	l.sfeqi r11,0x45
  411dfc:	10 00 00 e3 	l.bf 412188 <main+0x2f40>
  411e00:	bc 4b 00 45 	l.sfgtui r11,0x45
  411e04:	10 00 00 0b 	l.bf 411e30 <main+0x2be8>
  411e08:	bc 0b 00 4c 	l.sfeqi r11,0x4c
  411e0c:	bc 0b 00 40 	l.sfeqi r11,0x40
  411e10:	10 00 00 26 	l.bf 411ea8 <main+0x2c60>
  411e14:	bc 0b 00 44 	l.sfeqi r11,0x44
  411e18:	10 00 00 24 	l.bf 411ea8 <main+0x2c60>
  411e1c:	bc 0b 00 0f 	l.sfeqi r11,0xf
  411e20:	0c 00 00 7e 	l.bnf 412018 <main+0x2dd0>
  411e24:	15 00 00 00 	l.nop 0x0
        }
		else
			minus=true;
        break;
    case KEY_KP0 :
        if (ctrl && lalt)
  411e28:	00 00 00 8c 	l.j 412058 <main+0x2e10>
  411e2c:	18 40 00 42 	l.movhi r2,0x42
    left = false;
    right = false;
	plus=false;
	minus=false;

    switch (c)
  411e30:	10 00 00 de 	l.bf 4121a8 <main+0x2f60>
  411e34:	bc 4b 00 4c 	l.sfgtui r11,0x4c
  411e38:	10 00 00 e5 	l.bf 4121cc <main+0x2f84>
  411e3c:	9c 40 00 00 	l.addi r2,r0,0x0
  411e40:	bc 0b 00 4a 	l.sfeqi r11,0x4a
  411e44:	0c 00 00 fa 	l.bnf 41222c <main+0x2fe4>
  411e48:	aa 42 00 00 	l.ori r18,r2,0x0
        }
		else
			plus=true;
        break;
    case KEY_KPMINUS :
        if (ctrl && lalt)
  411e4c:	00 00 00 58 	l.j 411fac <main+0x2d64>
  411e50:	18 40 00 42 	l.movhi r2,0x42
    left = false;
    right = false;
	plus=false;
	minus=false;

    switch (c)
  411e54:	10 00 00 25 	l.bf 411ee8 <main+0x2ca0>
  411e58:	bc 4b 00 64 	l.sfgtui r11,0x64
  411e5c:	10 00 00 0b 	l.bf 411e88 <main+0x2c40>
  411e60:	bc 0b 00 e3 	l.sfeqi r11,0xe3
  411e64:	bc 0b 00 5e 	l.sfeqi r11,0x5e
  411e68:	10 00 00 2a 	l.bf 411f10 <main+0x2cc8>
  411e6c:	bc 0b 00 63 	l.sfeqi r11,0x63
  411e70:	10 00 00 15 	l.bf 411ec4 <main+0x2c7c>
  411e74:	bc 0b 00 4f 	l.sfeqi r11,0x4f
  411e78:	0c 00 00 68 	l.bnf 412018 <main+0x2dd0>
  411e7c:	15 00 00 00 	l.nop 0x0
    up = false;
    down = false;
    left = false;
    right = false;
	plus=false;
	minus=false;
  411e80:	00 00 00 da 	l.j 4121e8 <main+0x2fa0>
  411e84:	9c 40 00 00 	l.addi r2,r0,0x0

    switch (c)
  411e88:	10 00 00 13 	l.bf 411ed4 <main+0x2c8c>
  411e8c:	bc 0b 00 e4 	l.sfeqi r11,0xe4
  411e90:	10 00 00 1b 	l.bf 411efc <main+0x2cb4>
  411e94:	bc 0b 00 69 	l.sfeqi r11,0x69
  411e98:	0c 00 00 60 	l.bnf 412018 <main+0x2dd0>
  411e9c:	15 00 00 00 	l.nop 0x0
                    InfoMessage(config_autofire_msg[config_autofire]);
            }
        }
        break;
    case KEY_MENU :
        if (ctrl && lalt)
  411ea0:	00 00 00 a2 	l.j 412128 <main+0x2ee0>
  411ea4:	18 40 00 42 	l.movhi r2,0x42
    up = false;
    down = false;
    left = false;
    right = false;
	plus=false;
	minus=false;
  411ea8:	9c 40 00 00 	l.addi r2,r0,0x0
        if (menustate != MENU_NONE2)
            menu = true;
        break;
    case KEY_ENTER :
    case KEY_SPACE :
        select = true;
  411eac:	9e 00 00 ff 	l.addi r16,r0,0xff
    select = false;
    up = false;
    down = false;
    left = false;
    right = false;
	plus=false;
  411eb0:	aa 42 00 00 	l.ori r18,r2,0x0
    // decode and set events
    menu = false;
    select = false;
    up = false;
    down = false;
    left = false;
  411eb4:	ab 02 00 00 	l.ori r24,r2,0x0
    right = false;
  411eb8:	aa c2 00 00 	l.ori r22,r2,0x0

    // get user control codes
    c = OsdGetCtrl();

    // decode and set events
    menu = false;
  411ebc:	00 00 00 e5 	l.j 412250 <main+0x3008>
  411ec0:	a9 c2 00 00 	l.ori r14,r2,0x0
	minus=false;

    switch (c)
    {
    case KEY_CTRL :
        ctrl = true;
  411ec4:	18 40 00 42 	l.movhi r2,0x42
  411ec8:	9d a0 ff ff 	l.addi r13,r0,0xffffffff
  411ecc:	00 00 00 ad 	l.j 412180 <main+0x2f38>
  411ed0:	a8 42 0b 7d 	l.ori r2,r2,0xb7d
        break;
    case KEY_CTRL | KEY_UPSTROKE :
        ctrl = false;
  411ed4:	18 40 00 42 	l.movhi r2,0x42
  411ed8:	9c 60 00 00 	l.addi r3,r0,0x0
  411edc:	a8 42 0b 7d 	l.ori r2,r2,0xb7d
  411ee0:	00 00 00 4e 	l.j 412018 <main+0x2dd0>
  411ee4:	d8 02 18 00 	l.sb 0x0(r2),r3
        break;
    case KEY_LALT :
        lalt = true;
  411ee8:	18 40 00 42 	l.movhi r2,0x42
  411eec:	9c 80 ff ff 	l.addi r4,r0,0xffffffff
  411ef0:	a8 42 0b 7c 	l.ori r2,r2,0xb7c
  411ef4:	00 00 00 49 	l.j 412018 <main+0x2dd0>
  411ef8:	d8 02 20 00 	l.sb 0x0(r2),r4
        break;
    case KEY_LALT | KEY_UPSTROKE :
        lalt = false;
  411efc:	18 40 00 42 	l.movhi r2,0x42
  411f00:	9c a0 00 00 	l.addi r5,r0,0x0
  411f04:	a8 42 0b 7c 	l.ori r2,r2,0xb7c
  411f08:	00 00 00 44 	l.j 412018 <main+0x2dd0>
  411f0c:	d8 02 28 00 	l.sb 0x0(r2),r5
        break;
    case KEY_KPPLUS :
        if (ctrl && lalt)
  411f10:	18 40 00 42 	l.movhi r2,0x42
  411f14:	a8 42 0b 7d 	l.ori r2,r2,0xb7d
  411f18:	8c 42 00 00 	l.lbz r2,0x0(r2)
  411f1c:	bc 02 00 00 	l.sfeqi r2,0x0
  411f20:	10 00 00 c3 	l.bf 41222c <main+0x2fe4>
  411f24:	9e 40 00 ff 	l.addi r18,r0,0xff
  411f28:	18 40 00 42 	l.movhi r2,0x42
  411f2c:	a8 42 0b 7c 	l.ori r2,r2,0xb7c
  411f30:	8c 42 00 00 	l.lbz r2,0x0(r2)
  411f34:	bc 02 00 00 	l.sfeqi r2,0x0
  411f38:	10 00 00 be 	l.bf 412230 <main+0x2fe8>
  411f3c:	ab 02 00 00 	l.ori r24,r2,0x0
        {
            config.chipset |= CONFIG_TURBO;
  411f40:	18 40 00 41 	l.movhi r2,0x41
  411f44:	a8 42 cc ac 	l.ori r2,r2,0xccac
  411f48:	8c 62 00 27 	l.lbz r3,0x27(r2)
  411f4c:	a8 63 00 01 	l.ori r3,r3,0x1
            ConfigChipset(config.chipset);
  411f50:	07 ff c8 4d 	l.jal 404084 <ConfigChipset>
  411f54:	d8 02 18 27 	l.sb 0x27(r2),r3
            if (menustate == MENU_SETTINGS_CHIPSET2)
  411f58:	18 60 00 41 	l.movhi r3,0x41
  411f5c:	a8 63 a3 89 	l.ori r3,r3,0xa389
  411f60:	8c 43 00 00 	l.lbz r2,0x0(r3)
  411f64:	bc 22 00 19 	l.sfnei r2,0x19
  411f68:	10 00 00 04 	l.bf 411f78 <main+0x2d30>
  411f6c:	9c c0 00 18 	l.addi r6,r0,0x18
                menustate = MENU_SETTINGS_CHIPSET1;
  411f70:	00 00 00 2a 	l.j 412018 <main+0x2dd0>
  411f74:	d8 03 30 00 	l.sb 0x0(r3),r6
            else if (menustate == MENU_NONE2 || menustate == MENU_INFO)
  411f78:	ac 62 00 3d 	l.xori r3,r2,0x3d
  411f7c:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  411f80:	bd 83 00 00 	l.sfltsi r3,0x0
  411f84:	10 00 00 07 	l.bf 411fa0 <main+0x2d58>
  411f88:	15 00 00 00 	l.nop 0x0
  411f8c:	ac 42 00 01 	l.xori r2,r2,0x1
  411f90:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
  411f94:	bd 62 00 00 	l.sfgesi r2,0x0
  411f98:	10 00 00 20 	l.bf 412018 <main+0x2dd0>
  411f9c:	15 00 00 00 	l.nop 0x0
                InfoMessage("             TURBO");
  411fa0:	18 60 00 41 	l.movhi r3,0x41
  411fa4:	00 00 00 5d 	l.j 412118 <main+0x2ed0>
  411fa8:	a8 63 8b 77 	l.ori r3,r3,0x8b77
        }
		else
			plus=true;
        break;
    case KEY_KPMINUS :
        if (ctrl && lalt)
  411fac:	a8 42 0b 7d 	l.ori r2,r2,0xb7d
  411fb0:	8e 42 00 00 	l.lbz r18,0x0(r2)
  411fb4:	bc 12 00 00 	l.sfeqi r18,0x0
  411fb8:	10 00 00 95 	l.bf 41220c <main+0x2fc4>
  411fbc:	9c 40 00 ff 	l.addi r2,r0,0xff
  411fc0:	18 40 00 42 	l.movhi r2,0x42
  411fc4:	a8 42 0b 7c 	l.ori r2,r2,0xb7c
  411fc8:	8e 42 00 00 	l.lbz r18,0x0(r2)
  411fcc:	bc 12 00 00 	l.sfeqi r18,0x0
  411fd0:	10 00 00 8e 	l.bf 412208 <main+0x2fc0>
  411fd4:	15 00 00 00 	l.nop 0x0
        {
            config.chipset &= ~CONFIG_TURBO;
  411fd8:	18 40 00 41 	l.movhi r2,0x41
  411fdc:	a8 42 cc ac 	l.ori r2,r2,0xccac
  411fe0:	8c 62 00 27 	l.lbz r3,0x27(r2)
  411fe4:	a4 63 00 fe 	l.andi r3,r3,0xfe
  411fe8:	d8 02 18 27 	l.sb 0x27(r2),r3
            ConfigChipset(config.chipset);
  411fec:	07 ff c8 26 	l.jal 404084 <ConfigChipset>
  411ff0:	18 40 00 41 	l.movhi r2,0x41
            if (menustate == MENU_SETTINGS_CHIPSET2)
  411ff4:	a8 42 a3 89 	l.ori r2,r2,0xa389
  411ff8:	8c 42 00 00 	l.lbz r2,0x0(r2)
  411ffc:	bc 22 00 19 	l.sfnei r2,0x19
  412000:	10 00 00 09 	l.bf 412024 <main+0x2ddc>
  412004:	ac 62 00 3d 	l.xori r3,r2,0x3d
                menustate = MENU_SETTINGS_CHIPSET1;
  412008:	18 40 00 41 	l.movhi r2,0x41
  41200c:	9c e0 00 18 	l.addi r7,r0,0x18
  412010:	a8 42 a3 89 	l.ori r2,r2,0xa389
  412014:	d8 02 38 00 	l.sb 0x0(r2),r7
    up = false;
    down = false;
    left = false;
    right = false;
	plus=false;
	minus=false;
  412018:	9c 40 00 00 	l.addi r2,r0,0x0
    select = false;
    up = false;
    down = false;
    left = false;
    right = false;
	plus=false;
  41201c:	00 00 00 84 	l.j 41222c <main+0x2fe4>
  412020:	aa 42 00 00 	l.ori r18,r2,0x0
        {
            config.chipset &= ~CONFIG_TURBO;
            ConfigChipset(config.chipset);
            if (menustate == MENU_SETTINGS_CHIPSET2)
                menustate = MENU_SETTINGS_CHIPSET1;
            else if (menustate == MENU_NONE2 || menustate == MENU_INFO)
  412024:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  412028:	bd 83 00 00 	l.sfltsi r3,0x0
  41202c:	10 00 00 08 	l.bf 41204c <main+0x2e04>
  412030:	15 00 00 00 	l.nop 0x0
  412034:	ac 42 00 01 	l.xori r2,r2,0x1
  412038:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
  41203c:	b8 42 00 5f 	l.srli r2,r2,0x1f
  412040:	bc 02 00 00 	l.sfeqi r2,0x0
  412044:	10 00 00 79 	l.bf 412228 <main+0x2fe0>
  412048:	15 00 00 00 	l.nop 0x0
                InfoMessage("             NORMAL");
  41204c:	18 60 00 41 	l.movhi r3,0x41
  412050:	00 00 00 32 	l.j 412118 <main+0x2ed0>
  412054:	a8 63 8b 8a 	l.ori r3,r3,0x8b8a
        }
		else
			minus=true;
        break;
    case KEY_KP0 :
        if (ctrl && lalt)
  412058:	a8 42 0b 7d 	l.ori r2,r2,0xb7d
  41205c:	8c 42 00 00 	l.lbz r2,0x0(r2)
  412060:	bc 02 00 00 	l.sfeqi r2,0x0
  412064:	10 00 00 72 	l.bf 41222c <main+0x2fe4>
  412068:	aa 42 00 00 	l.ori r18,r2,0x0
  41206c:	18 40 00 42 	l.movhi r2,0x42
  412070:	a8 42 0b 7c 	l.ori r2,r2,0xb7c
  412074:	8c 42 00 00 	l.lbz r2,0x0(r2)
  412078:	bc 02 00 00 	l.sfeqi r2,0x0
  41207c:	10 00 00 6c 	l.bf 41222c <main+0x2fe4>
  412080:	aa 42 00 00 	l.ori r18,r2,0x0
        {
            if (menustate == MENU_NONE2 || menustate == MENU_INFO)
  412084:	18 40 00 41 	l.movhi r2,0x41
  412088:	a8 42 a3 89 	l.ori r2,r2,0xa389
  41208c:	8c 42 00 00 	l.lbz r2,0x0(r2)
  412090:	ac 62 00 3d 	l.xori r3,r2,0x3d
  412094:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  412098:	bd 83 00 00 	l.sfltsi r3,0x0
  41209c:	10 00 00 08 	l.bf 4120bc <main+0x2e74>
  4120a0:	15 00 00 00 	l.nop 0x0
  4120a4:	ac 42 00 01 	l.xori r2,r2,0x1
  4120a8:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
  4120ac:	b8 42 00 5f 	l.srli r2,r2,0x1f
  4120b0:	bc 02 00 00 	l.sfeqi r2,0x0
  4120b4:	10 00 00 5d 	l.bf 412228 <main+0x2fe0>
  4120b8:	15 00 00 00 	l.nop 0x0
            {
                config_autofire++;
  4120bc:	18 40 00 41 	l.movhi r2,0x41

void ConfigAutofire(unsigned char autofire)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
  4120c0:	a8 9e 00 20 	l.ori r4,r30,0x20
  4120c4:	a8 42 a3 90 	l.ori r2,r2,0xa390
    //SPI(OSDCMDAUTOFIRE | (autofire & 0x03));
    SPI(OSD_CMD_JOY);
  4120c8:	9c a0 00 64 	l.addi r5,r0,0x64
  4120cc:	8c 62 00 00 	l.lbz r3,0x0(r2)
  4120d0:	9c 63 00 01 	l.addi r3,r3,0x1
                config_autofire &= 3;
                ConfigAutofire(config_autofire);
                if (menustate == MENU_NONE2 || menustate == MENU_INFO)
                    InfoMessage(config_autofire_msg[config_autofire]);
  4120d4:	19 80 00 41 	l.movhi r12,0x41
        if (ctrl && lalt)
        {
            if (menustate == MENU_NONE2 || menustate == MENU_INFO)
            {
                config_autofire++;
                config_autofire &= 3;
  4120d8:	a4 63 00 03 	l.andi r3,r3,0x3
                ConfigAutofire(config_autofire);
                if (menustate == MENU_NONE2 || menustate == MENU_INFO)
                    InfoMessage(config_autofire_msg[config_autofire]);
  4120dc:	a9 8c 6f 04 	l.ori r12,r12,0x6f04
        if (ctrl && lalt)
        {
            if (menustate == MENU_NONE2 || menustate == MENU_INFO)
            {
                config_autofire++;
                config_autofire &= 3;
  4120e0:	d8 02 18 00 	l.sb 0x0(r2),r3

void ConfigAutofire(unsigned char autofire)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

    EnableOsd();
  4120e4:	9c 40 00 44 	l.addi r2,r0,0x44
  4120e8:	d4 04 10 00 	l.sw 0x0(r4),r2
    //SPI(OSDCMDAUTOFIRE | (autofire & 0x03));
    SPI(OSD_CMD_JOY);
  4120ec:	a8 5e 00 24 	l.ori r2,r30,0x24
  4120f0:	d4 02 28 00 	l.sw 0x0(r2),r5
  4120f4:	84 a2 00 00 	l.lwz r5,0x0(r2)
    SPI(autofire & 0x03);
  4120f8:	a4 a3 00 03 	l.andi r5,r3,0x3
                ConfigAutofire(config_autofire);
                if (menustate == MENU_NONE2 || menustate == MENU_INFO)
                    InfoMessage(config_autofire_msg[config_autofire]);
  4120fc:	b8 63 00 02 	l.slli r3,r3,0x2
  412100:	d4 02 28 00 	l.sw 0x0(r2),r5
  412104:	84 42 00 00 	l.lwz r2,0x0(r2)
    DisableOsd();
  412108:	9c 40 00 40 	l.addi r2,r0,0x40
  41210c:	e0 63 60 00 	l.add r3,r3,r12
  412110:	d4 04 10 00 	l.sw 0x0(r4),r2
  412114:	84 63 00 00 	l.lwz r3,0x0(r3)
  412118:	07 ff c7 4c 	l.jal 403e48 <InfoMessage>
  41211c:	9c 40 00 00 	l.addi r2,r0,0x0
  412120:	00 00 00 43 	l.j 41222c <main+0x2fe4>
  412124:	aa 42 00 00 	l.ori r18,r2,0x0
            }
        }
        break;
    case KEY_MENU :
        if (ctrl && lalt)
  412128:	a8 42 0b 7d 	l.ori r2,r2,0xb7d
  41212c:	8c 42 00 00 	l.lbz r2,0x0(r2)
  412130:	bc 02 00 00 	l.sfeqi r2,0x0
  412134:	10 00 00 43 	l.bf 412240 <main+0x2ff8>
  412138:	aa 42 00 00 	l.ori r18,r2,0x0
  41213c:	18 40 00 42 	l.movhi r2,0x42
  412140:	a8 42 0b 7c 	l.ori r2,r2,0xb7c
  412144:	8c 42 00 00 	l.lbz r2,0x0(r2)
  412148:	bc 02 00 00 	l.sfeqi r2,0x0
  41214c:	10 00 00 3c 	l.bf 41223c <main+0x2ff4>
  412150:	18 60 00 41 	l.movhi r3,0x41
		{
			OsdSetTitle("Debug",0);
			DebugMode=DebugMode^1;
  412154:	18 40 00 41 	l.movhi r2,0x41
        }
        break;
    case KEY_MENU :
        if (ctrl && lalt)
		{
			OsdSetTitle("Debug",0);
  412158:	a8 63 8b 9e 	l.ori r3,r3,0x8b9e
  41215c:	9c 80 00 00 	l.addi r4,r0,0x0
  412160:	07 ff c4 a4 	l.jal 4033f0 <OsdSetTitle>
  412164:	a8 42 a3 50 	l.ori r2,r2,0xa350
			DebugMode=DebugMode^1;
  412168:	8c 62 00 00 	l.lbz r3,0x0(r2)
  41216c:	ac 63 00 01 	l.xori r3,r3,0x1
	        menustate = MENU_NONE1;
  412170:	9d a0 00 00 	l.addi r13,r0,0x0
        break;
    case KEY_MENU :
        if (ctrl && lalt)
		{
			OsdSetTitle("Debug",0);
			DebugMode=DebugMode^1;
  412174:	d8 02 18 00 	l.sb 0x0(r2),r3
	        menustate = MENU_NONE1;
  412178:	18 40 00 41 	l.movhi r2,0x41
  41217c:	a8 42 a3 89 	l.ori r2,r2,0xa389
  412180:	03 ff ff a6 	l.j 412018 <main+0x2dd0>
  412184:	d8 02 68 00 	l.sb 0x0(r2),r13
		}
		else
	        menu = true;
        break;
    case KEY_ESC :
        if (menustate != MENU_NONE2)
  412188:	18 40 00 41 	l.movhi r2,0x41
  41218c:	a8 42 a3 89 	l.ori r2,r2,0xa389
  412190:	8c 42 00 00 	l.lbz r2,0x0(r2)
  412194:	bc 22 00 01 	l.sfnei r2,0x1
  412198:	10 00 00 29 	l.bf 41223c <main+0x2ff4>
  41219c:	9c 40 00 00 	l.addi r2,r0,0x0
  4121a0:	00 00 00 23 	l.j 41222c <main+0x2fe4>
  4121a4:	aa 42 00 00 	l.ori r18,r2,0x0
    up = false;
    down = false;
    left = false;
    right = false;
	plus=false;
	minus=false;
  4121a8:	9c 40 00 00 	l.addi r2,r0,0x0
    case KEY_ENTER :
    case KEY_SPACE :
        select = true;
        break;
    case KEY_UP :
        up = true;
  4121ac:	9f 40 00 ff 	l.addi r26,r0,0xff
    select = false;
    up = false;
    down = false;
    left = false;
    right = false;
	plus=false;
  4121b0:	aa 42 00 00 	l.ori r18,r2,0x0
    // decode and set events
    menu = false;
    select = false;
    up = false;
    down = false;
    left = false;
  4121b4:	ab 02 00 00 	l.ori r24,r2,0x0
    right = false;
  4121b8:	aa c2 00 00 	l.ori r22,r2,0x0

    // get user control codes
    c = OsdGetCtrl();

    // decode and set events
    menu = false;
  4121bc:	a9 c2 00 00 	l.ori r14,r2,0x0
    select = false;
  4121c0:	aa 02 00 00 	l.ori r16,r2,0x0
    up = false;
    down = false;
  4121c4:	00 00 00 25 	l.j 412258 <main+0x3010>
  4121c8:	aa 82 00 00 	l.ori r20,r2,0x0
        break;
    case KEY_UP :
        up = true;
        break;
    case KEY_DOWN :
        down = true;
  4121cc:	9e 80 00 ff 	l.addi r20,r0,0xff
    select = false;
    up = false;
    down = false;
    left = false;
    right = false;
	plus=false;
  4121d0:	aa 42 00 00 	l.ori r18,r2,0x0
    // decode and set events
    menu = false;
    select = false;
    up = false;
    down = false;
    left = false;
  4121d4:	ab 02 00 00 	l.ori r24,r2,0x0
    right = false;
  4121d8:	aa c2 00 00 	l.ori r22,r2,0x0

    // get user control codes
    c = OsdGetCtrl();

    // decode and set events
    menu = false;
  4121dc:	a9 c2 00 00 	l.ori r14,r2,0x0
    select = false;
  4121e0:	00 00 00 1d 	l.j 412254 <main+0x300c>
  4121e4:	aa 02 00 00 	l.ori r16,r2,0x0
        break;
    case KEY_DOWN :
        down = true;
        break;
    case KEY_LEFT :
        left = true;
  4121e8:	9f 00 00 ff 	l.addi r24,r0,0xff
    select = false;
    up = false;
    down = false;
    left = false;
    right = false;
	plus=false;
  4121ec:	00 00 00 11 	l.j 412230 <main+0x2fe8>
  4121f0:	aa 42 00 00 	l.ori r18,r2,0x0
	minus=false;
  4121f4:	9c 40 00 00 	l.addi r2,r0,0x0
        break;
    case KEY_LEFT :
        left = true;
        break;
    case KEY_RIGHT :
        right = true;
  4121f8:	9e c0 00 ff 	l.addi r22,r0,0xff
    select = false;
    up = false;
    down = false;
    left = false;
    right = false;
	plus=false;
  4121fc:	aa 42 00 00 	l.ori r18,r2,0x0
    // decode and set events
    menu = false;
    select = false;
    up = false;
    down = false;
    left = false;
  412200:	00 00 00 0d 	l.j 412234 <main+0x2fec>
  412204:	ab 02 00 00 	l.ori r24,r2,0x0
                menustate = MENU_SETTINGS_CHIPSET1;
            else if (menustate == MENU_NONE2 || menustate == MENU_INFO)
                InfoMessage("             NORMAL");
        }
		else
			minus=true;
  412208:	9c 40 00 ff 	l.addi r2,r0,0xff
    // decode and set events
    menu = false;
    select = false;
    up = false;
    down = false;
    left = false;
  41220c:	ab 12 00 00 	l.ori r24,r18,0x0
    right = false;
  412210:	aa d2 00 00 	l.ori r22,r18,0x0

    // get user control codes
    c = OsdGetCtrl();

    // decode and set events
    menu = false;
  412214:	a9 d2 00 00 	l.ori r14,r18,0x0
    select = false;
  412218:	aa 12 00 00 	l.ori r16,r18,0x0
    up = false;
    down = false;
  41221c:	aa 92 00 00 	l.ori r20,r18,0x0
    c = OsdGetCtrl();

    // decode and set events
    menu = false;
    select = false;
    up = false;
  412220:	00 00 00 0e 	l.j 412258 <main+0x3010>
  412224:	ab 52 00 00 	l.ori r26,r18,0x0
    down = false;
    left = false;
    right = false;
	plus=false;
  412228:	aa 42 00 00 	l.ori r18,r2,0x0
    // decode and set events
    menu = false;
    select = false;
    up = false;
    down = false;
    left = false;
  41222c:	ab 02 00 00 	l.ori r24,r2,0x0
    right = false;
  412230:	aa c2 00 00 	l.ori r22,r2,0x0

    // get user control codes
    c = OsdGetCtrl();

    // decode and set events
    menu = false;
  412234:	00 00 00 06 	l.j 41224c <main+0x3004>
  412238:	a9 c2 00 00 	l.ori r14,r2,0x0
    select = false;
    up = false;
    down = false;
    left = false;
    right = false;
	plus=false;
  41223c:	aa 42 00 00 	l.ori r18,r2,0x0
    // decode and set events
    menu = false;
    select = false;
    up = false;
    down = false;
    left = false;
  412240:	ab 02 00 00 	l.ori r24,r2,0x0
    right = false;
  412244:	aa c2 00 00 	l.ori r22,r2,0x0
		else
	        menu = true;
        break;
    case KEY_ESC :
        if (menustate != MENU_NONE2)
            menu = true;
  412248:	9d c0 00 ff 	l.addi r14,r0,0xff
    // get user control codes
    c = OsdGetCtrl();

    // decode and set events
    menu = false;
    select = false;
  41224c:	aa 02 00 00 	l.ori r16,r2,0x0
    up = false;
    down = false;
  412250:	aa 82 00 00 	l.ori r20,r2,0x0
    c = OsdGetCtrl();

    // decode and set events
    menu = false;
    select = false;
    up = false;
  412254:	ab 42 00 00 	l.ori r26,r2,0x0
    case KEY_RIGHT :
        right = true;
        break;
    }

	if(menu || select || up || down || left || right )
  412258:	e0 70 70 04 	l.or r3,r16,r14
  41225c:	d4 01 18 0c 	l.sw 0xc(r1),r3
  412260:	e0 74 d0 04 	l.or r3,r20,r26
  412264:	84 81 00 0c 	l.lwz r4,0xc(r1)
  412268:	e0 78 18 04 	l.or r3,r24,r3
  41226c:	e0 76 18 04 	l.or r3,r22,r3
  412270:	e0 64 18 04 	l.or r3,r4,r3
  412274:	bc 03 00 00 	l.sfeqi r3,0x0
  412278:	10 00 00 25 	l.bf 41230c <main+0x30c4>
  41227c:	18 60 00 42 	l.movhi r3,0x42
	{
		if(helpstate)
  412280:	18 60 00 42 	l.movhi r3,0x42
  412284:	a8 63 0b 70 	l.ori r3,r3,0xb70
  412288:	90 63 00 00 	l.lbs r3,0x0(r3)
  41228c:	bc 03 00 00 	l.sfeqi r3,0x0
  412290:	10 00 00 15 	l.bf 4122e4 <main+0x309c>
  412294:	9c 80 00 01 	l.addi r4,r0,0x1
			OsdWrite(7,STD_EXIT,(menumask-((1<<(menusub+1))-1))<=0,0); // Redraw the Exit line...
  412298:	18 60 00 41 	l.movhi r3,0x41
  41229c:	a8 63 a3 8a 	l.ori r3,r3,0xa38a
  4122a0:	9c c0 00 00 	l.addi r6,r0,0x0
  4122a4:	8c 63 00 00 	l.lbz r3,0x0(r3)
  4122a8:	9c 63 00 01 	l.addi r3,r3,0x1
  4122ac:	e0 64 18 08 	l.sll r3,r4,r3
  4122b0:	18 80 00 41 	l.movhi r4,0x41
  4122b4:	a8 84 a3 8c 	l.ori r4,r4,0xa38c
  4122b8:	84 84 00 00 	l.lwz r4,0x0(r4)
  4122bc:	e0 64 18 02 	l.sub r3,r4,r3
  4122c0:	18 80 00 41 	l.movhi r4,0x41
  4122c4:	ac 63 ff ff 	l.xori r3,r3,0xffffffff
  4122c8:	a8 84 8b a4 	l.ori r4,r4,0x8ba4
  4122cc:	e0 a0 18 02 	l.sub r5,r0,r3
  4122d0:	e0 65 18 04 	l.or r3,r5,r3
  4122d4:	ac a3 ff ff 	l.xori r5,r3,0xffffffff
  4122d8:	9c 60 00 07 	l.addi r3,r0,0x7
  4122dc:	07 ff c6 c5 	l.jal 403df0 <OsdWrite>
  4122e0:	b8 a5 00 5f 	l.srli r5,r5,0x1f
		helpstate=0;
  4122e4:	18 60 00 42 	l.movhi r3,0x42
  4122e8:	9c a0 00 00 	l.addi r5,r0,0x0
  4122ec:	a8 63 0b 70 	l.ori r3,r3,0xb70
  4122f0:	d8 03 28 00 	l.sb 0x0(r3),r5
		helptext_timer=GetTimer(HELPTEXT_DELAY);
  4122f4:	07 ff bb 0d 	l.jal 400f28 <GetTimer>
  4122f8:	9c 60 27 10 	l.addi r3,r0,0x2710
  4122fc:	18 60 00 42 	l.movhi r3,0x42
  412300:	a8 63 0b 78 	l.ori r3,r3,0xb78
  412304:	d4 03 58 00 	l.sw 0x0(r3),r11
	}

	if(helptext)
  412308:	18 60 00 42 	l.movhi r3,0x42
  41230c:	a8 63 0b 74 	l.ori r3,r3,0xb74
  412310:	84 83 00 00 	l.lwz r4,0x0(r3)
  412314:	bc 04 00 00 	l.sfeqi r4,0x0
  412318:	10 00 00 2f 	l.bf 4123d4 <main+0x318c>
  41231c:	18 c0 00 42 	l.movhi r6,0x42
	{
		if(helpstate<9)
  412320:	a8 c6 0b 70 	l.ori r6,r6,0xb70
  412324:	90 c6 00 00 	l.lbs r6,0x0(r6)
  412328:	bd 46 00 08 	l.sfgtsi r6,0x8
  41232c:	10 00 00 1b 	l.bf 412398 <main+0x3150>
  412330:	d4 01 30 08 	l.sw 0x8(r1),r6
		{
			if(CheckTimer(helptext_timer))
  412334:	18 e0 00 42 	l.movhi r7,0x42
  412338:	a8 e7 0b 78 	l.ori r7,r7,0xb78
  41233c:	07 ff bb 01 	l.jal 400f40 <CheckTimer>
  412340:	84 67 00 00 	l.lwz r3,0x0(r7)
  412344:	bc 0b 00 00 	l.sfeqi r11,0x0
  412348:	10 00 00 24 	l.bf 4123d8 <main+0x3190>
  41234c:	18 60 00 41 	l.movhi r3,0x41
			{
				helptext_timer=GetTimer(FRAME_DELAY);
  412350:	07 ff ba f6 	l.jal 400f28 <GetTimer>
  412354:	9c 60 00 fa 	l.addi r3,r0,0xfa
  412358:	19 80 00 42 	l.movhi r12,0x42
				OsdWriteOffset(7,STD_EXIT,0,0,helpstate);
  41235c:	9c a0 00 00 	l.addi r5,r0,0x0
	{
		if(helpstate<9)
		{
			if(CheckTimer(helptext_timer))
			{
				helptext_timer=GetTimer(FRAME_DELAY);
  412360:	a9 8c 0b 78 	l.ori r12,r12,0xb78
				OsdWriteOffset(7,STD_EXIT,0,0,helpstate);
  412364:	18 80 00 41 	l.movhi r4,0x41
  412368:	9c 60 00 07 	l.addi r3,r0,0x7
  41236c:	a8 84 8b a4 	l.ori r4,r4,0x8ba4
	{
		if(helpstate<9)
		{
			if(CheckTimer(helptext_timer))
			{
				helptext_timer=GetTimer(FRAME_DELAY);
  412370:	d4 0c 58 00 	l.sw 0x0(r12),r11
				OsdWriteOffset(7,STD_EXIT,0,0,helpstate);
  412374:	a8 c5 00 00 	l.ori r6,r5,0x0
  412378:	07 ff c4 a1 	l.jal 4035fc <OsdWriteOffset>
  41237c:	84 e1 00 08 	l.lwz r7,0x8(r1)
				++helpstate;
  412380:	85 a1 00 08 	l.lwz r13,0x8(r1)
  412384:	18 80 00 42 	l.movhi r4,0x42
  412388:	9c 6d 00 01 	l.addi r3,r13,0x1
  41238c:	a8 84 0b 70 	l.ori r4,r4,0xb70
  412390:	00 00 00 11 	l.j 4123d4 <main+0x318c>
  412394:	d8 04 18 00 	l.sb 0x0(r4),r3
			}
		}
		else if(helpstate==9)
  412398:	84 a1 00 08 	l.lwz r5,0x8(r1)
  41239c:	bc 25 00 09 	l.sfnei r5,0x9
  4123a0:	10 00 00 09 	l.bf 4123c4 <main+0x317c>
  4123a4:	9c a0 00 00 	l.addi r5,r0,0x0
		{
			ScrollReset();
  4123a8:	07 ff c7 c5 	l.jal 4042bc <ScrollReset>
  4123ac:	15 00 00 00 	l.nop 0x0
			++helpstate;
  4123b0:	18 c0 00 42 	l.movhi r6,0x42
  4123b4:	9c e0 00 0a 	l.addi r7,r0,0xa
  4123b8:	a8 c6 0b 70 	l.ori r6,r6,0xb70
  4123bc:	00 00 00 06 	l.j 4123d4 <main+0x318c>
  4123c0:	d8 06 38 00 	l.sb 0x0(r6),r7
		}
		else
			ScrollText(7,helptext,0,0,0);
  4123c4:	9c 60 00 07 	l.addi r3,r0,0x7
  4123c8:	a8 c5 00 00 	l.ori r6,r5,0x0
  4123cc:	07 ff f2 9e 	l.jal 40ee44 <ScrollText>
  4123d0:	a8 e5 00 00 	l.ori r7,r5,0x0

	// Standardised menu up/down.
	// The screen should set menumask, bit 0 to make the top line selectable, bit 1 for the 2nd line, etc.
	// (Lines in this context don't have to correspond to rows on the OSD.)
	// Also set parentstate to the appropriate menustate.
	if(menumask)
  4123d4:	18 60 00 41 	l.movhi r3,0x41
  4123d8:	a8 63 a3 8c 	l.ori r3,r3,0xa38c
  4123dc:	84 83 00 00 	l.lwz r4,0x0(r3)
  4123e0:	bc 04 00 00 	l.sfeqi r4,0x0
  4123e4:	10 00 00 45 	l.bf 4124f8 <main+0x32b0>
  4123e8:	18 60 00 41 	l.movhi r3,0x41
	{
        if ((unsigned)down && ((unsigned)menumask>=(unsigned)(1<<(menusub+1))))	// Any active entries left?
  4123ec:	bc 14 00 00 	l.sfeqi r20,0x0
  4123f0:	10 00 00 1e 	l.bf 412468 <main+0x3220>
  4123f4:	bc 1a 00 00 	l.sfeqi r26,0x0
  4123f8:	18 60 00 41 	l.movhi r3,0x41
  4123fc:	a8 63 a3 8a 	l.ori r3,r3,0xa38a
  412400:	8c 63 00 00 	l.lbz r3,0x0(r3)
  412404:	9c 63 00 01 	l.addi r3,r3,0x1
  412408:	e0 a4 18 48 	l.srl r5,r4,r3
  41240c:	bc 05 00 00 	l.sfeqi r5,0x0
  412410:	10 00 00 16 	l.bf 412468 <main+0x3220>
  412414:	bc 1a 00 00 	l.sfeqi r26,0x0
  412418:	a4 63 00 ff 	l.andi r3,r3,0xff
		{
			do
				menusub++;
			while((menumask & (1<<menusub)) == 0);
  41241c:	00 00 00 03 	l.j 412428 <main+0x31e0>
  412420:	9c a0 00 01 	l.addi r5,r0,0x1
  412424:	a8 67 00 00 	l.ori r3,r7,0x0
  412428:	e0 c5 18 08 	l.sll r6,r5,r3
	// The screen should set menumask, bit 0 to make the top line selectable, bit 1 for the 2nd line, etc.
	// (Lines in this context don't have to correspond to rows on the OSD.)
	// Also set parentstate to the appropriate menustate.
	if(menumask)
	{
        if ((unsigned)down && ((unsigned)menumask>=(unsigned)(1<<(menusub+1))))	// Any active entries left?
  41242c:	9c e3 00 01 	l.addi r7,r3,0x1
		{
			do
				menusub++;
			while((menumask & (1<<menusub)) == 0);
  412430:	e0 c6 20 03 	l.and r6,r6,r4
  412434:	bc 06 00 00 	l.sfeqi r6,0x0
  412438:	13 ff ff fb 	l.bf 412424 <main+0x31dc>
  41243c:	a4 e7 00 ff 	l.andi r7,r7,0xff
  412440:	18 80 00 41 	l.movhi r4,0x41
  412444:	a8 84 a3 8a 	l.ori r4,r4,0xa38a
  412448:	d8 04 18 00 	l.sb 0x0(r4),r3
            menustate = parentstate;
  41244c:	18 80 00 41 	l.movhi r4,0x41
  412450:	18 60 00 41 	l.movhi r3,0x41
  412454:	a8 84 fd 24 	l.ori r4,r4,0xfd24
  412458:	a8 63 a3 89 	l.ori r3,r3,0xa389
  41245c:	8c 84 00 00 	l.lbz r4,0x0(r4)
  412460:	d8 03 20 00 	l.sb 0x0(r3),r4
        }

        if (up && menusub > 0 && (menumask<<(8-menusub)))
  412464:	bc 1a 00 00 	l.sfeqi r26,0x0
  412468:	10 00 00 24 	l.bf 4124f8 <main+0x32b0>
  41246c:	18 60 00 41 	l.movhi r3,0x41
  412470:	18 60 00 41 	l.movhi r3,0x41
  412474:	a8 63 a3 8a 	l.ori r3,r3,0xa38a
  412478:	8c 63 00 00 	l.lbz r3,0x0(r3)
  41247c:	bc 03 00 00 	l.sfeqi r3,0x0
  412480:	10 00 00 1d 	l.bf 4124f4 <main+0x32ac>
  412484:	18 80 00 41 	l.movhi r4,0x41
  412488:	9c a0 00 08 	l.addi r5,r0,0x8
  41248c:	a8 84 a3 8c 	l.ori r4,r4,0xa38c
  412490:	e0 a5 18 02 	l.sub r5,r5,r3
  412494:	84 84 00 00 	l.lwz r4,0x0(r4)
  412498:	e0 a4 28 08 	l.sll r5,r4,r5
  41249c:	bc 05 00 00 	l.sfeqi r5,0x0
  4124a0:	10 00 00 15 	l.bf 4124f4 <main+0x32ac>
  4124a4:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
        {
			do
				--menusub;
			while((menumask & (1<<menusub)) == 0);
  4124a8:	9c a0 00 01 	l.addi r5,r0,0x1
				menusub++;
			while((menumask & (1<<menusub)) == 0);
            menustate = parentstate;
        }

        if (up && menusub > 0 && (menumask<<(8-menusub)))
  4124ac:	00 00 00 03 	l.j 4124b8 <main+0x3270>
  4124b0:	a4 63 00 ff 	l.andi r3,r3,0xff
        {
			do
				--menusub;
			while((menumask & (1<<menusub)) == 0);
  4124b4:	a8 67 00 00 	l.ori r3,r7,0x0
  4124b8:	e0 c5 18 08 	l.sll r6,r5,r3
				menusub++;
			while((menumask & (1<<menusub)) == 0);
            menustate = parentstate;
        }

        if (up && menusub > 0 && (menumask<<(8-menusub)))
  4124bc:	9c e3 ff ff 	l.addi r7,r3,0xffffffff
        {
			do
				--menusub;
			while((menumask & (1<<menusub)) == 0);
  4124c0:	e0 c6 20 03 	l.and r6,r6,r4
  4124c4:	bc 06 00 00 	l.sfeqi r6,0x0
  4124c8:	13 ff ff fb 	l.bf 4124b4 <main+0x326c>
  4124cc:	a4 e7 00 ff 	l.andi r7,r7,0xff
  4124d0:	18 80 00 41 	l.movhi r4,0x41
  4124d4:	a8 84 a3 8a 	l.ori r4,r4,0xa38a
  4124d8:	d8 04 18 00 	l.sb 0x0(r4),r3
            menustate = parentstate;
  4124dc:	18 80 00 41 	l.movhi r4,0x41
  4124e0:	18 60 00 41 	l.movhi r3,0x41
  4124e4:	a8 84 fd 24 	l.ori r4,r4,0xfd24
  4124e8:	a8 63 a3 89 	l.ori r3,r3,0xa389
  4124ec:	8c 84 00 00 	l.lbz r4,0x0(r4)
  4124f0:	d8 03 20 00 	l.sb 0x0(r3),r4
        }
	}


    switch (menustate)
  4124f4:	18 60 00 41 	l.movhi r3,0x41
  4124f8:	a8 63 a3 89 	l.ori r3,r3,0xa389
  4124fc:	8c 63 00 00 	l.lbz r3,0x0(r3)
  412500:	bc 43 00 3d 	l.sfgtui r3,0x3d
  412504:	10 00 11 f5 	l.bf 416cd8 <main+0x7a90>
  412508:	19 80 00 41 	l.movhi r12,0x41
  41250c:	b8 63 00 02 	l.slli r3,r3,0x2
  412510:	a9 8c 6d 74 	l.ori r12,r12,0x6d74
  412514:	e0 63 60 00 	l.add r3,r3,r12
  412518:	84 63 00 00 	l.lwz r3,0x0(r3)
  41251c:	44 00 18 00 	l.jr r3
  412520:	15 00 00 00 	l.nop 0x0
    {
        /******************************************************************/
        /* no menu selected                                               */
        /******************************************************************/
    case MENU_NONE1 :
		helptext=helptexts[HELPTEXT_NONE];
  412524:	18 40 00 42 	l.movhi r2,0x42
  412528:	9d a0 00 00 	l.addi r13,r0,0x0
  41252c:	a8 42 0b 74 	l.ori r2,r2,0xb74
  412530:	d4 02 68 00 	l.sw 0x0(r2),r13
		menumask=0;
  412534:	18 40 00 41 	l.movhi r2,0x41
  412538:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
  41253c:	d4 02 68 00 	l.sw 0x0(r2),r13
		if(DebugMode)
  412540:	18 40 00 41 	l.movhi r2,0x41
  412544:	a8 42 a3 50 	l.ori r2,r2,0xa350
  412548:	90 42 00 00 	l.lbs r2,0x0(r2)
  41254c:	e4 02 68 00 	l.sfeq r2,r13
  412550:	10 00 00 06 	l.bf 412568 <main+0x3320>
  412554:	15 00 00 00 	l.nop 0x0
		{
			helptext=helptexts[HELPTEXT_NONE];
			OsdEnable(0);
  412558:	07 ff c6 2c 	l.jal 403e08 <OsdEnable>
  41255c:	a8 6d 00 00 	l.ori r3,r13,0x0
		}
		else
	        OsdDisable();
        menustate = MENU_NONE2;
  412560:	00 00 00 04 	l.j 412570 <main+0x3328>
  412564:	18 40 00 41 	l.movhi r2,0x41
		{
			helptext=helptexts[HELPTEXT_NONE];
			OsdEnable(0);
		}
		else
	        OsdDisable();
  412568:	07 ff c6 83 	l.jal 403f74 <OsdDisable>
  41256c:	18 40 00 41 	l.movhi r2,0x41
        menustate = MENU_NONE2;
  412570:	9c 60 00 01 	l.addi r3,r0,0x1
  412574:	a8 42 a3 89 	l.ori r2,r2,0xa389
  412578:	00 00 11 d8 	l.j 416cd8 <main+0x7a90>
  41257c:	d8 02 18 00 	l.sb 0x0(r2),r3
        break;

    case MENU_NONE2 :
		if(DebugMode)
  412580:	18 40 00 41 	l.movhi r2,0x41
  412584:	a8 42 a3 50 	l.ori r2,r2,0xa350
  412588:	90 42 00 00 	l.lbs r2,0x0(r2)
  41258c:	bc 02 00 00 	l.sfeqi r2,0x0
  412590:	10 00 00 1a 	l.bf 4125f8 <main+0x33b0>
  412594:	bc 0e 00 00 	l.sfeqi r14,0x0
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L2);

	int i;
	for(i=0;i<8;++i)
	{
		int j=(debugptr+i)&7;
  412598:	1a 00 00 42 	l.movhi r16,0x42
	        OsdDisable();
        menustate = MENU_NONE2;
        break;

    case MENU_NONE2 :
		if(DebugMode)
  41259c:	9c 40 00 00 	l.addi r2,r0,0x0
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L2);

	int i;
	for(i=0;i<8;++i)
	{
		int j=(debugptr+i)&7;
  4125a0:	aa 10 0a 64 	l.ori r16,r16,0xa64
  4125a4:	90 90 00 00 	l.lbs r4,0x0(r16)
  4125a8:	e0 82 20 00 	l.add r4,r2,r4
		debuglines[j*32+31]=0;
  4125ac:	18 a0 00 42 	l.movhi r5,0x42
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L2);

	int i;
	for(i=0;i<8;++i)
	{
		int j=(debugptr+i)&7;
  4125b0:	a4 84 00 07 	l.andi r4,r4,0x7
		debuglines[j*32+31]=0;
		OsdWrite(i,&debuglines[j*32],i==7,0);
  4125b4:	ac 62 00 07 	l.xori r3,r2,0x7

	int i;
	for(i=0;i<8;++i)
	{
		int j=(debugptr+i)&7;
		debuglines[j*32+31]=0;
  4125b8:	b8 84 00 05 	l.slli r4,r4,0x5
  4125bc:	a8 a5 0a 68 	l.ori r5,r5,0xa68
  4125c0:	9c c0 00 00 	l.addi r6,r0,0x0
  4125c4:	e0 84 28 00 	l.add r4,r4,r5
		OsdWrite(i,&debuglines[j*32],i==7,0);
  4125c8:	e0 a0 18 02 	l.sub r5,r0,r3

	int i;
	for(i=0;i<8;++i)
	{
		int j=(debugptr+i)&7;
		debuglines[j*32+31]=0;
  4125cc:	d8 04 30 1f 	l.sb 0x1f(r4),r6
		OsdWrite(i,&debuglines[j*32],i==7,0);
  4125d0:	e0 65 18 04 	l.or r3,r5,r3
  4125d4:	9c c0 00 00 	l.addi r6,r0,0x0
  4125d8:	ac a3 ff ff 	l.xori r5,r3,0xffffffff
  4125dc:	a8 62 00 00 	l.ori r3,r2,0x0
  4125e0:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  4125e4:	07 ff c6 03 	l.jal 403df0 <OsdWrite>
  4125e8:	9c 42 00 01 	l.addi r2,r2,0x1
void _showdebugmessages()
{
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L2);

	int i;
	for(i=0;i<8;++i)
  4125ec:	bc 22 00 08 	l.sfnei r2,0x8
  4125f0:	13 ff ff ed 	l.bf 4125a4 <main+0x335c>
  4125f4:	bc 0e 00 00 	l.sfeqi r14,0x0
        break;

    case MENU_NONE2 :
		if(DebugMode)
			_showdebugmessages();
        if (menu)
  4125f8:	10 00 11 b8 	l.bf 416cd8 <main+0x7a90>
  4125fc:	9c e0 00 02 	l.addi r7,r0,0x2
        {
            menustate = MENU_MAIN1;
  412600:	18 40 00 41 	l.movhi r2,0x41
  412604:	a8 42 a3 89 	l.ori r2,r2,0xa389
            menusub = 0;
  412608:	9d 80 00 00 	l.addi r12,r0,0x0
    case MENU_NONE2 :
		if(DebugMode)
			_showdebugmessages();
        if (menu)
        {
            menustate = MENU_MAIN1;
  41260c:	d8 02 38 00 	l.sb 0x0(r2),r7
            menusub = 0;
  412610:	18 40 00 41 	l.movhi r2,0x41
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    unsigned short n;

    // select OSD SPI device
    EnableOsd();
  412614:	9c 60 00 44 	l.addi r3,r0,0x44
  412618:	a8 42 a3 8a 	l.ori r2,r2,0xa38a

    // select buffer to write to
    //SPI(OSDCMDWRITE | 0x18);
    SPI(OSD_CMD_OSD_WR);
    SPI(0x00); SPI(0x00); SPI(0x00); SPI(0x18);
  41261c:	9d a0 00 00 	l.addi r13,r0,0x0
  412620:	d8 02 60 00 	l.sb 0x0(r2),r12
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    unsigned short n;

    // select OSD SPI device
    EnableOsd();
  412624:	a8 5e 00 20 	l.ori r2,r30,0x20
  412628:	d4 02 18 00 	l.sw 0x0(r2),r3

    // select buffer to write to
    //SPI(OSDCMDWRITE | 0x18);
    SPI(OSD_CMD_OSD_WR);
  41262c:	a8 5e 00 24 	l.ori r2,r30,0x24
  412630:	9c 60 00 0c 	l.addi r3,r0,0xc
  412634:	d4 02 18 00 	l.sw 0x0(r2),r3
  412638:	84 62 00 00 	l.lwz r3,0x0(r2)
    SPI(0x00); SPI(0x00); SPI(0x00); SPI(0x18);
  41263c:	d4 02 68 00 	l.sw 0x0(r2),r13
  412640:	84 62 00 00 	l.lwz r3,0x0(r2)
  412644:	d4 02 68 00 	l.sw 0x0(r2),r13
  412648:	84 62 00 00 	l.lwz r3,0x0(r2)
  41264c:	d4 02 68 00 	l.sw 0x0(r2),r13
  412650:	84 62 00 00 	l.lwz r3,0x0(r2)
  412654:	9c 60 00 18 	l.addi r3,r0,0x18
  412658:	d4 02 18 00 	l.sw 0x0(r2),r3
  41265c:	84 62 00 00 	l.lwz r3,0x0(r2)

    // clear buffer
    for (n = 0; n < (OSDLINELEN * OSDNLINE); n++)
  412660:	a8 6d 00 00 	l.ori r3,r13,0x0
        SPI(0x00);
  412664:	9c 80 00 00 	l.addi r4,r0,0x0
    //SPI(OSDCMDWRITE | 0x18);
    SPI(OSD_CMD_OSD_WR);
    SPI(0x00); SPI(0x00); SPI(0x00); SPI(0x18);

    // clear buffer
    for (n = 0; n < (OSDLINELEN * OSDNLINE); n++)
  412668:	9c 63 00 01 	l.addi r3,r3,0x1
        SPI(0x00);
  41266c:	d4 02 20 00 	l.sw 0x0(r2),r4
    //SPI(OSDCMDWRITE | 0x18);
    SPI(OSD_CMD_OSD_WR);
    SPI(0x00); SPI(0x00); SPI(0x00); SPI(0x18);

    // clear buffer
    for (n = 0; n < (OSDLINELEN * OSDNLINE); n++)
  412670:	a4 63 ff ff 	l.andi r3,r3,0xffff
        SPI(0x00);
  412674:	84 82 00 00 	l.lwz r4,0x0(r2)
    //SPI(OSDCMDWRITE | 0x18);
    SPI(OSD_CMD_OSD_WR);
    SPI(0x00); SPI(0x00); SPI(0x00); SPI(0x18);

    // clear buffer
    for (n = 0; n < (OSDLINELEN * OSDNLINE); n++)
  412678:	bc 23 08 00 	l.sfnei r3,0x800
  41267c:	13 ff ff fb 	l.bf 412668 <main+0x3420>
  412680:	9c 80 00 00 	l.addi r4,r0,0x0
        SPI(0x00);

    // deselect OSD SPI device
    DisableOsd();
  412684:	18 a0 00 80 	l.movhi r5,0x80
  412688:	9c 40 00 40 	l.addi r2,r0,0x40
  41268c:	a8 a5 00 20 	l.ori r5,r5,0x20
            OsdClear();
            OsdEnable(DISABLE_KEYBOARD);
  412690:	9c 60 00 02 	l.addi r3,r0,0x2
  412694:	d4 05 10 00 	l.sw 0x0(r5),r2
  412698:	07 ff c5 dc 	l.jal 403e08 <OsdEnable>
  41269c:	15 00 00 00 	l.nop 0x0
  4126a0:	00 00 11 8e 	l.j 416cd8 <main+0x7a90>
  4126a4:	15 00 00 00 	l.nop 0x0

        /******************************************************************/
        /* main menu                                                      */
        /******************************************************************/
    case MENU_MAIN1 :
		menumask=0x70;	// b01110000 Floppy turbo, Harddisk options & Exit.
  4126a8:	1a c0 00 41 	l.movhi r22,0x41
  4126ac:	9c 40 00 70 	l.addi r2,r0,0x70
  4126b0:	aa d6 a3 8c 	l.ori r22,r22,0xa38c
		OsdSetTitle("UnAmiga",OSD_ARROW_RIGHT);
  4126b4:	18 60 00 41 	l.movhi r3,0x41

        /******************************************************************/
        /* main menu                                                      */
        /******************************************************************/
    case MENU_MAIN1 :
		menumask=0x70;	// b01110000 Floppy turbo, Harddisk options & Exit.
  4126b8:	d4 16 10 00 	l.sw 0x0(r22),r2
		OsdSetTitle("UnAmiga",OSD_ARROW_RIGHT);
  4126bc:	a8 63 8e d6 	l.ori r3,r3,0x8ed6
  4126c0:	9c 80 00 02 	l.addi r4,r0,0x2
  4126c4:	07 ff c3 4b 	l.jal 4033f0 <OsdSetTitle>
  4126c8:	18 40 00 42 	l.movhi r2,0x42
		helptext=helptexts[HELPTEXT_MAIN];
  4126cc:	18 60 00 41 	l.movhi r3,0x41
  4126d0:	a8 42 0b 74 	l.ori r2,r2,0xb74
  4126d4:	a8 63 8b b6 	l.ori r3,r3,0x8bb6
  4126d8:	1a 00 00 41 	l.movhi r16,0x41
		// We display a line for each drive that's active
		// in the config file, but grey out any that the FPGA doesn't think are active.
		// We also print a help text in place of the last drive if it's inactive.
        for (i = 0; i < 4; i++)
        {
			if(i==config.floppy.drives+1)
  4126dc:	1a 40 00 41 	l.movhi r18,0x41
				{
					strcat(s,"* activar tras el reset *");
				}
				else
					strcpy(s,"");
		        OsdWrite(i, s, menusub == i,(i>drives)||(i>config.floppy.drives));
  4126e0:	1b 80 00 41 	l.movhi r28,0x41
        /* main menu                                                      */
        /******************************************************************/
    case MENU_MAIN1 :
		menumask=0x70;	// b01110000 Floppy turbo, Harddisk options & Exit.
		OsdSetTitle("UnAmiga",OSD_ARROW_RIGHT);
		helptext=helptexts[HELPTEXT_MAIN];
  4126e4:	d4 02 18 00 	l.sw 0x0(r2),r3
  4126e8:	aa 10 f1 08 	l.ori r16,r16,0xf108
  4126ec:	9e 80 00 30 	l.addi r20,r0,0x30
  4126f0:	9c 40 00 00 	l.addi r2,r0,0x0
		// We display a line for each drive that's active
		// in the config file, but grey out any that the FPGA doesn't think are active.
		// We also print a help text in place of the last drive if it's inactive.
        for (i = 0; i < 4; i++)
        {
			if(i==config.floppy.drives+1)
  4126f4:	aa 52 cc ac 	l.ori r18,r18,0xccac
				{
					strcat(s,"* activar tras el reset *");
				}
				else
					strcpy(s,"");
		        OsdWrite(i, s, menusub == i,(i>drives)||(i>config.floppy.drives));
  4126f8:	ab 9c a3 8a 	l.ori r28,r28,0xa38a
  4126fc:	9f 40 00 01 	l.addi r26,r0,0x1
		// We display a line for each drive that's active
		// in the config file, but grey out any that the FPGA doesn't think are active.
		// We also print a help text in place of the last drive if it's inactive.
        for (i = 0; i < 4; i++)
        {
			if(i==config.floppy.drives+1)
  412700:	8c 72 00 29 	l.lbz r3,0x29(r18)
  412704:	9c 63 00 01 	l.addi r3,r3,0x1
  412708:	e4 22 18 00 	l.sfne r2,r3
  41270c:	10 00 00 08 	l.bf 41272c <main+0x34e4>
  412710:	a5 c2 00 ff 	l.andi r14,r2,0xff
				OsdWrite(i," PT +/- Para agregar/quitar unidad",0,1);
  412714:	18 80 00 41 	l.movhi r4,0x41
  412718:	a8 62 00 00 	l.ori r3,r2,0x0
  41271c:	a8 84 8c f7 	l.ori r4,r4,0x8cf7
  412720:	9c a0 00 00 	l.addi r5,r0,0x0
  412724:	00 00 00 51 	l.j 412868 <main+0x3620>
  412728:	9c c0 00 01 	l.addi r6,r0,0x1
			else
			{
		        strcpy(s, " dfx: ");
  41272c:	18 60 00 41 	l.movhi r3,0x41
  412730:	18 80 00 41 	l.movhi r4,0x41
  412734:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  412738:	07 ff b6 e5 	l.jal 4002cc <strcpy>
  41273c:	a8 84 8d 1a 	l.ori r4,r4,0x8d1a
		        s[3] = i + '0';
				if(i<=drives)
  412740:	19 80 00 41 	l.movhi r12,0x41
			if(i==config.floppy.drives+1)
				OsdWrite(i," PT +/- Para agregar/quitar unidad",0,1);
			else
			{
		        strcpy(s, " dfx: ");
		        s[3] = i + '0';
  412744:	18 e0 00 41 	l.movhi r7,0x41
				if(i<=drives)
  412748:	a9 8c a3 5c 	l.ori r12,r12,0xa35c
			if(i==config.floppy.drives+1)
				OsdWrite(i," PT +/- Para agregar/quitar unidad",0,1);
			else
			{
		        strcpy(s, " dfx: ");
		        s[3] = i + '0';
  41274c:	a8 e7 cd 18 	l.ori r7,r7,0xcd18
				if(i<=drives)
  412750:	8f 0c 00 00 	l.lbz r24,0x0(r12)
  412754:	e4 4e c0 00 	l.sfgtu r14,r24
  412758:	10 00 00 26 	l.bf 4127f0 <main+0x35a8>
  41275c:	d8 07 a0 03 	l.sb 0x3(r7),r20
				{
					menumask|=(1<<i);	// Make enabled drives selectable
  412760:	e0 7a 10 08 	l.sll r3,r26,r2
  412764:	84 96 00 00 	l.lwz r4,0x0(r22)
  412768:	e0 63 20 04 	l.or r3,r3,r4
  41276c:	d4 16 18 00 	l.sw 0x0(r22),r3

				    if (df[i].status & DSK_INSERTED) // floppy disk is inserted
  412770:	8c 70 00 00 	l.lbz r3,0x0(r16)
  412774:	a4 63 00 01 	l.andi r3,r3,0x1
  412778:	bc 03 00 00 	l.sfeqi r3,0x0
  41277c:	10 00 00 1b 	l.bf 4127e8 <main+0x35a0>
  412780:	18 60 00 41 	l.movhi r3,0x41
				    {
				        strncpy(&s[6], df[i].name, sizeof(df[0].name));
  412784:	a8 62 00 00 	l.ori r3,r2,0x0
  412788:	07 ff b6 38 	l.jal 400068 <__mulsi3>
  41278c:	9c 80 02 bc 	l.addi r4,r0,0x2bc
  412790:	19 a0 00 41 	l.movhi r13,0x41
  412794:	18 60 00 41 	l.movhi r3,0x41
  412798:	a9 ad f3 ab 	l.ori r13,r13,0xf3ab
  41279c:	a8 63 cd 1e 	l.ori r3,r3,0xcd1e
  4127a0:	e0 8b 68 00 	l.add r4,r11,r13
  4127a4:	07 ff b6 f2 	l.jal 40036c <strncpy>
  4127a8:	9c a0 00 16 	l.addi r5,r0,0x16
						if(!(df[i].status & DSK_WRITABLE))
  4127ac:	8c 70 00 00 	l.lbz r3,0x0(r16)
  4127b0:	a4 63 00 10 	l.andi r3,r3,0x10
  4127b4:	bc 23 00 00 	l.sfnei r3,0x0
  4127b8:	10 00 00 07 	l.bf 4127d4 <main+0x358c>
  4127bc:	15 00 00 00 	l.nop 0x0
					        strcpy(&s[6 + sizeof(df[i].name)-1], " \x17"); // padlock icon for write-protected disks
  4127c0:	18 60 00 41 	l.movhi r3,0x41
  4127c4:	18 80 00 41 	l.movhi r4,0x41
  4127c8:	a8 63 cd 33 	l.ori r3,r3,0xcd33
  4127cc:	00 00 00 16 	l.j 412824 <main+0x35dc>
  4127d0:	a8 84 8d 21 	l.ori r4,r4,0x8d21
						else
					        strcpy(&s[6 + sizeof(df[i].name)-1], "  "); // clear padlock icon for write-enabled disks
  4127d4:	18 60 00 41 	l.movhi r3,0x41
  4127d8:	18 80 00 41 	l.movhi r4,0x41
  4127dc:	a8 63 cd 33 	l.ori r3,r3,0xcd33
  4127e0:	00 00 00 11 	l.j 412824 <main+0x35dc>
  4127e4:	a8 84 80 87 	l.ori r4,r4,0x8087
				    }
				    else // no floppy disk
					{
				        strcat(s, "* sin disco *");
  4127e8:	00 00 00 08 	l.j 412808 <main+0x35c0>
  4127ec:	a8 63 8d 24 	l.ori r3,r3,0x8d24
					}
				}
				else if(i<=config.floppy.drives)
  4127f0:	8c 72 00 29 	l.lbz r3,0x29(r18)
  4127f4:	e4 83 70 00 	l.sfltu r3,r14
  4127f8:	10 00 00 08 	l.bf 412818 <main+0x35d0>
  4127fc:	18 60 00 41 	l.movhi r3,0x41
				{
					strcat(s,"* activar tras el reset *");
  412800:	18 60 00 41 	l.movhi r3,0x41
  412804:	a8 63 8d 32 	l.ori r3,r3,0x8d32
  412808:	07 ff e9 8f 	l.jal 40ce44 <strcat.clone.3>
  41280c:	15 00 00 00 	l.nop 0x0
				}
				else
					strcpy(s,"");
		        OsdWrite(i, s, menusub == i,(i>drives)||(i>config.floppy.drives));
  412810:	00 00 00 08 	l.j 412830 <main+0x35e8>
  412814:	8c bc 00 00 	l.lbz r5,0x0(r28)
				else if(i<=config.floppy.drives)
				{
					strcat(s,"* activar tras el reset *");
				}
				else
					strcpy(s,"");
  412818:	18 80 00 41 	l.movhi r4,0x41
  41281c:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  412820:	a8 84 83 f7 	l.ori r4,r4,0x83f7
  412824:	07 ff b6 aa 	l.jal 4002cc <strcpy>
  412828:	15 00 00 00 	l.nop 0x0
		        OsdWrite(i, s, menusub == i,(i>drives)||(i>config.floppy.drives));
  41282c:	8c bc 00 00 	l.lbz r5,0x0(r28)
  412830:	e0 ae 28 05 	l.xor r5,r14,r5
  412834:	9c c0 00 01 	l.addi r6,r0,0x1
  412838:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  41283c:	e4 4e c0 00 	l.sfgtu r14,r24
  412840:	10 00 00 07 	l.bf 41285c <main+0x3614>
  412844:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  412848:	8c 72 00 29 	l.lbz r3,0x29(r18)
  41284c:	e4 83 70 00 	l.sfltu r3,r14
  412850:	10 00 00 04 	l.bf 412860 <main+0x3618>
  412854:	18 80 00 41 	l.movhi r4,0x41
  412858:	9c c0 00 00 	l.addi r6,r0,0x0
  41285c:	18 80 00 41 	l.movhi r4,0x41
  412860:	a8 62 00 00 	l.ori r3,r2,0x0
  412864:	a8 84 cd 18 	l.ori r4,r4,0xcd18
  412868:	9c 42 00 01 	l.addi r2,r2,0x1
  41286c:	07 ff c5 61 	l.jal 403df0 <OsdWrite>
  412870:	9e 94 00 01 	l.addi r20,r20,0x1
  412874:	a6 94 00 ff 	l.andi r20,r20,0xff

        // floppy drive info
		// We display a line for each drive that's active
		// in the config file, but grey out any that the FPGA doesn't think are active.
		// We also print a help text in place of the last drive if it's inactive.
        for (i = 0; i < 4; i++)
  412878:	bc 22 00 04 	l.sfnei r2,0x4
  41287c:	13 ff ff a1 	l.bf 412700 <main+0x34b8>
  412880:	9e 10 02 bc 	l.addi r16,r16,0x2bc
				else
					strcpy(s,"");
		        OsdWrite(i, s, menusub == i,(i>drives)||(i>config.floppy.drives));
			}
        }
		sprintf(s," Disquetera turbo : %s",config.floppy.speed ? "si" : "no");
  412884:	18 40 00 41 	l.movhi r2,0x41
  412888:	a8 42 cc ac 	l.ori r2,r2,0xccac
  41288c:	8c 62 00 28 	l.lbz r3,0x28(r2)
  412890:	18 40 00 41 	l.movhi r2,0x41
  412894:	bc 03 00 00 	l.sfeqi r3,0x0
  412898:	10 00 00 04 	l.bf 4128a8 <main+0x3660>
  41289c:	a8 42 91 db 	l.ori r2,r2,0x91db
  4128a0:	18 40 00 41 	l.movhi r2,0x41
  4128a4:	a8 42 91 c9 	l.ori r2,r2,0x91c9
  4128a8:	d4 01 10 00 	l.sw 0x0(r1),r2
  4128ac:	18 60 00 41 	l.movhi r3,0x41
  4128b0:	18 80 00 41 	l.movhi r4,0x41
        OsdWrite(4, s, menusub==4,0);
  4128b4:	18 40 00 41 	l.movhi r2,0x41
				else
					strcpy(s,"");
		        OsdWrite(i, s, menusub == i,(i>drives)||(i>config.floppy.drives));
			}
        }
		sprintf(s," Disquetera turbo : %s",config.floppy.speed ? "si" : "no");
  4128b8:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  4128bc:	a8 84 8d 4c 	l.ori r4,r4,0x8d4c
  4128c0:	07 ff c6 f1 	l.jal 404484 <sprintf>
  4128c4:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
        OsdWrite(4, s, menusub==4,0);
  4128c8:	8c 42 00 00 	l.lbz r2,0x0(r2)
  4128cc:	ac a2 00 04 	l.xori r5,r2,0x4
  4128d0:	18 80 00 41 	l.movhi r4,0x41
  4128d4:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  4128d8:	9c 60 00 04 	l.addi r3,r0,0x4
  4128dc:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  4128e0:	a8 84 cd 18 	l.ori r4,r4,0xcd18
  4128e4:	07 ff c5 43 	l.jal 403df0 <OsdWrite>
  4128e8:	9c c0 00 00 	l.addi r6,r0,0x0
        OsdWrite(5, " Config Disco Duro \x16", menusub == 5,0);
  4128ec:	ac a2 00 05 	l.xori r5,r2,0x5
  4128f0:	18 80 00 41 	l.movhi r4,0x41
  4128f4:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  4128f8:	9c 60 00 05 	l.addi r3,r0,0x5
  4128fc:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  412900:	a8 84 8d 63 	l.ori r4,r4,0x8d63
  412904:	9c c0 00 00 	l.addi r6,r0,0x0
  412908:	07 ff c5 3a 	l.jal 403df0 <OsdWrite>
  41290c:	ac 42 00 06 	l.xori r2,r2,0x6
        OsdWrite(6, "", 0,0);
  412910:	9c a0 00 00 	l.addi r5,r0,0x0
  412914:	18 80 00 41 	l.movhi r4,0x41
  412918:	a8 c5 00 00 	l.ori r6,r5,0x0
  41291c:	9c 60 00 06 	l.addi r3,r0,0x6
  412920:	07 ff c5 34 	l.jal 403df0 <OsdWrite>
  412924:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(7, STD_EXIT, menusub == 6,0);
  412928:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  41292c:	18 80 00 41 	l.movhi r4,0x41
  412930:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  412934:	9c 60 00 07 	l.addi r3,r0,0x7
  412938:	a8 84 8b a4 	l.ori r4,r4,0x8ba4
  41293c:	9c c0 00 00 	l.addi r6,r0,0x0
  412940:	07 ff c5 2c 	l.jal 403df0 <OsdWrite>
  412944:	18 40 00 41 	l.movhi r2,0x41

        menustate = MENU_MAIN2;
  412948:	a8 42 a3 89 	l.ori r2,r2,0xa389
  41294c:	9c 60 00 03 	l.addi r3,r0,0x3
		parentstate=MENU_MAIN1;
  412950:	9c 80 00 02 	l.addi r4,r0,0x2
        OsdWrite(4, s, menusub==4,0);
        OsdWrite(5, " Config Disco Duro \x16", menusub == 5,0);
        OsdWrite(6, "", 0,0);
        OsdWrite(7, STD_EXIT, menusub == 6,0);

        menustate = MENU_MAIN2;
  412954:	d8 02 18 00 	l.sb 0x0(r2),r3
		parentstate=MENU_MAIN1;
  412958:	18 40 00 41 	l.movhi r2,0x41
  41295c:	a8 42 fd 24 	l.ori r2,r2,0xfd24
  412960:	00 00 10 de 	l.j 416cd8 <main+0x7a90>
  412964:	d8 02 20 00 	l.sb 0x0(r2),r4
        break;

    case MENU_MAIN2 :
        if (menu)
  412968:	bc 0e 00 00 	l.sfeqi r14,0x0
  41296c:	10 00 00 07 	l.bf 412988 <main+0x3740>
  412970:	bc 12 00 00 	l.sfeqi r18,0x0
            menustate = MENU_NONE1;
  412974:	18 40 00 41 	l.movhi r2,0x41
  412978:	9c a0 00 00 	l.addi r5,r0,0x0
  41297c:	a8 42 a3 89 	l.ori r2,r2,0xa389
  412980:	00 00 10 d6 	l.j 416cd8 <main+0x7a90>
  412984:	d8 02 28 00 	l.sb 0x0(r2),r5
		else if(plus && (config.floppy.drives<3))
  412988:	10 00 00 12 	l.bf 4129d0 <main+0x3788>
  41298c:	bc 02 00 00 	l.sfeqi r2,0x0
  412990:	18 80 00 41 	l.movhi r4,0x41
  412994:	a8 84 cc ac 	l.ori r4,r4,0xccac
  412998:	8c 64 00 29 	l.lbz r3,0x29(r4)
  41299c:	bc 43 00 02 	l.sfgtui r3,0x2
  4129a0:	10 00 00 0c 	l.bf 4129d0 <main+0x3788>
  4129a4:	bc 02 00 00 	l.sfeqi r2,0x0
		{
			config.floppy.drives++;
  4129a8:	9c 63 00 01 	l.addi r3,r3,0x1
			ConfigFloppy(config.floppy.drives,config.floppy.speed);
	        menustate = MENU_MAIN1;
  4129ac:	18 40 00 41 	l.movhi r2,0x41
    case MENU_MAIN2 :
        if (menu)
            menustate = MENU_NONE1;
		else if(plus && (config.floppy.drives<3))
		{
			config.floppy.drives++;
  4129b0:	a4 63 00 ff 	l.andi r3,r3,0xff
			ConfigFloppy(config.floppy.drives,config.floppy.speed);
	        menustate = MENU_MAIN1;
  4129b4:	a8 42 a3 89 	l.ori r2,r2,0xa389
    case MENU_MAIN2 :
        if (menu)
            menustate = MENU_NONE1;
		else if(plus && (config.floppy.drives<3))
		{
			config.floppy.drives++;
  4129b8:	d8 04 18 29 	l.sb 0x29(r4),r3
			ConfigFloppy(config.floppy.drives,config.floppy.speed);
  4129bc:	07 ff c5 c0 	l.jal 4040bc <ConfigFloppy>
  4129c0:	8c 84 00 28 	l.lbz r4,0x28(r4)
	        menustate = MENU_MAIN1;
  4129c4:	9c c0 00 02 	l.addi r6,r0,0x2
  4129c8:	00 00 10 c4 	l.j 416cd8 <main+0x7a90>
  4129cc:	d8 02 30 00 	l.sb 0x0(r2),r6
		}
		else if(minus && (config.floppy.drives>0))
  4129d0:	10 00 00 12 	l.bf 412a18 <main+0x37d0>
  4129d4:	bc 10 00 00 	l.sfeqi r16,0x0
  4129d8:	18 40 00 41 	l.movhi r2,0x41
  4129dc:	a8 42 cc ac 	l.ori r2,r2,0xccac
  4129e0:	8c 62 00 29 	l.lbz r3,0x29(r2)
  4129e4:	bc 03 00 00 	l.sfeqi r3,0x0
  4129e8:	10 00 00 0c 	l.bf 412a18 <main+0x37d0>
  4129ec:	bc 10 00 00 	l.sfeqi r16,0x0
		{
			config.floppy.drives--;
  4129f0:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
			ConfigFloppy(config.floppy.drives,config.floppy.speed);
  4129f4:	8c 82 00 28 	l.lbz r4,0x28(r2)
			ConfigFloppy(config.floppy.drives,config.floppy.speed);
	        menustate = MENU_MAIN1;
		}
		else if(minus && (config.floppy.drives>0))
		{
			config.floppy.drives--;
  4129f8:	a4 63 00 ff 	l.andi r3,r3,0xff
  4129fc:	d8 02 18 29 	l.sb 0x29(r2),r3
			ConfigFloppy(config.floppy.drives,config.floppy.speed);
  412a00:	07 ff c5 af 	l.jal 4040bc <ConfigFloppy>
  412a04:	18 40 00 41 	l.movhi r2,0x41
	        menustate = MENU_MAIN1;
  412a08:	a8 42 a3 89 	l.ori r2,r2,0xa389
  412a0c:	9c e0 00 02 	l.addi r7,r0,0x2
  412a10:	00 00 10 b2 	l.j 416cd8 <main+0x7a90>
  412a14:	d8 02 38 00 	l.sb 0x0(r2),r7
		}
        else if (select)
  412a18:	10 00 00 4a 	l.bf 412b40 <main+0x38f8>
  412a1c:	bc 3c 00 41 	l.sfnei r28,0x41
        {
            if (menusub < 4)
  412a20:	18 40 00 41 	l.movhi r2,0x41
  412a24:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  412a28:	8c 62 00 00 	l.lbz r3,0x0(r2)
  412a2c:	bc 43 00 03 	l.sfgtui r3,0x3
  412a30:	10 00 00 1b 	l.bf 412a9c <main+0x3854>
  412a34:	bc 23 00 04 	l.sfnei r3,0x4
            {
                if (df[menusub].status & DSK_INSERTED) // eject selected floppy
  412a38:	07 ff b5 8c 	l.jal 400068 <__mulsi3>
  412a3c:	9c 80 02 bc 	l.addi r4,r0,0x2bc
  412a40:	19 80 00 41 	l.movhi r12,0x41
  412a44:	a9 8c f1 08 	l.ori r12,r12,0xf108
  412a48:	e1 6b 60 00 	l.add r11,r11,r12
  412a4c:	8c 4b 00 00 	l.lbz r2,0x0(r11)
  412a50:	a4 42 00 01 	l.andi r2,r2,0x1
  412a54:	bc 02 00 00 	l.sfeqi r2,0x0
  412a58:	10 00 00 08 	l.bf 412a78 <main+0x3830>
  412a5c:	9d a0 00 00 	l.addi r13,r0,0x0
                {
                    df[menusub].status = 0;
                    menustate = MENU_MAIN1;
  412a60:	18 40 00 41 	l.movhi r2,0x41
  412a64:	a8 42 a3 89 	l.ori r2,r2,0xa389
  412a68:	9c 60 00 02 	l.addi r3,r0,0x2
        {
            if (menusub < 4)
            {
                if (df[menusub].status & DSK_INSERTED) // eject selected floppy
                {
                    df[menusub].status = 0;
  412a6c:	d8 0b 68 00 	l.sb 0x0(r11),r13
                    menustate = MENU_MAIN1;
  412a70:	00 00 10 9a 	l.j 416cd8 <main+0x7a90>
  412a74:	d8 02 18 00 	l.sb 0x0(r2),r3
                }
                else
                {
                    df[menusub].status = 0;
                    SelectFile("ADF", SCAN_DIR | SCAN_LFN, MENU_FILE_SELECTED, MENU_MAIN1);
  412a78:	18 60 00 41 	l.movhi r3,0x41
                    df[menusub].status = 0;
                    menustate = MENU_MAIN1;
                }
                else
                {
                    df[menusub].status = 0;
  412a7c:	d8 0b 10 00 	l.sb 0x0(r11),r2
                    SelectFile("ADF", SCAN_DIR | SCAN_LFN, MENU_FILE_SELECTED, MENU_MAIN1);
  412a80:	a8 63 8d 78 	l.ori r3,r3,0x8d78
  412a84:	9c 80 00 03 	l.addi r4,r0,0x3
  412a88:	9c a0 00 0a 	l.addi r5,r0,0xa
  412a8c:	07 ff d9 e2 	l.jal 409214 <SelectFile>
  412a90:	9c c0 00 02 	l.addi r6,r0,0x2
  412a94:	00 00 10 91 	l.j 416cd8 <main+0x7a90>
  412a98:	15 00 00 00 	l.nop 0x0
                }
            }
            else if (menusub == 4)	// Toggle floppy turbo
  412a9c:	10 00 00 0e 	l.bf 412ad4 <main+0x388c>
  412aa0:	bc 23 00 05 	l.sfnei r3,0x5
			{
                config.floppy.speed^=1;
  412aa4:	18 40 00 41 	l.movhi r2,0x41
  412aa8:	a8 42 cc ac 	l.ori r2,r2,0xccac
  412aac:	8c 82 00 28 	l.lbz r4,0x28(r2)
  412ab0:	ac 84 00 01 	l.xori r4,r4,0x1
				ConfigFloppy(config.floppy.drives,config.floppy.speed);
  412ab4:	8c 62 00 29 	l.lbz r3,0x29(r2)
                    SelectFile("ADF", SCAN_DIR | SCAN_LFN, MENU_FILE_SELECTED, MENU_MAIN1);
                }
            }
            else if (menusub == 4)	// Toggle floppy turbo
			{
                config.floppy.speed^=1;
  412ab8:	d8 02 20 28 	l.sb 0x28(r2),r4
				ConfigFloppy(config.floppy.drives,config.floppy.speed);
  412abc:	07 ff c5 80 	l.jal 4040bc <ConfigFloppy>
  412ac0:	18 40 00 41 	l.movhi r2,0x41
                menustate = MENU_MAIN1;
  412ac4:	a8 42 a3 89 	l.ori r2,r2,0xa389
  412ac8:	9c 80 00 02 	l.addi r4,r0,0x2
  412acc:	00 00 10 83 	l.j 416cd8 <main+0x7a90>
  412ad0:	d8 02 20 00 	l.sb 0x0(r2),r4
			}
            else if (menusub == 5)	// Go to harddrives page.
  412ad4:	10 00 00 15 	l.bf 412b28 <main+0x38e0>
  412ad8:	bc 23 00 06 	l.sfnei r3,0x6
			{
                 t_hardfile[0] = config.hardfile[0];
  412adc:	18 60 00 42 	l.movhi r3,0x42
  412ae0:	18 80 00 41 	l.movhi r4,0x41
  412ae4:	a8 63 0b 80 	l.ori r3,r3,0xb80
  412ae8:	a8 84 cc dc 	l.ori r4,r4,0xccdc
  412aec:	07 ff b5 e5 	l.jal 400280 <memcpy>
  412af0:	9c a0 00 1c 	l.addi r5,r0,0x1c
                 t_hardfile[1] = config.hardfile[1];
  412af4:	18 60 00 42 	l.movhi r3,0x42
  412af8:	18 80 00 41 	l.movhi r4,0x41
  412afc:	a8 63 0b 9c 	l.ori r3,r3,0xb9c
  412b00:	9c a0 00 1c 	l.addi r5,r0,0x1c
  412b04:	07 ff b5 df 	l.jal 400280 <memcpy>
  412b08:	a8 84 cc f8 	l.ori r4,r4,0xccf8
                 menustate = MENU_SETTINGS_HARDFILE1;
  412b0c:	18 60 00 41 	l.movhi r3,0x41
  412b10:	9c a0 00 1c 	l.addi r5,r0,0x1c
  412b14:	a8 63 a3 89 	l.ori r3,r3,0xa389
				 menusub=0;
  412b18:	9c c0 00 00 	l.addi r6,r0,0x0
			}
            else if (menusub == 5)	// Go to harddrives page.
			{
                 t_hardfile[0] = config.hardfile[0];
                 t_hardfile[1] = config.hardfile[1];
                 menustate = MENU_SETTINGS_HARDFILE1;
  412b1c:	d8 03 28 00 	l.sb 0x0(r3),r5
				 menusub=0;
  412b20:	00 00 10 6e 	l.j 416cd8 <main+0x7a90>
  412b24:	d8 02 30 00 	l.sb 0x0(r2),r6
			}
            else if (menusub == 6)
  412b28:	10 00 10 6c 	l.bf 416cd8 <main+0x7a90>
  412b2c:	9c e0 00 00 	l.addi r7,r0,0x0
                menustate = MENU_NONE1;
  412b30:	18 40 00 41 	l.movhi r2,0x41
  412b34:	a8 42 a3 89 	l.ori r2,r2,0xa389
  412b38:	00 00 10 68 	l.j 416cd8 <main+0x7a90>
  412b3c:	d8 02 38 00 	l.sb 0x0(r2),r7
        }
        else if (c == KEY_BACK) // eject all floppies
  412b40:	10 00 00 16 	l.bf 412b98 <main+0x3950>
  412b44:	bc 16 00 00 	l.sfeqi r22,0x0
        {
            for (i = 0; i <= drives; i++)
  412b48:	18 40 00 41 	l.movhi r2,0x41
  412b4c:	a8 42 a3 5c 	l.ori r2,r2,0xa35c
  412b50:	8c 42 00 00 	l.lbz r2,0x0(r2)
                df[i].status = 0;
  412b54:	a8 70 00 00 	l.ori r3,r16,0x0
  412b58:	9c 80 02 bc 	l.addi r4,r0,0x2bc
  412b5c:	07 ff b5 43 	l.jal 400068 <__mulsi3>
  412b60:	9e 10 00 01 	l.addi r16,r16,0x1
  412b64:	19 80 00 41 	l.movhi r12,0x41
  412b68:	9d a0 00 00 	l.addi r13,r0,0x0
  412b6c:	a9 8c f1 08 	l.ori r12,r12,0xf108
            else if (menusub == 6)
                menustate = MENU_NONE1;
        }
        else if (c == KEY_BACK) // eject all floppies
        {
            for (i = 0; i <= drives; i++)
  412b70:	a6 10 00 ff 	l.andi r16,r16,0xff
                df[i].status = 0;
  412b74:	e1 6b 60 00 	l.add r11,r11,r12
            else if (menusub == 6)
                menustate = MENU_NONE1;
        }
        else if (c == KEY_BACK) // eject all floppies
        {
            for (i = 0; i <= drives; i++)
  412b78:	e4 b0 10 00 	l.sfleu r16,r2
  412b7c:	13 ff ff f6 	l.bf 412b54 <main+0x390c>
  412b80:	d8 0b 68 00 	l.sb 0x0(r11),r13
                df[i].status = 0;

            menustate = MENU_MAIN1;
  412b84:	18 40 00 41 	l.movhi r2,0x41
  412b88:	9c 60 00 02 	l.addi r3,r0,0x2
  412b8c:	a8 42 a3 89 	l.ori r2,r2,0xa389
  412b90:	00 00 10 52 	l.j 416cd8 <main+0x7a90>
  412b94:	d8 02 18 00 	l.sb 0x0(r2),r3
        }
        else if (right)
  412b98:	10 00 10 50 	l.bf 416cd8 <main+0x7a90>
  412b9c:	9c 80 00 28 	l.addi r4,r0,0x28
        {
            menustate = MENU_MAIN2_1;
  412ba0:	18 40 00 41 	l.movhi r2,0x41
  412ba4:	a8 42 a3 89 	l.ori r2,r2,0xa389
  412ba8:	d8 02 20 00 	l.sb 0x0(r2),r4
            menusub = 0;
  412bac:	18 40 00 41 	l.movhi r2,0x41
  412bb0:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  412bb4:	00 00 10 49 	l.j 416cd8 <main+0x7a90>
  412bb8:	d8 02 80 00 	l.sb 0x0(r2),r16
        }
        break;

    case MENU_FILE_SELECTED : // file successfully selected

         InsertFloppy(&df[menusub]);
  412bbc:	18 40 00 41 	l.movhi r2,0x41
  412bc0:	9c 80 02 bc 	l.addi r4,r0,0x2bc
  412bc4:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  412bc8:	8c 42 00 00 	l.lbz r2,0x0(r2)
  412bcc:	07 ff b5 27 	l.jal 400068 <__mulsi3>
  412bd0:	a8 62 00 00 	l.ori r3,r2,0x0

    unsigned char i, j;
    unsigned long tracks;

    // calculate number of tracks in the ADF image file
    tracks = file.size / (512*11);
  412bd4:	18 60 00 41 	l.movhi r3,0x41
        }
        break;

    case MENU_FILE_SELECTED : // file successfully selected

         InsertFloppy(&df[menusub]);
  412bd8:	18 a0 00 41 	l.movhi r5,0x41

    unsigned char i, j;
    unsigned long tracks;

    // calculate number of tracks in the ADF image file
    tracks = file.size / (512*11);
  412bdc:	a8 63 cb 80 	l.ori r3,r3,0xcb80
        }
        break;

    case MENU_FILE_SELECTED : // file successfully selected

         InsertFloppy(&df[menusub]);
  412be0:	a8 a5 f1 08 	l.ori r5,r5,0xf108

    unsigned char i, j;
    unsigned long tracks;

    // calculate number of tracks in the ADF image file
    tracks = file.size / (512*11);
  412be4:	84 63 00 18 	l.lwz r3,0x18(r3)
  412be8:	9c 80 16 00 	l.addi r4,r0,0x1600
  412bec:	07 ff b5 2e 	l.jal 4000a4 <__udivsi3>
  412bf0:	e2 cb 28 00 	l.add r22,r11,r5
    if (tracks > MAX_TRACKS)
  412bf4:	bc ab 00 a6 	l.sfleui r11,0xa6
  412bf8:	10 00 00 07 	l.bf 412c14 <main+0x39cc>
  412bfc:	a9 cb 00 00 	l.ori r14,r11,0x0
    {
        printf("ADF NO SOPORTADO!!! Demasiados tracks: %lu\r", tracks);
  412c00:	18 60 00 41 	l.movhi r3,0x41
        tracks = MAX_TRACKS;
  412c04:	9d c0 00 a6 	l.addi r14,r0,0xa6

    // calculate number of tracks in the ADF image file
    tracks = file.size / (512*11);
    if (tracks > MAX_TRACKS)
    {
        printf("ADF NO SOPORTADO!!! Demasiados tracks: %lu\r", tracks);
  412c08:	a8 63 8d 7c 	l.ori r3,r3,0x8d7c
  412c0c:	07 ff c6 a2 	l.jal 404694 <printf>
  412c10:	d4 01 58 00 	l.sw 0x0(r1),r11
        tracks = MAX_TRACKS;
    }
    drive->tracks = (unsigned char)tracks;
  412c14:	a8 62 00 00 	l.ori r3,r2,0x0
  412c18:	9c 80 02 bc 	l.addi r4,r0,0x2bc
  412c1c:	07 ff b5 13 	l.jal 400068 <__mulsi3>
  412c20:	1a 80 00 41 	l.movhi r20,0x41
  412c24:	18 c0 00 41 	l.movhi r6,0x41

    // fill index cache
    for (i = 0; i < tracks; i++) // for every track get its start position within image file
  412c28:	9e 00 00 00 	l.addi r16,r0,0x0
    if (tracks > MAX_TRACKS)
    {
        printf("ADF NO SOPORTADO!!! Demasiados tracks: %lu\r", tracks);
        tracks = MAX_TRACKS;
    }
    drive->tracks = (unsigned char)tracks;
  412c2c:	a8 c6 f1 08 	l.ori r6,r6,0xf108
  412c30:	aa 94 cb 80 	l.ori r20,r20,0xcb80
  412c34:	e0 6b 30 00 	l.add r3,r11,r6
  412c38:	00 00 00 12 	l.j 412c80 <main+0x3a38>
  412c3c:	d8 03 70 01 	l.sb 0x1(r3),r14

    // fill index cache
    for (i = 0; i < tracks; i++) // for every track get its start position within image file
    {
        drive->cache[i] = file.cluster; // start of the track within image file
  412c40:	9c 70 00 01 	l.addi r3,r16,0x1
  412c44:	84 94 00 1c 	l.lwz r4,0x1c(r20)
  412c48:	b8 63 00 02 	l.slli r3,r3,0x2
        for (j = 0; j < 11; j++)
  412c4c:	9e 40 00 00 	l.addi r18,r0,0x0
    drive->tracks = (unsigned char)tracks;

    // fill index cache
    for (i = 0; i < tracks; i++) // for every track get its start position within image file
    {
        drive->cache[i] = file.cluster; // start of the track within image file
  412c50:	e0 76 18 00 	l.add r3,r22,r3
  412c54:	d4 03 20 00 	l.sw 0x0(r3),r4
        for (j = 0; j < 11; j++)
            FileNextSector(&file); // advance by track length (11 sectors)
  412c58:	18 60 00 41 	l.movhi r3,0x41

    // fill index cache
    for (i = 0; i < tracks; i++) // for every track get its start position within image file
    {
        drive->cache[i] = file.cluster; // start of the track within image file
        for (j = 0; j < 11; j++)
  412c5c:	9e 52 00 01 	l.addi r18,r18,0x1
            FileNextSector(&file); // advance by track length (11 sectors)
  412c60:	a8 63 cb 80 	l.ori r3,r3,0xcb80
  412c64:	07 ff ca 39 	l.jal 405548 <FileNextSector>
  412c68:	a6 52 00 ff 	l.andi r18,r18,0xff

    // fill index cache
    for (i = 0; i < tracks; i++) // for every track get its start position within image file
    {
        drive->cache[i] = file.cluster; // start of the track within image file
        for (j = 0; j < 11; j++)
  412c6c:	bc 32 00 0b 	l.sfnei r18,0xb
  412c70:	13 ff ff fb 	l.bf 412c5c <main+0x3a14>
  412c74:	18 60 00 41 	l.movhi r3,0x41
        tracks = MAX_TRACKS;
    }
    drive->tracks = (unsigned char)tracks;

    // fill index cache
    for (i = 0; i < tracks; i++) // for every track get its start position within image file
  412c78:	9e 10 00 01 	l.addi r16,r16,0x1
  412c7c:	a6 10 00 ff 	l.andi r16,r16,0xff
  412c80:	1a 40 00 41 	l.movhi r18,0x41
  412c84:	e4 90 70 00 	l.sfltu r16,r14
  412c88:	13 ff ff ee 	l.bf 412c40 <main+0x39f8>
  412c8c:	aa 52 cb 80 	l.ori r18,r18,0xcb80
        for (j = 0; j < 11; j++)
            FileNextSector(&file); // advance by track length (11 sectors)
    }

    // copy image file name into drive struct
    if (file.long_name[0]) // file has long name
  412c90:	90 72 00 24 	l.lbs r3,0x24(r18)
  412c94:	bc 03 00 00 	l.sfeqi r3,0x0
  412c98:	10 00 00 21 	l.bf 412d1c <main+0x3ad4>
  412c9c:	9c 80 02 bc 	l.addi r4,r0,0x2bc
        _strncpy(drive->name, file.long_name, sizeof(drive->name)); // copy long name
  412ca0:	a8 62 00 00 	l.ori r3,r2,0x0
  412ca4:	07 ff b4 f1 	l.jal 400068 <__mulsi3>
  412ca8:	9e 52 00 24 	l.addi r18,r18,0x24
  412cac:	18 e0 00 41 	l.movhi r7,0x41
  412cb0:	9c 60 00 16 	l.addi r3,r0,0x16
  412cb4:	a8 e7 f3 ab 	l.ori r7,r7,0xf3ab
  412cb8:	00 00 00 06 	l.j 412cd0 <main+0x3a88>
  412cbc:	e1 6b 38 00 	l.add r11,r11,r7

// customized strncpy() function to fill remaing destination string part with spaces

    while (*pStr2 && nCount)
    {
        *pStr1++ = *pStr2++; // copy strings
  412cc0:	d8 0b 20 00 	l.sb 0x0(r11),r4
  412cc4:	9e 52 00 01 	l.addi r18,r18,0x1
  412cc8:	9d 6b 00 01 	l.addi r11,r11,0x1
        nCount--;
  412ccc:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
{
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L2);

// customized strncpy() function to fill remaing destination string part with spaces

    while (*pStr2 && nCount)
  412cd0:	e0 a0 18 02 	l.sub r5,r0,r3
  412cd4:	e0 a5 18 04 	l.or r5,r5,r3
  412cd8:	bd 65 00 00 	l.sfgesi r5,0x0
  412cdc:	10 00 00 0b 	l.bf 412d08 <main+0x3ac0>
  412ce0:	90 92 00 00 	l.lbs r4,0x0(r18)
  412ce4:	a4 a4 00 ff 	l.andi r5,r4,0xff
  412ce8:	bc 25 00 00 	l.sfnei r5,0x0
  412cec:	13 ff ff f5 	l.bf 412cc0 <main+0x3a78>
  412cf0:	bc 23 00 00 	l.sfnei r3,0x0
  412cf4:	00 00 00 06 	l.j 412d0c <main+0x3ac4>
  412cf8:	15 00 00 00 	l.nop 0x0
        *pStr1++ = *pStr2++; // copy strings
        nCount--;
    }

    while (nCount--)
        *pStr1++ = ' '; // fill remaining space with spaces
  412cfc:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  412d00:	d8 0b 60 00 	l.sb 0x0(r11),r12
  412d04:	9d 6b 00 01 	l.addi r11,r11,0x1
    {
        *pStr1++ = *pStr2++; // copy strings
        nCount--;
    }

    while (nCount--)
  412d08:	bc 23 00 00 	l.sfnei r3,0x0
  412d0c:	13 ff ff fc 	l.bf 412cfc <main+0x3ab4>
  412d10:	9d 80 00 20 	l.addi r12,r0,0x20
    {
        strncpy(drive->name, file.name, 8); // copy base name
        memset(&drive->name[8], ' ', sizeof(drive->name) - 8); // fill the rest of the name with spaces
    }

    if (DiskInfo[0]) // if selected file has valid disk number info then copy it to its name in drive struct
  412d14:	00 00 00 16 	l.j 412d6c <main+0x3b24>
  412d18:	19 c0 00 41 	l.movhi r14,0x41
    // copy image file name into drive struct
    if (file.long_name[0]) // file has long name
        _strncpy(drive->name, file.long_name, sizeof(drive->name)); // copy long name
    else
    {
        strncpy(drive->name, file.name, 8); // copy base name
  412d1c:	a8 62 00 00 	l.ori r3,r2,0x0
  412d20:	07 ff b4 d2 	l.jal 400068 <__mulsi3>
  412d24:	9c 80 02 bc 	l.addi r4,r0,0x2bc
  412d28:	19 a0 00 41 	l.movhi r13,0x41
  412d2c:	9d 6b 02 a0 	l.addi r11,r11,0x2a0
  412d30:	a9 ad f1 08 	l.ori r13,r13,0xf108
  412d34:	a8 92 00 00 	l.ori r4,r18,0x0
  412d38:	e1 cb 68 00 	l.add r14,r11,r13
  412d3c:	9c a0 00 08 	l.addi r5,r0,0x8
  412d40:	07 ff b5 8b 	l.jal 40036c <strncpy>
  412d44:	9c 6e 00 03 	l.addi r3,r14,0x3
        memset(&drive->name[8], ' ', sizeof(drive->name) - 8); // fill the rest of the name with spaces
  412d48:	9c 6e 00 0b 	l.addi r3,r14,0xb
}


//// main() ////
#ifdef __GNUC__
void main(void)
  412d4c:	00 00 00 04 	l.j 412d5c <main+0x3b14>
  412d50:	9d ce 00 19 	l.addi r14,r14,0x19
		*q++ = c;
  412d54:	d8 03 20 00 	l.sb 0x0(r3),r4
  412d58:	9c 63 00 01 	l.addi r3,r3,0x1
	asm volatile ("cld ; rep ; stosq ; movl %3,%%ecx ; rep ; stosb"
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
  412d5c:	e4 23 70 00 	l.sfne r3,r14
  412d60:	13 ff ff fd 	l.bf 412d54 <main+0x3b0c>
  412d64:	9c 80 00 20 	l.addi r4,r0,0x20
    }

    if (DiskInfo[0]) // if selected file has valid disk number info then copy it to its name in drive struct
  412d68:	19 c0 00 41 	l.movhi r14,0x41
  412d6c:	a9 ce fd 54 	l.ori r14,r14,0xfd54
  412d70:	90 6e 00 00 	l.lbs r3,0x0(r14)
  412d74:	bc 03 00 00 	l.sfeqi r3,0x0
  412d78:	10 00 00 10 	l.bf 412db8 <main+0x3b70>
  412d7c:	a8 62 00 00 	l.ori r3,r2,0x0
    {
        drive->name[16] = ' '; // precede disk number info with space character
  412d80:	07 ff b4 ba 	l.jal 400068 <__mulsi3>
  412d84:	9c 80 02 bc 	l.addi r4,r0,0x2bc
  412d88:	18 a0 00 41 	l.movhi r5,0x41
        strncpy(&drive->name[17], DiskInfo, sizeof(DiskInfo)); // copy disk number info
  412d8c:	18 e0 00 41 	l.movhi r7,0x41
        memset(&drive->name[8], ' ', sizeof(drive->name) - 8); // fill the rest of the name with spaces
    }

    if (DiskInfo[0]) // if selected file has valid disk number info then copy it to its name in drive struct
    {
        drive->name[16] = ' '; // precede disk number info with space character
  412d90:	a8 a5 f1 08 	l.ori r5,r5,0xf108
  412d94:	9c c0 00 20 	l.addi r6,r0,0x20
  412d98:	e0 6b 28 00 	l.add r3,r11,r5
        strncpy(&drive->name[17], DiskInfo, sizeof(DiskInfo)); // copy disk number info
  412d9c:	a8 e7 f3 bc 	l.ori r7,r7,0xf3bc
        memset(&drive->name[8], ' ', sizeof(drive->name) - 8); // fill the rest of the name with spaces
    }

    if (DiskInfo[0]) // if selected file has valid disk number info then copy it to its name in drive struct
    {
        drive->name[16] = ' '; // precede disk number info with space character
  412da0:	d8 03 32 b3 	l.sb 0x2b3(r3),r6
        strncpy(&drive->name[17], DiskInfo, sizeof(DiskInfo)); // copy disk number info
  412da4:	a8 8e 00 00 	l.ori r4,r14,0x0
  412da8:	e0 6b 38 00 	l.add r3,r11,r7
  412dac:	07 ff b5 70 	l.jal 40036c <strncpy>
  412db0:	9c a0 00 05 	l.addi r5,r0,0x5
    }

    // initialize the rest of drive struct
    drive->status = DSK_INSERTED;
  412db4:	a8 62 00 00 	l.ori r3,r2,0x0
  412db8:	07 ff b4 ac 	l.jal 400068 <__mulsi3>
  412dbc:	9c 80 02 bc 	l.addi r4,r0,0x2bc
  412dc0:	19 80 00 41 	l.movhi r12,0x41
  412dc4:	9d a0 00 01 	l.addi r13,r0,0x1
  412dc8:	a9 8c f1 08 	l.ori r12,r12,0xf108
    if (!(file.attributes & ATTR_READONLY)) // read-only attribute
  412dcc:	18 60 00 41 	l.movhi r3,0x41
        drive->name[16] = ' '; // precede disk number info with space character
        strncpy(&drive->name[17], DiskInfo, sizeof(DiskInfo)); // copy disk number info
    }

    // initialize the rest of drive struct
    drive->status = DSK_INSERTED;
  412dd0:	e1 6b 60 00 	l.add r11,r11,r12
    if (!(file.attributes & ATTR_READONLY)) // read-only attribute
  412dd4:	a8 63 cb 80 	l.ori r3,r3,0xcb80
        drive->name[16] = ' '; // precede disk number info with space character
        strncpy(&drive->name[17], DiskInfo, sizeof(DiskInfo)); // copy disk number info
    }

    // initialize the rest of drive struct
    drive->status = DSK_INSERTED;
  412dd8:	d8 0b 68 00 	l.sb 0x0(r11),r13
    if (!(file.attributes & ATTR_READONLY)) // read-only attribute
  412ddc:	8c 63 00 0b 	l.lbz r3,0xb(r3)
  412de0:	a4 63 00 01 	l.andi r3,r3,0x1
  412de4:	bc 23 00 00 	l.sfnei r3,0x0
  412de8:	10 00 00 05 	l.bf 412dfc <main+0x3bb4>
  412dec:	a8 62 00 00 	l.ori r3,r2,0x0
        drive->status |= DSK_WRITABLE;
  412df0:	9c 60 00 11 	l.addi r3,r0,0x11
  412df4:	d8 0b 18 00 	l.sb 0x0(r11),r3

    drive->cluster_offset = drive->cache[0];
  412df8:	a8 62 00 00 	l.ori r3,r2,0x0
  412dfc:	07 ff b4 9b 	l.jal 400068 <__mulsi3>
  412e00:	9c 80 02 bc 	l.addi r4,r0,0x2bc
  412e04:	18 80 00 41 	l.movhi r4,0x41
    drive->sector_offset = 0;
  412e08:	9c a0 00 00 	l.addi r5,r0,0x0
    // initialize the rest of drive struct
    drive->status = DSK_INSERTED;
    if (!(file.attributes & ATTR_READONLY)) // read-only attribute
        drive->status |= DSK_WRITABLE;

    drive->cluster_offset = drive->cache[0];
  412e0c:	a8 84 f1 08 	l.ori r4,r4,0xf108
    drive->sector_offset = 0;
    drive->track = 0;
    drive->track_prev = -1;
  412e10:	9c c0 ff ff 	l.addi r6,r0,0xffffffff
    // initialize the rest of drive struct
    drive->status = DSK_INSERTED;
    if (!(file.attributes & ATTR_READONLY)) // read-only attribute
        drive->status |= DSK_WRITABLE;

    drive->cluster_offset = drive->cache[0];
  412e14:	e1 6b 20 00 	l.add r11,r11,r4
  412e18:	84 6b 00 04 	l.lwz r3,0x4(r11)
  412e1c:	d4 0b 1a 9c 	l.sw 0x29c(r11),r3
    drive->sector_offset = 0;
  412e20:	9d 6b 02 a0 	l.addi r11,r11,0x2a0
    drive->track = 0;
    drive->track_prev = -1;

    // some debug info
    if (file.long_name[0])
  412e24:	18 60 00 41 	l.movhi r3,0x41
    drive->status = DSK_INSERTED;
    if (!(file.attributes & ATTR_READONLY)) // read-only attribute
        drive->status |= DSK_WRITABLE;

    drive->cluster_offset = drive->cache[0];
    drive->sector_offset = 0;
  412e28:	d8 0b 28 00 	l.sb 0x0(r11),r5
    drive->track = 0;
  412e2c:	d8 0b 28 01 	l.sb 0x1(r11),r5
    drive->track_prev = -1;
  412e30:	d8 0b 30 02 	l.sb 0x2(r11),r6

    // some debug info
    if (file.long_name[0])
  412e34:	a8 63 cb 80 	l.ori r3,r3,0xcb80
  412e38:	90 83 00 24 	l.lbs r4,0x24(r3)
  412e3c:	bc 04 00 00 	l.sfeqi r4,0x0
  412e40:	10 00 00 07 	l.bf 412e5c <main+0x3c14>
  412e44:	18 e0 00 41 	l.movhi r7,0x41
        printf("Insertar disquete: \"%s\"\r", file.long_name);
  412e48:	18 60 00 41 	l.movhi r3,0x41
  412e4c:	a8 e7 cb a4 	l.ori r7,r7,0xcba4
  412e50:	a8 63 8d a8 	l.ori r3,r3,0x8da8
  412e54:	00 00 00 05 	l.j 412e68 <main+0x3c20>
  412e58:	d4 01 38 00 	l.sw 0x0(r1),r7
    else
        printf("Insertar disquete: \"%.11s\"\r", file.name);
  412e5c:	d4 01 18 00 	l.sw 0x0(r1),r3
  412e60:	18 60 00 41 	l.movhi r3,0x41
  412e64:	a8 63 8d c1 	l.ori r3,r3,0x8dc1
  412e68:	07 ff c6 0b 	l.jal 404694 <printf>
  412e6c:	19 c0 00 41 	l.movhi r14,0x41

    printf("Atributos: 0x%02X\r", file.attributes);
  412e70:	a9 ce cb 80 	l.ori r14,r14,0xcb80
  412e74:	8c 6e 00 0b 	l.lbz r3,0xb(r14)
  412e78:	d4 01 18 00 	l.sw 0x0(r1),r3
  412e7c:	18 60 00 41 	l.movhi r3,0x41
  412e80:	07 ff c6 05 	l.jal 404694 <printf>
  412e84:	a8 63 8d dd 	l.ori r3,r3,0x8ddd
    printf("Tamaño: %lu (%lu KB)\r", file.size, file.size >> 10);
  412e88:	84 6e 00 18 	l.lwz r3,0x18(r14)
  412e8c:	d4 01 18 00 	l.sw 0x0(r1),r3
  412e90:	b8 63 00 4a 	l.srli r3,r3,0xa
  412e94:	d4 01 18 04 	l.sw 0x4(r1),r3
  412e98:	18 60 00 41 	l.movhi r3,0x41
  412e9c:	07 ff c5 fe 	l.jal 404694 <printf>
  412ea0:	a8 63 8d f0 	l.ori r3,r3,0x8df0
    printf("Tracks: %u\r", drive->tracks);
  412ea4:	9c 80 02 bc 	l.addi r4,r0,0x2bc
  412ea8:	07 ff b4 70 	l.jal 400068 <__mulsi3>
  412eac:	a8 62 00 00 	l.ori r3,r2,0x0
  412eb0:	19 80 00 41 	l.movhi r12,0x41
  412eb4:	a9 8c f1 08 	l.ori r12,r12,0xf108
  412eb8:	e0 4b 60 00 	l.add r2,r11,r12
  412ebc:	8c 62 00 01 	l.lbz r3,0x1(r2)
  412ec0:	d4 01 18 00 	l.sw 0x0(r1),r3
  412ec4:	18 60 00 41 	l.movhi r3,0x41
  412ec8:	07 ff c5 f3 	l.jal 404694 <printf>
  412ecc:	a8 63 8e 07 	l.ori r3,r3,0x8e07
    printf("Estado: 0x%02X\r", drive->status);
  412ed0:	18 60 00 41 	l.movhi r3,0x41
  412ed4:	8c 42 00 00 	l.lbz r2,0x0(r2)
  412ed8:	a8 63 8e 13 	l.ori r3,r3,0x8e13
  412edc:	d4 01 10 00 	l.sw 0x0(r1),r2
  412ee0:	07 ff c5 ed 	l.jal 404694 <printf>
  412ee4:	18 40 00 41 	l.movhi r2,0x41
        break;

    case MENU_FILE_SELECTED : // file successfully selected

         InsertFloppy(&df[menusub]);
         menustate = MENU_MAIN1;
  412ee8:	a8 42 a3 89 	l.ori r2,r2,0xa389
  412eec:	9d a0 00 02 	l.addi r13,r0,0x2
         menusub++;
         if (menusub > drives)
  412ef0:	18 80 00 41 	l.movhi r4,0x41
        break;

    case MENU_FILE_SELECTED : // file successfully selected

         InsertFloppy(&df[menusub]);
         menustate = MENU_MAIN1;
  412ef4:	d8 02 68 00 	l.sb 0x0(r2),r13
         menusub++;
  412ef8:	18 40 00 41 	l.movhi r2,0x41
         if (menusub > drives)
  412efc:	a8 84 a3 5c 	l.ori r4,r4,0xa35c

    case MENU_FILE_SELECTED : // file successfully selected

         InsertFloppy(&df[menusub]);
         menustate = MENU_MAIN1;
         menusub++;
  412f00:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
         if (menusub > drives)
  412f04:	8c 84 00 00 	l.lbz r4,0x0(r4)

    case MENU_FILE_SELECTED : // file successfully selected

         InsertFloppy(&df[menusub]);
         menustate = MENU_MAIN1;
         menusub++;
  412f08:	8c 62 00 00 	l.lbz r3,0x0(r2)
  412f0c:	9c 63 00 01 	l.addi r3,r3,0x1
  412f10:	a4 63 00 ff 	l.andi r3,r3,0xff
         if (menusub > drives)
  412f14:	e4 64 18 00 	l.sfgeu r4,r3
  412f18:	10 00 0f 70 	l.bf 416cd8 <main+0x7a90>
  412f1c:	d8 02 18 00 	l.sb 0x0(r2),r3
             menusub = 6;
  412f20:	9c 60 00 06 	l.addi r3,r0,0x6
  412f24:	00 00 0f 6d 	l.j 416cd8 <main+0x7a90>
  412f28:	d8 02 18 00 	l.sb 0x0(r2),r3

        /******************************************************************/
        /* second part of the main menu                                   */
        /******************************************************************/
    case MENU_MAIN2_1 :
		helptext=helptexts[HELPTEXT_MAIN];
  412f2c:	18 60 00 41 	l.movhi r3,0x41
  412f30:	18 40 00 42 	l.movhi r2,0x42
  412f34:	a8 63 8b b6 	l.ori r3,r3,0x8bb6
  412f38:	a8 42 0b 74 	l.ori r2,r2,0xb74
		menumask=0x3f;
 		OsdSetTitle("Config",OSD_ARROW_LEFT|OSD_ARROW_RIGHT);
  412f3c:	9c 80 00 03 	l.addi r4,r0,0x3

        /******************************************************************/
        /* second part of the main menu                                   */
        /******************************************************************/
    case MENU_MAIN2_1 :
		helptext=helptexts[HELPTEXT_MAIN];
  412f40:	d4 02 18 00 	l.sw 0x0(r2),r3
		menumask=0x3f;
  412f44:	18 40 00 41 	l.movhi r2,0x41
  412f48:	9c 60 00 3f 	l.addi r3,r0,0x3f
  412f4c:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
  412f50:	d4 02 18 00 	l.sw 0x0(r2),r3
 		OsdSetTitle("Config",OSD_ARROW_LEFT|OSD_ARROW_RIGHT);
  412f54:	18 60 00 41 	l.movhi r3,0x41
        OsdWrite(0, "  Cargar configuracion", menusub == 0,0);
  412f58:	18 40 00 41 	l.movhi r2,0x41
        /* second part of the main menu                                   */
        /******************************************************************/
    case MENU_MAIN2_1 :
		helptext=helptexts[HELPTEXT_MAIN];
		menumask=0x3f;
 		OsdSetTitle("Config",OSD_ARROW_LEFT|OSD_ARROW_RIGHT);
  412f5c:	a8 63 8e 23 	l.ori r3,r3,0x8e23
  412f60:	07 ff c1 24 	l.jal 4033f0 <OsdSetTitle>
  412f64:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
        OsdWrite(0, "  Cargar configuracion", menusub == 0,0);
  412f68:	8c 42 00 00 	l.lbz r2,0x0(r2)
  412f6c:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  412f70:	9c 60 00 00 	l.addi r3,r0,0x0
  412f74:	18 80 00 41 	l.movhi r4,0x41
  412f78:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  412f7c:	a8 c3 00 00 	l.ori r6,r3,0x0
  412f80:	07 ff c3 9c 	l.jal 403df0 <OsdWrite>
  412f84:	a8 84 8e 2a 	l.ori r4,r4,0x8e2a
        OsdWrite(1, "  Guardar configuracion", menusub == 1,0);
  412f88:	ac a2 00 01 	l.xori r5,r2,0x1
  412f8c:	18 80 00 41 	l.movhi r4,0x41
  412f90:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  412f94:	9c 60 00 01 	l.addi r3,r0,0x1
  412f98:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  412f9c:	a8 84 8e 41 	l.ori r4,r4,0x8e41
  412fa0:	07 ff c3 94 	l.jal 403df0 <OsdWrite>
  412fa4:	9c c0 00 00 	l.addi r6,r0,0x0
        OsdWrite(2, "  Reiniciar Unamiga", menusub == 2,0);
  412fa8:	ac a2 00 02 	l.xori r5,r2,0x2
  412fac:	18 80 00 41 	l.movhi r4,0x41
  412fb0:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  412fb4:	9c 60 00 02 	l.addi r3,r0,0x2
  412fb8:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  412fbc:	a8 84 8e 59 	l.ori r4,r4,0x8e59
  412fc0:	07 ff c3 8c 	l.jal 403df0 <OsdWrite>
  412fc4:	9c c0 00 00 	l.addi r6,r0,0x0
        OsdWrite(3, "", 0,0);
  412fc8:	9c a0 00 00 	l.addi r5,r0,0x0
  412fcc:	18 80 00 41 	l.movhi r4,0x41
  412fd0:	a8 c5 00 00 	l.ori r6,r5,0x0
  412fd4:	9c 60 00 03 	l.addi r3,r0,0x3
  412fd8:	07 ff c3 86 	l.jal 403df0 <OsdWrite>
  412fdc:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(4, "  Configurar chipset \x16", menusub == 3,0);
  412fe0:	ac a2 00 03 	l.xori r5,r2,0x3
  412fe4:	18 80 00 41 	l.movhi r4,0x41
  412fe8:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  412fec:	9c 60 00 04 	l.addi r3,r0,0x4
  412ff0:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  412ff4:	a8 84 8e 6d 	l.ori r4,r4,0x8e6d
  412ff8:	07 ff c3 7e 	l.jal 403df0 <OsdWrite>
  412ffc:	9c c0 00 00 	l.addi r6,r0,0x0
        OsdWrite(5, "  Configurar memoria \x16", menusub == 4,0);
  413000:	ac a2 00 04 	l.xori r5,r2,0x4
  413004:	18 80 00 41 	l.movhi r4,0x41
  413008:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  41300c:	9c 60 00 05 	l.addi r3,r0,0x5
  413010:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  413014:	a8 84 8e 84 	l.ori r4,r4,0x8e84
  413018:	07 ff c3 76 	l.jal 403df0 <OsdWrite>
  41301c:	9c c0 00 00 	l.addi r6,r0,0x0
        OsdWrite(6, "  Configurar video \x16", menusub == 5,0);
  413020:	ac a2 00 05 	l.xori r5,r2,0x5
  413024:	18 80 00 41 	l.movhi r4,0x41
  413028:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  41302c:	9c 60 00 06 	l.addi r3,r0,0x6
  413030:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  413034:	a8 84 8e 9b 	l.ori r4,r4,0x8e9b
  413038:	9c c0 00 00 	l.addi r6,r0,0x0
  41303c:	07 ff c3 6d 	l.jal 403df0 <OsdWrite>
  413040:	ac 42 00 06 	l.xori r2,r2,0x6
        OsdWrite(7, STD_EXIT, menusub == 6,0);
  413044:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  413048:	18 80 00 41 	l.movhi r4,0x41
  41304c:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  413050:	a8 84 8b a4 	l.ori r4,r4,0x8ba4
  413054:	9c 60 00 07 	l.addi r3,r0,0x7
  413058:	9c c0 00 00 	l.addi r6,r0,0x0
  41305c:	07 ff c3 65 	l.jal 403df0 <OsdWrite>
  413060:	18 40 00 41 	l.movhi r2,0x41

		parentstate = menustate;
  413064:	a8 42 fd 24 	l.ori r2,r2,0xfd24
  413068:	9c 80 00 28 	l.addi r4,r0,0x28
        menustate = MENU_MAIN2_2;
  41306c:	9c a0 00 29 	l.addi r5,r0,0x29
        OsdWrite(4, "  Configurar chipset \x16", menusub == 3,0);
        OsdWrite(5, "  Configurar memoria \x16", menusub == 4,0);
        OsdWrite(6, "  Configurar video \x16", menusub == 5,0);
        OsdWrite(7, STD_EXIT, menusub == 6,0);

		parentstate = menustate;
  413070:	d8 02 20 00 	l.sb 0x0(r2),r4
        menustate = MENU_MAIN2_2;
  413074:	18 40 00 41 	l.movhi r2,0x41
  413078:	a8 42 a3 89 	l.ori r2,r2,0xa389
  41307c:	00 00 0f 17 	l.j 416cd8 <main+0x7a90>
  413080:	d8 02 28 00 	l.sb 0x0(r2),r5
        break;

    case MENU_MAIN2_2 :

        if (menu)
  413084:	bc 0e 00 00 	l.sfeqi r14,0x0
  413088:	10 00 00 07 	l.bf 4130a4 <main+0x3e5c>
  41308c:	bc 10 00 00 	l.sfeqi r16,0x0
            menustate = MENU_NONE1;
  413090:	18 40 00 41 	l.movhi r2,0x41
  413094:	9c c0 00 00 	l.addi r6,r0,0x0
  413098:	a8 42 a3 89 	l.ori r2,r2,0xa389
  41309c:	00 00 0f 0f 	l.j 416cd8 <main+0x7a90>
  4130a0:	d8 02 30 00 	l.sb 0x0(r2),r6
        else if (select)
  4130a4:	10 00 00 3a 	l.bf 41318c <main+0x3f44>
  4130a8:	bc 18 00 00 	l.sfeqi r24,0x0
        {
            if (menusub == 0)
  4130ac:	1a 00 00 41 	l.movhi r16,0x41
  4130b0:	aa 10 a3 8a 	l.ori r16,r16,0xa38a
  4130b4:	8c 50 00 00 	l.lbz r2,0x0(r16)
  4130b8:	bc 22 00 00 	l.sfnei r2,0x0
  4130bc:	10 00 00 08 	l.bf 4130dc <main+0x3e94>
  4130c0:	bc 22 00 01 	l.sfnei r2,0x1
            {
                menusub = 0;
                menustate = MENU_LOADCONFIG_1;
  4130c4:	18 40 00 41 	l.movhi r2,0x41
  4130c8:	9c e0 00 2a 	l.addi r7,r0,0x2a
  4130cc:	a8 42 a3 89 	l.ori r2,r2,0xa389
            menustate = MENU_NONE1;
        else if (select)
        {
            if (menusub == 0)
            {
                menusub = 0;
  4130d0:	d8 10 70 00 	l.sb 0x0(r16),r14
                menustate = MENU_LOADCONFIG_1;
  4130d4:	00 00 0f 01 	l.j 416cd8 <main+0x7a90>
  4130d8:	d8 02 38 00 	l.sb 0x0(r2),r7
            }
            else if (menusub == 1)
  4130dc:	10 00 00 08 	l.bf 4130fc <main+0x3eb4>
  4130e0:	bc 22 00 02 	l.sfnei r2,0x2
            {
                menusub = 0;
                menustate = MENU_SAVECONFIG_1;
  4130e4:	18 40 00 41 	l.movhi r2,0x41
  4130e8:	9d 80 00 2c 	l.addi r12,r0,0x2c
  4130ec:	a8 42 a3 89 	l.ori r2,r2,0xa389
                menusub = 0;
                menustate = MENU_LOADCONFIG_1;
            }
            else if (menusub == 1)
            {
                menusub = 0;
  4130f0:	d8 10 70 00 	l.sb 0x0(r16),r14
                menustate = MENU_SAVECONFIG_1;
  4130f4:	00 00 0e f9 	l.j 416cd8 <main+0x7a90>
  4130f8:	d8 02 60 00 	l.sb 0x0(r2),r12
            }
            else if (menusub == 2)
  4130fc:	10 00 00 06 	l.bf 413114 <main+0x3ecc>
  413100:	bc 22 00 03 	l.sfnei r2,0x3
            {

                OsdReset(RESET_NORMAL);
  413104:	07 ff de 0c 	l.jal 40a934 <OsdReset.clone.0>
  413108:	15 00 00 00 	l.nop 0x0
		menusub = 0;
  41310c:	00 00 0e f3 	l.j 416cd8 <main+0x7a90>
  413110:	d8 10 70 00 	l.sb 0x0(r16),r14

            }
            else if (menusub == 3)
  413114:	10 00 00 08 	l.bf 413134 <main+0x3eec>
  413118:	bc 22 00 04 	l.sfnei r2,0x4
            {
                menustate = MENU_SETTINGS_CHIPSET1;
  41311c:	18 40 00 41 	l.movhi r2,0x41
  413120:	9d a0 00 18 	l.addi r13,r0,0x18
  413124:	a8 42 a3 89 	l.ori r2,r2,0xa389
                menusub = 0;
  413128:	d8 10 70 00 	l.sb 0x0(r16),r14
		menusub = 0;

            }
            else if (menusub == 3)
            {
                menustate = MENU_SETTINGS_CHIPSET1;
  41312c:	00 00 0e eb 	l.j 416cd8 <main+0x7a90>
  413130:	d8 02 68 00 	l.sb 0x0(r2),r13
                menusub = 0;
            }
            else if (menusub == 4)
  413134:	10 00 00 08 	l.bf 413154 <main+0x3f0c>
  413138:	bc 22 00 05 	l.sfnei r2,0x5
            {
                menustate = MENU_SETTINGS_MEMORY1;
  41313c:	18 40 00 41 	l.movhi r2,0x41
  413140:	9c 60 00 16 	l.addi r3,r0,0x16
  413144:	a8 42 a3 89 	l.ori r2,r2,0xa389
                menusub = 0;
  413148:	d8 10 70 00 	l.sb 0x0(r16),r14
                menustate = MENU_SETTINGS_CHIPSET1;
                menusub = 0;
            }
            else if (menusub == 4)
            {
                menustate = MENU_SETTINGS_MEMORY1;
  41314c:	00 00 0e e3 	l.j 416cd8 <main+0x7a90>
  413150:	d8 02 18 00 	l.sb 0x0(r2),r3
                menusub = 0;
            }
            else if (menusub == 5)
  413154:	10 00 00 08 	l.bf 413174 <main+0x3f2c>
  413158:	bc 22 00 06 	l.sfnei r2,0x6
            {
                menustate = MENU_SETTINGS_VIDEO1;
  41315c:	18 40 00 41 	l.movhi r2,0x41
  413160:	9c 80 00 14 	l.addi r4,r0,0x14
  413164:	a8 42 a3 89 	l.ori r2,r2,0xa389
                menusub = 0;
  413168:	d8 10 70 00 	l.sb 0x0(r16),r14
                menustate = MENU_SETTINGS_MEMORY1;
                menusub = 0;
            }
            else if (menusub == 5)
            {
                menustate = MENU_SETTINGS_VIDEO1;
  41316c:	00 00 0e db 	l.j 416cd8 <main+0x7a90>
  413170:	d8 02 20 00 	l.sb 0x0(r2),r4
                menusub = 0;
            }
            else if (menusub == 6)
  413174:	10 00 0e d9 	l.bf 416cd8 <main+0x7a90>
  413178:	15 00 00 00 	l.nop 0x0
                menustate = MENU_NONE1;
  41317c:	18 40 00 41 	l.movhi r2,0x41
  413180:	a8 42 a3 89 	l.ori r2,r2,0xa389
  413184:	00 00 0e d5 	l.j 416cd8 <main+0x7a90>
  413188:	d8 02 70 00 	l.sb 0x0(r2),r14
        }
        else if (left)
  41318c:	10 00 00 0a 	l.bf 4131b4 <main+0x3f6c>
  413190:	bc 16 00 00 	l.sfeqi r22,0x0
        {
            menustate = MENU_MAIN1;
  413194:	18 40 00 41 	l.movhi r2,0x41
  413198:	9c a0 00 02 	l.addi r5,r0,0x2
  41319c:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4131a0:	d8 02 28 00 	l.sb 0x0(r2),r5
            menusub = 0;
  4131a4:	18 40 00 41 	l.movhi r2,0x41
  4131a8:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  4131ac:	00 00 0e cb 	l.j 416cd8 <main+0x7a90>
  4131b0:	d8 02 80 00 	l.sb 0x0(r2),r16
        }
        else if (right)
  4131b4:	10 00 0e c9 	l.bf 416cd8 <main+0x7a90>
  4131b8:	9c c0 00 04 	l.addi r6,r0,0x4
        {
            menustate = MENU_MISC1;
  4131bc:	18 40 00 41 	l.movhi r2,0x41
  4131c0:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4131c4:	d8 02 30 00 	l.sb 0x0(r2),r6
            menusub = 0;
  4131c8:	18 40 00 41 	l.movhi r2,0x41
  4131cc:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  4131d0:	00 00 0e c2 	l.j 416cd8 <main+0x7a90>
  4131d4:	d8 02 c0 00 	l.sb 0x0(r2),r24
        }
        break;

    case MENU_MISC1 :
		helptext=helptexts[HELPTEXT_MAIN];
  4131d8:	18 60 00 41 	l.movhi r3,0x41
  4131dc:	18 40 00 42 	l.movhi r2,0x42
  4131e0:	a8 63 8b b6 	l.ori r3,r3,0x8bb6
  4131e4:	a8 42 0b 74 	l.ori r2,r2,0xb74
		menumask=0x0f;	// Reset, about and exit.
 		OsdSetTitle("Otros",OSD_ARROW_LEFT);
  4131e8:	9c 80 00 01 	l.addi r4,r0,0x1
            menusub = 0;
        }
        break;

    case MENU_MISC1 :
		helptext=helptexts[HELPTEXT_MAIN];
  4131ec:	d4 02 18 00 	l.sw 0x0(r2),r3
		menumask=0x0f;	// Reset, about and exit.
  4131f0:	18 40 00 41 	l.movhi r2,0x41
  4131f4:	9c 60 00 0f 	l.addi r3,r0,0xf
  4131f8:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
  4131fc:	d4 02 18 00 	l.sw 0x0(r2),r3
 		OsdSetTitle("Otros",OSD_ARROW_LEFT);
  413200:	18 60 00 41 	l.movhi r3,0x41
        OsdWrite(0, "   Reiniciar", menusub == 0,0);
  413204:	18 40 00 41 	l.movhi r2,0x41
        break;

    case MENU_MISC1 :
		helptext=helptexts[HELPTEXT_MAIN];
		menumask=0x0f;	// Reset, about and exit.
 		OsdSetTitle("Otros",OSD_ARROW_LEFT);
  413208:	a8 63 8e b0 	l.ori r3,r3,0x8eb0
  41320c:	07 ff c0 79 	l.jal 4033f0 <OsdSetTitle>
  413210:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
        OsdWrite(0, "   Reiniciar", menusub == 0,0);
  413214:	8c 42 00 00 	l.lbz r2,0x0(r2)
  413218:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  41321c:	9c 60 00 00 	l.addi r3,r0,0x0
  413220:	18 80 00 41 	l.movhi r4,0x41
  413224:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  413228:	a8 c3 00 00 	l.ori r6,r3,0x0
  41322c:	07 ff c2 f1 	l.jal 403df0 <OsdWrite>
  413230:	a8 84 8e b6 	l.ori r4,r4,0x8eb6
        OsdWrite(1, "", 0,0);
  413234:	9c a0 00 00 	l.addi r5,r0,0x0
  413238:	18 80 00 41 	l.movhi r4,0x41
  41323c:	a8 c5 00 00 	l.ori r6,r5,0x0
  413240:	9c 60 00 01 	l.addi r3,r0,0x1
  413244:	07 ff c2 eb 	l.jal 403df0 <OsdWrite>
  413248:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(2, "   Reconfigurar el UnAmiga", menusub == 1,0);
  41324c:	ac a2 00 01 	l.xori r5,r2,0x1
  413250:	18 80 00 41 	l.movhi r4,0x41
  413254:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  413258:	9c 60 00 02 	l.addi r3,r0,0x2
  41325c:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  413260:	a8 84 8e c3 	l.ori r4,r4,0x8ec3
  413264:	07 ff c2 e3 	l.jal 403df0 <OsdWrite>
  413268:	9c c0 00 00 	l.addi r6,r0,0x0
//        OsdWrite(3, "    (Not yet implemented)", 0,1);
        OsdWrite(3, "", 0,0);
  41326c:	9c a0 00 00 	l.addi r5,r0,0x0
  413270:	18 80 00 41 	l.movhi r4,0x41
  413274:	a8 c5 00 00 	l.ori r6,r5,0x0
  413278:	9c 60 00 03 	l.addi r3,r0,0x3
  41327c:	07 ff c2 dd 	l.jal 403df0 <OsdWrite>
  413280:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(4, "    Acerca de", menusub == 2,0);
  413284:	ac a2 00 02 	l.xori r5,r2,0x2
  413288:	18 80 00 41 	l.movhi r4,0x41
  41328c:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  413290:	9c 60 00 04 	l.addi r3,r0,0x4
  413294:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  413298:	a8 84 8e de 	l.ori r4,r4,0x8ede
  41329c:	9c c0 00 00 	l.addi r6,r0,0x0
  4132a0:	07 ff c2 d4 	l.jal 403df0 <OsdWrite>
  4132a4:	ac 42 00 03 	l.xori r2,r2,0x3
        OsdWrite(5, "", 0,0);
  4132a8:	9c a0 00 00 	l.addi r5,r0,0x0
  4132ac:	18 80 00 41 	l.movhi r4,0x41
  4132b0:	a8 c5 00 00 	l.ori r6,r5,0x0
  4132b4:	9c 60 00 05 	l.addi r3,r0,0x5
  4132b8:	07 ff c2 ce 	l.jal 403df0 <OsdWrite>
  4132bc:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(6, "", 0,0);
  4132c0:	9c a0 00 00 	l.addi r5,r0,0x0
  4132c4:	18 80 00 41 	l.movhi r4,0x41
  4132c8:	a8 c5 00 00 	l.ori r6,r5,0x0
  4132cc:	9c 60 00 06 	l.addi r3,r0,0x6
  4132d0:	07 ff c2 c8 	l.jal 403df0 <OsdWrite>
  4132d4:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(7, STD_EXIT, menusub == 3,0);
  4132d8:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  4132dc:	18 80 00 41 	l.movhi r4,0x41
  4132e0:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  4132e4:	9c 60 00 07 	l.addi r3,r0,0x7
  4132e8:	a8 84 8b a4 	l.ori r4,r4,0x8ba4
  4132ec:	9c c0 00 00 	l.addi r6,r0,0x0
  4132f0:	07 ff c2 c0 	l.jal 403df0 <OsdWrite>
  4132f4:	18 40 00 41 	l.movhi r2,0x41

		parentstate = menustate;
  4132f8:	a8 42 fd 24 	l.ori r2,r2,0xfd24
  4132fc:	9c e0 00 04 	l.addi r7,r0,0x4
        menustate = MENU_MISC2;
  413300:	9d 80 00 05 	l.addi r12,r0,0x5
        OsdWrite(4, "    Acerca de", menusub == 2,0);
        OsdWrite(5, "", 0,0);
        OsdWrite(6, "", 0,0);
        OsdWrite(7, STD_EXIT, menusub == 3,0);

		parentstate = menustate;
  413304:	d8 02 38 00 	l.sb 0x0(r2),r7
        menustate = MENU_MISC2;
  413308:	18 40 00 41 	l.movhi r2,0x41
  41330c:	a8 42 a3 89 	l.ori r2,r2,0xa389
  413310:	00 00 0e 72 	l.j 416cd8 <main+0x7a90>
  413314:	d8 02 60 00 	l.sb 0x0(r2),r12
        break;

    case MENU_MISC2 :

        if (menu)
  413318:	bc 0e 00 00 	l.sfeqi r14,0x0
  41331c:	10 00 00 09 	l.bf 413340 <main+0x40f8>
  413320:	bc 18 00 00 	l.sfeqi r24,0x0
            menusub=0, menustate = MENU_NONE1;
  413324:	18 40 00 41 	l.movhi r2,0x41
  413328:	9d a0 00 00 	l.addi r13,r0,0x0
  41332c:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  413330:	d8 02 68 00 	l.sb 0x0(r2),r13
  413334:	18 40 00 41 	l.movhi r2,0x41
  413338:	a8 42 a3 89 	l.ori r2,r2,0xa389
  41333c:	d8 02 68 00 	l.sb 0x0(r2),r13
		if (left)
  413340:	10 00 00 0b 	l.bf 41336c <main+0x4124>
  413344:	bc 10 00 00 	l.sfeqi r16,0x0
			menusub=0, menustate = MENU_MAIN2_1;
  413348:	18 40 00 41 	l.movhi r2,0x41
  41334c:	9c 60 00 00 	l.addi r3,r0,0x0
  413350:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  413354:	9c 80 00 28 	l.addi r4,r0,0x28
  413358:	d8 02 18 00 	l.sb 0x0(r2),r3
  41335c:	18 40 00 41 	l.movhi r2,0x41
  413360:	a8 42 a3 89 	l.ori r2,r2,0xa389
  413364:	00 00 0e 5d 	l.j 416cd8 <main+0x7a90>
  413368:	d8 02 20 00 	l.sb 0x0(r2),r4
        else if (select)
  41336c:	10 00 0e 5b 	l.bf 416cd8 <main+0x7a90>
  413370:	15 00 00 00 	l.nop 0x0
        {
            if (menusub == 0)	// Reset
  413374:	18 40 00 41 	l.movhi r2,0x41
  413378:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  41337c:	8c 62 00 00 	l.lbz r3,0x0(r2)
  413380:	bc 23 00 00 	l.sfnei r3,0x0
  413384:	10 00 00 06 	l.bf 41339c <main+0x4154>
  413388:	9c a0 00 0b 	l.addi r5,r0,0xb
            {
                menusub = 0;
  41338c:	d8 02 c0 00 	l.sb 0x0(r2),r24
				menustate=MENU_RESET1;
  413390:	18 40 00 41 	l.movhi r2,0x41
  413394:	a8 42 a3 89 	l.ori r2,r2,0xa389
  413398:	d8 02 28 00 	l.sb 0x0(r2),r5
			}
            if (menusub == 1)	// Reconfig
  41339c:	18 40 00 41 	l.movhi r2,0x41
  4133a0:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  4133a4:	8c 62 00 00 	l.lbz r3,0x0(r2)
  4133a8:	bc 23 00 01 	l.sfnei r3,0x1
  4133ac:	10 00 00 07 	l.bf 4133c8 <main+0x4180>
  4133b0:	9c c0 00 00 	l.addi r6,r0,0x0
            {
				menusub=0;
				menustate=MENU_RECONF1;
  4133b4:	9c e0 00 0d 	l.addi r7,r0,0xd
                menusub = 0;
				menustate=MENU_RESET1;
			}
            if (menusub == 1)	// Reconfig
            {
				menusub=0;
  4133b8:	d8 02 30 00 	l.sb 0x0(r2),r6
				menustate=MENU_RECONF1;
  4133bc:	18 40 00 41 	l.movhi r2,0x41
  4133c0:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4133c4:	d8 02 38 00 	l.sb 0x0(r2),r7
			}
            if (menusub == 2)	// About
  4133c8:	18 40 00 41 	l.movhi r2,0x41
  4133cc:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  4133d0:	8c 62 00 00 	l.lbz r3,0x0(r2)
  4133d4:	bc 23 00 02 	l.sfnei r3,0x2
  4133d8:	10 00 00 07 	l.bf 4133f4 <main+0x41ac>
  4133dc:	9d 80 00 00 	l.addi r12,r0,0x0
            {
				menusub=0;
				menustate=MENU_ABOUT1;
  4133e0:	9d a0 00 06 	l.addi r13,r0,0x6
				menusub=0;
				menustate=MENU_RECONF1;
			}
            if (menusub == 2)	// About
            {
				menusub=0;
  4133e4:	d8 02 60 00 	l.sb 0x0(r2),r12
				menustate=MENU_ABOUT1;
  4133e8:	18 40 00 41 	l.movhi r2,0x41
  4133ec:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4133f0:	d8 02 68 00 	l.sb 0x0(r2),r13
			}
            if (menusub == 3)	// Exit
  4133f4:	18 40 00 41 	l.movhi r2,0x41
  4133f8:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  4133fc:	8c 42 00 00 	l.lbz r2,0x0(r2)
  413400:	bc 22 00 03 	l.sfnei r2,0x3
  413404:	10 00 0e 35 	l.bf 416cd8 <main+0x7a90>
  413408:	9c 60 00 00 	l.addi r3,r0,0x0
            {
				menustate=MENU_NONE1;
  41340c:	18 40 00 41 	l.movhi r2,0x41
  413410:	a8 42 a3 89 	l.ori r2,r2,0xa389
  413414:	00 00 0e 31 	l.j 416cd8 <main+0x7a90>
  413418:	d8 02 18 00 	l.sb 0x0(r2),r3
			}
		}
		break;

	case MENU_ABOUT1 :
		helptext=helptexts[HELPTEXT_NONE];
  41341c:	18 40 00 42 	l.movhi r2,0x42
  413420:	9c 80 00 00 	l.addi r4,r0,0x0
  413424:	a8 42 0b 74 	l.ori r2,r2,0xb74
		menumask=0x01;	// Just Exit
  413428:	18 60 00 41 	l.movhi r3,0x41
			}
		}
		break;

	case MENU_ABOUT1 :
		helptext=helptexts[HELPTEXT_NONE];
  41342c:	d4 02 20 00 	l.sw 0x0(r2),r4
		menumask=0x01;	// Just Exit
  413430:	a8 63 a3 8c 	l.ori r3,r3,0xa38c
  413434:	9c 40 00 01 	l.addi r2,r0,0x1
	int i;
	for(i=0;i<64;++i)
	{
		stars[i].x=(quickrand()%228)<<4;	// X centre
		stars[i].y=(quickrand()%56)<<4;	// Y centre
			stars[i].dx=-(quickrand()&7)-3;
  413438:	9d c0 ff fd 	l.addi r14,r0,0xfffffffd
  41343c:	d4 03 10 00 	l.sw 0x0(r3),r2
 		OsdSetTitle("Acerca de",0);
  413440:	18 60 00 41 	l.movhi r3,0x41
  413444:	07 ff bf eb 	l.jal 4033f0 <OsdSetTitle>
  413448:	a8 63 8e e2 	l.ori r3,r3,0x8ee2
		OsdDrawLogo(0,0,1);
  41344c:	9c 60 00 00 	l.addi r3,r0,0x0
  413450:	07 ff ed b9 	l.jal 40eb34 <OsdDrawLogo.clone.11>
  413454:	a8 83 00 00 	l.ori r4,r3,0x0
		OsdDrawLogo(1,1,1);
  413458:	a8 62 00 00 	l.ori r3,r2,0x0
  41345c:	a8 82 00 00 	l.ori r4,r2,0x0
  413460:	07 ff ed b5 	l.jal 40eb34 <OsdDrawLogo.clone.11>
  413464:	18 40 00 41 	l.movhi r2,0x41
		OsdDrawLogo(2,2,1);
  413468:	9c 60 00 02 	l.addi r3,r0,0x2
//        OsdWriteDoubleSize(2,"   Minimig",0);
//        OsdWriteDoubleSize(3,"   Minimig",1);
//        OsdWrite(4, "", 0,0);
        OsdWrite(5, "", 0,0);
        OsdWrite(6, "", 0,0);
        OsdWrite(7, STD_EXIT, menusub == 0,0);
  41346c:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
		helptext=helptexts[HELPTEXT_NONE];
		menumask=0x01;	// Just Exit
 		OsdSetTitle("Acerca de",0);
		OsdDrawLogo(0,0,1);
		OsdDrawLogo(1,1,1);
		OsdDrawLogo(2,2,1);
  413470:	07 ff ed b1 	l.jal 40eb34 <OsdDrawLogo.clone.11>
  413474:	a8 83 00 00 	l.ori r4,r3,0x0
		OsdDrawLogo(3,3,1);
  413478:	9c 60 00 03 	l.addi r3,r0,0x3
  41347c:	07 ff ed ae 	l.jal 40eb34 <OsdDrawLogo.clone.11>
  413480:	a8 83 00 00 	l.ori r4,r3,0x0
		OsdDrawLogo(4,4,1);
  413484:	9c 60 00 04 	l.addi r3,r0,0x4
  413488:	07 ff ed ab 	l.jal 40eb34 <OsdDrawLogo.clone.11>
  41348c:	a8 83 00 00 	l.ori r4,r3,0x0
		OsdDrawLogo(6,6,1);
  413490:	9c 60 00 06 	l.addi r3,r0,0x6
  413494:	07 ff ed a8 	l.jal 40eb34 <OsdDrawLogo.clone.11>
  413498:	a8 83 00 00 	l.ori r4,r3,0x0
//        OsdWrite(1, "", 0,0);
//        OsdWriteDoubleSize(2,"   Minimig",0);
//        OsdWriteDoubleSize(3,"   Minimig",1);
//        OsdWrite(4, "", 0,0);
        OsdWrite(5, "", 0,0);
  41349c:	9c a0 00 00 	l.addi r5,r0,0x0
  4134a0:	18 80 00 41 	l.movhi r4,0x41
  4134a4:	a8 c5 00 00 	l.ori r6,r5,0x0
  4134a8:	9c 60 00 05 	l.addi r3,r0,0x5
  4134ac:	07 ff c2 51 	l.jal 403df0 <OsdWrite>
  4134b0:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(6, "", 0,0);
  4134b4:	9c a0 00 00 	l.addi r5,r0,0x0
  4134b8:	18 80 00 41 	l.movhi r4,0x41
  4134bc:	a8 c5 00 00 	l.ori r6,r5,0x0
  4134c0:	9c 60 00 06 	l.addi r3,r0,0x6
  4134c4:	07 ff c2 4b 	l.jal 403df0 <OsdWrite>
  4134c8:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(7, STD_EXIT, menusub == 0,0);
  4134cc:	8c a2 00 00 	l.lbz r5,0x0(r2)
  4134d0:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  4134d4:	18 80 00 41 	l.movhi r4,0x41
  4134d8:	18 40 00 41 	l.movhi r2,0x41
  4134dc:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  4134e0:	9c 60 00 07 	l.addi r3,r0,0x7
  4134e4:	a8 84 8b a4 	l.ori r4,r4,0x8ba4
  4134e8:	9c c0 00 00 	l.addi r6,r0,0x0
  4134ec:	07 ff c2 41 	l.jal 403df0 <OsdWrite>
  4134f0:	a8 42 fd 68 	l.ori r2,r2,0xfd68
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

	int i;
	for(i=0;i<64;++i)
	{
		stars[i].x=(quickrand()%228)<<4;	// X centre
  4134f4:	07 ff bf b0 	l.jal 4033b4 <quickrand.44673>
  4134f8:	15 00 00 00 	l.nop 0x0
  4134fc:	9c 80 00 e4 	l.addi r4,r0,0xe4
  413500:	07 ff b3 4a 	l.jal 400228 <__modsi3>
  413504:	a8 6b 00 00 	l.ori r3,r11,0x0
  413508:	b9 6b 00 04 	l.slli r11,r11,0x4
		stars[i].y=(quickrand()%56)<<4;	// Y centre
  41350c:	07 ff bf aa 	l.jal 4033b4 <quickrand.44673>
  413510:	d4 02 58 00 	l.sw 0x0(r2),r11
  413514:	9c 80 00 38 	l.addi r4,r0,0x38
  413518:	07 ff b3 44 	l.jal 400228 <__modsi3>
  41351c:	a8 6b 00 00 	l.ori r3,r11,0x0
  413520:	b9 6b 00 04 	l.slli r11,r11,0x4
			stars[i].dx=-(quickrand()&7)-3;
  413524:	07 ff bf a4 	l.jal 4033b4 <quickrand.44673>
  413528:	d4 02 58 04 	l.sw 0x4(r2),r11
  41352c:	a5 6b 00 07 	l.andi r11,r11,0x7
		stars[i].dy=0;
  413530:	9c a0 00 00 	l.addi r5,r0,0x0
	int i;
	for(i=0;i<64;++i)
	{
		stars[i].x=(quickrand()%228)<<4;	// X centre
		stars[i].y=(quickrand()%56)<<4;	// Y centre
			stars[i].dx=-(quickrand()&7)-3;
  413534:	e1 6e 58 02 	l.sub r11,r14,r11
void StarsInit()
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

	int i;
	for(i=0;i<64;++i)
  413538:	18 c0 00 42 	l.movhi r6,0x42
	{
		stars[i].x=(quickrand()%228)<<4;	// X centre
		stars[i].y=(quickrand()%56)<<4;	// Y centre
			stars[i].dx=-(quickrand()&7)-3;
  41353c:	d4 02 58 08 	l.sw 0x8(r2),r11
		stars[i].dy=0;
  413540:	d4 02 28 0c 	l.sw 0xc(r2),r5
void StarsInit()
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

	int i;
	for(i=0;i<64;++i)
  413544:	a8 c6 01 68 	l.ori r6,r6,0x168
	{
		stars[i].x=(quickrand()%228)<<4;	// X centre
		stars[i].y=(quickrand()%56)<<4;	// Y centre
			stars[i].dx=-(quickrand()&7)-3;
		stars[i].dy=0;
  413548:	9c 42 00 10 	l.addi r2,r2,0x10
void StarsInit()
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L1);

	int i;
	for(i=0;i<64;++i)
  41354c:	e4 22 30 00 	l.sfne r2,r6
  413550:	13 ff ff e9 	l.bf 4134f4 <main+0x42ac>
  413554:	15 00 00 00 	l.nop 0x0

		StarsInit();
		ScrollReset();
  413558:	07 ff c3 59 	l.jal 4042bc <ScrollReset>
  41355c:	18 40 00 41 	l.movhi r2,0x41

		parentstate = menustate;
  413560:	a8 42 fd 24 	l.ori r2,r2,0xfd24
  413564:	9c e0 00 06 	l.addi r7,r0,0x6
        menustate = MENU_ABOUT2;
  413568:	9d 80 00 07 	l.addi r12,r0,0x7
        OsdWrite(7, STD_EXIT, menusub == 0,0);

		StarsInit();
		ScrollReset();

		parentstate = menustate;
  41356c:	d8 02 38 00 	l.sb 0x0(r2),r7
        menustate = MENU_ABOUT2;
  413570:	18 40 00 41 	l.movhi r2,0x41
  413574:	a8 42 a3 89 	l.ori r2,r2,0xa389
  413578:	00 00 0d d8 	l.j 416cd8 <main+0x7a90>
  41357c:	d8 02 60 00 	l.sb 0x0(r2),r12
	int i,j;
	for(i=0;i<8;++i)
	{
		for(j=0;j<256;++j)
		{
			framebuffer[i][j]=0;
  413580:	9d a0 00 00 	l.addi r13,r0,0x0
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	int i,j;
	for(i=0;i<8;++i)
	{
		for(j=0;j<256;++j)
  413584:	9c 63 00 01 	l.addi r3,r3,0x1
		{
			framebuffer[i][j]=0;
  413588:	d8 04 68 00 	l.sb 0x0(r4),r13
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	int i,j;
	for(i=0;i<8;++i)
	{
		for(j=0;j<256;++j)
  41358c:	bc 23 01 00 	l.sfnei r3,0x100
  413590:	13 ff ff fd 	l.bf 413584 <main+0x433c>
  413594:	9c 84 00 01 	l.addi r4,r4,0x1
void framebuffer_clear()
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	int i,j;
	for(i=0;i<8;++i)
  413598:	9c 42 00 01 	l.addi r2,r2,0x1
  41359c:	bc 22 00 08 	l.sfnei r2,0x8
  4135a0:	10 00 00 06 	l.bf 4135b8 <main+0x4370>
  4135a4:	18 60 00 42 	l.movhi r3,0x42
  4135a8:	00 00 00 09 	l.j 4135cc <main+0x4384>
  4135ac:	18 40 00 41 	l.movhi r2,0x41
            menustate = parentstate;
        }
	}


    switch (menustate)
  4135b0:	9c 40 00 00 	l.addi r2,r0,0x0
  4135b4:	18 60 00 42 	l.movhi r3,0x42
  4135b8:	b8 82 00 08 	l.slli r4,r2,0x8
  4135bc:	a8 63 01 68 	l.ori r3,r3,0x168
  4135c0:	e0 84 18 00 	l.add r4,r4,r3
  4135c4:	03 ff ff ef 	l.j 413580 <main+0x4338>
  4135c8:	9c 60 00 00 	l.addi r3,r0,0x0
		stars[i].x+=stars[i].dx;
		stars[i].y+=stars[i].dy;
		if((stars[i].x<0)||(stars[i].x>(228<<4)) ||
			(stars[i].y<0)||(stars[i].y>(56<<4)))
		{
			stars[i].x=228<<4;
  4135cc:	9f 00 0e 40 	l.addi r24,r0,0xe40
void framebuffer_clear()
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	int i,j;
	for(i=0;i<8;++i)
  4135d0:	a8 42 fd 68 	l.ori r2,r2,0xfd68
		if((stars[i].x<0)||(stars[i].x>(228<<4)) ||
			(stars[i].y<0)||(stars[i].y>(56<<4)))
		{
			stars[i].x=228<<4;
			stars[i].y=(quickrand()%56)<<4;
			stars[i].dx=-(quickrand()&7)-3;
  4135d4:	9e c0 ff fd 	l.addi r22,r0,0xfffffffd
void framebuffer_clear()
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	int i,j;
	for(i=0;i<8;++i)
  4135d8:	9e 42 00 08 	l.addi r18,r2,0x8
  4135dc:	9d c2 00 04 	l.addi r14,r2,0x4
  4135e0:	9e 02 00 0c 	l.addi r16,r2,0xc

void framebuffer_plot(int x,int y)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	framebuffer[y/8][x]|=(1<<(y & 7));
  4135e4:	9e 80 00 01 	l.addi r20,r0,0x1

	framebuffer_clear();
	int i;
	for(i=0;i<64;++i)
	{
		stars[i].x+=stars[i].dx;
  4135e8:	84 82 00 00 	l.lwz r4,0x0(r2)
  4135ec:	84 72 00 00 	l.lwz r3,0x0(r18)
  4135f0:	e0 64 18 00 	l.add r3,r4,r3
  4135f4:	d4 02 18 00 	l.sw 0x0(r2),r3
		stars[i].y+=stars[i].dy;
  4135f8:	84 90 00 00 	l.lwz r4,0x0(r16)
  4135fc:	84 6e 00 00 	l.lwz r3,0x0(r14)
  413600:	e0 64 18 00 	l.add r3,r4,r3
  413604:	d4 0e 18 00 	l.sw 0x0(r14),r3
		if((stars[i].x<0)||(stars[i].x>(228<<4)) ||
  413608:	84 82 00 00 	l.lwz r4,0x0(r2)
  41360c:	bc 44 0e 40 	l.sfgtui r4,0xe40
  413610:	10 00 00 06 	l.bf 413628 <main+0x43e0>
  413614:	bd 83 00 00 	l.sfltsi r3,0x0
  413618:	10 00 00 04 	l.bf 413628 <main+0x43e0>
  41361c:	bd a3 03 80 	l.sflesi r3,0x380
			(stars[i].y<0)||(stars[i].y>(56<<4)))
  413620:	10 00 00 0f 	l.bf 41365c <main+0x4414>
  413624:	15 00 00 00 	l.nop 0x0
		{
			stars[i].x=228<<4;
			stars[i].y=(quickrand()%56)<<4;
  413628:	07 ff bf 63 	l.jal 4033b4 <quickrand.44673>
  41362c:	d4 02 c0 00 	l.sw 0x0(r2),r24
  413630:	9c 80 00 38 	l.addi r4,r0,0x38
  413634:	07 ff b2 fd 	l.jal 400228 <__modsi3>
  413638:	a8 6b 00 00 	l.ori r3,r11,0x0
  41363c:	b9 6b 00 04 	l.slli r11,r11,0x4
			stars[i].dx=-(quickrand()&7)-3;
  413640:	07 ff bf 5d 	l.jal 4033b4 <quickrand.44673>
  413644:	d4 0e 58 00 	l.sw 0x0(r14),r11
  413648:	a5 6b 00 07 	l.andi r11,r11,0x7
			stars[i].dy=0;
  41364c:	9c 80 00 00 	l.addi r4,r0,0x0
		if((stars[i].x<0)||(stars[i].x>(228<<4)) ||
			(stars[i].y<0)||(stars[i].y>(56<<4)))
		{
			stars[i].x=228<<4;
			stars[i].y=(quickrand()%56)<<4;
			stars[i].dx=-(quickrand()&7)-3;
  413650:	e1 76 58 02 	l.sub r11,r22,r11
  413654:	d4 12 58 00 	l.sw 0x0(r18),r11
			stars[i].dy=0;
  413658:	d4 10 20 00 	l.sw 0x0(r16),r4
		}			
		framebuffer_plot(stars[i].x>>4,stars[i].y>>4);
  41365c:	84 6e 00 00 	l.lwz r3,0x0(r14)
  413660:	84 a2 00 00 	l.lwz r5,0x0(r2)
  413664:	b8 83 00 84 	l.srai r4,r3,0x4

void framebuffer_plot(int x,int y)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	framebuffer[y/8][x]|=(1<<(y & 7));
  413668:	b8 63 00 9f 	l.srai r3,r3,0x1f
			stars[i].x=228<<4;
			stars[i].y=(quickrand()%56)<<4;
			stars[i].dx=-(quickrand()&7)-3;
			stars[i].dy=0;
		}			
		framebuffer_plot(stars[i].x>>4,stars[i].y>>4);
  41366c:	b8 a5 00 84 	l.srai r5,r5,0x4
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	framebuffer_clear();
	int i;
	for(i=0;i<64;++i)
  413670:	18 c0 00 42 	l.movhi r6,0x42

void framebuffer_plot(int x,int y)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	framebuffer[y/8][x]|=(1<<(y & 7));
  413674:	a4 63 00 07 	l.andi r3,r3,0x7
  413678:	9c 42 00 10 	l.addi r2,r2,0x10
  41367c:	e0 63 20 00 	l.add r3,r3,r4
  413680:	a4 84 00 07 	l.andi r4,r4,0x7
  413684:	b8 63 00 83 	l.srai r3,r3,0x3
  413688:	e0 94 20 08 	l.sll r4,r20,r4
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	framebuffer_clear();
	int i;
	for(i=0;i<64;++i)
  41368c:	a8 c6 01 68 	l.ori r6,r6,0x168

void framebuffer_plot(int x,int y)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	framebuffer[y/8][x]|=(1<<(y & 7));
  413690:	b8 63 00 08 	l.slli r3,r3,0x8
  413694:	9e 52 00 10 	l.addi r18,r18,0x10
  413698:	9d ce 00 10 	l.addi r14,r14,0x10
  41369c:	e0 63 28 00 	l.add r3,r3,r5
  4136a0:	18 a0 00 42 	l.movhi r5,0x42
  4136a4:	9e 10 00 10 	l.addi r16,r16,0x10
  4136a8:	a8 a5 01 68 	l.ori r5,r5,0x168
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	framebuffer_clear();
	int i;
	for(i=0;i<64;++i)
  4136ac:	e4 22 30 00 	l.sfne r2,r6

void framebuffer_plot(int x,int y)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	framebuffer[y/8][x]|=(1<<(y & 7));
  4136b0:	e0 63 28 00 	l.add r3,r3,r5
  4136b4:	8c a3 00 00 	l.lbz r5,0x0(r3)
  4136b8:	e0 84 28 04 	l.or r4,r4,r5
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	framebuffer_clear();
	int i;
	for(i=0;i<64;++i)
  4136bc:	13 ff ff cb 	l.bf 4135e8 <main+0x43a0>
  4136c0:	d8 03 20 00 	l.sb 0x0(r3),r4
        menustate = MENU_ABOUT2;
        break;

	case MENU_ABOUT2 :
		StarsUpdate();
		OsdDrawLogo(0,0,1);
  4136c4:	9c 60 00 00 	l.addi r3,r0,0x0
  4136c8:	07 ff ed 1b 	l.jal 40eb34 <OsdDrawLogo.clone.11>
  4136cc:	a8 83 00 00 	l.ori r4,r3,0x0
		OsdDrawLogo(1,1,1);
  4136d0:	9c 60 00 01 	l.addi r3,r0,0x1
  4136d4:	07 ff ed 18 	l.jal 40eb34 <OsdDrawLogo.clone.11>
  4136d8:	a8 83 00 00 	l.ori r4,r3,0x0
		OsdDrawLogo(2,2,1);
  4136dc:	9c 60 00 02 	l.addi r3,r0,0x2
  4136e0:	07 ff ed 15 	l.jal 40eb34 <OsdDrawLogo.clone.11>
  4136e4:	a8 83 00 00 	l.ori r4,r3,0x0
		OsdDrawLogo(3,3,1);
  4136e8:	9c 60 00 03 	l.addi r3,r0,0x3
  4136ec:	07 ff ed 12 	l.jal 40eb34 <OsdDrawLogo.clone.11>
  4136f0:	a8 83 00 00 	l.ori r4,r3,0x0
		OsdDrawLogo(4,4,1);
  4136f4:	9c 60 00 04 	l.addi r3,r0,0x4
  4136f8:	07 ff ed 0f 	l.jal 40eb34 <OsdDrawLogo.clone.11>
  4136fc:	a8 83 00 00 	l.ori r4,r3,0x0
		OsdDrawLogo(6,6,1);
  413700:	9c 60 00 06 	l.addi r3,r0,0x6
  413704:	07 ff ed 0c 	l.jal 40eb34 <OsdDrawLogo.clone.11>
  413708:	a8 83 00 00 	l.ori r4,r3,0x0
		ScrollText(6,"                                 Minimig Por Dennis van Weeren.  Mejoras en el Chipset por Jakub Bednarski y Sascha Boing.  TG68 softcore y port del Chameleon por Tobias Gubener.  Menu / otros Por Dennis van Weeren, Jakub Bednarski y Alastair M. Robinson.  Compilado por Christian Vogelgsang. El logo de Minimig esta basado en el diseño de Loriano Pagni.  Minimig se distribuye bajo los terminos de GNU General Public License version 3.  Firmware personalizado para el proyecto UnAmiga basado en el trabajo de Jepalza y los usuarios del grupo de telegram. Pseudo traducido por @Edu Arana en 2018.",0,0,0);
  41370c:	9c a0 00 00 	l.addi r5,r0,0x0
  413710:	18 80 00 41 	l.movhi r4,0x41
  413714:	a8 e5 00 00 	l.ori r7,r5,0x0
  413718:	9c 60 00 06 	l.addi r3,r0,0x6
  41371c:	a8 84 8e ec 	l.ori r4,r4,0x8eec
  413720:	07 ff ed c9 	l.jal 40ee44 <ScrollText>
  413724:	a8 c5 00 00 	l.ori r6,r5,0x0
        if (select || menu)
  413728:	84 e1 00 0c 	l.lwz r7,0xc(r1)
  41372c:	bc 07 00 00 	l.sfeqi r7,0x0
  413730:	10 00 0d 6a 	l.bf 416cd8 <main+0x7a90>
  413734:	9d 80 00 02 	l.addi r12,r0,0x2
        {
			menusub = 2;
  413738:	18 40 00 41 	l.movhi r2,0x41
  41373c:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
			menustate=MENU_MISC1;
  413740:	9d a0 00 04 	l.addi r13,r0,0x4
		OsdDrawLogo(4,4,1);
		OsdDrawLogo(6,6,1);
		ScrollText(6,"                                 Minimig Por Dennis van Weeren.  Mejoras en el Chipset por Jakub Bednarski y Sascha Boing.  TG68 softcore y port del Chameleon por Tobias Gubener.  Menu / otros Por Dennis van Weeren, Jakub Bednarski y Alastair M. Robinson.  Compilado por Christian Vogelgsang. El logo de Minimig esta basado en el diseño de Loriano Pagni.  Minimig se distribuye bajo los terminos de GNU General Public License version 3.  Firmware personalizado para el proyecto UnAmiga basado en el trabajo de Jepalza y los usuarios del grupo de telegram. Pseudo traducido por @Edu Arana en 2018.",0,0,0);
        if (select || menu)
        {
			menusub = 2;
  413744:	d8 02 60 00 	l.sb 0x0(r2),r12
			menustate=MENU_MISC1;
  413748:	18 40 00 41 	l.movhi r2,0x41
  41374c:	a8 42 a3 89 	l.ori r2,r2,0xa389
  413750:	00 00 0d 62 	l.j 416cd8 <main+0x7a90>
  413754:	d8 02 68 00 	l.sb 0x0(r2),r13
		}
		break;

    case MENU_LOADCONFIG_1 :
		helptext=helptexts[HELPTEXT_NONE];
  413758:	18 40 00 42 	l.movhi r2,0x42
  41375c:	9c 60 00 00 	l.addi r3,r0,0x0
  413760:	a8 42 0b 74 	l.ori r2,r2,0xb74
  413764:	d4 02 18 00 	l.sw 0x0(r2),r3
		if(parentstate!=menustate)	// First run?
  413768:	18 40 00 41 	l.movhi r2,0x41
  41376c:	a8 42 fd 24 	l.ori r2,r2,0xfd24
  413770:	8c 42 00 00 	l.lbz r2,0x0(r2)
  413774:	bc 02 00 2a 	l.sfeqi r2,0x2a
  413778:	10 00 00 3c 	l.bf 413868 <main+0x4620>
  41377c:	9c 60 00 20 	l.addi r3,r0,0x20
		{
			menumask=0x20;
  413780:	18 40 00 41 	l.movhi r2,0x41
  413784:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
  413788:	d4 02 18 00 	l.sw 0x0(r2),r3
			SetConfigurationFilename(0); if(ConfigurationExists(0)) menumask|=0x01;
  41378c:	07 ff c3 ad 	l.jal 404640 <SetConfigurationFilename>
  413790:	9c 60 00 00 	l.addi r3,r0,0x0
  413794:	07 ff e6 5e 	l.jal 40d10c <ConfigurationExists.clone.6>
  413798:	15 00 00 00 	l.nop 0x0
  41379c:	bc 0b 00 00 	l.sfeqi r11,0x0
  4137a0:	10 00 00 05 	l.bf 4137b4 <main+0x456c>
  4137a4:	15 00 00 00 	l.nop 0x0
  4137a8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4137ac:	a8 63 00 01 	l.ori r3,r3,0x1
  4137b0:	d4 02 18 00 	l.sw 0x0(r2),r3
			SetConfigurationFilename(1); if(ConfigurationExists(0)) menumask|=0x02;
  4137b4:	07 ff c3 a3 	l.jal 404640 <SetConfigurationFilename>
  4137b8:	9c 60 00 01 	l.addi r3,r0,0x1
  4137bc:	07 ff e6 54 	l.jal 40d10c <ConfigurationExists.clone.6>
  4137c0:	15 00 00 00 	l.nop 0x0
  4137c4:	bc 0b 00 00 	l.sfeqi r11,0x0
  4137c8:	10 00 00 06 	l.bf 4137e0 <main+0x4598>
  4137cc:	18 40 00 41 	l.movhi r2,0x41
  4137d0:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
  4137d4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4137d8:	a8 63 00 02 	l.ori r3,r3,0x2
  4137dc:	d4 02 18 00 	l.sw 0x0(r2),r3
			SetConfigurationFilename(2); if(ConfigurationExists(0)) menumask|=0x04;
  4137e0:	07 ff c3 98 	l.jal 404640 <SetConfigurationFilename>
  4137e4:	9c 60 00 02 	l.addi r3,r0,0x2
  4137e8:	07 ff e6 49 	l.jal 40d10c <ConfigurationExists.clone.6>
  4137ec:	15 00 00 00 	l.nop 0x0
  4137f0:	bc 0b 00 00 	l.sfeqi r11,0x0
  4137f4:	10 00 00 06 	l.bf 41380c <main+0x45c4>
  4137f8:	18 40 00 41 	l.movhi r2,0x41
  4137fc:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
  413800:	84 62 00 00 	l.lwz r3,0x0(r2)
  413804:	a8 63 00 04 	l.ori r3,r3,0x4
  413808:	d4 02 18 00 	l.sw 0x0(r2),r3
			SetConfigurationFilename(3); if(ConfigurationExists(0)) menumask|=0x08;
  41380c:	07 ff c3 8d 	l.jal 404640 <SetConfigurationFilename>
  413810:	9c 60 00 03 	l.addi r3,r0,0x3
  413814:	07 ff e6 3e 	l.jal 40d10c <ConfigurationExists.clone.6>
  413818:	15 00 00 00 	l.nop 0x0
  41381c:	bc 0b 00 00 	l.sfeqi r11,0x0
  413820:	10 00 00 06 	l.bf 413838 <main+0x45f0>
  413824:	18 40 00 41 	l.movhi r2,0x41
  413828:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
  41382c:	84 62 00 00 	l.lwz r3,0x0(r2)
  413830:	a8 63 00 08 	l.ori r3,r3,0x8
  413834:	d4 02 18 00 	l.sw 0x0(r2),r3
			SetConfigurationFilename(4); if(ConfigurationExists(0)) menumask|=0x10;
  413838:	07 ff c3 82 	l.jal 404640 <SetConfigurationFilename>
  41383c:	9c 60 00 04 	l.addi r3,r0,0x4
  413840:	07 ff e6 33 	l.jal 40d10c <ConfigurationExists.clone.6>
  413844:	15 00 00 00 	l.nop 0x0
  413848:	bc 0b 00 00 	l.sfeqi r11,0x0
  41384c:	10 00 00 07 	l.bf 413868 <main+0x4620>
  413850:	15 00 00 00 	l.nop 0x0
  413854:	18 40 00 41 	l.movhi r2,0x41
  413858:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
  41385c:	84 62 00 00 	l.lwz r3,0x0(r2)
  413860:	a8 63 00 10 	l.ori r3,r3,0x10
  413864:	d4 02 18 00 	l.sw 0x0(r2),r3
		}
		parentstate=menustate;
  413868:	1a 00 00 41 	l.movhi r16,0x41
  41386c:	18 40 00 41 	l.movhi r2,0x41
  413870:	aa 10 a3 89 	l.ori r16,r16,0xa389
  413874:	a8 42 fd 24 	l.ori r2,r2,0xfd24
  413878:	8c 90 00 00 	l.lbz r4,0x0(r16)
 		OsdSetTitle("Cargar",0);
  41387c:	18 60 00 41 	l.movhi r3,0x41
			SetConfigurationFilename(1); if(ConfigurationExists(0)) menumask|=0x02;
			SetConfigurationFilename(2); if(ConfigurationExists(0)) menumask|=0x04;
			SetConfigurationFilename(3); if(ConfigurationExists(0)) menumask|=0x08;
			SetConfigurationFilename(4); if(ConfigurationExists(0)) menumask|=0x10;
		}
		parentstate=menustate;
  413880:	d8 02 20 00 	l.sb 0x0(r2),r4
 		OsdSetTitle("Cargar",0);
  413884:	a8 63 91 42 	l.ori r3,r3,0x9142
  413888:	9c 80 00 00 	l.addi r4,r0,0x0
  41388c:	07 ff be d9 	l.jal 4033f0 <OsdSetTitle>
  413890:	18 40 00 41 	l.movhi r2,0x41

        OsdWrite(0, "", 0,0);
  413894:	9c 60 00 00 	l.addi r3,r0,0x0
  413898:	18 80 00 41 	l.movhi r4,0x41
  41389c:	a8 a3 00 00 	l.ori r5,r3,0x0
  4138a0:	a8 c3 00 00 	l.ori r6,r3,0x0
  4138a4:	a8 84 83 f7 	l.ori r4,r4,0x83f7
  4138a8:	07 ff c1 52 	l.jal 403df0 <OsdWrite>
  4138ac:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
        OsdWrite(1, "          Defecto", menusub == 0,(menumask & 1)==0);
  4138b0:	18 60 00 41 	l.movhi r3,0x41
  4138b4:	8c 42 00 00 	l.lbz r2,0x0(r2)
  4138b8:	a8 63 a3 8c 	l.ori r3,r3,0xa38c
  4138bc:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  4138c0:	85 c3 00 00 	l.lwz r14,0x0(r3)
  4138c4:	18 80 00 41 	l.movhi r4,0x41
  4138c8:	9c 60 00 01 	l.addi r3,r0,0x1
  4138cc:	a4 ce 00 01 	l.andi r6,r14,0x1
  4138d0:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  4138d4:	e0 c6 18 05 	l.xor r6,r6,r3
  4138d8:	07 ff c1 46 	l.jal 403df0 <OsdWrite>
  4138dc:	a8 84 91 49 	l.ori r4,r4,0x9149
        OsdWrite(2, "          1", menusub == 1,(menumask & 2)==0);
  4138e0:	a4 6e 00 02 	l.andi r3,r14,0x2
  4138e4:	ac a2 00 01 	l.xori r5,r2,0x1
  4138e8:	e0 c0 18 02 	l.sub r6,r0,r3
  4138ec:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  4138f0:	e0 66 18 04 	l.or r3,r6,r3
  4138f4:	18 80 00 41 	l.movhi r4,0x41
  4138f8:	ac c3 ff ff 	l.xori r6,r3,0xffffffff
  4138fc:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  413900:	b8 c6 00 5f 	l.srli r6,r6,0x1f
  413904:	9c 60 00 02 	l.addi r3,r0,0x2
  413908:	07 ff c1 3a 	l.jal 403df0 <OsdWrite>
  41390c:	a8 84 91 5b 	l.ori r4,r4,0x915b
        OsdWrite(3, "          2", menusub == 2,(menumask & 4)==0);
  413910:	a4 6e 00 04 	l.andi r3,r14,0x4
  413914:	ac a2 00 02 	l.xori r5,r2,0x2
  413918:	e0 c0 18 02 	l.sub r6,r0,r3
  41391c:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  413920:	e0 66 18 04 	l.or r3,r6,r3
  413924:	18 80 00 41 	l.movhi r4,0x41
  413928:	ac c3 ff ff 	l.xori r6,r3,0xffffffff
  41392c:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  413930:	b8 c6 00 5f 	l.srli r6,r6,0x1f
  413934:	9c 60 00 03 	l.addi r3,r0,0x3
  413938:	07 ff c1 2e 	l.jal 403df0 <OsdWrite>
  41393c:	a8 84 91 67 	l.ori r4,r4,0x9167
        OsdWrite(4, "          3", menusub == 3,(menumask & 8)==0);
  413940:	a4 6e 00 08 	l.andi r3,r14,0x8
  413944:	ac a2 00 03 	l.xori r5,r2,0x3
  413948:	e0 c0 18 02 	l.sub r6,r0,r3
  41394c:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  413950:	e0 66 18 04 	l.or r3,r6,r3
  413954:	18 80 00 41 	l.movhi r4,0x41
  413958:	ac c3 ff ff 	l.xori r6,r3,0xffffffff
  41395c:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  413960:	b8 c6 00 5f 	l.srli r6,r6,0x1f
  413964:	9c 60 00 04 	l.addi r3,r0,0x4
  413968:	a8 84 91 73 	l.ori r4,r4,0x9173
  41396c:	07 ff c1 21 	l.jal 403df0 <OsdWrite>
  413970:	a5 ce 00 10 	l.andi r14,r14,0x10
        OsdWrite(5, "          4", menusub == 4,(menumask & 0x10)==0);
  413974:	e0 c0 70 02 	l.sub r6,r0,r14
  413978:	ac a2 00 04 	l.xori r5,r2,0x4
  41397c:	e1 c6 70 04 	l.or r14,r6,r14
  413980:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  413984:	ac ce ff ff 	l.xori r6,r14,0xffffffff
  413988:	18 80 00 41 	l.movhi r4,0x41
  41398c:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  413990:	b8 c6 00 5f 	l.srli r6,r6,0x1f
  413994:	9c 60 00 05 	l.addi r3,r0,0x5
  413998:	a8 84 91 7f 	l.ori r4,r4,0x917f
  41399c:	07 ff c1 15 	l.jal 403df0 <OsdWrite>
  4139a0:	ac 42 00 05 	l.xori r2,r2,0x5
        OsdWrite(6, "", 0,0);
  4139a4:	9c a0 00 00 	l.addi r5,r0,0x0
  4139a8:	18 80 00 41 	l.movhi r4,0x41
  4139ac:	a8 c5 00 00 	l.ori r6,r5,0x0
  4139b0:	9c 60 00 06 	l.addi r3,r0,0x6
  4139b4:	07 ff c1 0f 	l.jal 403df0 <OsdWrite>
  4139b8:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(7, STD_EXIT, menusub == 5,0);
  4139bc:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  4139c0:	18 80 00 41 	l.movhi r4,0x41
  4139c4:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  4139c8:	9c 60 00 07 	l.addi r3,r0,0x7
  4139cc:	a8 84 8b a4 	l.ori r4,r4,0x8ba4
  4139d0:	07 ff c1 08 	l.jal 403df0 <OsdWrite>
  4139d4:	9c c0 00 00 	l.addi r6,r0,0x0

        menustate = MENU_LOADCONFIG_2;
  4139d8:	9c a0 00 2b 	l.addi r5,r0,0x2b
  4139dc:	00 00 0c bf 	l.j 416cd8 <main+0x7a90>
  4139e0:	d8 10 28 00 	l.sb 0x0(r16),r5
        break;

    case MENU_LOADCONFIG_2 :

        if (down)
  4139e4:	bc 14 00 00 	l.sfeqi r20,0x0
  4139e8:	10 00 00 0e 	l.bf 413a20 <main+0x47d8>
  4139ec:	bc 10 00 00 	l.sfeqi r16,0x0
        {
//            if (menusub < 3)
            if (menusub < 5)
  4139f0:	18 40 00 41 	l.movhi r2,0x41
  4139f4:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  4139f8:	8c 62 00 00 	l.lbz r3,0x0(r2)
  4139fc:	bc 43 00 04 	l.sfgtui r3,0x4
  413a00:	10 00 00 03 	l.bf 413a0c <main+0x47c4>
  413a04:	9c 63 00 01 	l.addi r3,r3,0x1
                menusub++;
  413a08:	d8 02 18 00 	l.sb 0x0(r2),r3
            menustate = MENU_LOADCONFIG_1;
  413a0c:	18 40 00 41 	l.movhi r2,0x41
  413a10:	9c c0 00 2a 	l.addi r6,r0,0x2a
  413a14:	a8 42 a3 89 	l.ori r2,r2,0xa389
  413a18:	00 00 00 16 	l.j 413a70 <main+0x4828>
  413a1c:	d8 02 30 00 	l.sb 0x0(r2),r6
        }
        else if (select)
  413a20:	10 00 00 15 	l.bf 413a74 <main+0x482c>
  413a24:	bc 0e 00 00 	l.sfeqi r14,0x0
        {
			if(menusub<5)
  413a28:	18 80 00 41 	l.movhi r4,0x41
  413a2c:	18 40 00 41 	l.movhi r2,0x41
  413a30:	a8 84 a3 8a 	l.ori r4,r4,0xa38a
  413a34:	8e 04 00 00 	l.lbz r16,0x0(r4)
  413a38:	bc 50 00 04 	l.sfgtui r16,0x4
  413a3c:	10 00 00 0a 	l.bf 413a64 <main+0x481c>
  413a40:	a8 42 a3 89 	l.ori r2,r2,0xa389
			{
				OsdDisable();
  413a44:	07 ff c1 4c 	l.jal 403f74 <OsdDisable>
  413a48:	15 00 00 00 	l.nop 0x0
				SetConfigurationFilename(menusub);
  413a4c:	07 ff c2 fd 	l.jal 404640 <SetConfigurationFilename>
  413a50:	a8 70 00 00 	l.ori r3,r16,0x0
				LoadConfiguration(NULL);
  413a54:	07 ff e5 ba 	l.jal 40d13c <LoadConfiguration.clone.7>
  413a58:	15 00 00 00 	l.nop 0x0
//				OsdReset(RESET_NORMAL);
	   	        menustate = MENU_NONE1;
  413a5c:	00 00 00 05 	l.j 413a70 <main+0x4828>
  413a60:	d8 02 a0 00 	l.sb 0x0(r2),r20
			}
			else
			{
				menustate = MENU_MAIN2_1;
  413a64:	9c e0 00 28 	l.addi r7,r0,0x28
				menusub = 0;
  413a68:	d8 04 a0 00 	l.sb 0x0(r4),r20
//				OsdReset(RESET_NORMAL);
	   	        menustate = MENU_NONE1;
			}
			else
			{
				menustate = MENU_MAIN2_1;
  413a6c:	d8 02 38 00 	l.sb 0x0(r2),r7
				menusub = 0;
			}
        }
        if (menu) // exit menu
  413a70:	bc 0e 00 00 	l.sfeqi r14,0x0
  413a74:	10 00 0c 99 	l.bf 416cd8 <main+0x7a90>
  413a78:	9d 80 00 28 	l.addi r12,r0,0x28
        {
            menustate = MENU_MAIN2_1;
  413a7c:	18 40 00 41 	l.movhi r2,0x41
  413a80:	a8 42 a3 89 	l.ori r2,r2,0xa389
            menusub = 0;
  413a84:	9d a0 00 00 	l.addi r13,r0,0x0
				menusub = 0;
			}
        }
        if (menu) // exit menu
        {
            menustate = MENU_MAIN2_1;
  413a88:	d8 02 60 00 	l.sb 0x0(r2),r12
            menusub = 0;
  413a8c:	18 40 00 41 	l.movhi r2,0x41
  413a90:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  413a94:	00 00 0c 91 	l.j 416cd8 <main+0x7a90>
  413a98:	d8 02 68 00 	l.sb 0x0(r2),r13

        /******************************************************************/
        /* file selection menu                                            */
        /******************************************************************/
    case MENU_FILE_SELECT1 :
		helptext=helptexts[HELPTEXT_NONE];
  413a9c:	18 40 00 42 	l.movhi r2,0x42
  413aa0:	9c 60 00 00 	l.addi r3,r0,0x0
  413aa4:	a8 42 0b 74 	l.ori r2,r2,0xb74
 		OsdSetTitle("Seleccionar",0);
  413aa8:	9c 80 00 00 	l.addi r4,r0,0x0

        /******************************************************************/
        /* file selection menu                                            */
        /******************************************************************/
    case MENU_FILE_SELECT1 :
		helptext=helptexts[HELPTEXT_NONE];
  413aac:	d4 02 18 00 	l.sw 0x0(r2),r3
 		OsdSetTitle("Seleccionar",0);
  413ab0:	18 60 00 41 	l.movhi r3,0x41
    char *lfn;
    char *info;
    char *p;
    unsigned char j;

    s[32] = 0; // set temporary string length to OSD line length
  413ab4:	18 40 00 41 	l.movhi r2,0x41
        /******************************************************************/
        /* file selection menu                                            */
        /******************************************************************/
    case MENU_FILE_SELECT1 :
		helptext=helptexts[HELPTEXT_NONE];
 		OsdSetTitle("Seleccionar",0);
  413ab8:	a8 63 91 8b 	l.ori r3,r3,0x918b
  413abc:	07 ff be 4d 	l.jal 4033f0 <OsdSetTitle>
  413ac0:	a8 42 cd 18 	l.ori r2,r2,0xcd18
    char *lfn;
    char *info;
    char *p;
    unsigned char j;

    s[32] = 0; // set temporary string length to OSD line length
  413ac4:	9c 80 00 00 	l.addi r4,r0,0x0

	ScrollReset();
  413ac8:	1b 00 00 41 	l.movhi r24,0x41
    char *lfn;
    char *info;
    char *p;
    unsigned char j;

    s[32] = 0; // set temporary string length to OSD line length
  413acc:	d8 02 20 20 	l.sb 0x20(r2),r4
                }

                if (len > 30)
                    len = 30; // trim display length if longer than 30 characters

                if (i != iSelectedEntry && info != NULL)
  413ad0:	1b 80 00 41 	l.movhi r28,0x41
    char *p;
    unsigned char j;

    s[32] = 0; // set temporary string length to OSD line length

	ScrollReset();
  413ad4:	07 ff c1 fa 	l.jal 4042bc <ScrollReset>
  413ad8:	19 c0 00 41 	l.movhi r14,0x41
  413adc:	ab 18 fd 2c 	l.ori r24,r24,0xfd2c
  413ae0:	9e 40 00 00 	l.addi r18,r0,0x0
                }

                if (len > 30)
                    len = 30; // trim display length if longer than 30 characters

                if (i != iSelectedEntry && info != NULL)
  413ae4:	ab 9c a3 53 	l.ori r28,r28,0xa353
                k = i - 1; // no need to check if k is valid since i is greater than zero

                c = lfn[k]; // get the first character to the left of the matched template substring
                if (c >= '0' && c <= '9') // check if a digit
                {
                    info[1] = c; // copy to buffer
  413ae8:	00 00 00 f9 	l.j 413ecc <main+0x4c84>
  413aec:	a9 ce a3 40 	l.ori r14,r14,0xa340
		*q++ = c;
  413af0:	d8 05 30 00 	l.sb 0x0(r5),r6
  413af4:	9c a5 00 01 	l.addi r5,r5,0x1
	asm volatile ("cld ; rep ; stosq ; movl %3,%%ecx ; rep ; stosb"
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
  413af8:	18 e0 00 41 	l.movhi r7,0x41
  413afc:	a8 e7 cd 38 	l.ori r7,r7,0xcd38
  413b00:	e4 25 38 00 	l.sfne r5,r7
  413b04:	13 ff ff fb 	l.bf 413af0 <main+0x48a8>
  413b08:	9c c0 00 20 	l.addi r6,r0,0x20
	ScrollReset();

    for (i = 0; i < 8; i++)
    {
        memset(s, ' ', 32); // clear line buffer
        if (i < nDirEntries)
  413b0c:	19 80 00 41 	l.movhi r12,0x41
  413b10:	a9 8c a3 52 	l.ori r12,r12,0xa352
  413b14:	8c 4c 00 00 	l.lbz r2,0x0(r12)
  413b18:	e4 7a 10 00 	l.sfgeu r26,r2
  413b1c:	10 00 00 d6 	l.bf 413e74 <main+0x4c2c>
  413b20:	bc 3a 00 00 	l.sfnei r26,0x0
  413b24:	19 a0 00 41 	l.movhi r13,0x41
        {
            k = sort_table[i]; // ordered index in storage buffer
            lfn = DirEntryLFN[k]; // long file name pointer
            DirEntryInfo[i][0] = 0; // clear disk number info buffer
  413b28:	9c 80 00 00 	l.addi r4,r0,0x0
  413b2c:	a9 ad e7 d0 	l.ori r13,r13,0xe7d0
  413b30:	d8 18 20 00 	l.sb 0x0(r24),r4
  413b34:	e0 52 68 00 	l.add r2,r18,r13
    for (i = 0; i < 8; i++)
    {
        memset(s, ' ', 32); // clear line buffer
        if (i < nDirEntries)
        {
            k = sort_table[i]; // ordered index in storage buffer
  413b38:	8e 82 00 00 	l.lbz r20,0x0(r2)
            lfn = DirEntryLFN[k]; // long file name pointer
  413b3c:	b8 74 00 02 	l.slli r3,r20,0x2
  413b40:	b8 54 00 08 	l.slli r2,r20,0x8
  413b44:	e0 43 10 00 	l.add r2,r3,r2
  413b48:	18 60 00 41 	l.movhi r3,0x41
  413b4c:	e0 42 a0 00 	l.add r2,r2,r20
  413b50:	a8 63 de a8 	l.ori r3,r3,0xdea8
  413b54:	e0 42 18 00 	l.add r2,r2,r3
            DirEntryInfo[i][0] = 0; // clear disk number info buffer

            if (lfn[0]) // item has long name
  413b58:	90 62 00 00 	l.lbs r3,0x0(r2)
  413b5c:	bc 03 00 00 	l.sfeqi r3,0x0
  413b60:	10 00 00 8c 	l.bf 413d90 <main+0x4b48>
  413b64:	ba d4 00 05 	l.slli r22,r20,0x5
            {
                len = strlen(lfn); // get name length
  413b68:	07 ff b1 e3 	l.jal 4002f4 <strlen>
  413b6c:	a8 62 00 00 	l.ori r3,r2,0x0
                info = NULL; // no disk info

                if (!(DirEntry[k].Attributes & ATTR_DIRECTORY)) // if a file
  413b70:	18 a0 00 41 	l.movhi r5,0x41
  413b74:	a8 a5 e6 d0 	l.ori r5,r5,0xe6d0
  413b78:	e2 d6 28 00 	l.add r22,r22,r5
  413b7c:	8c 76 00 0b 	l.lbz r3,0xb(r22)
            DirEntryInfo[i][0] = 0; // clear disk number info buffer

            if (lfn[0]) // item has long name
            {
                len = strlen(lfn); // get name length
                info = NULL; // no disk info
  413b80:	9e c0 00 00 	l.addi r22,r0,0x0

                if (!(DirEntry[k].Attributes & ATTR_DIRECTORY)) // if a file
  413b84:	a4 63 00 10 	l.andi r3,r3,0x10
  413b88:	e4 23 b0 00 	l.sfne r3,r22
  413b8c:	10 00 00 67 	l.bf 413d28 <main+0x4ae0>
  413b90:	aa 0b 00 00 	l.ori r16,r11,0x0
                {
                if (len > 4)
  413b94:	bc ab 00 04 	l.sfleui r11,0x4
  413b98:	10 00 00 09 	l.bf 413bbc <main+0x4974>
  413b9c:	bd b0 00 14 	l.sflesi r16,0x14
                    if (lfn[len-4] == '.')
  413ba0:	e0 62 58 00 	l.add r3,r2,r11
  413ba4:	90 63 ff fc 	l.lbs r3,0xfffffffc(r3)
  413ba8:	bc 23 00 2e 	l.sfnei r3,0x2e
  413bac:	10 00 00 04 	l.bf 413bbc <main+0x4974>
  413bb0:	bd b0 00 14 	l.sflesi r16,0x14
                        len -= 4; // remove extension
  413bb4:	9e 0b ff fc 	l.addi r16,r11,0xfffffffc
    static char info[] = "XX/XX"; // temporary buffer
    static char template[4] = " of "; // template substring to search for
    char *ptr1, *ptr2, c;
    unsigned char cmp;

    if (len > 20) // scan only names which can't be fully displayed
  413bb8:	bd b0 00 14 	l.sflesi r16,0x14
  413bbc:	10 00 00 5a 	l.bf 413d24 <main+0x4adc>
  413bc0:	15 00 00 00 	l.nop 0x0
  413bc4:	a4 d0 ff ff 	l.andi r6,r16,0xffff
  413bc8:	9c b0 ff fa 	l.addi r5,r16,0xfffffffa
  413bcc:	9c c6 ff fb 	l.addi r6,r6,0xfffffffb
                k = i - 1; // no need to check if k is valid since i is greater than zero

                c = lfn[k]; // get the first character to the left of the matched template substring
                if (c >= '0' && c <= '9') // check if a digit
                {
                    info[1] = c; // copy to buffer
  413bd0:	91 0e 00 01 	l.lbs r8,0x1(r14)
  413bd4:	b8 c6 00 10 	l.slli r6,r6,0x10
                    info[0] = ' '; // clear previous character
  413bd8:	90 8e 00 00 	l.lbs r4,0x0(r14)
  413bdc:	b8 c6 00 90 	l.srai r6,r6,0x10
    static char info[] = "XX/XX"; // temporary buffer
    static char template[4] = " of "; // template substring to search for
    char *ptr1, *ptr2, c;
    unsigned char cmp;

    if (len > 20) // scan only names which can't be fully displayed
  413be0:	a4 a5 ff ff 	l.andi r5,r5,0xffff
  413be4:	9d 80 00 01 	l.addi r12,r0,0x1
  413be8:	e0 c2 30 00 	l.add r6,r2,r6
  413bec:	00 00 00 47 	l.j 413d08 <main+0x4ac0>
  413bf0:	9d 60 00 05 	l.addi r11,r0,0x5
  413bf4:	a8 e6 00 00 	l.ori r7,r6,0x0
    {
        for (i = (unsigned short)len - 1 - sizeof(template); i > 0; i--) // scan through the file name starting from its end
        {
            ptr1 = &lfn[i]; // current start position
            ptr2 = template;
  413bf8:	00 00 00 08 	l.j 413c18 <main+0x49d0>
  413bfc:	a8 63 a3 3c 	l.ori r3,r3,0xa33c
            cmp = 0;
            for (k = 0; (unsigned int)k < sizeof(template); k++) // scan through template
            {
                cmp |= *ptr1++ ^ *ptr2++; // compare substrings' characters one by one
                if (cmp)
  413c00:	91 e3 00 00 	l.lbs r15,0x0(r3)
  413c04:	91 a7 00 00 	l.lbs r13,0x0(r7)
  413c08:	e4 2f 68 00 	l.sfne r15,r13
  413c0c:	10 00 00 3c 	l.bf 413cfc <main+0x4ab4>
  413c10:	9c e7 00 01 	l.addi r7,r7,0x1
            ptr1 = &lfn[i]; // current start position
            ptr2 = template;
            cmp = 0;
            for (k = 0; (unsigned int)k < sizeof(template); k++) // scan through template
            {
                cmp |= *ptr1++ ^ *ptr2++; // compare substrings' characters one by one
  413c14:	9c 63 00 01 	l.addi r3,r3,0x1
        for (i = (unsigned short)len - 1 - sizeof(template); i > 0; i--) // scan through the file name starting from its end
        {
            ptr1 = &lfn[i]; // current start position
            ptr2 = template;
            cmp = 0;
            for (k = 0; (unsigned int)k < sizeof(template); k++) // scan through template
  413c18:	19 a0 00 41 	l.movhi r13,0x41
  413c1c:	a9 ad a3 40 	l.ori r13,r13,0xa340
  413c20:	e4 23 68 00 	l.sfne r3,r13
  413c24:	13 ff ff f7 	l.bf 413c00 <main+0x49b8>
  413c28:	15 00 00 00 	l.nop 0x0
  413c2c:	b8 e5 00 10 	l.slli r7,r5,0x10
  413c30:	b8 e7 00 90 	l.srai r7,r7,0x10

            if (!cmp) // match found
            {
                k = i - 1; // no need to check if k is valid since i is greater than zero

                c = lfn[k]; // get the first character to the left of the matched template substring
  413c34:	e0 62 38 00 	l.add r3,r2,r7
  413c38:	90 63 00 00 	l.lbs r3,0x0(r3)
                if (c >= '0' && c <= '9') // check if a digit
  413c3c:	9d a3 ff d0 	l.addi r13,r3,0xffffffd0
  413c40:	a5 ad 00 ff 	l.andi r13,r13,0xff
  413c44:	bc 4d 00 09 	l.sfgtui r13,0x9
  413c48:	10 00 00 2d 	l.bf 413cfc <main+0x4ab4>
  413c4c:	9c e7 ff ff 	l.addi r7,r7,0xffffffff
                {
                    info[1] = c; // copy to buffer
                    info[0] = ' '; // clear previous character
                    k--; // go to the preceding character
  413c50:	b8 e7 00 10 	l.slli r7,r7,0x10
  413c54:	b8 e7 00 90 	l.srai r7,r7,0x10
                    if (k >= 0) // check if index is valid
  413c58:	bc 07 ff ff 	l.sfeqi r7,0xffffffff
  413c5c:	10 00 00 0a 	l.bf 413c84 <main+0x4a3c>
  413c60:	9c 80 00 20 	l.addi r4,r0,0x20
                    {
                        c = lfn[k];
  413c64:	e0 e2 38 00 	l.add r7,r2,r7
  413c68:	90 87 00 00 	l.lbs r4,0x0(r7)
                        if (c >= '0' && c <= '9') // check if a digit
  413c6c:	9c e4 ff d0 	l.addi r7,r4,0xffffffd0
  413c70:	a4 e7 00 ff 	l.andi r7,r7,0xff
  413c74:	bc 47 00 09 	l.sfgtui r7,0x9
  413c78:	0c 00 00 04 	l.bnf 413c88 <main+0x4a40>
  413c7c:	e0 e5 58 00 	l.add r7,r5,r11

                c = lfn[k]; // get the first character to the left of the matched template substring
                if (c >= '0' && c <= '9') // check if a digit
                {
                    info[1] = c; // copy to buffer
                    info[0] = ' '; // clear previous character
  413c80:	9c 80 00 20 	l.addi r4,r0,0x20
  413c84:	e0 e5 58 00 	l.add r7,r5,r11
                    k--; // go to the preceding character
                    if (k >= 0) // check if index is valid
                    {
                        c = lfn[k];
                        if (c >= '0' && c <= '9') // check if a digit
  413c88:	b8 e7 00 10 	l.slli r7,r7,0x10
  413c8c:	b8 e7 00 90 	l.srai r7,r7,0x10
                            info[0] = c; // copy to buffer
                    }

                    k = i + sizeof(template); // get first character to the right of the mached template substring
                    c = lfn[k]; // no need to check if index is valid
  413c90:	e1 02 38 00 	l.add r8,r2,r7
  413c94:	91 08 00 00 	l.lbs r8,0x0(r8)
                    if (c >= '0' && c <= '9') // check if a digit
  413c98:	9d a8 ff d0 	l.addi r13,r8,0xffffffd0
  413c9c:	a5 ad 00 ff 	l.andi r13,r13,0xff
  413ca0:	bc 4d 00 09 	l.sfgtui r13,0x9
  413ca4:	10 00 00 15 	l.bf 413cf8 <main+0x4ab0>
  413ca8:	15 00 00 00 	l.nop 0x0
  413cac:	d8 0e 18 01 	l.sb 0x1(r14),r3
                    {
                        info[3] = c; // copy to buffer
                        info[4] = ' '; // clear next char
  413cb0:	9c 60 00 20 	l.addi r3,r0,0x20
                            info[0] = c; // copy to buffer
                    }

                    k = i + sizeof(template); // get first character to the right of the mached template substring
                    c = lfn[k]; // no need to check if index is valid
                    if (c >= '0' && c <= '9') // check if a digit
  413cb4:	d8 0e 20 00 	l.sb 0x0(r14),r4
                    {
                        info[3] = c; // copy to buffer
                        info[4] = ' '; // clear next char
  413cb8:	d8 0e 18 04 	l.sb 0x4(r14),r3
                        k++; // go to the followwing character
  413cbc:	9c 67 00 01 	l.addi r3,r7,0x1
  413cc0:	b8 63 00 10 	l.slli r3,r3,0x10
  413cc4:	b8 63 00 90 	l.srai r3,r3,0x10
                        if (k < len) // check if index is valid
  413cc8:	e5 63 80 00 	l.sfges r3,r16
  413ccc:	10 00 0c 07 	l.bf 416ce8 <main+0x7aa0>
  413cd0:	d8 0e 40 03 	l.sb 0x3(r14),r8
                        {
                            c = lfn[k];
  413cd4:	e0 62 18 00 	l.add r3,r2,r3
  413cd8:	90 63 00 00 	l.lbs r3,0x0(r3)
                            if (c >= '0' && c <= '9') // check if a digit
  413cdc:	9c 83 ff d0 	l.addi r4,r3,0xffffffd0
  413ce0:	a4 84 00 ff 	l.andi r4,r4,0xff
  413ce4:	bc 44 00 09 	l.sfgtui r4,0x9
  413ce8:	10 00 0c 01 	l.bf 416cec <main+0x7aa4>
  413cec:	18 80 00 41 	l.movhi r4,0x41
                                info[4] = c; // copy to buffer
  413cf0:	00 00 0b ff 	l.j 416cec <main+0x7aa4>
  413cf4:	d8 0e 18 04 	l.sb 0x4(r14),r3
                k = i - 1; // no need to check if k is valid since i is greater than zero

                c = lfn[k]; // get the first character to the left of the matched template substring
                if (c >= '0' && c <= '9') // check if a digit
                {
                    info[1] = c; // copy to buffer
  413cf8:	a9 03 00 00 	l.ori r8,r3,0x0
                        k++; // go to the followwing character
                        if (k < len) // check if index is valid
                        {
                            c = lfn[k];
                            if (c >= '0' && c <= '9') // check if a digit
                                info[4] = c; // copy to buffer
  413cfc:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  413d00:	9c c6 ff ff 	l.addi r6,r6,0xffffffff
  413d04:	a4 a5 ff ff 	l.andi r5,r5,0xffff
  413d08:	e0 65 60 00 	l.add r3,r5,r12
    char *ptr1, *ptr2, c;
    unsigned char cmp;

    if (len > 20) // scan only names which can't be fully displayed
    {
        for (i = (unsigned short)len - 1 - sizeof(template); i > 0; i--) // scan through the file name starting from its end
  413d0c:	b8 63 00 10 	l.slli r3,r3,0x10
  413d10:	bd 43 00 00 	l.sfgtsi r3,0x0
  413d14:	13 ff ff b8 	l.bf 413bf4 <main+0x49ac>
  413d18:	18 60 00 41 	l.movhi r3,0x41
  413d1c:	d8 0e 40 01 	l.sb 0x1(r14),r8
  413d20:	d8 0e 20 00 	l.sb 0x0(r14),r4
            DirEntryInfo[i][0] = 0; // clear disk number info buffer

            if (lfn[0]) // item has long name
            {
                len = strlen(lfn); // get name length
                info = NULL; // no disk info
  413d24:	9e c0 00 00 	l.addi r22,r0,0x0
                }

                if (len > 30)
                    len = 30; // trim display length if longer than 30 characters

                if (i != iSelectedEntry && info != NULL)
  413d28:	e0 60 b0 02 	l.sub r3,r0,r22
  413d2c:	e0 76 18 04 	l.or r3,r22,r3
  413d30:	bd 63 00 00 	l.sfgesi r3,0x0
  413d34:	10 00 00 10 	l.bf 413d74 <main+0x4b2c>
  413d38:	bc b0 00 1e 	l.sfleui r16,0x1e
  413d3c:	8c 7c 00 00 	l.lbz r3,0x0(r28)
  413d40:	e4 1a 18 00 	l.sfeq r26,r3
  413d44:	10 00 00 0c 	l.bf 413d74 <main+0x4b2c>
  413d48:	bc b0 00 1e 	l.sfleui r16,0x1e
                { // display disk number info for not selected items
                    strncpy(s + 1, lfn, 30-6); // trimmed name
  413d4c:	18 60 00 41 	l.movhi r3,0x41
  413d50:	a8 82 00 00 	l.ori r4,r2,0x0
  413d54:	a8 63 cd 19 	l.ori r3,r3,0xcd19
  413d58:	07 ff b1 85 	l.jal 40036c <strncpy>
  413d5c:	9c a0 00 18 	l.addi r5,r0,0x18
                    strncpy(s + 1+30-5, info, 5); // disk number
  413d60:	18 60 00 41 	l.movhi r3,0x41
  413d64:	a8 96 00 00 	l.ori r4,r22,0x0
  413d68:	a8 63 cd 32 	l.ori r3,r3,0xcd32
  413d6c:	00 00 00 33 	l.j 413e38 <main+0x4bf0>
  413d70:	9c a0 00 05 	l.addi r5,r0,0x5
                }
                else
                    strncpy(s + 1, lfn, len); // display only name
  413d74:	10 00 00 03 	l.bf 413d80 <main+0x4b38>
  413d78:	a8 b0 00 00 	l.ori r5,r16,0x0
  413d7c:	9c a0 00 1e 	l.addi r5,r0,0x1e
  413d80:	18 60 00 41 	l.movhi r3,0x41
  413d84:	a8 82 00 00 	l.ori r4,r2,0x0
  413d88:	00 00 00 2c 	l.j 413e38 <main+0x4bf0>
  413d8c:	a8 63 cd 19 	l.ori r3,r3,0xcd19
            }
            else  // no LFN
            {
                strncpy(s + 1, (const char*)DirEntry[k].Name, 8); // if no LFN then display base name (8 chars)
  413d90:	18 80 00 41 	l.movhi r4,0x41
  413d94:	9c 65 ff e1 	l.addi r3,r5,0xffffffe1
  413d98:	a8 84 e6 d0 	l.ori r4,r4,0xe6d0
  413d9c:	9c a0 00 08 	l.addi r5,r0,0x8
  413da0:	e0 56 20 00 	l.add r2,r22,r4
  413da4:	07 ff b1 72 	l.jal 40036c <strncpy>
  413da8:	a8 82 00 00 	l.ori r4,r2,0x0
                if (DirEntry[k].Attributes & ATTR_DIRECTORY && DirEntry[k].Extension[0] != ' ')
  413dac:	9c 62 00 08 	l.addi r3,r2,0x8
  413db0:	8c 83 00 03 	l.lbz r4,0x3(r3)
  413db4:	a4 84 00 10 	l.andi r4,r4,0x10
  413db8:	bc 04 00 00 	l.sfeqi r4,0x0
  413dbc:	10 00 00 22 	l.bf 413e44 <main+0x4bfc>
  413dc0:	19 80 00 41 	l.movhi r12,0x41
  413dc4:	8c 63 00 00 	l.lbz r3,0x0(r3)
  413dc8:	bc 03 00 20 	l.sfeqi r3,0x20
  413dcc:	10 00 00 1e 	l.bf 413e44 <main+0x4bfc>
  413dd0:	9c 82 00 07 	l.addi r4,r2,0x7
                {
                    p = (char*)&DirEntry[k].Name[7];
                    j = 8;
  413dd4:	9c 40 00 08 	l.addi r2,r0,0x8
                    do
                    {
                        if (*p-- != ' ')
  413dd8:	90 64 00 00 	l.lbs r3,0x0(r4)
  413ddc:	bc 23 00 20 	l.sfnei r3,0x20
  413de0:	10 00 00 07 	l.bf 413dfc <main+0x4bb4>
  413de4:	9c 84 ff ff 	l.addi r4,r4,0xffffffff
                            break;
                    } while (--j);
  413de8:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
  413dec:	a4 42 00 ff 	l.andi r2,r2,0xff
  413df0:	bc 22 00 00 	l.sfnei r2,0x0
  413df4:	13 ff ff f9 	l.bf 413dd8 <main+0x4b90>
  413df8:	15 00 00 00 	l.nop 0x0

                    s[1 + j++] = '.';
  413dfc:	18 a0 00 41 	l.movhi r5,0x41
  413e00:	9c c0 00 2e 	l.addi r6,r0,0x2e
  413e04:	a8 a5 cd 18 	l.ori r5,r5,0xcd18
                    strncpy(s + 1 + j, (const char*)DirEntry[k].Extension, 3); // if no LFN then display base name (8 chars)
  413e08:	b8 94 00 05 	l.slli r4,r20,0x5
                    {
                        if (*p-- != ' ')
                            break;
                    } while (--j);

                    s[1 + j++] = '.';
  413e0c:	e0 62 28 00 	l.add r3,r2,r5
                    strncpy(s + 1 + j, (const char*)DirEntry[k].Extension, 3); // if no LFN then display base name (8 chars)
  413e10:	18 e0 00 41 	l.movhi r7,0x41
                    {
                        if (*p-- != ' ')
                            break;
                    } while (--j);

                    s[1 + j++] = '.';
  413e14:	d8 03 30 01 	l.sb 0x1(r3),r6
  413e18:	9c 62 00 01 	l.addi r3,r2,0x1
                    strncpy(s + 1 + j, (const char*)DirEntry[k].Extension, 3); // if no LFN then display base name (8 chars)
  413e1c:	9c 84 00 08 	l.addi r4,r4,0x8
  413e20:	a4 63 00 ff 	l.andi r3,r3,0xff
  413e24:	a8 e7 e6 d0 	l.ori r7,r7,0xe6d0
  413e28:	9c 63 00 01 	l.addi r3,r3,0x1
  413e2c:	e0 84 38 00 	l.add r4,r4,r7
  413e30:	e0 63 28 00 	l.add r3,r3,r5
  413e34:	9c a0 00 03 	l.addi r5,r0,0x3
  413e38:	07 ff b1 4d 	l.jal 40036c <strncpy>
  413e3c:	15 00 00 00 	l.nop 0x0
                }
            }

            if (DirEntry[k].Attributes & ATTR_DIRECTORY) // mark directory with suffix
  413e40:	19 80 00 41 	l.movhi r12,0x41
  413e44:	ba 94 00 05 	l.slli r20,r20,0x5
  413e48:	a9 8c e6 d0 	l.ori r12,r12,0xe6d0
  413e4c:	e2 94 60 00 	l.add r20,r20,r12
  413e50:	8c 54 00 0b 	l.lbz r2,0xb(r20)
  413e54:	a4 42 00 10 	l.andi r2,r2,0x10
  413e58:	bc 02 00 00 	l.sfeqi r2,0x0
  413e5c:	10 00 00 0f 	l.bf 413e98 <main+0x4c50>
  413e60:	18 60 00 41 	l.movhi r3,0x41
                strcpy(&s[22], " <DIR>");
  413e64:	18 80 00 41 	l.movhi r4,0x41
  413e68:	a8 63 cd 2e 	l.ori r3,r3,0xcd2e
  413e6c:	00 00 00 09 	l.j 413e90 <main+0x4c48>
  413e70:	a8 84 91 97 	l.ori r4,r4,0x9197
        }
        else
        {
            if (i == 0 && nDirEntries == 0) // selected directory is empty
  413e74:	10 00 00 09 	l.bf 413e98 <main+0x4c50>
  413e78:	bc 22 00 00 	l.sfnei r2,0x0
  413e7c:	10 00 00 07 	l.bf 413e98 <main+0x4c50>
  413e80:	18 60 00 41 	l.movhi r3,0x41
                strcpy(s, "        sin ficheros!");
  413e84:	18 80 00 41 	l.movhi r4,0x41
  413e88:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  413e8c:	a8 84 91 9e 	l.ori r4,r4,0x919e
  413e90:	07 ff b1 0f 	l.jal 4002cc <strcpy>
  413e94:	15 00 00 00 	l.nop 0x0
        }

        OsdWrite(i, s, i == iSelectedEntry,0); // display formatted line text
  413e98:	8c bc 00 00 	l.lbz r5,0x0(r28)
  413e9c:	e3 5a 28 05 	l.xor r26,r26,r5
  413ea0:	18 80 00 41 	l.movhi r4,0x41
  413ea4:	9c ba ff ff 	l.addi r5,r26,0xffffffff
  413ea8:	a8 72 00 00 	l.ori r3,r18,0x0
  413eac:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  413eb0:	a8 84 cd 18 	l.ori r4,r4,0xcd18
  413eb4:	9c c0 00 00 	l.addi r6,r0,0x0
  413eb8:	07 ff bf ce 	l.jal 403df0 <OsdWrite>
  413ebc:	9e 52 00 01 	l.addi r18,r18,0x1

    s[32] = 0; // set temporary string length to OSD line length

	ScrollReset();

    for (i = 0; i < 8; i++)
  413ec0:	bc 12 00 08 	l.sfeqi r18,0x8
  413ec4:	10 00 00 06 	l.bf 413edc <main+0x4c94>
  413ec8:	9f 18 00 05 	l.addi r24,r24,0x5
  413ecc:	18 a0 00 41 	l.movhi r5,0x41
  413ed0:	a7 52 00 ff 	l.andi r26,r18,0xff
  413ed4:	03 ff ff 09 	l.j 413af8 <main+0x48b0>
  413ed8:	a8 a5 cd 18 	l.ori r5,r5,0xcd18
        /******************************************************************/
    case MENU_FILE_SELECT1 :
		helptext=helptexts[HELPTEXT_NONE];
 		OsdSetTitle("Seleccionar",0);
        PrintDirectory();
        menustate = MENU_FILE_SELECT2;
  413edc:	18 40 00 41 	l.movhi r2,0x41
  413ee0:	9d a0 00 09 	l.addi r13,r0,0x9
  413ee4:	a8 42 a3 89 	l.ori r2,r2,0xa389
  413ee8:	00 00 0b 7c 	l.j 416cd8 <main+0x7a90>
  413eec:	d8 02 68 00 	l.sb 0x0(r2),r13
        break;

    case MENU_FILE_SELECT2 :
		menumask=0;
  413ef0:	18 40 00 41 	l.movhi r2,0x41
  413ef4:	9c 60 00 00 	l.addi r3,r0,0x0
  413ef8:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L2);

// this function is called periodically when file selection window is displayed
// it checks if predefined period of time has elapsed and scrolls the name if necessary

    char k = sort_table[iSelectedEntry];
  413efc:	18 80 00 41 	l.movhi r4,0x41
        PrintDirectory();
        menustate = MENU_FILE_SELECT2;
        break;

    case MENU_FILE_SELECT2 :
		menumask=0;
  413f00:	d4 02 18 00 	l.sw 0x0(r2),r3
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L2);

// this function is called periodically when file selection window is displayed
// it checks if predefined period of time has elapsed and scrolls the name if necessary

    char k = sort_table[iSelectedEntry];
  413f04:	18 40 00 41 	l.movhi r2,0x41
  413f08:	a8 84 e7 d0 	l.ori r4,r4,0xe7d0
  413f0c:	a8 42 a3 53 	l.ori r2,r2,0xa353
	static int len;
	int max_len;

    if (DirEntryLFN[k][0]) // && CheckTimer(scroll_timer)) // scroll if long name and timer delay elapsed
  413f10:	18 a0 00 41 	l.movhi r5,0x41
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L2);

// this function is called periodically when file selection window is displayed
// it checks if predefined period of time has elapsed and scrolls the name if necessary

    char k = sort_table[iSelectedEntry];
  413f14:	8e c2 00 00 	l.lbz r22,0x0(r2)
  413f18:	e0 56 20 00 	l.add r2,r22,r4
	static int len;
	int max_len;

    if (DirEntryLFN[k][0]) // && CheckTimer(scroll_timer)) // scroll if long name and timer delay elapsed
  413f1c:	a8 a5 de a8 	l.ori r5,r5,0xdea8
  DEBUG_FUNC_IN(DEBUG_F_MENU | DEBUG_L2);

// this function is called periodically when file selection window is displayed
// it checks if predefined period of time has elapsed and scrolls the name if necessary

    char k = sort_table[iSelectedEntry];
  413f20:	90 42 00 00 	l.lbs r2,0x0(r2)
	static int len;
	int max_len;

    if (DirEntryLFN[k][0]) // && CheckTimer(scroll_timer)) // scroll if long name and timer delay elapsed
  413f24:	b8 62 00 08 	l.slli r3,r2,0x8
  413f28:	bb 02 00 02 	l.slli r24,r2,0x2
  413f2c:	e3 18 18 00 	l.add r24,r24,r3
  413f30:	e3 18 10 00 	l.add r24,r24,r2
  413f34:	e2 58 28 00 	l.add r18,r24,r5
  413f38:	90 72 00 00 	l.lbs r3,0x0(r18)
  413f3c:	bc 03 00 00 	l.sfeqi r3,0x0
  413f40:	10 00 00 26 	l.bf 413fd8 <main+0x4d90>
  413f44:	bc 3c 00 6a 	l.sfnei r28,0x6a
    {
		// FIXME - yuk, we don't want to do this every frame!
        len = strlen(DirEntryLFN[k]); // get name length
  413f48:	07 ff b0 eb 	l.jal 4002f4 <strlen>
  413f4c:	a8 72 00 00 	l.ori r3,r18,0x0
  413f50:	18 60 00 42 	l.movhi r3,0x42

        if (len > 4)
  413f54:	bd ab 00 04 	l.sflesi r11,0x4
	int max_len;

    if (DirEntryLFN[k][0]) // && CheckTimer(scroll_timer)) // scroll if long name and timer delay elapsed
    {
		// FIXME - yuk, we don't want to do this every frame!
        len = strlen(DirEntryLFN[k]); // get name length
  413f58:	a8 63 0b 6c 	l.ori r3,r3,0xb6c

        if (len > 4)
  413f5c:	10 00 00 0c 	l.bf 413f8c <main+0x4d44>
  413f60:	d4 03 58 00 	l.sw 0x0(r3),r11
            if (DirEntryLFN[k][len - 4] == '.')
  413f64:	9d 6b ff fc 	l.addi r11,r11,0xfffffffc
  413f68:	18 c0 00 41 	l.movhi r6,0x41
  413f6c:	e3 18 58 00 	l.add r24,r24,r11
  413f70:	a8 c6 de a8 	l.ori r6,r6,0xdea8
  413f74:	e3 18 30 00 	l.add r24,r24,r6
  413f78:	90 98 00 00 	l.lbs r4,0x0(r24)
  413f7c:	bc 24 00 2e 	l.sfnei r4,0x2e
  413f80:	10 00 00 04 	l.bf 413f90 <main+0x4d48>
  413f84:	18 e0 00 41 	l.movhi r7,0x41
                len -= 4; // remove extension
  413f88:	d4 03 58 00 	l.sw 0x0(r3),r11

        max_len = 30; // number of file name characters to display (one more required for scrolling)
        if (DirEntry[k].Attributes & ATTR_DIRECTORY)
  413f8c:	18 e0 00 41 	l.movhi r7,0x41
  413f90:	b8 42 00 05 	l.slli r2,r2,0x5
  413f94:	a8 e7 e6 d0 	l.ori r7,r7,0xe6d0
  413f98:	e0 42 38 00 	l.add r2,r2,r7
  413f9c:	8c 42 00 0b 	l.lbz r2,0xb(r2)
  413fa0:	a4 42 00 10 	l.andi r2,r2,0x10
  413fa4:	bc 22 00 00 	l.sfnei r2,0x0
  413fa8:	10 00 00 03 	l.bf 413fb4 <main+0x4d6c>
  413fac:	9c c0 00 19 	l.addi r6,r0,0x19

        if (len > 4)
            if (DirEntryLFN[k][len - 4] == '.')
                len -= 4; // remove extension

        max_len = 30; // number of file name characters to display (one more required for scrolling)
  413fb0:	9c c0 00 1e 	l.addi r6,r0,0x1e
        if (DirEntry[k].Attributes & ATTR_DIRECTORY)
            max_len = 25; // number of directory name characters to display

		ScrollText(iSelectedEntry,DirEntryLFN[k],len,max_len,1);
  413fb4:	b8 76 00 18 	l.slli r3,r22,0x18
  413fb8:	18 40 00 42 	l.movhi r2,0x42
  413fbc:	a8 92 00 00 	l.ori r4,r18,0x0
  413fc0:	a8 42 0b 6c 	l.ori r2,r2,0xb6c
  413fc4:	b8 63 00 98 	l.srai r3,r3,0x18
  413fc8:	84 a2 00 00 	l.lwz r5,0x0(r2)
  413fcc:	07 ff eb 9e 	l.jal 40ee44 <ScrollText>
  413fd0:	9c e0 00 01 	l.addi r7,r0,0x1
    case MENU_FILE_SELECT2 :
		menumask=0;
 
        ScrollLongName(); // scrolls file name if longer than display line

        if (c == KEY_HOME)
  413fd4:	bc 3c 00 6a 	l.sfnei r28,0x6a
  413fd8:	10 00 00 0f 	l.bf 414014 <main+0x4dcc>
  413fdc:	bc 3c 00 41 	l.sfnei r28,0x41
        {
            ScanDirectory(SCAN_INIT, fs_pFileExt, fs_Options);
  413fe0:	18 40 00 41 	l.movhi r2,0x41
  413fe4:	9c 60 00 00 	l.addi r3,r0,0x0
  413fe8:	a8 42 a3 94 	l.ori r2,r2,0xa394
  413fec:	84 82 00 00 	l.lwz r4,0x0(r2)
  413ff0:	18 40 00 41 	l.movhi r2,0x41
  413ff4:	a8 42 fd 59 	l.ori r2,r2,0xfd59
  413ff8:	8c a2 00 00 	l.lbz r5,0x0(r2)
  413ffc:	07 ff cd 75 	l.jal 4075d0 <ScanDirectory>
  414000:	18 40 00 41 	l.movhi r2,0x41
            menustate = MENU_FILE_SELECT1;
  414004:	a8 42 a3 89 	l.ori r2,r2,0xa389
  414008:	9d 80 00 08 	l.addi r12,r0,0x8
  41400c:	00 00 00 58 	l.j 41416c <main+0x4f24>
  414010:	d8 02 60 00 	l.sb 0x0(r2),r12
        }

        if (c == KEY_BACK)
  414014:	10 00 00 39 	l.bf 4140f8 <main+0x4eb0>
  414018:	bc 3c 00 6c 	l.sfnei r28,0x6c
        {
            if (iCurrentDirectory) // if not root directory
  41401c:	18 40 00 41 	l.movhi r2,0x41
  414020:	a8 42 a3 54 	l.ori r2,r2,0xa354
  414024:	84 42 00 00 	l.lwz r2,0x0(r2)
  414028:	bc 02 00 00 	l.sfeqi r2,0x0
  41402c:	10 00 00 51 	l.bf 414170 <main+0x4f28>
  414030:	bc 14 00 00 	l.sfeqi r20,0x0
            {
                ScanDirectory(SCAN_INIT, fs_pFileExt, fs_Options);
  414034:	18 40 00 41 	l.movhi r2,0x41
  414038:	9c 60 00 00 	l.addi r3,r0,0x0
  41403c:	a8 42 a3 94 	l.ori r2,r2,0xa394
  414040:	84 82 00 00 	l.lwz r4,0x0(r2)
  414044:	18 40 00 41 	l.movhi r2,0x41
  414048:	a8 42 fd 59 	l.ori r2,r2,0xfd59
  41404c:	8c a2 00 00 	l.lbz r5,0x0(r2)
  414050:	07 ff cd 60 	l.jal 4075d0 <ScanDirectory>
  414054:	18 40 00 41 	l.movhi r2,0x41
                ChangeDirectory(DirEntry[sort_table[iSelectedEntry]].StartCluster + (fat32 ? (DirEntry[sort_table[iSelectedEntry]].HighCluster & 0x0FFF) << 16 : 0));
  414058:	a8 42 a3 53 	l.ori r2,r2,0xa353
  41405c:	19 a0 00 41 	l.movhi r13,0x41
  414060:	8c 42 00 00 	l.lbz r2,0x0(r2)
  414064:	a9 ad e7 d0 	l.ori r13,r13,0xe7d0
  414068:	e0 42 68 00 	l.add r2,r2,r13
  41406c:	8c 82 00 00 	l.lbz r4,0x0(r2)
  414070:	18 40 00 41 	l.movhi r2,0x41
  414074:	b8 84 00 05 	l.slli r4,r4,0x5
  414078:	a8 42 e6 d0 	l.ori r2,r2,0xe6d0
  41407c:	e0 84 10 00 	l.add r4,r4,r2
  414080:	18 40 00 41 	l.movhi r2,0x41
  414084:	a8 42 a3 51 	l.ori r2,r2,0xa351
  414088:	8c 42 00 00 	l.lbz r2,0x0(r2)
  41408c:	bc 02 00 00 	l.sfeqi r2,0x0
  414090:	10 00 00 05 	l.bf 4140a4 <main+0x4e5c>
  414094:	94 64 00 1a 	l.lhz r3,0x1a(r4)
  414098:	94 44 00 14 	l.lhz r2,0x14(r4)
  41409c:	a4 42 0f ff 	l.andi r2,r2,0xfff
  4140a0:	b8 42 00 10 	l.slli r2,r2,0x10
  4140a4:	e0 62 18 00 	l.add r3,r2,r3
                if (ScanDirectory(SCAN_INIT_FIRST, fs_pFileExt, fs_Options))
  4140a8:	18 40 00 41 	l.movhi r2,0x41
  4140ac:	1a 40 00 41 	l.movhi r18,0x41
        if (c == KEY_BACK)
        {
            if (iCurrentDirectory) // if not root directory
            {
                ScanDirectory(SCAN_INIT, fs_pFileExt, fs_Options);
                ChangeDirectory(DirEntry[sort_table[iSelectedEntry]].StartCluster + (fat32 ? (DirEntry[sort_table[iSelectedEntry]].HighCluster & 0x0FFF) << 16 : 0));
  4140b0:	07 ff bb 5c 	l.jal 402e20 <ChangeDirectory>
  4140b4:	a8 42 fd 59 	l.ori r2,r2,0xfd59
                if (ScanDirectory(SCAN_INIT_FIRST, fs_pFileExt, fs_Options))
  4140b8:	aa 52 a3 94 	l.ori r18,r18,0xa394
  4140bc:	8c a2 00 00 	l.lbz r5,0x0(r2)
  4140c0:	9c 60 00 03 	l.addi r3,r0,0x3
  4140c4:	07 ff cd 43 	l.jal 4075d0 <ScanDirectory>
  4140c8:	84 92 00 00 	l.lwz r4,0x0(r18)
  4140cc:	bc 0b 00 00 	l.sfeqi r11,0x0
  4140d0:	10 00 00 05 	l.bf 4140e4 <main+0x4e9c>
  4140d4:	9c 60 00 04 	l.addi r3,r0,0x4
                    ScanDirectory(SCAN_INIT_NEXT, fs_pFileExt, fs_Options);
  4140d8:	8c a2 00 00 	l.lbz r5,0x0(r2)
  4140dc:	07 ff cd 3d 	l.jal 4075d0 <ScanDirectory>
  4140e0:	84 92 00 00 	l.lwz r4,0x0(r18)

                menustate = MENU_FILE_SELECT1;
  4140e4:	18 40 00 41 	l.movhi r2,0x41
  4140e8:	9c 60 00 08 	l.addi r3,r0,0x8
  4140ec:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4140f0:	00 00 00 1f 	l.j 41416c <main+0x4f24>
  4140f4:	d8 02 18 00 	l.sb 0x0(r2),r3
            }
        }

        if (c == KEY_PGUP)
  4140f8:	10 00 00 0f 	l.bf 414134 <main+0x4eec>
  4140fc:	bc 3c 00 6d 	l.sfnei r28,0x6d
        {
            ScanDirectory(SCAN_PREV_PAGE, fs_pFileExt, fs_Options);
  414100:	18 40 00 41 	l.movhi r2,0x41
  414104:	9c 60 ff fe 	l.addi r3,r0,0xfffffffe
  414108:	a8 42 a3 94 	l.ori r2,r2,0xa394
  41410c:	84 82 00 00 	l.lwz r4,0x0(r2)
  414110:	18 40 00 41 	l.movhi r2,0x41
  414114:	a8 42 fd 59 	l.ori r2,r2,0xfd59
  414118:	8c a2 00 00 	l.lbz r5,0x0(r2)
  41411c:	07 ff cd 2d 	l.jal 4075d0 <ScanDirectory>
  414120:	18 40 00 41 	l.movhi r2,0x41
            menustate = MENU_FILE_SELECT1;        }
  414124:	a8 42 a3 89 	l.ori r2,r2,0xa389
  414128:	9c 80 00 08 	l.addi r4,r0,0x8
  41412c:	00 00 00 10 	l.j 41416c <main+0x4f24>
  414130:	d8 02 20 00 	l.sb 0x0(r2),r4

        if (c == KEY_PGDN)
  414134:	10 00 00 0f 	l.bf 414170 <main+0x4f28>
  414138:	bc 14 00 00 	l.sfeqi r20,0x0
        {
            ScanDirectory(SCAN_NEXT_PAGE, fs_pFileExt, fs_Options);
  41413c:	18 40 00 41 	l.movhi r2,0x41
  414140:	9c 60 00 02 	l.addi r3,r0,0x2
  414144:	a8 42 a3 94 	l.ori r2,r2,0xa394
  414148:	84 82 00 00 	l.lwz r4,0x0(r2)
  41414c:	18 40 00 41 	l.movhi r2,0x41
  414150:	a8 42 fd 59 	l.ori r2,r2,0xfd59
  414154:	8c a2 00 00 	l.lbz r5,0x0(r2)
  414158:	07 ff cd 1e 	l.jal 4075d0 <ScanDirectory>
  41415c:	18 40 00 41 	l.movhi r2,0x41
            menustate = MENU_FILE_SELECT1;
  414160:	a8 42 a3 89 	l.ori r2,r2,0xa389
  414164:	9c a0 00 08 	l.addi r5,r0,0x8
  414168:	d8 02 28 00 	l.sb 0x0(r2),r5
        }

        if (down) // scroll down one entry
  41416c:	bc 14 00 00 	l.sfeqi r20,0x0
  414170:	10 00 00 0f 	l.bf 4141ac <main+0x4f64>
  414174:	bc 1a 00 00 	l.sfeqi r26,0x0
        {
            ScanDirectory(SCAN_NEXT, fs_pFileExt, fs_Options);
  414178:	18 40 00 41 	l.movhi r2,0x41
  41417c:	9c 60 00 01 	l.addi r3,r0,0x1
  414180:	a8 42 a3 94 	l.ori r2,r2,0xa394
  414184:	84 82 00 00 	l.lwz r4,0x0(r2)
  414188:	18 40 00 41 	l.movhi r2,0x41
  41418c:	a8 42 fd 59 	l.ori r2,r2,0xfd59
  414190:	8c a2 00 00 	l.lbz r5,0x0(r2)
  414194:	07 ff cd 0f 	l.jal 4075d0 <ScanDirectory>
  414198:	18 40 00 41 	l.movhi r2,0x41
            menustate = MENU_FILE_SELECT1;
  41419c:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4141a0:	9c c0 00 08 	l.addi r6,r0,0x8
  4141a4:	d8 02 30 00 	l.sb 0x0(r2),r6
        }

        if (up) // scroll up one entry
  4141a8:	bc 1a 00 00 	l.sfeqi r26,0x0
  4141ac:	10 00 00 0d 	l.bf 4141e0 <main+0x4f98>
  4141b0:	18 40 00 41 	l.movhi r2,0x41
        {
            ScanDirectory(SCAN_PREV, fs_pFileExt, fs_Options);
  4141b4:	9c 60 ff ff 	l.addi r3,r0,0xffffffff
  4141b8:	a8 42 a3 94 	l.ori r2,r2,0xa394
  4141bc:	84 82 00 00 	l.lwz r4,0x0(r2)
  4141c0:	18 40 00 41 	l.movhi r2,0x41
  4141c4:	a8 42 fd 59 	l.ori r2,r2,0xfd59
  4141c8:	8c a2 00 00 	l.lbz r5,0x0(r2)
  4141cc:	07 ff cd 01 	l.jal 4075d0 <ScanDirectory>
  4141d0:	18 40 00 41 	l.movhi r2,0x41
            menustate = MENU_FILE_SELECT1;
  4141d4:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4141d8:	9c e0 00 08 	l.addi r7,r0,0x8
  4141dc:	d8 02 38 00 	l.sb 0x0(r2),r7

unsigned char GetASCIIKey(unsigned char keycode)
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

    if (keycode & KEY_UPSTROKE)
  4141e0:	b8 5c 00 18 	l.slli r2,r28,0x18
  4141e4:	bd 82 00 00 	l.sfltsi r2,0x0
  4141e8:	10 00 00 64 	l.bf 414378 <main+0x5130>
  4141ec:	19 80 00 41 	l.movhi r12,0x41
       return 0;

    return keycode_table[keycode & 0x7F];
  4141f0:	a7 9c 00 7f 	l.andi r28,r28,0x7f
  4141f4:	a9 8c 73 84 	l.ori r12,r12,0x7384
  4141f8:	e3 9c 60 00 	l.add r28,r28,r12
  4141fc:	8c 5c 00 00 	l.lbz r2,0x0(r28)
        }

        if ((i = GetASCIIKey(c)))
  414200:	bc 02 00 00 	l.sfeqi r2,0x0
  414204:	10 00 00 5d 	l.bf 414378 <main+0x5130>
  414208:	18 60 00 41 	l.movhi r3,0x41
        { // find an entry beginning with given character
            if (nDirEntries)
  41420c:	a8 63 a3 52 	l.ori r3,r3,0xa352
  414210:	8c 63 00 00 	l.lbz r3,0x0(r3)
  414214:	bc 03 00 00 	l.sfeqi r3,0x0
  414218:	10 00 00 54 	l.bf 414368 <main+0x5120>
  41421c:	18 60 00 41 	l.movhi r3,0x41
            {
                if (DirEntry[sort_table[iSelectedEntry]].Attributes & ATTR_DIRECTORY)
  414220:	19 a0 00 41 	l.movhi r13,0x41
  414224:	a8 63 a3 53 	l.ori r3,r3,0xa353
  414228:	a9 ad e7 d0 	l.ori r13,r13,0xe7d0
  41422c:	8c 63 00 00 	l.lbz r3,0x0(r3)
  414230:	e0 63 68 00 	l.add r3,r3,r13
  414234:	18 80 00 41 	l.movhi r4,0x41
  414238:	8c 63 00 00 	l.lbz r3,0x0(r3)
  41423c:	b8 63 00 05 	l.slli r3,r3,0x5
  414240:	a8 84 e6 d0 	l.ori r4,r4,0xe6d0
  414244:	e0 63 20 00 	l.add r3,r3,r4
  414248:	8c 83 00 0b 	l.lbz r4,0xb(r3)
  41424c:	a4 84 00 10 	l.andi r4,r4,0x10
  414250:	bc 04 00 00 	l.sfeqi r4,0x0
  414254:	10 00 00 18 	l.bf 4142b4 <main+0x506c>
  414258:	8c 63 00 00 	l.lbz r3,0x0(r3)
                { // it's a directory
                    if (i < DirEntry[sort_table[iSelectedEntry]].Name[0])
  41425c:	e4 62 18 00 	l.sfgeu r2,r3
  414260:	10 00 00 07 	l.bf 41427c <main+0x5034>
  414264:	e4 a2 18 00 	l.sfleu r2,r3
                    {
                        if (!ScanDirectory(i, fs_pFileExt, fs_Options | FIND_FILE))
  414268:	1a 40 00 41 	l.movhi r18,0x41
  41426c:	1a 80 00 41 	l.movhi r20,0x41
  414270:	aa 52 a3 94 	l.ori r18,r18,0xa394
  414274:	00 00 00 1d 	l.j 4142e8 <main+0x50a0>
  414278:	aa 94 fd 59 	l.ori r20,r20,0xfd59
  41427c:	1a 40 00 41 	l.movhi r18,0x41
  414280:	1a 80 00 41 	l.movhi r20,0x41
  414284:	aa 52 a3 94 	l.ori r18,r18,0xa394
                            ScanDirectory(i, fs_pFileExt, fs_Options | FIND_DIR);
                    }
                    else if (i > DirEntry[sort_table[iSelectedEntry]].Name[0])
  414288:	0c 00 00 2b 	l.bnf 414334 <main+0x50ec>
  41428c:	aa 94 fd 59 	l.ori r20,r20,0xfd59
                        if (!ScanDirectory(i, fs_pFileExt, fs_Options | FIND_DIR))
                            ScanDirectory(i, fs_pFileExt, fs_Options | FIND_FILE);
                    }
                    else
                    {
                        if (!ScanDirectory(i, fs_pFileExt, fs_Options)) // find nexr
  414290:	8c b4 00 00 	l.lbz r5,0x0(r20)
  414294:	a8 62 00 00 	l.ori r3,r2,0x0
  414298:	07 ff cc ce 	l.jal 4075d0 <ScanDirectory>
  41429c:	84 92 00 00 	l.lwz r4,0x0(r18)
  4142a0:	bc 2b 00 00 	l.sfnei r11,0x0
  4142a4:	10 00 00 31 	l.bf 414368 <main+0x5120>
  4142a8:	15 00 00 00 	l.nop 0x0
                        if (!ScanDirectory(i, fs_pFileExt, fs_Options | FIND_DIR))
                            ScanDirectory(i, fs_pFileExt, fs_Options | FIND_FILE);
                    }
                    else if (i > DirEntry[sort_table[iSelectedEntry]].Name[0])
                    {
                        if (!ScanDirectory(i, fs_pFileExt, fs_Options | FIND_FILE))
  4142ac:	00 00 00 10 	l.j 4142ec <main+0x50a4>
  4142b0:	8c b4 00 00 	l.lbz r5,0x0(r20)
                                ScanDirectory(i, fs_pFileExt, fs_Options | FIND_DIR);
                    }
                }
                else
                { // it's a file
                    if (i < DirEntry[sort_table[iSelectedEntry]].Name[0])
  4142b4:	e4 62 18 00 	l.sfgeu r2,r3
  4142b8:	10 00 00 07 	l.bf 4142d4 <main+0x508c>
  4142bc:	e4 a2 18 00 	l.sfleu r2,r3
                    {
                        if (!ScanDirectory(i, fs_pFileExt, fs_Options | FIND_DIR))
  4142c0:	1a 40 00 41 	l.movhi r18,0x41
  4142c4:	1a 80 00 41 	l.movhi r20,0x41
  4142c8:	aa 52 a3 94 	l.ori r18,r18,0xa394
  4142cc:	00 00 00 1a 	l.j 414334 <main+0x50ec>
  4142d0:	aa 94 fd 59 	l.ori r20,r20,0xfd59
  4142d4:	1a 40 00 41 	l.movhi r18,0x41
  4142d8:	1a 80 00 41 	l.movhi r20,0x41
  4142dc:	aa 52 a3 94 	l.ori r18,r18,0xa394
                            ScanDirectory(i, fs_pFileExt, fs_Options | FIND_FILE);
                    }
                    else if (i > DirEntry[sort_table[iSelectedEntry]].Name[0])
  4142e0:	10 00 00 0e 	l.bf 414318 <main+0x50d0>
  4142e4:	aa 94 fd 59 	l.ori r20,r20,0xfd59
                    {
                        if (!ScanDirectory(i, fs_pFileExt, fs_Options | FIND_FILE))
  4142e8:	8c b4 00 00 	l.lbz r5,0x0(r20)
  4142ec:	a8 62 00 00 	l.ori r3,r2,0x0
  4142f0:	84 92 00 00 	l.lwz r4,0x0(r18)
  4142f4:	07 ff cc b7 	l.jal 4075d0 <ScanDirectory>
  4142f8:	a8 a5 00 08 	l.ori r5,r5,0x8
  4142fc:	bc 2b 00 00 	l.sfnei r11,0x0
  414300:	10 00 00 1a 	l.bf 414368 <main+0x5120>
  414304:	a8 62 00 00 	l.ori r3,r2,0x0
                            ScanDirectory(i, fs_pFileExt, fs_Options | FIND_DIR);
  414308:	8c b4 00 00 	l.lbz r5,0x0(r20)
  41430c:	84 92 00 00 	l.lwz r4,0x0(r18)
  414310:	00 00 00 14 	l.j 414360 <main+0x5118>
  414314:	a8 a5 00 04 	l.ori r5,r5,0x4
                    }
                    else
                    {
                        if (!ScanDirectory(i, fs_pFileExt, fs_Options)) // find next
  414318:	8c b4 00 00 	l.lbz r5,0x0(r20)
  41431c:	a8 62 00 00 	l.ori r3,r2,0x0
  414320:	07 ff cc ac 	l.jal 4075d0 <ScanDirectory>
  414324:	84 92 00 00 	l.lwz r4,0x0(r18)
  414328:	bc 2b 00 00 	l.sfnei r11,0x0
  41432c:	10 00 00 0f 	l.bf 414368 <main+0x5120>
  414330:	15 00 00 00 	l.nop 0x0
                            if (!ScanDirectory(i, fs_pFileExt, fs_Options | FIND_DIR))
  414334:	8c b4 00 00 	l.lbz r5,0x0(r20)
  414338:	a8 62 00 00 	l.ori r3,r2,0x0
  41433c:	84 92 00 00 	l.lwz r4,0x0(r18)
  414340:	07 ff cc a4 	l.jal 4075d0 <ScanDirectory>
  414344:	a8 a5 00 04 	l.ori r5,r5,0x4
  414348:	bc 2b 00 00 	l.sfnei r11,0x0
  41434c:	10 00 00 07 	l.bf 414368 <main+0x5120>
  414350:	a8 62 00 00 	l.ori r3,r2,0x0
                                ScanDirectory(i, fs_pFileExt, fs_Options | FIND_FILE);
  414354:	8c b4 00 00 	l.lbz r5,0x0(r20)
  414358:	84 92 00 00 	l.lwz r4,0x0(r18)
  41435c:	a8 a5 00 08 	l.ori r5,r5,0x8
  414360:	07 ff cc 9c 	l.jal 4075d0 <ScanDirectory>
  414364:	15 00 00 00 	l.nop 0x0
                    }
                }
            }
            menustate = MENU_FILE_SELECT1;
  414368:	18 40 00 41 	l.movhi r2,0x41
  41436c:	9c a0 00 08 	l.addi r5,r0,0x8
  414370:	a8 42 a3 89 	l.ori r2,r2,0xa389
  414374:	d8 02 28 00 	l.sb 0x0(r2),r5
        }

        if (select)
  414378:	bc 10 00 00 	l.sfeqi r16,0x0
  41437c:	10 00 00 a2 	l.bf 414604 <main+0x53bc>
  414380:	bc 0e 00 00 	l.sfeqi r14,0x0
        {
            if (DirEntry[sort_table[iSelectedEntry]].Attributes & ATTR_DIRECTORY)
  414384:	18 40 00 41 	l.movhi r2,0x41
  414388:	18 c0 00 41 	l.movhi r6,0x41
  41438c:	a8 42 a3 53 	l.ori r2,r2,0xa353
  414390:	a8 c6 e7 d0 	l.ori r6,r6,0xe7d0
  414394:	8e 42 00 00 	l.lbz r18,0x0(r2)
  414398:	e0 52 30 00 	l.add r2,r18,r6
  41439c:	18 e0 00 41 	l.movhi r7,0x41
  4143a0:	8c 42 00 00 	l.lbz r2,0x0(r2)
  4143a4:	b8 82 00 05 	l.slli r4,r2,0x5
  4143a8:	a8 e7 e6 d0 	l.ori r7,r7,0xe6d0
  4143ac:	e0 84 38 00 	l.add r4,r4,r7
  4143b0:	8c 64 00 0b 	l.lbz r3,0xb(r4)
  4143b4:	a4 63 00 10 	l.andi r3,r3,0x10
  4143b8:	bc 03 00 00 	l.sfeqi r3,0x0
  4143bc:	10 00 00 2f 	l.bf 414478 <main+0x5230>
  4143c0:	15 00 00 00 	l.nop 0x0
            {
                ChangeDirectory(DirEntry[sort_table[iSelectedEntry]].StartCluster + (fat32 ? (DirEntry[sort_table[iSelectedEntry]].HighCluster & 0x0FFF) << 16 : 0));
  4143c4:	18 60 00 41 	l.movhi r3,0x41
  4143c8:	a8 63 a3 51 	l.ori r3,r3,0xa351
  4143cc:	8c 63 00 00 	l.lbz r3,0x0(r3)
  4143d0:	bc 03 00 00 	l.sfeqi r3,0x0
  4143d4:	10 00 00 05 	l.bf 4143e8 <main+0x51a0>
  4143d8:	94 a4 00 1a 	l.lhz r5,0x1a(r4)
  4143dc:	94 64 00 14 	l.lhz r3,0x14(r4)
  4143e0:	a4 63 0f ff 	l.andi r3,r3,0xfff
  4143e4:	b8 63 00 10 	l.slli r3,r3,0x10
  4143e8:	e0 63 28 00 	l.add r3,r3,r5
  4143ec:	07 ff ba 8d 	l.jal 402e20 <ChangeDirectory>
  4143f0:	b8 42 00 05 	l.slli r2,r2,0x5
                {
                    if (strncmp((char*)DirEntry[sort_table[iSelectedEntry]].Name, "..", 2) == 0)
  4143f4:	19 80 00 41 	l.movhi r12,0x41
  4143f8:	18 80 00 41 	l.movhi r4,0x41
  4143fc:	a9 8c e6 d0 	l.ori r12,r12,0xe6d0
  414400:	a8 84 8b 74 	l.ori r4,r4,0x8b74
  414404:	e0 62 60 00 	l.add r3,r2,r12
  414408:	9c a0 00 02 	l.addi r5,r0,0x2
  41440c:	1a 40 00 41 	l.movhi r18,0x41
  414410:	07 ff af c1 	l.jal 400314 <strncmp>
  414414:	1a 80 00 41 	l.movhi r20,0x41
  414418:	aa 52 a3 94 	l.ori r18,r18,0xa394
  41441c:	bc 2b 00 00 	l.sfnei r11,0x0
  414420:	10 00 00 0d 	l.bf 414454 <main+0x520c>
  414424:	aa 94 fd 59 	l.ori r20,r20,0xfd59
                    { // parent dir selected
                         if (ScanDirectory(SCAN_INIT_FIRST, fs_pFileExt, fs_Options))
  414428:	8c b4 00 00 	l.lbz r5,0x0(r20)
  41442c:	9c 60 00 03 	l.addi r3,r0,0x3
  414430:	07 ff cc 68 	l.jal 4075d0 <ScanDirectory>
  414434:	84 92 00 00 	l.lwz r4,0x0(r18)
  414438:	8c b4 00 00 	l.lbz r5,0x0(r20)
  41443c:	bc 0b 00 00 	l.sfeqi r11,0x0
  414440:	10 00 00 03 	l.bf 41444c <main+0x5204>
  414444:	a8 6b 00 00 	l.ori r3,r11,0x0
                             ScanDirectory(SCAN_INIT_NEXT, fs_pFileExt, fs_Options);
  414448:	9c 60 00 04 	l.addi r3,r0,0x4
                         else
                             ScanDirectory(SCAN_INIT, fs_pFileExt, fs_Options);
  41444c:	00 00 00 05 	l.j 414460 <main+0x5218>
  414450:	84 92 00 00 	l.lwz r4,0x0(r18)
                    }
                    else
                        ScanDirectory(SCAN_INIT, fs_pFileExt, fs_Options);
  414454:	8c b4 00 00 	l.lbz r5,0x0(r20)
  414458:	9c 60 00 00 	l.addi r3,r0,0x0
  41445c:	84 92 00 00 	l.lwz r4,0x0(r18)
  414460:	07 ff cc 5c 	l.jal 4075d0 <ScanDirectory>
  414464:	18 40 00 41 	l.movhi r2,0x41

                    menustate = MENU_FILE_SELECT1;
  414468:	a8 42 a3 89 	l.ori r2,r2,0xa389
  41446c:	9d a0 00 08 	l.addi r13,r0,0x8
  414470:	00 00 00 64 	l.j 414600 <main+0x53b8>
  414474:	d8 02 68 00 	l.sb 0x0(r2),r13
                }
            }
            else
            {
                if (nDirEntries)
  414478:	18 80 00 41 	l.movhi r4,0x41
  41447c:	a8 84 a3 52 	l.ori r4,r4,0xa352
  414480:	8c 84 00 00 	l.lbz r4,0x0(r4)
  414484:	bc 04 00 00 	l.sfeqi r4,0x0
  414488:	10 00 00 5f 	l.bf 414604 <main+0x53bc>
  41448c:	bc 0e 00 00 	l.sfeqi r14,0x0
                {
                    file.long_name[0] = 0;
  414490:	18 80 00 41 	l.movhi r4,0x41
                    len = strlen(DirEntryLFN[sort_table[iSelectedEntry]]);
  414494:	ba c2 00 02 	l.slli r22,r2,0x2
            }
            else
            {
                if (nDirEntries)
                {
                    file.long_name[0] = 0;
  414498:	a8 84 cb 80 	l.ori r4,r4,0xcb80
  41449c:	d8 04 18 24 	l.sb 0x24(r4),r3
                    len = strlen(DirEntryLFN[sort_table[iSelectedEntry]]);
  4144a0:	b8 62 00 08 	l.slli r3,r2,0x8
  4144a4:	e2 d6 18 00 	l.add r22,r22,r3
  4144a8:	18 60 00 41 	l.movhi r3,0x41
  4144ac:	e2 d6 10 00 	l.add r22,r22,r2
  4144b0:	a8 63 de a8 	l.ori r3,r3,0xdea8
  4144b4:	e2 96 18 00 	l.add r20,r22,r3
  4144b8:	07 ff af 8f 	l.jal 4002f4 <strlen>
  4144bc:	a8 74 00 00 	l.ori r3,r20,0x0
                    if (len > 4)
  4144c0:	bc ab 00 04 	l.sfleui r11,0x4
  4144c4:	10 00 00 10 	l.bf 414504 <main+0x52bc>
  4144c8:	aa 0b 00 00 	l.ori r16,r11,0x0
                        if (DirEntryLFN[sort_table[iSelectedEntry]][len-4] == '.')
  4144cc:	9c 6b ff fc 	l.addi r3,r11,0xfffffffc
  4144d0:	18 80 00 41 	l.movhi r4,0x41
  4144d4:	e2 d6 18 00 	l.add r22,r22,r3
  4144d8:	a8 84 de a8 	l.ori r4,r4,0xdea8
  4144dc:	e2 d6 20 00 	l.add r22,r22,r4
  4144e0:	90 96 00 00 	l.lbs r4,0x0(r22)
  4144e4:	bc 04 00 2e 	l.sfeqi r4,0x2e
  4144e8:	0c 00 00 04 	l.bnf 4144f8 <main+0x52b0>
  4144ec:	bc 50 01 05 	l.sfgtui r16,0x105
                            len -= 4; // remove extension
  4144f0:	aa 03 00 00 	l.ori r16,r3,0x0

                    if (len > sizeof(file.long_name))
  4144f4:	bc 50 01 05 	l.sfgtui r16,0x105
  4144f8:	0c 00 00 03 	l.bnf 414504 <main+0x52bc>
  4144fc:	15 00 00 00 	l.nop 0x0
                        len = sizeof(file.long_name);
  414500:	9e 00 01 05 	l.addi r16,r0,0x105

                    strncpy(file.name, (const char*)DirEntry[sort_table[iSelectedEntry]].Name, sizeof(file.name));
  414504:	18 a0 00 41 	l.movhi r5,0x41
  414508:	b8 82 00 05 	l.slli r4,r2,0x5
  41450c:	a8 a5 e6 d0 	l.ori r5,r5,0xe6d0
  414510:	18 60 00 41 	l.movhi r3,0x41
  414514:	e0 84 28 00 	l.add r4,r4,r5
  414518:	a8 63 cb 80 	l.ori r3,r3,0xcb80
  41451c:	07 ff af 94 	l.jal 40036c <strncpy>
  414520:	9c a0 00 0b 	l.addi r5,r0,0xb
#include <string.h>
#include <stdint.h>

void *memset(void *dst, int c, size_t n)
{
	char *q = dst;
  414524:	18 a0 00 41 	l.movhi r5,0x41
  414528:	00 00 00 04 	l.j 414538 <main+0x52f0>
  41452c:	a8 a5 cb a4 	l.ori r5,r5,0xcba4
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
		*q++ = c;
  414530:	d8 05 30 00 	l.sb 0x0(r5),r6
  414534:	9c a5 00 01 	l.addi r5,r5,0x1
	asm volatile ("cld ; rep ; stosq ; movl %3,%%ecx ; rep ; stosb"
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
  414538:	18 e0 00 41 	l.movhi r7,0x41
  41453c:	a8 e7 cc a9 	l.ori r7,r7,0xcca9
  414540:	e4 25 38 00 	l.sfne r5,r7
  414544:	13 ff ff fb 	l.bf 414530 <main+0x52e8>
  414548:	9c c0 00 00 	l.addi r6,r0,0x0
                    memset(file.long_name, 0, sizeof(file.long_name));
                    strncpy(file.long_name, DirEntryLFN[sort_table[iSelectedEntry]], len);
  41454c:	9c 65 fe fb 	l.addi r3,r5,0xfffffefb
  414550:	a8 94 00 00 	l.ori r4,r20,0x0
  414554:	a8 b0 00 00 	l.ori r5,r16,0x0
  414558:	07 ff af 85 	l.jal 40036c <strncpy>
  41455c:	b8 42 00 05 	l.slli r2,r2,0x5
                    strncpy(DiskInfo, DirEntryInfo[iSelectedEntry], sizeof(DiskInfo));
  414560:	b8 72 00 02 	l.slli r3,r18,0x2
  414564:	19 80 00 41 	l.movhi r12,0x41
  414568:	9c a0 00 05 	l.addi r5,r0,0x5
  41456c:	e2 43 90 00 	l.add r18,r3,r18
  414570:	a9 8c fd 2c 	l.ori r12,r12,0xfd2c
  414574:	18 60 00 41 	l.movhi r3,0x41
  414578:	e0 92 60 00 	l.add r4,r18,r12
  41457c:	07 ff af 7c 	l.jal 40036c <strncpy>
  414580:	a8 63 fd 54 	l.ori r3,r3,0xfd54

                    file.size = DirEntry[sort_table[iSelectedEntry]].FileSize;
  414584:	19 a0 00 41 	l.movhi r13,0x41
  414588:	18 60 00 41 	l.movhi r3,0x41
  41458c:	a9 ad e6 d0 	l.ori r13,r13,0xe6d0
  414590:	a8 63 cb 80 	l.ori r3,r3,0xcb80
  414594:	e0 42 68 00 	l.add r2,r2,r13
  414598:	84 82 00 1c 	l.lwz r4,0x1c(r2)
  41459c:	d4 03 20 18 	l.sw 0x18(r3),r4
                    file.attributes = DirEntry[sort_table[iSelectedEntry]].Attributes;
  4145a0:	8c 82 00 0b 	l.lbz r4,0xb(r2)
  4145a4:	d8 03 20 0b 	l.sb 0xb(r3),r4
                    file.start_cluster = DirEntry[sort_table[iSelectedEntry]].StartCluster + (fat32 ? (DirEntry[sort_table[iSelectedEntry]].HighCluster & 0x0FFF) << 16 : 0);
  4145a8:	18 60 00 41 	l.movhi r3,0x41
  4145ac:	a8 63 a3 51 	l.ori r3,r3,0xa351
  4145b0:	8c 63 00 00 	l.lbz r3,0x0(r3)
  4145b4:	bc 03 00 00 	l.sfeqi r3,0x0
  4145b8:	10 00 00 05 	l.bf 4145cc <main+0x5384>
  4145bc:	94 82 00 1a 	l.lhz r4,0x1a(r2)
  4145c0:	94 62 00 14 	l.lhz r3,0x14(r2)
  4145c4:	a4 63 0f ff 	l.andi r3,r3,0xfff
  4145c8:	b8 63 00 10 	l.slli r3,r3,0x10
  4145cc:	18 40 00 41 	l.movhi r2,0x41
  4145d0:	e0 63 20 00 	l.add r3,r3,r4
  4145d4:	a8 42 cb 80 	l.ori r2,r2,0xcb80
                    file.cluster = file.start_cluster;
                    file.sector = 0;
  4145d8:	9c a0 00 00 	l.addi r5,r0,0x0
                    strncpy(file.long_name, DirEntryLFN[sort_table[iSelectedEntry]], len);
                    strncpy(DiskInfo, DirEntryInfo[iSelectedEntry], sizeof(DiskInfo));

                    file.size = DirEntry[sort_table[iSelectedEntry]].FileSize;
                    file.attributes = DirEntry[sort_table[iSelectedEntry]].Attributes;
                    file.start_cluster = DirEntry[sort_table[iSelectedEntry]].StartCluster + (fat32 ? (DirEntry[sort_table[iSelectedEntry]].HighCluster & 0x0FFF) << 16 : 0);
  4145dc:	d4 02 18 20 	l.sw 0x20(r2),r3
                    file.cluster = file.start_cluster;
  4145e0:	d4 02 18 1c 	l.sw 0x1c(r2),r3
                    file.sector = 0;

                    menustate = fs_MenuSelect;
  4145e4:	18 60 00 41 	l.movhi r3,0x41

                    file.size = DirEntry[sort_table[iSelectedEntry]].FileSize;
                    file.attributes = DirEntry[sort_table[iSelectedEntry]].Attributes;
                    file.start_cluster = DirEntry[sort_table[iSelectedEntry]].StartCluster + (fat32 ? (DirEntry[sort_table[iSelectedEntry]].HighCluster & 0x0FFF) << 16 : 0);
                    file.cluster = file.start_cluster;
                    file.sector = 0;
  4145e8:	d4 02 28 14 	l.sw 0x14(r2),r5

                    menustate = fs_MenuSelect;
  4145ec:	a8 63 fd 5a 	l.ori r3,r3,0xfd5a
  4145f0:	18 40 00 41 	l.movhi r2,0x41
  4145f4:	8c 63 00 00 	l.lbz r3,0x0(r3)
  4145f8:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4145fc:	d8 02 18 00 	l.sb 0x0(r2),r3
                }
            }
        }

        if (menu)
  414600:	bc 0e 00 00 	l.sfeqi r14,0x0
  414604:	10 00 09 b5 	l.bf 416cd8 <main+0x7a90>
  414608:	18 60 00 41 	l.movhi r3,0x41
        {
            menustate = fs_MenuCancel;
  41460c:	18 40 00 41 	l.movhi r2,0x41
  414610:	a8 63 fd 5b 	l.ori r3,r3,0xfd5b
  414614:	a8 42 a3 89 	l.ori r2,r2,0xa389
  414618:	8c 63 00 00 	l.lbz r3,0x0(r3)
  41461c:	00 00 09 af 	l.j 416cd8 <main+0x7a90>
  414620:	d8 02 18 00 	l.sb 0x0(r2),r3

        /******************************************************************/
        /* reset menu                                                     */
        /******************************************************************/
    case MENU_RESET1 :
		helptext=helptexts[HELPTEXT_NONE];
  414624:	18 40 00 42 	l.movhi r2,0x42
  414628:	9c c0 00 00 	l.addi r6,r0,0x0
  41462c:	a8 42 0b 74 	l.ori r2,r2,0xb74
		OsdSetTitle("Reset",0);
  414630:	18 60 00 41 	l.movhi r3,0x41

        /******************************************************************/
        /* reset menu                                                     */
        /******************************************************************/
    case MENU_RESET1 :
		helptext=helptexts[HELPTEXT_NONE];
  414634:	d4 02 30 00 	l.sw 0x0(r2),r6
		OsdSetTitle("Reset",0);
		menumask=0x03;	// Yes / No
  414638:	18 40 00 41 	l.movhi r2,0x41
        /******************************************************************/
        /* reset menu                                                     */
        /******************************************************************/
    case MENU_RESET1 :
		helptext=helptexts[HELPTEXT_NONE];
		OsdSetTitle("Reset",0);
  41463c:	a8 86 00 00 	l.ori r4,r6,0x0
  414640:	a8 63 91 b4 	l.ori r3,r3,0x91b4
		menumask=0x03;	// Yes / No
  414644:	9d c0 00 03 	l.addi r14,r0,0x3
        /******************************************************************/
        /* reset menu                                                     */
        /******************************************************************/
    case MENU_RESET1 :
		helptext=helptexts[HELPTEXT_NONE];
		OsdSetTitle("Reset",0);
  414648:	07 ff bb 6a 	l.jal 4033f0 <OsdSetTitle>
  41464c:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
		menumask=0x03;	// Yes / No
  414650:	d4 02 70 00 	l.sw 0x0(r2),r14
		parentstate=menustate;
  414654:	18 40 00 41 	l.movhi r2,0x41
  414658:	9c e0 00 0b 	l.addi r7,r0,0xb

        OsdWrite(0, "", 0,0);
  41465c:	9c 60 00 00 	l.addi r3,r0,0x0
        /******************************************************************/
    case MENU_RESET1 :
		helptext=helptexts[HELPTEXT_NONE];
		OsdSetTitle("Reset",0);
		menumask=0x03;	// Yes / No
		parentstate=menustate;
  414660:	a8 42 fd 24 	l.ori r2,r2,0xfd24

        OsdWrite(0, "", 0,0);
  414664:	18 80 00 41 	l.movhi r4,0x41
        /******************************************************************/
    case MENU_RESET1 :
		helptext=helptexts[HELPTEXT_NONE];
		OsdSetTitle("Reset",0);
		menumask=0x03;	// Yes / No
		parentstate=menustate;
  414668:	d8 02 38 00 	l.sb 0x0(r2),r7

        OsdWrite(0, "", 0,0);
  41466c:	a8 a3 00 00 	l.ori r5,r3,0x0
  414670:	a8 c3 00 00 	l.ori r6,r3,0x0
  414674:	a8 84 83 f7 	l.ori r4,r4,0x83f7
  414678:	07 ff bd de 	l.jal 403df0 <OsdWrite>
  41467c:	18 40 00 41 	l.movhi r2,0x41
        OsdWrite(1, "     Reiniciar Minimig?", 0,0);
  414680:	9c a0 00 00 	l.addi r5,r0,0x0
  414684:	18 80 00 41 	l.movhi r4,0x41
  414688:	a8 c5 00 00 	l.ori r6,r5,0x0
  41468c:	9c 60 00 01 	l.addi r3,r0,0x1
  414690:	a8 84 97 9e 	l.ori r4,r4,0x979e
  414694:	07 ff bd d7 	l.jal 403df0 <OsdWrite>
  414698:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
        OsdWrite(2, "", 0,0);
  41469c:	9c a0 00 00 	l.addi r5,r0,0x0
  4146a0:	18 80 00 41 	l.movhi r4,0x41
  4146a4:	a8 c5 00 00 	l.ori r6,r5,0x0
  4146a8:	9c 60 00 02 	l.addi r3,r0,0x2
  4146ac:	07 ff bd d1 	l.jal 403df0 <OsdWrite>
  4146b0:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(3, "               si", menusub == 0,0);
  4146b4:	8c 42 00 00 	l.lbz r2,0x0(r2)
  4146b8:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  4146bc:	18 80 00 41 	l.movhi r4,0x41
  4146c0:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  4146c4:	a8 6e 00 00 	l.ori r3,r14,0x0
  4146c8:	a8 84 91 ba 	l.ori r4,r4,0x91ba
  4146cc:	9c c0 00 00 	l.addi r6,r0,0x0
  4146d0:	07 ff bd c8 	l.jal 403df0 <OsdWrite>
  4146d4:	ac 42 00 01 	l.xori r2,r2,0x1
        OsdWrite(4, "               no", menusub == 1,0);
  4146d8:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  4146dc:	18 80 00 41 	l.movhi r4,0x41
  4146e0:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  4146e4:	9c 60 00 04 	l.addi r3,r0,0x4
  4146e8:	a8 84 91 cc 	l.ori r4,r4,0x91cc
  4146ec:	9c c0 00 00 	l.addi r6,r0,0x0
  4146f0:	07 ff bd c0 	l.jal 403df0 <OsdWrite>
  4146f4:	18 40 00 41 	l.movhi r2,0x41
        OsdWrite(5, "", 0,0);
  4146f8:	9c a0 00 00 	l.addi r5,r0,0x0
  4146fc:	18 80 00 41 	l.movhi r4,0x41
  414700:	a8 c5 00 00 	l.ori r6,r5,0x0
  414704:	9c 60 00 05 	l.addi r3,r0,0x5
  414708:	a8 84 83 f7 	l.ori r4,r4,0x83f7
  41470c:	07 ff bd b9 	l.jal 403df0 <OsdWrite>
  414710:	a8 42 a3 89 	l.ori r2,r2,0xa389
        OsdWrite(6, "", 0,0);
  414714:	9c a0 00 00 	l.addi r5,r0,0x0
  414718:	18 80 00 41 	l.movhi r4,0x41
  41471c:	a8 c5 00 00 	l.ori r6,r5,0x0
  414720:	9c 60 00 06 	l.addi r3,r0,0x6
  414724:	07 ff bd b3 	l.jal 403df0 <OsdWrite>
  414728:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(7, "", 0,0);
  41472c:	9c a0 00 00 	l.addi r5,r0,0x0
  414730:	18 80 00 41 	l.movhi r4,0x41
  414734:	9c 60 00 07 	l.addi r3,r0,0x7
  414738:	a8 84 83 f7 	l.ori r4,r4,0x83f7
  41473c:	07 ff bd ad 	l.jal 403df0 <OsdWrite>
  414740:	a8 c5 00 00 	l.ori r6,r5,0x0

        menustate = MENU_RESET2;
  414744:	9d 80 00 0c 	l.addi r12,r0,0xc
  414748:	00 00 09 64 	l.j 416cd8 <main+0x7a90>
  41474c:	d8 02 60 00 	l.sb 0x0(r2),r12
        break;

    case MENU_RESET2 :

        if (select && menusub == 0)
  414750:	bc 10 00 00 	l.sfeqi r16,0x0
  414754:	10 00 00 0d 	l.bf 414788 <main+0x5540>
  414758:	bc 2e 00 00 	l.sfnei r14,0x0
  41475c:	18 40 00 41 	l.movhi r2,0x41
  414760:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  414764:	8c 42 00 00 	l.lbz r2,0x0(r2)
  414768:	bc 22 00 00 	l.sfnei r2,0x0
  41476c:	10 00 00 07 	l.bf 414788 <main+0x5540>
  414770:	bc 2e 00 00 	l.sfnei r14,0x0
        {
            menustate = MENU_NONE1;
  414774:	18 60 00 41 	l.movhi r3,0x41
  414778:	a8 63 a3 89 	l.ori r3,r3,0xa389
            OsdReset(RESET_NORMAL);
  41477c:	07 ff d8 6e 	l.jal 40a934 <OsdReset.clone.0>
  414780:	d8 03 10 00 	l.sb 0x0(r3),r2
        }

        if (menu || (select && (menusub == 1))) // exit menu
  414784:	bc 2e 00 00 	l.sfnei r14,0x0
  414788:	10 00 00 0a 	l.bf 4147b0 <main+0x5568>
  41478c:	bc 10 00 00 	l.sfeqi r16,0x0
  414790:	10 00 09 52 	l.bf 416cd8 <main+0x7a90>
  414794:	15 00 00 00 	l.nop 0x0
  414798:	18 40 00 41 	l.movhi r2,0x41
  41479c:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  4147a0:	8c 42 00 00 	l.lbz r2,0x0(r2)
  4147a4:	bc 22 00 01 	l.sfnei r2,0x1
  4147a8:	10 00 09 4c 	l.bf 416cd8 <main+0x7a90>
  4147ac:	15 00 00 00 	l.nop 0x0
        {
            menustate = MENU_MISC1;
  4147b0:	18 40 00 41 	l.movhi r2,0x41
  4147b4:	9d a0 00 04 	l.addi r13,r0,0x4
  4147b8:	a8 42 a3 89 	l.ori r2,r2,0xa389
            menusub = 0;
  4147bc:	9c 60 00 00 	l.addi r3,r0,0x0
            OsdReset(RESET_NORMAL);
        }

        if (menu || (select && (menusub == 1))) // exit menu
        {
            menustate = MENU_MISC1;
  4147c0:	d8 02 68 00 	l.sb 0x0(r2),r13
            menusub = 0;
  4147c4:	18 40 00 41 	l.movhi r2,0x41
  4147c8:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  4147cc:	00 00 09 43 	l.j 416cd8 <main+0x7a90>
  4147d0:	d8 02 18 00 	l.sb 0x0(r2),r3

        /******************************************************************/
        /* reconfigure confirmation                                       */
        /******************************************************************/
    case MENU_RECONF1 :
		helptext=helptexts[HELPTEXT_NONE];
  4147d4:	18 40 00 42 	l.movhi r2,0x42
  4147d8:	9c 80 00 00 	l.addi r4,r0,0x0
  4147dc:	a8 42 0b 74 	l.ori r2,r2,0xb74
		OsdSetTitle("Salir",0);
  4147e0:	18 60 00 41 	l.movhi r3,0x41

        /******************************************************************/
        /* reconfigure confirmation                                       */
        /******************************************************************/
    case MENU_RECONF1 :
		helptext=helptexts[HELPTEXT_NONE];
  4147e4:	d4 02 20 00 	l.sw 0x0(r2),r4
		OsdSetTitle("Salir",0);
		menumask=0x03;	// Yes / No
  4147e8:	18 40 00 41 	l.movhi r2,0x41
        /******************************************************************/
        /* reconfigure confirmation                                       */
        /******************************************************************/
    case MENU_RECONF1 :
		helptext=helptexts[HELPTEXT_NONE];
		OsdSetTitle("Salir",0);
  4147ec:	a8 63 8b b0 	l.ori r3,r3,0x8bb0
		menumask=0x03;	// Yes / No
  4147f0:	9d c0 00 03 	l.addi r14,r0,0x3
        /******************************************************************/
        /* reconfigure confirmation                                       */
        /******************************************************************/
    case MENU_RECONF1 :
		helptext=helptexts[HELPTEXT_NONE];
		OsdSetTitle("Salir",0);
  4147f4:	07 ff ba ff 	l.jal 4033f0 <OsdSetTitle>
  4147f8:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
		menumask=0x03;	// Yes / No
  4147fc:	d4 02 70 00 	l.sw 0x0(r2),r14
		parentstate=menustate;
  414800:	18 40 00 41 	l.movhi r2,0x41

        OsdWrite(0, "", 0,0);
  414804:	9c 60 00 00 	l.addi r3,r0,0x0
        /******************************************************************/
    case MENU_RECONF1 :
		helptext=helptexts[HELPTEXT_NONE];
		OsdSetTitle("Salir",0);
		menumask=0x03;	// Yes / No
		parentstate=menustate;
  414808:	a8 42 fd 24 	l.ori r2,r2,0xfd24
  41480c:	9c a0 00 0d 	l.addi r5,r0,0xd

        OsdWrite(0, "", 0,0);
  414810:	18 80 00 41 	l.movhi r4,0x41
        /******************************************************************/
    case MENU_RECONF1 :
		helptext=helptexts[HELPTEXT_NONE];
		OsdSetTitle("Salir",0);
		menumask=0x03;	// Yes / No
		parentstate=menustate;
  414814:	d8 02 28 00 	l.sb 0x0(r2),r5

        OsdWrite(0, "", 0,0);
  414818:	a8 c3 00 00 	l.ori r6,r3,0x0
  41481c:	a8 a3 00 00 	l.ori r5,r3,0x0
  414820:	a8 84 83 f7 	l.ori r4,r4,0x83f7
  414824:	07 ff bd 73 	l.jal 403df0 <OsdWrite>
  414828:	18 40 00 41 	l.movhi r2,0x41
        OsdWrite(1, "   Reconfigurar sistema?", 0,0);
  41482c:	9c a0 00 00 	l.addi r5,r0,0x0
  414830:	18 80 00 41 	l.movhi r4,0x41
  414834:	a8 c5 00 00 	l.ori r6,r5,0x0
  414838:	9c 60 00 01 	l.addi r3,r0,0x1
  41483c:	a8 84 91 de 	l.ori r4,r4,0x91de
  414840:	07 ff bd 6c 	l.jal 403df0 <OsdWrite>
  414844:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
        OsdWrite(2, "", 0,0);
  414848:	9c a0 00 00 	l.addi r5,r0,0x0
  41484c:	18 80 00 41 	l.movhi r4,0x41
  414850:	a8 c5 00 00 	l.ori r6,r5,0x0
  414854:	9c 60 00 02 	l.addi r3,r0,0x2
  414858:	07 ff bd 66 	l.jal 403df0 <OsdWrite>
  41485c:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(3, "            si", menusub == 0,0);
  414860:	8c 42 00 00 	l.lbz r2,0x0(r2)
  414864:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  414868:	18 80 00 41 	l.movhi r4,0x41
  41486c:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  414870:	a8 6e 00 00 	l.ori r3,r14,0x0
  414874:	a8 84 91 bd 	l.ori r4,r4,0x91bd
  414878:	9c c0 00 00 	l.addi r6,r0,0x0
  41487c:	07 ff bd 5d 	l.jal 403df0 <OsdWrite>
  414880:	ac 42 00 01 	l.xori r2,r2,0x1
        OsdWrite(4, "            no", menusub == 1,0);
  414884:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  414888:	18 80 00 41 	l.movhi r4,0x41
  41488c:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  414890:	9c 60 00 04 	l.addi r3,r0,0x4
  414894:	a8 84 91 cf 	l.ori r4,r4,0x91cf
  414898:	9c c0 00 00 	l.addi r6,r0,0x0
  41489c:	07 ff bd 55 	l.jal 403df0 <OsdWrite>
  4148a0:	18 40 00 41 	l.movhi r2,0x41
        OsdWrite(5, "", 0,0);
  4148a4:	9c a0 00 00 	l.addi r5,r0,0x0
  4148a8:	18 80 00 41 	l.movhi r4,0x41
  4148ac:	a8 c5 00 00 	l.ori r6,r5,0x0
  4148b0:	9c 60 00 05 	l.addi r3,r0,0x5
  4148b4:	a8 84 83 f7 	l.ori r4,r4,0x83f7
  4148b8:	07 ff bd 4e 	l.jal 403df0 <OsdWrite>
  4148bc:	a8 42 a3 89 	l.ori r2,r2,0xa389
        OsdWrite(6, "", 0,0);
  4148c0:	9c a0 00 00 	l.addi r5,r0,0x0
  4148c4:	18 80 00 41 	l.movhi r4,0x41
  4148c8:	a8 c5 00 00 	l.ori r6,r5,0x0
  4148cc:	9c 60 00 06 	l.addi r3,r0,0x6
  4148d0:	07 ff bd 48 	l.jal 403df0 <OsdWrite>
  4148d4:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(7, "", 0,0);
  4148d8:	9c a0 00 00 	l.addi r5,r0,0x0
  4148dc:	18 80 00 41 	l.movhi r4,0x41
  4148e0:	a8 c5 00 00 	l.ori r6,r5,0x0
  4148e4:	9c 60 00 07 	l.addi r3,r0,0x7
  4148e8:	07 ff bd 42 	l.jal 403df0 <OsdWrite>
  4148ec:	a8 84 83 f7 	l.ori r4,r4,0x83f7

        menustate = MENU_RECONF2;
  4148f0:	9c c0 00 0e 	l.addi r6,r0,0xe
  4148f4:	00 00 08 f9 	l.j 416cd8 <main+0x7a90>
  4148f8:	d8 02 30 00 	l.sb 0x0(r2),r6
        break;

    case MENU_RECONF2 :

        if (select && menusub == 0)
  4148fc:	bc 10 00 00 	l.sfeqi r16,0x0
  414900:	10 00 00 1b 	l.bf 41496c <main+0x5724>
  414904:	bc 2e 00 00 	l.sfnei r14,0x0
  414908:	18 40 00 41 	l.movhi r2,0x41
  41490c:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  414910:	8c a2 00 00 	l.lbz r5,0x0(r2)
  414914:	bc 25 00 00 	l.sfnei r5,0x0
  414918:	10 00 00 15 	l.bf 41496c <main+0x5724>
  41491c:	bc 2e 00 00 	l.sfnei r14,0x0

void OsdReconfig()
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	EnableOsd();
  414920:	a8 7e 00 20 	l.ori r3,r30,0x20
  414924:	9c e0 00 44 	l.addi r7,r0,0x44
	//SPI(OSDCMDRECONFIG);
  SPI(OSD_CMD_RST);
  414928:	a8 5e 00 24 	l.ori r2,r30,0x24
  41492c:	9c c0 00 08 	l.addi r6,r0,0x8

void OsdReconfig()
{
  DEBUG_FUNC_IN(DEBUG_F_OSD | DEBUG_L2);

	EnableOsd();
  414930:	d4 03 38 00 	l.sw 0x0(r3),r7
	//SPI(OSDCMDRECONFIG);
  SPI(OSD_CMD_RST);
  414934:	d4 02 30 00 	l.sw 0x0(r2),r6
  414938:	84 82 00 00 	l.lwz r4,0x0(r2)
  SPI(0x02);
  41493c:	9c 80 00 02 	l.addi r4,r0,0x2
  414940:	d4 02 20 00 	l.sw 0x0(r2),r4
  414944:	84 82 00 00 	l.lwz r4,0x0(r2)
	DisableOsd();
  414948:	9c 80 00 40 	l.addi r4,r0,0x40
  41494c:	d4 03 20 00 	l.sw 0x0(r3),r4
	EnableOsd();
  414950:	d4 03 38 00 	l.sw 0x0(r3),r7
  SPI(OSD_CMD_RST);
  414954:	d4 02 30 00 	l.sw 0x0(r2),r6
  414958:	84 c2 00 00 	l.lwz r6,0x0(r2)
  SPI(0x00);
  41495c:	d4 02 28 00 	l.sw 0x0(r2),r5
  414960:	84 42 00 00 	l.lwz r2,0x0(r2)
	DisableOsd();
  414964:	d4 03 20 00 	l.sw 0x0(r3),r4
        {
            OsdReconfig();
        }

        if (menu || (select && (menusub == 1))) // exit menu
  414968:	bc 2e 00 00 	l.sfnei r14,0x0
  41496c:	10 00 00 0a 	l.bf 414994 <main+0x574c>
  414970:	bc 10 00 00 	l.sfeqi r16,0x0
  414974:	10 00 08 d9 	l.bf 416cd8 <main+0x7a90>
  414978:	15 00 00 00 	l.nop 0x0
  41497c:	18 40 00 41 	l.movhi r2,0x41
  414980:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  414984:	8c 42 00 00 	l.lbz r2,0x0(r2)
  414988:	bc 22 00 01 	l.sfnei r2,0x1
  41498c:	10 00 08 d3 	l.bf 416cd8 <main+0x7a90>
  414990:	15 00 00 00 	l.nop 0x0
        {
            menustate = MENU_MISC1;
  414994:	18 40 00 41 	l.movhi r2,0x41
  414998:	9c e0 00 04 	l.addi r7,r0,0x4
  41499c:	a8 42 a3 89 	l.ori r2,r2,0xa389
            menusub = 1;
  4149a0:	9d 80 00 01 	l.addi r12,r0,0x1
            OsdReconfig();
        }

        if (menu || (select && (menusub == 1))) // exit menu
        {
            menustate = MENU_MISC1;
  4149a4:	d8 02 38 00 	l.sb 0x0(r2),r7
            menusub = 1;
  4149a8:	18 40 00 41 	l.movhi r2,0x41
  4149ac:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  4149b0:	00 00 08 ca 	l.j 416cd8 <main+0x7a90>
  4149b4:	d8 02 60 00 	l.sb 0x0(r2),r12
        }
        break;
*/

    case MENU_SAVECONFIG_1 :
		helptext=helptexts[HELPTEXT_NONE];
  4149b8:	18 40 00 42 	l.movhi r2,0x42
  4149bc:	9d a0 00 00 	l.addi r13,r0,0x0
  4149c0:	a8 42 0b 74 	l.ori r2,r2,0xb74
		menumask=0x3f;
  4149c4:	9c 60 00 3f 	l.addi r3,r0,0x3f
        }
        break;
*/

    case MENU_SAVECONFIG_1 :
		helptext=helptexts[HELPTEXT_NONE];
  4149c8:	d4 02 68 00 	l.sw 0x0(r2),r13
		menumask=0x3f;
  4149cc:	18 40 00 41 	l.movhi r2,0x41
		parentstate=menustate;
 		OsdSetTitle("Guardar",0);
  4149d0:	a8 8d 00 00 	l.ori r4,r13,0x0
        break;
*/

    case MENU_SAVECONFIG_1 :
		helptext=helptexts[HELPTEXT_NONE];
		menumask=0x3f;
  4149d4:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
  4149d8:	d4 02 18 00 	l.sw 0x0(r2),r3
		parentstate=menustate;
  4149dc:	18 40 00 41 	l.movhi r2,0x41
  4149e0:	9c 60 00 2c 	l.addi r3,r0,0x2c
  4149e4:	a8 42 fd 24 	l.ori r2,r2,0xfd24
  4149e8:	d8 02 18 00 	l.sb 0x0(r2),r3
 		OsdSetTitle("Guardar",0);
  4149ec:	18 60 00 41 	l.movhi r3,0x41

        OsdWrite(0, "", 0, 0);
        OsdWrite(1, "        Defecto", menusub == 0,0);
  4149f0:	18 40 00 41 	l.movhi r2,0x41

    case MENU_SAVECONFIG_1 :
		helptext=helptexts[HELPTEXT_NONE];
		menumask=0x3f;
		parentstate=menustate;
 		OsdSetTitle("Guardar",0);
  4149f4:	a8 63 91 f7 	l.ori r3,r3,0x91f7
  4149f8:	07 ff ba 7e 	l.jal 4033f0 <OsdSetTitle>
  4149fc:	a8 42 a3 8a 	l.ori r2,r2,0xa38a

        OsdWrite(0, "", 0, 0);
  414a00:	9c 60 00 00 	l.addi r3,r0,0x0
  414a04:	18 80 00 41 	l.movhi r4,0x41
  414a08:	a8 a3 00 00 	l.ori r5,r3,0x0
  414a0c:	a8 c3 00 00 	l.ori r6,r3,0x0
  414a10:	07 ff bc f8 	l.jal 403df0 <OsdWrite>
  414a14:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(1, "        Defecto", menusub == 0,0);
  414a18:	8c 42 00 00 	l.lbz r2,0x0(r2)
  414a1c:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  414a20:	18 80 00 41 	l.movhi r4,0x41
  414a24:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  414a28:	9c 60 00 01 	l.addi r3,r0,0x1
  414a2c:	a8 84 91 4b 	l.ori r4,r4,0x914b
  414a30:	07 ff bc f0 	l.jal 403df0 <OsdWrite>
  414a34:	9c c0 00 00 	l.addi r6,r0,0x0
        OsdWrite(2, "        1", menusub == 1,0);
  414a38:	ac a2 00 01 	l.xori r5,r2,0x1
  414a3c:	18 80 00 41 	l.movhi r4,0x41
  414a40:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  414a44:	9c 60 00 02 	l.addi r3,r0,0x2
  414a48:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  414a4c:	a8 84 91 5d 	l.ori r4,r4,0x915d
  414a50:	07 ff bc e8 	l.jal 403df0 <OsdWrite>
  414a54:	9c c0 00 00 	l.addi r6,r0,0x0
        OsdWrite(3, "        2", menusub == 2,0);
  414a58:	ac a2 00 02 	l.xori r5,r2,0x2
  414a5c:	18 80 00 41 	l.movhi r4,0x41
  414a60:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  414a64:	9c 60 00 03 	l.addi r3,r0,0x3
  414a68:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  414a6c:	a8 84 91 69 	l.ori r4,r4,0x9169
  414a70:	07 ff bc e0 	l.jal 403df0 <OsdWrite>
  414a74:	9c c0 00 00 	l.addi r6,r0,0x0
        OsdWrite(4, "        3", menusub == 3,0);
  414a78:	ac a2 00 03 	l.xori r5,r2,0x3
  414a7c:	18 80 00 41 	l.movhi r4,0x41
  414a80:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  414a84:	9c 60 00 04 	l.addi r3,r0,0x4
  414a88:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  414a8c:	a8 84 91 75 	l.ori r4,r4,0x9175
  414a90:	07 ff bc d8 	l.jal 403df0 <OsdWrite>
  414a94:	9c c0 00 00 	l.addi r6,r0,0x0
        OsdWrite(5, "        4", menusub == 4,0);
  414a98:	ac a2 00 04 	l.xori r5,r2,0x4
  414a9c:	18 80 00 41 	l.movhi r4,0x41
  414aa0:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  414aa4:	9c 60 00 05 	l.addi r3,r0,0x5
  414aa8:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  414aac:	a8 84 91 81 	l.ori r4,r4,0x9181
  414ab0:	9c c0 00 00 	l.addi r6,r0,0x0
  414ab4:	07 ff bc cf 	l.jal 403df0 <OsdWrite>
  414ab8:	ac 42 00 05 	l.xori r2,r2,0x5
        OsdWrite(6, "", 0,0);
  414abc:	9c a0 00 00 	l.addi r5,r0,0x0
  414ac0:	18 80 00 41 	l.movhi r4,0x41
  414ac4:	a8 c5 00 00 	l.ori r6,r5,0x0
  414ac8:	9c 60 00 06 	l.addi r3,r0,0x6
  414acc:	07 ff bc c9 	l.jal 403df0 <OsdWrite>
  414ad0:	a8 84 83 f7 	l.ori r4,r4,0x83f7
//        OsdWrite(7, "              exit", menusub == 3);
        OsdWrite(7, STD_EXIT, menusub == 5,0);
  414ad4:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  414ad8:	18 80 00 41 	l.movhi r4,0x41
  414adc:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  414ae0:	a8 84 8b a4 	l.ori r4,r4,0x8ba4
  414ae4:	9c 60 00 07 	l.addi r3,r0,0x7
  414ae8:	9c c0 00 00 	l.addi r6,r0,0x0
  414aec:	07 ff bc c1 	l.jal 403df0 <OsdWrite>
  414af0:	18 40 00 41 	l.movhi r2,0x41

        menustate = MENU_SAVECONFIG_2;
  414af4:	a8 42 a3 89 	l.ori r2,r2,0xa389
  414af8:	9c 80 00 2d 	l.addi r4,r0,0x2d
  414afc:	00 00 08 77 	l.j 416cd8 <main+0x7a90>
  414b00:	d8 02 20 00 	l.sb 0x0(r2),r4
        break;

    case MENU_SAVECONFIG_2 :

        if (menu)
  414b04:	bc 0e 00 00 	l.sfeqi r14,0x0
  414b08:	10 00 00 0b 	l.bf 414b34 <main+0x58ec>
  414b0c:	bc 1a 00 00 	l.sfeqi r26,0x0
				menusub = 1;
			}
        }
        if (menu) // exit menu
        {
            menustate = MENU_MAIN2_1;
  414b10:	18 40 00 41 	l.movhi r2,0x41
  414b14:	9c a0 00 28 	l.addi r5,r0,0x28
  414b18:	a8 42 a3 89 	l.ori r2,r2,0xa389
            menusub = 1;
  414b1c:	9c c0 00 01 	l.addi r6,r0,0x1
				menusub = 1;
			}
        }
        if (menu) // exit menu
        {
            menustate = MENU_MAIN2_1;
  414b20:	d8 02 28 00 	l.sb 0x0(r2),r5
            menusub = 1;
  414b24:	18 40 00 41 	l.movhi r2,0x41
  414b28:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  414b2c:	00 00 08 6b 	l.j 416cd8 <main+0x7a90>
  414b30:	d8 02 30 00 	l.sb 0x0(r2),r6
		{
            menustate = MENU_MAIN2_1;
            menusub = 5;
		}

        else if (up)
  414b34:	10 00 00 0e 	l.bf 414b6c <main+0x5924>
  414b38:	bc 14 00 00 	l.sfeqi r20,0x0
        {
            if (menusub > 0)
  414b3c:	18 40 00 41 	l.movhi r2,0x41
  414b40:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  414b44:	8c 62 00 00 	l.lbz r3,0x0(r2)
  414b48:	bc 03 00 00 	l.sfeqi r3,0x0
  414b4c:	10 00 00 03 	l.bf 414b58 <main+0x5910>
  414b50:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
                menusub--;
  414b54:	d8 02 18 00 	l.sb 0x0(r2),r3
            menustate = MENU_SAVECONFIG_1;
  414b58:	18 40 00 41 	l.movhi r2,0x41
  414b5c:	9c e0 00 2c 	l.addi r7,r0,0x2c
  414b60:	a8 42 a3 89 	l.ori r2,r2,0xa389
  414b64:	00 00 08 5d 	l.j 416cd8 <main+0x7a90>
  414b68:	d8 02 38 00 	l.sb 0x0(r2),r7
        }
        else if (down)
  414b6c:	10 00 00 0e 	l.bf 414ba4 <main+0x595c>
  414b70:	bc 10 00 00 	l.sfeqi r16,0x0
        {
//            if (menusub < 3)
            if (menusub < 5)
  414b74:	18 40 00 41 	l.movhi r2,0x41
  414b78:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  414b7c:	8c 62 00 00 	l.lbz r3,0x0(r2)
  414b80:	bc 43 00 04 	l.sfgtui r3,0x4
  414b84:	10 00 00 03 	l.bf 414b90 <main+0x5948>
  414b88:	9c 63 00 01 	l.addi r3,r3,0x1
                menusub++;
  414b8c:	d8 02 18 00 	l.sb 0x0(r2),r3
            menustate = MENU_SAVECONFIG_1;
  414b90:	18 40 00 41 	l.movhi r2,0x41
  414b94:	9d 80 00 2c 	l.addi r12,r0,0x2c
  414b98:	a8 42 a3 89 	l.ori r2,r2,0xa389
  414b9c:	00 00 08 4f 	l.j 416cd8 <main+0x7a90>
  414ba0:	d8 02 60 00 	l.sb 0x0(r2),r12
        }
        else if (select)
  414ba4:	10 00 08 4d 	l.bf 416cd8 <main+0x7a90>
  414ba8:	15 00 00 00 	l.nop 0x0
        {
			if(menusub<5)
  414bac:	18 40 00 41 	l.movhi r2,0x41
  414bb0:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  414bb4:	8c 62 00 00 	l.lbz r3,0x0(r2)
  414bb8:	bc 43 00 04 	l.sfgtui r3,0x4
  414bbc:	10 00 00 73 	l.bf 414d88 <main+0x5b40>
  414bc0:	9c e0 00 28 	l.addi r7,r0,0x28
			{
				SetConfigurationFilename(menusub);
  414bc4:	07 ff be 9f 	l.jal 404640 <SetConfigurationFilename>
  414bc8:	18 40 00 41 	l.movhi r2,0x41

	if(!filename)
		filename=configfilename;	// Use slot-based filename if none provided.

    // save configuration data
    if (FileOpen(&file, filename))
  414bcc:	a8 42 cb 80 	l.ori r2,r2,0xcb80
  414bd0:	18 80 00 41 	l.movhi r4,0x41
  414bd4:	a8 62 00 00 	l.ori r3,r2,0x0
  414bd8:	07 ff d1 be 	l.jal 4092d0 <FileOpen>
  414bdc:	a8 84 cd 40 	l.ori r4,r4,0xcd40
  414be0:	bc 0b 00 00 	l.sfeqi r11,0x0
  414be4:	10 00 00 28 	l.bf 414c84 <main+0x5a3c>
  414be8:	15 00 00 00 	l.nop 0x0
    {
        printf("Configuration file size: %lu\r", file.size);
  414bec:	84 62 00 18 	l.lwz r3,0x18(r2)
  414bf0:	d4 01 18 00 	l.sw 0x0(r1),r3
  414bf4:	18 60 00 41 	l.movhi r3,0x41
  414bf8:	07 ff be a7 	l.jal 404694 <printf>
  414bfc:	a8 63 84 91 	l.ori r3,r3,0x8491
        if (file.size != sizeof(config))
  414c00:	84 62 00 18 	l.lwz r3,0x18(r2)
  414c04:	bc 03 00 6c 	l.sfeqi r3,0x6c
  414c08:	10 00 00 08 	l.bf 414c28 <main+0x59e0>
  414c0c:	9c 60 00 6c 	l.addi r3,r0,0x6c
        {
            file.size = sizeof(config);
  414c10:	d4 02 18 18 	l.sw 0x18(r2),r3
            if (!UpdateEntry(&file))
  414c14:	07 ff c8 a2 	l.jal 406e9c <UpdateEntry>
  414c18:	a8 62 00 00 	l.ori r3,r2,0x0
  414c1c:	bc 0b 00 00 	l.sfeqi r11,0x0
  414c20:	10 00 00 55 	l.bf 414d74 <main+0x5b2c>
  414c24:	15 00 00 00 	l.nop 0x0
#include <string.h>
#include <stdint.h>

void *memset(void *dst, int c, size_t n)
{
	char *q = dst;
  414c28:	18 40 00 41 	l.movhi r2,0x41
  414c2c:	00 00 00 04 	l.j 414c3c <main+0x59f4>
  414c30:	a8 42 a4 dc 	l.ori r2,r2,0xa4dc
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
		*q++ = c;
  414c34:	d8 02 68 00 	l.sb 0x0(r2),r13
  414c38:	9c 42 00 01 	l.addi r2,r2,0x1
	asm volatile ("cld ; rep ; stosq ; movl %3,%%ecx ; rep ; stosb"
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
  414c3c:	18 60 00 41 	l.movhi r3,0x41
  414c40:	a8 63 a8 dc 	l.ori r3,r3,0xa8dc
  414c44:	e4 22 18 00 	l.sfne r2,r3
  414c48:	13 ff ff fb 	l.bf 414c34 <main+0x59ec>
  414c4c:	9d a0 00 00 	l.addi r13,r0,0x0
                return(0);
        }

        memset((void*)&sector_buffer, 0, sizeof(sector_buffer));
        memcpy((void*)&sector_buffer, (void*)&config, sizeof(config));
  414c50:	18 60 00 41 	l.movhi r3,0x41
  414c54:	18 80 00 41 	l.movhi r4,0x41
  414c58:	a8 63 a4 dc 	l.ori r3,r3,0xa4dc
  414c5c:	a8 84 cc ac 	l.ori r4,r4,0xccac
  414c60:	07 ff ad 88 	l.jal 400280 <memcpy>
  414c64:	9c a0 00 6c 	l.addi r5,r0,0x6c
        FileWrite(&file, sector_buffer);
  414c68:	18 60 00 41 	l.movhi r3,0x41
  414c6c:	18 80 00 41 	l.movhi r4,0x41
  414c70:	a8 63 cb 80 	l.ori r3,r3,0xcb80
  414c74:	07 ff bf 18 	l.jal 4048d4 <FileWrite>
  414c78:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
				SaveConfiguration(NULL);
		        menustate = MENU_NONE1;
  414c7c:	00 00 00 3f 	l.j 414d78 <main+0x5b30>
  414c80:	18 40 00 41 	l.movhi r2,0x41
        return(1);
    }
    else
    {
        printf("Configuration file not found!\r");
  414c84:	18 60 00 41 	l.movhi r3,0x41
  414c88:	07 ff be 83 	l.jal 404694 <printf>
  414c8c:	a8 63 91 ff 	l.ori r3,r3,0x91ff
        printf("Trying to create a new one...\r");
  414c90:	18 60 00 41 	l.movhi r3,0x41
  414c94:	07 ff be 80 	l.jal 404694 <printf>
  414c98:	a8 63 92 1e 	l.ori r3,r3,0x921e
        strncpy(file.name, filename, 11);
  414c9c:	18 80 00 41 	l.movhi r4,0x41
  414ca0:	a8 62 00 00 	l.ori r3,r2,0x0
  414ca4:	a8 84 cd 40 	l.ori r4,r4,0xcd40
  414ca8:	07 ff ad b1 	l.jal 40036c <strncpy>
  414cac:	9c a0 00 0b 	l.addi r5,r0,0xb
        file.attributes = 0;
        file.size = sizeof(config);
  414cb0:	9c 60 00 6c 	l.addi r3,r0,0x6c
    else
    {
        printf("Configuration file not found!\r");
        printf("Trying to create a new one...\r");
        strncpy(file.name, filename, 11);
        file.attributes = 0;
  414cb4:	d8 02 a0 0b 	l.sb 0xb(r2),r20
        file.size = sizeof(config);
  414cb8:	d4 02 18 18 	l.sw 0x18(r2),r3
        if (FileCreate(0, &file))
  414cbc:	a8 82 00 00 	l.ori r4,r2,0x0
  414cc0:	07 ff c8 f2 	l.jal 407088 <FileCreate>
  414cc4:	a8 74 00 00 	l.ori r3,r20,0x0
  414cc8:	bc 0b 00 00 	l.sfeqi r11,0x0
  414ccc:	10 00 00 26 	l.bf 414d64 <main+0x5b1c>
  414cd0:	18 60 00 41 	l.movhi r3,0x41
#include <string.h>
#include <stdint.h>

void *memset(void *dst, int c, size_t n)
{
	char *q = dst;
  414cd4:	18 40 00 41 	l.movhi r2,0x41
        {
            printf("File created.\r");
  414cd8:	a8 63 92 3d 	l.ori r3,r3,0x923d
  414cdc:	07 ff be 6e 	l.jal 404694 <printf>
  414ce0:	a8 42 a4 dc 	l.ori r2,r2,0xa4dc
            printf("Trying to write new data...\r");
  414ce4:	18 60 00 41 	l.movhi r3,0x41
  414ce8:	07 ff be 6b 	l.jal 404694 <printf>
  414cec:	a8 63 92 4c 	l.ori r3,r3,0x924c
	asm volatile ("cld ; rep ; stosq ; movl %3,%%ecx ; rep ; stosb"
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
  414cf0:	00 00 00 05 	l.j 414d04 <main+0x5abc>
  414cf4:	18 a0 00 41 	l.movhi r5,0x41
		*q++ = c;
  414cf8:	9c 80 00 00 	l.addi r4,r0,0x0
  414cfc:	d8 02 20 00 	l.sb 0x0(r2),r4
  414d00:	9c 42 00 01 	l.addi r2,r2,0x1
	asm volatile ("cld ; rep ; stosq ; movl %3,%%ecx ; rep ; stosb"
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#else
	while (n--) {
  414d04:	a8 a5 a8 dc 	l.ori r5,r5,0xa8dc
  414d08:	e4 22 28 00 	l.sfne r2,r5
  414d0c:	13 ff ff fb 	l.bf 414cf8 <main+0x5ab0>
  414d10:	18 a0 00 41 	l.movhi r5,0x41
            memset((void*)sector_buffer, 0, sizeof(sector_buffer));
            memcpy((void*)sector_buffer, (void*)&config, sizeof(config));
  414d14:	18 60 00 41 	l.movhi r3,0x41
  414d18:	18 80 00 41 	l.movhi r4,0x41
  414d1c:	a8 63 a4 dc 	l.ori r3,r3,0xa4dc
  414d20:	a8 84 cc ac 	l.ori r4,r4,0xccac
  414d24:	07 ff ad 57 	l.jal 400280 <memcpy>
  414d28:	9c a0 00 6c 	l.addi r5,r0,0x6c

            if (FileWrite(&file, sector_buffer))
  414d2c:	18 60 00 41 	l.movhi r3,0x41
  414d30:	18 80 00 41 	l.movhi r4,0x41
  414d34:	a8 63 cb 80 	l.ori r3,r3,0xcb80
  414d38:	07 ff be e7 	l.jal 4048d4 <FileWrite>
  414d3c:	a8 84 a4 dc 	l.ori r4,r4,0xa4dc
  414d40:	bc 0b 00 00 	l.sfeqi r11,0x0
  414d44:	10 00 00 05 	l.bf 414d58 <main+0x5b10>
  414d48:	15 00 00 00 	l.nop 0x0
            {
                printf("File written successfully.\r");
  414d4c:	18 60 00 41 	l.movhi r3,0x41
  414d50:	00 00 00 07 	l.j 414d6c <main+0x5b24>
  414d54:	a8 63 92 69 	l.ori r3,r3,0x9269
                return(1);
            }
            else
                printf("File write failed!\r");
  414d58:	18 60 00 41 	l.movhi r3,0x41
  414d5c:	00 00 00 04 	l.j 414d6c <main+0x5b24>
  414d60:	a8 63 92 85 	l.ori r3,r3,0x9285
        }
        else
            printf("File creation failed!\r");
  414d64:	18 60 00 41 	l.movhi r3,0x41
  414d68:	a8 63 92 99 	l.ori r3,r3,0x9299
  414d6c:	07 ff be 4a 	l.jal 404694 <printf>
  414d70:	15 00 00 00 	l.nop 0x0
  414d74:	18 40 00 41 	l.movhi r2,0x41
  414d78:	9c c0 00 00 	l.addi r6,r0,0x0
  414d7c:	a8 42 a3 89 	l.ori r2,r2,0xa389
  414d80:	00 00 07 d6 	l.j 416cd8 <main+0x7a90>
  414d84:	d8 02 30 00 	l.sb 0x0(r2),r6
			}
			else
			{
				menustate = MENU_MAIN2_1;
  414d88:	18 60 00 41 	l.movhi r3,0x41
  414d8c:	a8 63 a3 89 	l.ori r3,r3,0xa389
				menusub = 1;
  414d90:	9d 80 00 01 	l.addi r12,r0,0x1
				SaveConfiguration(NULL);
		        menustate = MENU_NONE1;
			}
			else
			{
				menustate = MENU_MAIN2_1;
  414d94:	d8 03 38 00 	l.sb 0x0(r3),r7
				menusub = 1;
  414d98:	00 00 07 d0 	l.j 416cd8 <main+0x7a90>
  414d9c:	d8 02 60 00 	l.sb 0x0(r2),r12

        /******************************************************************/
        /* chipset settings menu                                          */
        /******************************************************************/
    case MENU_SETTINGS_CHIPSET1 :
		helptext=helptexts[HELPTEXT_CHIPSET];
  414da0:	18 60 00 41 	l.movhi r3,0x41
  414da4:	18 40 00 42 	l.movhi r2,0x42
  414da8:	a8 63 92 b0 	l.ori r3,r3,0x92b0
  414dac:	a8 42 0b 74 	l.ori r2,r2,0xb74
		menumask=0;
  414db0:	9d a0 00 00 	l.addi r13,r0,0x0

        /******************************************************************/
        /* chipset settings menu                                          */
        /******************************************************************/
    case MENU_SETTINGS_CHIPSET1 :
		helptext=helptexts[HELPTEXT_CHIPSET];
  414db4:	d4 02 18 00 	l.sw 0x0(r2),r3
		menumask=0;
  414db8:	18 40 00 41 	l.movhi r2,0x41
 		OsdSetTitle("Chipset",OSD_ARROW_LEFT|OSD_ARROW_RIGHT);
  414dbc:	18 60 00 41 	l.movhi r3,0x41
        /******************************************************************/
        /* chipset settings menu                                          */
        /******************************************************************/
    case MENU_SETTINGS_CHIPSET1 :
		helptext=helptexts[HELPTEXT_CHIPSET];
		menumask=0;
  414dc0:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
 		OsdSetTitle("Chipset",OSD_ARROW_LEFT|OSD_ARROW_RIGHT);
  414dc4:	a8 63 93 c7 	l.ori r3,r3,0x93c7
        /******************************************************************/
        /* chipset settings menu                                          */
        /******************************************************************/
    case MENU_SETTINGS_CHIPSET1 :
		helptext=helptexts[HELPTEXT_CHIPSET];
		menumask=0;
  414dc8:	d4 02 68 00 	l.sw 0x0(r2),r13
 		OsdSetTitle("Chipset",OSD_ARROW_LEFT|OSD_ARROW_RIGHT);
  414dcc:	9c 80 00 03 	l.addi r4,r0,0x3
  414dd0:	07 ff b9 88 	l.jal 4033f0 <OsdSetTitle>
  414dd4:	19 c0 00 41 	l.movhi r14,0x41

        OsdWrite(0, "", 0,0);
  414dd8:	9c 60 00 00 	l.addi r3,r0,0x0
  414ddc:	18 80 00 41 	l.movhi r4,0x41
  414de0:	a8 a3 00 00 	l.ori r5,r3,0x0
  414de4:	a8 c3 00 00 	l.ori r6,r3,0x0
  414de8:	a8 84 83 f7 	l.ori r4,r4,0x83f7
  414dec:	07 ff bc 01 	l.jal 403df0 <OsdWrite>
  414df0:	a9 ce cc ac 	l.ori r14,r14,0xccac
        strcpy(s, "         CPU : ");
  414df4:	18 60 00 41 	l.movhi r3,0x41
  414df8:	18 80 00 41 	l.movhi r4,0x41
  414dfc:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  414e00:	07 ff ad 33 	l.jal 4002cc <strcpy>
  414e04:	a8 84 93 cf 	l.ori r4,r4,0x93cf
        strcat(s, config_cpu_msg[config.cpu & 0x03]);
  414e08:	8c 4e 00 68 	l.lbz r2,0x68(r14)
  414e0c:	a4 42 00 03 	l.andi r2,r2,0x3
  414e10:	18 60 00 41 	l.movhi r3,0x41
  414e14:	b8 42 00 02 	l.slli r2,r2,0x2
  414e18:	a8 63 6e b8 	l.ori r3,r3,0x6eb8
  414e1c:	e0 42 18 00 	l.add r2,r2,r3
  414e20:	84 62 00 00 	l.lwz r3,0x0(r2)
  414e24:	07 ff e0 08 	l.jal 40ce44 <strcat.clone.3>
  414e28:	18 40 00 41 	l.movhi r2,0x41
        OsdWrite(1, s, menusub == 0,0);
  414e2c:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  414e30:	18 80 00 41 	l.movhi r4,0x41
  414e34:	8c 42 00 00 	l.lbz r2,0x0(r2)
  414e38:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  414e3c:	9c 60 00 01 	l.addi r3,r0,0x1
  414e40:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  414e44:	a8 84 cd 18 	l.ori r4,r4,0xcd18
  414e48:	07 ff bb ea 	l.jal 403df0 <OsdWrite>
  414e4c:	9c c0 00 00 	l.addi r6,r0,0x0
        strcpy(s, "       Video : ");
  414e50:	18 60 00 41 	l.movhi r3,0x41
  414e54:	18 80 00 41 	l.movhi r4,0x41
  414e58:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  414e5c:	07 ff ad 1c 	l.jal 4002cc <strcpy>
  414e60:	a8 84 93 df 	l.ori r4,r4,0x93df
        strcat(s, config.chipset & CONFIG_NTSC ? "NTSC" : "PAL");
  414e64:	8c 8e 00 27 	l.lbz r4,0x27(r14)
  414e68:	18 60 00 41 	l.movhi r3,0x41
  414e6c:	a4 84 00 02 	l.andi r4,r4,0x2
  414e70:	bc 04 00 00 	l.sfeqi r4,0x0
  414e74:	10 00 00 04 	l.bf 414e84 <main+0x5c3c>
  414e78:	a8 63 89 a0 	l.ori r3,r3,0x89a0
  414e7c:	18 60 00 41 	l.movhi r3,0x41
  414e80:	a8 63 89 9b 	l.ori r3,r3,0x899b
  414e84:	07 ff df f0 	l.jal 40ce44 <strcat.clone.3>
  414e88:	15 00 00 00 	l.nop 0x0
        OsdWrite(2, s, menusub == 1,0);
  414e8c:	ac a2 00 01 	l.xori r5,r2,0x1
  414e90:	18 80 00 41 	l.movhi r4,0x41
  414e94:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  414e98:	9c c0 00 00 	l.addi r6,r0,0x0
  414e9c:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  414ea0:	9c 60 00 02 	l.addi r3,r0,0x2
  414ea4:	07 ff bb d3 	l.jal 403df0 <OsdWrite>
  414ea8:	a8 84 cd 18 	l.ori r4,r4,0xcd18
        strcpy(s, "     Chipset : ");
  414eac:	18 60 00 41 	l.movhi r3,0x41
  414eb0:	18 80 00 41 	l.movhi r4,0x41
  414eb4:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  414eb8:	07 ff ad 05 	l.jal 4002cc <strcpy>
  414ebc:	a8 84 93 ef 	l.ori r4,r4,0x93ef
//        strcat(s, config_chipset_msg[config.chipset >> 2 & 3]);
        strcat(s, config_chipset_msg[(config.chipset >> 2) & 7]);;
  414ec0:	18 60 00 41 	l.movhi r3,0x41
  414ec4:	18 80 00 41 	l.movhi r4,0x41
  414ec8:	a8 63 cc ac 	l.ori r3,r3,0xccac
  414ecc:	a8 84 6e e4 	l.ori r4,r4,0x6ee4
  414ed0:	8c 63 00 27 	l.lbz r3,0x27(r3)
  414ed4:	a4 63 00 1c 	l.andi r3,r3,0x1c
  414ed8:	e0 63 20 00 	l.add r3,r3,r4
  414edc:	07 ff df da 	l.jal 40ce44 <strcat.clone.3>
  414ee0:	84 63 00 00 	l.lwz r3,0x0(r3)
        OsdWrite(3, s, menusub == 2,0);
  414ee4:	ac a2 00 02 	l.xori r5,r2,0x2
  414ee8:	18 80 00 41 	l.movhi r4,0x41
  414eec:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  414ef0:	9c 60 00 03 	l.addi r3,r0,0x3
  414ef4:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  414ef8:	a8 84 cd 18 	l.ori r4,r4,0xcd18
  414efc:	9c c0 00 00 	l.addi r6,r0,0x0
  414f00:	07 ff bb bc 	l.jal 403df0 <OsdWrite>
  414f04:	ac 42 00 03 	l.xori r2,r2,0x3
        OsdWrite(4, "", 0,0);
  414f08:	9c a0 00 00 	l.addi r5,r0,0x0
  414f0c:	18 80 00 41 	l.movhi r4,0x41
  414f10:	a8 c5 00 00 	l.ori r6,r5,0x0
  414f14:	9c 60 00 04 	l.addi r3,r0,0x4
  414f18:	07 ff bb b6 	l.jal 403df0 <OsdWrite>
  414f1c:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(5, "", 0,0);
  414f20:	9c a0 00 00 	l.addi r5,r0,0x0
  414f24:	18 80 00 41 	l.movhi r4,0x41
  414f28:	a8 c5 00 00 	l.ori r6,r5,0x0
  414f2c:	9c 60 00 05 	l.addi r3,r0,0x5
  414f30:	07 ff bb b0 	l.jal 403df0 <OsdWrite>
  414f34:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(6, "", 0,0);
  414f38:	9c a0 00 00 	l.addi r5,r0,0x0
  414f3c:	18 80 00 41 	l.movhi r4,0x41
  414f40:	a8 c5 00 00 	l.ori r6,r5,0x0
  414f44:	9c 60 00 06 	l.addi r3,r0,0x6
  414f48:	07 ff bb aa 	l.jal 403df0 <OsdWrite>
  414f4c:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(7, STD_EXIT, menusub == 3,0);
  414f50:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  414f54:	18 80 00 41 	l.movhi r4,0x41
  414f58:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  414f5c:	9c 60 00 07 	l.addi r3,r0,0x7
  414f60:	a8 84 8b a4 	l.ori r4,r4,0x8ba4
  414f64:	9c c0 00 00 	l.addi r6,r0,0x0
  414f68:	07 ff bb a2 	l.jal 403df0 <OsdWrite>
  414f6c:	18 40 00 41 	l.movhi r2,0x41

        menustate = MENU_SETTINGS_CHIPSET2;
  414f70:	a8 42 a3 89 	l.ori r2,r2,0xa389
  414f74:	9c a0 00 19 	l.addi r5,r0,0x19
  414f78:	00 00 07 58 	l.j 416cd8 <main+0x7a90>
  414f7c:	d8 02 28 00 	l.sb 0x0(r2),r5
        break;
	case MENU_SETTINGS_CHIPSET2:

		if (down && menusub < 6)
  414f80:	bc 14 00 00 	l.sfeqi r20,0x0
  414f84:	10 00 00 0e 	l.bf 414fbc <main+0x5d74>
  414f88:	bc 1a 00 00 	l.sfeqi r26,0x0
  414f8c:	18 40 00 41 	l.movhi r2,0x41
  414f90:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  414f94:	8c 62 00 00 	l.lbz r3,0x0(r2)
  414f98:	bc 43 00 05 	l.sfgtui r3,0x5
  414f9c:	10 00 00 08 	l.bf 414fbc <main+0x5d74>
  414fa0:	bc 1a 00 00 	l.sfeqi r26,0x0
		{
			menusub++;
  414fa4:	9c 63 00 01 	l.addi r3,r3,0x1
			menustate = MENU_SETTINGS_CHIPSET1;
  414fa8:	9c c0 00 18 	l.addi r6,r0,0x18
        break;
	case MENU_SETTINGS_CHIPSET2:

		if (down && menusub < 6)
		{
			menusub++;
  414fac:	d8 02 18 00 	l.sb 0x0(r2),r3
			menustate = MENU_SETTINGS_CHIPSET1;
  414fb0:	18 40 00 41 	l.movhi r2,0x41
  414fb4:	a8 42 a3 89 	l.ori r2,r2,0xa389
  414fb8:	d8 02 30 00 	l.sb 0x0(r2),r6
		}

		if (up && menusub > 0)
  414fbc:	10 00 00 0e 	l.bf 414ff4 <main+0x5dac>
  414fc0:	bc 10 00 00 	l.sfeqi r16,0x0
  414fc4:	18 40 00 41 	l.movhi r2,0x41
  414fc8:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  414fcc:	8c 62 00 00 	l.lbz r3,0x0(r2)
  414fd0:	bc 03 00 00 	l.sfeqi r3,0x0
  414fd4:	10 00 00 08 	l.bf 414ff4 <main+0x5dac>
  414fd8:	bc 10 00 00 	l.sfeqi r16,0x0
		{
			menusub--;
  414fdc:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
			menustate = MENU_SETTINGS_CHIPSET1;
  414fe0:	9c e0 00 18 	l.addi r7,r0,0x18
			menustate = MENU_SETTINGS_CHIPSET1;
		}

		if (up && menusub > 0)
		{
			menusub--;
  414fe4:	d8 02 18 00 	l.sb 0x0(r2),r3
			menustate = MENU_SETTINGS_CHIPSET1;
  414fe8:	18 40 00 41 	l.movhi r2,0x41
  414fec:	a8 42 a3 89 	l.ori r2,r2,0xa389
  414ff0:	d8 02 38 00 	l.sb 0x0(r2),r7
		}

		if (select)
  414ff4:	10 00 00 5d 	l.bf 415168 <main+0x5f20>
  414ff8:	bc 0e 00 00 	l.sfeqi r14,0x0
		{
			if (menusub == 0)
  414ffc:	18 60 00 41 	l.movhi r3,0x41
  415000:	a8 63 a3 8a 	l.ori r3,r3,0xa38a
  415004:	8c 43 00 00 	l.lbz r2,0x0(r3)
  415008:	bc 22 00 00 	l.sfnei r2,0x0
  41500c:	10 00 00 18 	l.bf 41506c <main+0x5e24>
  415010:	bc 22 00 01 	l.sfnei r2,0x1
			{
				menustate = MENU_SETTINGS_CHIPSET1;
  415014:	18 40 00 41 	l.movhi r2,0x41
  415018:	9d 80 00 18 	l.addi r12,r0,0x18
  41501c:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415020:	d8 02 60 00 	l.sb 0x0(r2),r12
				int _config_cpu = config.cpu & 0x3;
  415024:	18 40 00 41 	l.movhi r2,0x41
  415028:	a8 42 cc ac 	l.ori r2,r2,0xccac
  41502c:	8c 82 00 68 	l.lbz r4,0x68(r2)
  415030:	a4 44 00 03 	l.andi r2,r4,0x3
				_config_cpu += 1;
  415034:	9c 42 00 01 	l.addi r2,r2,0x1
				if (_config_cpu == 0x02) _config_cpu += 1;
  415038:	bc 22 00 02 	l.sfnei r2,0x2
  41503c:	10 00 00 03 	l.bf 415048 <main+0x5e00>
  415040:	9d a0 ff fc 	l.addi r13,r0,0xfffffffc
  415044:	9c 40 00 03 	l.addi r2,r0,0x3
				config.cpu = (config.cpu & 0xfc) | (_config_cpu & 0x3);
  415048:	a4 42 00 03 	l.andi r2,r2,0x3
  41504c:	e0 84 68 03 	l.and r4,r4,r13
  415050:	e0 62 20 04 	l.or r3,r2,r4
  415054:	18 40 00 41 	l.movhi r2,0x41
  415058:	a8 42 cc ac 	l.ori r2,r2,0xccac
				ConfigCPU(config.cpu);
  41505c:	07 ff bb fb 	l.jal 404048 <ConfigCPU>
  415060:	d8 02 18 68 	l.sb 0x68(r2),r3
                menustate = MENU_MAIN2_1;
                menusub = 2;
            }
        }

        if (menu)
  415064:	00 00 00 41 	l.j 415168 <main+0x5f20>
  415068:	bc 0e 00 00 	l.sfeqi r14,0x0
				_config_cpu += 1;
				if (_config_cpu == 0x02) _config_cpu += 1;
				config.cpu = (config.cpu & 0xfc) | (_config_cpu & 0x3);
				ConfigCPU(config.cpu);
			}
			else if (menusub == 1)
  41506c:	10 00 00 0b 	l.bf 415098 <main+0x5e50>
  415070:	9c 80 00 18 	l.addi r4,r0,0x18
			{
				config.chipset ^= CONFIG_NTSC;
  415074:	18 40 00 41 	l.movhi r2,0x41
  415078:	a8 42 cc ac 	l.ori r2,r2,0xccac
  41507c:	8c 62 00 27 	l.lbz r3,0x27(r2)
  415080:	ac 63 00 02 	l.xori r3,r3,0x2
  415084:	d8 02 18 27 	l.sb 0x27(r2),r3
				menustate = MENU_SETTINGS_CHIPSET1;
  415088:	18 40 00 41 	l.movhi r2,0x41
  41508c:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415090:	00 00 00 2a 	l.j 415138 <main+0x5ef0>
  415094:	d8 02 20 00 	l.sb 0x0(r2),r4
				ConfigChipset(config.chipset);
			}
			else if (menusub == 2)
  415098:	bc 22 00 02 	l.sfnei r2,0x2
  41509c:	10 00 00 2b 	l.bf 415148 <main+0x5f00>
  4150a0:	bc 22 00 03 	l.sfnei r2,0x3
			{
				switch (config.chipset & 0x1c) {
  4150a4:	18 40 00 41 	l.movhi r2,0x41
  4150a8:	a8 42 cc ac 	l.ori r2,r2,0xccac
  4150ac:	8c 62 00 27 	l.lbz r3,0x27(r2)
  4150b0:	a4 83 00 1c 	l.andi r4,r3,0x1c
  4150b4:	bc 04 00 04 	l.sfeqi r4,0x4
  4150b8:	10 00 00 13 	l.bf 415104 <main+0x5ebc>
  4150bc:	15 00 00 00 	l.nop 0x0
  4150c0:	bd 44 00 04 	l.sfgtsi r4,0x4
  4150c4:	10 00 00 07 	l.bf 4150e0 <main+0x5e98>
  4150c8:	bc 04 00 08 	l.sfeqi r4,0x8
  4150cc:	bc 04 00 00 	l.sfeqi r4,0x0
  4150d0:	10 00 00 0b 	l.bf 4150fc <main+0x5eb4>
  4150d4:	a4 63 00 03 	l.andi r3,r3,0x3
				case (CONFIG_AGA | CONFIG_ECS) :
					config.chipset = (config.chipset & 3) | 0;
					break;
}

				menustate = MENU_SETTINGS_CHIPSET1;
  4150d8:	00 00 00 12 	l.j 415120 <main+0x5ed8>
  4150dc:	18 40 00 41 	l.movhi r2,0x41
				menustate = MENU_SETTINGS_CHIPSET1;
				ConfigChipset(config.chipset);
			}
			else if (menusub == 2)
			{
				switch (config.chipset & 0x1c) {
  4150e0:	10 00 00 0c 	l.bf 415110 <main+0x5ec8>
  4150e4:	15 00 00 00 	l.nop 0x0
  4150e8:	bc 04 00 18 	l.sfeqi r4,0x18
  4150ec:	0c 00 00 0c 	l.bnf 41511c <main+0x5ed4>
  4150f0:	a4 63 00 03 	l.andi r3,r3,0x3
					break;
				case CONFIG_ECS:
					config.chipset = (config.chipset & 3) | CONFIG_AGA | CONFIG_ECS;
					break;
				case (CONFIG_AGA | CONFIG_ECS) :
					config.chipset = (config.chipset & 3) | 0;
  4150f4:	00 00 00 0a 	l.j 41511c <main+0x5ed4>
  4150f8:	d8 02 18 27 	l.sb 0x27(r2),r3
			}
			else if (menusub == 2)
			{
				switch (config.chipset & 0x1c) {
				case 0:
					config.chipset = (config.chipset & 3) | CONFIG_A1000;
  4150fc:	00 00 00 07 	l.j 415118 <main+0x5ed0>
  415100:	a8 63 00 04 	l.ori r3,r3,0x4
					break;
				case CONFIG_A1000:
					config.chipset = (config.chipset & 3) | CONFIG_ECS;
  415104:	a4 63 00 03 	l.andi r3,r3,0x3
  415108:	00 00 00 04 	l.j 415118 <main+0x5ed0>
  41510c:	a8 63 00 08 	l.ori r3,r3,0x8
					break;
				case CONFIG_ECS:
					config.chipset = (config.chipset & 3) | CONFIG_AGA | CONFIG_ECS;
  415110:	a4 63 00 03 	l.andi r3,r3,0x3
  415114:	a8 63 00 18 	l.ori r3,r3,0x18
					break;
				case (CONFIG_AGA | CONFIG_ECS) :
					config.chipset = (config.chipset & 3) | 0;
  415118:	d8 02 18 27 	l.sb 0x27(r2),r3
					break;
}

				menustate = MENU_SETTINGS_CHIPSET1;
  41511c:	18 40 00 41 	l.movhi r2,0x41
  415120:	9c a0 00 18 	l.addi r5,r0,0x18
  415124:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415128:	d8 02 28 00 	l.sb 0x0(r2),r5
				ConfigChipset(config.chipset);
  41512c:	18 40 00 41 	l.movhi r2,0x41
  415130:	a8 42 cc ac 	l.ori r2,r2,0xccac
  415134:	8c 62 00 27 	l.lbz r3,0x27(r2)
  415138:	07 ff bb d3 	l.jal 404084 <ConfigChipset>
  41513c:	15 00 00 00 	l.nop 0x0
                menustate = MENU_MAIN2_1;
                menusub = 2;
            }
        }

        if (menu)
  415140:	00 00 00 0a 	l.j 415168 <main+0x5f20>
  415144:	bc 0e 00 00 	l.sfeqi r14,0x0
}

				menustate = MENU_SETTINGS_CHIPSET1;
				ConfigChipset(config.chipset);
}
            else if (menusub == 3)
  415148:	10 00 00 08 	l.bf 415168 <main+0x5f20>
  41514c:	bc 0e 00 00 	l.sfeqi r14,0x0
            {
                menustate = MENU_MAIN2_1;
  415150:	18 40 00 41 	l.movhi r2,0x41
  415154:	9c c0 00 28 	l.addi r6,r0,0x28
  415158:	a8 42 a3 89 	l.ori r2,r2,0xa389
                menusub = 2;
  41515c:	9c e0 00 02 	l.addi r7,r0,0x2
				menustate = MENU_SETTINGS_CHIPSET1;
				ConfigChipset(config.chipset);
}
            else if (menusub == 3)
            {
                menustate = MENU_MAIN2_1;
  415160:	d8 02 30 00 	l.sb 0x0(r2),r6
                menusub = 2;
  415164:	d8 03 38 00 	l.sb 0x0(r3),r7
            }
        }

        if (menu)
  415168:	10 00 00 0b 	l.bf 415194 <main+0x5f4c>
  41516c:	bc 16 00 00 	l.sfeqi r22,0x0
        {
            menustate = MENU_MAIN2_1;
  415170:	18 40 00 41 	l.movhi r2,0x41
  415174:	9d 80 00 28 	l.addi r12,r0,0x28
  415178:	a8 42 a3 89 	l.ori r2,r2,0xa389
            menusub = 2;
  41517c:	9d a0 00 02 	l.addi r13,r0,0x2
            }
        }

        if (menu)
        {
            menustate = MENU_MAIN2_1;
  415180:	d8 02 60 00 	l.sb 0x0(r2),r12
            menusub = 2;
  415184:	18 40 00 41 	l.movhi r2,0x41
  415188:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  41518c:	00 00 06 d3 	l.j 416cd8 <main+0x7a90>
  415190:	d8 02 68 00 	l.sb 0x0(r2),r13
        }
        else if (right)
  415194:	10 00 00 0a 	l.bf 4151bc <main+0x5f74>
  415198:	bc 18 00 00 	l.sfeqi r24,0x0
        {
            menustate = MENU_SETTINGS_MEMORY1;
  41519c:	18 40 00 41 	l.movhi r2,0x41
  4151a0:	9c 60 00 16 	l.addi r3,r0,0x16
  4151a4:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4151a8:	d8 02 18 00 	l.sb 0x0(r2),r3
            menusub = 0;
  4151ac:	18 40 00 41 	l.movhi r2,0x41
  4151b0:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  4151b4:	00 00 06 c9 	l.j 416cd8 <main+0x7a90>
  4151b8:	d8 02 70 00 	l.sb 0x0(r2),r14
        }
        else if (left)
  4151bc:	10 00 06 c7 	l.bf 416cd8 <main+0x7a90>
  4151c0:	9c 80 00 14 	l.addi r4,r0,0x14
        {
            menustate = MENU_SETTINGS_VIDEO1;
  4151c4:	18 40 00 41 	l.movhi r2,0x41
  4151c8:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4151cc:	d8 02 20 00 	l.sb 0x0(r2),r4
            menusub = 0;
  4151d0:	18 40 00 41 	l.movhi r2,0x41
  4151d4:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  4151d8:	00 00 06 c0 	l.j 416cd8 <main+0x7a90>
  4151dc:	d8 02 b0 00 	l.sb 0x0(r2),r22

        /******************************************************************/
        /* memory settings menu                                           */
        /******************************************************************/
    case MENU_SETTINGS_MEMORY1 :
		helptext=helptexts[HELPTEXT_MEMORY];
  4151e0:	18 60 00 41 	l.movhi r3,0x41
  4151e4:	18 40 00 42 	l.movhi r2,0x42
  4151e8:	a8 63 93 ff 	l.ori r3,r3,0x93ff
  4151ec:	a8 42 0b 74 	l.ori r2,r2,0xb74
		menumask=0x3f;
		parentstate=menustate;
  4151f0:	9c a0 00 16 	l.addi r5,r0,0x16

        /******************************************************************/
        /* memory settings menu                                           */
        /******************************************************************/
    case MENU_SETTINGS_MEMORY1 :
		helptext=helptexts[HELPTEXT_MEMORY];
  4151f4:	d4 02 18 00 	l.sw 0x0(r2),r3
		menumask=0x3f;
  4151f8:	18 40 00 41 	l.movhi r2,0x41
  4151fc:	9c 60 00 3f 	l.addi r3,r0,0x3f
  415200:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
		parentstate=menustate;

 		OsdSetTitle("Memoria",OSD_ARROW_LEFT|OSD_ARROW_RIGHT);
  415204:	9c 80 00 03 	l.addi r4,r0,0x3
        /******************************************************************/
        /* memory settings menu                                           */
        /******************************************************************/
    case MENU_SETTINGS_MEMORY1 :
		helptext=helptexts[HELPTEXT_MEMORY];
		menumask=0x3f;
  415208:	d4 02 18 00 	l.sw 0x0(r2),r3
		parentstate=menustate;
  41520c:	18 40 00 41 	l.movhi r2,0x41

 		OsdSetTitle("Memoria",OSD_ARROW_LEFT|OSD_ARROW_RIGHT);
  415210:	18 60 00 41 	l.movhi r3,0x41
        /* memory settings menu                                           */
        /******************************************************************/
    case MENU_SETTINGS_MEMORY1 :
		helptext=helptexts[HELPTEXT_MEMORY];
		menumask=0x3f;
		parentstate=menustate;
  415214:	a8 42 fd 24 	l.ori r2,r2,0xfd24

 		OsdSetTitle("Memoria",OSD_ARROW_LEFT|OSD_ARROW_RIGHT);
  415218:	a8 63 95 5f 	l.ori r3,r3,0x955f
        /* memory settings menu                                           */
        /******************************************************************/
    case MENU_SETTINGS_MEMORY1 :
		helptext=helptexts[HELPTEXT_MEMORY];
		menumask=0x3f;
		parentstate=menustate;
  41521c:	d8 02 28 00 	l.sb 0x0(r2),r5

 		OsdSetTitle("Memoria",OSD_ARROW_LEFT|OSD_ARROW_RIGHT);
  415220:	07 ff b8 74 	l.jal 4033f0 <OsdSetTitle>
  415224:	19 c0 00 41 	l.movhi r14,0x41

        OsdWrite(0, "", 0,0);
  415228:	9c 60 00 00 	l.addi r3,r0,0x0
  41522c:	18 80 00 41 	l.movhi r4,0x41
  415230:	a8 a3 00 00 	l.ori r5,r3,0x0
  415234:	a8 c3 00 00 	l.ori r6,r3,0x0
  415238:	a8 84 83 f7 	l.ori r4,r4,0x83f7
  41523c:	07 ff ba ed 	l.jal 403df0 <OsdWrite>
  415240:	a9 ce cc ac 	l.ori r14,r14,0xccac
        strcpy(s, "      CHIP : ");
  415244:	18 60 00 41 	l.movhi r3,0x41
  415248:	18 80 00 41 	l.movhi r4,0x41
  41524c:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  415250:	07 ff ac 1f 	l.jal 4002cc <strcpy>
  415254:	a8 84 95 67 	l.ori r4,r4,0x9567
        strcat(s, config_memory_chip_msg[config.memory & 0x03]);
  415258:	8c 4e 00 26 	l.lbz r2,0x26(r14)
  41525c:	a4 42 00 03 	l.andi r2,r2,0x3
  415260:	18 c0 00 41 	l.movhi r6,0x41
  415264:	b8 42 00 02 	l.slli r2,r2,0x2
  415268:	a8 c6 6e 7c 	l.ori r6,r6,0x6e7c
  41526c:	e0 42 30 00 	l.add r2,r2,r6
  415270:	84 62 00 00 	l.lwz r3,0x0(r2)
  415274:	07 ff de f4 	l.jal 40ce44 <strcat.clone.3>
  415278:	18 40 00 41 	l.movhi r2,0x41
        OsdWrite(1, s, menusub == 0,0);
  41527c:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  415280:	18 80 00 41 	l.movhi r4,0x41
  415284:	8c 42 00 00 	l.lbz r2,0x0(r2)
  415288:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  41528c:	9c c0 00 00 	l.addi r6,r0,0x0
  415290:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  415294:	9c 60 00 01 	l.addi r3,r0,0x1
  415298:	07 ff ba d6 	l.jal 403df0 <OsdWrite>
  41529c:	a8 84 cd 18 	l.ori r4,r4,0xcd18
        strcpy(s, "      SLOW : ");
  4152a0:	18 60 00 41 	l.movhi r3,0x41
  4152a4:	18 80 00 41 	l.movhi r4,0x41
  4152a8:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  4152ac:	07 ff ac 08 	l.jal 4002cc <strcpy>
  4152b0:	a8 84 95 75 	l.ori r4,r4,0x9575
        strcat(s, config_memory_slow_msg[config.memory >> 2 & 0x03]);
  4152b4:	8c 6e 00 26 	l.lbz r3,0x26(r14)
  4152b8:	18 e0 00 41 	l.movhi r7,0x41
  4152bc:	a4 63 00 0c 	l.andi r3,r3,0xc
  4152c0:	a8 e7 6e 8c 	l.ori r7,r7,0x6e8c
  4152c4:	e0 63 38 00 	l.add r3,r3,r7
  4152c8:	07 ff de df 	l.jal 40ce44 <strcat.clone.3>
  4152cc:	84 63 00 00 	l.lwz r3,0x0(r3)
        OsdWrite(2, s, menusub == 1,0);
  4152d0:	ac a2 00 01 	l.xori r5,r2,0x1
  4152d4:	18 80 00 41 	l.movhi r4,0x41
  4152d8:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  4152dc:	9c c0 00 00 	l.addi r6,r0,0x0
  4152e0:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  4152e4:	9c 60 00 02 	l.addi r3,r0,0x2
  4152e8:	07 ff ba c2 	l.jal 403df0 <OsdWrite>
  4152ec:	a8 84 cd 18 	l.ori r4,r4,0xcd18
        strcpy(s, "      FAST : ");
  4152f0:	18 60 00 41 	l.movhi r3,0x41
  4152f4:	18 80 00 41 	l.movhi r4,0x41
  4152f8:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  4152fc:	07 ff ab f4 	l.jal 4002cc <strcpy>
  415300:	a8 84 95 83 	l.ori r4,r4,0x9583
        strcat(s, config_memory_fast_msg[config.memory >> 4 & 0x03]);
  415304:	8c 6e 00 26 	l.lbz r3,0x26(r14)
  415308:	b8 63 00 42 	l.srli r3,r3,0x2
  41530c:	19 80 00 41 	l.movhi r12,0x41
  415310:	a4 63 00 0c 	l.andi r3,r3,0xc
  415314:	a9 8c 6e a8 	l.ori r12,r12,0x6ea8
  415318:	e0 63 60 00 	l.add r3,r3,r12
  41531c:	07 ff de ca 	l.jal 40ce44 <strcat.clone.3>
  415320:	84 63 00 00 	l.lwz r3,0x0(r3)
        OsdWrite(3, s, menusub == 2,0);
  415324:	ac a2 00 02 	l.xori r5,r2,0x2
  415328:	18 80 00 41 	l.movhi r4,0x41
  41532c:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  415330:	9c 60 00 03 	l.addi r3,r0,0x3
  415334:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  415338:	a8 84 cd 18 	l.ori r4,r4,0xcd18
  41533c:	07 ff ba ad 	l.jal 403df0 <OsdWrite>
  415340:	9c c0 00 00 	l.addi r6,r0,0x0

        OsdWrite(4, "", 0,0);
  415344:	9c a0 00 00 	l.addi r5,r0,0x0
  415348:	18 80 00 41 	l.movhi r4,0x41
  41534c:	9c 60 00 04 	l.addi r3,r0,0x4
  415350:	a8 84 83 f7 	l.ori r4,r4,0x83f7
  415354:	07 ff ba a7 	l.jal 403df0 <OsdWrite>
  415358:	a8 c5 00 00 	l.ori r6,r5,0x0

        strcpy(s, "      ROM  : ");
  41535c:	18 60 00 41 	l.movhi r3,0x41
  415360:	18 80 00 41 	l.movhi r4,0x41
  415364:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  415368:	07 ff ab d9 	l.jal 4002cc <strcpy>
  41536c:	a8 84 95 91 	l.ori r4,r4,0x9591
        if (config.kickstart.long_name[0])
  415370:	90 6e 00 14 	l.lbs r3,0x14(r14)
  415374:	bc 03 00 00 	l.sfeqi r3,0x0
  415378:	10 00 00 05 	l.bf 41538c <main+0x6144>
  41537c:	15 00 00 00 	l.nop 0x0
            strncat(s, config.kickstart.long_name, sizeof(config.kickstart.long_name));
  415380:	9c 6e 00 14 	l.addi r3,r14,0x14
  415384:	00 00 00 04 	l.j 415394 <main+0x614c>
  415388:	9c 80 00 10 	l.addi r4,r0,0x10
        else
            strncat(s, config.kickstart.name, sizeof(config.kickstart.name));
  41538c:	9c 6e 00 0c 	l.addi r3,r14,0xc
  415390:	9c 80 00 08 	l.addi r4,r0,0x8
  415394:	07 ff de bc 	l.jal 40ce84 <strncat.clone.4>
  415398:	15 00 00 00 	l.nop 0x0
        OsdWrite(5, s, menusub == 3,0);
  41539c:	ac a2 00 03 	l.xori r5,r2,0x3
  4153a0:	18 80 00 41 	l.movhi r4,0x41
  4153a4:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  4153a8:	9c 60 00 05 	l.addi r3,r0,0x5
  4153ac:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  4153b0:	a8 84 cd 18 	l.ori r4,r4,0xcd18
  4153b4:	07 ff ba 8f 	l.jal 403df0 <OsdWrite>
  4153b8:	9c c0 00 00 	l.addi r6,r0,0x0

#ifdef ACTIONREPLAY_BROKEN
        OsdWrite(0, "", 0,0);
		menumask&=0xef;	// Remove bit 4
#else
        strcpy(s, "      AR3  : ");
  4153bc:	18 60 00 41 	l.movhi r3,0x41
  4153c0:	18 80 00 41 	l.movhi r4,0x41
  4153c4:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  4153c8:	07 ff ab c1 	l.jal 4002cc <strcpy>
  4153cc:	a8 84 95 9f 	l.ori r4,r4,0x959f
        strcat(s, config.disable_ar3 ? "disabled" : "enabled ");
  4153d0:	18 60 00 41 	l.movhi r3,0x41
  4153d4:	a8 63 cc ac 	l.ori r3,r3,0xccac
  4153d8:	8c 83 00 2a 	l.lbz r4,0x2a(r3)
  4153dc:	18 60 00 41 	l.movhi r3,0x41
  4153e0:	bc 04 00 00 	l.sfeqi r4,0x0
  4153e4:	10 00 00 04 	l.bf 4153f4 <main+0x61ac>
  4153e8:	a8 63 89 a4 	l.ori r3,r3,0x89a4
  4153ec:	18 60 00 41 	l.movhi r3,0x41
  4153f0:	a8 63 84 61 	l.ori r3,r3,0x8461
  4153f4:	07 ff de 94 	l.jal 40ce44 <strcat.clone.3>
  4153f8:	15 00 00 00 	l.nop 0x0
        OsdWrite(6, s, menusub == 4,config.memory&0x20);	// Grey out AR3 if more than 2MB fast memory
  4153fc:	18 60 00 41 	l.movhi r3,0x41
  415400:	ac a2 00 04 	l.xori r5,r2,0x4
  415404:	a8 63 cc ac 	l.ori r3,r3,0xccac
  415408:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  41540c:	8c c3 00 26 	l.lbz r6,0x26(r3)
  415410:	18 80 00 41 	l.movhi r4,0x41
  415414:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  415418:	9c 60 00 06 	l.addi r3,r0,0x6
  41541c:	a8 84 cd 18 	l.ori r4,r4,0xcd18
  415420:	a4 c6 00 20 	l.andi r6,r6,0x20
  415424:	07 ff ba 73 	l.jal 403df0 <OsdWrite>
  415428:	ac 42 00 05 	l.xori r2,r2,0x5
#endif

        OsdWrite(7, STD_EXIT, menusub == 5,0);
  41542c:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  415430:	18 80 00 41 	l.movhi r4,0x41
  415434:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  415438:	9c 60 00 07 	l.addi r3,r0,0x7
  41543c:	a8 84 8b a4 	l.ori r4,r4,0x8ba4
  415440:	9c c0 00 00 	l.addi r6,r0,0x0
  415444:	07 ff ba 6b 	l.jal 403df0 <OsdWrite>
  415448:	18 40 00 41 	l.movhi r2,0x41

        menustate = MENU_SETTINGS_MEMORY2;
  41544c:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415450:	9d a0 00 17 	l.addi r13,r0,0x17
  415454:	00 00 06 21 	l.j 416cd8 <main+0x7a90>
  415458:	d8 02 68 00 	l.sb 0x0(r2),r13
        break;

    case MENU_SETTINGS_MEMORY2 :
        if (select)
  41545c:	bc 10 00 00 	l.sfeqi r16,0x0
  415460:	10 00 00 65 	l.bf 4155f4 <main+0x63ac>
  415464:	bc 0e 00 00 	l.sfeqi r14,0x0
        {
            if (menusub == 0)
  415468:	18 60 00 41 	l.movhi r3,0x41
  41546c:	a8 63 a3 8a 	l.ori r3,r3,0xa38a
  415470:	8c 43 00 00 	l.lbz r2,0x0(r3)
  415474:	bc 22 00 00 	l.sfnei r2,0x0
  415478:	10 00 00 0f 	l.bf 4154b4 <main+0x626c>
  41547c:	9c a0 ff fc 	l.addi r5,r0,0xfffffffc
            {
                config.memory = ((config.memory + 1) & 0x03) | (config.memory & ~0x03);
  415480:	18 40 00 41 	l.movhi r2,0x41
  415484:	a8 42 cc ac 	l.ori r2,r2,0xccac
                menustate = MENU_SETTINGS_MEMORY1;
  415488:	9c c0 00 16 	l.addi r6,r0,0x16
    case MENU_SETTINGS_MEMORY2 :
        if (select)
        {
            if (menusub == 0)
            {
                config.memory = ((config.memory + 1) & 0x03) | (config.memory & ~0x03);
  41548c:	8c 82 00 26 	l.lbz r4,0x26(r2)
  415490:	9c 64 00 01 	l.addi r3,r4,0x1
  415494:	e0 84 28 03 	l.and r4,r4,r5
  415498:	a4 63 00 03 	l.andi r3,r3,0x3
  41549c:	e0 63 20 04 	l.or r3,r3,r4
  4154a0:	d8 02 18 26 	l.sb 0x26(r2),r3
                menustate = MENU_SETTINGS_MEMORY1;
  4154a4:	18 40 00 41 	l.movhi r2,0x41
  4154a8:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4154ac:	00 00 00 11 	l.j 4154f0 <main+0x62a8>
  4154b0:	d8 02 30 00 	l.sb 0x0(r2),r6
                ConfigMemory(config.memory);
            }
            else if (menusub == 1)
  4154b4:	bc 22 00 01 	l.sfnei r2,0x1
  4154b8:	10 00 00 12 	l.bf 415500 <main+0x62b8>
  4154bc:	9c e0 ff f3 	l.addi r7,r0,0xfffffff3
            {
                config.memory = ((config.memory + 4) & 0x0C) | (config.memory & ~0x0C);
  4154c0:	18 40 00 41 	l.movhi r2,0x41
  4154c4:	a8 42 cc ac 	l.ori r2,r2,0xccac
                menustate = MENU_SETTINGS_MEMORY1;
  4154c8:	9d 80 00 16 	l.addi r12,r0,0x16
                menustate = MENU_SETTINGS_MEMORY1;
                ConfigMemory(config.memory);
            }
            else if (menusub == 1)
            {
                config.memory = ((config.memory + 4) & 0x0C) | (config.memory & ~0x0C);
  4154cc:	8c 82 00 26 	l.lbz r4,0x26(r2)
  4154d0:	9c 64 00 04 	l.addi r3,r4,0x4
  4154d4:	e0 84 38 03 	l.and r4,r4,r7
  4154d8:	a4 63 00 0c 	l.andi r3,r3,0xc
  4154dc:	e0 63 20 04 	l.or r3,r3,r4
  4154e0:	d8 02 18 26 	l.sb 0x26(r2),r3
                menustate = MENU_SETTINGS_MEMORY1;
  4154e4:	18 40 00 41 	l.movhi r2,0x41
  4154e8:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4154ec:	d8 02 60 00 	l.sb 0x0(r2),r12
                ConfigMemory(config.memory);
  4154f0:	07 ff ba c8 	l.jal 404010 <ConfigMemory>
  4154f4:	15 00 00 00 	l.nop 0x0
                menustate = MENU_MAIN2_1;
                menusub = 3;
            }
        }

        if (menu)
  4154f8:	00 00 00 3f 	l.j 4155f4 <main+0x63ac>
  4154fc:	bc 0e 00 00 	l.sfeqi r14,0x0
            {
                config.memory = ((config.memory + 4) & 0x0C) | (config.memory & ~0x0C);
                menustate = MENU_SETTINGS_MEMORY1;
                ConfigMemory(config.memory);
            }
            else if (menusub == 2)
  415500:	bc 22 00 02 	l.sfnei r2,0x2
  415504:	10 00 00 0f 	l.bf 415540 <main+0x62f8>
  415508:	9d a0 ff cf 	l.addi r13,r0,0xffffffcf
            {
                config.memory = ((config.memory + 0x10) & 0x30) | (config.memory & ~0x30);
  41550c:	18 40 00 41 	l.movhi r2,0x41
  415510:	a8 42 cc ac 	l.ori r2,r2,0xccac
  415514:	8c 82 00 26 	l.lbz r4,0x26(r2)
  415518:	9c 64 00 10 	l.addi r3,r4,0x10
  41551c:	e0 84 68 03 	l.and r4,r4,r13
  415520:	a4 63 00 30 	l.andi r3,r3,0x30
  415524:	e0 63 20 04 	l.or r3,r3,r4
//                if ((config.memory & 0x30) == 0x30)
//				config.memory -= 0x30;
//				if (!(config.disable_ar3 & 0x01)&&(config.memory & 0x20))
//                    config.memory &= ~0x30;
                menustate = MENU_SETTINGS_MEMORY1;
  415528:	9c 80 00 16 	l.addi r4,r0,0x16
                menustate = MENU_SETTINGS_MEMORY1;
                ConfigMemory(config.memory);
            }
            else if (menusub == 2)
            {
                config.memory = ((config.memory + 0x10) & 0x30) | (config.memory & ~0x30);
  41552c:	d8 02 18 26 	l.sb 0x26(r2),r3
//                if ((config.memory & 0x30) == 0x30)
//				config.memory -= 0x30;
//				if (!(config.disable_ar3 & 0x01)&&(config.memory & 0x20))
//                    config.memory &= ~0x30;
                menustate = MENU_SETTINGS_MEMORY1;
  415530:	18 40 00 41 	l.movhi r2,0x41
  415534:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415538:	03 ff ff ee 	l.j 4154f0 <main+0x62a8>
  41553c:	d8 02 20 00 	l.sb 0x0(r2),r4
                ConfigMemory(config.memory);
            }
            else if (menusub == 3)
  415540:	bc 22 00 03 	l.sfnei r2,0x3
  415544:	10 00 00 09 	l.bf 415568 <main+0x6320>
  415548:	9c 80 00 02 	l.addi r4,r0,0x2
            {
                SelectFile("ROM", SCAN_LFN, MENU_ROMFILE_SELECTED, MENU_SETTINGS_MEMORY1);
  41554c:	18 60 00 41 	l.movhi r3,0x41
  415550:	a8 63 87 46 	l.ori r3,r3,0x8746
  415554:	9c a0 00 11 	l.addi r5,r0,0x11
  415558:	07 ff cf 2f 	l.jal 409214 <SelectFile>
  41555c:	9c c0 00 16 	l.addi r6,r0,0x16
                menustate = MENU_MAIN2_1;
                menusub = 3;
            }
        }

        if (menu)
  415560:	00 00 00 25 	l.j 4155f4 <main+0x63ac>
  415564:	bc 0e 00 00 	l.sfeqi r14,0x0
            }
            else if (menusub == 3)
            {
                SelectFile("ROM", SCAN_LFN, MENU_ROMFILE_SELECTED, MENU_SETTINGS_MEMORY1);
            }
            else if (menusub == 4)
  415568:	bc 22 00 04 	l.sfnei r2,0x4
  41556c:	10 00 00 19 	l.bf 4155d0 <main+0x6388>
  415570:	bc 22 00 05 	l.sfnei r2,0x5
            {
		    if (!(config.disable_ar3 & 0x01)||(config.memory & 0x20))
  415574:	18 40 00 41 	l.movhi r2,0x41
  415578:	a8 42 cc ac 	l.ori r2,r2,0xccac
  41557c:	8c 62 00 2a 	l.lbz r3,0x2a(r2)
  415580:	a4 83 00 01 	l.andi r4,r3,0x1
  415584:	bc 04 00 00 	l.sfeqi r4,0x0
  415588:	10 00 00 07 	l.bf 4155a4 <main+0x635c>
  41558c:	15 00 00 00 	l.nop 0x0
  415590:	8c 82 00 26 	l.lbz r4,0x26(r2)
  415594:	a4 84 00 20 	l.andi r4,r4,0x20
  415598:	bc 04 00 00 	l.sfeqi r4,0x0
  41559c:	10 00 00 06 	l.bf 4155b4 <main+0x636c>
  4155a0:	9c a0 ff fe 	l.addi r5,r0,0xfffffffe
                    config.disable_ar3 |= 0x01;
  4155a4:	18 40 00 41 	l.movhi r2,0x41
  4155a8:	a8 63 00 01 	l.ori r3,r3,0x1
  4155ac:	00 00 00 03 	l.j 4155b8 <main+0x6370>
  4155b0:	a8 42 cc ac 	l.ori r2,r2,0xccac
		    else
                    config.disable_ar3 &= 0xFE;
  4155b4:	e0 63 28 03 	l.and r3,r3,r5
  4155b8:	d8 02 18 2a 	l.sb 0x2a(r2),r3
                menustate = MENU_SETTINGS_MEMORY1;
  4155bc:	18 40 00 41 	l.movhi r2,0x41
  4155c0:	9c c0 00 16 	l.addi r6,r0,0x16
  4155c4:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4155c8:	00 00 00 0a 	l.j 4155f0 <main+0x63a8>
  4155cc:	d8 02 30 00 	l.sb 0x0(r2),r6
            }
            else if (menusub == 5)
  4155d0:	10 00 00 09 	l.bf 4155f4 <main+0x63ac>
  4155d4:	bc 0e 00 00 	l.sfeqi r14,0x0
            {
                menustate = MENU_MAIN2_1;
  4155d8:	18 40 00 41 	l.movhi r2,0x41
  4155dc:	9c e0 00 28 	l.addi r7,r0,0x28
  4155e0:	a8 42 a3 89 	l.ori r2,r2,0xa389
                menusub = 3;
  4155e4:	9d 80 00 03 	l.addi r12,r0,0x3
                    config.disable_ar3 &= 0xFE;
                menustate = MENU_SETTINGS_MEMORY1;
            }
            else if (menusub == 5)
            {
                menustate = MENU_MAIN2_1;
  4155e8:	d8 02 38 00 	l.sb 0x0(r2),r7
                menusub = 3;
  4155ec:	d8 03 60 00 	l.sb 0x0(r3),r12
            }
        }

        if (menu)
  4155f0:	bc 0e 00 00 	l.sfeqi r14,0x0
  4155f4:	10 00 00 0b 	l.bf 415620 <main+0x63d8>
  4155f8:	bc 16 00 00 	l.sfeqi r22,0x0
        {
            menustate = MENU_MAIN2_1;
  4155fc:	18 40 00 41 	l.movhi r2,0x41
  415600:	9d a0 00 28 	l.addi r13,r0,0x28
  415604:	a8 42 a3 89 	l.ori r2,r2,0xa389
            menusub = 3;
  415608:	9c 60 00 03 	l.addi r3,r0,0x3
            }
        }

        if (menu)
        {
            menustate = MENU_MAIN2_1;
  41560c:	d8 02 68 00 	l.sb 0x0(r2),r13
            menusub = 3;
  415610:	18 40 00 41 	l.movhi r2,0x41
  415614:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  415618:	00 00 05 b0 	l.j 416cd8 <main+0x7a90>
  41561c:	d8 02 18 00 	l.sb 0x0(r2),r3
        }
        else if (right)
  415620:	10 00 00 0a 	l.bf 415648 <main+0x6400>
  415624:	bc 18 00 00 	l.sfeqi r24,0x0
        {
            menustate = MENU_SETTINGS_VIDEO1;
  415628:	18 40 00 41 	l.movhi r2,0x41
  41562c:	9c 80 00 14 	l.addi r4,r0,0x14
  415630:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415634:	d8 02 20 00 	l.sb 0x0(r2),r4
            menusub = 0;
  415638:	18 40 00 41 	l.movhi r2,0x41
  41563c:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  415640:	00 00 05 a6 	l.j 416cd8 <main+0x7a90>
  415644:	d8 02 70 00 	l.sb 0x0(r2),r14
        }
        else if (left)
  415648:	10 00 05 a4 	l.bf 416cd8 <main+0x7a90>
  41564c:	9c a0 00 18 	l.addi r5,r0,0x18
        {
            menustate = MENU_SETTINGS_CHIPSET1;
  415650:	18 40 00 41 	l.movhi r2,0x41
  415654:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415658:	d8 02 28 00 	l.sb 0x0(r2),r5
            menusub = 0;
  41565c:	18 40 00 41 	l.movhi r2,0x41
  415660:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  415664:	00 00 05 9d 	l.j 416cd8 <main+0x7a90>
  415668:	d8 02 b0 00 	l.sb 0x0(r2),r22
		// FIXME!  Nasty race condition here.  Changing HDF type has immediate effect
		// which could be disastrous if the user's writing to the drive at the time!
		// Make the menu work on the copy, not the original, and copy on acceptance,
		// not on rejection.
    case MENU_SETTINGS_HARDFILE1 :
		helptext=helptexts[HELPTEXT_HARDFILE];
  41566c:	18 60 00 41 	l.movhi r3,0x41
  415670:	18 40 00 42 	l.movhi r2,0x42
  415674:	a8 63 95 ad 	l.ori r3,r3,0x95ad
  415678:	a8 42 0b 74 	l.ori r2,r2,0xb74
		OsdSetTitle("DiscosDuros",0);
  41567c:	9c 80 00 00 	l.addi r4,r0,0x0
		// FIXME!  Nasty race condition here.  Changing HDF type has immediate effect
		// which could be disastrous if the user's writing to the drive at the time!
		// Make the menu work on the copy, not the original, and copy on acceptance,
		// not on rejection.
    case MENU_SETTINGS_HARDFILE1 :
		helptext=helptexts[HELPTEXT_HARDFILE];
  415680:	d4 02 18 00 	l.sw 0x0(r2),r3
		OsdSetTitle("DiscosDuros",0);
  415684:	18 60 00 41 	l.movhi r3,0x41

		parentstate = menustate;
  415688:	18 40 00 41 	l.movhi r2,0x41
		// which could be disastrous if the user's writing to the drive at the time!
		// Make the menu work on the copy, not the original, and copy on acceptance,
		// not on rejection.
    case MENU_SETTINGS_HARDFILE1 :
		helptext=helptexts[HELPTEXT_HARDFILE];
		OsdSetTitle("DiscosDuros",0);
  41568c:	a8 63 96 fd 	l.ori r3,r3,0x96fd
  415690:	07 ff b7 58 	l.jal 4033f0 <OsdSetTitle>
  415694:	a8 42 fd 24 	l.ori r2,r2,0xfd24

		parentstate = menustate;
  415698:	9c c0 00 1c 	l.addi r6,r0,0x1c
		menumask=0x21;	// b00100001 - On/off & exit enabled by default...
  41569c:	9c 60 00 21 	l.addi r3,r0,0x21
		// not on rejection.
    case MENU_SETTINGS_HARDFILE1 :
		helptext=helptexts[HELPTEXT_HARDFILE];
		OsdSetTitle("DiscosDuros",0);

		parentstate = menustate;
  4156a0:	d8 02 30 00 	l.sb 0x0(r2),r6
		menumask=0x21;	// b00100001 - On/off & exit enabled by default...
  4156a4:	18 40 00 41 	l.movhi r2,0x41
  4156a8:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
  4156ac:	d4 02 18 00 	l.sw 0x0(r2),r3
		if(config.enable_ide)
  4156b0:	18 60 00 41 	l.movhi r3,0x41
  4156b4:	a8 63 cc ac 	l.ori r3,r3,0xccac
  4156b8:	8c 63 00 2b 	l.lbz r3,0x2b(r3)
  4156bc:	bc 03 00 00 	l.sfeqi r3,0x0
  4156c0:	10 00 00 04 	l.bf 4156d0 <main+0x6488>
  4156c4:	15 00 00 00 	l.nop 0x0
			menumask|=0x0a;  // b00001010 - HD0 and HD1 type
  4156c8:	9c 60 00 2b 	l.addi r3,r0,0x2b
  4156cc:	d4 02 18 00 	l.sw 0x0(r2),r3
        strcpy(s, "   A600 IDE : ");
  4156d0:	18 60 00 41 	l.movhi r3,0x41
  4156d4:	18 80 00 41 	l.movhi r4,0x41
        strcat(s, config.enable_ide ? "on " : "off");
  4156d8:	18 40 00 41 	l.movhi r2,0x41

		parentstate = menustate;
		menumask=0x21;	// b00100001 - On/off & exit enabled by default...
		if(config.enable_ide)
			menumask|=0x0a;  // b00001010 - HD0 and HD1 type
        strcpy(s, "   A600 IDE : ");
  4156dc:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  4156e0:	a8 84 97 09 	l.ori r4,r4,0x9709
  4156e4:	07 ff aa fa 	l.jal 4002cc <strcpy>
  4156e8:	a8 42 cc ac 	l.ori r2,r2,0xccac
        strcat(s, config.enable_ide ? "on " : "off");
  4156ec:	8c 42 00 2b 	l.lbz r2,0x2b(r2)
  4156f0:	18 60 00 41 	l.movhi r3,0x41
  4156f4:	bc 02 00 00 	l.sfeqi r2,0x0
  4156f8:	10 00 00 04 	l.bf 415708 <main+0x64c0>
  4156fc:	a8 63 89 b1 	l.ori r3,r3,0x89b1
  415700:	18 60 00 41 	l.movhi r3,0x41
  415704:	a8 63 89 ad 	l.ori r3,r3,0x89ad
  415708:	07 ff dd cf 	l.jal 40ce44 <strcat.clone.3>
  41570c:	18 40 00 41 	l.movhi r2,0x41
        OsdWrite(0, s, menusub == 0,0);
  415710:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  415714:	9c 60 00 00 	l.addi r3,r0,0x0
  415718:	8d c2 00 00 	l.lbz r14,0x0(r2)
  41571c:	9c ae ff ff 	l.addi r5,r14,0xffffffff
  415720:	18 80 00 41 	l.movhi r4,0x41
  415724:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  415728:	a8 c3 00 00 	l.ori r6,r3,0x0
  41572c:	a8 84 cd 18 	l.ori r4,r4,0xcd18
  415730:	07 ff b9 b0 	l.jal 403df0 <OsdWrite>
  415734:	18 40 00 41 	l.movhi r2,0x41
        OsdWrite(1, "", 0,0);
  415738:	9c a0 00 00 	l.addi r5,r0,0x0
  41573c:	18 80 00 41 	l.movhi r4,0x41
  415740:	9c 60 00 01 	l.addi r3,r0,0x1
  415744:	a8 84 83 f7 	l.ori r4,r4,0x83f7
  415748:	a8 c5 00 00 	l.ori r6,r5,0x0
  41574c:	07 ff b9 a9 	l.jal 403df0 <OsdWrite>
  415750:	a8 42 cc ac 	l.ori r2,r2,0xccac

        strcpy(s, " Master : ");
  415754:	18 60 00 41 	l.movhi r3,0x41
  415758:	18 80 00 41 	l.movhi r4,0x41
  41575c:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  415760:	07 ff aa db 	l.jal 4002cc <strcpy>
  415764:	a8 84 97 18 	l.ori r4,r4,0x9718
		if(config.hardfile[0].enabled==(HDF_FILE|HDF_SYNTHRDB))
  415768:	8c 42 00 30 	l.lbz r2,0x30(r2)
  41576c:	bc 22 00 81 	l.sfnei r2,0x81
  415770:	10 00 00 05 	l.bf 415784 <main+0x653c>
  415774:	a4 42 00 0f 	l.andi r2,r2,0xf
			strcat(s,"Hardfile (filesys)");
  415778:	18 60 00 41 	l.movhi r3,0x41
  41577c:	00 00 00 07 	l.j 415798 <main+0x6550>
  415780:	a8 63 97 23 	l.ori r3,r3,0x9723
		else
	        strcat(s, config_hdf_msg[config.hardfile[0].enabled & HDF_TYPEMASK]);
  415784:	18 e0 00 41 	l.movhi r7,0x41
  415788:	b8 42 00 02 	l.slli r2,r2,0x2
  41578c:	a8 e7 6e c8 	l.ori r7,r7,0x6ec8
  415790:	e0 42 38 00 	l.add r2,r2,r7
  415794:	84 62 00 00 	l.lwz r3,0x0(r2)
  415798:	07 ff dd ab 	l.jal 40ce44 <strcat.clone.3>
  41579c:	18 40 00 41 	l.movhi r2,0x41
        OsdWrite(2, s, config.enable_ide ? (menusub == 1) : 0 ,config.enable_ide==0);
  4157a0:	a8 42 cc ac 	l.ori r2,r2,0xccac
  4157a4:	8c c2 00 2b 	l.lbz r6,0x2b(r2)
  4157a8:	bc 06 00 00 	l.sfeqi r6,0x0
  4157ac:	10 00 00 05 	l.bf 4157c0 <main+0x6578>
  4157b0:	a8 a6 00 00 	l.ori r5,r6,0x0
  4157b4:	ac ae 00 01 	l.xori r5,r14,0x1
  4157b8:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  4157bc:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  4157c0:	9c c6 ff ff 	l.addi r6,r6,0xffffffff
  4157c4:	18 80 00 41 	l.movhi r4,0x41
  4157c8:	b8 c6 00 5f 	l.srli r6,r6,0x1f

        if (config.hardfile[0].present)
  4157cc:	18 40 00 41 	l.movhi r2,0x41
        strcpy(s, " Master : ");
		if(config.hardfile[0].enabled==(HDF_FILE|HDF_SYNTHRDB))
			strcat(s,"Hardfile (filesys)");
		else
	        strcat(s, config_hdf_msg[config.hardfile[0].enabled & HDF_TYPEMASK]);
        OsdWrite(2, s, config.enable_ide ? (menusub == 1) : 0 ,config.enable_ide==0);
  4157d0:	9c 60 00 02 	l.addi r3,r0,0x2
  4157d4:	a8 84 cd 18 	l.ori r4,r4,0xcd18
  4157d8:	07 ff b9 86 	l.jal 403df0 <OsdWrite>
  4157dc:	a8 42 cc ac 	l.ori r2,r2,0xccac

        if (config.hardfile[0].present)
  4157e0:	8c 62 00 31 	l.lbz r3,0x31(r2)
  4157e4:	bc 03 00 00 	l.sfeqi r3,0x0
  4157e8:	10 00 00 16 	l.bf 415840 <main+0x65f8>
  4157ec:	18 60 00 41 	l.movhi r3,0x41
        {
            strcpy(s, "                                ");
  4157f0:	18 80 00 41 	l.movhi r4,0x41
  4157f4:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  4157f8:	07 ff aa b5 	l.jal 4002cc <strcpy>
  4157fc:	a8 84 80 69 	l.ori r4,r4,0x8069
            if (config.hardfile[0].long_name[0])
  415800:	90 62 00 3a 	l.lbs r3,0x3a(r2)
  415804:	bc 03 00 00 	l.sfeqi r3,0x0
  415808:	10 00 00 06 	l.bf 415820 <main+0x65d8>
  41580c:	9c a0 00 10 	l.addi r5,r0,0x10
                strncpy(&s[14], config.hardfile[0].long_name, sizeof(config.hardfile[0].long_name));
  415810:	18 60 00 41 	l.movhi r3,0x41
  415814:	9c 82 00 3a 	l.addi r4,r2,0x3a
  415818:	00 00 00 06 	l.j 415830 <main+0x65e8>
  41581c:	a8 63 cd 26 	l.ori r3,r3,0xcd26
            else
                strncpy(&s[14], config.hardfile[0].name, sizeof(config.hardfile[0].name));
  415820:	18 60 00 41 	l.movhi r3,0x41
  415824:	9c 82 00 32 	l.addi r4,r2,0x32
  415828:	a8 63 cd 26 	l.ori r3,r3,0xcd26
  41582c:	9c a0 00 08 	l.addi r5,r0,0x8
  415830:	07 ff aa cf 	l.jal 40036c <strncpy>
  415834:	15 00 00 00 	l.nop 0x0
        }
        else
            strcpy(s, "       ** fichero no existe **");

		enable=config.enable_ide && ((config.hardfile[0].enabled&HDF_TYPEMASK)==HDF_FILE);
  415838:	00 00 00 07 	l.j 415854 <main+0x660c>
  41583c:	18 60 00 41 	l.movhi r3,0x41
                strncpy(&s[14], config.hardfile[0].long_name, sizeof(config.hardfile[0].long_name));
            else
                strncpy(&s[14], config.hardfile[0].name, sizeof(config.hardfile[0].name));
        }
        else
            strcpy(s, "       ** fichero no existe **");
  415840:	18 80 00 41 	l.movhi r4,0x41
  415844:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  415848:	07 ff aa a1 	l.jal 4002cc <strcpy>
  41584c:	a8 84 97 36 	l.ori r4,r4,0x9736

		enable=config.enable_ide && ((config.hardfile[0].enabled&HDF_TYPEMASK)==HDF_FILE);
  415850:	18 60 00 41 	l.movhi r3,0x41
  415854:	a8 63 cc ac 	l.ori r3,r3,0xccac
  415858:	8c 43 00 2b 	l.lbz r2,0x2b(r3)
  41585c:	bc 02 00 00 	l.sfeqi r2,0x0
  415860:	10 00 00 0a 	l.bf 415888 <main+0x6640>
  415864:	b8 42 00 18 	l.slli r2,r2,0x18
  415868:	8c 43 00 30 	l.lbz r2,0x30(r3)
  41586c:	a4 42 00 0f 	l.andi r2,r2,0xf
  415870:	ac 42 00 01 	l.xori r2,r2,0x1
  415874:	e0 60 10 02 	l.sub r3,r0,r2
  415878:	e0 43 10 04 	l.or r2,r3,r2
  41587c:	ac 42 ff ff 	l.xori r2,r2,0xffffffff
  415880:	b8 42 00 5f 	l.srli r2,r2,0x1f
  415884:	b8 42 00 18 	l.slli r2,r2,0x18
  415888:	b8 42 00 98 	l.srai r2,r2,0x18
		if(enable)
  41588c:	bc 02 00 00 	l.sfeqi r2,0x0
  415890:	10 00 00 0b 	l.bf 4158bc <main+0x6674>
  415894:	9c a0 00 00 	l.addi r5,r0,0x0
			menumask|=0x04;	// Make hardfile selectable
  415898:	18 60 00 41 	l.movhi r3,0x41
	    OsdWrite(3, s, enable ? (menusub == 2) : 0 , enable==0);
  41589c:	9c a0 00 01 	l.addi r5,r0,0x1
        else
            strcpy(s, "       ** fichero no existe **");

		enable=config.enable_ide && ((config.hardfile[0].enabled&HDF_TYPEMASK)==HDF_FILE);
		if(enable)
			menumask|=0x04;	// Make hardfile selectable
  4158a0:	a8 63 a3 8c 	l.ori r3,r3,0xa38c
	    OsdWrite(3, s, enable ? (menusub == 2) : 0 , enable==0);
  4158a4:	bc 0e 00 02 	l.sfeqi r14,0x2
        else
            strcpy(s, "       ** fichero no existe **");

		enable=config.enable_ide && ((config.hardfile[0].enabled&HDF_TYPEMASK)==HDF_FILE);
		if(enable)
			menumask|=0x04;	// Make hardfile selectable
  4158a8:	84 83 00 00 	l.lwz r4,0x0(r3)
  4158ac:	a8 84 00 04 	l.ori r4,r4,0x4
	    OsdWrite(3, s, enable ? (menusub == 2) : 0 , enable==0);
  4158b0:	10 00 00 03 	l.bf 4158bc <main+0x6674>
  4158b4:	d4 03 20 00 	l.sw 0x0(r3),r4
  4158b8:	9c a0 00 00 	l.addi r5,r0,0x0
  4158bc:	a4 42 00 ff 	l.andi r2,r2,0xff
  4158c0:	18 80 00 41 	l.movhi r4,0x41
  4158c4:	9c c2 ff ff 	l.addi r6,r2,0xffffffff
  4158c8:	9c 60 00 03 	l.addi r3,r0,0x3
  4158cc:	b8 c6 00 5f 	l.srli r6,r6,0x1f
  4158d0:	a8 84 cd 18 	l.ori r4,r4,0xcd18
  4158d4:	07 ff b9 47 	l.jal 403df0 <OsdWrite>
  4158d8:	18 40 00 41 	l.movhi r2,0x41

        strcpy(s, "  Slave : ");
  4158dc:	18 60 00 41 	l.movhi r3,0x41
  4158e0:	18 80 00 41 	l.movhi r4,0x41
  4158e4:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  4158e8:	a8 84 97 55 	l.ori r4,r4,0x9755
  4158ec:	07 ff aa 78 	l.jal 4002cc <strcpy>
  4158f0:	a8 42 cc ac 	l.ori r2,r2,0xccac
		if(config.hardfile[1].enabled==(HDF_FILE|HDF_SYNTHRDB))
  4158f4:	8c 42 00 4c 	l.lbz r2,0x4c(r2)
  4158f8:	bc 22 00 81 	l.sfnei r2,0x81
  4158fc:	10 00 00 05 	l.bf 415910 <main+0x66c8>
  415900:	a4 42 00 0f 	l.andi r2,r2,0xf
			strcat(s,"Hardfile (filesys)");
  415904:	18 60 00 41 	l.movhi r3,0x41
  415908:	00 00 00 07 	l.j 415924 <main+0x66dc>
  41590c:	a8 63 97 23 	l.ori r3,r3,0x9723
		else
	        strcat(s, config_hdf_msg[config.hardfile[1].enabled & HDF_TYPEMASK]);
  415910:	19 80 00 41 	l.movhi r12,0x41
  415914:	b8 42 00 02 	l.slli r2,r2,0x2
  415918:	a9 8c 6e c8 	l.ori r12,r12,0x6ec8
  41591c:	e0 42 60 00 	l.add r2,r2,r12
  415920:	84 62 00 00 	l.lwz r3,0x0(r2)
  415924:	07 ff dd 48 	l.jal 40ce44 <strcat.clone.3>
  415928:	18 40 00 41 	l.movhi r2,0x41
        OsdWrite(4, s, config.enable_ide ? (menusub == 3) : 0 ,config.enable_ide==0);
  41592c:	a8 42 cc ac 	l.ori r2,r2,0xccac
  415930:	8c c2 00 2b 	l.lbz r6,0x2b(r2)
  415934:	bc 06 00 00 	l.sfeqi r6,0x0
  415938:	10 00 00 08 	l.bf 415958 <main+0x6710>
  41593c:	a8 a6 00 00 	l.ori r5,r6,0x0
  415940:	18 40 00 41 	l.movhi r2,0x41
  415944:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  415948:	8c a2 00 00 	l.lbz r5,0x0(r2)
  41594c:	ac a5 00 03 	l.xori r5,r5,0x3
  415950:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  415954:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  415958:	9c c6 ff ff 	l.addi r6,r6,0xffffffff
  41595c:	18 80 00 41 	l.movhi r4,0x41
  415960:	b8 c6 00 5f 	l.srli r6,r6,0x1f
        if (config.hardfile[1].present)
  415964:	18 40 00 41 	l.movhi r2,0x41
        strcpy(s, "  Slave : ");
		if(config.hardfile[1].enabled==(HDF_FILE|HDF_SYNTHRDB))
			strcat(s,"Hardfile (filesys)");
		else
	        strcat(s, config_hdf_msg[config.hardfile[1].enabled & HDF_TYPEMASK]);
        OsdWrite(4, s, config.enable_ide ? (menusub == 3) : 0 ,config.enable_ide==0);
  415968:	9c 60 00 04 	l.addi r3,r0,0x4
  41596c:	a8 84 cd 18 	l.ori r4,r4,0xcd18
  415970:	07 ff b9 20 	l.jal 403df0 <OsdWrite>
  415974:	a8 42 cc ac 	l.ori r2,r2,0xccac
        if (config.hardfile[1].present)
  415978:	8c 62 00 4d 	l.lbz r3,0x4d(r2)
  41597c:	bc 03 00 00 	l.sfeqi r3,0x0
  415980:	10 00 00 16 	l.bf 4159d8 <main+0x6790>
  415984:	18 60 00 41 	l.movhi r3,0x41
        {
            strcpy(s, "                                ");
  415988:	18 80 00 41 	l.movhi r4,0x41
  41598c:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  415990:	07 ff aa 4f 	l.jal 4002cc <strcpy>
  415994:	a8 84 80 69 	l.ori r4,r4,0x8069
            if (config.hardfile[1].long_name[0])
  415998:	90 62 00 56 	l.lbs r3,0x56(r2)
  41599c:	bc 03 00 00 	l.sfeqi r3,0x0
  4159a0:	10 00 00 06 	l.bf 4159b8 <main+0x6770>
  4159a4:	9c a0 00 10 	l.addi r5,r0,0x10
                strncpy(&s[14], config.hardfile[1].long_name, sizeof(config.hardfile[0].long_name));
  4159a8:	18 60 00 41 	l.movhi r3,0x41
  4159ac:	9c 82 00 56 	l.addi r4,r2,0x56
  4159b0:	00 00 00 06 	l.j 4159c8 <main+0x6780>
  4159b4:	a8 63 cd 26 	l.ori r3,r3,0xcd26
            else
                strncpy(&s[14], config.hardfile[1].name, sizeof(config.hardfile[0].name));
  4159b8:	18 60 00 41 	l.movhi r3,0x41
  4159bc:	9c 82 00 4e 	l.addi r4,r2,0x4e
  4159c0:	a8 63 cd 26 	l.ori r3,r3,0xcd26
  4159c4:	9c a0 00 08 	l.addi r5,r0,0x8
  4159c8:	07 ff aa 69 	l.jal 40036c <strncpy>
  4159cc:	15 00 00 00 	l.nop 0x0
        }
        else
            strcpy(s, "       ** fichero no existe **");

		enable=config.enable_ide && ((config.hardfile[1].enabled&HDF_TYPEMASK)==HDF_FILE);
  4159d0:	00 00 00 07 	l.j 4159ec <main+0x67a4>
  4159d4:	18 60 00 41 	l.movhi r3,0x41
                strncpy(&s[14], config.hardfile[1].long_name, sizeof(config.hardfile[0].long_name));
            else
                strncpy(&s[14], config.hardfile[1].name, sizeof(config.hardfile[0].name));
        }
        else
            strcpy(s, "       ** fichero no existe **");
  4159d8:	18 80 00 41 	l.movhi r4,0x41
  4159dc:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  4159e0:	07 ff aa 3b 	l.jal 4002cc <strcpy>
  4159e4:	a8 84 97 36 	l.ori r4,r4,0x9736

		enable=config.enable_ide && ((config.hardfile[1].enabled&HDF_TYPEMASK)==HDF_FILE);
  4159e8:	18 60 00 41 	l.movhi r3,0x41
  4159ec:	a8 63 cc ac 	l.ori r3,r3,0xccac
  4159f0:	8c 43 00 2b 	l.lbz r2,0x2b(r3)
  4159f4:	bc 02 00 00 	l.sfeqi r2,0x0
  4159f8:	10 00 00 0a 	l.bf 415a20 <main+0x67d8>
  4159fc:	b8 42 00 18 	l.slli r2,r2,0x18
  415a00:	8c 43 00 4c 	l.lbz r2,0x4c(r3)
  415a04:	a4 42 00 0f 	l.andi r2,r2,0xf
  415a08:	ac 42 00 01 	l.xori r2,r2,0x1
  415a0c:	e0 60 10 02 	l.sub r3,r0,r2
  415a10:	e0 43 10 04 	l.or r2,r3,r2
  415a14:	ac 42 ff ff 	l.xori r2,r2,0xffffffff
  415a18:	b8 42 00 5f 	l.srli r2,r2,0x1f
  415a1c:	b8 42 00 18 	l.slli r2,r2,0x18
  415a20:	b8 42 00 98 	l.srai r2,r2,0x18
		if(enable)
  415a24:	bc 02 00 00 	l.sfeqi r2,0x0
  415a28:	10 00 00 0e 	l.bf 415a60 <main+0x6818>
  415a2c:	9c a0 00 00 	l.addi r5,r0,0x0
			menumask|=0x10;	// Make hardfile selectable
  415a30:	18 60 00 41 	l.movhi r3,0x41
  415a34:	a8 63 a3 8c 	l.ori r3,r3,0xa38c
  415a38:	84 83 00 00 	l.lwz r4,0x0(r3)
  415a3c:	a8 84 00 10 	l.ori r4,r4,0x10
  415a40:	d4 03 20 00 	l.sw 0x0(r3),r4
        OsdWrite(5, s, enable ? (menusub == 4) : 0 ,enable==0);
  415a44:	18 60 00 41 	l.movhi r3,0x41
  415a48:	a8 63 a3 8a 	l.ori r3,r3,0xa38a
  415a4c:	8c 63 00 00 	l.lbz r3,0x0(r3)
  415a50:	bc 03 00 04 	l.sfeqi r3,0x4
  415a54:	10 00 00 03 	l.bf 415a60 <main+0x6818>
  415a58:	9c a0 00 01 	l.addi r5,r0,0x1
  415a5c:	9c a0 00 00 	l.addi r5,r0,0x0
  415a60:	a4 42 00 ff 	l.andi r2,r2,0xff
  415a64:	18 80 00 41 	l.movhi r4,0x41
  415a68:	9c c2 ff ff 	l.addi r6,r2,0xffffffff
  415a6c:	9c 60 00 05 	l.addi r3,r0,0x5
  415a70:	b8 c6 00 5f 	l.srli r6,r6,0x1f
  415a74:	a8 84 cd 18 	l.ori r4,r4,0xcd18
  415a78:	07 ff b8 de 	l.jal 403df0 <OsdWrite>
  415a7c:	18 40 00 41 	l.movhi r2,0x41

        OsdWrite(6, "", 0,0);
  415a80:	9c a0 00 00 	l.addi r5,r0,0x0
  415a84:	18 80 00 41 	l.movhi r4,0x41
  415a88:	a8 c5 00 00 	l.ori r6,r5,0x0
  415a8c:	9c 60 00 06 	l.addi r3,r0,0x6
  415a90:	a8 84 83 f7 	l.ori r4,r4,0x83f7
  415a94:	07 ff b8 d7 	l.jal 403df0 <OsdWrite>
  415a98:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
        OsdWrite(7, STD_EXIT, menusub == 5,0);
  415a9c:	8c a2 00 00 	l.lbz r5,0x0(r2)
  415aa0:	ac a5 00 05 	l.xori r5,r5,0x5
  415aa4:	18 80 00 41 	l.movhi r4,0x41
  415aa8:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  415aac:	9c 60 00 07 	l.addi r3,r0,0x7
  415ab0:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  415ab4:	a8 84 8b a4 	l.ori r4,r4,0x8ba4
  415ab8:	9c c0 00 00 	l.addi r6,r0,0x0
  415abc:	07 ff b8 cd 	l.jal 403df0 <OsdWrite>
  415ac0:	18 40 00 41 	l.movhi r2,0x41

        menustate = MENU_SETTINGS_HARDFILE2;
  415ac4:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415ac8:	9d a0 00 1d 	l.addi r13,r0,0x1d
  415acc:	00 00 04 83 	l.j 416cd8 <main+0x7a90>
  415ad0:	d8 02 68 00 	l.sb 0x0(r2),r13

        break;

    case MENU_SETTINGS_HARDFILE2 :
        if (select)
  415ad4:	bc 10 00 00 	l.sfeqi r16,0x0
  415ad8:	10 00 00 60 	l.bf 415c58 <main+0x6a10>
  415adc:	bc 0e 00 00 	l.sfeqi r14,0x0
        {
            if (menusub == 0)
  415ae0:	18 40 00 41 	l.movhi r2,0x41
  415ae4:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  415ae8:	8c 82 00 00 	l.lbz r4,0x0(r2)
  415aec:	bc 24 00 00 	l.sfnei r4,0x0
  415af0:	10 00 00 0c 	l.bf 415b20 <main+0x68d8>
  415af4:	bc 24 00 01 	l.sfnei r4,0x1
            {
				config.enable_ide=(config.enable_ide==0);
  415af8:	18 40 00 41 	l.movhi r2,0x41
  415afc:	a8 42 cc ac 	l.ori r2,r2,0xccac
  415b00:	8c 62 00 2b 	l.lbz r3,0x2b(r2)
  415b04:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
  415b08:	b8 63 00 5f 	l.srli r3,r3,0x1f
  415b0c:	d8 02 18 2b 	l.sb 0x2b(r2),r3
				menustate = MENU_SETTINGS_HARDFILE1;
  415b10:	18 40 00 41 	l.movhi r2,0x41
  415b14:	9c 60 00 1c 	l.addi r3,r0,0x1c
  415b18:	00 00 00 4e 	l.j 415c50 <main+0x6a08>
  415b1c:	a8 42 a3 89 	l.ori r2,r2,0xa389
            }
            if (menusub == 1)
  415b20:	10 00 00 1b 	l.bf 415b8c <main+0x6944>
  415b24:	18 40 00 41 	l.movhi r2,0x41
            {
				if(config.hardfile[0].enabled==HDF_FILE)
  415b28:	a8 42 cc ac 	l.ori r2,r2,0xccac
  415b2c:	8c 62 00 30 	l.lbz r3,0x30(r2)
  415b30:	bc 23 00 01 	l.sfnei r3,0x1
  415b34:	10 00 00 05 	l.bf 415b48 <main+0x6900>
  415b38:	bc 23 00 81 	l.sfnei r3,0x81
				{
					config.hardfile[0].enabled|=HDF_SYNTHRDB;
  415b3c:	9c 80 ff 81 	l.addi r4,r0,0xffffff81
  415b40:	00 00 00 0e 	l.j 415b78 <main+0x6930>
  415b44:	d8 02 20 30 	l.sb 0x30(r2),r4
				}
				else if(config.hardfile[0].enabled==(HDF_FILE|HDF_SYNTHRDB))
  415b48:	10 00 00 05 	l.bf 415b5c <main+0x6914>
  415b4c:	18 80 00 41 	l.movhi r4,0x41
				{
					config.hardfile[0].enabled&=~HDF_SYNTHRDB;
					config.hardfile[0].enabled +=1;
  415b50:	9c a0 00 02 	l.addi r5,r0,0x2
  415b54:	00 00 00 09 	l.j 415b78 <main+0x6930>
  415b58:	d8 02 28 30 	l.sb 0x30(r2),r5
				}
				else
				{
					config.hardfile[0].enabled +=1;
  415b5c:	9c 63 00 01 	l.addi r3,r3,0x1
					config.hardfile[0].enabled %=HDF_CARDPART0+partitioncount;
  415b60:	a8 84 a4 d8 	l.ori r4,r4,0xa4d8
  415b64:	a4 63 00 ff 	l.andi r3,r3,0xff
  415b68:	84 84 00 00 	l.lwz r4,0x0(r4)
  415b6c:	07 ff a9 af 	l.jal 400228 <__modsi3>
  415b70:	9c 84 00 03 	l.addi r4,r4,0x3
  415b74:	d8 02 58 30 	l.sb 0x30(r2),r11
				}
                menustate = MENU_SETTINGS_HARDFILE1;
  415b78:	18 40 00 41 	l.movhi r2,0x41
  415b7c:	9c c0 00 1c 	l.addi r6,r0,0x1c
  415b80:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415b84:	00 00 00 34 	l.j 415c54 <main+0x6a0c>
  415b88:	d8 02 30 00 	l.sb 0x0(r2),r6
            }
            else if (menusub == 2)
  415b8c:	bc 24 00 02 	l.sfnei r4,0x2
  415b90:	10 00 00 04 	l.bf 415ba0 <main+0x6958>
  415b94:	18 60 00 41 	l.movhi r3,0x41
            {
                SelectFile("HDF", SCAN_LFN, MENU_HARDFILE_SELECTED, MENU_SETTINGS_HARDFILE1);
  415b98:	00 00 00 23 	l.j 415c24 <main+0x69dc>
  415b9c:	a8 63 7a e4 	l.ori r3,r3,0x7ae4
            }
            else if (menusub == 3)
  415ba0:	bc 24 00 03 	l.sfnei r4,0x3
  415ba4:	10 00 00 1b 	l.bf 415c10 <main+0x69c8>
  415ba8:	18 40 00 41 	l.movhi r2,0x41
            {
				if(config.hardfile[1].enabled==HDF_FILE)
  415bac:	a8 42 cc ac 	l.ori r2,r2,0xccac
  415bb0:	8c 62 00 4c 	l.lbz r3,0x4c(r2)
  415bb4:	bc 23 00 01 	l.sfnei r3,0x1
  415bb8:	10 00 00 05 	l.bf 415bcc <main+0x6984>
  415bbc:	bc 23 00 81 	l.sfnei r3,0x81
				{
					config.hardfile[1].enabled|=HDF_SYNTHRDB;
  415bc0:	9c e0 ff 81 	l.addi r7,r0,0xffffff81
  415bc4:	00 00 00 0e 	l.j 415bfc <main+0x69b4>
  415bc8:	d8 02 38 4c 	l.sb 0x4c(r2),r7
				}
				else if(config.hardfile[1].enabled==(HDF_FILE|HDF_SYNTHRDB))
  415bcc:	10 00 00 05 	l.bf 415be0 <main+0x6998>
  415bd0:	18 80 00 41 	l.movhi r4,0x41
				{
					config.hardfile[1].enabled&=~HDF_SYNTHRDB;
					config.hardfile[1].enabled +=1;
  415bd4:	9d 80 00 02 	l.addi r12,r0,0x2
  415bd8:	00 00 00 09 	l.j 415bfc <main+0x69b4>
  415bdc:	d8 02 60 4c 	l.sb 0x4c(r2),r12
				}
				else
				{
					config.hardfile[1].enabled +=1;
  415be0:	9c 63 00 01 	l.addi r3,r3,0x1
					config.hardfile[1].enabled %=HDF_CARDPART0+partitioncount;
  415be4:	a8 84 a4 d8 	l.ori r4,r4,0xa4d8
  415be8:	a4 63 00 ff 	l.andi r3,r3,0xff
  415bec:	84 84 00 00 	l.lwz r4,0x0(r4)
  415bf0:	07 ff a9 8e 	l.jal 400228 <__modsi3>
  415bf4:	9c 84 00 03 	l.addi r4,r4,0x3
  415bf8:	d8 02 58 4c 	l.sb 0x4c(r2),r11
				}
				menustate = MENU_SETTINGS_HARDFILE1;
  415bfc:	18 40 00 41 	l.movhi r2,0x41
  415c00:	9d a0 00 1c 	l.addi r13,r0,0x1c
  415c04:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415c08:	00 00 00 13 	l.j 415c54 <main+0x6a0c>
  415c0c:	d8 02 68 00 	l.sb 0x0(r2),r13
            }
            else if (menusub == 4)
  415c10:	bc 24 00 04 	l.sfnei r4,0x4
  415c14:	10 00 00 09 	l.bf 415c38 <main+0x69f0>
  415c18:	18 60 00 41 	l.movhi r3,0x41
            {
                SelectFile("HDF", SCAN_LFN, MENU_HARDFILE_SELECTED, MENU_SETTINGS_HARDFILE1);
  415c1c:	9c 80 00 02 	l.addi r4,r0,0x2
  415c20:	a8 63 7a e4 	l.ori r3,r3,0x7ae4
  415c24:	9c a0 00 20 	l.addi r5,r0,0x20
  415c28:	07 ff cd 7b 	l.jal 409214 <SelectFile>
  415c2c:	9c c0 00 1c 	l.addi r6,r0,0x1c
            {
                menustate = MENU_HARDFILE_EXIT;
            }
        }

        if (menu) // return to previous menu
  415c30:	00 00 00 0a 	l.j 415c58 <main+0x6a10>
  415c34:	bc 0e 00 00 	l.sfeqi r14,0x0
            }
            else if (menusub == 4)
            {
                SelectFile("HDF", SCAN_LFN, MENU_HARDFILE_SELECTED, MENU_SETTINGS_HARDFILE1);
            }
            else if (menusub == 5) // return to previous menu
  415c38:	bc 24 00 05 	l.sfnei r4,0x5
  415c3c:	10 00 00 07 	l.bf 415c58 <main+0x6a10>
  415c40:	bc 0e 00 00 	l.sfeqi r14,0x0
            {
                menustate = MENU_HARDFILE_EXIT;
  415c44:	18 40 00 41 	l.movhi r2,0x41
  415c48:	9c 60 00 21 	l.addi r3,r0,0x21
  415c4c:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415c50:	d8 02 18 00 	l.sb 0x0(r2),r3
            }
        }

        if (menu) // return to previous menu
  415c54:	bc 0e 00 00 	l.sfeqi r14,0x0
  415c58:	10 00 04 20 	l.bf 416cd8 <main+0x7a90>
  415c5c:	9c 80 00 21 	l.addi r4,r0,0x21
        {
            menustate = MENU_HARDFILE_EXIT;
  415c60:	18 40 00 41 	l.movhi r2,0x41
  415c64:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415c68:	00 00 04 1c 	l.j 416cd8 <main+0x7a90>
  415c6c:	d8 02 20 00 	l.sb 0x0(r2),r4

        /******************************************************************/
        /* hardfile selected menu                                         */
        /******************************************************************/
    case MENU_HARDFILE_SELECTED :
        if (menusub == 2) // master drive selected
  415c70:	18 40 00 41 	l.movhi r2,0x41
  415c74:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  415c78:	8c 42 00 00 	l.lbz r2,0x0(r2)
  415c7c:	bc 22 00 02 	l.sfnei r2,0x2
  415c80:	10 00 00 42 	l.bf 415d88 <main+0x6b40>
  415c84:	18 60 00 41 	l.movhi r3,0x41
        {
			// Read RDB from selected drive and determine type...
            memcpy((void*)config.hardfile[0].name, (void*)file.name, sizeof(config.hardfile[0].name));
  415c88:	18 80 00 41 	l.movhi r4,0x41
  415c8c:	a8 63 cc de 	l.ori r3,r3,0xccde
  415c90:	a8 84 cb 80 	l.ori r4,r4,0xcb80
  415c94:	07 ff a9 7b 	l.jal 400280 <memcpy>
  415c98:	9c a0 00 08 	l.addi r5,r0,0x8
            memcpy((void*)config.hardfile[0].long_name, (void*)file.long_name, sizeof(config.hardfile[0].long_name));
  415c9c:	18 60 00 41 	l.movhi r3,0x41
  415ca0:	18 80 00 41 	l.movhi r4,0x41
  415ca4:	a8 63 cc e6 	l.ori r3,r3,0xcce6
  415ca8:	a8 84 cb a4 	l.ori r4,r4,0xcba4
  415cac:	07 ff a9 75 	l.jal 400280 <memcpy>
  415cb0:	9c a0 00 10 	l.addi r5,r0,0x10
			switch(GetHDFFileType(file.name))
  415cb4:	07 ff e3 4f 	l.jal 40e9f0 <GetHDFFileType.clone.10>
  415cb8:	15 00 00 00 	l.nop 0x0
  415cbc:	bc 0b 00 02 	l.sfeqi r11,0x2
  415cc0:	10 00 00 09 	l.bf 415ce4 <main+0x6a9c>
  415cc4:	bc 0b 00 03 	l.sfeqi r11,0x3
  415cc8:	10 00 00 10 	l.bf 415d08 <main+0x6ac0>
  415ccc:	18 40 00 41 	l.movhi r2,0x41
  415cd0:	bc 0b 00 00 	l.sfeqi r11,0x0
  415cd4:	10 00 00 17 	l.bf 415d30 <main+0x6ae8>
  415cd8:	a8 42 cc ac 	l.ori r2,r2,0xccac
						menustate=MENU_SYNTHRDB2_1;
					menusub=0;
					break;
				case HDF_FILETYPE_NOTFOUND:
				default:
		            config.hardfile[0].present = 0;
  415cdc:	00 00 00 26 	l.j 415d74 <main+0x6b2c>
  415ce0:	9c e0 00 00 	l.addi r7,r0,0x0
            memcpy((void*)config.hardfile[0].name, (void*)file.name, sizeof(config.hardfile[0].name));
            memcpy((void*)config.hardfile[0].long_name, (void*)file.long_name, sizeof(config.hardfile[0].long_name));
			switch(GetHDFFileType(file.name))
			{
				case HDF_FILETYPE_RDB:
					config.hardfile[0].enabled=HDF_FILE;
  415ce4:	18 40 00 41 	l.movhi r2,0x41
  415ce8:	9c a0 00 01 	l.addi r5,r0,0x1
  415cec:	a8 42 cc ac 	l.ori r2,r2,0xccac
		            config.hardfile[0].present = 1;
			        menustate = MENU_SETTINGS_HARDFILE1;
  415cf0:	9c c0 00 1c 	l.addi r6,r0,0x1c
            memcpy((void*)config.hardfile[0].name, (void*)file.name, sizeof(config.hardfile[0].name));
            memcpy((void*)config.hardfile[0].long_name, (void*)file.long_name, sizeof(config.hardfile[0].long_name));
			switch(GetHDFFileType(file.name))
			{
				case HDF_FILETYPE_RDB:
					config.hardfile[0].enabled=HDF_FILE;
  415cf4:	d8 02 28 30 	l.sb 0x30(r2),r5
		            config.hardfile[0].present = 1;
  415cf8:	d8 02 28 31 	l.sb 0x31(r2),r5
			        menustate = MENU_SETTINGS_HARDFILE1;
  415cfc:	18 40 00 41 	l.movhi r2,0x41
  415d00:	00 00 00 1b 	l.j 415d6c <main+0x6b24>
  415d04:	a8 42 a3 89 	l.ori r2,r2,0xa389
					break;
				case HDF_FILETYPE_DOS:
					config.hardfile[0].enabled=HDF_FILE|HDF_SYNTHRDB;
  415d08:	9c e0 ff 81 	l.addi r7,r0,0xffffff81
  415d0c:	a8 42 cc ac 	l.ori r2,r2,0xccac
		            config.hardfile[0].present = 1;
  415d10:	9d 80 00 01 	l.addi r12,r0,0x1
					config.hardfile[0].enabled=HDF_FILE;
		            config.hardfile[0].present = 1;
			        menustate = MENU_SETTINGS_HARDFILE1;
					break;
				case HDF_FILETYPE_DOS:
					config.hardfile[0].enabled=HDF_FILE|HDF_SYNTHRDB;
  415d14:	d8 02 38 30 	l.sb 0x30(r2),r7
		            config.hardfile[0].present = 1;
  415d18:	d8 02 60 31 	l.sb 0x31(r2),r12
			        menustate = MENU_SETTINGS_HARDFILE1;
  415d1c:	18 40 00 41 	l.movhi r2,0x41
  415d20:	9d a0 00 1c 	l.addi r13,r0,0x1c
  415d24:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415d28:	00 00 00 18 	l.j 415d88 <main+0x6b40>
  415d2c:	d8 02 68 00 	l.sb 0x0(r2),r13
					break;
				case HDF_FILETYPE_UNKNOWN:
		            config.hardfile[0].present = 1;
  415d30:	9c 60 00 01 	l.addi r3,r0,0x1
  415d34:	d8 02 18 31 	l.sb 0x31(r2),r3
					if(config.hardfile[0].enabled==HDF_FILE)	// Warn if we can't detect the type
  415d38:	8c 42 00 30 	l.lbz r2,0x30(r2)
  415d3c:	bc 22 00 01 	l.sfnei r2,0x1
  415d40:	18 40 00 41 	l.movhi r2,0x41
  415d44:	10 00 00 05 	l.bf 415d58 <main+0x6b10>
  415d48:	a8 42 a3 89 	l.ori r2,r2,0xa389
						menustate=MENU_SYNTHRDB1;
  415d4c:	9c 80 00 24 	l.addi r4,r0,0x24
  415d50:	00 00 00 04 	l.j 415d60 <main+0x6b18>
  415d54:	d8 02 20 00 	l.sb 0x0(r2),r4
					else
						menustate=MENU_SYNTHRDB2_1;
  415d58:	9c a0 00 26 	l.addi r5,r0,0x26
  415d5c:	d8 02 28 00 	l.sb 0x0(r2),r5
					menusub=0;
  415d60:	18 40 00 41 	l.movhi r2,0x41
  415d64:	9c c0 00 00 	l.addi r6,r0,0x0
  415d68:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  415d6c:	00 00 00 07 	l.j 415d88 <main+0x6b40>
  415d70:	d8 02 30 00 	l.sb 0x0(r2),r6
					break;
				case HDF_FILETYPE_NOTFOUND:
				default:
		            config.hardfile[0].present = 0;
			        menustate = MENU_SETTINGS_HARDFILE1;
  415d74:	9d 80 00 1c 	l.addi r12,r0,0x1c
						menustate=MENU_SYNTHRDB2_1;
					menusub=0;
					break;
				case HDF_FILETYPE_NOTFOUND:
				default:
		            config.hardfile[0].present = 0;
  415d78:	d8 02 38 31 	l.sb 0x31(r2),r7
			        menustate = MENU_SETTINGS_HARDFILE1;
  415d7c:	18 40 00 41 	l.movhi r2,0x41
  415d80:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415d84:	d8 02 60 00 	l.sb 0x0(r2),r12
					break;
			}
			
        }

        if (menusub == 4) // slave drive selected
  415d88:	18 40 00 41 	l.movhi r2,0x41
  415d8c:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  415d90:	8c 42 00 00 	l.lbz r2,0x0(r2)
  415d94:	bc 22 00 04 	l.sfnei r2,0x4
  415d98:	10 00 03 d0 	l.bf 416cd8 <main+0x7a90>
  415d9c:	18 60 00 41 	l.movhi r3,0x41
        {
            memcpy((void*)config.hardfile[1].name, (void*)file.name, sizeof(config.hardfile[1].name));
  415da0:	18 80 00 41 	l.movhi r4,0x41
  415da4:	a8 63 cc fa 	l.ori r3,r3,0xccfa
  415da8:	a8 84 cb 80 	l.ori r4,r4,0xcb80
  415dac:	07 ff a9 35 	l.jal 400280 <memcpy>
  415db0:	9c a0 00 08 	l.addi r5,r0,0x8
            memcpy((void*)config.hardfile[1].long_name, (void*)file.long_name, sizeof(config.hardfile[1].long_name));
  415db4:	18 60 00 41 	l.movhi r3,0x41
  415db8:	18 80 00 41 	l.movhi r4,0x41
  415dbc:	a8 63 cd 02 	l.ori r3,r3,0xcd02
  415dc0:	a8 84 cb a4 	l.ori r4,r4,0xcba4
  415dc4:	07 ff a9 2f 	l.jal 400280 <memcpy>
  415dc8:	9c a0 00 10 	l.addi r5,r0,0x10
			switch(GetHDFFileType(file.name))
  415dcc:	07 ff e3 09 	l.jal 40e9f0 <GetHDFFileType.clone.10>
  415dd0:	15 00 00 00 	l.nop 0x0
  415dd4:	bc 0b 00 02 	l.sfeqi r11,0x2
  415dd8:	10 00 00 09 	l.bf 415dfc <main+0x6bb4>
  415ddc:	bc 0b 00 03 	l.sfeqi r11,0x3
  415de0:	10 00 00 11 	l.bf 415e24 <main+0x6bdc>
  415de4:	bc 0b 00 00 	l.sfeqi r11,0x0
  415de8:	18 40 00 41 	l.movhi r2,0x41
  415dec:	10 00 00 19 	l.bf 415e50 <main+0x6c08>
  415df0:	a8 42 cc ac 	l.ori r2,r2,0xccac
						menustate=MENU_SYNTHRDB2_1;
					menusub=0;
					break;
				case HDF_FILETYPE_NOTFOUND:
				default:
		            config.hardfile[1].present = 0;
  415df4:	00 00 00 28 	l.j 415e94 <main+0x6c4c>
  415df8:	9c 80 00 00 	l.addi r4,r0,0x0
            memcpy((void*)config.hardfile[1].name, (void*)file.name, sizeof(config.hardfile[1].name));
            memcpy((void*)config.hardfile[1].long_name, (void*)file.long_name, sizeof(config.hardfile[1].long_name));
			switch(GetHDFFileType(file.name))
			{
				case HDF_FILETYPE_RDB:
					config.hardfile[1].enabled=HDF_FILE;
  415dfc:	18 40 00 41 	l.movhi r2,0x41
  415e00:	9d a0 00 01 	l.addi r13,r0,0x1
  415e04:	a8 42 cc ac 	l.ori r2,r2,0xccac
		            config.hardfile[1].present = 1;
			        menustate = MENU_SETTINGS_HARDFILE1;
  415e08:	9c 60 00 1c 	l.addi r3,r0,0x1c
            memcpy((void*)config.hardfile[1].name, (void*)file.name, sizeof(config.hardfile[1].name));
            memcpy((void*)config.hardfile[1].long_name, (void*)file.long_name, sizeof(config.hardfile[1].long_name));
			switch(GetHDFFileType(file.name))
			{
				case HDF_FILETYPE_RDB:
					config.hardfile[1].enabled=HDF_FILE;
  415e0c:	d8 02 68 4c 	l.sb 0x4c(r2),r13
		            config.hardfile[1].present = 1;
  415e10:	d8 02 68 4d 	l.sb 0x4d(r2),r13
			        menustate = MENU_SETTINGS_HARDFILE1;
  415e14:	18 40 00 41 	l.movhi r2,0x41
  415e18:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415e1c:	00 00 03 af 	l.j 416cd8 <main+0x7a90>
  415e20:	d8 02 18 00 	l.sb 0x0(r2),r3
					break;
				case HDF_FILETYPE_DOS:
					config.hardfile[1].enabled=HDF_FILE|HDF_SYNTHRDB;
  415e24:	18 40 00 41 	l.movhi r2,0x41
  415e28:	9c 80 ff 81 	l.addi r4,r0,0xffffff81
  415e2c:	a8 42 cc ac 	l.ori r2,r2,0xccac
		            config.hardfile[1].present = 1;
  415e30:	9c a0 00 01 	l.addi r5,r0,0x1
					config.hardfile[1].enabled=HDF_FILE;
		            config.hardfile[1].present = 1;
			        menustate = MENU_SETTINGS_HARDFILE1;
					break;
				case HDF_FILETYPE_DOS:
					config.hardfile[1].enabled=HDF_FILE|HDF_SYNTHRDB;
  415e34:	d8 02 20 4c 	l.sb 0x4c(r2),r4
		            config.hardfile[1].present = 1;
  415e38:	d8 02 28 4d 	l.sb 0x4d(r2),r5
			        menustate = MENU_SETTINGS_HARDFILE1;
  415e3c:	18 40 00 41 	l.movhi r2,0x41
  415e40:	9c c0 00 1c 	l.addi r6,r0,0x1c
  415e44:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415e48:	00 00 03 a4 	l.j 416cd8 <main+0x7a90>
  415e4c:	d8 02 30 00 	l.sb 0x0(r2),r6
					break;
				case HDF_FILETYPE_UNKNOWN:
		            config.hardfile[1].present = 1;
  415e50:	9c e0 00 01 	l.addi r7,r0,0x1
  415e54:	d8 02 38 4d 	l.sb 0x4d(r2),r7
					if(config.hardfile[1].enabled==HDF_FILE)	// Warn if we can't detect the type...
  415e58:	8c 42 00 4c 	l.lbz r2,0x4c(r2)
  415e5c:	bc 22 00 01 	l.sfnei r2,0x1
  415e60:	18 40 00 41 	l.movhi r2,0x41
  415e64:	10 00 00 05 	l.bf 415e78 <main+0x6c30>
  415e68:	a8 42 a3 89 	l.ori r2,r2,0xa389
						menustate=MENU_SYNTHRDB1;
  415e6c:	9d 80 00 24 	l.addi r12,r0,0x24
  415e70:	00 00 00 04 	l.j 415e80 <main+0x6c38>
  415e74:	d8 02 60 00 	l.sb 0x0(r2),r12
					else
						menustate=MENU_SYNTHRDB2_1;
  415e78:	9d a0 00 26 	l.addi r13,r0,0x26
  415e7c:	d8 02 68 00 	l.sb 0x0(r2),r13
					menusub=0;
  415e80:	18 40 00 41 	l.movhi r2,0x41
  415e84:	9c 60 00 00 	l.addi r3,r0,0x0
  415e88:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  415e8c:	00 00 03 93 	l.j 416cd8 <main+0x7a90>
  415e90:	d8 02 18 00 	l.sb 0x0(r2),r3
					break;
				case HDF_FILETYPE_NOTFOUND:
				default:
		            config.hardfile[1].present = 0;
			        menustate = MENU_SETTINGS_HARDFILE1;
  415e94:	9c a0 00 1c 	l.addi r5,r0,0x1c
						menustate=MENU_SYNTHRDB2_1;
					menusub=0;
					break;
				case HDF_FILETYPE_NOTFOUND:
				default:
		            config.hardfile[1].present = 0;
  415e98:	d8 02 20 4d 	l.sb 0x4d(r2),r4
			        menustate = MENU_SETTINGS_HARDFILE1;
  415e9c:	18 40 00 41 	l.movhi r2,0x41
  415ea0:	a8 42 a3 89 	l.ori r2,r2,0xa389
  415ea4:	00 00 03 8d 	l.j 416cd8 <main+0x7a90>
  415ea8:	d8 02 28 00 	l.sb 0x0(r2),r5

#include <string.h>

int memcmp(const void *s1, const void *s2, size_t n)
{
	const unsigned char *c1 = s1, *c2 = s2;
  415eac:	18 40 00 41 	l.movhi r2,0x41
  415eb0:	18 60 00 42 	l.movhi r3,0x42
  415eb4:	a8 42 cc dc 	l.ori r2,r2,0xccdc
  415eb8:	00 00 00 08 	l.j 415ed8 <main+0x6c90>
  415ebc:	a8 63 0b 80 	l.ori r3,r3,0xb80
	int d = 0;

	while (n--) {
		d = (int)*c1++ - (int)*c2++;
		if (d)
  415ec0:	8c a2 00 00 	l.lbz r5,0x0(r2)
  415ec4:	8c 83 00 00 	l.lbz r4,0x0(r3)
  415ec8:	e4 25 20 00 	l.sfne r5,r4
  415ecc:	10 00 00 0a 	l.bf 415ef4 <main+0x6cac>
  415ed0:	9c 63 00 01 	l.addi r3,r3,0x1
{
	const unsigned char *c1 = s1, *c2 = s2;
	int d = 0;

	while (n--) {
		d = (int)*c1++ - (int)*c2++;
  415ed4:	9c 42 00 01 	l.addi r2,r2,0x1
int memcmp(const void *s1, const void *s2, size_t n)
{
	const unsigned char *c1 = s1, *c2 = s2;
	int d = 0;

	while (n--) {
  415ed8:	18 c0 00 41 	l.movhi r6,0x41
  415edc:	a8 c6 cd 14 	l.ori r6,r6,0xcd14
  415ee0:	e4 22 30 00 	l.sfne r2,r6
  415ee4:	13 ff ff f7 	l.bf 415ec0 <main+0x6c78>
  415ee8:	15 00 00 00 	l.nop 0x0
             menustate = MENU_HARDFILE_CHANGED1;
             menusub = 1;
         }
         else
         {
             menustate = MENU_MAIN1;
  415eec:	00 00 00 0b 	l.j 415f18 <main+0x6cd0>
  415ef0:	18 40 00 41 	l.movhi r2,0x41
     // check if hardfile configuration has changed
    case MENU_HARDFILE_EXIT :

         if (memcmp(config.hardfile, t_hardfile, sizeof(t_hardfile)) != 0)
         {
             menustate = MENU_HARDFILE_CHANGED1;
  415ef4:	18 40 00 41 	l.movhi r2,0x41
  415ef8:	9c e0 00 22 	l.addi r7,r0,0x22
  415efc:	a8 42 a3 89 	l.ori r2,r2,0xa389
             menusub = 1;
  415f00:	9d 80 00 01 	l.addi r12,r0,0x1
     // check if hardfile configuration has changed
    case MENU_HARDFILE_EXIT :

         if (memcmp(config.hardfile, t_hardfile, sizeof(t_hardfile)) != 0)
         {
             menustate = MENU_HARDFILE_CHANGED1;
  415f04:	d8 02 38 00 	l.sb 0x0(r2),r7
             menusub = 1;
  415f08:	18 40 00 41 	l.movhi r2,0x41
  415f0c:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  415f10:	00 00 03 72 	l.j 416cd8 <main+0x7a90>
  415f14:	d8 02 60 00 	l.sb 0x0(r2),r12
         }
         else
         {
             menustate = MENU_MAIN1;
  415f18:	9d a0 00 02 	l.addi r13,r0,0x2
  415f1c:	a8 42 a3 89 	l.ori r2,r2,0xa389
             menusub = 5;
  415f20:	9c 60 00 05 	l.addi r3,r0,0x5
             menustate = MENU_HARDFILE_CHANGED1;
             menusub = 1;
         }
         else
         {
             menustate = MENU_MAIN1;
  415f24:	d8 02 68 00 	l.sb 0x0(r2),r13
             menusub = 5;
  415f28:	18 40 00 41 	l.movhi r2,0x41
  415f2c:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  415f30:	00 00 03 6a 	l.j 416cd8 <main+0x7a90>
  415f34:	d8 02 18 00 	l.sb 0x0(r2),r3

         break;

    // hardfile configuration has changed, ask user if he wants to use the new settings
    case MENU_HARDFILE_CHANGED1 :
		menumask=0x03;
  415f38:	18 60 00 41 	l.movhi r3,0x41
  415f3c:	9c 40 00 03 	l.addi r2,r0,0x3
  415f40:	a8 63 a3 8c 	l.ori r3,r3,0xa38c
		parentstate=menustate;
  415f44:	9c 80 00 22 	l.addi r4,r0,0x22

         break;

    // hardfile configuration has changed, ask user if he wants to use the new settings
    case MENU_HARDFILE_CHANGED1 :
		menumask=0x03;
  415f48:	d4 03 10 00 	l.sw 0x0(r3),r2
		parentstate=menustate;
  415f4c:	18 60 00 41 	l.movhi r3,0x41
  415f50:	a8 63 fd 24 	l.ori r3,r3,0xfd24
  415f54:	d8 03 20 00 	l.sb 0x0(r3),r4
 		OsdSetTitle("Confirmar",0);
  415f58:	18 60 00 41 	l.movhi r3,0x41
  415f5c:	9c 80 00 00 	l.addi r4,r0,0x0
  415f60:	07 ff b5 24 	l.jal 4033f0 <OsdSetTitle>
  415f64:	a8 63 97 60 	l.ori r3,r3,0x9760

        OsdWrite(0, "", 0,0);
  415f68:	9c 60 00 00 	l.addi r3,r0,0x0
  415f6c:	18 80 00 41 	l.movhi r4,0x41
  415f70:	a8 a3 00 00 	l.ori r5,r3,0x0
  415f74:	a8 c3 00 00 	l.ori r6,r3,0x0
  415f78:	07 ff b7 9e 	l.jal 403df0 <OsdWrite>
  415f7c:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(1, "    Cambiando configuracion", 0,0);
  415f80:	9c a0 00 00 	l.addi r5,r0,0x0
  415f84:	18 80 00 41 	l.movhi r4,0x41
  415f88:	a8 c5 00 00 	l.ori r6,r5,0x0
  415f8c:	9c 60 00 01 	l.addi r3,r0,0x1
  415f90:	07 ff b7 98 	l.jal 403df0 <OsdWrite>
  415f94:	a8 84 97 6a 	l.ori r4,r4,0x976a
        OsdWrite(2, "      requiere reset.", 0,0);
  415f98:	9c a0 00 00 	l.addi r5,r0,0x0
  415f9c:	18 80 00 41 	l.movhi r4,0x41
  415fa0:	a8 c5 00 00 	l.ori r6,r5,0x0
  415fa4:	9c 60 00 02 	l.addi r3,r0,0x2
  415fa8:	07 ff b7 92 	l.jal 403df0 <OsdWrite>
  415fac:	a8 84 97 86 	l.ori r4,r4,0x9786
        OsdWrite(3, "", 0,0);
  415fb0:	9c a0 00 00 	l.addi r5,r0,0x0
  415fb4:	18 80 00 41 	l.movhi r4,0x41
  415fb8:	a8 62 00 00 	l.ori r3,r2,0x0
  415fbc:	a8 c5 00 00 	l.ori r6,r5,0x0
  415fc0:	a8 84 83 f7 	l.ori r4,r4,0x83f7
  415fc4:	07 ff b7 8b 	l.jal 403df0 <OsdWrite>
  415fc8:	18 40 00 41 	l.movhi r2,0x41
        OsdWrite(4, "       Reiniciar Minimig?", 0,0);
  415fcc:	9c a0 00 00 	l.addi r5,r0,0x0
  415fd0:	18 80 00 41 	l.movhi r4,0x41
  415fd4:	a8 c5 00 00 	l.ori r6,r5,0x0
  415fd8:	9c 60 00 04 	l.addi r3,r0,0x4
  415fdc:	a8 84 97 9c 	l.ori r4,r4,0x979c
  415fe0:	07 ff b7 84 	l.jal 403df0 <OsdWrite>
  415fe4:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
        OsdWrite(5, "", 0,0);
  415fe8:	9c a0 00 00 	l.addi r5,r0,0x0
  415fec:	18 80 00 41 	l.movhi r4,0x41
  415ff0:	a8 c5 00 00 	l.ori r6,r5,0x0
  415ff4:	9c 60 00 05 	l.addi r3,r0,0x5
  415ff8:	07 ff b7 7e 	l.jal 403df0 <OsdWrite>
  415ffc:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(6, "             si", menusub == 0,0);
  416000:	8c 42 00 00 	l.lbz r2,0x0(r2)
  416004:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  416008:	18 80 00 41 	l.movhi r4,0x41
  41600c:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  416010:	9c 60 00 06 	l.addi r3,r0,0x6
  416014:	a8 84 91 bc 	l.ori r4,r4,0x91bc
  416018:	9c c0 00 00 	l.addi r6,r0,0x0
  41601c:	07 ff b7 75 	l.jal 403df0 <OsdWrite>
  416020:	ac 42 00 01 	l.xori r2,r2,0x1
        OsdWrite(7, "             no", menusub == 1,0);
  416024:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  416028:	18 80 00 41 	l.movhi r4,0x41
  41602c:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  416030:	9c 60 00 07 	l.addi r3,r0,0x7
  416034:	a8 84 91 ce 	l.ori r4,r4,0x91ce
  416038:	9c c0 00 00 	l.addi r6,r0,0x0
  41603c:	07 ff b7 6d 	l.jal 403df0 <OsdWrite>
  416040:	18 40 00 41 	l.movhi r2,0x41

        menustate = MENU_HARDFILE_CHANGED2;
  416044:	a8 42 a3 89 	l.ori r2,r2,0xa389
  416048:	9c a0 00 23 	l.addi r5,r0,0x23
  41604c:	00 00 03 23 	l.j 416cd8 <main+0x7a90>
  416050:	d8 02 28 00 	l.sb 0x0(r2),r5
        break;

    case MENU_HARDFILE_CHANGED2 :
        if (select)
  416054:	bc 10 00 00 	l.sfeqi r16,0x0
  416058:	10 00 00 58 	l.bf 4161b8 <main+0x6f70>
  41605c:	bc 0e 00 00 	l.sfeqi r14,0x0
        {
            if (menusub == 0) // yes
  416060:	18 40 00 41 	l.movhi r2,0x41
  416064:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  416068:	8c 62 00 00 	l.lbz r3,0x0(r2)
  41606c:	bc 23 00 00 	l.sfnei r3,0x0
  416070:	10 00 00 43 	l.bf 41617c <main+0x6f34>
  416074:	bc 23 00 01 	l.sfnei r3,0x1
            {
				// FIXME - waiting for user-confirmation increases the window of opportunity for file corruption!

                if ((config.hardfile[0].enabled != t_hardfile[0].enabled)
  416078:	18 60 00 41 	l.movhi r3,0x41
  41607c:	18 80 00 42 	l.movhi r4,0x42
  416080:	a8 63 cc ac 	l.ori r3,r3,0xccac
  416084:	a8 84 0b 80 	l.ori r4,r4,0xb80
  416088:	8c a3 00 30 	l.lbz r5,0x30(r3)
  41608c:	8c 44 00 00 	l.lbz r2,0x0(r4)
  416090:	e4 25 10 00 	l.sfne r5,r2
  416094:	10 00 00 08 	l.bf 4160b4 <main+0x6e6c>
  416098:	9c 63 00 32 	l.addi r3,r3,0x32
					|| (strncmp(config.hardfile[0].name, t_hardfile[0].name, sizeof(t_hardfile[0].name)) != 0))
  41609c:	9c 84 00 02 	l.addi r4,r4,0x2
  4160a0:	07 ff a8 9d 	l.jal 400314 <strncmp>
  4160a4:	9c a0 00 08 	l.addi r5,r0,0x8
  4160a8:	bc 0b 00 00 	l.sfeqi r11,0x0
  4160ac:	10 00 00 05 	l.bf 4160c0 <main+0x6e78>
  4160b0:	18 60 00 41 	l.movhi r3,0x41
				{
                    OpenHardfile(0);
  4160b4:	07 ff bf 49 	l.jal 405dd8 <OpenHardfile>
  4160b8:	9c 60 00 00 	l.addi r3,r0,0x0
//					if((config.hardfile[0].enabled == HDF_FILE) && !FindRDB(0))
//						menustate = MENU_SYNTHRDB1;
				}

                if (config.hardfile[1].enabled != t_hardfile[1].enabled
  4160bc:	18 60 00 41 	l.movhi r3,0x41
  4160c0:	18 80 00 42 	l.movhi r4,0x42
  4160c4:	a8 63 cc ac 	l.ori r3,r3,0xccac
  4160c8:	a8 84 0b 80 	l.ori r4,r4,0xb80
  4160cc:	8c a3 00 4c 	l.lbz r5,0x4c(r3)
  4160d0:	8c 44 00 1c 	l.lbz r2,0x1c(r4)
  4160d4:	e4 25 10 00 	l.sfne r5,r2
  4160d8:	10 00 00 08 	l.bf 4160f8 <main+0x6eb0>
  4160dc:	9c 63 00 4e 	l.addi r3,r3,0x4e
					|| (strncmp(config.hardfile[1].name, t_hardfile[1].name, sizeof(t_hardfile[1].name)) != 0))
  4160e0:	9c 84 00 1e 	l.addi r4,r4,0x1e
  4160e4:	07 ff a8 8c 	l.jal 400314 <strncmp>
  4160e8:	9c a0 00 08 	l.addi r5,r0,0x8
  4160ec:	bc 0b 00 00 	l.sfeqi r11,0x0
  4160f0:	10 00 00 05 	l.bf 416104 <main+0x6ebc>
  4160f4:	18 40 00 41 	l.movhi r2,0x41
				{
                    OpenHardfile(1);
  4160f8:	07 ff bf 38 	l.jal 405dd8 <OpenHardfile>
  4160fc:	9c 60 00 01 	l.addi r3,r0,0x1
//					if((config.hardfile[1].enabled == HDF_FILE) && !FindRDB(1))
//						menustate = MENU_SYNTHRDB2_1;
				}

				if(menustate==MENU_HARDFILE_CHANGED2)
  416100:	18 40 00 41 	l.movhi r2,0x41
  416104:	a8 42 a3 89 	l.ori r2,r2,0xa389
  416108:	8c 42 00 00 	l.lbz r2,0x0(r2)
  41610c:	bc 22 00 23 	l.sfnei r2,0x23
  416110:	10 00 00 2a 	l.bf 4161b8 <main+0x6f70>
  416114:	bc 0e 00 00 	l.sfeqi r14,0x0
				{
	                ConfigIDE(config.enable_ide, config.hardfile[0].present && config.hardfile[0].enabled, config.hardfile[1].present && config.hardfile[1].enabled);
  416118:	18 40 00 41 	l.movhi r2,0x41
  41611c:	a8 42 cc ac 	l.ori r2,r2,0xccac
  416120:	8c 82 00 31 	l.lbz r4,0x31(r2)
  416124:	bc 04 00 00 	l.sfeqi r4,0x0
  416128:	10 00 00 05 	l.bf 41613c <main+0x6ef4>
  41612c:	8c 62 00 2b 	l.lbz r3,0x2b(r2)
  416130:	8c 82 00 30 	l.lbz r4,0x30(r2)
  416134:	e0 80 20 02 	l.sub r4,r0,r4
  416138:	b8 84 00 5f 	l.srli r4,r4,0x1f
  41613c:	18 40 00 41 	l.movhi r2,0x41
  416140:	a8 42 cc ac 	l.ori r2,r2,0xccac
  416144:	8c a2 00 4d 	l.lbz r5,0x4d(r2)
  416148:	bc 05 00 00 	l.sfeqi r5,0x0
  41614c:	10 00 00 05 	l.bf 416160 <main+0x6f18>
  416150:	a4 84 00 ff 	l.andi r4,r4,0xff
  416154:	8c a2 00 4c 	l.lbz r5,0x4c(r2)
  416158:	e0 a0 28 02 	l.sub r5,r0,r5
  41615c:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  416160:	07 ff b7 e8 	l.jal 404100 <ConfigIDE>
  416164:	18 40 00 41 	l.movhi r2,0x41
    	            OsdReset(RESET_NORMAL);
  416168:	07 ff d1 f3 	l.jal 40a934 <OsdReset.clone.0>
  41616c:	a8 42 a3 89 	l.ori r2,r2,0xa389
				
	                menustate = MENU_NONE1;
  416170:	9c c0 00 00 	l.addi r6,r0,0x0
  416174:	00 00 00 10 	l.j 4161b4 <main+0x6f6c>
  416178:	d8 02 30 00 	l.sb 0x0(r2),r6
				}
            }
            else if (menusub == 1) // no
  41617c:	10 00 00 0f 	l.bf 4161b8 <main+0x6f70>
  416180:	bc 0e 00 00 	l.sfeqi r14,0x0
            {
                memcpy(config.hardfile, t_hardfile, sizeof(t_hardfile)); // restore configuration
  416184:	18 60 00 41 	l.movhi r3,0x41
  416188:	18 80 00 42 	l.movhi r4,0x42
  41618c:	a8 63 cc dc 	l.ori r3,r3,0xccdc
  416190:	a8 84 0b 80 	l.ori r4,r4,0xb80
  416194:	07 ff a8 3b 	l.jal 400280 <memcpy>
  416198:	9c a0 00 38 	l.addi r5,r0,0x38
                menustate = MENU_MAIN1;
  41619c:	18 60 00 41 	l.movhi r3,0x41
  4161a0:	9c e0 00 02 	l.addi r7,r0,0x2
  4161a4:	a8 63 a3 89 	l.ori r3,r3,0xa389
                menusub = 3;
  4161a8:	9d 80 00 03 	l.addi r12,r0,0x3
				}
            }
            else if (menusub == 1) // no
            {
                memcpy(config.hardfile, t_hardfile, sizeof(t_hardfile)); // restore configuration
                menustate = MENU_MAIN1;
  4161ac:	d8 03 38 00 	l.sb 0x0(r3),r7
                menusub = 3;
  4161b0:	d8 02 60 00 	l.sb 0x0(r2),r12
            }
        }

        if (menu)
  4161b4:	bc 0e 00 00 	l.sfeqi r14,0x0
  4161b8:	10 00 02 c8 	l.bf 416cd8 <main+0x7a90>
  4161bc:	18 60 00 41 	l.movhi r3,0x41
        {
            memcpy(config.hardfile, t_hardfile, sizeof(t_hardfile)); // restore configuration
  4161c0:	18 80 00 42 	l.movhi r4,0x42
  4161c4:	a8 63 cc dc 	l.ori r3,r3,0xccdc
  4161c8:	a8 84 0b 80 	l.ori r4,r4,0xb80
  4161cc:	9c a0 00 38 	l.addi r5,r0,0x38
  4161d0:	07 ff a8 2c 	l.jal 400280 <memcpy>
  4161d4:	18 40 00 41 	l.movhi r2,0x41
            menustate = MENU_MAIN1;
  4161d8:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4161dc:	9d a0 00 02 	l.addi r13,r0,0x2
            menusub = 3;
  4161e0:	9c 60 00 03 	l.addi r3,r0,0x3
        }

        if (menu)
        {
            memcpy(config.hardfile, t_hardfile, sizeof(t_hardfile)); // restore configuration
            menustate = MENU_MAIN1;
  4161e4:	d8 02 68 00 	l.sb 0x0(r2),r13
            menusub = 3;
  4161e8:	18 40 00 41 	l.movhi r2,0x41
  4161ec:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  4161f0:	00 00 02 ba 	l.j 416cd8 <main+0x7a90>
  4161f4:	d8 02 18 00 	l.sb 0x0(r2),r3
        }
        break;

    case MENU_SYNTHRDB1 :
		menumask=0x01;
  4161f8:	18 60 00 41 	l.movhi r3,0x41
  4161fc:	9c 40 00 01 	l.addi r2,r0,0x1
  416200:	a8 63 a3 8c 	l.ori r3,r3,0xa38c
		parentstate=menustate;
  416204:	9c 80 00 24 	l.addi r4,r0,0x24
            menusub = 3;
        }
        break;

    case MENU_SYNTHRDB1 :
		menumask=0x01;
  416208:	d4 03 10 00 	l.sw 0x0(r3),r2
		parentstate=menustate;
  41620c:	18 60 00 41 	l.movhi r3,0x41
  416210:	a8 63 fd 24 	l.ori r3,r3,0xfd24
  416214:	d8 03 20 00 	l.sb 0x0(r3),r4
 		OsdSetTitle("Warning",0);
  416218:	18 60 00 41 	l.movhi r3,0x41
  41621c:	9c 80 00 00 	l.addi r4,r0,0x0
  416220:	07 ff b4 74 	l.jal 4033f0 <OsdSetTitle>
  416224:	a8 63 97 b6 	l.ori r3,r3,0x97b6
        OsdWrite(0, "", 0,0);
  416228:	9c 60 00 00 	l.addi r3,r0,0x0
  41622c:	18 80 00 41 	l.movhi r4,0x41
  416230:	a8 a3 00 00 	l.ori r5,r3,0x0
  416234:	a8 c3 00 00 	l.ori r6,r3,0x0
  416238:	07 ff b6 ee 	l.jal 403df0 <OsdWrite>
  41623c:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(1, " No partition table found -", 0,0);
  416240:	9c a0 00 00 	l.addi r5,r0,0x0
  416244:	18 80 00 41 	l.movhi r4,0x41
  416248:	a8 62 00 00 	l.ori r3,r2,0x0
  41624c:	a8 c5 00 00 	l.ori r6,r5,0x0
  416250:	a8 84 97 be 	l.ori r4,r4,0x97be
  416254:	07 ff b6 e7 	l.jal 403df0 <OsdWrite>
  416258:	18 40 00 41 	l.movhi r2,0x41
        OsdWrite(2, " Hardfile image may need", 0,0);
  41625c:	9c a0 00 00 	l.addi r5,r0,0x0
  416260:	18 80 00 41 	l.movhi r4,0x41
  416264:	a8 c5 00 00 	l.ori r6,r5,0x0
  416268:	9c 60 00 02 	l.addi r3,r0,0x2
  41626c:	a8 84 97 da 	l.ori r4,r4,0x97da
  416270:	07 ff b6 e0 	l.jal 403df0 <OsdWrite>
  416274:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
        OsdWrite(3, " to be prepped with HDToolbox,", 0,0);
  416278:	9c a0 00 00 	l.addi r5,r0,0x0
  41627c:	18 80 00 41 	l.movhi r4,0x41
  416280:	a8 c5 00 00 	l.ori r6,r5,0x0
  416284:	9c 60 00 03 	l.addi r3,r0,0x3
  416288:	07 ff b6 da 	l.jal 403df0 <OsdWrite>
  41628c:	a8 84 97 f3 	l.ori r4,r4,0x97f3
        OsdWrite(4, " then formatted.", 0,0);
  416290:	9c a0 00 00 	l.addi r5,r0,0x0
  416294:	18 80 00 41 	l.movhi r4,0x41
  416298:	a8 c5 00 00 	l.ori r6,r5,0x0
  41629c:	9c 60 00 04 	l.addi r3,r0,0x4
  4162a0:	07 ff b6 d4 	l.jal 403df0 <OsdWrite>
  4162a4:	a8 84 98 12 	l.ori r4,r4,0x9812
        OsdWrite(5, "", 0,0);
  4162a8:	9c a0 00 00 	l.addi r5,r0,0x0
  4162ac:	18 80 00 41 	l.movhi r4,0x41
  4162b0:	a8 c5 00 00 	l.ori r6,r5,0x0
  4162b4:	9c 60 00 05 	l.addi r3,r0,0x5
  4162b8:	07 ff b6 ce 	l.jal 403df0 <OsdWrite>
  4162bc:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(6, "", 0,0);
  4162c0:	9c a0 00 00 	l.addi r5,r0,0x0
  4162c4:	18 80 00 41 	l.movhi r4,0x41
  4162c8:	a8 c5 00 00 	l.ori r6,r5,0x0
  4162cc:	9c 60 00 06 	l.addi r3,r0,0x6
  4162d0:	07 ff b6 c8 	l.jal 403df0 <OsdWrite>
  4162d4:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(7, "             OK", menusub == 0,0);
  4162d8:	8c a2 00 00 	l.lbz r5,0x0(r2)
  4162dc:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  4162e0:	18 80 00 41 	l.movhi r4,0x41
  4162e4:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  4162e8:	9c 60 00 07 	l.addi r3,r0,0x7
  4162ec:	a8 84 98 23 	l.ori r4,r4,0x9823
  4162f0:	9c c0 00 00 	l.addi r6,r0,0x0
  4162f4:	07 ff b6 bf 	l.jal 403df0 <OsdWrite>
  4162f8:	18 40 00 41 	l.movhi r2,0x41

        menustate = MENU_SYNTHRDB2;
  4162fc:	a8 42 a3 89 	l.ori r2,r2,0xa389
  416300:	9c a0 00 25 	l.addi r5,r0,0x25
  416304:	00 00 02 75 	l.j 416cd8 <main+0x7a90>
  416308:	d8 02 28 00 	l.sb 0x0(r2),r5
        break;


    case MENU_SYNTHRDB2_1 :

		menumask=0x01;
  41630c:	18 60 00 41 	l.movhi r3,0x41
  416310:	9c 40 00 01 	l.addi r2,r0,0x1
  416314:	a8 63 a3 8c 	l.ori r3,r3,0xa38c
		parentstate=menustate;
  416318:	9c c0 00 26 	l.addi r6,r0,0x26
        break;


    case MENU_SYNTHRDB2_1 :

		menumask=0x01;
  41631c:	d4 03 10 00 	l.sw 0x0(r3),r2
		parentstate=menustate;
  416320:	18 60 00 41 	l.movhi r3,0x41
 		OsdSetTitle("Warning",0);
  416324:	9c 80 00 00 	l.addi r4,r0,0x0


    case MENU_SYNTHRDB2_1 :

		menumask=0x01;
		parentstate=menustate;
  416328:	a8 63 fd 24 	l.ori r3,r3,0xfd24
  41632c:	d8 03 30 00 	l.sb 0x0(r3),r6
 		OsdSetTitle("Warning",0);
  416330:	18 60 00 41 	l.movhi r3,0x41
  416334:	07 ff b4 2f 	l.jal 4033f0 <OsdSetTitle>
  416338:	a8 63 97 b6 	l.ori r3,r3,0x97b6
        OsdWrite(0, "", 0,0);
  41633c:	9c 60 00 00 	l.addi r3,r0,0x0
  416340:	18 80 00 41 	l.movhi r4,0x41
  416344:	a8 a3 00 00 	l.ori r5,r3,0x0
  416348:	a8 c3 00 00 	l.ori r6,r3,0x0
  41634c:	07 ff b6 a9 	l.jal 403df0 <OsdWrite>
  416350:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(1, " No filesystem recognised.", 0,0);
  416354:	9c a0 00 00 	l.addi r5,r0,0x0
  416358:	18 80 00 41 	l.movhi r4,0x41
  41635c:	a8 62 00 00 	l.ori r3,r2,0x0
  416360:	a8 c5 00 00 	l.ori r6,r5,0x0
  416364:	a8 84 98 33 	l.ori r4,r4,0x9833
  416368:	07 ff b6 a2 	l.jal 403df0 <OsdWrite>
  41636c:	18 40 00 41 	l.movhi r2,0x41
        OsdWrite(2, " Hardfile may need formatting", 0,0);
  416370:	9c a0 00 00 	l.addi r5,r0,0x0
  416374:	18 80 00 41 	l.movhi r4,0x41
  416378:	a8 c5 00 00 	l.ori r6,r5,0x0
  41637c:	9c 60 00 02 	l.addi r3,r0,0x2
  416380:	a8 84 98 4e 	l.ori r4,r4,0x984e
  416384:	07 ff b6 9b 	l.jal 403df0 <OsdWrite>
  416388:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
        OsdWrite(3, " (or may simply be an", 0,0);
  41638c:	9c a0 00 00 	l.addi r5,r0,0x0
  416390:	18 80 00 41 	l.movhi r4,0x41
  416394:	a8 c5 00 00 	l.ori r6,r5,0x0
  416398:	9c 60 00 03 	l.addi r3,r0,0x3
  41639c:	07 ff b6 95 	l.jal 403df0 <OsdWrite>
  4163a0:	a8 84 98 6c 	l.ori r4,r4,0x986c
        OsdWrite(4, " unrecognised filesystem)", 0,0);
  4163a4:	9c a0 00 00 	l.addi r5,r0,0x0
  4163a8:	18 80 00 41 	l.movhi r4,0x41
  4163ac:	a8 c5 00 00 	l.ori r6,r5,0x0
  4163b0:	9c 60 00 04 	l.addi r3,r0,0x4
  4163b4:	07 ff b6 8f 	l.jal 403df0 <OsdWrite>
  4163b8:	a8 84 98 82 	l.ori r4,r4,0x9882
        OsdWrite(5, "", 0,0);
  4163bc:	9c a0 00 00 	l.addi r5,r0,0x0
  4163c0:	18 80 00 41 	l.movhi r4,0x41
  4163c4:	a8 c5 00 00 	l.ori r6,r5,0x0
  4163c8:	9c 60 00 05 	l.addi r3,r0,0x5
  4163cc:	07 ff b6 89 	l.jal 403df0 <OsdWrite>
  4163d0:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(6, "", 0,0);
  4163d4:	9c a0 00 00 	l.addi r5,r0,0x0
  4163d8:	18 80 00 41 	l.movhi r4,0x41
  4163dc:	a8 c5 00 00 	l.ori r6,r5,0x0
  4163e0:	9c 60 00 06 	l.addi r3,r0,0x6
  4163e4:	07 ff b6 83 	l.jal 403df0 <OsdWrite>
  4163e8:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(7, "             OK", menusub == 0,0);
  4163ec:	8c a2 00 00 	l.lbz r5,0x0(r2)
  4163f0:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  4163f4:	18 80 00 41 	l.movhi r4,0x41
  4163f8:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  4163fc:	9c 60 00 07 	l.addi r3,r0,0x7
  416400:	a8 84 98 23 	l.ori r4,r4,0x9823
  416404:	9c c0 00 00 	l.addi r6,r0,0x0
  416408:	07 ff b6 7a 	l.jal 403df0 <OsdWrite>
  41640c:	18 40 00 41 	l.movhi r2,0x41

        menustate = MENU_SYNTHRDB2;
  416410:	a8 42 a3 89 	l.ori r2,r2,0xa389
  416414:	9c e0 00 25 	l.addi r7,r0,0x25
  416418:	00 00 02 30 	l.j 416cd8 <main+0x7a90>
  41641c:	d8 02 38 00 	l.sb 0x0(r2),r7
        break;


    case MENU_SYNTHRDB2 :
        if (select || menu)
  416420:	85 81 00 0c 	l.lwz r12,0xc(r1)
  416424:	bc 0c 00 00 	l.sfeqi r12,0x0
  416428:	10 00 02 2c 	l.bf 416cd8 <main+0x7a90>
  41642c:	15 00 00 00 	l.nop 0x0
        {
            if (menusub == 0) // OK
  416430:	18 40 00 41 	l.movhi r2,0x41
  416434:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  416438:	8c 42 00 00 	l.lbz r2,0x0(r2)
  41643c:	bc 22 00 00 	l.sfnei r2,0x0
  416440:	10 00 02 26 	l.bf 416cd8 <main+0x7a90>
  416444:	9d a0 00 1c 	l.addi r13,r0,0x1c
		        menustate = MENU_SETTINGS_HARDFILE1;
  416448:	18 40 00 41 	l.movhi r2,0x41
  41644c:	a8 42 a3 89 	l.ori r2,r2,0xa389
  416450:	00 00 02 22 	l.j 416cd8 <main+0x7a90>
  416454:	d8 02 68 00 	l.sb 0x0(r2),r13

        /******************************************************************/
        /* video settings menu                                            */
        /******************************************************************/
    case MENU_SETTINGS_VIDEO1 :
		menumask=0x0f;
  416458:	18 40 00 41 	l.movhi r2,0x41
  41645c:	9c 60 00 0f 	l.addi r3,r0,0xf
  416460:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
		parentstate=menustate;
		helptext=helptexts[HELPTEXT_VIDEO];
 
		OsdSetTitle("Video",OSD_ARROW_LEFT|OSD_ARROW_RIGHT);
  416464:	9c 80 00 03 	l.addi r4,r0,0x3

        /******************************************************************/
        /* video settings menu                                            */
        /******************************************************************/
    case MENU_SETTINGS_VIDEO1 :
		menumask=0x0f;
  416468:	d4 02 18 00 	l.sw 0x0(r2),r3
		parentstate=menustate;
  41646c:	18 40 00 41 	l.movhi r2,0x41
  416470:	9c 60 00 14 	l.addi r3,r0,0x14
  416474:	a8 42 fd 24 	l.ori r2,r2,0xfd24
		helptext=helptexts[HELPTEXT_VIDEO];
 
		OsdSetTitle("Video",OSD_ARROW_LEFT|OSD_ARROW_RIGHT);
        OsdWrite(0, "", 0,0);
        strcpy(s, "   Filtro Lores : ");
        strcat(s, config_filter_msg[config.filter.lores & 0x03]);
  416478:	19 c0 00 41 	l.movhi r14,0x41
        /******************************************************************/
        /* video settings menu                                            */
        /******************************************************************/
    case MENU_SETTINGS_VIDEO1 :
		menumask=0x0f;
		parentstate=menustate;
  41647c:	d8 02 18 00 	l.sb 0x0(r2),r3
		helptext=helptexts[HELPTEXT_VIDEO];
  416480:	18 60 00 41 	l.movhi r3,0x41
  416484:	18 40 00 42 	l.movhi r2,0x42
  416488:	a8 63 98 9c 	l.ori r3,r3,0x989c
  41648c:	a8 42 0b 74 	l.ori r2,r2,0xb74
 
		OsdSetTitle("Video",OSD_ARROW_LEFT|OSD_ARROW_RIGHT);
        OsdWrite(0, "", 0,0);
        strcpy(s, "   Filtro Lores : ");
        strcat(s, config_filter_msg[config.filter.lores & 0x03]);
  416490:	a9 ce cc ac 	l.ori r14,r14,0xccac
        /* video settings menu                                            */
        /******************************************************************/
    case MENU_SETTINGS_VIDEO1 :
		menumask=0x0f;
		parentstate=menustate;
		helptext=helptexts[HELPTEXT_VIDEO];
  416494:	d4 02 18 00 	l.sw 0x0(r2),r3
 
		OsdSetTitle("Video",OSD_ARROW_LEFT|OSD_ARROW_RIGHT);
  416498:	18 60 00 41 	l.movhi r3,0x41
  41649c:	07 ff b3 d5 	l.jal 4033f0 <OsdSetTitle>
  4164a0:	a8 63 99 88 	l.ori r3,r3,0x9988
        OsdWrite(0, "", 0,0);
  4164a4:	9c 60 00 00 	l.addi r3,r0,0x0
  4164a8:	18 80 00 41 	l.movhi r4,0x41
  4164ac:	a8 a3 00 00 	l.ori r5,r3,0x0
  4164b0:	a8 c3 00 00 	l.ori r6,r3,0x0
  4164b4:	07 ff b6 4f 	l.jal 403df0 <OsdWrite>
  4164b8:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        strcpy(s, "   Filtro Lores : ");
  4164bc:	18 60 00 41 	l.movhi r3,0x41
  4164c0:	18 80 00 41 	l.movhi r4,0x41
  4164c4:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  4164c8:	07 ff a7 81 	l.jal 4002cc <strcpy>
  4164cc:	a8 84 99 8e 	l.ori r4,r4,0x998e
        strcat(s, config_filter_msg[config.filter.lores & 0x03]);
  4164d0:	8c 4e 00 24 	l.lbz r2,0x24(r14)
  4164d4:	a4 42 00 03 	l.andi r2,r2,0x3
  4164d8:	18 80 00 41 	l.movhi r4,0x41
  4164dc:	b8 42 00 02 	l.slli r2,r2,0x2
  4164e0:	a8 84 6e 6c 	l.ori r4,r4,0x6e6c
  4164e4:	e0 42 20 00 	l.add r2,r2,r4
  4164e8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4164ec:	07 ff da 56 	l.jal 40ce44 <strcat.clone.3>
  4164f0:	18 40 00 41 	l.movhi r2,0x41
        OsdWrite(1, s, menusub == 0,0);
  4164f4:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  4164f8:	18 80 00 41 	l.movhi r4,0x41
  4164fc:	8c 42 00 00 	l.lbz r2,0x0(r2)
  416500:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  416504:	9c c0 00 00 	l.addi r6,r0,0x0
  416508:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  41650c:	9c 60 00 01 	l.addi r3,r0,0x1
  416510:	07 ff b6 38 	l.jal 403df0 <OsdWrite>
  416514:	a8 84 cd 18 	l.ori r4,r4,0xcd18
        strcpy(s, "   Filtro Hires : ");
  416518:	18 60 00 41 	l.movhi r3,0x41
  41651c:	18 80 00 41 	l.movhi r4,0x41
  416520:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  416524:	07 ff a7 6a 	l.jal 4002cc <strcpy>
  416528:	a8 84 99 a1 	l.ori r4,r4,0x99a1
        strcat(s, config_filter_msg[config.filter.hires & 0x03]);
  41652c:	8c 6e 00 25 	l.lbz r3,0x25(r14)
  416530:	a4 63 00 03 	l.andi r3,r3,0x3
  416534:	18 a0 00 41 	l.movhi r5,0x41
  416538:	b8 63 00 02 	l.slli r3,r3,0x2
  41653c:	a8 a5 6e 6c 	l.ori r5,r5,0x6e6c
  416540:	e0 63 28 00 	l.add r3,r3,r5
  416544:	07 ff da 40 	l.jal 40ce44 <strcat.clone.3>
  416548:	84 63 00 00 	l.lwz r3,0x0(r3)
        OsdWrite(2, s, menusub == 1,0);
  41654c:	ac a2 00 01 	l.xori r5,r2,0x1
  416550:	18 80 00 41 	l.movhi r4,0x41
  416554:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  416558:	9c c0 00 00 	l.addi r6,r0,0x0
  41655c:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  416560:	9c 60 00 02 	l.addi r3,r0,0x2
  416564:	07 ff b6 23 	l.jal 403df0 <OsdWrite>
  416568:	a8 84 cd 18 	l.ori r4,r4,0xcd18
        strcpy(s, "   Scanlines    : ");
  41656c:	18 60 00 41 	l.movhi r3,0x41
  416570:	18 80 00 41 	l.movhi r4,0x41
  416574:	a8 63 cd 18 	l.ori r3,r3,0xcd18
  416578:	07 ff a7 55 	l.jal 4002cc <strcpy>
  41657c:	a8 84 99 b4 	l.ori r4,r4,0x99b4
        strcat(s, config_scanlines_msg[config.scanlines % 3]);
  416580:	8c 6e 00 2c 	l.lbz r3,0x2c(r14)
  416584:	07 ff a7 21 	l.jal 400208 <__umodsi3>
  416588:	9c 80 00 03 	l.addi r4,r0,0x3
  41658c:	a5 6b 00 ff 	l.andi r11,r11,0xff
  416590:	18 c0 00 41 	l.movhi r6,0x41
  416594:	b9 6b 00 02 	l.slli r11,r11,0x2
  416598:	a8 c6 6e 9c 	l.ori r6,r6,0x6e9c
  41659c:	e1 6b 30 00 	l.add r11,r11,r6
  4165a0:	07 ff da 29 	l.jal 40ce44 <strcat.clone.3>
  4165a4:	84 6b 00 00 	l.lwz r3,0x0(r11)
        OsdWrite(3, s, menusub == 2,0);
  4165a8:	ac a2 00 02 	l.xori r5,r2,0x2
  4165ac:	18 80 00 41 	l.movhi r4,0x41
  4165b0:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
  4165b4:	9c 60 00 03 	l.addi r3,r0,0x3
  4165b8:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  4165bc:	a8 84 cd 18 	l.ori r4,r4,0xcd18
  4165c0:	9c c0 00 00 	l.addi r6,r0,0x0
  4165c4:	07 ff b6 0b 	l.jal 403df0 <OsdWrite>
  4165c8:	ac 42 00 03 	l.xori r2,r2,0x3
        OsdWrite(4, "", 0,0);
  4165cc:	9c a0 00 00 	l.addi r5,r0,0x0
  4165d0:	18 80 00 41 	l.movhi r4,0x41
  4165d4:	a8 c5 00 00 	l.ori r6,r5,0x0
  4165d8:	9c 60 00 04 	l.addi r3,r0,0x4
  4165dc:	07 ff b6 05 	l.jal 403df0 <OsdWrite>
  4165e0:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(5, "", 0,0);
  4165e4:	9c a0 00 00 	l.addi r5,r0,0x0
  4165e8:	18 80 00 41 	l.movhi r4,0x41
  4165ec:	a8 c5 00 00 	l.ori r6,r5,0x0
  4165f0:	9c 60 00 05 	l.addi r3,r0,0x5
  4165f4:	07 ff b5 ff 	l.jal 403df0 <OsdWrite>
  4165f8:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(6, "", 0,0);
  4165fc:	9c a0 00 00 	l.addi r5,r0,0x0
  416600:	18 80 00 41 	l.movhi r4,0x41
  416604:	a8 c5 00 00 	l.ori r6,r5,0x0
  416608:	9c 60 00 06 	l.addi r3,r0,0x6
  41660c:	07 ff b5 f9 	l.jal 403df0 <OsdWrite>
  416610:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(7, STD_EXIT, menusub == 3,0);
  416614:	9c a2 ff ff 	l.addi r5,r2,0xffffffff
  416618:	18 80 00 41 	l.movhi r4,0x41
  41661c:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  416620:	9c 60 00 07 	l.addi r3,r0,0x7
  416624:	a8 84 8b a4 	l.ori r4,r4,0x8ba4
  416628:	9c c0 00 00 	l.addi r6,r0,0x0
  41662c:	07 ff b5 f1 	l.jal 403df0 <OsdWrite>
  416630:	18 40 00 41 	l.movhi r2,0x41

        menustate = MENU_SETTINGS_VIDEO2;
  416634:	a8 42 a3 89 	l.ori r2,r2,0xa389
  416638:	9c e0 00 15 	l.addi r7,r0,0x15
  41663c:	00 00 01 a7 	l.j 416cd8 <main+0x7a90>
  416640:	d8 02 38 00 	l.sb 0x0(r2),r7
        break;

    case MENU_SETTINGS_VIDEO2 :
        if (select)
  416644:	bc 10 00 00 	l.sfeqi r16,0x0
  416648:	10 00 00 41 	l.bf 41674c <main+0x7504>
  41664c:	bc 0e 00 00 	l.sfeqi r14,0x0
        {
            if (menusub == 0)
  416650:	18 60 00 41 	l.movhi r3,0x41
  416654:	a8 63 a3 8a 	l.ori r3,r3,0xa38a
  416658:	8c 43 00 00 	l.lbz r2,0x0(r3)
  41665c:	bc 22 00 00 	l.sfnei r2,0x0
  416660:	10 00 00 0d 	l.bf 416694 <main+0x744c>
  416664:	9d 80 00 14 	l.addi r12,r0,0x14
            {
                config.filter.lores++;
  416668:	18 40 00 41 	l.movhi r2,0x41
                config.filter.lores &= 0x03;
                menustate = MENU_SETTINGS_VIDEO1;
  41666c:	18 60 00 41 	l.movhi r3,0x41
    case MENU_SETTINGS_VIDEO2 :
        if (select)
        {
            if (menusub == 0)
            {
                config.filter.lores++;
  416670:	a8 42 cc ac 	l.ori r2,r2,0xccac
                config.filter.lores &= 0x03;
                menustate = MENU_SETTINGS_VIDEO1;
  416674:	a8 63 a3 89 	l.ori r3,r3,0xa389
    case MENU_SETTINGS_VIDEO2 :
        if (select)
        {
            if (menusub == 0)
            {
                config.filter.lores++;
  416678:	8c 82 00 24 	l.lbz r4,0x24(r2)
  41667c:	9c 84 00 01 	l.addi r4,r4,0x1
                config.filter.lores &= 0x03;
  416680:	a4 84 00 03 	l.andi r4,r4,0x3
                menustate = MENU_SETTINGS_VIDEO1;
  416684:	d8 03 60 00 	l.sb 0x0(r3),r12
        if (select)
        {
            if (menusub == 0)
            {
                config.filter.lores++;
                config.filter.lores &= 0x03;
  416688:	d8 02 20 24 	l.sb 0x24(r2),r4
                menustate = MENU_SETTINGS_VIDEO1;
                //ConfigFilter(config.filter.lores, config.filter.hires);
                ConfigVideo(config.filter.hires, config.filter.lores, config.scanlines);
  41668c:	00 00 00 0f 	l.j 4166c8 <main+0x7480>
  416690:	8c 62 00 25 	l.lbz r3,0x25(r2)
            }
            else if (menusub == 1)
  416694:	bc 22 00 01 	l.sfnei r2,0x1
  416698:	10 00 00 10 	l.bf 4166d8 <main+0x7490>
  41669c:	18 80 00 41 	l.movhi r4,0x41
            {
                config.filter.hires++;
  4166a0:	18 40 00 41 	l.movhi r2,0x41
  4166a4:	a8 42 cc ac 	l.ori r2,r2,0xccac
                config.filter.hires &= 0x03;
                menustate = MENU_SETTINGS_VIDEO1;
  4166a8:	a8 84 a3 89 	l.ori r4,r4,0xa389
                //ConfigFilter(config.filter.lores, config.filter.hires);
                ConfigVideo(config.filter.hires, config.filter.lores, config.scanlines);
            }
            else if (menusub == 1)
            {
                config.filter.hires++;
  4166ac:	8c 62 00 25 	l.lbz r3,0x25(r2)
  4166b0:	9c 63 00 01 	l.addi r3,r3,0x1
                config.filter.hires &= 0x03;
                menustate = MENU_SETTINGS_VIDEO1;
  4166b4:	9d a0 00 14 	l.addi r13,r0,0x14
                ConfigVideo(config.filter.hires, config.filter.lores, config.scanlines);
            }
            else if (menusub == 1)
            {
                config.filter.hires++;
                config.filter.hires &= 0x03;
  4166b8:	a4 63 00 03 	l.andi r3,r3,0x3
                menustate = MENU_SETTINGS_VIDEO1;
  4166bc:	d8 04 68 00 	l.sb 0x0(r4),r13
                ConfigVideo(config.filter.hires, config.filter.lores, config.scanlines);
            }
            else if (menusub == 1)
            {
                config.filter.hires++;
                config.filter.hires &= 0x03;
  4166c0:	d8 02 18 25 	l.sb 0x25(r2),r3
                menustate = MENU_SETTINGS_VIDEO1;
                //ConfigFilter(config.filter.lores, config.filter.hires);
                ConfigVideo(config.filter.hires, config.filter.lores, config.scanlines);
  4166c4:	8c 82 00 24 	l.lbz r4,0x24(r2)
  4166c8:	07 ff b6 3d 	l.jal 403fbc <ConfigVideo>
  4166cc:	8c a2 00 2c 	l.lbz r5,0x2c(r2)
                menustate = MENU_MAIN2_1;
                menusub = 4;
            }
        }

        if (menu)
  4166d0:	00 00 00 1f 	l.j 41674c <main+0x7504>
  4166d4:	bc 0e 00 00 	l.sfeqi r14,0x0
                config.filter.hires &= 0x03;
                menustate = MENU_SETTINGS_VIDEO1;
                //ConfigFilter(config.filter.lores, config.filter.hires);
                ConfigVideo(config.filter.hires, config.filter.lores, config.scanlines);
            }
            else if (menusub == 2)
  4166d8:	bc 22 00 02 	l.sfnei r2,0x2
  4166dc:	10 00 00 14 	l.bf 41672c <main+0x74e4>
  4166e0:	bc 22 00 03 	l.sfnei r2,0x3
            {
                config.scanlines++;
  4166e4:	18 40 00 41 	l.movhi r2,0x41
  4166e8:	a8 42 cc ac 	l.ori r2,r2,0xccac
  4166ec:	8c 62 00 2c 	l.lbz r3,0x2c(r2)
  4166f0:	9c 63 00 01 	l.addi r3,r3,0x1
  4166f4:	a4 63 00 ff 	l.andi r3,r3,0xff
                if (config.scanlines > 2)
  4166f8:	bc a3 00 02 	l.sfleui r3,0x2
  4166fc:	10 00 00 04 	l.bf 41670c <main+0x74c4>
  416700:	d8 02 18 2c 	l.sb 0x2c(r2),r3
                    config.scanlines = 0;
  416704:	9c 60 00 00 	l.addi r3,r0,0x0
  416708:	d8 02 18 2c 	l.sb 0x2c(r2),r3
                menustate = MENU_SETTINGS_VIDEO1;
  41670c:	18 40 00 41 	l.movhi r2,0x41
  416710:	9c 80 00 14 	l.addi r4,r0,0x14
  416714:	a8 42 a3 89 	l.ori r2,r2,0xa389
  416718:	d8 02 20 00 	l.sb 0x0(r2),r4
                //ConfigScanlines(config.scanlines);
                ConfigVideo(config.filter.hires, config.filter.lores, config.scanlines);
  41671c:	18 40 00 41 	l.movhi r2,0x41
  416720:	a8 42 cc ac 	l.ori r2,r2,0xccac
  416724:	03 ff ff e8 	l.j 4166c4 <main+0x747c>
  416728:	8c 62 00 25 	l.lbz r3,0x25(r2)
            }

            else if (menusub == 3)
  41672c:	10 00 00 08 	l.bf 41674c <main+0x7504>
  416730:	bc 0e 00 00 	l.sfeqi r14,0x0
            {
                menustate = MENU_MAIN2_1;
  416734:	18 40 00 41 	l.movhi r2,0x41
  416738:	9c a0 00 28 	l.addi r5,r0,0x28
  41673c:	a8 42 a3 89 	l.ori r2,r2,0xa389
                menusub = 4;
  416740:	9c c0 00 04 	l.addi r6,r0,0x4
                ConfigVideo(config.filter.hires, config.filter.lores, config.scanlines);
            }

            else if (menusub == 3)
            {
                menustate = MENU_MAIN2_1;
  416744:	d8 02 28 00 	l.sb 0x0(r2),r5
                menusub = 4;
  416748:	d8 03 30 00 	l.sb 0x0(r3),r6
            }
        }

        if (menu)
  41674c:	10 00 00 0b 	l.bf 416778 <main+0x7530>
  416750:	bc 16 00 00 	l.sfeqi r22,0x0
        {
            menustate = MENU_MAIN2_1;
  416754:	18 40 00 41 	l.movhi r2,0x41
  416758:	9c e0 00 28 	l.addi r7,r0,0x28
  41675c:	a8 42 a3 89 	l.ori r2,r2,0xa389
            menusub = 4;
  416760:	9d 80 00 04 	l.addi r12,r0,0x4
            }
        }

        if (menu)
        {
            menustate = MENU_MAIN2_1;
  416764:	d8 02 38 00 	l.sb 0x0(r2),r7
            menusub = 4;
  416768:	18 40 00 41 	l.movhi r2,0x41
  41676c:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  416770:	00 00 01 5a 	l.j 416cd8 <main+0x7a90>
  416774:	d8 02 60 00 	l.sb 0x0(r2),r12
        }
        else if (right)
  416778:	10 00 00 0a 	l.bf 4167a0 <main+0x7558>
  41677c:	bc 18 00 00 	l.sfeqi r24,0x0
        {
            menustate = MENU_SETTINGS_CHIPSET1;
  416780:	18 40 00 41 	l.movhi r2,0x41
  416784:	9d a0 00 18 	l.addi r13,r0,0x18
  416788:	a8 42 a3 89 	l.ori r2,r2,0xa389
  41678c:	d8 02 68 00 	l.sb 0x0(r2),r13
            menusub = 0;
  416790:	18 40 00 41 	l.movhi r2,0x41
  416794:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  416798:	00 00 01 50 	l.j 416cd8 <main+0x7a90>
  41679c:	d8 02 70 00 	l.sb 0x0(r2),r14
        }
        else if (left)
  4167a0:	10 00 01 4e 	l.bf 416cd8 <main+0x7a90>
  4167a4:	9c 60 00 16 	l.addi r3,r0,0x16
        {
            menustate = MENU_SETTINGS_MEMORY1;
  4167a8:	18 40 00 41 	l.movhi r2,0x41
  4167ac:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4167b0:	d8 02 18 00 	l.sb 0x0(r2),r3
            menusub = 0;
  4167b4:	18 40 00 41 	l.movhi r2,0x41
  4167b8:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  4167bc:	00 00 01 47 	l.j 416cd8 <main+0x7a90>
  4167c0:	d8 02 b0 00 	l.sb 0x0(r2),r22
        /******************************************************************/
        /* rom file selected menu                                         */
        /******************************************************************/
    case MENU_ROMFILE_SELECTED :

         menusub = 1;
  4167c4:	18 40 00 41 	l.movhi r2,0x41
  4167c8:	9c 80 00 01 	l.addi r4,r0,0x1
  4167cc:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
		 menustate=MENU_ROMFILE_SELECTED1;
  4167d0:	9c a0 00 12 	l.addi r5,r0,0x12
        /******************************************************************/
        /* rom file selected menu                                         */
        /******************************************************************/
    case MENU_ROMFILE_SELECTED :

         menusub = 1;
  4167d4:	d8 02 20 00 	l.sb 0x0(r2),r4
		 menustate=MENU_ROMFILE_SELECTED1;
  4167d8:	18 40 00 41 	l.movhi r2,0x41
  4167dc:	a8 42 a3 89 	l.ori r2,r2,0xa389
  4167e0:	d8 02 28 00 	l.sb 0x0(r2),r5
         // no break intended

    case MENU_ROMFILE_SELECTED1 :
		menumask=0x03;
  4167e4:	18 40 00 41 	l.movhi r2,0x41
  4167e8:	9e 00 00 03 	l.addi r16,r0,0x3
  4167ec:	a8 42 a3 8c 	l.ori r2,r2,0xa38c
		parentstate=menustate;
  4167f0:	18 60 00 41 	l.movhi r3,0x41
         menusub = 1;
		 menustate=MENU_ROMFILE_SELECTED1;
         // no break intended

    case MENU_ROMFILE_SELECTED1 :
		menumask=0x03;
  4167f4:	d4 02 80 00 	l.sw 0x0(r2),r16
		parentstate=menustate;
  4167f8:	18 40 00 41 	l.movhi r2,0x41
  4167fc:	a8 63 fd 24 	l.ori r3,r3,0xfd24
  416800:	a8 42 a3 89 	l.ori r2,r2,0xa389
 		OsdSetTitle("Confirmar",0);
  416804:	9c 80 00 00 	l.addi r4,r0,0x0
		 menustate=MENU_ROMFILE_SELECTED1;
         // no break intended

    case MENU_ROMFILE_SELECTED1 :
		menumask=0x03;
		parentstate=menustate;
  416808:	8c c2 00 00 	l.lbz r6,0x0(r2)
  41680c:	d8 03 30 00 	l.sb 0x0(r3),r6
 		OsdSetTitle("Confirmar",0);
  416810:	18 60 00 41 	l.movhi r3,0x41
  416814:	07 ff b2 f7 	l.jal 4033f0 <OsdSetTitle>
  416818:	a8 63 97 60 	l.ori r3,r3,0x9760
        OsdWrite(0, "", 0,0);
  41681c:	9c 60 00 00 	l.addi r3,r0,0x0
  416820:	18 80 00 41 	l.movhi r4,0x41
  416824:	a8 a3 00 00 	l.ori r5,r3,0x0
  416828:	a8 c3 00 00 	l.ori r6,r3,0x0
  41682c:	07 ff b5 71 	l.jal 403df0 <OsdWrite>
  416830:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(1, "       Recargar Kickstart?", 0,0);
  416834:	9c a0 00 00 	l.addi r5,r0,0x0
  416838:	18 80 00 41 	l.movhi r4,0x41
  41683c:	a8 c5 00 00 	l.ori r6,r5,0x0
  416840:	9c 60 00 01 	l.addi r3,r0,0x1
  416844:	07 ff b5 6b 	l.jal 403df0 <OsdWrite>
  416848:	a8 84 99 c7 	l.ori r4,r4,0x99c7
        OsdWrite(2, "", 0,0);
  41684c:	9c a0 00 00 	l.addi r5,r0,0x0
  416850:	18 80 00 41 	l.movhi r4,0x41
  416854:	a8 c5 00 00 	l.ori r6,r5,0x0
  416858:	9c 60 00 02 	l.addi r3,r0,0x2
  41685c:	07 ff b5 65 	l.jal 403df0 <OsdWrite>
  416860:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(3, "              si", menusub == 0,0);
  416864:	18 60 00 41 	l.movhi r3,0x41
  416868:	18 80 00 41 	l.movhi r4,0x41
  41686c:	a8 63 a3 8a 	l.ori r3,r3,0xa38a
  416870:	a8 84 91 bb 	l.ori r4,r4,0x91bb
  416874:	8d c3 00 00 	l.lbz r14,0x0(r3)
  416878:	9c ae ff ff 	l.addi r5,r14,0xffffffff
  41687c:	a8 70 00 00 	l.ori r3,r16,0x0
  416880:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  416884:	9c c0 00 00 	l.addi r6,r0,0x0
  416888:	07 ff b5 5a 	l.jal 403df0 <OsdWrite>
  41688c:	ad ce 00 01 	l.xori r14,r14,0x1
        OsdWrite(4, "              no", menusub == 1,0);
  416890:	9c ae ff ff 	l.addi r5,r14,0xffffffff
  416894:	18 80 00 41 	l.movhi r4,0x41
  416898:	b8 a5 00 5f 	l.srli r5,r5,0x1f
  41689c:	9c 60 00 04 	l.addi r3,r0,0x4
  4168a0:	a8 84 91 cd 	l.ori r4,r4,0x91cd
  4168a4:	07 ff b5 53 	l.jal 403df0 <OsdWrite>
  4168a8:	9c c0 00 00 	l.addi r6,r0,0x0
        OsdWrite(5, "", 0,0);
  4168ac:	9c a0 00 00 	l.addi r5,r0,0x0
  4168b0:	18 80 00 41 	l.movhi r4,0x41
  4168b4:	a8 c5 00 00 	l.ori r6,r5,0x0
  4168b8:	9c 60 00 05 	l.addi r3,r0,0x5
  4168bc:	07 ff b5 4d 	l.jal 403df0 <OsdWrite>
  4168c0:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(6, "", 0,0);
  4168c4:	9c a0 00 00 	l.addi r5,r0,0x0
  4168c8:	18 80 00 41 	l.movhi r4,0x41
  4168cc:	a8 c5 00 00 	l.ori r6,r5,0x0
  4168d0:	9c 60 00 06 	l.addi r3,r0,0x6
  4168d4:	07 ff b5 47 	l.jal 403df0 <OsdWrite>
  4168d8:	a8 84 83 f7 	l.ori r4,r4,0x83f7
        OsdWrite(7, "", 0,0);
  4168dc:	9c a0 00 00 	l.addi r5,r0,0x0
  4168e0:	18 80 00 41 	l.movhi r4,0x41
  4168e4:	9c 60 00 07 	l.addi r3,r0,0x7
  4168e8:	a8 84 83 f7 	l.ori r4,r4,0x83f7
  4168ec:	07 ff b5 41 	l.jal 403df0 <OsdWrite>
  4168f0:	a8 c5 00 00 	l.ori r6,r5,0x0

        menustate = MENU_ROMFILE_SELECTED2;
  4168f4:	9c e0 00 13 	l.addi r7,r0,0x13
  4168f8:	00 00 00 f8 	l.j 416cd8 <main+0x7a90>
  4168fc:	d8 02 38 00 	l.sb 0x0(r2),r7
        break;

    case MENU_ROMFILE_SELECTED2 :

        if (select)
  416900:	bc 10 00 00 	l.sfeqi r16,0x0
  416904:	10 00 00 d3 	l.bf 416c50 <main+0x7a08>
  416908:	bc 0e 00 00 	l.sfeqi r14,0x0
        {
            if (menusub == 0)
  41690c:	18 40 00 41 	l.movhi r2,0x41
  416910:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  416914:	8e 82 00 00 	l.lbz r20,0x0(r2)
  416918:	bc 34 00 00 	l.sfnei r20,0x0
  41691c:	10 00 00 c4 	l.bf 416c2c <main+0x79e4>
  416920:	bc 34 00 01 	l.sfnei r20,0x1
            {
                memcpy((void*)config.kickstart.name, (void*)file.name, sizeof(config.kickstart.name));
  416924:	18 60 00 41 	l.movhi r3,0x41
  416928:	18 80 00 41 	l.movhi r4,0x41
  41692c:	a8 63 cc b8 	l.ori r3,r3,0xccb8
  416930:	a8 84 cb 80 	l.ori r4,r4,0xcb80
  416934:	9c a0 00 08 	l.addi r5,r0,0x8
  416938:	07 ff a6 52 	l.jal 400280 <memcpy>
  41693c:	aa 5e 00 20 	l.ori r18,r30,0x20
                memcpy((void*)config.kickstart.long_name, (void*)file.long_name, sizeof(config.kickstart.long_name));
  416940:	18 60 00 41 	l.movhi r3,0x41
  416944:	18 80 00 41 	l.movhi r4,0x41
  416948:	a8 63 cc c0 	l.ori r3,r3,0xccc0
  41694c:	a8 84 cb a4 	l.ori r4,r4,0xcba4
  416950:	9c a0 00 10 	l.addi r5,r0,0x10

                OsdDisable();
                //OsdReset(RESET_BOOTLOADER);
                //ConfigChipset(config.chipset | CONFIG_TURBO);
                //ConfigFloppy(config.floppy.drives, CONFIG_FLOPPY2X);
                EnableOsd();
  416954:	9f 40 00 44 	l.addi r26,r0,0x44
        if (select)
        {
            if (menusub == 0)
            {
                memcpy((void*)config.kickstart.name, (void*)file.name, sizeof(config.kickstart.name));
                memcpy((void*)config.kickstart.long_name, (void*)file.long_name, sizeof(config.kickstart.long_name));
  416958:	07 ff a6 4a 	l.jal 400280 <memcpy>
  41695c:	aa 1e 00 24 	l.ori r16,r30,0x24

                OsdDisable();
  416960:	07 ff b5 85 	l.jal 403f74 <OsdDisable>
  416964:	9f 00 00 08 	l.addi r24,r0,0x8
                //OsdReset(RESET_BOOTLOADER);
                //ConfigChipset(config.chipset | CONFIG_TURBO);
                //ConfigFloppy(config.floppy.drives, CONFIG_FLOPPY2X);
                EnableOsd();
  416968:	d4 12 d0 00 	l.sw 0x0(r18),r26
                SPI(OSD_CMD_RST);
  41696c:	d4 10 c0 00 	l.sw 0x0(r16),r24
                rstval = (SPI_RST_CPU | SPI_CPU_HLT);
  416970:	1b 80 00 41 	l.movhi r28,0x41
                OsdDisable();
                //OsdReset(RESET_BOOTLOADER);
                //ConfigChipset(config.chipset | CONFIG_TURBO);
                //ConfigFloppy(config.floppy.drives, CONFIG_FLOPPY2X);
                EnableOsd();
                SPI(OSD_CMD_RST);
  416974:	84 50 00 00 	l.lwz r2,0x0(r16)
                rstval = (SPI_RST_CPU | SPI_CPU_HLT);
  416978:	9c 40 00 06 	l.addi r2,r0,0x6
  41697c:	ab 9c a3 4c 	l.ori r28,r28,0xa34c
                SPI(rstval);
                DisableOsd();
  416980:	9e c0 00 40 	l.addi r22,r0,0x40
                //OsdReset(RESET_BOOTLOADER);
                //ConfigChipset(config.chipset | CONFIG_TURBO);
                //ConfigFloppy(config.floppy.drives, CONFIG_FLOPPY2X);
                EnableOsd();
                SPI(OSD_CMD_RST);
                rstval = (SPI_RST_CPU | SPI_CPU_HLT);
  416984:	d4 1c 10 00 	l.sw 0x0(r28),r2
                SPI(rstval);
  416988:	d4 10 10 00 	l.sw 0x0(r16),r2
  41698c:	84 50 00 00 	l.lwz r2,0x0(r16)
                DisableOsd();
                SPIN(); SPIN(); SPIN(); SPIN();
  416990:	a8 5e 00 1c 	l.ori r2,r30,0x1c
                //ConfigFloppy(config.floppy.drives, CONFIG_FLOPPY2X);
                EnableOsd();
                SPI(OSD_CMD_RST);
                rstval = (SPI_RST_CPU | SPI_CPU_HLT);
                SPI(rstval);
                DisableOsd();
  416994:	d4 12 b0 00 	l.sw 0x0(r18),r22
                SPIN(); SPIN(); SPIN(); SPIN();
  416998:	84 62 00 00 	l.lwz r3,0x0(r2)
  41699c:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169a0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169a4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169a8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169ac:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169b0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169b4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169b8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169bc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169c0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169c4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169c8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169cc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169d0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169d4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169d8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169dc:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169e0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169e4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169e8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169ec:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169f0:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169f4:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169f8:	84 62 00 00 	l.lwz r3,0x0(r2)
  4169fc:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a00:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a04:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a08:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a0c:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a10:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a14:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a18:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a1c:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a20:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a24:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a28:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a2c:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a30:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a34:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a38:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a3c:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a40:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a44:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a48:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a4c:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a50:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a54:	84 62 00 00 	l.lwz r3,0x0(r2)
                UploadKickstart(config.kickstart.name);
  416a58:	18 60 00 41 	l.movhi r3,0x41
  416a5c:	07 ff cc c7 	l.jal 409d78 <UploadKickstart>
  416a60:	a8 63 cc b8 	l.ori r3,r3,0xccb8
                EnableOsd();
  416a64:	d4 12 d0 00 	l.sw 0x0(r18),r26
                SPI(OSD_CMD_RST);
  416a68:	d4 10 c0 00 	l.sw 0x0(r16),r24
  416a6c:	84 70 00 00 	l.lwz r3,0x0(r16)
                rstval = (SPI_RST_USR | SPI_RST_CPU);
                SPI(rstval);
  416a70:	9c 60 00 03 	l.addi r3,r0,0x3
  416a74:	d4 10 18 00 	l.sw 0x0(r16),r3
  416a78:	84 70 00 00 	l.lwz r3,0x0(r16)
                DisableOsd();
  416a7c:	d4 12 b0 00 	l.sw 0x0(r18),r22
                SPIN(); SPIN(); SPIN(); SPIN();
  416a80:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a84:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a88:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a8c:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a90:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a94:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a98:	84 62 00 00 	l.lwz r3,0x0(r2)
  416a9c:	84 62 00 00 	l.lwz r3,0x0(r2)
  416aa0:	84 62 00 00 	l.lwz r3,0x0(r2)
  416aa4:	84 62 00 00 	l.lwz r3,0x0(r2)
  416aa8:	84 62 00 00 	l.lwz r3,0x0(r2)
  416aac:	84 62 00 00 	l.lwz r3,0x0(r2)
  416ab0:	84 62 00 00 	l.lwz r3,0x0(r2)
  416ab4:	84 62 00 00 	l.lwz r3,0x0(r2)
  416ab8:	84 62 00 00 	l.lwz r3,0x0(r2)
  416abc:	84 62 00 00 	l.lwz r3,0x0(r2)
  416ac0:	84 62 00 00 	l.lwz r3,0x0(r2)
  416ac4:	84 62 00 00 	l.lwz r3,0x0(r2)
  416ac8:	84 62 00 00 	l.lwz r3,0x0(r2)
  416acc:	84 62 00 00 	l.lwz r3,0x0(r2)
  416ad0:	84 62 00 00 	l.lwz r3,0x0(r2)
  416ad4:	84 62 00 00 	l.lwz r3,0x0(r2)
  416ad8:	84 62 00 00 	l.lwz r3,0x0(r2)
  416adc:	84 62 00 00 	l.lwz r3,0x0(r2)
  416ae0:	84 62 00 00 	l.lwz r3,0x0(r2)
  416ae4:	84 62 00 00 	l.lwz r3,0x0(r2)
  416ae8:	84 62 00 00 	l.lwz r3,0x0(r2)
  416aec:	84 62 00 00 	l.lwz r3,0x0(r2)
  416af0:	84 62 00 00 	l.lwz r3,0x0(r2)
  416af4:	84 62 00 00 	l.lwz r3,0x0(r2)
  416af8:	84 62 00 00 	l.lwz r3,0x0(r2)
  416afc:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b00:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b04:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b08:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b0c:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b10:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b14:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b18:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b1c:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b20:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b24:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b28:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b2c:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b30:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b34:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b38:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b3c:	84 62 00 00 	l.lwz r3,0x0(r2)
                EnableOsd();
  416b40:	d4 12 d0 00 	l.sw 0x0(r18),r26
                SPI(OSD_CMD_RST);
  416b44:	d4 10 c0 00 	l.sw 0x0(r16),r24
  416b48:	84 70 00 00 	l.lwz r3,0x0(r16)
                rstval = 0;
  416b4c:	d4 1c a0 00 	l.sw 0x0(r28),r20
                SPI(rstval);
  416b50:	d4 10 a0 00 	l.sw 0x0(r16),r20
  416b54:	84 70 00 00 	l.lwz r3,0x0(r16)
                DisableOsd();
  416b58:	d4 12 b0 00 	l.sw 0x0(r18),r22
                SPIN(); SPIN(); SPIN(); SPIN();
  416b5c:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b60:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b64:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b68:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b6c:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b70:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b74:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b78:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b7c:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b80:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b84:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b88:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b8c:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b90:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b94:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b98:	84 62 00 00 	l.lwz r3,0x0(r2)
  416b9c:	84 62 00 00 	l.lwz r3,0x0(r2)
  416ba0:	84 62 00 00 	l.lwz r3,0x0(r2)
  416ba4:	84 62 00 00 	l.lwz r3,0x0(r2)
  416ba8:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bac:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bb0:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bb4:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bb8:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bbc:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bc0:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bc4:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bc8:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bcc:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bd0:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bd4:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bd8:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bdc:	84 62 00 00 	l.lwz r3,0x0(r2)
  416be0:	84 62 00 00 	l.lwz r3,0x0(r2)
  416be4:	84 62 00 00 	l.lwz r3,0x0(r2)
  416be8:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bec:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bf0:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bf4:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bf8:	84 62 00 00 	l.lwz r3,0x0(r2)
  416bfc:	84 62 00 00 	l.lwz r3,0x0(r2)
  416c00:	84 62 00 00 	l.lwz r3,0x0(r2)
  416c04:	84 62 00 00 	l.lwz r3,0x0(r2)
  416c08:	84 62 00 00 	l.lwz r3,0x0(r2)
  416c0c:	84 62 00 00 	l.lwz r3,0x0(r2)
  416c10:	84 62 00 00 	l.lwz r3,0x0(r2)
  416c14:	84 62 00 00 	l.lwz r3,0x0(r2)
  416c18:	84 42 00 00 	l.lwz r2,0x0(r2)
                //ConfigChipset(config.chipset); // restore CPU speed mode
                //ConfigFloppy(config.floppy.drives, config.floppy.speed); // restore floppy speed mode

                menustate = MENU_NONE1;
  416c1c:	18 40 00 41 	l.movhi r2,0x41
  416c20:	a8 42 a3 89 	l.ori r2,r2,0xa389
  416c24:	00 00 00 0a 	l.j 416c4c <main+0x7a04>
  416c28:	d8 02 a0 00 	l.sb 0x0(r2),r20
            }
            else if (menusub == 1)
  416c2c:	10 00 00 09 	l.bf 416c50 <main+0x7a08>
  416c30:	bc 0e 00 00 	l.sfeqi r14,0x0
            {
                menustate = MENU_SETTINGS_MEMORY1;
  416c34:	18 60 00 41 	l.movhi r3,0x41
  416c38:	9d 80 00 16 	l.addi r12,r0,0x16
  416c3c:	a8 63 a3 89 	l.ori r3,r3,0xa389
                menusub = 2;
  416c40:	9d a0 00 02 	l.addi r13,r0,0x2

                menustate = MENU_NONE1;
            }
            else if (menusub == 1)
            {
                menustate = MENU_SETTINGS_MEMORY1;
  416c44:	d8 03 60 00 	l.sb 0x0(r3),r12
                menusub = 2;
  416c48:	d8 02 68 00 	l.sb 0x0(r2),r13
            }
        }

        if (menu)
  416c4c:	bc 0e 00 00 	l.sfeqi r14,0x0
  416c50:	10 00 00 22 	l.bf 416cd8 <main+0x7a90>
  416c54:	9c 60 00 16 	l.addi r3,r0,0x16
        {
            menustate = MENU_SETTINGS_MEMORY1;
  416c58:	18 40 00 41 	l.movhi r2,0x41
  416c5c:	a8 42 a3 89 	l.ori r2,r2,0xa389
            menusub = 2;
  416c60:	9c 80 00 02 	l.addi r4,r0,0x2
            }
        }

        if (menu)
        {
            menustate = MENU_SETTINGS_MEMORY1;
  416c64:	d8 02 18 00 	l.sb 0x0(r2),r3
            menusub = 2;
  416c68:	18 40 00 41 	l.movhi r2,0x41
  416c6c:	a8 42 a3 8a 	l.ori r2,r2,0xa38a
  416c70:	00 00 00 1a 	l.j 416cd8 <main+0x7a90>
  416c74:	d8 02 20 00 	l.sb 0x0(r2),r4
        /******************************************************************/
        /* error message menu                                             */
        /******************************************************************/
    case MENU_ERROR :

        if (menu)
  416c78:	bc 0e 00 00 	l.sfeqi r14,0x0
  416c7c:	10 00 00 17 	l.bf 416cd8 <main+0x7a90>
  416c80:	9c a0 00 02 	l.addi r5,r0,0x2
            menustate = MENU_MAIN1;
  416c84:	18 40 00 41 	l.movhi r2,0x41
  416c88:	a8 42 a3 89 	l.ori r2,r2,0xa389
  416c8c:	00 00 00 13 	l.j 416cd8 <main+0x7a90>
  416c90:	d8 02 28 00 	l.sb 0x0(r2),r5
        /******************************************************************/
        /* popup info menu                                                */
        /******************************************************************/
    case MENU_INFO :

        if (menu)
  416c94:	bc 0e 00 00 	l.sfeqi r14,0x0
  416c98:	10 00 00 06 	l.bf 416cb0 <main+0x7a68>
  416c9c:	18 40 00 41 	l.movhi r2,0x41
            menustate = MENU_MAIN1;
  416ca0:	9c c0 00 02 	l.addi r6,r0,0x2
  416ca4:	a8 42 a3 89 	l.ori r2,r2,0xa389
  416ca8:	00 00 00 0c 	l.j 416cd8 <main+0x7a90>
  416cac:	d8 02 30 00 	l.sb 0x0(r2),r6
        else if (CheckTimer(menu_timer))
  416cb0:	18 40 00 41 	l.movhi r2,0x41
  416cb4:	a8 42 fd 28 	l.ori r2,r2,0xfd28
  416cb8:	07 ff a8 a2 	l.jal 400f40 <CheckTimer>
  416cbc:	84 62 00 00 	l.lwz r3,0x0(r2)
  416cc0:	bc 0b 00 00 	l.sfeqi r11,0x0
  416cc4:	10 00 00 05 	l.bf 416cd8 <main+0x7a90>
  416cc8:	15 00 00 00 	l.nop 0x0
            menustate = MENU_NONE1;
  416ccc:	18 40 00 41 	l.movhi r2,0x41
  416cd0:	a8 42 a3 89 	l.ori r2,r2,0xa389
  416cd4:	d8 02 70 00 	l.sb 0x0(r2),r14

  // main loop
  while (1) {
    HandleFpga();
    HandleUI();
    HandleSerial();
  416cd8:	07 ff d6 14 	l.jal 40c528 <HandleSerial>
  416cdc:	15 00 00 00 	l.nop 0x0
  416ce0:	03 ff ec 3c 	l.j 411dd0 <main+0x2b88>
  416ce4:	15 00 00 00 	l.nop 0x0
                        len -= 4; // remove extension

                info = GetDiskInfo(lfn, len); // extract disk number info

                if (info != NULL)
                   memcpy(DirEntryInfo[i], info, 5); // copy disk number info if present
  416ce8:	18 80 00 41 	l.movhi r4,0x41
  416cec:	a8 78 00 00 	l.ori r3,r24,0x0
  416cf0:	a8 84 a3 40 	l.ori r4,r4,0xa340
  416cf4:	9c a0 00 05 	l.addi r5,r0,0x5
  416cf8:	07 ff a5 62 	l.jal 400280 <memcpy>
  416cfc:	1a c0 00 41 	l.movhi r22,0x41
  416d00:	03 ff f4 0a 	l.j 413d28 <main+0x4ae0>
  416d04:	aa d6 a3 40 	l.ori r22,r22,0xa340

Disassembly of section .rodata:

00416d08 <config_filter_msg.22573-0x164>:
  416d08:	00 40 04 58 	l.j 1417e68 <__stack+0xf97e6c>
  416d0c:	00 40 04 80 	l.j 1417f0c <__stack+0xf97f10>
  416d10:	00 40 04 d4 	l.j 1418060 <__stack+0xf98064>
  416d14:	00 40 05 38 	l.j 14181f4 <__stack+0xf981f8>
  416d18:	00 40 05 84 	l.j 1418328 <__stack+0xf9832c>
  416d1c:	00 40 04 bc 	l.j 141800c <__stack+0xf98010>
  416d20:	00 40 0e 84 	l.j 141a730 <__stack+0xf9a734>
  416d24:	00 40 0e 84 	l.j 141a734 <__stack+0xf9a738>
  416d28:	00 40 04 c4 	l.j 1418038 <__stack+0xf9803c>
  416d2c:	00 40 0e 84 	l.j 141a73c <__stack+0xf9a740>
  416d30:	00 40 0e 84 	l.j 141a740 <__stack+0xf9a744>
  416d34:	00 40 0e 84 	l.j 141a744 <__stack+0xf9a748>
  416d38:	00 40 04 b4 	l.j 1418008 <__stack+0xf9800c>
  416d3c:	00 40 0e 84 	l.j 141a74c <__stack+0xf9a750>
  416d40:	00 40 0e 84 	l.j 141a750 <__stack+0xf9a754>
  416d44:	00 40 0e 84 	l.j 141a754 <__stack+0xf9a758>
  416d48:	00 40 04 ac 	l.j 1417ff8 <__stack+0xf97ffc>
  416d4c:	00 40 0e 84 	l.j 141a75c <__stack+0xf9a760>
  416d50:	00 40 05 1c 	l.j 14181c0 <__stack+0xf981c4>
  416d54:	00 40 0e 84 	l.j 141a764 <__stack+0xf9a768>
  416d58:	00 40 0e 84 	l.j 141a768 <__stack+0xf9a76c>
  416d5c:	00 40 04 cc 	l.j 141808c <__stack+0xf98090>
  416d60:	00 40 cc c0 	l.j 144a060 <__stack+0xfca064>
  416d64:	00 40 cc e0 	l.j 144a0e4 <__stack+0xfca0e8>
  416d68:	00 40 cd 04 	l.j 144a178 <__stack+0xfca17c>
  416d6c:	00 40 cd 28 	l.j 144a20c <__stack+0xfca210>
  416d70:	00 40 cd 64 	l.j 144a300 <__stack+0xfca304>
  416d74:	00 41 25 24 	l.j 1460204 <__stack+0xfe0208>
  416d78:	00 41 25 80 	l.j 1460378 <__stack+0xfe037c>
  416d7c:	00 41 26 a8 	l.j 146081c <__stack+0xfe0820>
  416d80:	00 41 29 68 	l.j 1461320 <__stack+0xfe1324>
  416d84:	00 41 31 d8 	l.j 14634e4 <__stack+0xfe34e8>
  416d88:	00 41 33 18 	l.j 14639e8 <__stack+0xfe39ec>
  416d8c:	00 41 34 1c 	l.j 1463dfc <__stack+0xfe3e00>
  416d90:	00 41 35 b0 	l.j 1464450 <__stack+0xfe4454>
  416d94:	00 41 3a 9c 	l.j 1465804 <__stack+0xfe5808>
  416d98:	00 41 3e f0 	l.j 1466958 <__stack+0xfe695c>
  416d9c:	00 41 2b bc 	l.j 1461c8c <__stack+0xfe1c90>
  416da0:	00 41 46 24 	l.j 1468630 <__stack+0xfe8634>
  416da4:	00 41 47 50 	l.j 1468ae4 <__stack+0xfe8ae8>
  416da8:	00 41 47 d4 	l.j 1468cf8 <__stack+0xfe8cfc>
  416dac:	00 41 48 fc 	l.j 146919c <__stack+0xfe91a0>
  416db0:	00 41 6c d8 	l.j 1472110 <__stack+0xff2114>
  416db4:	00 41 6c d8 	l.j 1472114 <__stack+0xff2118>
  416db8:	00 41 67 c4 	l.j 1470cc8 <__stack+0xff0ccc>
  416dbc:	00 41 67 e4 	l.j 1470d4c <__stack+0xff0d50>
  416dc0:	00 41 69 00 	l.j 14711c0 <__stack+0xff11c4>
  416dc4:	00 41 64 58 	l.j 146ff24 <__stack+0xfeff28>
  416dc8:	00 41 66 44 	l.j 14706d8 <__stack+0xff06dc>
  416dcc:	00 41 51 e0 	l.j 146b54c <__stack+0xfeb550>
  416dd0:	00 41 54 5c 	l.j 146bf40 <__stack+0xfebf44>
  416dd4:	00 41 4d a0 	l.j 146a454 <__stack+0xfea458>
  416dd8:	00 41 4f 80 	l.j 146abd8 <__stack+0xfeabdc>
  416ddc:	00 41 6c d8 	l.j 147213c <__stack+0xff2140>
  416de0:	00 41 6c d8 	l.j 1472140 <__stack+0xff2144>
  416de4:	00 41 56 6c 	l.j 146c794 <__stack+0xfec798>
  416de8:	00 41 5a d4 	l.j 146d938 <__stack+0xfed93c>
  416dec:	00 41 6c d8 	l.j 147214c <__stack+0xff2150>
  416df0:	00 41 6c d8 	l.j 1472150 <__stack+0xff2154>
  416df4:	00 41 5c 70 	l.j 146dfb4 <__stack+0xfedfb8>
  416df8:	00 41 5e ac 	l.j 146e8a8 <__stack+0xfee8ac>
  416dfc:	00 41 5f 38 	l.j 146eadc <__stack+0xfeeae0>
  416e00:	00 41 60 54 	l.j 146ef50 <__stack+0xfeef54>
  416e04:	00 41 61 f8 	l.j 146f5e4 <__stack+0xfef5e8>
  416e08:	00 41 64 20 	l.j 146fe88 <__stack+0xfefe8c>
  416e0c:	00 41 63 0c 	l.j 146fa3c <__stack+0xfefa40>
  416e10:	00 41 6c d8 	l.j 1472170 <__stack+0xff2174>
  416e14:	00 41 2f 2c 	l.j 1462ac4 <__stack+0xfe2ac8>
  416e18:	00 41 30 84 	l.j 1463028 <__stack+0xfe302c>
  416e1c:	00 41 37 58 	l.j 1464b7c <__stack+0xfe4b80>
  416e20:	00 41 39 e4 	l.j 14655b0 <__stack+0xfe55b4>
  416e24:	00 41 49 b8 	l.j 1469504 <__stack+0xfe9508>
  416e28:	00 41 4b 04 	l.j 1469a38 <__stack+0xfe9a3c>
  416e2c:	00 41 6c d8 	l.j 147218c <__stack+0xff2190>
  416e30:	00 41 6c d8 	l.j 1472190 <__stack+0xff2194>
  416e34:	00 41 6c d8 	l.j 1472194 <__stack+0xff2198>
  416e38:	00 41 6c d8 	l.j 1472198 <__stack+0xff219c>
  416e3c:	00 41 6c d8 	l.j 147219c <__stack+0xff21a0>
  416e40:	00 41 6c d8 	l.j 14721a0 <__stack+0xff21a4>
  416e44:	00 41 6c d8 	l.j 14721a4 <__stack+0xff21a8>
  416e48:	00 41 6c d8 	l.j 14721a8 <__stack+0xff21ac>
  416e4c:	00 41 6c d8 	l.j 14721ac <__stack+0xff21b0>
  416e50:	00 41 6c d8 	l.j 14721b0 <__stack+0xff21b4>
  416e54:	00 41 6c d8 	l.j 14721b4 <__stack+0xff21b8>
  416e58:	00 41 6c d8 	l.j 14721b8 <__stack+0xff21bc>
  416e5c:	00 41 6c d8 	l.j 14721bc <__stack+0xff21c0>
  416e60:	00 41 6c d8 	l.j 14721c0 <__stack+0xff21c4>
  416e64:	00 41 6c 78 	l.j 1472044 <__stack+0xff2048>
  416e68:	00 41 6c 94 	l.j 14720b8 <__stack+0xff20bc>

00416e6c <config_filter_msg.22573>:
  416e6c:	00 41 99 e2 	l.j 147d5f4 <__stack+0xffd5f8>
  416e70:	00 41 99 e7 	l.j 147d60c <__stack+0xffd610>
  416e74:	00 41 99 f2 	l.j 147d63c <__stack+0xffd640>
  416e78:	00 41 99 fb 	l.j 147d664 <__stack+0xffd668>

00416e7c <config_memory_chip_msg.22574>:
  416e7c:	00 41 99 ff 	l.j 147d678 <__stack+0xffd67c>
  416e80:	00 41 9a 06 	l.j 147d698 <__stack+0xffd69c>
  416e84:	00 41 9a 0d 	l.j 147d6b8 <__stack+0xffd6bc>
  416e88:	00 41 9a 14 	l.j 147d6d8 <__stack+0xffd6dc>

00416e8c <config_memory_slow_msg.22575>:
  416e8c:	00 41 9a 1b 	l.j 147d6f8 <__stack+0xffd6fc>
  416e90:	00 41 99 ff 	l.j 147d68c <__stack+0xffd690>
  416e94:	00 41 9a 06 	l.j 147d6ac <__stack+0xffd6b0>
  416e98:	00 41 9a 0d 	l.j 147d6cc <__stack+0xffd6d0>

00416e9c <config_scanlines_msg.39698>:
  416e9c:	00 41 89 b1 	l.j 1479560 <__stack+0xff9564>
  416ea0:	00 41 9a 22 	l.j 147d728 <__stack+0xffd72c>
  416ea4:	00 41 9a 26 	l.j 147d73c <__stack+0xffd740>

00416ea8 <config_memory_fast_msg.22576>:
  416ea8:	00 41 9a 1b 	l.j 147d714 <__stack+0xffd718>
  416eac:	00 41 9a 14 	l.j 147d6fc <__stack+0xffd700>
  416eb0:	00 41 9a 2c 	l.j 147d760 <__stack+0xffd764>
  416eb4:	00 41 9a 33 	l.j 147d780 <__stack+0xffd784>

00416eb8 <config_cpu_msg.39700>:
  416eb8:	00 41 9a 3a 	l.j 147d7a0 <__stack+0xffd7a4>
  416ebc:	00 41 9a 41 	l.j 147d7c0 <__stack+0xffd7c4>
  416ec0:	00 41 9a 47 	l.j 147d7dc <__stack+0xffd7e0>
  416ec4:	00 41 9a 4d 	l.j 147d7f8 <__stack+0xffd7fc>

00416ec8 <config_hdf_msg.39701>:
  416ec8:	00 41 9a 53 	l.j 147d814 <__stack+0xffd818>
  416ecc:	00 41 9a 5c 	l.j 147d83c <__stack+0xffd840>
  416ed0:	00 41 9a 70 	l.j 147d890 <__stack+0xffd894>
  416ed4:	00 41 9a 7c 	l.j 147d8c4 <__stack+0xffd8c8>
  416ed8:	00 41 9a 8f 	l.j 147d914 <__stack+0xffd918>
  416edc:	00 41 9a a2 	l.j 147d964 <__stack+0xffd968>
  416ee0:	00 41 9a b5 	l.j 147d9b4 <__stack+0xffd9b8>

00416ee4 <config_chipset_msg.39702>:
  416ee4:	00 41 9a c8 	l.j 147da04 <__stack+0xffda08>
  416ee8:	00 41 9a d1 	l.j 147da2c <__stack+0xffda30>
  416eec:	00 41 9a db 	l.j 147da58 <__stack+0xffda5c>
  416ef0:	00 41 9a 49 	l.j 147d814 <__stack+0xffd818>
  416ef4:	00 41 9a 49 	l.j 147d818 <__stack+0xffd81c>
  416ef8:	00 41 9a 49 	l.j 147d81c <__stack+0xffd820>
  416efc:	00 41 9a df 	l.j 147da78 <__stack+0xffda7c>
  416f00:	00 41 9a 49 	l.j 147d824 <__stack+0xffd828>

00416f04 <config_autofire_msg.39703>:
  416f04:	00 41 9a e3 	l.j 147da90 <__stack+0xffda94>
  416f08:	00 41 9a f8 	l.j 147dae8 <__stack+0xffdaec>
  416f0c:	00 41 9b 0e 	l.j 147db44 <__stack+0xffdb48>
  416f10:	00 41 9b 26 	l.j 147dba8 <__stack+0xffdbac>

00416f14 <logodata.44464>:
	...
  416f88:	00 80 80 c0 	l.j 2437288 <__stack+0x1fb728c>
  416f8c:	c0 e0 e0 e0 	l.mtspr r0,r28,0x38e0
  416f90:	e0 e0 e0 c0 	l.add r7,r0,r28
  416f94:	c0 80 80 00 	l.mtspr r0,r16,0x2000
	...
  416ff8:	00 00 03 03 	l.j 417c04 <lcdigits.16665+0x4d0>
  416ffc:	03 03 03 03 	l.j fc4d7c08 <__stack+0xfc057c0c>
  417000:	03 03 03 03 	l.j fc4d7c0c <__stack+0xfc057c10>
  417004:	03 03 03 03 	l.j fc4d7c10 <__stack+0xfc057c14>
  417008:	83 83 83 83 	l.ld r28,0xffff8383(r3)
  41700c:	83 83 83 83 	l.ld r28,0xffff8383(r3)
  417010:	83 03 03 03 	l.ld r24,0x303(r3)
  417014:	03 03 03 03 	l.j fc4d7c20 <__stack+0xfc057c24>
  417018:	03 03 03 03 	l.j fc4d7c24 <__stack+0xfc057c28>
  41701c:	03 03 03 03 	l.j fc4d7c28 <__stack+0xfc057c2c>
  417020:	03 03 83 83 	l.j fc4f7e2c <__stack+0xfc077e30>
  417024:	83 83 83 83 	l.ld r28,0xffff8383(r3)
  417028:	83 83 83 03 	l.ld r28,0xffff8303(r3)
  41702c:	03 03 03 03 	l.j fc4d7c38 <__stack+0xfc057c3c>
  417030:	03 03 03 83 	l.j fc4d7e3c <__stack+0xfc057e40>
  417034:	83 83 83 83 	l.ld r28,0xffff8383(r3)
  417038:	83 83 83 83 	l.ld r28,0xffff8383(r3)
  41703c:	83 83 83 03 	l.ld r28,0xffff8303(r3)
  417040:	03 03 03 03 	l.j fc4d7c4c <__stack+0xfc057c50>
  417044:	03 03 83 83 	l.j fc4f7e50 <__stack+0xfc077e54>
  417048:	83 83 83 83 	l.ld r28,0xffff8383(r3)
  41704c:	83 83 83 03 	l.ld r28,0xffff8303(r3)
  417050:	03 03 03 03 	l.j fc4d7c5c <__stack+0xfc057c60>
  417054:	03 03 03 03 	l.j fc4d7c60 <__stack+0xfc057c64>
  417058:	03 03 03 03 	l.j fc4d7c64 <__stack+0xfc057c68>
  41705c:	83 83 83 83 	l.ld r28,0xffff8383(r3)
  417060:	83 83 83 03 	l.ld r28,0xffff8303(r3)
  417064:	03 03 03 03 	l.j fc4d7c70 <__stack+0xfc057c74>
  417068:	00 00 80 83 	l.j 437274 <_stack+0x155b4>
  41706c:	87 87 8f 8f 	l.lwz r28,0xffff8f8f(r7)
  417070:	9f 9f 9f 9f 	l.addi r28,r31,0xffff9f9f
  417074:	9f 9f 0f 0f 	l.addi r28,r31,0xf0f
  417078:	07 07 03 00 	l.jal fc5d7c78 <__stack+0xfc157c7c>
  41707c:	00 00 83 83 	l.j 437e88 <_stack+0x161c8>
  417080:	83 83 83 83 	l.ld r28,0xffff8383(r3)
  417084:	83 83 83 03 	l.ld r28,0xffff8303(r3)
  417088:	03 03 03 03 	l.j fc4d7c94 <__stack+0xfc057c98>
  41708c:	03 03 03 03 	l.j fc4d7c98 <__stack+0xfc057c9c>
  417090:	03 03 03 03 	l.j fc4d7c9c <__stack+0xfc057ca0>
  417094:	03 03 03 03 	l.j fc4d7ca0 <__stack+0xfc057ca4>
  417098:	83 83 83 83 	l.ld r28,0xffff8383(r3)
  41709c:	83 83 83 83 	l.ld r28,0xffff8383(r3)
  4170a0:	83 03 03 03 	l.ld r24,0x303(r3)
  4170a4:	03 03 03 03 	l.j fc4d7cb0 <__stack+0xfc057cb4>
  4170a8:	03 03 83 83 	l.j fc4f7eb4 <__stack+0xfc077eb8>
  4170ac:	83 83 83 83 	l.ld r28,0xffff8383(r3)
  4170b0:	83 83 83 83 	l.ld r28,0xffff8383(r3)
  4170b4:	83 03 03 03 	l.ld r24,0x303(r3)
  4170b8:	03 03 03 03 	l.j fc4d7cc4 <__stack+0xfc057cc8>
  4170bc:	03 03 03 03 	l.j fc4d7cc8 <__stack+0xfc057ccc>
  4170c0:	03 03 03 03 	l.j fc4d7ccc <__stack+0xfc057cd0>
  4170c4:	03 83 83 83 	l.j fe4f7ed0 <__stack+0xfe077ed4>
  4170c8:	83 83 83 83 	l.ld r28,0xffff8383(r3)
  4170cc:	83 83 83 83 	l.ld r28,0xffff8383(r3)
  4170d0:	83 83 83 03 	l.ld r28,0xffff8303(r3)
  4170d4:	03 03 83 83 	l.j fc4f7ee0 <__stack+0xfc077ee4>
  4170d8:	03 03 00 00 	l.j fc4d70d8 <__stack+0xfc0570dc>
	...
  4170e4:	00 00 00 80 	l.j 4172e4 <logodata.44464+0x3d0>
  4170e8:	c0 f0 7c 1e 	l.mtspr r16,r15,0x3c1e
  4170ec:	07 03 ff ff 	l.jal fc5170e8 <__stack+0xfc0970ec>
  4170f0:	ff ff ff ff 	l.cust8 
  4170f4:	fc c0 00 00 	l.cust8 
  4170f8:	00 80 80 c0 	l.j 24373f8 <__stack+0x1fb73fc>
  4170fc:	60 20 30 18 	.word 0x60203018
  417100:	8c c4 f6 fb 	l.lbz r6,0xfffff6fb(r4)
  417104:	ff ff ff ff 	l.cust8 
  417108:	7f 1f 07 01 	l.cust4 
  41710c:	00 00 00 00 	l.j 41710c <logodata.44464+0x1f8>
  417110:	00 00 00 80 	l.j 417310 <logodata.44464+0x3fc>
  417114:	e0 f0 fc ff 	l.ff1 r7,r16
  417118:	ff ff ff 3f 	l.cust8 
  41711c:	1f 07 01 00 	.word 0x1f070100
  417120:	00 00 00 00 	l.j 417120 <logodata.44464+0x20c>
  417124:	00 00 80 e0 	l.j 4374a4 <_stack+0x157e4>
  417128:	f0 3c 0e 07 	l.cust5 r1,r28,r1,0x30,0x7
  41712c:	03 07 07 0f 	l.j fc5d8d68 <__stack+0xfc158d6c>
  417130:	1f 3f 7f fe 	.word 0x1f3f7ffe
  417134:	fc f8 f0 e0 	l.cust8 
  417138:	c0 80 00 00 	l.mtspr r0,r0,0x2000
  41713c:	00 c0 f0 38 	l.j 345321c <__stack+0x2fd3220>
  417140:	1e 07 03 01 	.word 0x1e070301
  417144:	00 00 00 00 	l.j 417144 <logodata.44464+0x230>
  417148:	00 00 80 e0 	l.j 4374c8 <_stack+0x15808>
  41714c:	f0 fc ff ff 	l.cust5 r7,r28,r31,0x3f,0x1f
  417150:	ff ff 3f 1f 	l.cust8 
  417154:	07 01 00 00 	l.jal fc457154 <__stack+0xfbfd7158>
  417158:	00 00 00 00 	l.j 417158 <logodata.44464+0x244>
  41715c:	00 80 c0 f0 	l.j 244751c <__stack+0x1fc7520>
  417160:	7c 1e 07 03 	l.cust4 
  417164:	ff ff ff ff 	l.cust8 
  417168:	ff ff fc c0 	l.cust8 
  41716c:	00 00 00 80 	l.j 41736c <logodata.44464+0x458>
  417170:	80 c0 60 20 	l.ld r6,0x6020(r0)
  417174:	30 18 8c c4 	.word 0x30188cc4
  417178:	f6 fb ff ff 	l.cust6 
  41717c:	ff ff 7f 1f 	l.cust8 
  417180:	07 01 00 00 	l.jal fc457180 <__stack+0xfbfd7184>
  417184:	00 00 00 00 	l.j 417184 <logodata.44464+0x270>
  417188:	00 80 c0 f0 	l.j 2447548 <__stack+0x1fc754c>
  41718c:	f8 fe ff ff 	l.cust7 
  417190:	ff 7f 1f 07 	l.cust8 
  417194:	01 00 00 00 	l.j 4417194 <__stack+0x3f97198>
  417198:	00 00 e0 f0 	l.j 44f558 <_stack+0x2d898>
  41719c:	f8 fc fc fe 	l.cust7 
  4171a0:	fe fe 3e 1f 	l.cust8 
  4171a4:	0f 07 07 03 	l.bnf fc5d8db0 <__stack+0xfc158db4>
  4171a8:	03 01 01 41 	l.j fc4576ac <__stack+0xfbfd76b0>
  4171ac:	41 40 40 c0 	.word 0x414040c0
  4171b0:	c0 c0 c0 c1 	l.mtspr r0,r24,0x30c1
  4171b4:	c1 c1 c3 47 	l.mtspr r1,r24,0x7347
  4171b8:	47 43 00 00 	l.jr r0
  4171bc:	00 00 00 00 	l.j 4171bc <logodata.44464+0x2a8>
  4171c0:	00 00 20 20 	l.j 41f240 <df.28704+0x138>
  4171c4:	20 20 30 30 	.word 0x20203030
  4171c8:	38 3e 2f 23 	.word 0x383e2f23
  4171cc:	20 20 00 00 	.word 0x20200000
  4171d0:	00 00 0f 3f 	l.j 41aecc <hdf.22483+0x5d4>
  4171d4:	3f 1f 1f 0f 	.word 0x3f1f1f0f
  4171d8:	07 06 03 21 	l.jal fc597e5c <__stack+0xfc117e60>
  4171dc:	21 20 20 20 	.word 0x21202020
  4171e0:	30 38 3e 3f 	.word 0x30383e3f
  4171e4:	3f 3f 3f 3f 	.word 0x3f3f3f3f
  4171e8:	3f 27 21 20 	.word 0x3f272120
  4171ec:	00 00 20 20 	l.j 41f26c <df.28704+0x164>
  4171f0:	20 20 30 38 	.word 0x20203038
  4171f4:	3c 3f 3f 3f 	.word 0x3c3f3f3f
  4171f8:	3f 3f 3f 27 	.word 0x3f3f3f27
  4171fc:	21 20 20 00 	.word 0x21202000
  417200:	00 20 20 20 	l.j c1f280 <__stack+0x79f284>
  417204:	20 30 38 3c 	.word 0x2030383c
  417208:	3f 27 21 20 	.word 0x3f272120
  41720c:	20 00 00 00 	l.sys 0x0
  417210:	00 00 00 00 	l.j 417210 <logodata.44464+0x2fc>
  417214:	00 00 00 01 	l.j 417218 <logodata.44464+0x304>
  417218:	03 07 0f 1f 	l.j fc5dae94 <__stack+0xfc15ae98>
  41721c:	3f 3f 1e 07 	.word 0x3f3f1e07
  417220:	03 00 00 00 	l.j fc417220 <__stack+0xfbf97224>
  417224:	00 20 20 20 	l.j c1f2a4 <__stack+0x79f2a8>
  417228:	20 30 38 3c 	.word 0x2030383c
  41722c:	3f 3f 3f 3f 	.word 0x3f3f3f3f
  417230:	3f 3f 27 21 	.word 0x3f3f2721
  417234:	20 20 00 00 	.word 0x20200000
  417238:	20 20 20 20 	.word 0x20202020
  41723c:	30 30 38 3e 	.word 0x3030383e
  417240:	2f 23 20 20 	.word 0x2f232020
  417244:	00 00 00 00 	l.j 417244 <logodata.44464+0x330>
  417248:	0f 3f 3f 1f 	l.bnf fd3e6ec4 <__stack+0xfcf66ec8>
  41724c:	1f 0f 07 06 	.word 0x1f0f0706
  417250:	03 21 21 20 	l.j fcc5f6d0 <__stack+0xfc7df6d4>
  417254:	20 20 30 38 	.word 0x20203038
  417258:	3e 3f 3f 3f 	.word 0x3e3f3f3f
  41725c:	3f 3f 3f 27 	.word 0x3f3f3f27
  417260:	21 20 00 00 	.word 0x21200000
  417264:	20 20 20 20 	.word 0x20202020
  417268:	20 30 38 3e 	.word 0x2030383e
  41726c:	3f 3f 3f 3f 	.word 0x3f3f3f3f
  417270:	3f 3f 27 21 	.word 0x3f3f2721
  417274:	20 00 00 00 	l.sys 0x0
  417278:	00 00 00 00 	l.j 417278 <logodata.44464+0x364>
  41727c:	00 03 07 0f 	l.j 4d8eb8 <__stack+0x58ebc>
  417280:	0f 1f 1f 1f 	l.bnf fcbdeefc <__stack+0xfc75ef00>
  417284:	3f 38 38 30 	.word 0x3f383830
  417288:	30 20 20 20 	.word 0x30202020
  41728c:	20 20 30 38 	.word 0x20203038
  417290:	3c 3f 3f 3f 	.word 0x3c3f3f3f
  417294:	1f 1f 0f 07 	.word 0x1f1f0f07
  417298:	01 00 00 00 	l.j 4417298 <__stack+0x3f9729c>
  41729c:	00 00 00 00 	l.j 41729c <logodata.44464+0x388>
  4172a0:	00 00 00 18 	l.j 417300 <logodata.44464+0x3ec>
  4172a4:	18 18 18 18 	l.movhi r0,0x1818
  4172a8:	18 18 18 18 	l.movhi r0,0x1818
  4172ac:	18 18 18 18 	l.movhi r0,0x1818
  4172b0:	18 18 18 18 	l.movhi r0,0x1818
  4172b4:	18 18 18 18 	l.movhi r0,0x1818
  4172b8:	18 18 18 18 	l.movhi r0,0x1818
  4172bc:	18 18 18 18 	l.movhi r0,0x1818
  4172c0:	18 18 18 18 	l.movhi r0,0x1818
  4172c4:	18 18 18 18 	l.movhi r0,0x1818
  4172c8:	18 18 18 18 	l.movhi r0,0x1818
  4172cc:	18 18 18 18 	l.movhi r0,0x1818
  4172d0:	18 18 18 18 	l.movhi r0,0x1818
  4172d4:	18 18 18 18 	l.movhi r0,0x1818
  4172d8:	18 18 18 18 	l.movhi r0,0x1818
  4172dc:	18 18 18 18 	l.movhi r0,0x1818
  4172e0:	18 18 18 18 	l.movhi r0,0x1818
  4172e4:	18 18 18 18 	l.movhi r0,0x1818
  4172e8:	18 18 18 18 	l.movhi r0,0x1818
  4172ec:	18 18 18 18 	l.movhi r0,0x1818
  4172f0:	18 18 18 18 	l.movhi r0,0x1818
  4172f4:	18 18 18 18 	l.movhi r0,0x1818
  4172f8:	18 18 18 18 	l.movhi r0,0x1818
  4172fc:	18 18 18 18 	l.movhi r0,0x1818
  417300:	18 18 18 18 	l.movhi r0,0x1818
  417304:	18 18 18 18 	l.movhi r0,0x1818
  417308:	18 18 18 18 	l.movhi r0,0x1818
  41730c:	18 18 18 18 	l.movhi r0,0x1818
  417310:	18 18 18 18 	l.movhi r0,0x1818
  417314:	18 18 18 18 	l.movhi r0,0x1818
  417318:	18 18 18 18 	l.movhi r0,0x1818
  41731c:	18 18 18 18 	l.movhi r0,0x1818
  417320:	18 18 18 18 	l.movhi r0,0x1818
  417324:	18 18 18 18 	l.movhi r0,0x1818
  417328:	18 18 18 18 	l.movhi r0,0x1818
  41732c:	18 18 18 18 	l.movhi r0,0x1818
  417330:	18 18 18 18 	l.movhi r0,0x1818
  417334:	18 18 18 18 	l.movhi r0,0x1818
  417338:	18 18 18 18 	l.movhi r0,0x1818
  41733c:	18 18 18 18 	l.movhi r0,0x1818
  417340:	18 18 18 18 	l.movhi r0,0x1818
  417344:	18 18 18 18 	l.movhi r0,0x1818
  417348:	18 18 18 18 	l.movhi r0,0x1818
  41734c:	18 18 18 18 	l.movhi r0,0x1818
  417350:	18 18 18 18 	l.movhi r0,0x1818
  417354:	18 18 18 18 	l.movhi r0,0x1818
  417358:	18 18 18 18 	l.movhi r0,0x1818
  41735c:	18 18 18 18 	l.movhi r0,0x1818
  417360:	18 18 18 18 	l.movhi r0,0x1818
  417364:	18 18 18 18 	l.movhi r0,0x1818
  417368:	18 18 18 18 	l.movhi r0,0x1818
  41736c:	18 18 18 18 	l.movhi r0,0x1818
  417370:	18 18 18 18 	l.movhi r0,0x1818
  417374:	18 18 18 18 	l.movhi r0,0x1818
  417378:	18 18 18 18 	l.movhi r0,0x1818
  41737c:	18 18 18 18 	l.movhi r0,0x1818
  417380:	18 18 18 00 	l.movhi r0,0x1800

00417384 <keycode_table.44651>:
  417384:	00 31 32 33 	l.j 1063c50 <__stack+0xbe3c54>
  417388:	34 35 36 37 	.word 0x34353637
  41738c:	38 39 30 00 	.word 0x38393000
  417390:	00 00 00 00 	l.j 417390 <keycode_table.44651+0xc>
  417394:	51 57 45 52 	.word 0x51574552
  417398:	54 59 55 49 	.word 0x54595549
  41739c:	4f 50 00 00 	l.maci r16,0x0
  4173a0:	00 00 00 00 	l.j 4173a0 <keycode_table.44651+0x1c>
  4173a4:	41 53 44 46 	.word 0x41534446
  4173a8:	47 48 4a 4b 	l.jr r9
  4173ac:	4c 00 00 00 	l.maci r0,0x0
  4173b0:	00 00 00 00 	l.j 4173b0 <keycode_table.44651+0x2c>
  4173b4:	00 5a 58 43 	l.j 1aad4c0 <__stack+0x162d4c4>
  4173b8:	56 42 4e 4d 	.word 0x56424e4d
	...

00417404 <C.834.54175>:
  417404:	00 00 00 3f 	l.j 417500 <boot_font.21009+0xe0>
  417408:	00 00 00 7f 	l.j 417604 <boot_font.21009+0x1e4>
  41740c:	00 00 00 ff 	l.j 417808 <lcdigits.16665+0xd4>
  417410:	ff ff ff ff 	l.cust8 

00417414 <config_id.23835>:
  417414:	4d 4e 4d 47 	l.maci r14,0x4d47
  417418:	43 46 47 30 	.word 0x43464730
  41741c:	00 00 00 00 	l.j 41741c <config_id.23835+0x8>

00417420 <boot_font.21009>:
	...
  417428:	18 18 18 18 	l.movhi r0,0x1818
  41742c:	18 00 18 00 	l.movhi r0,0x1800
  417430:	6c 6c 00 00 	.word 0x6c6c0000
  417434:	00 00 00 00 	l.j 417434 <boot_font.21009+0x14>
  417438:	6c 6c fe 6c 	.word 0x6c6cfe6c
  41743c:	fe 6c 6c 00 	l.cust8 
  417440:	18 3e 60 3c 	l.movhi r1,0x603c
  417444:	06 7c 18 00 	l.jal fa31d444 <__stack+0xf9e9d448>
  417448:	00 66 ac d8 	l.j 1dc27a8 <__stack+0x19427ac>
  41744c:	36 6a cc 00 	.word 0x366acc00
  417450:	38 6c 68 76 	.word 0x386c6876
  417454:	dc ce 7b 00 	l.sh 0x3300(r14),r15
  417458:	18 18 30 00 	l.movhi r0,0x3000
  41745c:	00 00 00 00 	l.j 41745c <boot_font.21009+0x3c>
  417460:	0c 18 30 30 	l.bnf a23520 <__stack+0x5a3524>
  417464:	30 18 0c 00 	.word 0x30180c00
  417468:	30 18 0c 0c 	.word 0x30180c0c
  41746c:	0c 18 30 00 	l.bnf a2346c <__stack+0x5a3470>
  417470:	00 66 3c ff 	l.j 1da686c <__stack+0x1926870>
  417474:	3c 66 00 00 	.word 0x3c660000
  417478:	00 18 18 7e 	l.j a1d670 <__stack+0x59d674>
  41747c:	18 18 00 00 	l.movhi r0,0x0
  417480:	00 00 00 00 	l.j 417480 <boot_font.21009+0x60>
  417484:	00 18 18 30 	l.j a1d544 <__stack+0x59d548>
  417488:	00 00 00 7e 	l.j 417680 <boot_font.21009+0x260>
	...
  417494:	00 18 18 00 	l.j a1d494 <__stack+0x59d498>
  417498:	03 06 0c 18 	l.j fc59a4f8 <__stack+0xfc11a4fc>
  41749c:	30 60 c0 00 	.word 0x3060c000
  4174a0:	3c 66 6e 7e 	.word 0x3c666e7e
  4174a4:	76 66 3c 00 	l.cust2 
  4174a8:	18 38 78 18 	l.movhi r1,0x7818
  4174ac:	18 18 18 00 	l.movhi r0,0x1800
  4174b0:	3c 66 06 0c 	.word 0x3c66060c
  4174b4:	18 30 7e 00 	l.movhi r1,0x7e00
  4174b8:	3c 66 06 1c 	.word 0x3c66061c
  4174bc:	06 66 3c 00 	l.jal f9da64bc <__stack+0xf99264c0>
  4174c0:	1c 3c 6c cc 	.word 0x1c3c6ccc
  4174c4:	fe 0c 0c 00 	l.cust8 
  4174c8:	7e 60 7c 06 	l.cust4 
  4174cc:	06 66 3c 00 	l.jal f9da64cc <__stack+0xf99264d0>
  4174d0:	1c 30 60 7c 	.word 0x1c30607c
  4174d4:	66 66 3c 00 	.word 0x66663c00
  4174d8:	7e 06 06 0c 	l.cust4 
  4174dc:	18 18 18 00 	l.movhi r0,0x1800
  4174e0:	3c 66 66 3c 	.word 0x3c66663c
  4174e4:	66 66 3c 00 	.word 0x66663c00
  4174e8:	3c 66 66 3e 	.word 0x3c66663e
  4174ec:	06 0c 38 00 	l.jal f87254ec <__stack+0xf82a54f0>
  4174f0:	00 18 18 00 	l.j a1d4f0 <__stack+0x59d4f4>
  4174f4:	00 18 18 00 	l.j a1d4f4 <__stack+0x59d4f8>
  4174f8:	00 18 18 00 	l.j a1d4f8 <__stack+0x59d4fc>
  4174fc:	00 18 18 30 	l.j a1d5bc <__stack+0x59d5c0>
  417500:	00 06 18 60 	l.j 59d680 <__stack+0x11d684>
  417504:	18 06 00 00 	l.movhi r0,0x0
  417508:	00 00 7e 00 	l.j 436d08 <_stack+0x15048>
  41750c:	7e 00 00 00 	l.cust4 
  417510:	00 60 18 06 	l.j 1c1d528 <__stack+0x179d52c>
  417514:	18 60 00 00 	l.movhi r3,0x0
  417518:	3c 66 06 0c 	.word 0x3c66060c
  41751c:	18 00 18 00 	l.movhi r0,0x1800
  417520:	7c c6 de d6 	l.cust4 
  417524:	de c0 78 00 	l.sh 0xffffb000(r0),r15
  417528:	3c 66 66 7e 	.word 0x3c66667e
  41752c:	66 66 66 00 	.word 0x66666600
  417530:	7c 66 66 7c 	l.cust4 
  417534:	66 66 7c 00 	.word 0x66667c00
  417538:	1e 30 60 60 	.word 0x1e306060
  41753c:	60 30 1e 00 	.word 0x60301e00
  417540:	78 6c 66 66 	l.cust3 
  417544:	66 6c 78 00 	.word 0x666c7800
  417548:	7e 60 60 78 	l.cust4 
  41754c:	60 60 7e 00 	.word 0x60607e00
  417550:	7e 60 60 78 	l.cust4 
  417554:	60 60 60 00 	.word 0x60606000
  417558:	3c 66 60 6e 	.word 0x3c66606e
  41755c:	66 66 3e 00 	.word 0x66663e00
  417560:	66 66 66 7e 	.word 0x6666667e
  417564:	66 66 66 00 	.word 0x66666600
  417568:	3c 18 18 18 	.word 0x3c181818
  41756c:	18 18 3c 00 	l.movhi r0,0x3c00
  417570:	06 06 06 06 	l.jal f8598d88 <__stack+0xf8118d8c>
  417574:	06 66 3c 00 	l.jal f9da6574 <__stack+0xf9926578>
  417578:	c6 cc d8 f0 	.word 0xc6ccd8f0
  41757c:	d8 cc c6 00 	l.sb 0x3600(r12),r24
  417580:	60 60 60 60 	.word 0x60606060
  417584:	60 60 7e 00 	.word 0x60607e00
  417588:	c6 ee fe d6 	.word 0xc6eefed6
  41758c:	c6 c6 c6 00 	.word 0xc6c6c600
  417590:	c6 e6 f6 de 	.word 0xc6e6f6de
  417594:	ce c6 c6 00 	.word 0xcec6c600
  417598:	3c 66 66 66 	.word 0x3c666666
  41759c:	66 66 3c 00 	.word 0x66663c00
  4175a0:	7c 66 66 7c 	l.cust4 
  4175a4:	60 60 60 00 	.word 0x60606000
  4175a8:	78 cc cc cc 	l.cust3 
  4175ac:	cc dc 7e 00 	.word 0xccdc7e00
  4175b0:	7c 66 66 7c 	l.cust4 
  4175b4:	6c 66 66 00 	.word 0x6c666600
  4175b8:	3c 66 70 3c 	.word 0x3c66703c
  4175bc:	0e 66 3c 00 	l.bnf f9da65bc <__stack+0xf99265c0>
  4175c0:	7e 18 18 18 	l.cust4 
  4175c4:	18 18 18 00 	l.movhi r0,0x1800
  4175c8:	66 66 66 66 	.word 0x66666666
  4175cc:	66 66 3c 00 	.word 0x66663c00
  4175d0:	66 66 66 66 	.word 0x66666666
  4175d4:	3c 3c 18 00 	.word 0x3c3c1800
  4175d8:	c6 c6 c6 d6 	.word 0xc6c6c6d6
  4175dc:	fe ee c6 00 	l.cust8 
  4175e0:	c3 66 3c 18 	l.mtspr r6,r7,0xdc18
  4175e4:	3c 66 c3 00 	.word 0x3c66c300
  4175e8:	c3 66 3c 18 	l.mtspr r6,r7,0xdc18
  4175ec:	18 18 18 00 	l.movhi r0,0x1800
  4175f0:	fe 0c 18 30 	l.cust8 
  4175f4:	60 c0 fe 00 	.word 0x60c0fe00
  4175f8:	3c 30 30 30 	.word 0x3c303030
  4175fc:	30 30 3c 00 	.word 0x30303c00
  417600:	c0 60 30 18 	l.mtspr r0,r6,0x1818
  417604:	0c 06 03 00 	l.bnf 598204 <__stack+0x118208>
  417608:	3c 0c 0c 0c 	.word 0x3c0c0c0c
  41760c:	0c 0c 3c 00 	l.bnf 72660c <__stack+0x2a6610>
  417610:	10 38 6c c6 	l.bf 1232928 <__stack+0xdb292c>
	...
  41761c:	00 00 00 fe 	l.j 417a14 <lcdigits.16665+0x2e0>
  417620:	18 18 0c 00 	l.movhi r0,0xc00
  417624:	00 00 00 00 	l.j 417624 <boot_font.21009+0x204>
  417628:	00 00 3c 06 	l.j 426640 <_stack+0x4980>
  41762c:	3e 66 3e 00 	.word 0x3e663e00
  417630:	60 60 7c 66 	.word 0x60607c66
  417634:	66 66 7c 00 	.word 0x66667c00
  417638:	00 00 3c 60 	l.j 4267b8 <_stack+0x4af8>
  41763c:	60 60 3c 00 	.word 0x60603c00
  417640:	06 06 3e 66 	l.jal f85a6fd8 <__stack+0xf8126fdc>
  417644:	66 66 3e 00 	.word 0x66663e00
  417648:	00 00 3c 66 	l.j 4267e0 <_stack+0x4b20>
  41764c:	7e 60 3c 00 	l.cust4 
  417650:	1c 30 7c 30 	.word 0x1c307c30
  417654:	30 30 30 00 	.word 0x30303000
  417658:	00 00 3e 66 	l.j 426ff0 <_stack+0x5330>
  41765c:	66 3e 06 3c 	.word 0x663e063c
  417660:	60 60 7c 66 	.word 0x60607c66
  417664:	66 66 66 00 	.word 0x66666600
  417668:	18 00 18 18 	l.movhi r0,0x1818
  41766c:	18 18 0c 00 	l.movhi r0,0xc00
  417670:	0c 00 0c 0c 	l.bnf 41a6a0 <sector_buffer.20952+0x1c4>
  417674:	0c 0c 0c 78 	l.bnf 71a854 <__stack+0x29a858>
  417678:	60 60 66 6c 	.word 0x6060666c
  41767c:	78 6c 66 00 	l.cust3 
  417680:	18 18 18 18 	l.movhi r0,0x1818
  417684:	18 18 0c 00 	l.movhi r0,0xc00
  417688:	00 00 ec fe 	l.j 452a80 <_stack+0x30dc0>
  41768c:	d6 c6 c6 00 	l.sw 0xffffb600(r6),r24
  417690:	00 00 7c 66 	l.j 436828 <_stack+0x14b68>
  417694:	66 66 66 00 	.word 0x66666600
  417698:	00 00 3c 66 	l.j 426830 <_stack+0x4b70>
  41769c:	66 66 3c 00 	.word 0x66663c00
  4176a0:	00 00 7c 66 	l.j 436838 <_stack+0x14b78>
  4176a4:	66 7c 60 60 	.word 0x667c6060
  4176a8:	00 00 3e 66 	l.j 427040 <_stack+0x5380>
  4176ac:	66 3e 06 06 	.word 0x663e0606
  4176b0:	00 00 7c 66 	l.j 436848 <_stack+0x14b88>
  4176b4:	60 60 60 00 	.word 0x60606000
  4176b8:	00 00 3c 60 	l.j 426838 <_stack+0x4b78>
  4176bc:	3c 06 7c 00 	.word 0x3c067c00
  4176c0:	30 30 7c 30 	.word 0x30307c30
  4176c4:	30 30 1c 00 	.word 0x30301c00
  4176c8:	00 00 66 66 	l.j 431060 <_stack+0xf3a0>
  4176cc:	66 66 3e 00 	.word 0x66663e00
  4176d0:	00 00 66 66 	l.j 431068 <_stack+0xf3a8>
  4176d4:	66 3c 18 00 	.word 0x663c1800
  4176d8:	00 00 c6 c6 	l.j 4491f0 <_stack+0x27530>
  4176dc:	d6 fe 6c 00 	l.sw 0xffffbc00(r30),r13
  4176e0:	00 00 c6 6c 	l.j 449090 <_stack+0x273d0>
  4176e4:	38 6c c6 00 	.word 0x386cc600
  4176e8:	00 00 66 66 	l.j 431080 <_stack+0xf3c0>
  4176ec:	66 3c 18 30 	.word 0x663c1830
  4176f0:	00 00 7e 0c 	l.j 436f20 <_stack+0x15260>
  4176f4:	18 30 7e 00 	l.movhi r1,0x7e00
  4176f8:	0e 18 18 70 	l.bnf f8a1d8b8 <__stack+0xf859d8bc>
  4176fc:	18 18 0e 00 	l.movhi r0,0xe00
  417700:	18 18 18 18 	l.movhi r0,0x1818
  417704:	18 18 18 00 	l.movhi r0,0x1800
  417708:	70 18 18 0e 	l.cust1 
  41770c:	18 18 70 00 	l.movhi r0,0x7000
  417710:	72 9c 00 00 	l.cust1 
  417714:	00 00 00 00 	l.j 417714 <boot_font.21009+0x2f4>
  417718:	fe fe fe fe 	l.cust8 
  41771c:	fe fe fe 00 	l.cust8 

00417720 <ucdigits.16666>:
  417720:	30 31 32 33 	.word 0x30313233
  417724:	34 35 36 37 	.word 0x34353637
  417728:	38 39 41 42 	.word 0x38394142
  41772c:	43 44 45 46 	.word 0x43444546
  417730:	00 00 00 00 	l.j 417730 <ucdigits.16666+0x10>

00417734 <lcdigits.16665>:
  417734:	30 31 32 33 	.word 0x30313233
  417738:	34 35 36 37 	.word 0x34353637
  41773c:	38 39 61 62 	.word 0x38396162
  417740:	63 64 65 66 	.word 0x63646566
  417744:	00 00 00 00 	l.j 417744 <lcdigits.16665+0x10>
  417748:	28 6e 75 6c 	lv.srl.b r3,r14,r14
  41774c:	6c 29 00 4d 	.word 0x6c29004d
  417750:	49 4e 49 4d 	l.jalr r9
  417754:	49 47 20 41 	l.jalr r4
  417758:	52 54 00 4d 	.word 0x5254004d
  41775c:	49 4e 49 4d 	l.jalr r9
  417760:	49 47 20 42 	l.jalr r4
  417764:	41 4c 00 4d 	.word 0x414c004d
  417768:	49 4e 49 4d 	l.jalr r9
  41776c:	49 47 20 43 	l.jalr r4
  417770:	4f 50 00 47 	l.maci r16,0x47
  417774:	65 6e 65 72 	.word 0x656e6572
  417778:	61 74 69 6e 	.word 0x6174696e
  41777c:	67 20 63 68 	.word 0x67206368
  417780:	65 63 6b 73 	.word 0x65636b73
  417784:	75 6d 00 4d 	l.cust2 
  417788:	65 73 73 61 	.word 0x65737361
  41778c:	67 65 00 45 	.word 0x67650045
  417790:	72 72 6f 72 	l.cust1 
  417794:	00 20 20 20 	l.j c1f814 <__stack+0x79f818>
  417798:	20 20 20 20 	.word 0x20202020
  41779c:	20 20 2a 2a 	.word 0x20202a2a
  4177a0:	2a 20 45 52 	.word 0x2a204552
  4177a4:	52 4f 52 20 	.word 0x524f5220
  4177a8:	2a 2a 2a 00 	.word 0x2a2a2a00
  4177ac:	20 20 20 20 	.word 0x20202020
  4177b0:	23 25 64 00 	.word 0x23256400
  4177b4:	4d 49 4e 49 	l.maci r9,0x4e49
  4177b8:	4d 49 47 25 	l.maci r9,0x4725
  4177bc:	64 43 46 47 	.word 0x64434647
  4177c0:	00 4d 49 4e 	l.j 1769cf8 <__stack+0x12e9cfc>
  4177c4:	49 4d 49 47 	l.jalr r9
  4177c8:	20 43 46 47 	.word 0x20434647
  4177cc:	00 43 4d 44 	l.j 14eacdc <__stack+0x106ace0>
  4177d0:	32 34 20 28 	.word 0x32342028
  4177d4:	57 52 49 54 	.word 0x57524954
  4177d8:	45 5f 42 4c 	l.jr r8
  4177dc:	4f 43 4b 29 	l.maci r3,0x4b29
  4177e0:	3a 20 69 6e 	.word 0x3a20696e
  4177e4:	76 61 6c 69 	l.cust2 
  4177e8:	64 20 72 65 	.word 0x64207265
  4177ec:	73 70 6f 6e 	l.cust1 
  4177f0:	73 65 20 30 	l.cust1 
  4177f4:	78 25 30 32 	l.cust3 
  4177f8:	58 20 28 6c 	.word 0x5820286c
  4177fc:	62 61 3d 25 	.word 0x62613d25
  417800:	6c 75 29 0d 	.word 0x6c75290d
  417804:	00 43 4d 44 	l.j 14ead14 <__stack+0x106ad18>
  417808:	32 34 20 28 	.word 0x32342028
  41780c:	57 52 49 54 	.word 0x57524954
  417810:	45 5f 42 4c 	l.jr r8
  417814:	4f 43 4b 29 	l.maci r3,0x4b29
  417818:	3a 20 69 6e 	.word 0x3a20696e
  41781c:	76 61 6c 69 	l.cust2 
  417820:	64 20 73 74 	.word 0x64207374
  417824:	61 74 75 73 	.word 0x61747573
  417828:	20 30 78 25 	.word 0x20307825
  41782c:	30 32 58 20 	.word 0x30325820
  417830:	28 6c 62 61 	lv.pack.h r3,r12,r12
  417834:	3d 25 6c 75 	.word 0x3d256c75
  417838:	29 0d 00 43 	lv.cmp_ge.h r8,r13,r0
  41783c:	4d 44 32 34 	l.maci r4,0x3234
  417840:	20 28 57 52 	.word 0x20285752
  417844:	49 54 45 5f 	l.jalr r8
  417848:	42 4c 4f 43 	.word 0x424c4f43
  41784c:	4b 29 3a 20 	l.jalr r7
  417850:	62 75 73 79 	.word 0x62757379
  417854:	20 77 61 69 	.word 0x20776169
  417858:	74 20 74 69 	l.cust2 
  41785c:	6d 65 6f 75 	.word 0x6d656f75
  417860:	74 21 20 28 	l.cust2 
  417864:	6c 62 61 3d 	.word 0x6c62613d
  417868:	25 6c 75 29 	l.rfe 
  41786c:	0d 00 43 4d 	l.bnf 44285a0 <__stack+0x3fa85a4>
  417870:	44 31 38 20 	l.jr r7
  417874:	28 52 45 41 	lv.cmp_eq.h r2,r18,r8
  417878:	44 5f 4d 55 	l.jr r9
  41787c:	4c 54 49 50 	l.maci r20,0x4950
  417880:	4c 45 5f 42 	l.maci r5,0x5f42
  417884:	4c 4f 43 4b 	l.maci r15,0x434b
  417888:	29 3a 20 69 	lv.sll.b r9,r26,r4
  41788c:	6e 76 61 6c 	.word 0x6e76616c
  417890:	69 64 20 72 	.word 0x69642072
  417894:	65 73 70 6f 	.word 0x6573706f
  417898:	6e 73 65 20 	.word 0x6e736520
  41789c:	30 78 25 30 	.word 0x30782530
  4178a0:	32 58 20 28 	.word 0x32582028
  4178a4:	6c 62 61 3d 	.word 0x6c62613d
  4178a8:	25 75 29 0d 	l.rfe 
  4178ac:	00 43 4d 44 	l.j 14eadbc <__stack+0x106adc0>
  4178b0:	31 38 20 28 	.word 0x31382028
  4178b4:	52 45 41 44 	.word 0x52454144
  4178b8:	5f 4d 55 4c 	.word 0x5f4d554c
  4178bc:	54 49 50 4c 	.word 0x5449504c
  4178c0:	45 5f 42 4c 	l.jr r8
  4178c4:	4f 43 4b 29 	l.maci r3,0x4b29
  4178c8:	3a 20 6e 6f 	.word 0x3a206e6f
  4178cc:	20 64 61 74 	.word 0x20646174
  4178d0:	61 20 74 6f 	.word 0x6120746f
  4178d4:	6b 65 6e 21 	.word 0x6b656e21
  4178d8:	20 28 6c 62 	.word 0x20286c62
  4178dc:	61 3d 25 75 	.word 0x613d2575
  4178e0:	29 0d 00 43 	lv.cmp_ge.h r8,r13,r0
  4178e4:	4d 44 31 32 	l.maci r4,0x3132
  4178e8:	20 28 53 54 	.word 0x20285354
  4178ec:	4f 50 5f 54 	l.maci r16,0x5f54
  4178f0:	52 41 4e 53 	.word 0x52414e53
  4178f4:	4d 49 53 53 	l.maci r9,0x5353
  4178f8:	49 4f 4e 29 	l.jalr r9
  4178fc:	3a 20 62 75 	.word 0x3a206275
  417900:	73 79 20 77 	l.cust1 
  417904:	61 69 74 20 	.word 0x61697420
  417908:	74 69 6d 65 	l.cust2 
  41790c:	6f 75 74 21 	.word 0x6f757421
  417910:	0d 00 43 4d 	l.bnf 4428644 <__stack+0x3fa8648>
  417914:	44 39 20 28 	l.jr r4
  417918:	47 45 54 5f 	l.jr r10
  41791c:	43 53 44 29 	.word 0x43534429
  417920:	3a 20 69 6e 	.word 0x3a20696e
  417924:	76 61 6c 69 	l.cust2 
  417928:	64 20 72 65 	.word 0x64207265
  41792c:	73 70 6f 6e 	l.cust1 
  417930:	73 65 20 30 	l.cust1 
  417934:	78 25 30 32 	l.cust3 
  417938:	58 20 0d 00 	.word 0x58200d00
  41793c:	43 4d 44 39 	.word 0x434d4439
  417940:	20 28 52 45 	.word 0x20285245
  417944:	41 44 5f 42 	.word 0x41445f42
  417948:	4c 4f 43 4b 	l.maci r15,0x434b
  41794c:	29 3a 20 6e 	lv.sra.b r9,r26,r4
  417950:	6f 20 64 61 	.word 0x6f206461
  417954:	74 61 20 74 	l.cust2 
  417958:	6f 6b 65 6e 	.word 0x6f6b656e
  41795c:	21 0d 00 43 	.word 0x210d0043
  417960:	4d 44 31 37 	l.maci r4,0x3137
  417964:	20 28 52 45 	.word 0x20285245
  417968:	41 44 5f 42 	.word 0x41445f42
  41796c:	4c 4f 43 4b 	l.maci r15,0x434b
  417970:	29 3a 20 69 	lv.sll.b r9,r26,r4
  417974:	6e 76 61 6c 	.word 0x6e76616c
  417978:	69 64 20 72 	.word 0x69642072
  41797c:	65 73 70 6f 	.word 0x6573706f
  417980:	6e 73 65 20 	.word 0x6e736520
  417984:	30 78 25 30 	.word 0x30782530
  417988:	32 58 20 28 	.word 0x32582028
  41798c:	6c 62 61 3d 	.word 0x6c62613d
  417990:	25 6c 75 29 	l.rfe 
  417994:	0d 00 43 4d 	l.bnf 44286c8 <__stack+0x3fa86cc>
  417998:	44 31 37 20 	l.jr r6
  41799c:	28 52 45 41 	lv.cmp_eq.h r2,r18,r8
  4179a0:	44 5f 42 4c 	l.jr r8
  4179a4:	4f 43 4b 29 	l.maci r3,0x4b29
  4179a8:	3a 20 6e 6f 	.word 0x3a206e6f
  4179ac:	20 64 61 74 	.word 0x20646174
  4179b0:	61 20 74 6f 	.word 0x6120746f
  4179b4:	6b 65 6e 21 	.word 0x6b656e21
  4179b8:	20 28 6c 62 	.word 0x20286c62
  4179bc:	61 3d 25 6c 	.word 0x613d256c
  4179c0:	75 29 0d 00 	l.cust2 
  4179c4:	74 69 6d 65 	l.cust2 
  4179c8:	6f 75 74 3a 	.word 0x6f75743a
  4179cc:	30 78 25 30 	.word 0x30782530
  4179d0:	38 58 0d 00 	.word 0x38580d00
  4179d4:	53 44 48 43 	.word 0x53444843
  4179d8:	20 63 61 72 	.word 0x20636172
  4179dc:	64 20 64 65 	.word 0x64206465
  4179e0:	74 65 63 74 	l.cust2 
  4179e4:	65 64 0d 00 	.word 0x65640d00
  4179e8:	43 4d 44 35 	.word 0x434d4435
  4179ec:	38 20 28 52 	.word 0x38202852
  4179f0:	45 41 44 5f 	l.jr r8
  4179f4:	4f 43 52 29 	l.maci r3,0x5229
  4179f8:	20 66 61 69 	.word 0x20666169
  4179fc:	6c 65 64 21 	.word 0x6c656421
  417a00:	0d 00 43 4d 	l.bnf 4428734 <__stack+0x3fa8738>
  417a04:	44 35 35 20 	l.jr r6
  417a08:	28 41 50 50 	.word 0x28415050
  417a0c:	5f 43 4d 44 	.word 0x5f434d44
  417a10:	29 20 66 61 	lv.pack.h r9,r0,r12
  417a14:	69 6c 65 64 	.word 0x696c6564
  417a18:	21 0d 00 53 	.word 0x210d0053
  417a1c:	44 48 43 20 	l.jr r8
  417a20:	63 61 72 64 	.word 0x63617264
  417a24:	20 69 6e 69 	.word 0x20696e69
  417a28:	74 69 61 6c 	l.cust2 
  417a2c:	69 7a 61 74 	.word 0x697a6174
  417a30:	69 6f 6e 20 	.word 0x696f6e20
  417a34:	74 69 6d 65 	l.cust2 
  417a38:	64 20 6f 75 	.word 0x64206f75
  417a3c:	74 21 0d 00 	l.cust2 
  417a40:	53 44 20 63 	.word 0x53442063
  417a44:	61 72 64 20 	.word 0x61726420
  417a48:	64 65 74 65 	.word 0x64657465
  417a4c:	63 74 65 64 	.word 0x63746564
  417a50:	0d 00 43 4d 	l.bnf 4428784 <__stack+0x3fa8788>
  417a54:	44 31 36 20 	l.jr r6
  417a58:	28 53 45 54 	lv.madds.h r2,r19,r8
  417a5c:	5f 42 4c 4f 	.word 0x5f424c4f
  417a60:	43 4b 4c 45 	.word 0x434b4c45
  417a64:	4e 29 20 66 	l.maci r9,0x2066
  417a68:	61 69 6c 65 	.word 0x61696c65
  417a6c:	64 21 0d 00 	.word 0x64210d00
  417a70:	53 44 20 63 	.word 0x53442063
  417a74:	61 72 64 20 	.word 0x61726420
  417a78:	69 6e 69 74 	.word 0x696e6974
  417a7c:	69 61 6c 69 	.word 0x69616c69
  417a80:	7a 61 74 69 	l.cust3 
  417a84:	6f 6e 20 74 	.word 0x6f6e2074
  417a88:	69 6d 65 64 	.word 0x696d6564
  417a8c:	20 6f 75 74 	.word 0x206f7574
  417a90:	21 0d 00 4d 	.word 0x210d004d
  417a94:	4d 43 20 63 	l.maci r3,0x2063
  417a98:	61 72 64 20 	.word 0x61726420
  417a9c:	64 65 74 65 	.word 0x64657465
  417aa0:	63 74 65 64 	.word 0x63746564
  417aa4:	0d 00 4d 4d 	l.bnf 442afd8 <__stack+0x3faafdc>
  417aa8:	43 20 63 61 	.word 0x43206361
  417aac:	72 64 20 69 	l.cust1 
  417ab0:	6e 69 74 69 	.word 0x6e697469
  417ab4:	61 6c 69 7a 	.word 0x616c697a
  417ab8:	61 74 69 6f 	.word 0x6174696f
  417abc:	6e 20 74 69 	.word 0x6e207469
  417ac0:	6d 65 64 20 	.word 0x6d656420
  417ac4:	6f 75 74 21 	.word 0x6f757421
  417ac8:	0d 00 4e 6f 	l.bnf 442b484 <__stack+0x3fab488>
  417acc:	20 6d 65 6d 	.word 0x206d656d
  417ad0:	6f 72 79 20 	.word 0x6f727920
  417ad4:	63 61 72 64 	.word 0x63617264
  417ad8:	20 64 65 74 	.word 0x20646574
  417adc:	65 63 74 65 	.word 0x65637465
  417ae0:	64 21 0d 00 	.word 0x64210d00
  417ae4:	48 44 46 00 	l.jalr r8
  417ae8:	48 41 52 44 	l.jalr r10
  417aec:	46 49 4c 45 	l.jr r9
  417af0:	20 25 64 3a 	.word 0x2025643a
  417af4:	0d 00 66 69 	l.bnf 4431498 <__stack+0x3fb149c>
  417af8:	6c 65 3a 20 	.word 0x6c653a20
  417afc:	22 25 2e 38 	.word 0x22252e38
  417b00:	73 2e 25 2e 	l.cust1 
  417b04:	33 73 22 0d 	.word 0x3373220d
  417b08:	00 73 69 7a 	l.j 20f20f0 <__stack+0x1c720f4>
  417b0c:	65 3a 20 25 	.word 0x653a2025
  417b10:	6c 75 20 28 	.word 0x6c752028
  417b14:	25 6c 75 20 	l.rfe 
  417b18:	4d 42 29 0d 	l.maci r2,0x290d
  417b1c:	00 43 48 53 	l.j 14e9c68 <__stack+0x1069c6c>
  417b20:	3a 20 25 75 	.word 0x3a202575
  417b24:	2e 25 75 2e 	.word 0x2e25752e
  417b28:	25 75 00 48 	l.rfe 
  417b2c:	61 72 64 66 	.word 0x61726466
  417b30:	69 6c 65 20 	.word 0x696c6520
  417b34:	69 6e 64 65 	.word 0x696e6465
  417b38:	78 65 64 20 	l.cust3 
  417b3c:	69 6e 20 25 	.word 0x696e2025
  417b40:	6c 75 20 6d 	.word 0x6c75206d
  417b44:	73 0d 00 0d 	l.cust1 
  417b48:	53 65 63 6f 	.word 0x5365636f
  417b4c:	6e 64 20 73 	.word 0x6e642073
  417b50:	79 6e 63 20 	l.cust3 
  417b54:	77 6f 72 64 	l.cust2 
  417b58:	20 6d 69 73 	.word 0x206d6973
  417b5c:	73 69 6e 67 	l.cust1 
  417b60:	2e 2e 2e 0d 	.word 0x2e2e2e0d
  417b64:	00 0d 57 72 	l.j 76d92c <__stack+0x2ed930>
  417b68:	6f 6e 67 20 	.word 0x6f6e6720
  417b6c:	68 65 61 64 	.word 0x68656164
  417b70:	65 72 3a 20 	.word 0x65723a20
  417b74:	25 75 2e 25 	l.rfe 
  417b78:	75 2e 25 75 	l.cust2 
  417b7c:	2e 25 75 0d 	.word 0x2e25750d
  417b80:	00 57 72 69 	l.j 19f4524 <__stack+0x1574528>
  417b84:	74 65 20 61 	l.cust2 
  417b88:	74 74 65 6d 	l.cust2 
  417b8c:	70 74 20 74 	l.cust1 
  417b90:	6f 20 70 72 	.word 0x6f207072
  417b94:	6f 74 65 63 	.word 0x6f746563
  417b98:	74 65 64 20 	l.cust2 
  417b9c:	64 69 73 6b 	.word 0x6469736b
  417ba0:	21 0d 00 57 	.word 0x210d0057
  417ba4:	72 69 74 65 	l.cust1 
  417ba8:	54 72 61 63 	.word 0x54726163
  417bac:	6b 3a 20 65 	.word 0x6b3a2065
  417bb0:	72 72 6f 72 	l.cust1 
  417bb4:	20 25 75 0d 	.word 0x2025750d
  417bb8:	00 20 20 57 	l.j c1fd14 <__stack+0x79fd18>
  417bbc:	72 69 74 65 	l.cust1 
  417bc0:	54 72 61 63 	.word 0x54726163
  417bc4:	6b 00 55 70 	.word 0x6b005570
  417bc8:	64 61 74 65 	.word 0x64617465
  417bcc:	45 6e 74 72 	l.jr r14
  417bd0:	79 28 29 3a 	l.cust3 
  417bd4:	20 64 69 72 	.word 0x20646972
  417bd8:	65 63 74 6f 	.word 0x6563746f
  417bdc:	72 79 20 72 	l.cust1 
  417be0:	65 61 64 20 	.word 0x65616420
  417be4:	66 61 69 6c 	.word 0x6661696c
  417be8:	65 64 21 0d 	.word 0x6564210d
  417bec:	00 55 70 64 	l.j 1973d7c <__stack+0x14f3d80>
  417bf0:	61 74 65 45 	.word 0x61746545
  417bf4:	6e 74 72 79 	.word 0x6e747279
  417bf8:	28 29 3a 20 	lv.any_eq.b r1,r9,r7
  417bfc:	64 69 66 66 	.word 0x64696666
  417c00:	65 72 65 6e 	.word 0x6572656e
  417c04:	74 20 6e 75 	l.cust2 
  417c08:	6d 62 65 72 	.word 0x6d626572
  417c0c:	20 6f 66 20 	.word 0x206f6620
  417c10:	63 6c 75 73 	.word 0x636c7573
  417c14:	74 65 72 73 	l.cust2 
  417c18:	21 0d 00 70 	.word 0x210d0070
  417c1c:	45 6e 74 72 	l.jr r14
  417c20:	79 2d 3e 46 	l.cust3 
  417c24:	69 6c 65 53 	.word 0x696c6553
  417c28:	69 7a 65 20 	.word 0x697a6520
  417c2c:	3d 20 25 6c 	.word 0x3d20256c
  417c30:	75 0d 00 66 	l.cust2 
  417c34:	69 6c 65 2d 	.word 0x696c652d
  417c38:	3e 73 69 7a 	.word 0x3e73697a
  417c3c:	65 20 3d 20 	.word 0x65203d20
  417c40:	25 6c 75 0d 	l.rfe 
  417c44:	00 63 6c 75 	l.j 1cf2e18 <__stack+0x1872e1c>
  417c48:	73 74 65 72 	l.cust1 
  417c4c:	5f 73 69 7a 	.word 0x5f73697a
  417c50:	65 20 3d 20 	.word 0x65203d20
  417c54:	25 75 0d 00 	l.rfe 
  417c58:	55 70 64 61 	.word 0x55706461
  417c5c:	74 65 45 6e 	l.cust2 
  417c60:	74 72 79 28 	l.cust2 
  417c64:	29 3a 20 64 	lv.packus.b r9,r26,r4
  417c68:	69 72 65 63 	.word 0x69726563
  417c6c:	74 6f 72 79 	l.cust2 
  417c70:	20 77 72 69 	.word 0x20777269
  417c74:	74 65 20 66 	l.cust2 
  417c78:	61 69 6c 65 	.word 0x61696c65
  417c7c:	64 21 0d 00 	.word 0x64210d00
  417c80:	45 6d 70 74 	l.jr r14
  417c84:	79 20 65 6e 	l.cust3 
  417c88:	74 72 79 20 	l.cust2 
  417c8c:	66 6f 75 6e 	.word 0x666f756e
  417c90:	64 20 69 6e 	.word 0x6420696e
  417c94:	20 73 65 63 	.word 0x20736563
  417c98:	74 6f 72 20 	l.cust2 
  417c9c:	25 6c 75 20 	l.rfe 
  417ca0:	61 74 20 69 	.word 0x61742069
  417ca4:	6e 64 65 78 	.word 0x6e646578
  417ca8:	20 25 6c 75 	.word 0x20256c75
  417cac:	0d 00 46 69 	l.bnf 4429650 <__stack+0x3fa9654>
  417cb0:	6c 65 43 72 	.word 0x6c654372
  417cb4:	65 61 74 65 	.word 0x65617465
  417cb8:	28 29 3a 20 	lv.any_eq.b r1,r9,r7
  417cbc:	46 41 54 20 	l.jr r10
  417cc0:	72 65 61 64 	l.cust1 
  417cc4:	20 66 61 69 	.word 0x20666169
  417cc8:	6c 65 64 21 	.word 0x6c656421
  417ccc:	0d 00 45 6d 	l.bnf 4429280 <__stack+0x3fa9284>
  417cd0:	70 74 79 20 	l.cust1 
  417cd4:	63 6c 75 73 	.word 0x636c7573
  417cd8:	74 65 72 3a 	l.cust2 
  417cdc:	20 25 6c 75 	.word 0x20256c75
  417ce0:	0d 00 46 69 	l.bnf 4429684 <__stack+0x3fa9688>
  417ce4:	6c 65 43 72 	.word 0x6c654372
  417ce8:	65 61 74 65 	.word 0x65617465
  417cec:	28 29 3a 20 	lv.any_eq.b r1,r9,r7
  417cf0:	46 41 54 20 	l.jr r10
  417cf4:	77 72 69 74 	l.cust2 
  417cf8:	65 20 66 61 	.word 0x65206661
  417cfc:	69 6c 65 64 	.word 0x696c6564
  417d00:	21 0d 00 46 	.word 0x210d0046
  417d04:	69 6c 65 43 	.word 0x696c6543
  417d08:	72 65 61 74 	l.cust1 
  417d0c:	65 28 29 3a 	.word 0x6528293a
  417d10:	20 46 41 54 	.word 0x20464154
  417d14:	20 63 6f 70 	.word 0x20636f70
  417d18:	79 20 23 25 	l.cust3 
  417d1c:	6c 75 20 77 	.word 0x6c752077
  417d20:	72 69 74 65 	l.cust1 
  417d24:	20 66 61 69 	.word 0x20666169
  417d28:	6c 65 64 21 	.word 0x6c656421
  417d2c:	0d 00 46 69 	l.bnf 44296d0 <__stack+0x3fa96d4>
  417d30:	6c 65 43 72 	.word 0x6c654372
  417d34:	65 61 74 65 	.word 0x65617465
  417d38:	28 29 3a 20 	lv.any_eq.b r1,r9,r7
  417d3c:	64 69 72 65 	.word 0x64697265
  417d40:	63 74 6f 72 	.word 0x63746f72
  417d44:	79 20 77 72 	l.cust3 
  417d48:	69 74 65 20 	.word 0x69746520
  417d4c:	66 61 69 6c 	.word 0x6661696c
  417d50:	65 64 21 0d 	.word 0x6564210d
  417d54:	00 20 20 20 	l.j c1fdd4 <__stack+0x79fdd8>
  417d58:	43 61 6e 27 	.word 0x43616e27
  417d5c:	74 20 63 72 	l.cust2 
  417d60:	65 61 74 65 	.word 0x65617465
  417d64:	20 63 6f 6e 	.word 0x20636f6e
  417d68:	66 69 67 20 	.word 0x66696720
  417d6c:	66 69 6c 65 	.word 0x66696c65
  417d70:	21 00 4c 46 	l.trap 0x4c46
  417d74:	4e 20 65 72 	l.maci r0,0x6572
  417d78:	72 6f 72 21 	l.cust1 
  417d7c:	0d 00 66 69 	l.bnf 4431720 <__stack+0x3fb1724>
  417d80:	6c 65 20 22 	.word 0x6c652022
  417d84:	25 73 22 20 	l.rfe 
  417d88:	66 6f 75 6e 	.word 0x666f756e
  417d8c:	64 0d 00 66 	.word 0x640d0066
  417d90:	69 6c 65 20 	.word 0x696c6520
  417d94:	22 25 73 22 	.word 0x22257322
  417d98:	20 6e 6f 74 	.word 0x206e6f74
  417d9c:	20 66 6f 75 	.word 0x20666f75
  417da0:	6e 64 0d 00 	.word 0x6e640d00
  417da4:	46 41 54 31 	l.jr r10
  417da8:	36 20 20 20 	.word 0x36202020
  417dac:	00 46 41 54 	l.j 15a82fc <__stack+0x1128300>
  417db0:	33 32 20 20 	.word 0x33322020
  417db4:	20 00 53 77 	l.sys 0x5377
  417db8:	61 70 70 69 	.word 0x61707069
  417dbc:	6e 67 20 62 	.word 0x6e672062
  417dc0:	79 74 65 20 	l.cust3 
  417dc4:	6f 72 64 65 	.word 0x6f726465
  417dc8:	72 20 6f 66 	l.cust1 
  417dcc:	20 70 61 72 	.word 0x20706172
  417dd0:	74 69 74 69 	l.cust2 
  417dd4:	6f 6e 20 65 	.word 0x6f6e2065
  417dd8:	6e 74 72 69 	.word 0x6e747269
  417ddc:	65 73 00 53 	.word 0x65730053
  417de0:	74 61 72 74 	l.cust2 
  417de4:	3a 20 25 6c 	.word 0x3a20256c
  417de8:	64 0a 00 50 	.word 0x640a0050
  417dec:	61 72 74 69 	.word 0x61727469
  417df0:	74 69 6f 6e 	l.cust2 
  417df4:	43 6f 75 6e 	.word 0x436f756e
  417df8:	74 3a 20 25 	l.cust2 
  417dfc:	6c 64 0a 00 	.word 0x6c640a00
  417e00:	50 61 72 74 	.word 0x50617274
  417e04:	69 74 69 6f 	.word 0x6974696f
  417e08:	6e 3a 20 25 	.word 0x6e3a2025
  417e0c:	6c 64 00 20 	.word 0x6c640020
  417e10:	20 53 74 61 	.word 0x20537461
  417e14:	72 74 3a 20 	l.cust1 
  417e18:	25 6c 64 00 	l.rfe 
  417e1c:	20 20 53 69 	.word 0x20205369
  417e20:	7a 65 3a 20 	l.cust3 
  417e24:	25 6c 64 0a 	l.rfe 
  417e28:	00 52 65 61 	l.j 18b13ac <__stack+0x14313b0>
  417e2c:	64 20 62 6f 	.word 0x6420626f
  417e30:	6f 74 20 73 	.word 0x6f742073
  417e34:	65 63 74 6f 	.word 0x6563746f
  417e38:	72 20 66 72 	l.cust1 
  417e3c:	6f 6d 20 66 	.word 0x6f6d2066
  417e40:	69 72 73 74 	.word 0x69727374
  417e44:	20 70 61 72 	.word 0x20706172
  417e48:	74 69 74 69 	l.cust2 
  417e4c:	6f 6e 0a 00 	.word 0x6f6e0a00
  417e50:	4e 6f 20 70 	l.maci r15,0x2070
  417e54:	61 72 74 69 	.word 0x61727469
  417e58:	74 69 6f 6e 	l.cust2 
  417e5c:	20 73 69 67 	.word 0x20736967
  417e60:	6e 61 74 75 	.word 0x6e617475
  417e64:	72 65 20 66 	l.cust1 
  417e68:	6f 75 6e 64 	.word 0x6f756e64
  417e6c:	0a 00 70 61 	.word 0x0a007061
  417e70:	72 74 69 74 	l.cust1 
  417e74:	69 6f 6e 20 	.word 0x696f6e20
  417e78:	74 79 70 65 	l.cust2 
  417e7c:	3a 20 30 78 	.word 0x3a203078
  417e80:	25 30 32 58 	l.rfe 
  417e84:	20 28 00 4e 	.word 0x2028004e
  417e88:	4f 4e 45 00 	l.maci r14,0x4500
  417e8c:	46 41 54 31 	l.jr r10
  417e90:	32 00 46 41 	.word 0x32004641
  417e94:	54 31 36 00 	.word 0x54313600
  417e98:	46 41 54 33 	l.jr r10
  417e9c:	32 00 55 4e 	.word 0x3200554e
  417ea0:	4b 4e 4f 57 	l.jalr r9
  417ea4:	4e 00 55 6e 	l.maci r0,0x556e
  417ea8:	73 75 70 70 	l.cust1 
  417eac:	6f 72 74 65 	.word 0x6f727465
  417eb0:	64 20 70 61 	.word 0x64207061
  417eb4:	72 74 69 74 	l.cust1 
  417eb8:	69 6f 6e 20 	.word 0x696f6e20
  417ebc:	74 79 70 65 	l.cust2 
  417ec0:	21 0d 00 66 	.word 0x210d0066
  417ec4:	61 74 5f 73 	.word 0x61745f73
  417ec8:	69 7a 65 3a 	.word 0x697a653a
  417ecc:	20 25 6c 75 	.word 0x20256c75
  417ed0:	0d 00 66 61 	l.bnf 4431854 <__stack+0x3fb1858>
  417ed4:	74 5f 6e 75 	l.cust2 
  417ed8:	6d 62 65 72 	.word 0x6d626572
  417edc:	3a 20 25 75 	.word 0x3a202575
  417ee0:	0d 00 66 61 	l.bnf 4431864 <__stack+0x3fb1868>
  417ee4:	74 5f 73 74 	l.cust2 
  417ee8:	61 72 74 3a 	.word 0x6172743a
  417eec:	20 25 6c 75 	.word 0x20256c75
  417ef0:	0d 00 72 6f 	l.bnf 44348ac <__stack+0x3fb48b0>
  417ef4:	6f 74 5f 64 	.word 0x6f745f64
  417ef8:	69 72 65 63 	.word 0x69726563
  417efc:	74 6f 72 79 	l.cust2 
  417f00:	5f 73 74 61 	.word 0x5f737461
  417f04:	72 74 3a 20 	l.cust1 
  417f08:	25 6c 75 0d 	l.rfe 
  417f0c:	00 64 69 72 	l.j 1d324d4 <__stack+0x18b24d8>
  417f10:	5f 65 6e 74 	.word 0x5f656e74
  417f14:	72 69 65 73 	l.cust1 
  417f18:	3a 20 25 75 	.word 0x3a202575
  417f1c:	0d 00 64 61 	l.bnf 44310a0 <__stack+0x3fb10a4>
  417f20:	74 61 5f 73 	l.cust2 
  417f24:	74 61 72 74 	l.cust2 
  417f28:	3a 20 25 6c 	.word 0x3a20256c
  417f2c:	75 0d 00 63 	l.cust2 
  417f30:	6c 75 73 74 	.word 0x6c757374
  417f34:	65 72 5f 73 	.word 0x65725f73
  417f38:	69 7a 65 3a 	.word 0x697a653a
  417f3c:	20 25 75 0d 	.word 0x2025750d
  417f40:	00 63 6c 75 	l.j 1cf3114 <__stack+0x1873118>
  417f44:	73 74 65 72 	l.cust1 
  417f48:	5f 6d 61 73 	.word 0x5f6d6173
  417f4c:	6b 3a 20 25 	.word 0x6b3a2025
  417f50:	30 38 6c 58 	.word 0x30386c58
  417f54:	0d 00 43 68 	l.bnf 4428cf4 <__stack+0x3fa8cf8>
  417f58:	65 63 6b 69 	.word 0x65636b69
  417f5c:	6e 67 20 66 	.word 0x6e672066
  417f60:	6f 72 20 41 	.word 0x6f722041
  417f64:	6d 69 67 61 	.word 0x6d696761
  417f68:	20 46 6f 72 	.word 0x20466f72
  417f6c:	65 76 65 72 	.word 0x65766572
  417f70:	20 6b 65 79 	.word 0x206b6579
  417f74:	20 66 69 6c 	.word 0x2066696c
  417f78:	65 3a 00 52 	.word 0x653a0052
  417f7c:	4f 4d 20 20 	l.maci r13,0x2020
  417f80:	20 20 20 4b 	.word 0x2020204b
  417f84:	45 59 00 4c 	l.jr r0
  417f88:	6f 61 64 65 	.word 0x6f616465
  417f8c:	64 20 41 6d 	.word 0x6420416d
  417f90:	69 67 61 20 	.word 0x69676120
  417f94:	46 6f 72 65 	l.jr r14
  417f98:	76 65 72 20 	l.cust2 
  417f9c:	6b 65 79 20 	.word 0x6b657920
  417fa0:	66 69 6c 65 	.word 0x66696c65
  417fa4:	00 41 6d 69 	l.j 1473548 <__stack+0xff354c>
  417fa8:	67 61 20 46 	.word 0x67612046
  417fac:	6f 72 65 76 	.word 0x6f726576
  417fb0:	65 72 20 6b 	.word 0x6572206b
  417fb4:	65 79 66 69 	.word 0x65796669
  417fb8:	6c 65 20 69 	.word 0x6c652069
  417fbc:	73 20 74 6f 	l.cust1 
  417fc0:	6f 20 6c 61 	.word 0x6f206c61
  417fc4:	72 67 65 21 	l.cust1 
  417fc8:	00 4c 6f 61 	l.j 1733d4c <__stack+0x12b3d50>
  417fcc:	64 69 6e 67 	.word 0x64696e67
  417fd0:	20 66 69 6c 	.word 0x2066696c
  417fd4:	65 3a 20 00 	.word 0x653a2000
  417fd8:	46 69 6c 65 	l.jr r13
  417fdc:	20 73 69 7a 	.word 0x2073697a
  417fe0:	65 3a 20 25 	.word 0x653a2025
  417fe4:	64 0d 00 5b 	.word 0x640d005b
  417fe8:	00 5d 0d 00 	l.j 1b5b3e8 <__stack+0x16db3ec>
  417fec:	4e 6f 20 22 	l.maci r15,0x2022
  417ff0:	25 73 22 20 	l.rfe 
  417ff4:	66 69 6c 65 	.word 0x66696c65
  417ff8:	21 00 46 61 	l.trap 0x4661
  417ffc:	74 61 6c 20 	l.cust2 
  418000:	65 72 72 6f 	.word 0x6572726f
  418004:	72 3a 20 25 	l.cust1 
  418008:	6c 75 00 52 	.word 0x6c750052
  41800c:	65 63 61 6c 	.word 0x6563616c
  418010:	69 62 72 61 	.word 0x69627261
  418014:	74 65 0d 00 	l.cust2 
  418018:	49 64 65 6e 	l.jalr r12
  41801c:	74 69 66 79 	l.cust2 
  418020:	20 44 65 76 	.word 0x20446576
  418024:	69 63 65 0d 	.word 0x6963650d
  418028:	00 49 64 65 	l.j 16711bc <__stack+0x11f11c0>
  41802c:	6e 74 69 66 	.word 0x6e746966
  418030:	79 20 2d 20 	l.cust3 
  418034:	54 79 70 65 	.word 0x54797065
  418038:	3a 20 48 44 	.word 0x3a204844
  41803c:	46 5f 46 49 	l.jr r8
  418040:	4c 45 00 31 	l.maci r5,0x31
  418044:	32 33 34 35 	.word 0x32333435
  418048:	36 37 38 39 	.word 0x36373839
  41804c:	30 41 42 43 	.word 0x30414243
  418050:	44 45 46 47 	l.jr r8
  418054:	48 49 4a 00 	l.jalr r9
  418058:	2e 31 30 30 	.word 0x2e313030
  41805c:	20 20 20 20 	.word 0x20202020
  418060:	00 44 4f 4e 	l.j 152bd98 <__stack+0x10abd9c>
  418064:	27 54 20 20 	l.rfe 
  418068:	20 20 20 20 	.word 0x20202020
  41806c:	20 20 20 20 	.word 0x20202020
  418070:	20 20 20 20 	.word 0x20202020
  418074:	20 20 20 20 	.word 0x20202020
  418078:	20 20 20 20 	.word 0x20202020
  41807c:	20 20 20 20 	.word 0x20202020
  418080:	20 20 20 20 	.word 0x20202020
  418084:	20 20 20 20 	.word 0x20202020
  418088:	20 00 52 45 	l.sys 0x5245
  41808c:	50 41 52 54 	.word 0x50415254
  418090:	49 54 49 4f 	l.jalr r9
  418094:	4e 21 20 20 	l.maci r1,0x2020
  418098:	20 20 00 59 	.word 0x20200059
  41809c:	41 51 55 42 	.word 0x41515542
  4180a0:	45 20 20 20 	l.jr r4
  4180a4:	20 20 20 20 	.word 0x20202020
  4180a8:	20 20 20 20 	.word 0x20202020
  4180ac:	20 20 20 20 	.word 0x20202020
  4180b0:	20 20 20 20 	.word 0x20202020
  4180b4:	20 20 20 20 	.word 0x20202020
  4180b8:	20 20 20 20 	.word 0x20202020
  4180bc:	20 20 20 20 	.word 0x20202020
  4180c0:	20 20 20 00 	.word 0x20202000
  4180c4:	49 64 65 6e 	l.jalr r12
  4180c8:	74 69 66 79 	l.cust2 
  4180cc:	20 2d 20 54 	.word 0x202d2054
  4180d0:	79 70 65 3a 	l.cust3 
  4180d4:	20 48 44 46 	.word 0x20484446
  4180d8:	5f 43 41 52 	.word 0x5f434152
  4180dc:	44 00 54 43 	l.jr r10
  4180e0:	36 34 4d 69 	.word 0x36344d69
  4180e4:	6e 69 4d 69 	.word 0x6e694d69
  4180e8:	67 53 44 30 	.word 0x67534430
  4180ec:	20 20 20 20 	.word 0x20202020
  4180f0:	20 20 00 53 	.word 0x20200053
  4180f4:	44 2f 4d 4d 	l.jr r9
  4180f8:	43 20 43 61 	.word 0x43204361
  4180fc:	72 64 00 43 	l.cust1 
  418100:	61 72 64 20 	.word 0x61726420
  418104:	50 61 72 74 	.word 0x50617274
  418108:	20 31 00 49 	.word 0x20310049
  41810c:	6e 69 74 69 	.word 0x6e697469
  418110:	61 6c 69 7a 	.word 0x616c697a
  418114:	65 20 44 65 	.word 0x65204465
  418118:	76 69 63 65 	l.cust2 
  41811c:	20 50 61 72 	.word 0x20506172
  418120:	61 6d 65 74 	.word 0x616d6574
  418124:	65 72 73 0d 	.word 0x6572730d
  418128:	00 49 44 45 	l.j 166923c <__stack+0x11e9240>
  41812c:	3a 00 25 30 	.word 0x3a002530
  418130:	32 58 2e 00 	.word 0x32582e00
  418134:	52 65 61 64 	.word 0x52656164
  418138:	20 48 44 46 	.word 0x20484446
  41813c:	5f 46 69 6c 	.word 0x5f46696c
  418140:	65 20 25 6c 	.word 0x6520256c
  418144:	64 00 4f 66 	.word 0x64004f66
  418148:	66 73 65 74 	.word 0x66736574
  41814c:	20 25 6c 64 	.word 0x20256c64
  418150:	00 52 44 42 	l.j 18a9258 <__stack+0x142925c>
  418154:	20 25 6c 64 	.word 0x20256c64
  418158:	00 43 6c 65 	l.j 14f32ec <__stack+0x10732f0>
  41815c:	61 72 69 6e 	.word 0x6172696e
  418160:	67 20 73 65 	.word 0x67207365
  418164:	63 74 6f 72 	.word 0x63746f72
  418168:	20 62 75 66 	.word 0x20627566
  41816c:	66 65 72 00 	.word 0x66657200
  418170:	43 72 65 61 	.word 0x43726561
  418174:	74 69 6e 67 	l.cust2 
  418178:	20 52 44 42 	.word 0x20524442
  41817c:	2e 2e 2e 00 	.word 0x2e2e2e00
  418180:	44 6f 20 6e 	l.jr r4
  418184:	6f 74 20 00 	.word 0x6f742000
  418188:	72 65 70 61 	l.cust1 
  41818c:	72 74 69 74 	l.cust1 
  418190:	69 6f 6e 21 	.word 0x696f6e21
  418194:	00 20 44 48 	l.j c292b4 <__stack+0x7a92b8>
  418198:	30 00 52 65 	.word 0x30005265
  41819c:	61 64 20 48 	.word 0x61642048
  4181a0:	44 46 5f 43 	l.jr r11
  4181a4:	61 72 64 3a 	.word 0x6172643a
  4181a8:	20 25 6c 64 	.word 0x20256c64
  4181ac:	00 53 65 74 	l.j 18f177c <__stack+0x1471780>
  4181b0:	20 4d 75 6c 	.word 0x204d756c
  4181b4:	74 69 70 6c 	l.cust2 
  4181b8:	65 20 4d 6f 	.word 0x65204d6f
  4181bc:	64 65 0d 00 	.word 0x64650d00
  4181c0:	52 65 61 64 	.word 0x52656164
  4181c4:	4d 20 48 44 	l.maci r0,0x4844
  4181c8:	46 5f 46 69 	l.jr r8
  4181cc:	6c 65 2c 20 	.word 0x6c652c20
  4181d0:	25 6c 64 00 	l.rfe 
  4181d4:	52 65 61 64 	.word 0x52656164
  4181d8:	4d 20 48 44 	l.maci r0,0x4844
  4181dc:	46 5f 43 61 	l.jr r8
  4181e0:	72 64 2c 20 	l.cust1 
  4181e4:	25 6c 64 00 	l.rfe 
  4181e8:	57 72 69 74 	.word 0x57726974
  4181ec:	65 20 6c 62 	.word 0x65206c62
  4181f0:	61 20 25 6c 	.word 0x6120256c
  4181f4:	64 00 57 72 	.word 0x64005772
  4181f8:	69 74 65 20 	.word 0x69746520
  4181fc:	48 44 46 5f 	l.jalr r8
  418200:	43 61 72 64 	.word 0x43617264
  418204:	00 57 72 69 	l.j 19f4ba8 <__stack+0x1574bac>
  418208:	74 65 4d 20 	l.cust2 
  41820c:	6c 62 61 20 	.word 0x6c626120
  418210:	25 6c 64 00 	l.rfe 
  418214:	53 50 42 3a 	.word 0x5350423a
  418218:	20 25 64 00 	.word 0x20256400
  41821c:	55 6e 6b 6e 	.word 0x556e6b6e
  418220:	6f 77 6e 20 	.word 0x6f776e20
  418224:	41 54 41 20 	.word 0x41544120
  418228:	63 6f 6d 6d 	.word 0x636f6d6d
  41822c:	61 6e 64 0d 	.word 0x616e640d
  418230:	00 55 6e 6b 	l.j 1973bdc <__stack+0x14f3be0>
  418234:	6e 6f 77 6e 	.word 0x6e6f776e
  418238:	20 63 6f 6d 	.word 0x20636f6d
  41823c:	6d 61 6e 64 	.word 0x6d616e64
  418240:	2e 20 45 6e 	.word 0x2e20456e
  418244:	74 65 72 20 	l.cust2 
  418248:	27 68 27 20 	l.rfe 
  41824c:	66 6f 72 20 	.word 0x666f7220
  418250:	68 65 6c 70 	.word 0x68656c70
  418254:	2e 0d 00 0d 	.word 0x2e0d000d
  418258:	6d 6f 6e 3e 	.word 0x6d6f6e3e
  41825c:	20 00 4d 49 	l.sys 0x4d49
  418260:	4e 49 4d 49 	l.maci r9,0x4d49
  418264:	47 2d 44 45 	l.jr r8
  418268:	31 20 4d 6f 	.word 0x31204d6f
  41826c:	6e 69 74 6f 	.word 0x6e69746f
  418270:	72 0d 00 32 	l.cust1 
  418274:	30 31 34 2c 	.word 0x3031342c
  418278:	20 72 6f 6b 	.word 0x20726f6b
  41827c:	2e 6b 72 61 	.word 0x2e6b7261
  418280:	6a 6e 63 40 	.word 0x6a6e6340
  418284:	67 6d 61 69 	.word 0x676d6169
  418288:	6c 2e 63 6f 	.word 0x6c2e636f
  41828c:	6d 0d 0d 00 	.word 0x6d0d0d00
  418290:	43 6f 6d 6d 	.word 0x436f6d6d
  418294:	61 6e 64 73 	.word 0x616e6473
  418298:	3a 0d 00 2d 	.word 0x3a0d002d
  41829c:	20 75 20 20 	.word 0x20752020
  4182a0:	46 49 4c 45 	l.jr r9
  4182a4:	20 4c 45 4e 	.word 0x204c454e
  4182a8:	20 2d 20 75 	.word 0x202d2075
  4182ac:	70 6c 6f 61 	l.cust1 
  4182b0:	64 20 66 69 	.word 0x64206669
  4182b4:	6c 65 20 74 	.word 0x6c652074
  4182b8:	6f 20 53 44 	.word 0x6f205344
  4182bc:	20 63 61 72 	.word 0x20636172
  4182c0:	64 0d 00 2d 	.word 0x640d002d
  4182c4:	20 63 77 20 	.word 0x20637720
  4182c8:	41 44 52 20 	.word 0x41445220
  4182cc:	56 41 4c 20 	.word 0x56414c20
  4182d0:	20 2d 20 77 	.word 0x202d2077
  4182d4:	72 69 74 65 	l.cust1 
  4182d8:	20 33 32 62 	.word 0x20333262
  4182dc:	69 74 20 56 	.word 0x69742056
  4182e0:	41 4c 20 74 	.word 0x414c2074
  4182e4:	6f 20 41 44 	.word 0x6f204144
  4182e8:	52 20 69 6e 	.word 0x5220696e
  4182ec:	20 63 74 72 	.word 0x20637472
  4182f0:	6c 20 73 70 	.word 0x6c207370
  4182f4:	61 63 65 20 	.word 0x61636520
  4182f8:	0d 00 2d 20 	l.bnf 4423778 <__stack+0x3fa377c>
  4182fc:	63 72 20 41 	.word 0x63722041
  418300:	44 52 20 20 	l.jr r4
  418304:	20 20 20 20 	.word 0x20202020
  418308:	2d 20 72 65 	.word 0x2d207265
  41830c:	61 64 20 33 	.word 0x61642033
  418310:	32 62 69 74 	.word 0x32626974
  418314:	20 41 44 52 	.word 0x20414452
  418318:	20 69 6e 20 	.word 0x20696e20
  41831c:	63 74 72 6c 	.word 0x6374726c
  418320:	20 73 70 61 	.word 0x20737061
  418324:	63 65 0d 00 	.word 0x63650d00
  418328:	2d 20 61 77 	.word 0x2d206177
  41832c:	20 41 44 52 	.word 0x20414452
  418330:	20 56 41 4c 	.word 0x2056414c
  418334:	20 20 2d 20 	.word 0x20202d20
  418338:	77 72 69 74 	l.cust2 
  41833c:	65 20 31 36 	.word 0x65203136
  418340:	62 69 74 20 	.word 0x62697420
  418344:	56 41 4c 20 	.word 0x56414c20
  418348:	74 6f 20 41 	l.cust2 
  41834c:	44 52 20 69 	l.jr r4
  418350:	6e 20 41 6d 	.word 0x6e20416d
  418354:	69 67 61 20 	.word 0x69676120
  418358:	73 70 61 63 	l.cust1 
  41835c:	65 20 0d 00 	.word 0x65200d00
  418360:	2d 20 61 72 	.word 0x2d206172
  418364:	20 41 44 52 	.word 0x20414452
  418368:	20 20 20 20 	.word 0x20202020
  41836c:	20 20 2d 20 	.word 0x20202d20
  418370:	72 65 61 64 	l.cust1 
  418374:	20 31 36 62 	.word 0x20313662
  418378:	69 74 20 41 	.word 0x69742041
  41837c:	44 52 20 69 	l.jr r4
  418380:	6e 20 41 6d 	.word 0x6e20416d
  418384:	69 67 61 20 	.word 0x69676120
  418388:	73 70 61 63 	l.cust1 
  41838c:	65 0d 00 2d 	.word 0x650d002d
  418390:	20 65 20 20 	.word 0x20652020
  418394:	20 20 20 20 	.word 0x20202020
  418398:	20 20 20 20 	.word 0x20202020
  41839c:	20 2d 20 65 	.word 0x202d2065
  4183a0:	78 69 74 0d 	l.cust3 
  4183a4:	00 2d 20 72 	l.j f6056c <__stack+0xae0570>
  4183a8:	20 20 20 20 	.word 0x20202020
  4183ac:	20 20 20 20 	.word 0x20202020
  4183b0:	20 20 20 2d 	.word 0x2020202d
  4183b4:	20 72 65 62 	.word 0x20726562
  4183b8:	6f 6f 74 0d 	.word 0x6f6f740d
  4183bc:	00 2d 20 68 	l.j f6055c <__stack+0xae0560>
  4183c0:	20 20 20 20 	.word 0x20202020
  4183c4:	20 20 20 20 	.word 0x20202020
  4183c8:	20 20 20 2d 	.word 0x2020202d
  4183cc:	20 74 68 69 	.word 0x20746869
  4183d0:	73 20 68 65 	l.cust1 
  4183d4:	6c 70 20 6d 	.word 0x6c70206d
  4183d8:	65 73 73 61 	.word 0x65737361
  4183dc:	67 65 0d 00 	.word 0x67650d00
  4183e0:	30 78 25 38 	.word 0x30782538
  4183e4:	78 20 3d 20 	l.cust3 
  4183e8:	30 78 25 38 	.word 0x30782538
  4183ec:	78 20 28 62 	l.cust3 
  4183f0:	25 33 32 62 	l.rfe 
  4183f4:	29 0d 0a 00 	.word 0x290d0a00
  4183f8:	41 6d 69 67 	.word 0x416d6967
  4183fc:	61 20 6d 65 	.word 0x61206d65
  418400:	6d 20 72 65 	.word 0x6d207265
  418404:	61 64 20 63 	.word 0x61642063
  418408:	75 72 72 65 	l.cust2 
  41840c:	6e 74 6c 79 	.word 0x6e746c79
  418410:	20 75 6e 69 	.word 0x20756e69
  418414:	6d 70 6c 65 	.word 0x6d706c65
  418418:	6d 65 6e 74 	.word 0x6d656e74
  41841c:	65 64 2e 0d 	.word 0x65642e0d
  418420:	00 46 69 6c 	l.j 15b29d0 <__stack+0x11329d4>
  418424:	65 20 75 70 	.word 0x65207570
  418428:	6c 6f 61 64 	.word 0x6c6f6164
  41842c:	20 63 75 72 	.word 0x20637572
  418430:	72 65 6e 74 	l.cust1 
  418434:	6c 79 20 75 	.word 0x6c792075
  418438:	6e 69 6d 70 	.word 0x6e696d70
  41843c:	6c 65 6d 65 	.word 0x6c656d65
  418440:	6e 74 65 64 	.word 0x6e746564
  418444:	2e 0d 00 74 	.word 0x2e0d0074
  418448:	75 72 62 6f 	l.cust2 
  41844c:	00 6e 6f 72 	l.j 1fb4214 <__stack+0x1b34218>
  418450:	6d 61 6c 00 	.word 0x6d616c00
  418454:	66 61 73 74 	.word 0x66617374
  418458:	00 65 6e 61 	l.j 1d73ddc <__stack+0x18f3de0>
  41845c:	62 6c 65 64 	.word 0x626c6564
  418460:	00 64 69 73 	l.j 1d32a2c <__stack+0x18b2a30>
  418464:	61 62 6c 65 	.word 0x61626c65
  418468:	64 00 6e 6f 	.word 0x64006e6f
  41846c:	74 20 70 72 	l.cust2 
  418470:	65 73 65 6e 	.word 0x6573656e
  418474:	74 00 4f 70 	l.cust2 
  418478:	65 6e 65 64 	.word 0x656e6564
  41847c:	20 63 6f 6e 	.word 0x20636f6e
  418480:	66 69 67 75 	.word 0x66696775
  418484:	72 61 74 69 	l.cust1 
  418488:	6f 6e 20 66 	.word 0x6f6e2066
  41848c:	69 6c 65 0a 	.word 0x696c650a
  418490:	00 43 6f 6e 	l.j 14f4248 <__stack+0x107424c>
  418494:	66 69 67 75 	.word 0x66696775
  418498:	72 61 74 69 	l.cust1 
  41849c:	6f 6e 20 66 	.word 0x6f6e2066
  4184a0:	69 6c 65 20 	.word 0x696c6520
  4184a4:	73 69 7a 65 	l.cust1 
  4184a8:	3a 20 25 6c 	.word 0x3a20256c
  4184ac:	75 0d 00 43 	l.cust2 
  4184b0:	6f 6e 66 69 	.word 0x6f6e6669
  4184b4:	67 20 66 69 	.word 0x67206669
  4184b8:	6c 65 20 73 	.word 0x6c652073
  4184bc:	61 6e 69 74 	.word 0x616e6974
  4184c0:	79 20 63 68 	l.cust3 
  4184c4:	65 63 6b 20 	.word 0x65636b20
  4184c8:	66 61 69 6c 	.word 0x6661696c
  4184cc:	65 64 21 0a 	.word 0x6564210a
  4184d0:	00 57 72 6f 	l.j 19f4e8c <__stack+0x1574e90>
  4184d4:	6e 67 20 63 	.word 0x6e672063
  4184d8:	6f 6e 66 69 	.word 0x6f6e6669
  4184dc:	67 75 72 61 	.word 0x67757261
  4184e0:	74 69 6f 6e 	l.cust2 
  4184e4:	20 66 69 6c 	.word 0x2066696c
  4184e8:	65 20 66 6f 	.word 0x6520666f
  4184ec:	72 6d 61 74 	l.cust1 
  4184f0:	21 0a 00 57 	.word 0x210a0057
  4184f4:	72 6f 6e 67 	l.cust1 
  4184f8:	20 63 6f 6e 	.word 0x20636f6e
  4184fc:	66 69 67 75 	.word 0x66696775
  418500:	72 61 74 69 	l.cust1 
  418504:	6f 6e 20 66 	.word 0x6f6e2066
  418508:	69 6c 65 20 	.word 0x696c6520
  41850c:	73 69 7a 65 	l.cust1 
  418510:	3a 20 25 6c 	.word 0x3a20256c
  418514:	75 20 28 65 	l.cust2 
  418518:	78 70 65 63 	l.cust3 
  41851c:	74 65 64 3a 	l.cust2 
  418520:	20 25 6c 75 	.word 0x20256c75
  418524:	29 0d 00 43 	lv.cmp_ge.h r8,r13,r0
  418528:	61 6e 20 6e 	.word 0x616e206e
  41852c:	6f 74 20 6f 	.word 0x6f74206f
  418530:	70 65 6e 20 	l.cust1 
  418534:	63 6f 6e 66 	.word 0x636f6e66
  418538:	69 67 75 72 	.word 0x69677572
  41853c:	61 74 69 6f 	.word 0x6174696f
  418540:	6e 20 66 69 	.word 0x6e206669
  418544:	6c 65 21 0a 	.word 0x6c65210a
  418548:	00 53 65 74 	l.j 18f1b18 <__stack+0x1471b1c>
  41854c:	74 69 6e 67 	l.cust2 
  418550:	20 63 6f 6e 	.word 0x20636f6e
  418554:	66 69 67 20 	.word 0x66696720
  418558:	64 65 66 61 	.word 0x64656661
  41855c:	75 6c 74 73 	l.cust2 
  418560:	0a 00 4b 49 	.word 0x0a004b49
  418564:	43 4b 20 20 	.word 0x434b2020
  418568:	20 20 00 48 	.word 0x20200048
  41856c:	41 52 44 46 	.word 0x41524446
  418570:	49 4c 45 00 	l.jalr r8
  418574:	44 65 66 61 	l.jr r12
  418578:	75 6c 74 73 	l.cust2 
  41857c:	20 73 65 74 	.word 0x20736574
  418580:	0a 00 48 61 	.word 0x0a004861
  418584:	72 64 66 69 	l.cust1 
  418588:	6c 65 20 31 	.word 0x6c652031
  41858c:	20 28 77 69 	.word 0x20287769
  418590:	74 68 20 66 	l.cust2 
  418594:	61 6b 65 20 	.word 0x616b6520
  418598:	52 44 42 29 	.word 0x52444229
  41859c:	3a 20 25 2e 	.word 0x3a20252e
  4185a0:	38 73 2e 25 	.word 0x38732e25
  4185a4:	2e 33 73 00 	.word 0x2e337300
  4185a8:	48 61 72 64 	l.jalr r14
  4185ac:	66 69 6c 65 	.word 0x66696c65
  4185b0:	20 30 3a 20 	.word 0x20303a20
  4185b4:	25 2e 38 73 	l.rfe 
  4185b8:	2e 25 2e 33 	.word 0x2e252e33
  4185bc:	73 00 48 61 	l.cust1 
  4185c0:	72 64 66 69 	l.cust1 
  4185c4:	6c 65 20 30 	.word 0x6c652030
  4185c8:	3a 20 75 73 	.word 0x3a207573
  4185cc:	69 6e 67 20 	.word 0x696e6720
  4185d0:	65 6e 74 69 	.word 0x656e7469
  4185d4:	72 65 20 53 	l.cust1 
  4185d8:	44 20 63 61 	l.jr r12
  4185dc:	72 64 00 48 	l.cust1 
  4185e0:	61 72 64 66 	.word 0x61726466
  4185e4:	69 6c 65 20 	.word 0x696c6520
  4185e8:	30 3a 20 75 	.word 0x303a2075
  4185ec:	73 69 6e 67 	l.cust1 
  4185f0:	20 53 44 20 	.word 0x20534420
  4185f4:	63 61 72 64 	.word 0x63617264
  4185f8:	20 70 61 72 	.word 0x20706172
  4185fc:	74 69 74 69 	l.cust2 
  418600:	6f 6e 20 25 	.word 0x6f6e2025
  418604:	64 00 53 69 	.word 0x64005369
  418608:	7a 65 3a 20 	l.cust3 
  41860c:	25 6c 75 20 	l.rfe 
  418610:	4d 42 00 4f 	l.maci r2,0x4f
  418614:	66 66 73 65 	.word 0x66667365
  418618:	74 3a 20 25 	l.cust2 
  41861c:	6c 64 00 48 	.word 0x6c640048
  418620:	61 72 64 66 	.word 0x61726466
  418624:	69 6c 65 20 	.word 0x696c6520
  418628:	31 3a 20 25 	.word 0x313a2025
  41862c:	2e 38 73 2e 	.word 0x2e38732e
  418630:	25 2e 33 73 	l.rfe 
  418634:	00 48 61 72 	l.j 1630bfc <__stack+0x11b0c00>
  418638:	64 66 69 6c 	.word 0x6466696c
  41863c:	65 20 31 3a 	.word 0x6520313a
  418640:	20 75 73 69 	.word 0x20757369
  418644:	6e 67 20 65 	.word 0x6e672065
  418648:	6e 74 69 72 	.word 0x6e746972
  41864c:	65 20 53 44 	.word 0x65205344
  418650:	20 63 61 72 	.word 0x20636172
  418654:	64 00 48 61 	.word 0x64004861
  418658:	72 64 66 69 	l.cust1 
  41865c:	6c 65 20 31 	.word 0x6c652031
  418660:	3a 20 75 73 	.word 0x3a207573
  418664:	69 6e 67 20 	.word 0x696e6720
  418668:	53 44 20 63 	.word 0x53442063
  41866c:	61 72 64 20 	.word 0x61726420
  418670:	70 61 72 74 	l.cust1 
  418674:	69 74 69 6f 	.word 0x6974696f
  418678:	6e 20 25 64 	.word 0x6e202564
  41867c:	00 43 50 55 	l.j 14ec7d0 <__stack+0x106c7d4>
  418680:	20 63 6c 6f 	.word 0x20636c6f
  418684:	63 6b 20 20 	.word 0x636b2020
  418688:	20 20 20 3a 	.word 0x2020203a
  41868c:	20 25 73 00 	.word 0x20257300
  418690:	43 68 69 70 	.word 0x43686970
  418694:	20 52 41 4d 	.word 0x2052414d
  418698:	20 73 69 7a 	.word 0x2073697a
  41869c:	65 20 3a 20 	.word 0x65203a20
  4186a0:	25 73 00 53 	l.rfe 
  4186a4:	6c 6f 77 20 	.word 0x6c6f7720
  4186a8:	52 41 4d 20 	.word 0x52414d20
  4186ac:	73 69 7a 65 	l.cust1 
  4186b0:	20 3a 20 25 	.word 0x203a2025
  4186b4:	73 00 46 61 	l.cust1 
  4186b8:	73 74 20 52 	l.cust1 
  4186bc:	41 4d 20 73 	.word 0x414d2073
  4186c0:	69 7a 65 20 	.word 0x697a6520
  4186c4:	3a 20 25 73 	.word 0x3a202573
  4186c8:	00 46 6c 6f 	l.j 15b3884 <__stack+0x1133888>
  4186cc:	70 70 79 20 	l.cust1 
  4186d0:	64 72 69 76 	.word 0x64726976
  4186d4:	65 73 20 3a 	.word 0x6573203a
  4186d8:	20 25 75 00 	.word 0x20257500
  4186dc:	46 6c 6f 70 	l.jr r13
  4186e0:	70 79 20 73 	l.cust1 
  4186e4:	70 65 65 64 	l.cust1 
  4186e8:	20 20 3a 20 	.word 0x20203a20
  4186ec:	25 73 00 0a 	l.rfe 
  4186f0:	41 36 30 30 	.word 0x41363030
  4186f4:	20 49 44 45 	.word 0x20494445
  4186f8:	20 48 44 43 	.word 0x20484443
  4186fc:	20 69 73 20 	.word 0x20697320
  418700:	25 73 2e 00 	l.rfe 
  418704:	4d 61 73 74 	l.maci r1,0x7374
  418708:	65 72 20 48 	.word 0x65722048
  41870c:	44 44 20 69 	l.jr r4
  418710:	73 20 25 73 	l.cust1 
  418714:	2e 00 53 6c 	.word 0x2e00536c
  418718:	61 76 65 20 	.word 0x61766520
  41871c:	48 44 44 20 	l.jalr r8
  418720:	69 73 20 25 	.word 0x69732025
  418724:	73 2e 00 0a 	l.cust1 
  418728:	45 78 69 74 	l.jr r13
  41872c:	69 6e 67 20 	.word 0x696e6720
  418730:	62 6f 6f 74 	.word 0x626f6f74
  418734:	6c 6f 61 64 	.word 0x6c6f6164
  418738:	65 72 2e 2e 	.word 0x65722e2e
  41873c:	2e 00 48 52 	.word 0x2e004852
  418740:	54 4d 4f 4e 	.word 0x544d4f4e
  418744:	20 20 52 4f 	.word 0x2020524f
  418748:	4d 00 4d 69 	l.maci r0,0x4d69
  41874c:	73 6d 61 74 	l.cust1 
  418750:	63 68 20 40 	.word 0x63682040
  418754:	20 30 78 25 	.word 0x20307825
  418758:	30 38 78 20 	.word 0x30387820
  41875c:	3a 20 30 78 	.word 0x3a203078
  418760:	25 30 38 78 	l.rfe 
  418764:	20 21 3d 20 	.word 0x20213d20
  418768:	30 78 25 30 	.word 0x30782530
  41876c:	38 78 0d 00 	.word 0x38780d00
  418770:	48 52 54 43 	l.jalr r10
  418774:	46 47 3a 0d 	l.jr r7
  418778:	00 64 75 6d 	l.j 1d35d2c <__stack+0x18b5d30>
  41877c:	6d 79 5b 25 	.word 0x6d795b25
  418780:	64 5d 3a 20 	.word 0x645d3a20
  418784:	25 78 0d 00 	l.rfe 
  418788:	6a 6d 70 73 	.word 0x6a6d7073
  41878c:	5b 25 64 5d 	.word 0x5b25645d
  418790:	3a 20 25 78 	.word 0x3a202578
  418794:	0d 00 6d 6f 	l.bnf 4433d50 <__stack+0x3fb3d54>
  418798:	6e 5f 73 69 	.word 0x6e5f7369
  41879c:	7a 65 3a 20 	l.cust3 
  4187a0:	25 78 0d 00 	l.rfe 
  4187a4:	63 6f 6c 30 	.word 0x636f6c30
  4187a8:	68 3a 20 25 	.word 0x683a2025
  4187ac:	78 0d 00 63 	l.cust3 
  4187b0:	6f 6c 30 6c 	.word 0x6f6c306c
  4187b4:	3a 20 25 78 	.word 0x3a202578
  4187b8:	0d 00 63 6f 	l.bnf 4431574 <__stack+0x3fb1578>
  4187bc:	6c 31 68 3a 	.word 0x6c31683a
  4187c0:	20 25 78 0d 	.word 0x2025780d
  4187c4:	00 63 6f 6c 	l.j 1cf4574 <__stack+0x1874578>
  4187c8:	31 6c 3a 20 	.word 0x316c3a20
  4187cc:	25 78 0d 00 	l.rfe 
  4187d0:	72 69 67 68 	l.cust1 
  4187d4:	74 3a 20 25 	l.cust2 
  4187d8:	78 0d 00 6b 	l.cust3 
  4187dc:	65 79 62 6f 	.word 0x6579626f
  4187e0:	61 72 64 3a 	.word 0x6172643a
  4187e4:	20 25 78 0d 	.word 0x2025780d
  4187e8:	00 6b 65 79 	l.j 1ef1dcc <__stack+0x1a71dd0>
  4187ec:	3a 20 25 78 	.word 0x3a202578
  4187f0:	0d 00 69 64 	l.bnf 4432d80 <__stack+0x3fb2d84>
  4187f4:	65 3a 20 25 	.word 0x653a2025
  4187f8:	78 0d 00 61 	l.cust3 
  4187fc:	31 32 30 30 	.word 0x31323030
  418800:	3a 20 25 78 	.word 0x3a202578
  418804:	0d 00 61 67 	l.bnf 4430da0 <__stack+0x3fb0da4>
  418808:	61 3a 20 25 	.word 0x613a2025
  41880c:	78 0d 00 69 	l.cust3 
  418810:	6e 73 65 72 	.word 0x6e736572
  418814:	74 3a 20 25 	l.cust2 
  418818:	78 0d 00 64 	l.cust3 
  41881c:	65 6c 61 79 	.word 0x656c6179
  418820:	3a 20 25 78 	.word 0x3a202578
  418824:	0d 00 6c 76 	l.bnf 44339fc <__stack+0x3fb3a00>
  418828:	69 65 77 3a 	.word 0x6965773a
  41882c:	20 25 78 0d 	.word 0x2025780d
  418830:	00 63 64 33 	l.j 1cf18fc <__stack+0x1871900>
  418834:	32 3a 20 25 	.word 0x323a2025
  418838:	78 0d 00 73 	l.cust3 
  41883c:	63 72 65 65 	.word 0x63726565
  418840:	6e 6d 6f 64 	.word 0x6e6d6f64
  418844:	65 3a 20 25 	.word 0x653a2025
  418848:	78 0d 00 6e 	l.cust3 
  41884c:	6f 76 62 72 	.word 0x6f766272
  418850:	3a 20 25 78 	.word 0x3a202578
  418854:	0d 00 65 6e 	l.bnf 4431e0c <__stack+0x3fb1e10>
  418858:	74 65 72 65 	l.cust2 
  41885c:	64 3a 20 25 	.word 0x643a2025
  418860:	78 0d 00 68 	l.cust3 
  418864:	65 78 6d 6f 	.word 0x65786d6f
  418868:	64 65 3a 20 	.word 0x64653a20
  41886c:	25 78 0d 00 	l.rfe 
  418870:	65 72 72 6f 	.word 0x6572726f
  418874:	72 5f 73 72 	l.cust1 
  418878:	3a 20 25 78 	.word 0x3a202578
  41887c:	0d 00 65 72 	l.bnf 4431e44 <__stack+0x3fb1e48>
  418880:	72 6f 72 5f 	l.cust1 
  418884:	70 63 3a 20 	l.cust1 
  418888:	25 78 0d 00 	l.rfe 
  41888c:	65 72 72 6f 	.word 0x6572726f
  418890:	72 5f 73 74 	l.cust1 
  418894:	61 74 75 73 	.word 0x61747573
  418898:	3a 20 25 78 	.word 0x3a202578
  41889c:	0d 00 6e 65 	l.bnf 4434230 <__stack+0x3fb4234>
  4188a0:	77 69 64 5b 	l.cust2 
  4188a4:	30 5d 3a 20 	.word 0x305d3a20
  4188a8:	25 78 0d 00 	l.rfe 
  4188ac:	6d 6f 6e 5f 	.word 0x6d6f6e5f
  4188b0:	76 65 72 73 	l.cust2 
  4188b4:	69 6f 6e 3a 	.word 0x696f6e3a
  4188b8:	20 25 78 0d 	.word 0x2025780d
  4188bc:	00 6d 6f 6e 	l.j 1f74674 <__stack+0x1af4678>
  4188c0:	5f 72 65 76 	.word 0x5f726576
  4188c4:	69 73 69 6f 	.word 0x6973696f
  4188c8:	6e 3a 20 25 	.word 0x6e3a2025
  4188cc:	78 0d 00 77 	l.cust3 
  4188d0:	68 64 5f 62 	.word 0x68645f62
  4188d4:	61 73 65 3a 	.word 0x6173653a
  4188d8:	20 25 78 0d 	.word 0x2025780d
  4188dc:	00 77 68 64 	l.j 21f2a6c <__stack+0x1d72a70>
  4188e0:	5f 76 65 72 	.word 0x5f766572
  4188e4:	73 69 6f 6e 	l.cust1 
  4188e8:	3a 20 25 78 	.word 0x3a202578
  4188ec:	0d 00 77 68 	l.bnf 443668c <__stack+0x3fb6690>
  4188f0:	64 5f 72 65 	.word 0x645f7265
  4188f4:	76 69 73 69 	l.cust2 
  4188f8:	6f 6e 3a 20 	.word 0x6f6e3a20
  4188fc:	25 78 0d 00 	l.rfe 
  418900:	6d 61 78 5f 	.word 0x6d61785f
  418904:	63 68 69 70 	.word 0x63686970
  418908:	3a 20 25 78 	.word 0x3a202578
  41890c:	0d 00 77 68 	l.bnf 44366ac <__stack+0x3fb66b0>
  418910:	64 5f 65 78 	.word 0x645f6578
  418914:	70 73 74 72 	l.cust1 
  418918:	74 3a 20 25 	l.cust2 
  41891c:	78 0d 00 77 	l.cust3 
  418920:	68 64 5f 65 	.word 0x68645f65
  418924:	78 70 73 74 	l.cust3 
  418928:	6f 70 3a 20 	.word 0x6f703a20
  41892c:	25 78 0d 00 	l.rfe 
  418930:	52 65 6c 6f 	.word 0x52656c6f
  418934:	61 64 69 6e 	.word 0x6164696e
  418938:	67 20 6b 69 	.word 0x67206b69
  41893c:	63 6b 73 74 	.word 0x636b7374
  418940:	61 72 74 20 	.word 0x61727420
  418944:	2e 2e 2e 0d 	.word 0x2e2e2e0d
  418948:	00 52 65 73 	l.j 18b1f14 <__stack+0x1431f18>
  41894c:	65 74 74 69 	.word 0x65747469
  418950:	6e 67 20 2e 	.word 0x6e67202e
  418954:	2e 2e 0d 00 	.word 0x2e2e0d00
  418958:	49 6c 6c 65 	l.jalr r13
  41895c:	67 61 6c 20 	.word 0x67616c20
  418960:	74 72 61 63 	l.cust2 
  418964:	6b 20 72 65 	.word 0x6b207265
  418968:	61 64 3a 20 	.word 0x61643a20
  41896c:	25 64 0d 00 	l.rfe 
  418970:	20 20 20 20 	.word 0x20202020
  418974:	49 6c 6c 65 	l.jalr r13
  418978:	67 61 6c 20 	.word 0x67616c20
  41897c:	74 72 61 63 	l.cust2 
  418980:	6b 20 72 65 	.word 0x6b207265
  418984:	61 64 21 00 	.word 0x61642100
  418988:	48 75 6e 74 	l.jalr r13
  41898c:	69 6e 67 20 	.word 0x696e6720
  418990:	66 6f 72 20 	.word 0x666f7220
  418994:	52 44 42 2e 	.word 0x5244422e
  418998:	2e 2e 00 4e 	.word 0x2e2e004e
  41899c:	54 53 43 00 	.word 0x54534300
  4189a0:	50 41 4c 00 	.word 0x50414c00
  4189a4:	65 6e 61 62 	.word 0x656e6162
  4189a8:	6c 65 64 20 	.word 0x6c656420
  4189ac:	00 6f 6e 20 	l.j 1ff422c <__stack+0x1b74230>
  4189b0:	00 6f 66 66 	l.j 1ff2348 <__stack+0x1b7234c>
  4189b4:	00 57 61 69 	l.j 19f0f58 <__stack+0x1570f5c>
  4189b8:	74 69 6e 67 	l.cust2 
  4189bc:	20 66 6f 72 	.word 0x20666f72
  4189c0:	20 53 44 52 	.word 0x20534452
  4189c4:	41 4d 20 2e 	.word 0x414d202e
  4189c8:	2e 2e 20 00 	.word 0x2e2e2000
  4189cc:	4f 4b 20 28 	l.maci r11,0x2028
  4189d0:	25 30 31 78 	l.rfe 
  4189d4:	29 0d 00 55 	lv.max.b r8,r13,r0
  4189d8:	6e 72 65 73 	.word 0x6e726573
  4189dc:	65 74 74 69 	.word 0x65747469
  4189e0:	6e 67 20 66 	.word 0x6e672066
  4189e4:	72 6f 6d 20 	l.cust1 
  4189e8:	63 74 72 6c 	.word 0x6374726c
  4189ec:	20 62 6c 6f 	.word 0x20626c6f
  4189f0:	63 6b 20 2e 	.word 0x636b202e
  4189f4:	2e 2e 0d 00 	.word 0x2e2e0d00
  4189f8:	53 44 20 63 	.word 0x53442063
  4189fc:	61 72 64 20 	.word 0x61726420
  418a00:	66 6f 75 6e 	.word 0x666f756e
  418a04:	64 20 2e 2e 	.word 0x64202e2e
  418a08:	2e 0d 00 44 	.word 0x2e0d0044
  418a0c:	72 69 76 65 	l.cust1 
  418a10:	20 66 6f 75 	.word 0x20666f75
  418a14:	6e 64 20 2e 	.word 0x6e64202e
  418a18:	2e 2e 0d 00 	.word 0x2e2e0d00
  418a1c:	2a 2a 2a 2a 	lv.any_ne.b r17,r10,r5
  418a20:	20 4d 49 4e 	.word 0x204d494e
  418a24:	49 4d 49 47 	l.jalr r9
  418a28:	2d 44 45 31 	.word 0x2d444531
  418a2c:	20 62 79 20 	.word 0x20627920
  418a30:	52 6f 6b 20 	.word 0x526f6b20
  418a34:	4b 72 61 6a 	l.jalr r12
  418a38:	6e 63 20 28 	.word 0x6e632028
  418a3c:	72 6f 6b 2e 	l.cust1 
  418a40:	6b 72 61 6a 	.word 0x6b72616a
  418a44:	6e 63 40 67 	.word 0x6e634067
  418a48:	6d 61 69 6c 	.word 0x6d61696c
  418a4c:	2e 63 6f 6d 	.word 0x2e636f6d
  418a50:	29 20 2a 2a 	lv.any_ne.b r9,r0,r5
  418a54:	2a 2a 00 4f 	.word 0x2a2a004f
  418a58:	72 69 67 69 	l.cust1 
  418a5c:	6e 61 6c 20 	.word 0x6e616c20
  418a60:	4d 69 6e 69 	l.maci r9,0x6e69
  418a64:	6d 69 67 20 	.word 0x6d696720
  418a68:	62 79 20 44 	.word 0x62792044
  418a6c:	65 6e 6e 69 	.word 0x656e6e69
  418a70:	73 20 76 61 	l.cust1 
  418a74:	6e 20 57 65 	.word 0x6e205765
  418a78:	65 72 65 6e 	.word 0x6572656e
  418a7c:	00 55 70 64 	l.j 1974c0c <__stack+0x14f4c10>
  418a80:	61 74 65 73 	.word 0x61746573
  418a84:	20 62 79 20 	.word 0x20627920
  418a88:	4a 61 6b 75 	l.jalr r13
  418a8c:	62 20 42 65 	.word 0x62204265
  418a90:	64 6e 61 72 	.word 0x646e6172
  418a94:	73 6b 69 2c 	l.cust1 
  418a98:	20 54 6f 62 	.word 0x20546f62
  418a9c:	69 61 73 20 	.word 0x69617320
  418aa0:	47 75 62 65 	l.jr r12
  418aa4:	6e 65 72 2c 	.word 0x6e65722c
  418aa8:	20 53 61 73 	.word 0x20536173
  418aac:	63 68 61 20 	.word 0x63686120
  418ab0:	42 6f 69 6e 	.word 0x426f696e
  418ab4:	67 2c 20 41 	.word 0x672c2041
  418ab8:	2e 4d 2e 20 	.word 0x2e4d2e20
  418abc:	52 6f 62 69 	.word 0x526f6269
  418ac0:	6e 73 6f 6e 	.word 0x6e736f6e
  418ac4:	20 26 20 6f 	.word 0x2026206f
  418ac8:	74 68 65 72 	l.cust2 
  418acc:	73 00 46 6f 	l.cust1 
  418ad0:	72 20 75 70 	l.cust1 
  418ad4:	64 61 74 65 	.word 0x64617465
  418ad8:	73 20 26 20 	l.cust1 
  418adc:	63 6f 64 65 	.word 0x636f6465
  418ae0:	20 73 65 65 	.word 0x20736565
  418ae4:	20 68 74 74 	.word 0x20687474
  418ae8:	70 73 3a 2f 	l.cust1 
  418aec:	2f 67 69 74 	.word 0x2f676974
  418af0:	68 75 62 2e 	.word 0x6875622e
  418af4:	63 6f 6d 2f 	.word 0x636f6d2f
  418af8:	72 6b 72 61 	l.cust1 
  418afc:	6a 6e 63 2f 	.word 0x6a6e632f
  418b00:	6d 69 6e 69 	.word 0x6d696e69
  418b04:	6d 69 67 2d 	.word 0x6d69672d
  418b08:	64 65 31 00 	.word 0x64653100
  418b0c:	46 6f 72 20 	l.jr r14
  418b10:	73 75 70 70 	l.cust1 
  418b14:	6f 72 74 2c 	.word 0x6f72742c
  418b18:	20 73 65 65 	.word 0x20736565
  418b1c:	20 68 74 74 	.word 0x20687474
  418b20:	70 3a 2f 2f 	l.cust1 
  418b24:	77 77 77 2e 	l.cust2 
  418b28:	6d 69 6e 69 	.word 0x6d696e69
  418b2c:	6d 69 67 2e 	.word 0x6d69672e
  418b30:	6e 65 74 00 	.word 0x6e657400
  418b34:	42 75 69 6c 	.word 0x4275696c
  418b38:	64 20 67 69 	.word 0x64206769
  418b3c:	74 20 74 61 	l.cust2 
  418b40:	67 3a 20 25 	.word 0x673a2025
  418b44:	73 00 6d 69 	l.cust1 
  418b48:	6e 69 6d 69 	.word 0x6e696d69
  418b4c:	67 2d 64 65 	.word 0x672d6465
  418b50:	31 2d 72 65 	.word 0x312d7265
  418b54:	6c 36 00 53 	.word 0x6c360053
  418b58:	50 49 20 63 	.word 0x50492063
  418b5c:	6c 6f 63 6b 	.word 0x6c6f636b
  418b60:	3a 20 25 75 	.word 0x3a202575
  418b64:	2e 25 75 4d 	.word 0x2e25754d
  418b68:	48 7a 00 42 	l.jalr r0
  418b6c:	6f 6f 74 69 	.word 0x6f6f7469
  418b70:	6e 67 20 2e 	.word 0x6e67202e
  418b74:	2e 2e 00 20 	.word 0x2e2e0020
  418b78:	20 20 20 20 	.word 0x20202020
  418b7c:	20 20 20 20 	.word 0x20202020
  418b80:	20 20 20 20 	.word 0x20202020
  418b84:	54 55 52 42 	.word 0x54555242
  418b88:	4f 00 20 20 	l.maci r0,0x2020
  418b8c:	20 20 20 20 	.word 0x20202020
  418b90:	20 20 20 20 	.word 0x20202020
  418b94:	20 20 20 4e 	.word 0x2020204e
  418b98:	4f 52 4d 41 	l.maci r18,0x4d41
  418b9c:	4c 00 44 65 	l.maci r0,0x4465
  418ba0:	62 75 67 00 	.word 0x62756700
  418ba4:	20 20 20 20 	.word 0x20202020
  418ba8:	20 20 20 20 	.word 0x20202020
  418bac:	20 20 20 20 	.word 0x20202020
  418bb0:	53 61 6c 69 	.word 0x53616c69
  418bb4:	72 00 20 20 	l.cust1 
  418bb8:	20 20 20 20 	.word 0x20202020
  418bbc:	20 20 20 20 	.word 0x20202020
  418bc0:	20 20 20 20 	.word 0x20202020
  418bc4:	20 20 20 20 	.word 0x20202020
  418bc8:	20 20 20 20 	.word 0x20202020
  418bcc:	20 20 20 20 	.word 0x20202020
  418bd0:	20 20 20 20 	.word 0x20202020
  418bd4:	20 20 57 65 	.word 0x20205765
  418bd8:	6c 63 6f 6d 	.word 0x6c636f6d
  418bdc:	65 20 74 6f 	.word 0x6520746f
  418be0:	20 4d 69 6e 	.word 0x204d696e
  418be4:	69 6d 69 67 	.word 0x696d6967
  418be8:	21 20 20 55 	.word 0x21202055
  418bec:	73 65 20 74 	l.cust1 
  418bf0:	68 65 20 63 	.word 0x68652063
  418bf4:	75 72 73 6f 	l.cust2 
  418bf8:	72 20 6b 65 	l.cust1 
  418bfc:	79 73 20 74 	l.cust3 
  418c00:	6f 20 6e 61 	.word 0x6f206e61
  418c04:	76 69 67 61 	l.cust2 
  418c08:	74 65 20 74 	l.cust2 
  418c0c:	68 65 20 6d 	.word 0x6865206d
  418c10:	65 6e 75 73 	.word 0x656e7573
  418c14:	2e 20 20 55 	.word 0x2e202055
  418c18:	73 65 20 73 	l.cust1 
  418c1c:	70 61 63 65 	l.cust1 
  418c20:	20 62 61 72 	.word 0x20626172
  418c24:	20 6f 72 20 	.word 0x206f7220
  418c28:	65 6e 74 65 	.word 0x656e7465
  418c2c:	72 20 74 6f 	l.cust1 
  418c30:	20 73 65 6c 	.word 0x2073656c
  418c34:	65 63 74 20 	.word 0x65637420
  418c38:	61 6e 20 69 	.word 0x616e2069
  418c3c:	74 65 6d 2e 	l.cust2 
  418c40:	20 20 50 72 	.word 0x20205072
  418c44:	65 73 73 20 	.word 0x65737320
  418c48:	45 73 63 20 	l.jr r12
  418c4c:	6f 72 20 46 	.word 0x6f722046
  418c50:	31 32 20 74 	.word 0x31322074
  418c54:	6f 20 65 78 	.word 0x6f206578
  418c58:	69 74 20 74 	.word 0x69742074
  418c5c:	68 65 20 6d 	.word 0x6865206d
  418c60:	65 6e 75 73 	.word 0x656e7573
  418c64:	2e 20 20 4a 	.word 0x2e20204a
  418c68:	6f 79 73 74 	.word 0x6f797374
  418c6c:	69 63 6b 20 	.word 0x69636b20
  418c70:	65 6d 75 6c 	.word 0x656d756c
  418c74:	61 74 69 6f 	.word 0x6174696f
  418c78:	6e 20 6f 6e 	.word 0x6e206f6e
  418c7c:	20 74 68 65 	.word 0x20746865
  418c80:	20 6e 75 6d 	.word 0x206e756d
  418c84:	65 72 69 63 	.word 0x65726963
  418c88:	20 6b 65 79 	.word 0x206b6579
  418c8c:	70 61 64 20 	l.cust1 
  418c90:	63 61 6e 20 	.word 0x63616e20
  418c94:	62 65 20 74 	.word 0x62652074
  418c98:	6f 67 67 6c 	.word 0x6f67676c
  418c9c:	65 64 20 77 	.word 0x65642077
  418ca0:	69 74 68 20 	.word 0x69746820
  418ca4:	74 68 65 20 	l.cust2 
  418ca8:	6e 75 6d 6c 	.word 0x6e756d6c
  418cac:	6f 63 6b 20 	.word 0x6f636b20
  418cb0:	6b 65 79 2c 	.word 0x6b65792c
  418cb4:	20 77 68 69 	.word 0x20776869
  418cb8:	6c 65 20 70 	.word 0x6c652070
  418cbc:	72 65 73 73 	l.cust1 
  418cc0:	69 6e 67 20 	.word 0x696e6720
  418cc4:	43 74 72 6c 	.word 0x4374726c
  418cc8:	2d 41 6c 74 	.word 0x2d416c74
  418ccc:	2d 30 20 28 	.word 0x2d302028
  418cd0:	6e 75 6d 65 	.word 0x6e756d65
  418cd4:	72 69 63 20 	l.cust1 
  418cd8:	6b 65 79 70 	.word 0x6b657970
  418cdc:	61 64 29 20 	.word 0x61642920
  418ce0:	74 6f 67 67 	l.cust2 
  418ce4:	6c 65 73 20 	.word 0x6c657320
  418ce8:	61 75 74 6f 	.word 0x6175746f
  418cec:	66 69 72 65 	.word 0x66697265
  418cf0:	20 6d 6f 64 	.word 0x206d6f64
  418cf4:	65 2e 00 20 	.word 0x652e0020
  418cf8:	50 54 20 2b 	.word 0x5054202b
  418cfc:	2f 2d 20 50 	.word 0x2f2d2050
  418d00:	61 72 61 20 	.word 0x61726120
  418d04:	61 67 72 65 	.word 0x61677265
  418d08:	67 61 72 2f 	.word 0x6761722f
  418d0c:	71 75 69 74 	l.cust1 
  418d10:	61 72 20 75 	.word 0x61722075
  418d14:	6e 69 64 61 	.word 0x6e696461
  418d18:	64 00 20 64 	.word 0x64002064
  418d1c:	66 78 3a 20 	.word 0x66783a20
  418d20:	00 20 17 00 	l.j c1e920 <__stack+0x79e924>
  418d24:	2a 20 73 69 	lv.sll.b r17,r0,r14
  418d28:	6e 20 64 69 	.word 0x6e206469
  418d2c:	73 63 6f 20 	l.cust1 
  418d30:	2a 00 2a 20 	lv.any_eq.b r16,r0,r5
  418d34:	61 63 74 69 	.word 0x61637469
  418d38:	76 61 72 20 	l.cust2 
  418d3c:	74 72 61 73 	l.cust2 
  418d40:	20 65 6c 20 	.word 0x20656c20
  418d44:	72 65 73 65 	l.cust1 
  418d48:	74 20 2a 00 	l.cust2 
  418d4c:	20 44 69 73 	.word 0x20446973
  418d50:	71 75 65 74 	l.cust1 
  418d54:	65 72 61 20 	.word 0x65726120
  418d58:	74 75 72 62 	l.cust2 
  418d5c:	6f 20 3a 20 	.word 0x6f203a20
  418d60:	25 73 00 20 	l.rfe 
  418d64:	43 6f 6e 66 	.word 0x436f6e66
  418d68:	69 67 20 44 	.word 0x69672044
  418d6c:	69 73 63 6f 	.word 0x6973636f
  418d70:	20 44 75 72 	.word 0x20447572
  418d74:	6f 20 16 00 	.word 0x6f201600
  418d78:	41 44 46 00 	.word 0x41444600
  418d7c:	41 44 46 20 	.word 0x41444620
  418d80:	4e 4f 20 53 	l.maci r15,0x2053
  418d84:	4f 50 4f 52 	l.maci r16,0x4f52
  418d88:	54 41 44 4f 	.word 0x5441444f
  418d8c:	21 21 21 20 	.word 0x21212120
  418d90:	44 65 6d 61 	l.jr r13
  418d94:	73 69 61 64 	l.cust1 
  418d98:	6f 73 20 74 	.word 0x6f732074
  418d9c:	72 61 63 6b 	l.cust1 
  418da0:	73 3a 20 25 	l.cust1 
  418da4:	6c 75 0d 00 	.word 0x6c750d00
  418da8:	49 6e 73 65 	l.jalr r14
  418dac:	72 74 61 72 	l.cust1 
  418db0:	20 64 69 73 	.word 0x20646973
  418db4:	71 75 65 74 	l.cust1 
  418db8:	65 3a 20 22 	.word 0x653a2022
  418dbc:	25 73 22 0d 	l.rfe 
  418dc0:	00 49 6e 73 	l.j 167478c <__stack+0x11f4790>
  418dc4:	65 72 74 61 	.word 0x65727461
  418dc8:	72 20 64 69 	l.cust1 
  418dcc:	73 71 75 65 	l.cust1 
  418dd0:	74 65 3a 20 	l.cust2 
  418dd4:	22 25 2e 31 	.word 0x22252e31
  418dd8:	31 73 22 0d 	.word 0x3173220d
  418ddc:	00 41 74 72 	l.j 1475fa4 <__stack+0xff5fa8>
  418de0:	69 62 75 74 	.word 0x69627574
  418de4:	6f 73 3a 20 	.word 0x6f733a20
  418de8:	30 78 25 30 	.word 0x30782530
  418dec:	32 58 0d 00 	.word 0x32580d00
  418df0:	54 61 6d 61 	.word 0x54616d61
  418df4:	c3 b1 6f 3a 	l.mtspr r17,r13,0xef3a
  418df8:	20 25 6c 75 	.word 0x20256c75
  418dfc:	20 28 25 6c 	.word 0x2028256c
  418e00:	75 20 4b 42 	l.cust2 
  418e04:	29 0d 00 54 	lv.madds.h r8,r13,r0
  418e08:	72 61 63 6b 	l.cust1 
  418e0c:	73 3a 20 25 	l.cust1 
  418e10:	75 0d 00 45 	l.cust2 
  418e14:	73 74 61 64 	l.cust1 
  418e18:	6f 3a 20 30 	.word 0x6f3a2030
  418e1c:	78 25 30 32 	l.cust3 
  418e20:	58 0d 00 43 	.word 0x580d0043
  418e24:	6f 6e 66 69 	.word 0x6f6e6669
  418e28:	67 00 20 20 	.word 0x67002020
  418e2c:	43 61 72 67 	.word 0x43617267
  418e30:	61 72 20 63 	.word 0x61722063
  418e34:	6f 6e 66 69 	.word 0x6f6e6669
  418e38:	67 75 72 61 	.word 0x67757261
  418e3c:	63 69 6f 6e 	.word 0x63696f6e
  418e40:	00 20 20 47 	l.j c20f5c <__stack+0x7a0f60>
  418e44:	75 61 72 64 	l.cust2 
  418e48:	61 72 20 63 	.word 0x61722063
  418e4c:	6f 6e 66 69 	.word 0x6f6e6669
  418e50:	67 75 72 61 	.word 0x67757261
  418e54:	63 69 6f 6e 	.word 0x63696f6e
  418e58:	00 20 20 52 	l.j c20fa0 <__stack+0x7a0fa4>
  418e5c:	65 69 6e 69 	.word 0x65696e69
  418e60:	63 69 61 72 	.word 0x63696172
  418e64:	20 55 6e 61 	.word 0x20556e61
  418e68:	6d 69 67 61 	.word 0x6d696761
  418e6c:	00 20 20 43 	l.j c20f78 <__stack+0x7a0f7c>
  418e70:	6f 6e 66 69 	.word 0x6f6e6669
  418e74:	67 75 72 61 	.word 0x67757261
  418e78:	72 20 63 68 	l.cust1 
  418e7c:	69 70 73 65 	.word 0x69707365
  418e80:	74 20 16 00 	l.cust2 
  418e84:	20 20 43 6f 	.word 0x2020436f
  418e88:	6e 66 69 67 	.word 0x6e666967
  418e8c:	75 72 61 72 	l.cust2 
  418e90:	20 6d 65 6d 	.word 0x206d656d
  418e94:	6f 72 69 61 	.word 0x6f726961
  418e98:	20 16 00 20 	.word 0x20160020
  418e9c:	20 43 6f 6e 	.word 0x20436f6e
  418ea0:	66 69 67 75 	.word 0x66696775
  418ea4:	72 61 72 20 	l.cust1 
  418ea8:	76 69 64 65 	l.cust2 
  418eac:	6f 20 16 00 	.word 0x6f201600
  418eb0:	4f 74 72 6f 	l.maci r20,0x726f
  418eb4:	73 00 20 20 	l.cust1 
  418eb8:	20 52 65 69 	.word 0x20526569
  418ebc:	6e 69 63 69 	.word 0x6e696369
  418ec0:	61 72 00 20 	.word 0x61720020
  418ec4:	20 20 52 65 	.word 0x20205265
  418ec8:	63 6f 6e 66 	.word 0x636f6e66
  418ecc:	69 67 75 72 	.word 0x69677572
  418ed0:	61 72 20 65 	.word 0x61722065
  418ed4:	6c 20 55 6e 	.word 0x6c20556e
  418ed8:	41 6d 69 67 	.word 0x416d6967
  418edc:	61 00 20 20 	.word 0x61002020
  418ee0:	20 20 41 63 	.word 0x20204163
  418ee4:	65 72 63 61 	.word 0x65726361
  418ee8:	20 64 65 00 	.word 0x20646500
  418eec:	20 20 20 20 	.word 0x20202020
  418ef0:	20 20 20 20 	.word 0x20202020
  418ef4:	20 20 20 20 	.word 0x20202020
  418ef8:	20 20 20 20 	.word 0x20202020
  418efc:	20 20 20 20 	.word 0x20202020
  418f00:	20 20 20 20 	.word 0x20202020
  418f04:	20 20 20 20 	.word 0x20202020
  418f08:	20 20 20 20 	.word 0x20202020
  418f0c:	20 4d 69 6e 	.word 0x204d696e
  418f10:	69 6d 69 67 	.word 0x696d6967
  418f14:	20 50 6f 72 	.word 0x20506f72
  418f18:	20 44 65 6e 	.word 0x2044656e
  418f1c:	6e 69 73 20 	.word 0x6e697320
  418f20:	76 61 6e 20 	l.cust2 
  418f24:	57 65 65 72 	.word 0x57656572
  418f28:	65 6e 2e 20 	.word 0x656e2e20
  418f2c:	20 4d 65 6a 	.word 0x204d656a
  418f30:	6f 72 61 73 	.word 0x6f726173
  418f34:	20 65 6e 20 	.word 0x20656e20
  418f38:	65 6c 20 43 	.word 0x656c2043
  418f3c:	68 69 70 73 	.word 0x68697073
  418f40:	65 74 20 70 	.word 0x65742070
  418f44:	6f 72 20 4a 	.word 0x6f72204a
  418f48:	61 6b 75 62 	.word 0x616b7562
  418f4c:	20 42 65 64 	.word 0x20426564
  418f50:	6e 61 72 73 	.word 0x6e617273
  418f54:	6b 69 20 79 	.word 0x6b692079
  418f58:	20 53 61 73 	.word 0x20536173
  418f5c:	63 68 61 20 	.word 0x63686120
  418f60:	42 6f 69 6e 	.word 0x426f696e
  418f64:	67 2e 20 20 	.word 0x672e2020
  418f68:	54 47 36 38 	.word 0x54473638
  418f6c:	20 73 6f 66 	.word 0x20736f66
  418f70:	74 63 6f 72 	l.cust2 
  418f74:	65 20 79 20 	.word 0x65207920
  418f78:	70 6f 72 74 	l.cust1 
  418f7c:	20 64 65 6c 	.word 0x2064656c
  418f80:	20 43 68 61 	.word 0x20436861
  418f84:	6d 65 6c 65 	.word 0x6d656c65
  418f88:	6f 6e 20 70 	.word 0x6f6e2070
  418f8c:	6f 72 20 54 	.word 0x6f722054
  418f90:	6f 62 69 61 	.word 0x6f626961
  418f94:	73 20 47 75 	l.cust1 
  418f98:	62 65 6e 65 	.word 0x62656e65
  418f9c:	72 2e 20 20 	l.cust1 
  418fa0:	4d 65 6e 75 	l.maci r5,0x6e75
  418fa4:	20 2f 20 6f 	.word 0x202f206f
  418fa8:	74 72 6f 73 	l.cust2 
  418fac:	20 50 6f 72 	.word 0x20506f72
  418fb0:	20 44 65 6e 	.word 0x2044656e
  418fb4:	6e 69 73 20 	.word 0x6e697320
  418fb8:	76 61 6e 20 	l.cust2 
  418fbc:	57 65 65 72 	.word 0x57656572
  418fc0:	65 6e 2c 20 	.word 0x656e2c20
  418fc4:	4a 61 6b 75 	l.jalr r13
  418fc8:	62 20 42 65 	.word 0x62204265
  418fcc:	64 6e 61 72 	.word 0x646e6172
  418fd0:	73 6b 69 20 	l.cust1 
  418fd4:	79 20 41 6c 	l.cust3 
  418fd8:	61 73 74 61 	.word 0x61737461
  418fdc:	69 72 20 4d 	.word 0x6972204d
  418fe0:	2e 20 52 6f 	.word 0x2e20526f
  418fe4:	62 69 6e 73 	.word 0x62696e73
  418fe8:	6f 6e 2e 20 	.word 0x6f6e2e20
  418fec:	20 43 6f 6d 	.word 0x20436f6d
  418ff0:	70 69 6c 61 	l.cust1 
  418ff4:	64 6f 20 70 	.word 0x646f2070
  418ff8:	6f 72 20 43 	.word 0x6f722043
  418ffc:	68 72 69 73 	.word 0x68726973
  419000:	74 69 61 6e 	l.cust2 
  419004:	20 56 6f 67 	.word 0x20566f67
  419008:	65 6c 67 73 	.word 0x656c6773
  41900c:	61 6e 67 2e 	.word 0x616e672e
  419010:	20 45 6c 20 	.word 0x20456c20
  419014:	6c 6f 67 6f 	.word 0x6c6f676f
  419018:	20 64 65 20 	.word 0x20646520
  41901c:	4d 69 6e 69 	l.maci r9,0x6e69
  419020:	6d 69 67 20 	.word 0x6d696720
  419024:	65 73 74 61 	.word 0x65737461
  419028:	20 62 61 73 	.word 0x20626173
  41902c:	61 64 6f 20 	.word 0x61646f20
  419030:	65 6e 20 65 	.word 0x656e2065
  419034:	6c 20 64 69 	.word 0x6c206469
  419038:	73 65 c3 b1 	l.cust1 
  41903c:	6f 20 64 65 	.word 0x6f206465
  419040:	20 4c 6f 72 	.word 0x204c6f72
  419044:	69 61 6e 6f 	.word 0x69616e6f
  419048:	20 50 61 67 	.word 0x20506167
  41904c:	6e 69 2e 20 	.word 0x6e692e20
  419050:	20 4d 69 6e 	.word 0x204d696e
  419054:	69 6d 69 67 	.word 0x696d6967
  419058:	20 73 65 20 	.word 0x20736520
  41905c:	64 69 73 74 	.word 0x64697374
  419060:	72 69 62 75 	l.cust1 
  419064:	79 65 20 62 	l.cust3 
  419068:	61 6a 6f 20 	.word 0x616a6f20
  41906c:	6c 6f 73 20 	.word 0x6c6f7320
  419070:	74 65 72 6d 	l.cust2 
  419074:	69 6e 6f 73 	.word 0x696e6f73
  419078:	20 64 65 20 	.word 0x20646520
  41907c:	47 4e 55 20 	l.jr r10
  419080:	47 65 6e 65 	l.jr r13
  419084:	72 61 6c 20 	l.cust1 
  419088:	50 75 62 6c 	.word 0x5075626c
  41908c:	69 63 20 4c 	.word 0x6963204c
  419090:	69 63 65 6e 	.word 0x6963656e
  419094:	73 65 20 76 	l.cust1 
  419098:	65 72 73 69 	.word 0x65727369
  41909c:	6f 6e 20 33 	.word 0x6f6e2033
  4190a0:	2e 20 20 46 	.word 0x2e202046
  4190a4:	69 72 6d 77 	.word 0x69726d77
  4190a8:	61 72 65 20 	.word 0x61726520
  4190ac:	70 65 72 73 	l.cust1 
  4190b0:	6f 6e 61 6c 	.word 0x6f6e616c
  4190b4:	69 7a 61 64 	.word 0x697a6164
  4190b8:	6f 20 70 61 	.word 0x6f207061
  4190bc:	72 61 20 65 	l.cust1 
  4190c0:	6c 20 70 72 	.word 0x6c207072
  4190c4:	6f 79 65 63 	.word 0x6f796563
  4190c8:	74 6f 20 55 	l.cust2 
  4190cc:	6e 41 6d 69 	.word 0x6e416d69
  4190d0:	67 61 20 62 	.word 0x67612062
  4190d4:	61 73 61 64 	.word 0x61736164
  4190d8:	6f 20 65 6e 	.word 0x6f20656e
  4190dc:	20 65 6c 20 	.word 0x20656c20
  4190e0:	74 72 61 62 	l.cust2 
  4190e4:	61 6a 6f 20 	.word 0x616a6f20
  4190e8:	64 65 20 4a 	.word 0x6465204a
  4190ec:	65 70 61 6c 	.word 0x6570616c
  4190f0:	7a 61 20 79 	l.cust3 
  4190f4:	20 6c 6f 73 	.word 0x206c6f73
  4190f8:	20 75 73 75 	.word 0x20757375
  4190fc:	61 72 69 6f 	.word 0x6172696f
  419100:	73 20 64 65 	l.cust1 
  419104:	6c 20 67 72 	.word 0x6c206772
  419108:	75 70 6f 20 	l.cust2 
  41910c:	64 65 20 74 	.word 0x64652074
  419110:	65 6c 65 67 	.word 0x656c6567
  419114:	72 61 6d 2e 	l.cust1 
  419118:	20 50 73 65 	.word 0x20507365
  41911c:	75 64 6f 20 	l.cust2 
  419120:	74 72 61 64 	l.cust2 
  419124:	75 63 69 64 	l.cust2 
  419128:	6f 20 70 6f 	.word 0x6f20706f
  41912c:	72 20 40 45 	l.cust1 
  419130:	64 75 20 41 	.word 0x64752041
  419134:	72 61 6e 61 	l.cust1 
  419138:	20 65 6e 20 	.word 0x20656e20
  41913c:	32 30 31 38 	.word 0x32303138
  419140:	2e 00 43 61 	.word 0x2e004361
  419144:	72 67 61 72 	l.cust1 
  419148:	00 20 20 20 	l.j c211c8 <__stack+0x7a11cc>
  41914c:	20 20 20 20 	.word 0x20202020
  419150:	20 20 20 44 	.word 0x20202044
  419154:	65 66 65 63 	.word 0x65666563
  419158:	74 6f 00 20 	l.cust2 
  41915c:	20 20 20 20 	.word 0x20202020
  419160:	20 20 20 20 	.word 0x20202020
  419164:	20 31 00 20 	.word 0x20310020
  419168:	20 20 20 20 	.word 0x20202020
  41916c:	20 20 20 20 	.word 0x20202020
  419170:	20 32 00 20 	.word 0x20320020
  419174:	20 20 20 20 	.word 0x20202020
  419178:	20 20 20 20 	.word 0x20202020
  41917c:	20 33 00 20 	.word 0x20330020
  419180:	20 20 20 20 	.word 0x20202020
  419184:	20 20 20 20 	.word 0x20202020
  419188:	20 34 00 53 	.word 0x20340053
  41918c:	65 6c 65 63 	.word 0x656c6563
  419190:	63 69 6f 6e 	.word 0x63696f6e
  419194:	61 72 00 20 	.word 0x61720020
  419198:	3c 44 49 52 	.word 0x3c444952
  41919c:	3e 00 20 20 	.word 0x3e002020
  4191a0:	20 20 20 20 	.word 0x20202020
  4191a4:	20 20 73 69 	.word 0x20207369
  4191a8:	6e 20 66 69 	.word 0x6e206669
  4191ac:	63 68 65 72 	.word 0x63686572
  4191b0:	6f 73 21 00 	.word 0x6f732100
  4191b4:	52 65 73 65 	.word 0x52657365
  4191b8:	74 00 20 20 	l.cust2 
  4191bc:	20 20 20 20 	.word 0x20202020
  4191c0:	20 20 20 20 	.word 0x20202020
  4191c4:	20 20 20 20 	.word 0x20202020
  4191c8:	20 73 69 00 	.word 0x20736900
  4191cc:	20 20 20 20 	.word 0x20202020
  4191d0:	20 20 20 20 	.word 0x20202020
  4191d4:	20 20 20 20 	.word 0x20202020
  4191d8:	20 20 20 6e 	.word 0x2020206e
  4191dc:	6f 00 20 20 	.word 0x6f002020
  4191e0:	20 52 65 63 	.word 0x20526563
  4191e4:	6f 6e 66 69 	.word 0x6f6e6669
  4191e8:	67 75 72 61 	.word 0x67757261
  4191ec:	72 20 73 69 	l.cust1 
  4191f0:	73 74 65 6d 	l.cust1 
  4191f4:	61 3f 00 47 	.word 0x613f0047
  4191f8:	75 61 72 64 	l.cust2 
  4191fc:	61 72 00 43 	.word 0x61720043
  419200:	6f 6e 66 69 	.word 0x6f6e6669
  419204:	67 75 72 61 	.word 0x67757261
  419208:	74 69 6f 6e 	l.cust2 
  41920c:	20 66 69 6c 	.word 0x2066696c
  419210:	65 20 6e 6f 	.word 0x65206e6f
  419214:	74 20 66 6f 	l.cust2 
  419218:	75 6e 64 21 	l.cust2 
  41921c:	0d 00 54 72 	l.bnf 442e3e4 <__stack+0x3fae3e8>
  419220:	79 69 6e 67 	l.cust3 
  419224:	20 74 6f 20 	.word 0x20746f20
  419228:	63 72 65 61 	.word 0x63726561
  41922c:	74 65 20 61 	l.cust2 
  419230:	20 6e 65 77 	.word 0x206e6577
  419234:	20 6f 6e 65 	.word 0x206f6e65
  419238:	2e 2e 2e 0d 	.word 0x2e2e2e0d
  41923c:	00 46 69 6c 	l.j 15b37ec <__stack+0x11337f0>
  419240:	65 20 63 72 	.word 0x65206372
  419244:	65 61 74 65 	.word 0x65617465
  419248:	64 2e 0d 00 	.word 0x642e0d00
  41924c:	54 72 79 69 	.word 0x54727969
  419250:	6e 67 20 74 	.word 0x6e672074
  419254:	6f 20 77 72 	.word 0x6f207772
  419258:	69 74 65 20 	.word 0x69746520
  41925c:	6e 65 77 20 	.word 0x6e657720
  419260:	64 61 74 61 	.word 0x64617461
  419264:	2e 2e 2e 0d 	.word 0x2e2e2e0d
  419268:	00 46 69 6c 	l.j 15b3818 <__stack+0x113381c>
  41926c:	65 20 77 72 	.word 0x65207772
  419270:	69 74 74 65 	.word 0x69747465
  419274:	6e 20 73 75 	.word 0x6e207375
  419278:	63 63 65 73 	.word 0x63636573
  41927c:	73 66 75 6c 	l.cust1 
  419280:	6c 79 2e 0d 	.word 0x6c792e0d
  419284:	00 46 69 6c 	l.j 15b3834 <__stack+0x1133838>
  419288:	65 20 77 72 	.word 0x65207772
  41928c:	69 74 65 20 	.word 0x69746520
  419290:	66 61 69 6c 	.word 0x6661696c
  419294:	65 64 21 0d 	.word 0x6564210d
  419298:	00 46 69 6c 	l.j 15b3848 <__stack+0x113384c>
  41929c:	65 20 63 72 	.word 0x65206372
  4192a0:	65 61 74 69 	.word 0x65617469
  4192a4:	6f 6e 20 66 	.word 0x6f6e2066
  4192a8:	61 69 6c 65 	.word 0x61696c65
  4192ac:	64 21 0d 00 	.word 0x64210d00
  4192b0:	20 20 20 20 	.word 0x20202020
  4192b4:	20 20 20 20 	.word 0x20202020
  4192b8:	20 20 20 20 	.word 0x20202020
  4192bc:	20 20 20 20 	.word 0x20202020
  4192c0:	20 20 20 20 	.word 0x20202020
  4192c4:	20 20 20 20 	.word 0x20202020
  4192c8:	20 20 20 20 	.word 0x20202020
  4192cc:	20 20 20 20 	.word 0x20202020
  4192d0:	4d 69 6e 69 	l.maci r9,0x6e69
  4192d4:	6d 69 67 27 	.word 0x6d696727
  4192d8:	73 20 70 72 	l.cust1 
  4192dc:	6f 63 65 73 	.word 0x6f636573
  4192e0:	73 6f 72 20 	l.cust1 
  4192e4:	63 6f 72 65 	.word 0x636f7265
  4192e8:	20 63 61 6e 	.word 0x2063616e
  4192ec:	20 65 6d 75 	.word 0x20656d75
  4192f0:	6c 61 74 65 	.word 0x6c617465
  4192f4:	20 61 20 36 	.word 0x20612036
  4192f8:	38 30 30 30 	.word 0x38303030
  4192fc:	20 6f 72 20 	.word 0x206f7220
  419300:	36 38 30 32 	.word 0x36383032
  419304:	30 20 70 72 	.word 0x30207072
  419308:	6f 63 65 73 	.word 0x6f636573
  41930c:	73 6f 72 20 	l.cust1 
  419310:	28 74 68 6f 	lv.sra.h r3,r20,r13
  419314:	75 67 68 20 	l.cust2 
  419318:	74 68 65 20 	l.cust2 
  41931c:	36 38 30 32 	.word 0x36383032
  419320:	30 20 6d 6f 	.word 0x30206d6f
  419324:	64 65 20 69 	.word 0x64652069
  419328:	73 20 73 74 	l.cust1 
  41932c:	69 6c 6c 20 	.word 0x696c6c20
  419330:	65 78 70 65 	.word 0x65787065
  419334:	72 69 6d 65 	l.cust1 
  419338:	6e 74 61 6c 	.word 0x6e74616c
  41933c:	2e 29 20 20 	.word 0x2e292020
  419340:	49 66 20 79 	l.jalr r4
  419344:	6f 75 27 72 	.word 0x6f752772
  419348:	65 20 72 75 	.word 0x65207275
  41934c:	6e 6e 69 6e 	.word 0x6e6e696e
  419350:	67 20 73 6f 	.word 0x6720736f
  419354:	66 74 77 61 	.word 0x66747761
  419358:	72 65 20 62 	l.cust1 
  41935c:	75 69 6c 74 	l.cust2 
  419360:	20 66 6f 72 	.word 0x20666f72
  419364:	20 36 38 30 	.word 0x20363830
  419368:	30 30 2c 20 	.word 0x30302c20
  41936c:	74 68 65 72 	l.cust2 
  419370:	65 27 73 20 	.word 0x65277320
  419374:	6e 6f 20 61 	.word 0x6e6f2061
  419378:	64 76 61 6e 	.word 0x6476616e
  41937c:	74 61 67 65 	l.cust2 
  419380:	20 74 6f 20 	.word 0x20746f20
  419384:	75 73 69 6e 	l.cust2 
  419388:	67 20 74 68 	.word 0x67207468
  41938c:	65 20 36 38 	.word 0x65203638
  419390:	30 32 30 20 	.word 0x30323020
  419394:	6d 6f 64 65 	.word 0x6d6f6465
  419398:	2c 20 73 69 	.word 0x2c207369
  41939c:	6e 63 65 20 	.word 0x6e636520
  4193a0:	74 68 65 20 	l.cust2 
  4193a4:	36 38 30 30 	.word 0x36383030
  4193a8:	30 20 65 6d 	.word 0x3020656d
  4193ac:	75 6c 61 74 	l.cust2 
  4193b0:	69 6f 6e 20 	.word 0x696f6e20
  4193b4:	72 75 6e 73 	l.cust1 
  4193b8:	20 6a 75 73 	.word 0x206a7573
  4193bc:	74 20 61 73 	l.cust2 
  4193c0:	20 66 61 73 	.word 0x20666173
  4193c4:	74 2e 00 43 	l.cust2 
  4193c8:	68 69 70 73 	.word 0x68697073
  4193cc:	65 74 00 20 	.word 0x65740020
  4193d0:	20 20 20 20 	.word 0x20202020
  4193d4:	20 20 20 20 	.word 0x20202020
  4193d8:	43 50 55 20 	.word 0x43505520
  4193dc:	3a 20 00 20 	.word 0x3a200020
  4193e0:	20 20 20 20 	.word 0x20202020
  4193e4:	20 20 56 69 	.word 0x20205669
  4193e8:	64 65 6f 20 	.word 0x64656f20
  4193ec:	3a 20 00 20 	.word 0x3a200020
  4193f0:	20 20 20 20 	.word 0x20202020
  4193f4:	43 68 69 70 	.word 0x43686970
  4193f8:	73 65 74 20 	l.cust1 
  4193fc:	3a 20 00 20 	.word 0x3a200020
  419400:	20 20 20 20 	.word 0x20202020
  419404:	20 20 20 20 	.word 0x20202020
  419408:	20 20 20 20 	.word 0x20202020
  41940c:	20 20 20 20 	.word 0x20202020
  419410:	20 20 20 20 	.word 0x20202020
  419414:	20 20 20 20 	.word 0x20202020
  419418:	20 20 20 20 	.word 0x20202020
  41941c:	20 20 20 4d 	.word 0x2020204d
  419420:	69 6e 69 6d 	.word 0x696e696d
  419424:	69 67 20 63 	.word 0x69672063
  419428:	61 6e 20 6d 	.word 0x616e206d
  41942c:	61 6b 65 20 	.word 0x616b6520
  419430:	75 73 65 20 	l.cust2 
  419434:	6f 66 20 75 	.word 0x6f662075
  419438:	70 20 74 6f 	l.cust1 
  41943c:	20 32 20 6d 	.word 0x2032206d
  419440:	65 67 61 62 	.word 0x65676162
  419444:	79 74 65 73 	l.cust3 
  419448:	20 6f 66 20 	.word 0x206f6620
  41944c:	43 68 69 70 	.word 0x43686970
  419450:	20 52 41 4d 	.word 0x2052414d
  419454:	2c 20 75 70 	.word 0x2c207570
  419458:	20 74 6f 20 	.word 0x20746f20
  41945c:	31 2e 35 20 	.word 0x312e3520
  419460:	6d 65 67 61 	.word 0x6d656761
  419464:	62 79 74 65 	.word 0x62797465
  419468:	73 20 6f 66 	l.cust1 
  41946c:	20 53 6c 6f 	.word 0x20536c6f
  419470:	77 20 52 41 	l.cust2 
  419474:	4d 20 28 41 	l.maci r0,0x2841
  419478:	35 30 30 20 	.word 0x35303020
  41947c:	54 72 61 70 	.word 0x54726170
  419480:	64 6f 6f 72 	.word 0x646f6f72
  419484:	20 52 41 4d 	.word 0x2052414d
  419488:	29 2c 20 61 	lv.pack.h r9,r12,r4
  41948c:	6e 64 20 75 	.word 0x6e642075
  419490:	70 20 74 6f 	l.cust1 
  419494:	20 38 20 6d 	.word 0x2038206d
  419498:	65 67 61 62 	.word 0x65676162
  41949c:	79 74 65 73 	l.cust3 
  4194a0:	20 6f 66 20 	.word 0x206f6620
  4194a4:	74 72 75 65 	l.cust2 
  4194a8:	20 46 61 73 	.word 0x20466173
  4194ac:	74 20 52 41 	l.cust2 
  4194b0:	4d 2e 20 20 	l.maci r14,0x2020
  4194b4:	54 6f 20 75 	.word 0x546f2075
  4194b8:	73 65 20 74 	l.cust1 
  4194bc:	68 65 20 41 	.word 0x68652041
  4194c0:	63 74 69 6f 	.word 0x6374696f
  4194c4:	6e 20 52 65 	.word 0x6e205265
  4194c8:	70 6c 61 79 	l.cust1 
  4194cc:	20 66 65 61 	.word 0x20666561
  4194d0:	74 75 72 65 	l.cust2 
  4194d4:	20 79 6f 75 	.word 0x20796f75
  4194d8:	20 77 69 6c 	.word 0x2077696c
  4194dc:	6c 20 6e 65 	.word 0x6c206e65
  4194e0:	65 64 20 61 	.word 0x65642061
  4194e4:	6e 20 41 63 	.word 0x6e204163
  4194e8:	74 69 6f 6e 	l.cust2 
  4194ec:	20 52 65 70 	.word 0x20526570
  4194f0:	6c 61 79 20 	.word 0x6c617920
  4194f4:	33 20 52 4f 	.word 0x3320524f
  4194f8:	4d 20 66 69 	l.maci r0,0x6669
  4194fc:	6c 65 20 6f 	.word 0x6c65206f
  419500:	6e 20 74 68 	.word 0x6e207468
  419504:	65 20 53 44 	.word 0x65205344
  419508:	20 63 61 72 	.word 0x20636172
  41950c:	64 2c 20 6e 	.word 0x642c206e
  419510:	61 6d 65 64 	.word 0x616d6564
  419514:	20 41 52 33 	.word 0x20415233
  419518:	2e 52 4f 4d 	.word 0x2e524f4d
  41951c:	2e 20 20 59 	.word 0x2e202059
  419520:	6f 75 20 77 	.word 0x6f752077
  419524:	69 6c 6c 20 	.word 0x696c6c20
  419528:	61 6c 73 6f 	.word 0x616c736f
  41952c:	20 6e 65 65 	.word 0x206e6565
  419530:	64 20 74 6f 	.word 0x6420746f
  419534:	20 73 65 74 	.word 0x20736574
  419538:	20 46 61 73 	.word 0x20466173
  41953c:	74 20 52 41 	l.cust2 
  419540:	4d 20 74 6f 	l.maci r0,0x746f
  419544:	20 6e 6f 20 	.word 0x206e6f20
  419548:	6d 6f 72 65 	.word 0x6d6f7265
  41954c:	20 74 68 61 	.word 0x20746861
  419550:	6e 20 32 20 	.word 0x6e203220
  419554:	6d 65 67 61 	.word 0x6d656761
  419558:	62 79 74 65 	.word 0x62797465
  41955c:	73 2e 00 4d 	l.cust1 
  419560:	65 6d 6f 72 	.word 0x656d6f72
  419564:	69 61 00 20 	.word 0x69610020
  419568:	20 20 20 20 	.word 0x20202020
  41956c:	20 43 48 49 	.word 0x20434849
  419570:	50 20 3a 20 	.word 0x50203a20
  419574:	00 20 20 20 	l.j c215f4 <__stack+0x7a15f8>
  419578:	20 20 20 53 	.word 0x20202053
  41957c:	4c 4f 57 20 	l.maci r15,0x5720
  419580:	3a 20 00 20 	.word 0x3a200020
  419584:	20 20 20 20 	.word 0x20202020
  419588:	20 46 41 53 	.word 0x20464153
  41958c:	54 20 3a 20 	.word 0x54203a20
  419590:	00 20 20 20 	l.j c21610 <__stack+0x7a1614>
  419594:	20 20 20 52 	.word 0x20202052
  419598:	4f 4d 20 20 	l.maci r13,0x2020
  41959c:	3a 20 00 20 	.word 0x3a200020
  4195a0:	20 20 20 20 	.word 0x20202020
  4195a4:	20 41 52 33 	.word 0x20415233
  4195a8:	20 20 3a 20 	.word 0x20203a20
  4195ac:	00 20 20 20 	l.j c2162c <__stack+0x7a1630>
  4195b0:	20 20 20 20 	.word 0x20202020
  4195b4:	20 20 20 20 	.word 0x20202020
  4195b8:	20 20 20 20 	.word 0x20202020
  4195bc:	20 20 20 20 	.word 0x20202020
  4195c0:	20 20 20 20 	.word 0x20202020
  4195c4:	20 20 20 20 	.word 0x20202020
  4195c8:	20 20 20 20 	.word 0x20202020
  4195cc:	20 4d 69 6e 	.word 0x204d696e
  4195d0:	69 6d 69 67 	.word 0x696d6967
  4195d4:	20 63 61 6e 	.word 0x2063616e
  4195d8:	20 65 6d 75 	.word 0x20656d75
  4195dc:	6c 61 74 65 	.word 0x6c617465
  4195e0:	20 61 6e 20 	.word 0x20616e20
  4195e4:	41 36 30 30 	.word 0x41363030
  4195e8:	20 49 44 45 	.word 0x20494445
  4195ec:	20 68 61 72 	.word 0x20686172
  4195f0:	64 64 69 73 	.word 0x64646973
  4195f4:	6b 20 69 6e 	.word 0x6b20696e
  4195f8:	74 65 72 66 	l.cust2 
  4195fc:	61 63 65 2e 	.word 0x6163652e
  419600:	20 20 54 68 	.word 0x20205468
  419604:	65 20 65 6d 	.word 0x6520656d
  419608:	75 6c 61 74 	l.cust2 
  41960c:	69 6f 6e 20 	.word 0x696f6e20
  419610:	63 61 6e 20 	.word 0x63616e20
  419614:	6d 61 6b 65 	.word 0x6d616b65
  419618:	20 75 73 65 	.word 0x20757365
  41961c:	20 6f 66 20 	.word 0x206f6620
  419620:	4d 69 6e 69 	l.maci r9,0x6e69
  419624:	6d 69 67 2d 	.word 0x6d69672d
  419628:	73 74 79 6c 	l.cust1 
  41962c:	65 20 68 61 	.word 0x65206861
  419630:	72 64 66 69 	l.cust1 
  419634:	6c 65 73 20 	.word 0x6c657320
  419638:	28 63 6f 6d 	lv.srl.h r3,r3,r13
  41963c:	70 6c 65 74 	l.cust1 
  419640:	65 20 64 69 	.word 0x65206469
  419644:	73 6b 20 69 	l.cust1 
  419648:	6d 61 67 65 	.word 0x6d616765
  41964c:	73 29 20 6f 	l.cust1 
  419650:	72 20 55 41 	l.cust1 
  419654:	45 2d 73 74 	l.jr r14
  419658:	79 6c 65 20 	l.cust3 
  41965c:	68 61 72 64 	.word 0x68617264
  419660:	66 69 6c 65 	.word 0x66696c65
  419664:	73 20 28 66 	l.cust1 
  419668:	69 6c 65 73 	.word 0x696c6573
  41966c:	79 73 74 65 	l.cust3 
  419670:	6d 20 69 6d 	.word 0x6d20696d
  419674:	61 67 65 73 	.word 0x61676573
  419678:	20 77 69 74 	.word 0x20776974
  41967c:	68 20 6e 6f 	.word 0x68206e6f
  419680:	20 70 61 72 	.word 0x20706172
  419684:	74 69 74 69 	l.cust2 
  419688:	6f 6e 20 74 	.word 0x6f6e2074
  41968c:	61 62 6c 65 	.word 0x61626c65
  419690:	29 2e 20 20 	lv.any_eq.b r9,r14,r4
  419694:	49 74 20 69 	l.jalr r4
  419698:	73 20 61 6c 	l.cust1 
  41969c:	73 6f 20 70 	l.cust1 
  4196a0:	6f 73 73 69 	.word 0x6f737369
  4196a4:	62 6c 65 20 	.word 0x626c6520
  4196a8:	74 6f 20 75 	l.cust2 
  4196ac:	73 65 20 65 	l.cust1 
  4196b0:	69 74 68 65 	.word 0x69746865
  4196b4:	72 20 74 68 	l.cust1 
  4196b8:	65 20 65 6e 	.word 0x6520656e
  4196bc:	74 69 72 65 	l.cust2 
  4196c0:	20 53 44 20 	.word 0x20534420
  4196c4:	63 61 72 64 	.word 0x63617264
  4196c8:	20 6f 72 20 	.word 0x206f7220
  4196cc:	61 6e 20 69 	.word 0x616e2069
  4196d0:	6e 64 69 76 	.word 0x6e646976
  4196d4:	69 64 75 61 	.word 0x69647561
  4196d8:	6c 20 70 61 	.word 0x6c207061
  4196dc:	72 74 69 74 	l.cust1 
  4196e0:	69 6f 6e 20 	.word 0x696f6e20
  4196e4:	61 73 20 61 	.word 0x61732061
  4196e8:	6e 20 65 6d 	.word 0x6e20656d
  4196ec:	75 6c 61 74 	l.cust2 
  4196f0:	65 64 20 68 	.word 0x65642068
  4196f4:	61 72 64 64 	.word 0x61726464
  4196f8:	69 73 6b 2e 	.word 0x69736b2e
  4196fc:	00 44 69 73 	l.j 1533cc8 <__stack+0x10b3ccc>
  419700:	63 6f 73 44 	.word 0x636f7344
  419704:	75 72 6f 73 	l.cust2 
  419708:	00 20 20 20 	l.j c21788 <__stack+0x7a178c>
  41970c:	41 36 30 30 	.word 0x41363030
  419710:	20 49 44 45 	.word 0x20494445
  419714:	20 3a 20 00 	.word 0x203a2000
  419718:	20 4d 61 73 	.word 0x204d6173
  41971c:	74 65 72 20 	l.cust2 
  419720:	3a 20 00 48 	.word 0x3a200048
  419724:	61 72 64 66 	.word 0x61726466
  419728:	69 6c 65 20 	.word 0x696c6520
  41972c:	28 66 69 6c 	lv.srl.b r3,r6,r13
  419730:	65 73 79 73 	.word 0x65737973
  419734:	29 00 20 20 	lv.any_eq.b r8,r0,r4
  419738:	20 20 20 20 	.word 0x20202020
  41973c:	20 2a 2a 20 	.word 0x202a2a20
  419740:	66 69 63 68 	.word 0x66696368
  419744:	65 72 6f 20 	.word 0x65726f20
  419748:	6e 6f 20 65 	.word 0x6e6f2065
  41974c:	78 69 73 74 	l.cust3 
  419750:	65 20 2a 2a 	.word 0x65202a2a
  419754:	00 20 20 53 	l.j c218a0 <__stack+0x7a18a4>
  419758:	6c 61 76 65 	.word 0x6c617665
  41975c:	20 3a 20 00 	.word 0x203a2000
  419760:	43 6f 6e 66 	.word 0x436f6e66
  419764:	69 72 6d 61 	.word 0x69726d61
  419768:	72 00 20 20 	l.cust1 
  41976c:	20 20 43 61 	.word 0x20204361
  419770:	6d 62 69 61 	.word 0x6d626961
  419774:	6e 64 6f 20 	.word 0x6e646f20
  419778:	63 6f 6e 66 	.word 0x636f6e66
  41977c:	69 67 75 72 	.word 0x69677572
  419780:	61 63 69 6f 	.word 0x6163696f
  419784:	6e 00 20 20 	.word 0x6e002020
  419788:	20 20 20 20 	.word 0x20202020
  41978c:	72 65 71 75 	l.cust1 
  419790:	69 65 72 65 	.word 0x69657265
  419794:	20 72 65 73 	.word 0x20726573
  419798:	65 74 2e 00 	.word 0x65742e00
  41979c:	20 20 20 20 	.word 0x20202020
  4197a0:	20 20 20 52 	.word 0x20202052
  4197a4:	65 69 6e 69 	.word 0x65696e69
  4197a8:	63 69 61 72 	.word 0x63696172
  4197ac:	20 4d 69 6e 	.word 0x204d696e
  4197b0:	69 6d 69 67 	.word 0x696d6967
  4197b4:	3f 00 57 61 	.word 0x3f005761
  4197b8:	72 6e 69 6e 	l.cust1 
  4197bc:	67 00 20 4e 	.word 0x6700204e
  4197c0:	6f 20 70 61 	.word 0x6f207061
  4197c4:	72 74 69 74 	l.cust1 
  4197c8:	69 6f 6e 20 	.word 0x696f6e20
  4197cc:	74 61 62 6c 	l.cust2 
  4197d0:	65 20 66 6f 	.word 0x6520666f
  4197d4:	75 6e 64 20 	l.cust2 
  4197d8:	2d 00 20 48 	.word 0x2d002048
  4197dc:	61 72 64 66 	.word 0x61726466
  4197e0:	69 6c 65 20 	.word 0x696c6520
  4197e4:	69 6d 61 67 	.word 0x696d6167
  4197e8:	65 20 6d 61 	.word 0x65206d61
  4197ec:	79 20 6e 65 	l.cust3 
  4197f0:	65 64 00 20 	.word 0x65640020
  4197f4:	74 6f 20 62 	l.cust2 
  4197f8:	65 20 70 72 	.word 0x65207072
  4197fc:	65 70 70 65 	.word 0x65707065
  419800:	64 20 77 69 	.word 0x64207769
  419804:	74 68 20 48 	l.cust2 
  419808:	44 54 6f 6f 	l.jr r13
  41980c:	6c 62 6f 78 	.word 0x6c626f78
  419810:	2c 00 20 74 	.word 0x2c002074
  419814:	68 65 6e 20 	.word 0x68656e20
  419818:	66 6f 72 6d 	.word 0x666f726d
  41981c:	61 74 74 65 	.word 0x61747465
  419820:	64 2e 00 20 	.word 0x642e0020
  419824:	20 20 20 20 	.word 0x20202020
  419828:	20 20 20 20 	.word 0x20202020
  41982c:	20 20 20 20 	.word 0x20202020
  419830:	4f 4b 00 20 	l.maci r11,0x20
  419834:	4e 6f 20 66 	l.maci r15,0x2066
  419838:	69 6c 65 73 	.word 0x696c6573
  41983c:	79 73 74 65 	l.cust3 
  419840:	6d 20 72 65 	.word 0x6d207265
  419844:	63 6f 67 6e 	.word 0x636f676e
  419848:	69 73 65 64 	.word 0x69736564
  41984c:	2e 00 20 48 	.word 0x2e002048
  419850:	61 72 64 66 	.word 0x61726466
  419854:	69 6c 65 20 	.word 0x696c6520
  419858:	6d 61 79 20 	.word 0x6d617920
  41985c:	6e 65 65 64 	.word 0x6e656564
  419860:	20 66 6f 72 	.word 0x20666f72
  419864:	6d 61 74 74 	.word 0x6d617474
  419868:	69 6e 67 00 	.word 0x696e6700
  41986c:	20 28 6f 72 	.word 0x20286f72
  419870:	20 6d 61 79 	.word 0x206d6179
  419874:	20 73 69 6d 	.word 0x2073696d
  419878:	70 6c 79 20 	l.cust1 
  41987c:	62 65 20 61 	.word 0x62652061
  419880:	6e 00 20 75 	.word 0x6e002075
  419884:	6e 72 65 63 	.word 0x6e726563
  419888:	6f 67 6e 69 	.word 0x6f676e69
  41988c:	73 65 64 20 	l.cust1 
  419890:	66 69 6c 65 	.word 0x66696c65
  419894:	73 79 73 74 	l.cust1 
  419898:	65 6d 29 00 	.word 0x656d2900
  41989c:	20 20 20 20 	.word 0x20202020
  4198a0:	20 20 20 20 	.word 0x20202020
  4198a4:	20 20 20 20 	.word 0x20202020
  4198a8:	20 20 20 20 	.word 0x20202020
  4198ac:	20 20 20 20 	.word 0x20202020
  4198b0:	20 20 20 20 	.word 0x20202020
  4198b4:	20 20 20 20 	.word 0x20202020
  4198b8:	20 20 20 20 	.word 0x20202020
  4198bc:	4d 69 6e 69 	l.maci r9,0x6e69
  4198c0:	6d 69 67 27 	.word 0x6d696727
  4198c4:	73 20 76 69 	l.cust1 
  4198c8:	64 65 6f 20 	.word 0x64656f20
  4198cc:	66 65 61 74 	.word 0x66656174
  4198d0:	75 72 65 73 	l.cust2 
  4198d4:	20 69 6e 63 	.word 0x20696e63
  4198d8:	6c 75 64 65 	.word 0x6c756465
  4198dc:	20 61 20 62 	.word 0x20612062
  4198e0:	6c 75 72 20 	.word 0x6c757220
  4198e4:	66 69 6c 74 	.word 0x66696c74
  4198e8:	65 72 2c 20 	.word 0x65722c20
  4198ec:	74 6f 20 73 	l.cust2 
  4198f0:	69 6d 75 6c 	.word 0x696d756c
  4198f4:	61 74 65 20 	.word 0x61746520
  4198f8:	74 68 65 20 	l.cust2 
  4198fc:	70 6f 6f 72 	l.cust1 
  419900:	65 72 20 70 	.word 0x65722070
  419904:	69 63 74 75 	.word 0x69637475
  419908:	72 65 20 71 	l.cust1 
  41990c:	75 61 6c 69 	l.cust2 
  419910:	74 79 20 6f 	l.cust2 
  419914:	6e 20 6f 6c 	.word 0x6e206f6c
  419918:	64 65 72 20 	.word 0x64657220
  41991c:	6d 6f 6e 69 	.word 0x6d6f6e69
  419920:	74 6f 72 73 	l.cust2 
  419924:	2c 20 61 6e 	.word 0x2c20616e
  419928:	64 20 61 6c 	.word 0x6420616c
  41992c:	73 6f 20 73 	l.cust1 
  419930:	63 61 6e 6c 	.word 0x63616e6c
  419934:	69 6e 65 20 	.word 0x696e6520
  419938:	67 65 6e 65 	.word 0x67656e65
  41993c:	72 61 74 69 	l.cust1 
  419940:	6f 6e 20 74 	.word 0x6f6e2074
  419944:	6f 20 73 69 	.word 0x6f207369
  419948:	6d 75 6c 61 	.word 0x6d756c61
  41994c:	74 65 20 74 	l.cust2 
  419950:	68 65 20 61 	.word 0x68652061
  419954:	70 70 65 61 	l.cust1 
  419958:	72 61 6e 63 	l.cust1 
  41995c:	65 20 6f 66 	.word 0x65206f66
  419960:	20 61 20 73 	.word 0x20612073
  419964:	63 72 65 65 	.word 0x63726565
  419968:	6e 20 77 69 	.word 0x6e207769
  41996c:	74 68 20 6c 	l.cust2 
  419970:	6f 77 20 76 	.word 0x6f772076
  419974:	65 72 74 69 	.word 0x65727469
  419978:	63 61 6c 20 	.word 0x63616c20
  41997c:	72 65 73 6f 	l.cust1 
  419980:	6c 75 74 69 	.word 0x6c757469
  419984:	6f 6e 2e 00 	.word 0x6f6e2e00
  419988:	56 69 64 65 	.word 0x56696465
  41998c:	6f 00 20 20 	.word 0x6f002020
  419990:	20 46 69 6c 	.word 0x2046696c
  419994:	74 72 6f 20 	l.cust2 
  419998:	4c 6f 72 65 	l.maci r15,0x7265
  41999c:	73 20 3a 20 	l.cust1 
  4199a0:	00 20 20 20 	l.j c21a20 <__stack+0x7a1a24>
  4199a4:	46 69 6c 74 	l.jr r13
  4199a8:	72 6f 20 48 	l.cust1 
  4199ac:	69 72 65 73 	.word 0x69726573
  4199b0:	20 3a 20 00 	.word 0x203a2000
  4199b4:	20 20 20 53 	.word 0x20202053
  4199b8:	63 61 6e 6c 	.word 0x63616e6c
  4199bc:	69 6e 65 73 	.word 0x696e6573
  4199c0:	20 20 20 20 	.word 0x20202020
  4199c4:	3a 20 00 20 	.word 0x3a200020
  4199c8:	20 20 20 20 	.word 0x20202020
  4199cc:	20 20 52 65 	.word 0x20205265
  4199d0:	63 61 72 67 	.word 0x63617267
  4199d4:	61 72 20 4b 	.word 0x6172204b
  4199d8:	69 63 6b 73 	.word 0x69636b73
  4199dc:	74 61 72 74 	l.cust2 
  4199e0:	3f 00 6e 6f 	.word 0x3f006e6f
  4199e4:	6e 65 00 48 	.word 0x6e650048
  4199e8:	4f 52 49 5a 	l.maci r18,0x495a
  4199ec:	4f 4e 54 41 	l.maci r14,0x5441
  4199f0:	4c 00 56 45 	l.maci r0,0x5645
  4199f4:	52 54 49 43 	.word 0x52544943
  4199f8:	41 4c 00 48 	.word 0x414c0048
  4199fc:	2b 56 00 30 	lv.add.b r26,r22,r0
  419a00:	2e 35 20 4d 	.word 0x2e35204d
  419a04:	42 00 31 2e 	.word 0x4200312e
  419a08:	30 20 4d 42 	.word 0x30204d42
  419a0c:	00 31 2e 35 	l.j 10652e0 <__stack+0xbe52e4>
  419a10:	20 4d 42 00 	.word 0x204d4200
  419a14:	32 2e 30 20 	.word 0x322e3020
  419a18:	4d 42 00 6e 	l.maci r2,0x6e
  419a1c:	6f 6e 65 20 	.word 0x6f6e6520
  419a20:	20 00 64 69 	l.sys 0x6469
  419a24:	6d 00 62 6c 	.word 0x6d00626c
  419a28:	61 63 6b 00 	.word 0x61636b00
  419a2c:	34 2e 30 20 	.word 0x342e3020
  419a30:	4d 42 00 38 	l.maci r2,0x38
  419a34:	2e 30 20 4d 	.word 0x2e30204d
  419a38:	42 00 36 38 	.word 0x42003638
  419a3c:	30 30 30 20 	.word 0x30303020
  419a40:	00 36 38 30 	l.j 11a7b00 <__stack+0xd27b04>
  419a44:	31 30 00 2d 	.word 0x3130002d
  419a48:	2d 2d 2d 2d 	.word 0x2d2d2d2d
  419a4c:	00 36 38 30 	l.j 11a7b0c <__stack+0xd27b10>
  419a50:	32 30 00 44 	.word 0x32300044
  419a54:	69 73 61 62 	.word 0x69736162
  419a58:	6c 65 64 00 	.word 0x6c656400
  419a5c:	48 61 72 64 	l.jalr r14
  419a60:	66 69 6c 65 	.word 0x66696c65
  419a64:	20 28 64 69 	.word 0x20286469
  419a68:	73 6b 20 69 	l.cust1 
  419a6c:	6d 67 29 00 	.word 0x6d672900
  419a70:	4d 4d 43 2f 	l.maci r13,0x432f
  419a74:	53 44 20 63 	.word 0x53442063
  419a78:	61 72 64 00 	.word 0x61726400
  419a7c:	4d 4d 43 2f 	l.maci r13,0x432f
  419a80:	53 44 20 70 	.word 0x53442070
  419a84:	61 72 74 69 	.word 0x61727469
  419a88:	74 69 6f 6e 	l.cust2 
  419a8c:	20 31 00 4d 	.word 0x2031004d
  419a90:	4d 43 2f 53 	l.maci r3,0x2f53
  419a94:	44 20 70 61 	l.jr r14
  419a98:	72 74 69 74 	l.cust1 
  419a9c:	69 6f 6e 20 	.word 0x696f6e20
  419aa0:	32 00 4d 4d 	.word 0x32004d4d
  419aa4:	43 2f 53 44 	.word 0x432f5344
  419aa8:	20 70 61 72 	.word 0x20706172
  419aac:	74 69 74 69 	l.cust2 
  419ab0:	6f 6e 20 33 	.word 0x6f6e2033
  419ab4:	00 4d 4d 43 	l.j 176cfc0 <__stack+0x12ecfc4>
  419ab8:	2f 53 44 20 	.word 0x2f534420
  419abc:	70 61 72 74 	l.cust1 
  419ac0:	69 74 69 6f 	.word 0x6974696f
  419ac4:	6e 20 34 00 	.word 0x6e203400
  419ac8:	4f 43 53 2d 	l.maci r3,0x532d
  419acc:	41 35 30 30 	.word 0x41353030
  419ad0:	00 4f 43 53 	l.j 17ea81c <__stack+0x136a820>
  419ad4:	2d 41 31 30 	.word 0x2d413130
  419ad8:	30 30 00 45 	.word 0x30300045
  419adc:	43 53 00 41 	.word 0x43530041
  419ae0:	47 41 00 20 	l.jr r0
  419ae4:	20 20 20 20 	.word 0x20202020
  419ae8:	20 20 20 41 	.word 0x20202041
  419aec:	55 54 4f 46 	.word 0x55544f46
  419af0:	49 52 45 20 	l.jalr r8
  419af4:	4f 46 46 00 	l.maci r6,0x4600
  419af8:	20 20 20 20 	.word 0x20202020
  419afc:	20 20 20 20 	.word 0x20202020
  419b00:	41 55 54 4f 	.word 0x4155544f
  419b04:	46 49 52 45 	l.jr r10
  419b08:	20 46 41 53 	.word 0x20464153
  419b0c:	54 00 20 20 	.word 0x54002020
  419b10:	20 20 20 20 	.word 0x20202020
  419b14:	20 20 41 55 	.word 0x20204155
  419b18:	54 4f 46 49 	.word 0x544f4649
  419b1c:	52 45 20 4d 	.word 0x5245204d
  419b20:	45 44 49 55 	l.jr r9
  419b24:	4d 00 20 20 	l.maci r0,0x2020
  419b28:	20 20 20 20 	.word 0x20202020
  419b2c:	20 20 41 55 	.word 0x20204155
  419b30:	54 4f 46 49 	.word 0x544f4649
  419b34:	52 45 20 53 	.word 0x52452053
  419b38:	4c 4f 57 00 	l.maci r15,0x5700

Disassembly of section .data:

00419b3c <__data_start>:
	...
  419b44:	55 55 55 55 	.word 0x55555555
  419b48:	55 55 55 55 	.word 0x55555555
  419b4c:	2a 2a 2a 2a 	lv.any_ne.b r17,r10,r5
  419b50:	2a 2a 2a 2a 	lv.any_ne.b r17,r10,r5
  419b54:	14 14 14 14 	.word 0x14141414
  419b58:	14 14 14 14 	.word 0x14141414
	...
  419bbc:	08 08 1c 1c 	.word 0x08081c1c
  419bc0:	3e 3e 7f 7f 	.word 0x3e3e7f7f
  419bc4:	7f 7f 3e 3e 	l.cust4 
  419bc8:	1c 1c 08 08 	.word 0x1c1c0808
  419bcc:	00 10 18 7c 	l.j 81fdbc <__stack+0x39fdc0>
  419bd0:	7c 18 10 00 	l.cust4 
  419bd4:	00 10 30 7c 	l.j 825dc4 <__stack+0x3a5dc8>
  419bd8:	7c 30 10 00 	l.cust4 
  419bdc:	1c 1c 1c 1c 	.word 0x1c1c1c1c
  419be0:	1c 1c 00 00 	.word 0x1c1c0000
  419be4:	00 00 1c 1c 	l.j 420c54 <lfn.26344+0x9c>
  419be8:	1c 1c 1c 1c 	.word 0x1c1c1c1c
  419bec:	00 7c 7c 38 	l.j 2338ccc <__stack+0x1eb8cd0>
  419bf0:	38 10 10 00 	.word 0x38101000
  419bf4:	70 7c 72 72 	l.cust1 
  419bf8:	72 7c 70 00 	l.cust1 
  419bfc:	70 70 70 70 	l.cust1 
  419c00:	7c 72 02 0c 	l.cust4 
	...
  419c44:	00 00 00 5f 	l.j 419dc0 <__data_start+0x284>
  419c48:	5f 00 00 00 	.word 0x5f000000
  419c4c:	00 03 03 00 	l.j 4da84c <__stack+0x5a850>
  419c50:	03 03 00 00 	l.j fc4d9c50 <__stack+0xfc059c54>
  419c54:	14 7f 7f 14 	.word 0x147f7f14
  419c58:	7f 7f 14 00 	l.cust4 
  419c5c:	00 24 2e 6b 	l.j d25608 <__stack+0x8a560c>
  419c60:	6b 3a 12 00 	.word 0x6b3a1200
  419c64:	4c 6a 36 18 	l.maci r10,0x3618
  419c68:	6c 56 32 00 	.word 0x6c563200
  419c6c:	30 7e 4f 59 	.word 0x307e4f59
  419c70:	77 3a 68 40 	l.cust2 
  419c74:	00 00 04 07 	l.j 41ac90 <hdf.22483+0x398>
  419c78:	03 00 00 00 	l.j fc419c78 <__stack+0xfbf99c7c>
  419c7c:	00 00 1c 3e 	l.j 420d74 <__bss_end+0xb4>
  419c80:	63 41 00 00 	.word 0x63410000
  419c84:	00 00 41 63 	l.j 42a210 <_stack+0x8550>
  419c88:	3e 1c 00 00 	.word 0x3e1c0000
  419c8c:	08 2a 3e 1c 	.word 0x082a3e1c
  419c90:	1c 3e 2a 08 	.word 0x1c3e2a08
  419c94:	00 08 08 3e 	l.j 61bd8c <__stack+0x19bd90>
  419c98:	3e 08 08 00 	.word 0x3e080800
  419c9c:	00 00 80 e0 	l.j 43a01c <_stack+0x1835c>
  419ca0:	60 00 00 00 	.word 0x60000000
  419ca4:	00 08 08 08 	l.j 61bcc4 <__stack+0x19bcc8>
  419ca8:	08 08 08 00 	.word 0x08080800
  419cac:	00 00 00 60 	l.j 419e2c <__data_start+0x2f0>
  419cb0:	60 00 00 00 	.word 0x60000000
  419cb4:	40 60 30 18 	.word 0x40603018
  419cb8:	0c 06 03 01 	l.bnf 59a8bc <__stack+0x11a8c0>
  419cbc:	00 3e 7f 59 	l.j 13b9a20 <__stack+0xf39a24>
  419cc0:	4d 7f 3e 00 	l.maci r31,0x3e00
  419cc4:	00 04 06 7f 	l.j 51b6c0 <__stack+0x9b6c4>
  419cc8:	7f 00 00 00 	l.cust4 
  419ccc:	00 42 63 71 	l.j 14b2a90 <__stack+0x1032a94>
  419cd0:	59 4f 46 00 	.word 0x594f4600
  419cd4:	00 22 63 49 	l.j cb29f8 <__stack+0x8329fc>
  419cd8:	49 7f 36 00 	l.jalr r6
  419cdc:	18 1c 16 13 	l.movhi r0,0x1613
  419ce0:	7f 7f 10 00 	l.cust4 
  419ce4:	00 27 67 45 	l.j df39f8 <__stack+0x9739fc>
  419ce8:	45 7d 39 00 	l.jr r7
  419cec:	00 3c 7e 4b 	l.j 1339618 <__stack+0xeb961c>
  419cf0:	49 79 30 00 	l.jalr r6
  419cf4:	00 01 01 71 	l.j 45a2b8 <_stack+0x385f8>
  419cf8:	79 0f 07 00 	l.cust3 
  419cfc:	00 36 7f 49 	l.j 11b9a20 <__stack+0xd39a24>
  419d00:	49 7f 36 00 	l.jalr r6
  419d04:	00 06 4f 49 	l.j 5ada28 <__stack+0x12da2c>
  419d08:	69 3f 1e 00 	.word 0x693f1e00
  419d0c:	00 00 00 66 	l.j 419ea4 <__data_start+0x368>
  419d10:	66 00 00 00 	.word 0x66000000
  419d14:	00 00 80 e6 	l.j 43a0ac <_stack+0x183ec>
  419d18:	66 00 00 00 	.word 0x66000000
  419d1c:	00 08 08 14 	l.j 61bd6c <__stack+0x19bd70>
  419d20:	14 22 22 00 	.word 0x14222200
  419d24:	00 14 14 14 	l.j 91ed74 <__stack+0x49ed78>
  419d28:	14 14 14 00 	.word 0x14141400
  419d2c:	00 22 22 14 	l.j ca257c <__stack+0x822580>
  419d30:	14 08 08 00 	.word 0x14080800
  419d34:	00 02 03 51 	l.j 49aa78 <__stack+0x1aa7c>
  419d38:	59 0f 06 00 	.word 0x590f0600
  419d3c:	3e 7f 41 5d 	.word 0x3e7f415d
  419d40:	55 1f 1e 00 	.word 0x551f1e00
  419d44:	00 7e 7f 09 	l.j 23b9968 <__stack+0x1f3996c>
  419d48:	09 7f 7e 00 	.word 0x097f7e00
  419d4c:	00 7f 7f 49 	l.j 23f9a70 <__stack+0x1f79a74>
  419d50:	49 7f 36 00 	l.jalr r6
  419d54:	00 1c 3e 63 	l.j b296e0 <__stack+0x6a96e4>
  419d58:	41 41 41 00 	.word 0x41414100
  419d5c:	00 7f 7f 41 	l.j 23f9a60 <__stack+0x1f79a64>
  419d60:	63 3e 1c 00 	.word 0x633e1c00
  419d64:	00 7f 7f 49 	l.j 23f9a88 <__stack+0x1f79a8c>
  419d68:	49 41 41 00 	l.jalr r8
  419d6c:	00 7f 7f 09 	l.j 23f9990 <__stack+0x1f79994>
  419d70:	09 01 01 00 	.word 0x09010100
  419d74:	00 3e 7f 41 	l.j 13b9a78 <__stack+0xf39a7c>
  419d78:	49 7b 7a 00 	l.jalr r15
  419d7c:	00 7f 7f 08 	l.j 23f999c <__stack+0x1f799a0>
  419d80:	08 7f 7f 00 	.word 0x087f7f00
  419d84:	00 00 41 7f 	l.j 42a380 <_stack+0x86c0>
  419d88:	7f 41 00 00 	l.cust4 
  419d8c:	00 20 60 40 	l.j c31e8c <__stack+0x7b1e90>
  419d90:	40 7f 3f 00 	.word 0x407f3f00
  419d94:	7f 7f 08 1c 	l.cust4 
  419d98:	36 63 41 00 	.word 0x36634100
  419d9c:	00 7f 7f 40 	l.j 23f9a9c <__stack+0x1f79aa0>
  419da0:	40 40 40 00 	.word 0x40404000
  419da4:	7f 7f 06 0c 	l.cust4 
  419da8:	06 7f 7f 00 	l.jal fa3f99a8 <__stack+0xf9f799ac>
  419dac:	7f 7f 06 0c 	l.cust4 
  419db0:	18 7f 7f 00 	.word 0x187f7f00
  419db4:	00 3e 7f 41 	l.j 13b9ab8 <__stack+0xf39abc>
  419db8:	41 7f 3e 00 	.word 0x417f3e00
  419dbc:	00 7f 7f 09 	l.j 23f99e0 <__stack+0x1f799e4>
  419dc0:	09 0f 06 00 	.word 0x090f0600
  419dc4:	3e 7f 41 61 	.word 0x3e7f4161
  419dc8:	7f 7e 40 00 	l.cust4 
  419dcc:	00 7f 7f 09 	l.j 23f99f0 <__stack+0x1f799f4>
  419dd0:	19 7f 66 00 	.word 0x197f6600
  419dd4:	00 26 6f 4d 	l.j db5b08 <__stack+0x935b0c>
  419dd8:	59 7b 32 00 	.word 0x597b3200
  419ddc:	00 01 01 7f 	l.j 45a3d8 <_stack+0x38718>
  419de0:	7f 01 01 00 	l.cust4 
  419de4:	00 3f 7f 40 	l.j 13f9ae4 <__stack+0xf79ae8>
  419de8:	40 7f 3f 00 	.word 0x407f3f00
  419dec:	00 0f 3f 70 	l.j 7e9bac <__stack+0x369bb0>
  419df0:	70 3f 0f 00 	l.cust1 
  419df4:	7f 7f 30 18 	l.cust4 
  419df8:	30 7f 7f 00 	.word 0x307f7f00
  419dfc:	41 63 36 1c 	.word 0x4163361c
  419e00:	1c 36 63 41 	.word 0x1c366341
  419e04:	01 03 06 7c 	l.j 44db7f4 <__stack+0x405b7f8>
  419e08:	7c 06 03 01 	l.cust4 
  419e0c:	61 71 59 4d 	.word 0x6171594d
  419e10:	47 43 41 00 	l.jr r8
  419e14:	00 00 7f 7f 	l.j 439c10 <_stack+0x17f50>
  419e18:	41 41 00 00 	.word 0x41410000
  419e1c:	01 03 06 0c 	l.j 44db64c <__stack+0x405b650>
  419e20:	18 30 60 40 	l.movhi r1,0x6040
  419e24:	00 00 41 41 	l.j 42a328 <_stack+0x8668>
  419e28:	7f 7f 00 00 	l.cust4 
  419e2c:	08 0c 06 03 	.word 0x080c0603
  419e30:	06 0c 08 00 	l.jal f871be30 <__stack+0xf829be34>
  419e34:	80 80 80 80 	l.ld r4,0xffff8080(r0)
  419e38:	80 80 80 00 	l.ld r4,0xffff8000(r0)
  419e3c:	00 00 00 03 	l.j 419e48 <__data_start+0x30c>
  419e40:	07 04 00 00 	l.jal fc519e40 <__stack+0xfc099e44>
  419e44:	00 20 74 54 	l.j c36f94 <__stack+0x7b6f98>
  419e48:	54 7c 78 00 	.word 0x547c7800
  419e4c:	00 7f 7f 44 	l.j 23f9b5c <__stack+0x1f79b60>
  419e50:	44 7c 38 00 	l.jr r7
  419e54:	00 38 7c 44 	l.j 1238f64 <__stack+0xdb8f68>
  419e58:	44 44 00 00 	l.jr r0
  419e5c:	00 38 7c 44 	l.j 1238f6c <__stack+0xdb8f70>
  419e60:	44 7f 7f 00 	l.jr r15
  419e64:	00 38 7c 54 	l.j 1238fb4 <__stack+0xdb8fb8>
  419e68:	54 5c 18 00 	.word 0x545c1800
  419e6c:	00 04 7e 7f 	l.j 539868 <__stack+0xb986c>
  419e70:	05 05 00 00 	l.jal 4559e70 <__stack+0x40d9e74>
  419e74:	00 18 bc a4 	l.j a49104 <__stack+0x5c9108>
  419e78:	a4 fc 7c 00 	l.andi r7,r28,0x7c00
  419e7c:	00 7f 7f 04 	l.j 23f9a8c <__stack+0x1f79a90>
  419e80:	04 7c 78 00 	l.jal 2337e80 <__stack+0x1eb7e84>
  419e84:	00 00 00 3d 	l.j 419f78 <__data_start+0x43c>
  419e88:	7d 40 00 00 	l.cust4 
  419e8c:	00 80 80 80 	l.j 243a08c <__stack+0x1fba090>
  419e90:	fd 7d 00 00 	l.cust8 
  419e94:	00 7f 7f 10 	l.j 23f9ad4 <__stack+0x1f79ad8>
  419e98:	38 6c 44 00 	.word 0x386c4400
  419e9c:	00 00 00 3f 	l.j 419f98 <__data_start+0x45c>
  419ea0:	7f 40 00 00 	l.cust4 
  419ea4:	7c 7c 0c 18 	l.cust4 
  419ea8:	0c 7c 78 00 	l.bnf 2337ea8 <__stack+0x1eb7eac>
  419eac:	00 7c 7c 04 	l.j 2338ebc <__stack+0x1eb8ec0>
  419eb0:	04 7c 78 00 	l.jal 2337eb0 <__stack+0x1eb7eb4>
  419eb4:	00 38 7c 44 	l.j 1238fc4 <__stack+0xdb8fc8>
  419eb8:	44 7c 38 00 	l.jr r7
  419ebc:	00 fc fc 24 	l.j 4358f4c <__stack+0x3ed8f50>
  419ec0:	24 3c 18 00 	l.rfe 
  419ec4:	00 18 3c 24 	l.j a28f54 <__stack+0x5a8f58>
  419ec8:	24 fc fc 00 	l.rfe 
  419ecc:	00 7c 7c 04 	l.j 2338edc <__stack+0x1eb8ee0>
  419ed0:	04 0c 08 00 	l.jal 71bed0 <__stack+0x29bed4>
  419ed4:	00 48 5c 54 	l.j 1631024 <__stack+0x11b1028>
  419ed8:	54 74 20 00 	.word 0x54742000
  419edc:	00 04 3f 7f 	l.j 529cd8 <__stack+0xa9cdc>
  419ee0:	44 44 00 00 	l.jr r0
  419ee4:	00 3c 7c 40 	l.j 1338fe4 <__stack+0xeb8fe8>
  419ee8:	40 7c 7c 00 	.word 0x407c7c00
  419eec:	00 1c 3c 60 	l.j b2906c <__stack+0x6a9070>
  419ef0:	60 3c 1c 00 	.word 0x603c1c00
  419ef4:	3c 7c 60 30 	.word 0x3c7c6030
  419ef8:	60 7c 3c 00 	.word 0x607c3c00
  419efc:	44 6c 38 10 	l.jr r7
  419f00:	38 6c 44 00 	.word 0x386c4400
  419f04:	00 1c bc e0 	l.j b49284 <__stack+0x6c9288>
  419f08:	60 3c 1c 00 	.word 0x603c1c00
  419f0c:	00 44 64 74 	l.j 15330dc <__stack+0x10b30e0>
  419f10:	5c 4c 44 00 	.word 0x5c4c4400
  419f14:	00 08 08 3e 	l.j 61c00c <__stack+0x19c010>
  419f18:	77 41 41 00 	l.cust2 
  419f1c:	00 00 00 7f 	l.j 41a118 <__data_start+0x5dc>
  419f20:	7f 00 00 00 	l.cust4 
  419f24:	00 41 41 77 	l.j 146a500 <__stack+0xfea504>
  419f28:	3e 08 08 00 	.word 0x3e080800
  419f2c:	02 01 01 03 	l.j f845a338 <__stack+0xf7fda33c>
  419f30:	02 02 01 00 	l.j f849a330 <__stack+0xf801a334>
  419f34:	7f 7f 7f 7f 	l.cust4 
  419f38:	7f 7f 7f 00 	l.cust4 
	...

0041a33c <template.39857>:
  41a33c:	20 6f 66 20 	.word 0x206f6620

0041a340 <info.39856>:
  41a340:	58 58 2f 58 	.word 0x58582f58
  41a344:	58 00 00 00 	.word 0x58000000

0041a348 <adr.21086>:
  41a348:	00 08 25 80 	l.j 623948 <__stack+0x1a394c>

Disassembly of section .bss:

0041a34c <__bss_start>:
  41a34c:	00 00 00 00 	l.j 41a34c <__bss_start>

0041a350 <DebugMode.22632>:
	...

0041a351 <fat32.20955>:
	...

0041a352 <nDirEntries.26225>:
	...

0041a353 <iSelectedEntry.26226>:
	...

0041a354 <iCurrentDirectory.26227>:
  41a354:	00 00 00 00 	l.j 41a354 <iCurrentDirectory.26227>

0041a358 <iPreviousDirectory.26228>:
  41a358:	00 00 00 00 	l.j 41a358 <iPreviousDirectory.26228>

0041a35c <drives.28702>:
  41a35c:	00 00 00 00 	l.j 41a35c <drives.28702>

0041a360 <debugmsg2.22482>:
	...

0041a388 <led.36871>:
	...

0041a389 <menustate.39675>:
	...

0041a38a <menusub.39677>:
	...

0041a38c <menumask.39678>:
  41a38c:	00 00 00 00 	l.j 41a38c <menumask.39678>

0041a390 <config_autofire.39712>:
  41a390:	00 00 00 00 	l.j 41a390 <config_autofire.39712>

0041a394 <fs_pFileExt.39713>:
  41a394:	00 00 00 00 	l.j 41a394 <fs_pFileExt.39713>

0041a398 <buf.5054>:
	...

0041a498 <partitions.20931>:
	...

0041a4d8 <partitioncount.20932>:
  41a4d8:	00 00 00 00 	l.j 41a4d8 <partitioncount.20932>

0041a4dc <sector_buffer.20952>:
	...

0041a8dc <cluster_size.20953>:
  41a8dc:	00 00 00 00 	l.j 41a8dc <cluster_size.20953>

0041a8e0 <cluster_mask.20954>:
  41a8e0:	00 00 00 00 	l.j 41a8e0 <cluster_mask.20954>

0041a8e4 <Error.22104>:
  41a8e4:	00 00 00 00 	l.j 41a8e4 <Error.22104>

0041a8e8 <CSDData.22208>:
	...

0041a8f8 <hdf.22483>:
	...

0041cb80 <file.22630>:
	...

0041ccac <config.22631>:
	...

0041cd18 <s.23738>:
	...

0041cd40 <configfilename.23739>:
	...

0041cd4c <romkey.23741>:
	...

0041d94c <romfile.23742>:
	...

0041dc80 <fattype.26204>:
  41dc80:	00 00 00 00 	l.j 41dc80 <fattype.26204>

0041dc84 <boot_sector.26206>:
  41dc84:	00 00 00 00 	l.j 41dc84 <boot_sector.26206>

0041dc88 <fat_start.26207>:
  41dc88:	00 00 00 00 	l.j 41dc88 <fat_start.26207>

0041dc8c <data_start.26208>:
  41dc8c:	00 00 00 00 	l.j 41dc8c <data_start.26208>

0041dc90 <root_directory_cluster.26209>:
  41dc90:	00 00 00 00 	l.j 41dc90 <root_directory_cluster.26209>

0041dc94 <root_directory_start.26210>:
  41dc94:	00 00 00 00 	l.j 41dc94 <root_directory_start.26210>

0041dc98 <root_directory_size.26211>:
  41dc98:	00 00 00 00 	l.j 41dc98 <root_directory_size.26211>

0041dc9c <fat_number.26212>:
	...

0041dc9e <dir_entries.26215>:
	...

0041dca0 <fat_size.26216>:
  41dca0:	00 00 00 00 	l.j 41dca0 <fat_size.26216>

0041dca4 <fat_buffer.26220>:
	...

0041dea4 <buffered_fat_index.26221>:
  41dea4:	00 00 00 00 	l.j 41dea4 <buffered_fat_index.26221>

0041dea8 <DirEntryLFN.26222>:
	...

0041e6d0 <DirEntry.26223>:
	...

0041e7d0 <sort_table.26224>:
	...

0041e7d8 <t_DirEntryLFN.26229>:
	...

0041f000 <t_DirEntry.26230>:
	...

0041f100 <t_sort_table.26231>:
	...

0041f108 <df.28704>:
	...

0041fbf8 <rdbfile.34114>:
	...

0041fd24 <parentstate.39676>:
  41fd24:	00 00 00 00 	l.j 41fd24 <parentstate.39676>

0041fd28 <menu_timer.39679>:
  41fd28:	00 00 00 00 	l.j 41fd28 <menu_timer.39679>

0041fd2c <DirEntryInfo.39692>:
	...

0041fd54 <DiskInfo.39693>:
  41fd54:	00 00 00 00 	l.j 41fd54 <DiskInfo.39693>
	...

0041fd59 <fs_Options.39714>:
	...

0041fd5a <fs_MenuSelect.39715>:
	...

0041fd5b <fs_MenuCancel.39716>:
	...

0041fd5c <crc.42301>:
  41fd5c:	00 00 00 00 	l.j 41fd5c <crc.42301>

0041fd60 <timeout.42302>:
  41fd60:	00 00 00 00 	l.j 41fd60 <timeout.42302>

0041fd64 <response.42303>:
	...

0041fd65 <CardType.42304>:
  41fd65:	00 00 00 00 	l.j 41fd65 <CardType.42304>

0041fd68 <stars.44657>:
	...

00420168 <framebuffer.44658>:
	...

00420968 <mon_en.50011>:
  420968:	00 00 00 00 	l.j 420968 <mon_en.50011>

0042096c <mon_step.50012>:
  42096c:	00 00 00 00 	l.j 42096c <mon_step.50012>

00420970 <rxrp.50008>:
	...

00420971 <rxwp.50006>:
  420971:	00 00 00 00 	l.j 420971 <rxwp.50006>

00420974 <rxbuf.50003>:
	...

004209b4 <txrp.50007>:
	...

004209b5 <txwp.50005>:
  4209b5:	00 00 00 00 	l.j 4209b5 <txwp.50005>

004209b8 <txbuf.50002>:
	...

004209c0 <txln.50009>:
  4209c0:	00 00 00 00 	l.j 4209c0 <txln.50009>

004209c4 <stbuf.50004>:
	...

00420a04 <scroll_timer.44690>:
  420a04:	00 00 00 00 	l.j 420a04 <scroll_timer.44690>

00420a08 <scroll_offset.44689>:
  420a08:	00 00 00 00 	l.j 420a08 <scroll_offset.44689>

00420a0c <repeat2.44892>:
  420a0c:	00 00 00 00 	l.j 420a0c <repeat2.44892>

00420a10 <repeat.44891>:
  420a10:	00 00 00 00 	l.j 420a10 <repeat.44891>

00420a14 <delay.44890>:
  420a14:	00 00 00 00 	l.j 420a14 <delay.44890>

00420a18 <c2.44889>:
  420a18:	00 00 00 00 	l.j 420a18 <c2.44889>

00420a1c <titlebuffer.44693>:
	...

00420a5c <arrow.44692>:
  420a5c:	00 00 00 00 	l.j 420a5c <arrow.44692>

00420a60 <prev.44675>:
  420a60:	00 00 00 00 	l.j 420a60 <prev.44675>

00420a64 <debugptr.39718>:
  420a64:	00 00 00 00 	l.j 420a64 <debugptr.39718>

00420a68 <debuglines.39717>:
	...

00420b6c <len.39848>:
  420b6c:	00 00 00 00 	l.j 420b6c <len.39848>

00420b70 <helpstate.39756>:
  420b70:	00 00 00 00 	l.j 420b70 <helpstate.39756>

00420b74 <helptext.39755>:
  420b74:	00 00 00 00 	l.j 420b74 <helptext.39755>

00420b78 <helptext_timer.39754>:
  420b78:	00 00 00 00 	l.j 420b78 <helptext_timer.39754>

00420b7c <lalt.39752>:
	...

00420b7d <ctrl.39751>:
  420b7d:	00 00 00 00 	l.j 420b7d <ctrl.39751>

00420b80 <t_hardfile.39750>:
	...

00420bb8 <lfn.26344>:
	...

Disassembly of section .stack:

00420cc0 <_stack-0x1000>:
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11 01 25 	l.j 4440494 <__stack+0x3fc0498>
   4:	0e 13 0b 03 	l.bnf f84c2c10 <__stack+0xf8042c14>
   8:	0e 1b 0e 11 	l.bnf f86c384c <__stack+0xf8243850>
   c:	01 12 01 10 	l.j 448044c <__stack+0x4000450>
  10:	06 00 00 02 	l.jal f8000018 <__stack+0xf7b8001c>
  14:	24 00 0b 0b 	l.rfe 
  18:	3e 0b 03 0e 	.word 0x3e0b030e
  1c:	00 00 03 24 	l.j cac <__rom_size-0x196a0>
  20:	00 0b 0b 3e 	l.j 2c2d18 <__ram_length+0x242d18>
  24:	0b 03 08 00 	.word 0x0b030800
  28:	00 04 01 01 	l.j 10042c <__ram_length+0x8042c>
  2c:	49 13 01 13 	l.jalr r0
  30:	00 00 05 21 	l.j 14b4 <__rom_size-0x18e98>
  34:	00 49 13 2f 	l.j 1244cf0 <__stack+0xdc4cf4>
  38:	0b 00 00 06 	.word 0x0b000006
  3c:	0f 00 0b 0b 	l.bnf fc002c68 <__stack+0xfbb82c6c>
  40:	00 00 07 0f 	l.j 1c7c <__rom_size-0x186d0>
  44:	00 0b 0b 49 	l.j 2c2d68 <__ram_length+0x242d68>
  48:	13 00 00 08 	l.bf fc000068 <__stack+0xfbb8006c>
  4c:	26 00 49 13 	l.rfe 
  50:	00 00 09 16 	l.j 24a8 <__rom_size-0x17ea4>
  54:	00 03 0e 3a 	l.j c393c <__ram_length+0x4393c>
  58:	0b 3b 0b 49 	.word 0x0b3b0b49
  5c:	13 00 00 0a 	l.bf fc000084 <__stack+0xfbb80088>
  60:	0f 00 0b 0b 	l.bnf fc002c8c <__stack+0xfbb82c90>
  64:	03 0e 00 00 	l.j fc380064 <__stack+0xfbf00068>
  68:	0b 04 01 03 	.word 0x0b040103
  6c:	0e 0b 0b 3a 	l.bnf f82c2d54 <__stack+0xf7e42d58>
  70:	0b 3b 0b 01 	.word 0x0b3b0b01
  74:	13 00 00 0c 	l.bf fc0000a4 <__stack+0xfbb800a8>
  78:	28 00 03 0e 	.word 0x2800030e
  7c:	1c 0d 00 00 	.word 0x1c0d0000
  80:	0d 13 01 0b 	l.bnf 44c04ac <__stack+0x40404b0>
  84:	0b 3a 0b 3b 	.word 0x0b3a0b3b
  88:	0b 01 13 00 	.word 0x0b011300
  8c:	00 0e 0d 00 	l.j 38348c <__ram_length+0x30348c>
  90:	03 0e 3a 0b 	l.j fc38e8bc <__stack+0xfbf0e8c0>
  94:	3b 0b 49 13 	.word 0x3b0b4913
  98:	38 0a 00 00 	.word 0x380a0000
  9c:	0f 13 01 0b 	l.bnf fc4c04c8 <__stack+0xfc0404cc>
  a0:	05 3a 0b 3b 	l.jal 4e82d8c <__stack+0x4a02d90>
  a4:	0b 01 13 00 	.word 0x0b011300
  a8:	00 10 21 00 	l.j 4084a8 <ScanDirectory+0xed8>
  ac:	49 13 2f 05 	l.jalr r5
  b0:	00 00 11 0d 	l.j 44e4 <__rom_size-0x15e68>
  b4:	00 03 08 3a 	l.j c219c <__ram_length+0x4219c>
  b8:	0b 3b 0b 49 	.word 0x0b3b0b49
  bc:	13 38 0a 00 	l.bf fce028bc <__stack+0xfc9828c0>
  c0:	00 12 13 01 	l.j 484cc4 <__stack+0x4cc8>
  c4:	03 0e 0b 0b 	l.j fc382cf0 <__stack+0xfbf02cf4>
  c8:	3a 0b 3b 0b 	.word 0x3a0b3b0b
  cc:	01 13 00 00 	l.j 44c00cc <__stack+0x40400d0>
  d0:	13 13 01 03 	l.bf fc4c04dc <__stack+0xfc0404e0>
  d4:	0e 0b 05 3a 	l.bnf f82c15bc <__stack+0xf7e415c0>
  d8:	0b 3b 0b 01 	.word 0x0b3b0b01
  dc:	13 00 00 14 	l.bf fc00012c <__stack+0xfbb80130>
  e0:	17 01 0b 05 	.word 0x17010b05
  e4:	3a 0b 3b 0b 	.word 0x3a0b3b0b
  e8:	01 13 00 00 	l.j 44c00e8 <__stack+0x40400ec>
  ec:	15 0d 00 03 	l.nop 0x3
  f0:	0e 3a 0b 3b 	l.bnf f8e82ddc <__stack+0xf8a02de0>
  f4:	0b 49 13 00 	.word 0x0b491300
  f8:	00 16 2e 01 	l.j 58b8fc <__stack+0x10b900>
  fc:	03 0e 3a 0b 	l.j fc38e928 <__stack+0xfbf0e92c>
 100:	3b 0b 27 0c 	.word 0x3b0b270c
 104:	49 13 20 0b 	l.jalr r4
 108:	01 13 00 00 	l.j 44c0108 <__stack+0x404010c>
 10c:	17 05 00 03 	.word 0x17050003
 110:	08 3a 0b 3b 	.word 0x083a0b3b
 114:	0b 49 13 00 	.word 0x0b491300
 118:	00 18 34 00 	l.j 60d118 <__stack+0x18d11c>
 11c:	03 08 3a 0b 	l.j fc20e948 <__stack+0xfbd8e94c>
 120:	3b 0b 49 13 	.word 0x3b0b4913
 124:	00 00 19 2e 	l.j 65dc <__rom_size-0x13d70>
 128:	01 03 0e 3a 	l.j 40c3a10 <__stack+0x3c43a14>
 12c:	0b 3b 05 27 	.word 0x0b3b0527
 130:	0c 49 13 20 	l.bnf 1244db0 <__stack+0xdc4db4>
 134:	0b 01 13 00 	.word 0x0b011300
 138:	00 1a 05 00 	l.j 681538 <__stack+0x20153c>
 13c:	03 08 3a 0b 	l.j fc20e968 <__stack+0xfbd8e96c>
 140:	3b 05 49 13 	.word 0x3b054913
 144:	00 00 1b 34 	l.j 6e14 <__rom_size-0x13538>
 148:	00 03 08 3a 	l.j c2230 <__ram_length+0x42230>
 14c:	0b 3b 05 49 	.word 0x0b3b0549
 150:	13 00 00 1c 	l.bf fc0001c0 <__stack+0xfbb801c4>
 154:	2e 01 03 0e 	.word 0x2e01030e
 158:	3a 0b 3b 0b 	.word 0x3a0b3b0b
 15c:	20 0b 01 13 	.word 0x200b0113
 160:	00 00 1d 2e 	l.j 7618 <__rom_size-0x12d34>
 164:	01 03 0e 3a 	l.j 40c3a4c <__stack+0x3c43a50>
 168:	0b 3b 0b 27 	.word 0x0b3b0b27
 16c:	0c 20 0b 01 	l.bnf 802d70 <__stack+0x382d74>
 170:	13 00 00 1e 	l.bf fc0001e8 <__stack+0xfbb801ec>
 174:	2e 00 03 0e 	.word 0x2e00030e
 178:	3a 0b 3b 05 	.word 0x3a0b3b05
 17c:	27 0c 20 0b 	l.rfe 
 180:	00 00 1f 2e 	l.j 7e38 <__rom_size-0x12514>
 184:	01 03 0e 3a 	l.j 40c3a6c <__stack+0x3c43a70>
 188:	0b 3b 05 27 	.word 0x0b3b0527
 18c:	0c 20 0b 01 	l.bnf 802d90 <__stack+0x382d94>
 190:	13 00 00 20 	l.bf fc000210 <__stack+0xfbb80214>
 194:	05 00 03 0e 	l.jal 4000dcc <__stack+0x3b80dd0>
 198:	3a 0b 3b 05 	.word 0x3a0b3b05
 19c:	49 13 00 00 	l.jalr r0
 1a0:	21 2e 00 03 	.word 0x212e0003
 1a4:	0e 3a 0b 3b 	l.bnf f8e82e90 <__stack+0xf8a02e94>
 1a8:	0b 27 0c 49 	.word 0x0b270c49
 1ac:	13 20 0b 00 	l.bf fc802dac <__stack+0xfc382db0>
 1b0:	00 22 0b 01 	l.j 882db4 <__stack+0x402db8>
 1b4:	00 00 23 34 	l.j 8e84 <__rom_size-0x114c8>
 1b8:	00 03 0e 3a 	l.j c3aa0 <__ram_length+0x43aa0>
 1bc:	0b 3b 0b 49 	.word 0x0b3b0b49
 1c0:	13 00 00 24 	l.bf fc000250 <__stack+0xfbb80254>
 1c4:	2e 00 03 0e 	.word 0x2e00030e
 1c8:	3a 0b 3b 0b 	.word 0x3a0b3b0b
 1cc:	20 0b 00 00 	.word 0x200b0000
 1d0:	25 2e 01 03 	l.rfe 
 1d4:	0e 3a 0b 3b 	l.bnf f8e82ec0 <__stack+0xf8a02ec4>
 1d8:	05 49 13 20 	l.jal 5244e58 <__stack+0x4dc4e5c>
 1dc:	0b 01 13 00 	.word 0x0b011300
 1e0:	00 26 34 00 	l.j 98d1e0 <__stack+0x50d1e4>
 1e4:	03 0e 3a 0b 	l.j fc38ea10 <__stack+0xfbf0ea14>
 1e8:	3b 05 49 13 	.word 0x3b054913
 1ec:	00 00 27 0b 	l.j 9e18 <__rom_size-0x10534>
 1f0:	01 01 13 00 	l.j 4044df0 <__stack+0x3bc4df4>
 1f4:	00 28 2e 00 	l.j a0b9f4 <__stack+0x58b9f8>
 1f8:	03 0e 3a 0b 	l.j fc38ea24 <__stack+0xfbf0ea28>
 1fc:	3b 05 20 0b 	.word 0x3b05200b
 200:	00 00 29 26 	l.j a698 <__rom_size-0xfcb4>
 204:	00 00 00 2a 	l.j 2ac <__rom_size-0x1a0a0>
 208:	05 00 03 0e 	l.jal 4000e40 <__stack+0x3b80e44>
 20c:	3a 0b 3b 0b 	.word 0x3a0b3b0b
 210:	49 13 00 00 	l.jalr r0
 214:	2b 34 00 03 	.word 0x2b340003
 218:	0e 3a 0b 3b 	l.bnf f8e82f04 <__stack+0xf8a02f08>
 21c:	05 49 13 1c 	l.jal 5244e8c <__stack+0x4dc4e90>
 220:	0e 00 00 2c 	l.bnf f80002d0 <__stack+0xf7b802d4>
 224:	2e 01 03 0e 	.word 0x2e01030e
 228:	3a 0b 3b 0b 	.word 0x3a0b3b0b
 22c:	27 0c 49 13 	l.rfe 
 230:	11 01 12 01 	l.bf 4044a34 <__stack+0x3bc4a38>
 234:	40 0a 01 13 	.word 0x400a0113
 238:	00 00 2d 05 	l.j b64c <__rom_size-0xed00>
 23c:	00 03 08 3a 	l.j c2324 <__ram_length+0x42324>
 240:	0b 3b 0b 49 	.word 0x0b3b0b49
 244:	13 02 0a 00 	l.bf fc082a44 <__stack+0xfbc02a48>
 248:	00 2e 05 00 	l.j b81648 <__stack+0x70164c>
 24c:	03 08 3a 0b 	l.j fc20ea78 <__stack+0xfbd8ea7c>
 250:	3b 0b 49 13 	.word 0x3b0b4913
 254:	02 06 00 00 	l.j f8180254 <__stack+0xf7d00258>
 258:	2f 34 00 03 	.word 0x2f340003
 25c:	08 3a 0b 3b 	.word 0x083a0b3b
 260:	0b 49 13 02 	.word 0x0b491302
 264:	06 00 00 30 	l.jal f8000324 <__stack+0xf7b80328>
 268:	34 00 03 08 	.word 0x34000308
 26c:	3a 0b 3b 0b 	.word 0x3a0b3b0b
 270:	49 13 02 0a 	l.jalr r0
 274:	00 00 31 2e 	l.j c72c <__rom_size-0xdc20>
 278:	01 03 0e 3a 	l.j 40c3b60 <__stack+0x3c43b64>
 27c:	0b 3b 0b 27 	.word 0x0b3b0b27
 280:	0c 49 13 11 	l.bnf 1244ec4 <__stack+0xdc4ec8>
 284:	01 12 01 40 	l.j 4480784 <__stack+0x4000788>
 288:	06 01 13 00 	l.jal f8044e88 <__stack+0xf7bc4e8c>
 28c:	00 32 1d 01 	l.j c87690 <__stack+0x807694>
 290:	31 13 11 01 	.word 0x31131101
 294:	12 01 58 0b 	l.bf f80562c0 <__stack+0xf7bd62c4>
 298:	59 0b 00 00 	.word 0x590b0000
 29c:	33 05 00 31 	.word 0x33050031
 2a0:	13 00 00 34 	l.bf fc000370 <__stack+0xfbb80374>
 2a4:	0b 01 11 01 	.word 0x0b011101
 2a8:	12 01 00 00 	l.bf f80402a8 <__stack+0xf7bc02ac>
 2ac:	35 34 00 31 	.word 0x35340031
 2b0:	13 02 06 00 	l.bf fc081ab0 <__stack+0xfbc01ab4>
 2b4:	00 36 34 00 	l.j d8d2b4 <__stack+0x90d2b8>
 2b8:	03 0e 3a 0b 	l.j fc38eae4 <__stack+0xfbf0eae8>
 2bc:	3b 0b 49 13 	.word 0x3b0b4913
 2c0:	1c 0e 00 00 	.word 0x1c0e0000
 2c4:	37 2e 01 03 	.word 0x372e0103
 2c8:	0e 3a 0b 3b 	l.bnf f8e82fb4 <__stack+0xf8a02fb8>
 2cc:	05 27 0c 49 	l.jal 49c33f0 <__stack+0x45433f4>
 2d0:	13 11 01 12 	l.bf fc440718 <__stack+0xfbfc071c>
 2d4:	01 40 06 01 	l.j 5001ad8 <__stack+0x4b81adc>
 2d8:	13 00 00 38 	l.bf fc0003b8 <__stack+0xfbb803bc>
 2dc:	05 00 03 0e 	l.jal 4000f14 <__stack+0x3b80f18>
 2e0:	3a 0b 3b 0b 	.word 0x3a0b3b0b
 2e4:	49 13 02 06 	l.jalr r0
 2e8:	00 00 39 34 	l.j e7b8 <__rom_size-0xbb94>
 2ec:	00 03 0e 3a 	l.j c3bd4 <__ram_length+0x43bd4>
 2f0:	0b 3b 0b 49 	.word 0x0b3b0b49
 2f4:	13 02 06 00 	l.bf fc081af4 <__stack+0xfbc01af8>
 2f8:	00 3a 04 01 	l.j e812fc <__stack+0xa01300>
 2fc:	0b 0b 3a 0b 	.word 0x0b0b3a0b
 300:	3b 0b 01 13 	.word 0x3b0b0113
 304:	00 00 3b 34 	l.j efd4 <__rom_size-0xb378>
 308:	00 03 0e 3a 	l.j c3bf0 <__ram_length+0x43bf0>
 30c:	0b 3b 0b 49 	.word 0x0b3b0b49
 310:	13 02 0a 00 	l.bf fc082b10 <__stack+0xfbc02b14>
 314:	00 3c 0a 00 	l.j f02b14 <__stack+0xa82b18>
 318:	03 0e 3a 0b 	l.j fc38eb44 <__stack+0xfbf0eb48>
 31c:	3b 05 11 01 	.word 0x3b051101
 320:	00 00 3d 1d 	l.j f794 <__rom_size-0xabb8>
 324:	01 31 13 52 	l.j 4c4506c <__stack+0x47c5070>
 328:	01 55 06 58 	l.j 5541c88 <__stack+0x50c1c8c>
 32c:	0b 59 05 01 	.word 0x0b590501
 330:	13 00 00 3e 	l.bf fc000428 <__stack+0xfbb8042c>
 334:	05 00 31 13 	l.jal 400c780 <__stack+0x3b8c784>
 338:	02 06 00 00 	l.j f8180338 <__stack+0xf7d0033c>
 33c:	3f 0b 01 55 	.word 0x3f0b0155
 340:	06 00 00 40 	l.jal f8000440 <__stack+0xf7b80444>
 344:	34 00 31 13 	.word 0x34003113
 348:	02 0a 00 00 	l.j f8280348 <__stack+0xf7e0034c>
 34c:	41 34 00 03 	.word 0x41340003
 350:	08 3a 0b 3b 	.word 0x083a0b3b
 354:	05 49 13 02 	l.jal 5244f5c <__stack+0x4dc4f60>
 358:	06 00 00 42 	l.jal f8000460 <__stack+0xf7b80464>
 35c:	2e 01 03 0e 	.word 0x2e01030e
 360:	3a 0b 3b 0b 	.word 0x3a0b3b0b
 364:	11 01 12 01 	l.bf 4044b68 <__stack+0x3bc4b6c>
 368:	40 06 01 13 	.word 0x40060113
 36c:	00 00 43 0b 	l.j 10f98 <__rom_size-0x93b4>
 370:	01 55 06 01 	l.j 5541b74 <__stack+0x50c1b78>
 374:	13 00 00 44 	l.bf fc000484 <__stack+0xfbb80488>
 378:	0b 01 11 01 	.word 0x0b011101
 37c:	12 01 01 13 	l.bf f80407c8 <__stack+0xf7bc07cc>
 380:	00 00 45 34 	l.j 11850 <__rom_size-0x8afc>
 384:	00 03 0e 3a 	l.j c3c6c <__ram_length+0x43c6c>
 388:	0b 3b 05 49 	.word 0x0b3b0549
 38c:	13 02 06 00 	l.bf fc081b8c <__stack+0xfbc01b90>
 390:	00 46 2e 01 	l.j 118bb94 <__stack+0xd0bb98>
 394:	03 0e 3a 0b 	l.j fc38ebc0 <__stack+0xfbf0ebc4>
 398:	3b 0b 27 0c 	.word 0x3b0b270c
 39c:	11 01 12 01 	l.bf 4044ba0 <__stack+0x3bc4ba4>
 3a0:	40 06 01 13 	.word 0x40060113
 3a4:	00 00 47 2e 	l.j 1205c <__rom_size-0x82f0>
 3a8:	01 03 0e 3a 	l.j 40c3c90 <__stack+0x3c43c94>
 3ac:	0b 3b 05 27 	.word 0x0b3b0527
 3b0:	0c 49 13 11 	l.bnf 1244ff4 <__stack+0xdc4ff8>
 3b4:	01 12 01 40 	l.j 44808b4 <__stack+0x40008b8>
 3b8:	0a 01 13 00 	.word 0x0a011300
 3bc:	00 48 05 00 	l.j 12017bc <__stack+0xd817c0>
 3c0:	03 0e 3a 0b 	l.j fc38ebec <__stack+0xfbf0ebf0>
 3c4:	3b 05 49 13 	.word 0x3b054913
 3c8:	02 06 00 00 	l.j f81803c8 <__stack+0xf7d003cc>
 3cc:	49 1d 01 31 	l.jalr r0
 3d0:	13 11 01 12 	l.bf fc440818 <__stack+0xfbfc081c>
 3d4:	01 58 0b 59 	l.j 5603138 <__stack+0x518313c>
 3d8:	05 00 00 4a 	l.jal 4000500 <__stack+0x3b80504>
 3dc:	2e 01 03 0e 	.word 0x2e01030e
 3e0:	3a 0b 3b 05 	.word 0x3a0b3b05
 3e4:	27 0c 11 01 	l.rfe 
 3e8:	12 01 40 0a 	l.bf f8050410 <__stack+0xf7bd0414>
 3ec:	01 13 00 00 	l.j 44c03ec <__stack+0x40403f0>
 3f0:	4b 05 00 03 	l.jalr r0
 3f4:	0e 3a 0b 3b 	l.bnf f8e830e0 <__stack+0xf8a030e4>
 3f8:	05 49 13 02 	l.jal 5245000 <__stack+0x4dc5004>
 3fc:	0a 00 00 4c 	.word 0x0a00004c
 400:	2e 01 03 0e 	.word 0x2e01030e
 404:	3a 0b 3b 05 	.word 0x3a0b3b05
 408:	27 0c 11 01 	l.rfe 
 40c:	12 01 40 06 	l.bf f8050424 <__stack+0xf7bd0428>
 410:	01 13 00 00 	l.j 44c0410 <__stack+0x4040414>
 414:	4d 05 00 03 	l.maci r5,0x3
 418:	08 3a 0b 3b 	.word 0x083a0b3b
 41c:	05 49 13 02 	l.jal 5245024 <__stack+0x4dc5028>
 420:	0a 00 00 4e 	.word 0x0a00004e
 424:	05 00 03 08 	l.jal 4001044 <__stack+0x3b81048>
 428:	3a 0b 3b 05 	.word 0x3a0b3b05
 42c:	49 13 02 06 	l.jalr r0
 430:	00 00 4f 2e 	l.j 140e8 <__rom_size-0x6264>
 434:	01 03 0e 3a 	l.j 40c3d1c <__stack+0x3c43d20>
 438:	0b 3b 0b 49 	.word 0x0b3b0b49
 43c:	13 11 01 12 	l.bf fc440884 <__stack+0xfbfc0888>
 440:	01 40 0a 01 	l.j 5002c44 <__stack+0x4b82c48>
 444:	13 00 00 50 	l.bf fc000584 <__stack+0xfbb80588>
 448:	1d 01 31 13 	.word 0x1d013113
 44c:	52 01 55 06 	.word 0x52015506
 450:	58 0b 59 0b 	.word 0x580b590b
 454:	00 00 51 05 	l.j 14868 <__rom_size-0x5ae4>
 458:	00 31 13 02 	l.j c45060 <__stack+0x7c5064>
 45c:	0a 00 00 52 	.word 0x0a000052
 460:	05 00 03 0e 	l.jal 4001098 <__stack+0x3b8109c>
 464:	3a 0b 3b 0b 	.word 0x3a0b3b0b
 468:	49 13 02 0a 	l.jalr r0
 46c:	00 00 53 2e 	l.j 15124 <__rom_size-0x5228>
 470:	00 03 0e 3a 	l.j c3d58 <__ram_length+0x43d58>
 474:	0b 3b 05 27 	.word 0x0b3b0527
 478:	0c 11 01 12 	l.bnf 4408c0 <_stack+0x1ec00>
 47c:	01 40 06 00 	l.j 5001c7c <__stack+0x4b81c80>
 480:	00 54 34 00 	l.j 150d480 <__stack+0x108d484>
 484:	03 08 3a 0b 	l.j fc20ecb0 <__stack+0xfbd8ecb4>
 488:	3b 05 49 13 	.word 0x3b054913
 48c:	02 0a 00 00 	l.j f828048c <__stack+0xf7e00490>
 490:	55 34 00 03 	.word 0x55340003
 494:	0e 3a 0b 3b 	l.bnf f8e83180 <__stack+0xf8a03184>
 498:	05 49 13 02 	l.jal 52450a0 <__stack+0x4dc50a4>
 49c:	0a 00 00 56 	.word 0x0a000056
 4a0:	2e 00 03 0e 	.word 0x2e00030e
 4a4:	3a 0b 3b 05 	.word 0x3a0b3b05
 4a8:	11 01 12 01 	l.bf 4044cac <__stack+0x3bc4cb0>
 4ac:	40 06 00 00 	.word 0x40060000
 4b0:	57 1d 01 31 	.word 0x571d0131
 4b4:	13 11 01 12 	l.bf fc4408fc <__stack+0xfbfc0900>
 4b8:	01 58 0b 59 	l.j 560321c <__stack+0x5183220>
 4bc:	0b 01 13 00 	.word 0x0b011300
 4c0:	00 58 18 00 	l.j 16064c0 <__stack+0x11864c4>
 4c4:	00 00 59 1d 	l.j 16938 <__rom_size-0x3a14>
 4c8:	01 31 13 52 	l.j 4c45210 <__stack+0x47c5214>
 4cc:	01 55 06 58 	l.j 5541e2c <__stack+0x50c1e30>
 4d0:	0b 59 05 00 	.word 0x0b590500
 4d4:	00 5a 1d 01 	l.j 16878d8 <__stack+0x12078dc>
 4d8:	31 13 11 01 	.word 0x31131101
 4dc:	12 01 58 0b 	l.bf f8056508 <__stack+0xf7bd650c>
 4e0:	59 05 01 13 	.word 0x59050113
 4e4:	00 00 5b 34 	l.j 171b4 <__rom_size-0x3198>
 4e8:	00 31 13 00 	l.j c450e8 <__stack+0x7c50ec>
 4ec:	00 5c 34 00 	l.j 170d4ec <__stack+0x128d4f0>
 4f0:	03 0e 3a 0b 	l.j fc38ed1c <__stack+0xfbf0ed20>
 4f4:	3b 05 49 13 	.word 0x3b054913
 4f8:	1c 0b 00 00 	.word 0x1c0b0000
 4fc:	5d 2e 00 31 	.word 0x5d2e0031
 500:	13 11 01 12 	l.bf fc440948 <__stack+0xfbfc094c>
 504:	01 40 06 00 	l.j 5001d04 <__stack+0x4b81d08>
 508:	00 5e 2e 01 	l.j 178bd0c <__stack+0x130bd10>
 50c:	31 13 11 01 	.word 0x31131101
 510:	12 01 40 06 	l.bf f8050528 <__stack+0xf7bd052c>
 514:	01 13 00 00 	l.j 44c0514 <__stack+0x4040518>
 518:	5f 1d 00 31 	.word 0x5f1d0031
 51c:	13 11 01 12 	l.bf fc440964 <__stack+0xfbfc0968>
 520:	01 58 0b 59 	l.j 5603284 <__stack+0x5183288>
 524:	0b 00 00 60 	.word 0x0b000060
 528:	05 00 31 13 	l.jal 400c974 <__stack+0x3b8c978>
 52c:	1c 0b 00 00 	.word 0x1c0b0000
 530:	61 2e 00 03 	.word 0x612e0003
 534:	0e 3a 0b 3b 	l.bnf f8e83220 <__stack+0xf8a03224>
 538:	0b 11 01 12 	.word 0x0b110112
 53c:	01 40 06 00 	l.j 5001d3c <__stack+0x4b81d40>
 540:	00 62 2e 01 	l.j 188bd44 <__stack+0x140bd48>
 544:	03 0e 3a 0b 	l.j fc38ed70 <__stack+0xfbf0ed74>
 548:	3b 0b 49 13 	.word 0x3b0b4913
 54c:	20 0b 01 13 	.word 0x200b0113
 550:	00 00 63 2e 	l.j 19208 <__rom_size-0x1144>
 554:	01 03 0e 3a 	l.j 40c3e3c <__stack+0x3c43e40>
 558:	0b 3b 05 11 	.word 0x0b3b0511
 55c:	01 12 01 40 	l.j 4480a5c <__stack+0x4000a60>
 560:	06 01 13 00 	l.jal f8045160 <__stack+0xf7bc5164>
 564:	00 64 1d 00 	l.j 1907964 <__stack+0x1487968>
 568:	31 13 11 01 	.word 0x31131101
 56c:	12 01 58 0b 	l.bf f8056598 <__stack+0xf7bd659c>
 570:	59 05 00 00 	.word 0x59050000
 574:	65 05 00 31 	.word 0x65050031
 578:	13 1c 05 00 	l.bf fc701978 <__stack+0xfc28197c>
 57c:	00 66 05 00 	l.j 198197c <__stack+0x1501980>
 580:	31 13 1c 06 	.word 0x31131c06
 584:	00 00 67 35 	l.j 1a258 <__rom_size-0xf4>
 588:	00 49 13 00 	l.j 1245188 <__stack+0xdc518c>
 58c:	00 68 34 00 	l.j 1a0d58c <__stack+0x158d590>
 590:	31 13 1c 05 	.word 0x31131c05
 594:	00 00 69 2e 	l.j 1aa4c <__rom_size+0x700>
 598:	01 03 0e 3a 	l.j 40c3e80 <__stack+0x3c43e84>
 59c:	0b 3b 05 20 	.word 0x0b3b0520
 5a0:	0b 01 13 00 	.word 0x0b011300
 5a4:	00 6a 2e 01 	l.j 1a8bda8 <__stack+0x160bdac>
 5a8:	3f 0c 03 0e 	.word 0x3f0c030e
 5ac:	3a 0b 3b 0b 	.word 0x3a0b3b0b
 5b0:	27 0c 11 01 	l.rfe 
 5b4:	12 01 40 06 	l.bf f80505cc <__stack+0xf7bd05d0>
 5b8:	01 13 00 00 	l.j 44c05b8 <__stack+0x40405bc>
 5bc:	6b 1d 01 31 	.word 0x6b1d0131
 5c0:	13 52 01 55 	l.bf fd480b14 <__stack+0xfd000b18>
 5c4:	06 58 0b 59 	l.jal f9603328 <__stack+0xf918332c>
 5c8:	0b 01 13 00 	.word 0x0b011300
 5cc:	00 6c 1d 00 	l.j 1b079cc <__stack+0x16879d0>
 5d0:	31 13 52 01 	.word 0x31135201
 5d4:	55 06 58 0b 	.word 0x5506580b
 5d8:	59 05 00 00 	.word 0x59050000
 5dc:	6d 34 00 03 	.word 0x6d340003
 5e0:	0e 3a 0b 3b 	l.bnf f8e832cc <__stack+0xf8a032d0>
 5e4:	0b 49 13 3f 	.word 0x0b49133f
 5e8:	0c 3c 0c 00 	l.bnf f035e8 <__stack+0xa835ec>
 5ec:	00 6e 34 00 	l.j 1b8d5ec <__stack+0x170d5f0>
 5f0:	03 0e 3a 0b 	l.j fc38ee1c <__stack+0xfbf0ee20>
 5f4:	3b 0b 49 13 	.word 0x3b0b4913
 5f8:	1c 0b 00 00 	.word 0x1c0b0000
 5fc:	6f 34 00 03 	.word 0x6f340003
 600:	08 3a 0b 3b 	.word 0x083a0b3b
 604:	0b 49 13 3f 	.word 0x0b49133f
 608:	0c 3c 0c 00 	l.bnf f03608 <__stack+0xa8360c>
 60c:	00 70 21 00 	l.j 1c08a0c <__stack+0x1788a10>
 610:	00 00 71 34 	l.j 1cae0 <__rom_size+0x2794>
 614:	00 03 0e 3a 	l.j c3efc <__ram_length+0x43efc>
 618:	0b 3b 05 49 	.word 0x0b3b0549
 61c:	13 3f 0c 3c 	l.bf fcfc370c <__stack+0xfcb43710>
 620:	0c 00 00 00 	l.bnf 620 <__rom_size-0x19d2c>

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00 00 78 4a 	l.j 1e128 <__rom_size+0x3ddc>
       4:	00 02 00 00 	l.j 80004 <__ram_length+0x4>
       8:	00 00 04 01 	l.j 100c <__rom_size-0x19340>
       c:	00 00 08 75 	l.j 21e0 <__rom_size-0x1816c>
      10:	01 00 00 10 	l.j 4000050 <__stack+0x3b80054>
      14:	75 00 00 09 	l.cust2 
      18:	54 00 40 02 	.word 0x54004002
      1c:	80 00 41 6d 	l.ld r0,0x416d(r0)
      20:	08 00 00 00 	.word 0x08000000
      24:	00 02 01 06 	l.j 8043c <__ram_length+0x43c>
      28:	00 00 06 cc 	l.j 1b58 <__rom_size-0x187f4>
      2c:	02 01 08 00 	l.j f804202c <__stack+0xf7bc2030>
      30:	00 06 ca 02 	l.j 1b2838 <__ram_length+0x132838>
      34:	02 05 00 00 	l.j f8140034 <__stack+0xf7cc0038>
      38:	17 87 02 02 	.word 0x17870202
      3c:	07 00 00 1a 	l.jal fc0000a4 <__stack+0xfbb800a8>
      40:	89 03 04 05 	l.lws r8,0x405(r3)
      44:	69 6e 74 00 	.word 0x696e7400
      48:	02 04 07 00 	l.j f8101c48 <__stack+0xf7c81c4c>
      4c:	00 13 df 02 	l.j 4f7c54 <__stack+0x77c58>
      50:	08 05 00 00 	.word 0x08050000
      54:	0e a5 02 08 	l.bnf fa940874 <__stack+0xfa4c0878>
      58:	07 00 00 13 	l.jal fc0000a4 <__stack+0xfbb800a8>
      5c:	d5 02 04 05 	l.sw 0x4405(r2),r0
      60:	00 00 0e aa 	l.j 3b08 <__rom_size-0x16844>
      64:	04 00 00 00 	l.jal 64 <__rom_size-0x1a2e8>
      68:	2c 00 00 00 	.word 0x2c000000
      6c:	74 05 00 00 	l.cust2 
      70:	00 74 03 00 	l.j 1d00c70 <__stack+0x1880c74>
      74:	02 04 07 00 	l.j f8101c74 <__stack+0xf7c81c78>
      78:	00 13 da 06 	l.j 4f6890 <__stack+0x76894>
      7c:	04 07 04 00 	l.jal 1c107c <__ram_length+0x14107c>
      80:	00 00 2c 07 	l.j b09c <__rom_size-0xf2b0>
      84:	04 00 00 00 	l.jal 84 <__rom_size-0x1a2c8>
      88:	89 02 01 06 	l.lws r8,0x106(r2)
      8c:	00 00 06 d3 	l.j 1bd8 <__rom_size-0x18774>
      90:	07 04 00 00 	l.jal fc100090 <__stack+0xfbc80094>
      94:	00 96 08 00 	l.j 2582094 <__stack+0x2102098>
      98:	00 00 89 04 	l.j 224a8 <__rom_size+0x815c>
      9c:	00 00 00 2c 	l.j 14c <__rom_size-0x1a200>
      a0:	00 00 00 ab 	l.j 34c <__rom_size-0x1a000>
      a4:	05 00 00 00 	l.jal 40000a4 <__stack+0x3b800a8>
      a8:	74 02 00 04 	l.cust2 
      ac:	00 00 00 89 	l.j 2d0 <__rom_size-0x1a07c>
      b0:	00 00 00 bb 	l.j 39c <__rom_size-0x19fb0>
      b4:	05 00 00 00 	l.jal 40000b4 <__stack+0x3b800b8>
      b8:	74 07 00 09 	l.cust2 
      bc:	00 00 00 3e 	l.j 1b4 <__rom_size-0x1a198>
      c0:	1d d3 00 00 	.word 0x1dd30000
      c4:	00 74 09 00 	l.j 1d024c4 <__stack+0x18824c8>
      c8:	00 00 3e 1d 	l.j f93c <__rom_size-0xaa10>
      cc:	d3 00 00 00 	l.sd 0xffffc000(r0),r0
      d0:	74 09 00 00 	l.cust2 
      d4:	00 3e 1d d3 	l.j f87820 <__stack+0xb07824>
      d8:	00 00 00 74 	l.j 2a8 <__rom_size-0x1a0a4>
      dc:	09 00 00 07 	.word 0x09000007
      e0:	93 1e 28 00 	l.lbs r24,0x2800(r30)
      e4:	00 00 e7 0a 	l.j 39d0c <__rom_size+0x1f9c0>
      e8:	04 00 00 07 	l.jal 104 <__rom_size-0x1a248>
      ec:	5a 09 00 00 	.word 0x5a090000
      f0:	07 9a 1e 66 	l.jal fe687a88 <__stack+0xfe207a8c>
      f4:	00 00 00 dc 	l.j 464 <__rom_size-0x19ee8>
      f8:	09 00 00 1a 	.word 0x0900001a
      fc:	05 1f 34 00 	l.jal 47cd0fc <__stack+0x434d100>
     100:	00 00 74 09 	l.j 1d124 <__rom_size+0x2dd8>
     104:	00 00 00 3e 	l.j 1fc <__rom_size-0x1a150>
     108:	1d d3 00 00 	.word 0x1dd30000
     10c:	00 74 09 00 	l.j 1d0250c <__stack+0x1882510>
     110:	00 07 93 1e 	l.j 1e4d88 <__ram_length+0x164d88>
     114:	28 00 00 00 	.word 0x28000000
     118:	e7 09 00 00 	.word 0xe7090000
     11c:	07 9a 1e 66 	l.jal fe687ab4 <__stack+0xfe207ab8>
     120:	00 00 01 0e 	l.j 558 <__rom_size-0x19df4>
     124:	09 00 00 00 	.word 0x09000000
     128:	3e 1d d3 00 	.word 0x3e1dd300
     12c:	00 00 74 09 	l.j 1d150 <__rom_size+0x2e04>
     130:	00 00 00 3e 	l.j 228 <__rom_size-0x1a124>
     134:	1d d3 00 00 	.word 0x1dd30000
     138:	00 74 09 00 	l.j 1d02538 <__stack+0x188253c>
     13c:	00 00 3e 1d 	l.j f9b0 <__rom_size-0xa99c>
     140:	d3 00 00 00 	l.sd 0xffffc000(r0),r0
     144:	74 09 00 00 	l.cust2 
     148:	07 93 1e 28 	l.jal fe4c79e8 <__stack+0xfe0479ec>
     14c:	00 00 00 e7 	l.j 4e8 <__rom_size-0x19e64>
     150:	09 00 00 07 	.word 0x09000007
     154:	9a 1e 66 00 	l.lhs r16,0x6600(r30)
     158:	00 01 45 09 	l.j 5157c <__rom_size+0x37230>
     15c:	00 00 00 3e 	l.j 254 <__rom_size-0x1a0f8>
     160:	1d d3 00 00 	.word 0x1dd30000
     164:	00 74 09 00 	l.j 1d02564 <__stack+0x1882568>
     168:	00 0d 32 1f 	l.j 34c9e4 <__ram_length+0x2cc9e4>
     16c:	56 00 00 00 	.word 0x56000000
     170:	74 09 00 00 	l.cust2 
     174:	0f 93 1f 5b 	l.bnf fe4c7ee0 <__stack+0xfe047ee4>
     178:	00 00 00 4f 	l.j 2b4 <__rom_size-0x1a098>
     17c:	09 00 00 0f 	.word 0x0900000f
     180:	92 1f 5c 00 	l.lbs r16,0x5c00(r31)
     184:	00 00 56 0b 	l.j 159b0 <__rom_size-0x499c>
     188:	00 00 00 a7 	l.j 424 <__rom_size-0x19f28>
     18c:	04 09 0f 00 	l.jal 243d8c <__ram_length+0x1c3d8c>
     190:	00 01 c6 0c 	l.j 719c0 <__rom_size+0x57674>
     194:	00 00 0e 70 	l.j 3b54 <__rom_size-0x167f8>
     198:	01 0c 00 00 	l.j 4300198 <__stack+0x3e8019c>
     19c:	10 6c 02 0c 	l.bf 1b009cc <__stack+0x16809d0>
     1a0:	00 00 1b 1a 	l.j 6e08 <__rom_size-0x13544>
     1a4:	04 0c 00 00 	l.jal 3001a4 <__ram_length+0x2801a4>
     1a8:	15 f3 08 0c 	l.nop 0x80c
     1ac:	00 00 1b 5a 	l.j 6f14 <__rom_size-0x13438>
     1b0:	10 0c 00 00 	l.bf 3001b0 <__ram_length+0x2801b0>
     1b4:	12 1a 20 0c 	l.bf f86881e4 <__stack+0xf82081e8>
     1b8:	00 00 18 8a 	l.j 63e0 <__rom_size-0x13f6c>
     1bc:	c0 00 0c 00 	l.mtspr r0,r1,0x400
     1c0:	00 15 3c 80 	l.j 54f3c0 <__stack+0xcf3c4>
     1c4:	01 00 0b 00 	l.j 4002dc4 <__stack+0x3b82dc8>
     1c8:	00 1b a8 04 	l.j 6ea1d8 <__stack+0x26a1dc>
     1cc:	09 1b 00 00 	.word 0x091b0000
     1d0:	01 f1 0c 00 	l.j 7c431d0 <__stack+0x77c31d4>
     1d4:	00 1b 94 7e 	l.j 6e53cc <__stack+0x2653d0>
     1d8:	0c 00 00 0e 	l.bnf 210 <__rom_size-0x1a13c>
     1dc:	c1 7f 0c 00 	l.mtspr r31,r1,0x5c00
     1e0:	00 0d c1 00 	l.j 3705e0 <__ram_length+0x2f05e0>
     1e4:	0c 00 00 0a 	l.bnf 20c <__rom_size-0x1a140>
     1e8:	a0 01 0c 00 	l.addic r0,r1,0xc00
     1ec:	00 0b 93 02 	l.j 2e4df4 <__ram_length+0x264df4>
     1f0:	00 09 00 00 	l.j 2401f0 <__ram_length+0x1c01f0>
     1f4:	1a 05 1f 34 	.word 0x1a051f34
     1f8:	00 00 00 74 	l.j 3c8 <__rom_size-0x19f84>
     1fc:	09 00 00 1a 	.word 0x0900001a
     200:	05 1f 34 00 	l.jal 47cd200 <__stack+0x434d204>
     204:	00 00 74 0d 	l.j 1d238 <__rom_size+0x2eec>
     208:	08 20 06 00 	.word 0x08200600
     20c:	00 02 2c 0e 	l.j 8b244 <__ram_length+0xb244>
     210:	00 00 05 42 	l.j 1718 <__rom_size-0x18c34>
     214:	20 08 00 00 	.word 0x20080000
     218:	00 74 02 23 	l.j 1d00aa4 <__stack+0x1880aa8>
     21c:	00 0e 00 00 	l.j 38021c <__ram_length+0x30021c>
     220:	0b c0 20 09 	.word 0x0bc02009
     224:	00 00 00 74 	l.j 3f4 <__rom_size-0x19f58>
     228:	02 23 04 00 	l.j f88c1228 <__stack+0xf844122c>
     22c:	09 00 00 0b 	.word 0x0900000b
     230:	77 20 0a 00 	l.cust2 
     234:	00 02 07 0f 	l.j 81e70 <__ram_length+0x1e70>
     238:	01 2c 20 0c 	l.j 4b08268 <__stack+0x468826c>
     23c:	00 00 02 b1 	l.j d00 <__rom_size-0x1964c>
     240:	0e 00 00 1a 	l.bnf f80002a8 <__stack+0xf7b802ac>
     244:	a1 20 0e 00 	l.addic r9,r0,0xe00
     248:	00 02 b1 02 	l.j ac650 <__ram_length+0x2c650>
     24c:	23 00 0e 00 	.word 0x23000e00
     250:	00 17 7c 20 	l.j 5df2d0 <__stack+0x15f2d4>
     254:	0f 00 00 00 	l.bnf fc000254 <__stack+0xfbb80258>
     258:	2c 02 23 0b 	.word 0x2c02230b
     25c:	0e 00 00 13 	l.bnf f80002a8 <__stack+0xf7b802ac>
     260:	4d 20 10 00 	l.maci r0,0x1000
     264:	00 02 2c 02 	l.j 8b26c <__ram_length+0xb26c>
     268:	23 0c 0e 00 	.word 0x230c0e00
     26c:	00 05 42 20 	l.j 150aec <__ram_length+0xd0aec>
     270:	11 00 00 00 	l.bf 4000270 <__stack+0x3b80274>
     274:	74 02 23 14 	l.cust2 
     278:	0e 00 00 0a 	l.bnf f80002a0 <__stack+0xf7b802a4>
     27c:	ba 20 12 00 	l.slli r17,r0,0x0
     280:	00 00 74 02 	l.j 1d288 <__rom_size+0x2f3c>
     284:	23 18 0e 00 	.word 0x23180e00
     288:	00 0f 3b 20 	l.j 3cef08 <__ram_length+0x34ef08>
     28c:	13 00 00 00 	l.bf fc00028c <__stack+0xfbb80290>
     290:	74 02 23 1c 	l.cust2 
     294:	0e 00 00 02 	l.bnf f800029c <__stack+0xf7b802a0>
     298:	25 20 14 00 	l.rfe 
     29c:	00 00 74 02 	l.j 1d2a4 <__rom_size+0x2f58>
     2a0:	23 20 0e 00 	.word 0x23200e00
     2a4:	00 1a 9c 20 	l.j 6a7324 <__stack+0x227328>
     2a8:	15 00 00 02 	l.nop 0x2
     2ac:	c1 02 23 24 	l.mtspr r2,r4,0x4324
     2b0:	00 04 00 00 	l.j 1002b0 <__ram_length+0x802b0>
     2b4:	00 89 00 00 	l.j 22402b4 <__stack+0x1dc02b8>
     2b8:	02 c1 05 00 	l.j fb0416b8 <__stack+0xfabc16bc>
     2bc:	00 00 74 0a 	l.j 1d2e4 <__rom_size+0x2f98>
     2c0:	00 04 00 00 	l.j 1002c0 <__ram_length+0x802c0>
     2c4:	00 89 00 00 	l.j 22402c4 <__stack+0x1dc02c8>
     2c8:	02 d2 10 00 	l.j fb4842c8 <__stack+0xfb0042cc>
     2cc:	00 00 74 01 	l.j 1d2d0 <__rom_size+0x2f84>
     2d0:	04 00 09 00 	l.jal 26d0 <__rom_size-0x17c7c>
     2d4:	00 1a 1f 20 	l.j 687f54 <__stack+0x207f58>
     2d8:	16 00 00 02 	.word 0x16000002
     2dc:	37 04 00 00 	.word 0x37040000
     2e0:	00 2c 00 00 	l.j b002e0 <__stack+0x6802e4>
     2e4:	02 ed 05 00 	l.j fbb416e4 <__stack+0xfb6c16e8>
     2e8:	00 00 74 07 	l.j 1d304 <__rom_size+0x2fb8>
     2ec:	00 04 00 00 	l.j 1002ec <__ram_length+0x802ec>
     2f0:	00 2c 00 00 	l.j b002f0 <__stack+0x6802f4>
     2f4:	02 fe 10 00 	l.j fbf842f4 <__stack+0xfbb042f8>
     2f8:	00 00 74 01 	l.j 1d2fc <__rom_size+0x2fb0>
     2fc:	bd 00 04 00 	.word 0xbd000400
     300:	00 00 3a 00 	l.j eb00 <__rom_size-0xb84c>
     304:	00 03 0e 05 	l.j c3b18 <__ram_length+0x43b18>
     308:	00 00 00 74 	l.j 4d8 <__rom_size-0x19e74>
     30c:	ff 00 04 00 	l.cust8 
     310:	00 00 74 00 	l.j 1d310 <__rom_size+0x2fc4>
     314:	00 03 1e 05 	l.j c7b28 <__ram_length+0x47b28>
     318:	00 00 00 74 	l.j 4e8 <__rom_size-0x19e64>
     31c:	7f 00 0f 03 	l.cust4 
     320:	34 21 18 00 	.word 0x34211800
     324:	00 03 63 0e 	l.j d8f5c <__ram_length+0x58f5c>
     328:	00 00 17 e9 	l.j 62cc <__rom_size-0x14080>
     32c:	21 1a 00 00 	.word 0x211a0000
     330:	02 d2 02 23 	l.j fb480bbc <__stack+0xfb000bc0>
     334:	00 0e 00 00 	l.j 380334 <__ram_length+0x300334>
     338:	0a ba 21 1b 	.word 0x0aba211b
     33c:	00 00 00 74 	l.j 50c <__rom_size-0x19e40>
     340:	03 23 ac 02 	l.j fc8eb348 <__stack+0xfc46b34c>
     344:	11 70 74 72 	l.bf 5c1d50c <__stack+0x579d510>
     348:	00 21 1c 00 	l.j 847348 <__stack+0x3c734c>
     34c:	00 00 74 03 	l.j 1d358 <__rom_size+0x300c>
     350:	23 b0 02 0e 	.word 0x23b0020e
     354:	00 00 02 5f 	l.j cd0 <__rom_size-0x1967c>
     358:	21 1d 00 00 	.word 0x211d0000
     35c:	03 63 03 23 	l.j fd8c0fe8 <__stack+0xfd440fec>
     360:	b4 02 00 04 	l.mfspr r0,r2,0x4
     364:	00 00 00 2c 	l.j 414 <__rom_size-0x19f38>
     368:	00 00 03 74 	l.j 1138 <__rom_size-0x19214>
     36c:	10 00 00 00 	l.bf 36c <__rom_size-0x19fe0>
     370:	74 01 ff 00 	l.cust2 
     374:	09 00 00 11 	.word 0x09000011
     378:	e3 21 1e 00 	.word 0xe3211e00
     37c:	00 03 1e 09 	l.j c7ba0 <__ram_length+0x47ba0>
     380:	00 00 06 0e 	l.j 1bb8 <__rom_size-0x18794>
     384:	1f 2e 00 00 	.word 0x1f2e0000
     388:	00 2c 09 00 	l.j b02788 <__stack+0x68278c>
     38c:	00 14 41 1f 	l.j 510808 <__stack+0x9080c>
     390:	31 00 00 00 	.word 0x31000000
     394:	3a 09 00 00 	.word 0x3a090000
     398:	1a 05 1f 34 	.word 0x1a051f34
     39c:	00 00 00 74 	l.j 56c <__rom_size-0x19de0>
     3a0:	0d 08 20 06 	l.bnf 42083b8 <__stack+0x3d883bc>
     3a4:	00 00 03 c5 	l.j 12b8 <__rom_size-0x19094>
     3a8:	0e 00 00 05 	l.bnf f80003bc <__stack+0xf7b803c0>
     3ac:	42 20 08 00 	.word 0x42200800
     3b0:	00 00 74 02 	l.j 1d3b8 <__rom_size+0x306c>
     3b4:	23 00 0e 00 	.word 0x23000e00
     3b8:	00 0b c0 20 	l.j 2f0438 <__ram_length+0x270438>
     3bc:	09 00 00 00 	.word 0x09000000
     3c0:	74 02 23 04 	l.cust2 
     3c4:	00 09 00 00 	l.j 2403c4 <__ram_length+0x1c03c4>
     3c8:	0b 77 20 0a 	.word 0x0b77200a
     3cc:	00 00 03 a0 	l.j 124c <__rom_size-0x19100>
     3d0:	0f 01 2c 20 	l.bnf fc04b450 <__stack+0xfbbcb454>
     3d4:	0c 00 00 04 	l.bnf 3e4 <__rom_size-0x19f68>
     3d8:	4a 0e 00 00 	l.jalr r0
     3dc:	1a a1 20 0e 	.word 0x1aa1200e
     3e0:	00 00 02 b1 	l.j ea4 <__rom_size-0x194a8>
     3e4:	02 23 00 0e 	l.j f88c041c <__stack+0xf8440420>
     3e8:	00 00 17 7c 	l.j 61d8 <__rom_size-0x14174>
     3ec:	20 0f 00 00 	.word 0x200f0000
     3f0:	00 2c 02 23 	l.j b00c7c <__stack+0x680c80>
     3f4:	0b 0e 00 00 	.word 0x0b0e0000
     3f8:	13 4d 20 10 	l.bf fd348438 <__stack+0xfcec843c>
     3fc:	00 00 03 c5 	l.j 1310 <__rom_size-0x1903c>
     400:	02 23 0c 0e 	l.j f88c3438 <__stack+0xf844343c>
     404:	00 00 05 42 	l.j 190c <__rom_size-0x18a40>
     408:	20 11 00 00 	.word 0x20110000
     40c:	00 74 02 23 	l.j 1d00c98 <__stack+0x1880c9c>
     410:	14 0e 00 00 	.word 0x140e0000
     414:	0a ba 20 12 	.word 0x0aba2012
     418:	00 00 00 74 	l.j 5e8 <__rom_size-0x19d64>
     41c:	02 23 18 0e 	l.j f88c6454 <__stack+0xf8446458>
     420:	00 00 0f 3b 	l.j 410c <__rom_size-0x16240>
     424:	20 13 00 00 	.word 0x20130000
     428:	00 74 02 23 	l.j 1d00cb4 <__stack+0x1880cb8>
     42c:	1c 0e 00 00 	.word 0x1c0e0000
     430:	02 25 20 14 	l.j f8948480 <__stack+0xf84c8484>
     434:	00 00 00 74 	l.j 604 <__rom_size-0x19d48>
     438:	02 23 20 0e 	l.j f88c8470 <__stack+0xf8448474>
     43c:	00 00 1a 9c 	l.j 6eac <__rom_size-0x134a0>
     440:	20 15 00 00 	.word 0x20150000
     444:	02 c1 02 23 	l.j fb040cd0 <__stack+0xfabc0cd4>
     448:	24 00 09 00 	l.rfe 
     44c:	00 1a 1f 20 	l.j 6880cc <__stack+0x2080d0>
     450:	16 00 00 03 	.word 0x16000003
     454:	d0 0f 03 34 	l.sd 0x334(r15),r0
     458:	21 18 00 00 	.word 0x21180000
     45c:	04 9a 0e 00 	l.jal 2683c5c <__stack+0x2203c60>
     460:	00 17 e9 21 	l.j 5fa8e4 <__stack+0x17a8e8>
     464:	1a 00 00 04 	l.movhi r16,0x4
     468:	4a 02 23 00 	l.jalr r4
     46c:	0e 00 00 0a 	l.bnf f8000494 <__stack+0xf7b80498>
     470:	ba 21 1b 00 	l.slli r17,r1,0x0
     474:	00 00 74 03 	l.j 1d480 <__rom_size+0x3134>
     478:	23 ac 02 11 	.word 0x23ac0211
     47c:	70 74 72 00 	l.cust1 
     480:	21 1c 00 00 	.word 0x211c0000
     484:	00 74 03 23 	l.j 1d01110 <__stack+0x1881114>
     488:	b0 02 0e 00 	l.muli r0,r2,0xe00
     48c:	00 02 5f 21 	l.j 98110 <__ram_length+0x18110>
     490:	1d 00 00 03 	.word 0x1d000003
     494:	63 03 23 b4 	.word 0x630323b4
     498:	02 00 09 00 	l.j f8002898 <__stack+0xf7b8289c>
     49c:	00 11 e3 21 	l.j 479120 <_stack+0x57460>
     4a0:	1e 00 00 04 	.word 0x1e000004
     4a4:	55 04 00 00 	.word 0x55040000
     4a8:	00 74 00 00 	l.j 1d004a8 <__stack+0x18804ac>
     4ac:	04 b5 05 00 	l.jal 2d418ac <__stack+0x28c18b0>
     4b0:	00 00 74 a5 	l.j 1d744 <__rom_size+0x33f8>
     4b4:	00 04 00 00 	l.j 1004b4 <__ram_length+0x804b4>
     4b8:	00 89 00 00 	l.j 22404b8 <__stack+0x1dc04bc>
     4bc:	04 c5 05 00 	l.jal 31418bc <__stack+0x2cc18c0>
     4c0:	00 00 74 15 	l.j 1d514 <__rom_size+0x31c8>
     4c4:	00 0f 11 44 	l.j 3c49d4 <__ram_length+0x3449d4>
     4c8:	22 23 00 00 	.word 0x22230000
     4cc:	05 63 0e 00 	l.jal 58c3ccc <__stack+0x5443cd0>
     4d0:	00 0e cf 22 	l.j 3b4158 <__ram_length+0x334158>
     4d4:	25 00 00 00 	l.rfe 
     4d8:	41 02 23 00 	.word 0x41022300
     4dc:	0e 00 00 17 	l.bnf f8000538 <__stack+0xf7b8053c>
     4e0:	e9 22 26 00 	.word 0xe9222600
     4e4:	00 04 4a 02 	l.j 112cec <__ram_length+0x92cec>
     4e8:	23 04 0e 00 	.word 0x23040e00
     4ec:	00 13 a1 22 	l.j 4e8974 <__stack+0x68978>
     4f0:	27 00 00 00 	l.rfe 
     4f4:	3a 03 23 b0 	.word 0x3a0323b0
     4f8:	02 0e 00 00 	l.j f83804f8 <__stack+0xf7f004fc>
     4fc:	0b 48 22 28 	.word 0x0b482228
     500:	00 00 00 3a 	l.j 5e8 <__rom_size-0x19d64>
     504:	03 23 b2 02 	l.j fc8ecd0c <__stack+0xfc46cd10>
     508:	0e 00 00 00 	l.bnf f8000508 <__stack+0xf7b8050c>
     50c:	fe 22 29 00 	l.cust8 
     510:	00 00 3a 03 	l.j ed1c <__rom_size-0xb630>
     514:	23 b4 02 0e 	.word 0x23b4020e
     518:	00 00 18 b5 	l.j 67ec <__rom_size-0x13b60>
     51c:	22 2a 00 00 	.word 0x222a0000
     520:	00 3a 03 23 	l.j e811ac <__stack+0xa011b0>
     524:	b6 02 0e 00 	l.mfspr r16,r2,0xe00
     528:	00 07 50 22 	l.j 1d45b0 <__ram_length+0x1545b0>
     52c:	2b 00 00 00 	.word 0x2b000000
     530:	3a 03 23 b8 	.word 0x3a0323b8
     534:	02 0e 00 00 	l.j f8380534 <__stack+0xf7f00538>
     538:	05 bc 22 2c 	l.jal 6f08de8 <__stack+0x6a88dec>
     53c:	00 00 00 5d 	l.j 6b0 <__rom_size-0x19c9c>
     540:	03 23 bc 02 	l.j fc8ef548 <__stack+0xfc46f54c>
     544:	0e 00 00 0b 	l.bnf f8000570 <__stack+0xf7b80574>
     548:	c0 22 2d 00 	l.mtspr r2,r5,0xd00
     54c:	00 05 63 03 	l.j 159158 <__ram_length+0xd9158>
     550:	23 c0 02 0e 	.word 0x23c0020e
     554:	00 00 14 20 	l.j 55d4 <__rom_size-0x14d78>
     558:	22 2e 00 00 	.word 0x222e0000
     55c:	00 74 03 23 	l.j 1d011e8 <__stack+0x18811ec>
     560:	c0 22 00 04 	l.mtspr r2,r0,0x804
     564:	00 00 00 74 	l.j 734 <__rom_size-0x19c18>
     568:	00 00 05 74 	l.j 1b38 <__rom_size-0x18814>
     56c:	10 00 00 00 	l.bf 56c <__rom_size-0x19de0>
     570:	74 03 ff 00 	l.cust2 
     574:	09 00 00 01 	.word 0x09000001
     578:	35 22 2f 00 	.word 0x35222f00
     57c:	00 04 c5 0d 	l.j 1319b0 <__ram_length+0xb19b0>
     580:	18 23 03 00 	.word 0x18230300
     584:	00 05 a4 0e 	l.j 1695bc <__ram_length+0xe95bc>
     588:	00 00 1a a1 	l.j 700c <__rom_size-0x13340>
     58c:	23 05 00 00 	.word 0x23050000
     590:	00 ab 02 23 	l.j 2ac0e1c <__stack+0x2640e20>
     594:	00 0e 00 00 	l.j 380594 <__ram_length+0x300594>
     598:	1a 9c 23 06 	l.movhi r20,0x2306
     59c:	00 00 05 a4 	l.j 1c2c <__rom_size-0x18720>
     5a0:	02 23 08 00 	l.j f88c25a0 <__stack+0xf84425a4>
     5a4:	04 00 00 00 	l.jal 5a4 <__rom_size-0x19da8>
     5a8:	89 00 00 05 	l.lws r8,0x5(r0)
     5ac:	b4 05 00 00 	l.mfspr r0,r5,0x0
     5b0:	00 74 0f 00 	l.j 1d041b0 <__stack+0x18841b4>
     5b4:	09 00 00 19 	.word 0x09000019
     5b8:	a6 23 07 00 	l.andi r17,r3,0x700
     5bc:	00 05 7f 0d 	l.j 1601f0 <__ram_length+0xe01f0>
     5c0:	02 23 09 00 	l.j f88c29c0 <__stack+0xf84429c4>
     5c4:	00 05 e4 0e 	l.j 1795fc <__ram_length+0xf95fc>
     5c8:	00 00 07 85 	l.j 23dc <__rom_size-0x17f70>
     5cc:	23 0b 00 00 	.word 0x230b0000
     5d0:	00 2c 02 23 	l.j b00e5c <__stack+0x680e60>
     5d4:	00 0e 00 00 	l.j 3805d4 <__ram_length+0x3005d4>
     5d8:	18 3e 23 0c 	l.movhi r1,0x230c
     5dc:	00 00 00 2c 	l.j 68c <__rom_size-0x19cc0>
     5e0:	02 23 01 00 	l.j f88c09e0 <__stack+0xf84409e4>
     5e4:	09 00 00 15 	.word 0x09000015
     5e8:	c3 23 0d 00 	l.mtspr r3,r1,0xcd00
     5ec:	00 05 bf 0d 	l.j 170220 <__ram_length+0xf0220>
     5f0:	02 23 0f 00 	l.j f88c41f0 <__stack+0xf84441f4>
     5f4:	00 06 14 0e 	l.j 18562c <__ram_length+0x10562c>
     5f8:	00 00 0b 55 	l.j 334c <__rom_size-0x17000>
     5fc:	23 11 00 00 	.word 0x23110000
     600:	00 2c 02 23 	l.j b00e8c <__stack+0x680e90>
     604:	00 0e 00 00 	l.j 380604 <__ram_length+0x300604>
     608:	16 e9 23 12 	.word 0x16e92312
     60c:	00 00 00 2c 	l.j 6bc <__rom_size-0x19c90>
     610:	02 23 01 00 	l.j f88c0a10 <__stack+0xf8440a14>
     614:	09 00 00 02 	.word 0x09000002
     618:	f7 23 13 00 	l.cust6 
     61c:	00 05 ef 0d 	l.j 17c250 <__ram_length+0xfc250>
     620:	1c 23 15 00 	.word 0x1c231500
     624:	00 06 60 0e 	l.j 19865c <__ram_length+0x11865c>
     628:	00 00 0c 0d 	l.j 365c <__rom_size-0x16cf0>
     62c:	23 17 00 00 	.word 0x23170000
     630:	00 2c 02 23 	l.j b00ebc <__stack+0x680ec0>
     634:	00 0e 00 00 	l.j 380634 <__ram_length+0x300634>
     638:	1a 62 23 18 	l.movhi r19,0x2318
     63c:	00 00 00 2c 	l.j 6ec <__rom_size-0x19c60>
     640:	02 23 01 0e 	l.j f88c0a78 <__stack+0xf8440a7c>
     644:	00 00 1a a1 	l.j 70c8 <__rom_size-0x13284>
     648:	23 19 00 00 	.word 0x23190000
     64c:	00 ab 02 23 	l.j 2ac0ed8 <__stack+0x2640edc>
     650:	02 0e 00 00 	l.j f8380650 <__stack+0xf7f00654>
     654:	1a 9c 23 1a 	l.movhi r20,0x231a
     658:	00 00 05 a4 	l.j 1ce8 <__rom_size-0x18664>
     65c:	02 23 0a 00 	l.j f88c2e5c <__stack+0xf8442e60>
     660:	09 00 00 1a 	.word 0x0900001a
     664:	1b 23 1b 00 	.word 0x1b231b00
     668:	00 06 1f 0d 	l.j 18829c <__ram_length+0x10829c>
     66c:	6c 23 1d 00 	.word 0x6c231d00
     670:	00 07 37 11 	l.j 1ce2b4 <__ram_length+0x14e2b4>
     674:	69 64 00 23 	.word 0x69640023
     678:	1f 00 00 00 	.word 0x1f000000
     67c:	ab 02 23 00 	l.ori r24,r2,0x2300
     680:	0e 00 00 06 	l.bnf f8000698 <__stack+0xf7b8069c>
     684:	fc 23 20 00 	l.cust8 
     688:	00 00 74 02 	l.j 1d690 <__rom_size+0x3344>
     68c:	23 08 0e 00 	.word 0x23080e00
     690:	00 10 fd 23 	l.j 43fb1c <_stack+0x1de5c>
     694:	21 00 00 05 	l.trap 0x5
     698:	b4 02 23 0c 	l.mfspr r0,r2,0x230c
     69c:	0e 00 00 18 	l.bnf f80006fc <__stack+0xf7b80700>
     6a0:	83 23 22 00 	l.ld r25,0x2200(r3)
     6a4:	00 05 e4 02 	l.j 1796ac <__ram_length+0xf96ac>
     6a8:	23 24 0e 00 	.word 0x23240e00
     6ac:	00 0b 4e 23 	l.j 2d3f38 <__ram_length+0x253f38>
     6b0:	23 00 00 00 	l.csync 
     6b4:	2c 02 23 26 	.word 0x2c022326
     6b8:	0e 00 00 06 	l.bnf f80006d0 <__stack+0xf7b806d4>
     6bc:	56 23 24 00 	.word 0x56232400
     6c0:	00 00 2c 02 	l.j b6c8 <__rom_size-0xec84>
     6c4:	23 27 0e 00 	.word 0x23270e00
     6c8:	00 0d ab 23 	l.j 36b354 <__ram_length+0x2eb354>
     6cc:	25 00 00 06 	l.rfe 
     6d0:	14 02 23 28 	.word 0x14022328
     6d4:	0e 00 00 02 	l.bnf f80006dc <__stack+0xf7b806e0>
     6d8:	d9 23 26 00 	l.sb 0x4e00(r3),r4
     6dc:	00 00 2c 02 	l.j b6e4 <__rom_size-0xec68>
     6e0:	23 2a 0e 00 	.word 0x232a0e00
     6e4:	00 09 ef 23 	l.j 27c370 <__ram_length+0x1fc370>
     6e8:	27 00 00 00 	l.rfe 
     6ec:	2c 02 23 2b 	.word 0x2c02232b
     6f0:	0e 00 00 0a 	l.bnf f8000718 <__stack+0xf7b8071c>
     6f4:	61 23 28 00 	.word 0x61232800
     6f8:	00 00 2c 02 	l.j b700 <__rom_size-0xec4c>
     6fc:	23 2c 0e 00 	.word 0x232c0e00
     700:	00 0e 78 23 	l.j 39e78c <__ram_length+0x31e78c>
     704:	29 00 00 00 	.word 0x29000000
     708:	2c 02 23 2d 	.word 0x2c02232d
     70c:	0e 00 00 00 	l.bnf f800070c <__stack+0xf7b80710>
     710:	af 23 2a 00 	l.xori r25,r3,0x2a00
     714:	00 07 37 02 	l.j 1ce31c <__ram_length+0x14e31c>
     718:	23 30 11 63 	.word 0x23301163
     71c:	70 75 00 23 	l.cust1 
     720:	2b 00 00 00 	.word 0x2b000000
     724:	2c 02 23 68 	.word 0x2c022368
     728:	0e 00 00 0e 	l.bnf f8000760 <__stack+0xf7b80764>
     72c:	7d 23 2c 00 	l.cust4 
     730:	00 00 2c 02 	l.j b738 <__rom_size-0xec14>
     734:	23 69 00 04 	.word 0x23690004
     738:	00 00 06 60 	l.j 20b8 <__rom_size-0x18294>
     73c:	00 00 07 47 	l.j 2458 <__rom_size-0x17ef4>
     740:	05 00 00 00 	l.jal 4000740 <__stack+0x3b80744>
     744:	74 01 00 09 	l.cust2 
     748:	00 00 13 ab 	l.j 55f4 <__rom_size-0x14d58>
     74c:	23 2d 00 00 	.word 0x232d0000
     750:	06 6b 0d 50 	l.jal f9ac3c90 <__stack+0xf9643c94>
     754:	15 aa 00 00 	l.nop 0x0
     758:	09 29 0e 00 	.word 0x09290e00
     75c:	00 16 57 15 	l.j 5963b0 <__stack+0x1163b4>
     760:	ab 00 00 09 	l.ori r24,r0,0x9
     764:	29 02 23 00 	.word 0x29022300
     768:	0e 00 00 09 	l.bnf f800078c <__stack+0xf7b80790>
     76c:	a6 15 ac 00 	l.andi r16,r21,0xac00
     770:	00 09 39 02 	l.j 24eb78 <__ram_length+0x1ceb78>
     774:	23 08 0e 00 	.word 0x23080e00
     778:	00 0a b6 15 	l.j 2adfcc <__ram_length+0x22dfcc>
     77c:	ad 00 00 03 	l.xori r8,r0,0x3
     780:	95 02 23 14 	l.lhz r8,0x2314(r2)
     784:	0e 00 00 0b 	l.bnf f80007b0 <__stack+0xf7b807b4>
     788:	8d 15 ae 00 	l.lbz r8,0xffffae00(r21)
     78c:	00 03 7f 02 	l.j e0394 <__ram_length+0x60394>
     790:	23 18 0e 00 	.word 0x23180e00
     794:	00 13 ec 15 	l.j 4fb7e8 <__stack+0x7b7ec>
     798:	ae 00 00 03 	l.xori r16,r0,0x3
     79c:	7f 02 23 19 	l.cust4 
     7a0:	0e 00 00 14 	l.bnf f80007f0 <__stack+0xf7b807f4>
     7a4:	dd 15 ae 00 	l.sh 0x4600(r21),r21
     7a8:	00 03 7f 02 	l.j e03b0 <__ram_length+0x603b0>
     7ac:	23 1a 0e 00 	.word 0x231a0e00
     7b0:	00 14 eb 15 	l.j 53b404 <__stack+0xbb408>
     7b4:	ae 00 00 03 	l.xori r16,r0,0x3
     7b8:	7f 02 23 1b 	l.cust4 
     7bc:	0e 00 00 0e 	l.bnf f80007f4 <__stack+0xf7b807f8>
     7c0:	9f 15 af 00 	l.addi r24,r21,0xffffaf00
     7c4:	00 03 7f 02 	l.j e03cc <__ram_length+0x603cc>
     7c8:	23 1c 0e 00 	.word 0x231c0e00
     7cc:	00 12 38 15 	l.j 48e820 <__stack+0xe824>
     7d0:	b0 00 00 03 	l.muli r0,r0,0x3
     7d4:	7f 02 23 1d 	l.cust4 
     7d8:	11 6b 65 79 	l.bf 5ad9dbc <__stack+0x5659dc0>
     7dc:	00 15 b1 00 	l.j 56cbdc <__stack+0xecbe0>
     7e0:	00 03 7f 02 	l.j e03e8 <__ram_length+0x603e8>
     7e4:	23 1e 11 69 	.word 0x231e1169
     7e8:	64 65 00 15 	.word 0x64650015
     7ec:	b2 00 00 03 	l.muli r16,r0,0x3
     7f0:	7f 02 23 1f 	l.cust4 
     7f4:	0e 00 00 1b 	l.bnf f8000860 <__stack+0xf7b80864>
     7f8:	ae 15 b3 00 	l.xori r16,r21,0xffffb300
     7fc:	00 03 7f 02 	l.j e0404 <__ram_length+0x60404>
     800:	23 20 11 61 	.word 0x23201161
     804:	67 61 00 15 	.word 0x67610015
     808:	b4 00 00 03 	l.mfspr r0,r0,0x3
     80c:	7f 02 23 21 	l.cust4 
     810:	0e 00 00 05 	l.bnf f8000824 <__stack+0xf7b80828>
     814:	c3 15 b5 00 	l.mtspr r21,r22,0xc500
     818:	00 03 7f 02 	l.j e0420 <__ram_length+0x60420>
     81c:	23 22 0e 00 	.word 0x23220e00
     820:	00 02 e5 15 	l.j b9c74 <__ram_length+0x39c74>
     824:	b6 00 00 03 	l.mfspr r16,r0,0x3
     828:	7f 02 23 23 	l.cust4 
     82c:	0e 00 00 1c 	l.bnf f800089c <__stack+0xf7b808a0>
     830:	02 15 b7 00 	l.j f856e430 <__stack+0xf80ee434>
     834:	00 03 7f 02 	l.j e043c <__ram_length+0x6043c>
     838:	23 24 0e 00 	.word 0x23240e00
     83c:	00 1a 5d 15 	l.j 697c90 <__stack+0x217c94>
     840:	b8 00 00 03 	l.slli r0,r0,0x3
     844:	7f 02 23 25 	l.cust4 
     848:	0e 00 00 05 	l.bnf f800085c <__stack+0xf7b80860>
     84c:	63 15 b9 00 	.word 0x6315b900
     850:	00 03 7f 02 	l.j e0458 <__ram_length+0x60458>
     854:	23 26 0e 00 	.word 0x23260e00
     858:	00 12 b5 15 	l.j 4adcac <__stack+0x2dcb0>
     85c:	ba 00 00 03 	l.slli r16,r0,0x3
     860:	7f 02 23 27 	l.cust4 
     864:	0e 00 00 05 	l.bnf f8000878 <__stack+0xf7b8087c>
     868:	5b 15 bb 00 	.word 0x5b15bb00
     86c:	00 03 7f 02 	l.j e0474 <__ram_length+0x60474>
     870:	23 28 0e 00 	.word 0x23280e00
     874:	00 0b e8 15 	l.j 2fa8c8 <__ram_length+0x27a8c8>
     878:	bc 00 00 03 	l.sfeqi r0,0x3
     87c:	7f 02 23 29 	l.cust4 
     880:	0e 00 00 12 	l.bnf f80008c8 <__stack+0xf7b808cc>
     884:	89 15 bd 00 	l.lws r8,0xffffbd00(r21)
     888:	00 03 8a 02 	l.j e3090 <__ram_length+0x63090>
     88c:	23 2a 0e 00 	.word 0x232a0e00
     890:	00 0f a7 15 	l.j 3ea4e4 <__ram_length+0x36a4e4>
     894:	be 00 00 03 	.word 0xbe000003
     898:	95 02 23 2c 	l.lhz r8,0x232c(r2)
     89c:	0e 00 00 1c 	l.bnf f800090c <__stack+0xf7b80910>
     8a0:	24 15 bf 00 	l.rfe 
     8a4:	00 03 8a 02 	l.j e30ac <__ram_length+0x630ac>
     8a8:	23 30 0e 00 	.word 0x23300e00
     8ac:	00 00 95 15 	l.j 25d00 <__rom_size+0xb9b4>
     8b0:	c0 00 00 09 	l.mtspr r0,r0,0x9
     8b4:	49 02 23 32 	l.jalr r4
     8b8:	0e 00 00 02 	l.bnf f80008c0 <__stack+0xf7b808c4>
     8bc:	cd 15 c1 00 	.word 0xcd15c100
     8c0:	00 03 8a 02 	l.j e30c8 <__ram_length+0x630c8>
     8c4:	23 38 0e 00 	.word 0x23380e00
     8c8:	00 19 4d 15 	l.j 653d1c <__stack+0x1d3d20>
     8cc:	c2 00 00 03 	l.mtspr r0,r0,0x8003
     8d0:	8a 02 23 3a 	l.lws r16,0x233a(r2)
     8d4:	0e 00 00 16 	l.bnf f800092c <__stack+0xf7b80930>
     8d8:	e0 15 c3 00 	.word 0xe015c300
     8dc:	00 03 95 02 	l.j e5ce4 <__ram_length+0x65ce4>
     8e0:	23 3c 0e 00 	.word 0x233c0e00
     8e4:	00 06 f8 15 	l.j 1be938 <__ram_length+0x13e938>
     8e8:	c4 00 00 03 	.word 0xc4000003
     8ec:	8a 02 23 40 	l.lws r16,0x2340(r2)
     8f0:	0e 00 00 05 	l.bnf f8000904 <__stack+0xf7b80908>
     8f4:	30 15 c5 00 	.word 0x3015c500
     8f8:	00 03 8a 02 	l.j e3100 <__ram_length+0x63100>
     8fc:	23 42 0e 00 	.word 0x23420e00
     900:	00 11 b2 15 	l.j 46d154 <_stack+0x4b494>
     904:	c6 00 00 03 	.word 0xc6000003
     908:	95 02 23 44 	l.lhz r8,0x2344(r2)
     90c:	0e 00 00 00 	l.bnf f800090c <__stack+0xf7b80910>
     910:	52 15 c7 00 	.word 0x5215c700
     914:	00 03 95 02 	l.j e5d1c <__ram_length+0x65d1c>
     918:	23 48 0e 00 	.word 0x23480e00
     91c:	00 1a 45 15 	l.j 691d70 <__stack+0x211d74>
     920:	c8 00 00 03 	lf.div.s r0,r0,r0
     924:	95 02 23 4c 	l.lhz r8,0x234c(r2)
     928:	00 04 00 00 	l.j 100928 <__ram_length+0x80928>
     92c:	03 7f 00 00 	l.j fdfc092c <__stack+0xfdb40930>
     930:	09 39 05 00 	.word 0x09390500
     934:	00 00 74 07 	l.j 1d950 <__rom_size+0x3604>
     938:	00 04 00 00 	l.j 100938 <__ram_length+0x80938>
     93c:	03 7f 00 00 	l.j fdfc093c <__stack+0xfdb40940>
     940:	09 49 05 00 	.word 0x09490500
     944:	00 00 74 0b 	l.j 1d970 <__rom_size+0x3624>
     948:	00 04 00 00 	l.j 100948 <__ram_length+0x80948>
     94c:	03 7f 00 00 	l.j fdfc094c <__stack+0xfdb40950>
     950:	09 59 05 00 	.word 0x09590500
     954:	00 00 74 05 	l.j 1d968 <__rom_size+0x361c>
     958:	00 09 00 00 	l.j 240958 <__ram_length+0x1c0958>
     95c:	10 2a 15 c9 	l.bf a86080 <__stack+0x606084>
     960:	00 00 07 52 	l.j 26a8 <__rom_size-0x17ca4>
     964:	09 00 00 00 	.word 0x09000000
     968:	3e 1d d3 00 	.word 0x3e1dd300
     96c:	00 00 74 0d 	l.j 1d9a0 <__rom_size+0x3654>
     970:	08 20 06 00 	.word 0x08200600
     974:	00 09 94 0e 	l.j 2659ac <__ram_length+0x1e59ac>
     978:	00 00 05 42 	l.j 1e80 <__rom_size-0x184cc>
     97c:	20 08 00 00 	.word 0x20080000
     980:	00 74 02 23 	l.j 1d0120c <__stack+0x1881210>
     984:	00 0e 00 00 	l.j 380984 <__ram_length+0x300984>
     988:	0b c0 20 09 	.word 0x0bc02009
     98c:	00 00 00 74 	l.j b5c <__rom_size-0x197f0>
     990:	02 23 04 00 	l.j f88c1990 <__stack+0xf8441994>
     994:	09 00 00 0b 	.word 0x0900000b
     998:	77 20 0a 00 	l.cust2 
     99c:	00 09 6f 0f 	l.j 25c5d8 <__ram_length+0x1dc5d8>
     9a0:	01 2c 20 0c 	l.j 4b089d0 <__stack+0x46889d4>
     9a4:	00 00 0a 19 	l.j 3208 <__rom_size-0x17144>
     9a8:	0e 00 00 1a 	l.bnf f8000a10 <__stack+0xf7b80a14>
     9ac:	a1 20 0e 00 	l.addic r9,r0,0xe00
     9b0:	00 02 b1 02 	l.j acdb8 <__ram_length+0x2cdb8>
     9b4:	23 00 0e 00 	.word 0x23000e00
     9b8:	00 17 7c 20 	l.j 5dfa38 <__stack+0x15fa3c>
     9bc:	0f 00 00 00 	l.bnf fc0009bc <__stack+0xfbb809c0>
     9c0:	2c 02 23 0b 	.word 0x2c02230b
     9c4:	0e 00 00 13 	l.bnf f8000a10 <__stack+0xf7b80a14>
     9c8:	4d 20 10 00 	l.maci r0,0x1000
     9cc:	00 09 94 02 	l.j 2659d4 <__ram_length+0x1e59d4>
     9d0:	23 0c 0e 00 	.word 0x230c0e00
     9d4:	00 05 42 20 	l.j 151254 <__ram_length+0xd1254>
     9d8:	11 00 00 00 	l.bf 40009d8 <__stack+0x3b809dc>
     9dc:	74 02 23 14 	l.cust2 
     9e0:	0e 00 00 0a 	l.bnf f8000a08 <__stack+0xf7b80a0c>
     9e4:	ba 20 12 00 	l.slli r17,r0,0x0
     9e8:	00 00 74 02 	l.j 1d9f0 <__rom_size+0x36a4>
     9ec:	23 18 0e 00 	.word 0x23180e00
     9f0:	00 0f 3b 20 	l.j 3cf670 <__ram_length+0x34f670>
     9f4:	13 00 00 00 	l.bf fc0009f4 <__stack+0xfbb809f8>
     9f8:	74 02 23 1c 	l.cust2 
     9fc:	0e 00 00 02 	l.bnf f8000a04 <__stack+0xf7b80a08>
     a00:	25 20 14 00 	l.rfe 
     a04:	00 00 74 02 	l.j 1da0c <__rom_size+0x36c0>
     a08:	23 20 0e 00 	.word 0x23200e00
     a0c:	00 1a 9c 20 	l.j 6a7a8c <__stack+0x227a90>
     a10:	15 00 00 02 	l.nop 0x2
     a14:	c1 02 23 24 	l.mtspr r2,r4,0x4324
     a18:	00 09 00 00 	l.j 240a18 <__ram_length+0x1c0a18>
     a1c:	1a 1f 20 16 	.word 0x1a1f2016
     a20:	00 00 09 9f 	l.j 309c <__rom_size-0x172b0>
     a24:	12 00 00 06 	l.bf f8000a3c <__stack+0xf7b80a40>
     a28:	a4 10 20 18 	l.andi r0,r16,0x2018
     a2c:	00 00 0a 5b 	l.j 3398 <__rom_size-0x16fb4>
     a30:	0e 00 00 01 	l.bnf f8000a34 <__stack+0xf7b80a38>
     a34:	1a 20 1a 00 	l.movhi r17,0x1a00
     a38:	00 02 dd 02 	l.j b7e40 <__ram_length+0x37e40>
     a3c:	23 00 0e 00 	.word 0x23000e00
     a40:	00 17 10 20 	l.j 5c4ac0 <__stack+0x144ac4>
     a44:	1b 00 00 00 	l.movhi r24,0x0
     a48:	74 02 23 08 	l.cust2 
     a4c:	0e 00 00 00 	l.bnf f8000a4c <__stack+0xf7b80a50>
     a50:	fe 20 1c 00 	l.cust8 
     a54:	00 00 74 02 	l.j 1da5c <__rom_size+0x3710>
     a58:	23 0c 00 13 	.word 0x230c0013
     a5c:	00 00 05 f2 	l.j 2224 <__rom_size-0x18128>
     a60:	02 00 20 1f 	l.j f8008adc <__stack+0xf7b88ae0>
     a64:	00 00 0a 95 	l.j 34b8 <__rom_size-0x16e94>
     a68:	0e 00 00 16 	l.bnf f8000ac0 <__stack+0xf7b80ac4>
     a6c:	5d 20 21 00 	.word 0x5d202100
     a70:	00 02 ed 02 	l.j bbe78 <__ram_length+0x3be78>
     a74:	23 00 0e 00 	.word 0x23000e00
     a78:	00 04 d9 20 	l.j 136ef8 <__ram_length+0xb6ef8>
     a7c:	22 00 00 0a 	.word 0x2200000a
     a80:	95 03 23 be 	l.lhz r8,0x23be(r3)
     a84:	03 0e 00 00 	l.j fc380a84 <__stack+0xfbf00a88>
     a88:	16 94 20 23 	.word 0x16942023
     a8c:	00 00 00 3a 	l.j b74 <__rom_size-0x197d8>
     a90:	03 23 fe 03 	l.j fc90029c <__stack+0xfc4802a0>
     a94:	00 04 00 00 	l.j 100a94 <__ram_length+0x80a94>
     a98:	0a 24 00 00 	.word 0x0a240000
     a9c:	0a a5 05 00 	.word 0x0aa50500
     aa0:	00 00 74 03 	l.j 1daac <__rom_size+0x3760>
     aa4:	00 0d 20 20 	l.j 348b24 <__ram_length+0x2c8b24>
     aa8:	29 00 00 0b 	.word 0x2900000b
     aac:	64 0e 00 00 	.word 0x640e0000
     ab0:	12 d8 20 2b 	l.bf fb608b5c <__stack+0xfb188b60>
     ab4:	00 00 02 dd 	l.j 1628 <__rom_size-0x18d24>
     ab8:	02 23 00 0e 	l.j f88c0af0 <__stack+0xf8440af4>
     abc:	00 00 09 b2 	l.j 3184 <__rom_size-0x171c8>
     ac0:	20 2f 00 00 	.word 0x202f0000
     ac4:	00 9b 02 23 	l.j 26c1350 <__stack+0x2241354>
     ac8:	08 0e 00 00 	.word 0x080e0000
     acc:	06 ed 20 30 	l.jal fbb48b8c <__stack+0xfb6c8b90>
     ad0:	00 00 00 2c 	l.j b80 <__rom_size-0x197cc>
     ad4:	02 23 0b 0e 	l.j f88c370c <__stack+0xf8443710>
     ad8:	00 00 11 76 	l.j 50b0 <__rom_size-0x1529c>
     adc:	20 39 00 00 	.word 0x20390000
     ae0:	00 2c 02 23 	l.j b0136c <__stack+0x681370>
     ae4:	0c 0e 00 00 	l.bnf 380ae4 <__ram_length+0x300ae4>
     ae8:	16 0d 20 3c 	.word 0x160d203c
     aec:	00 00 00 2c 	l.j b9c <__rom_size-0x197b0>
     af0:	02 23 0d 0e 	l.j f88c3f28 <__stack+0xf8443f2c>
     af4:	00 00 01 0f 	l.j f30 <__rom_size-0x1941c>
     af8:	20 3d 00 00 	.word 0x203d0000
     afc:	00 3a 02 23 	l.j e81388 <__stack+0xa0138c>
     b00:	0e 0e 00 00 	l.bnf f8380b00 <__stack+0xf7f00b04>
     b04:	10 a7 20 3e 	l.bf 29c8bfc <__stack+0x2548c00>
     b08:	00 00 00 3a 	l.j bf0 <__rom_size-0x1975c>
     b0c:	02 23 10 0e 	l.j f88c4b44 <__stack+0xf8444b48>
     b10:	00 00 15 ce 	l.j 6248 <__rom_size-0x14104>
     b14:	20 3f 00 00 	.word 0x203f0000
     b18:	00 3a 02 23 	l.j e813a4 <__stack+0xa013a8>
     b1c:	12 0e 00 00 	l.bf f8380b1c <__stack+0xf7f00b20>
     b20:	15 6d 20 40 	l.nop 0x2040
     b24:	00 00 00 3a 	l.j c0c <__rom_size-0x19740>
     b28:	02 23 14 0e 	l.j f88c5b60 <__stack+0xf8445b64>
     b2c:	00 00 1c 80 	l.j 7d2c <__rom_size-0x12620>
     b30:	20 41 00 00 	.word 0x20410000
     b34:	00 3a 02 23 	l.j e813c0 <__stack+0xa013c4>
     b38:	16 0e 00 00 	.word 0x160e0000
     b3c:	0f 9c 20 42 	l.bnf fe708c44 <__stack+0xfe288c48>
     b40:	00 00 00 3a 	l.j c28 <__rom_size-0x19724>
     b44:	02 23 18 0e 	l.j f88c6b7c <__stack+0xf8446b80>
     b48:	00 00 05 e5 	l.j 22dc <__rom_size-0x18070>
     b4c:	20 43 00 00 	.word 0x20430000
     b50:	00 3a 02 23 	l.j e813dc <__stack+0xa013e0>
     b54:	1a 0e 00 00 	l.movhi r16,0x0
     b58:	1b 7d 20 44 	.word 0x1b7d2044
     b5c:	00 00 00 74 	l.j d2c <__rom_size-0x19620>
     b60:	02 23 1c 00 	l.j f88c7b60 <__stack+0xf8447b64>
     b64:	09 00 00 14 	.word 0x09000014
     b68:	d4 20 45 00 	l.sw 0xd00(r0),r8
     b6c:	00 0a a5 14 	l.j 2a9fbc <__ram_length+0x229fbc>
     b70:	02 00 20 47 	l.j f8008c8c <__stack+0xf7b88c90>
     b74:	00 00 0b 8f 	l.j 39b0 <__rom_size-0x1699c>
     b78:	15 00 00 15 	l.nop 0x15
     b7c:	fb 20 48 00 	l.cust7 
     b80:	00 02 fe 15 	l.j c03d4 <__ram_length+0x403d4>
     b84:	00 00 18 20 	l.j 6c04 <__rom_size-0x13748>
     b88:	20 49 00 00 	.word 0x20490000
     b8c:	03 0e 00 09 	l.j fc380bb0 <__stack+0xfbf00bb4>
     b90:	00 00 11 38 	l.j 5070 <__rom_size-0x152dc>
     b94:	20 4a 00 00 	.word 0x204a0000
     b98:	0b 6f 09 00 	.word 0x0b6f0900
     b9c:	00 1a 05 1f 	l.j 682018 <__stack+0x20201c>
     ba0:	34 00 00 00 	.word 0x34000000
     ba4:	74 09 00 00 	l.cust2 
     ba8:	1a 05 1f 34 	.word 0x1a051f34
     bac:	00 00 00 74 	l.j d7c <__rom_size-0x195d0>
     bb0:	0d 08 20 06 	l.bnf 4208bc8 <__stack+0x3d88bcc>
     bb4:	00 00 0b d5 	l.j 3b08 <__rom_size-0x16844>
     bb8:	0e 00 00 05 	l.bnf f8000bcc <__stack+0xf7b80bd0>
     bbc:	42 20 08 00 	.word 0x42200800
     bc0:	00 00 74 02 	l.j 1dbc8 <__rom_size+0x387c>
     bc4:	23 00 0e 00 	.word 0x23000e00
     bc8:	00 0b c0 20 	l.j 2f0c48 <__ram_length+0x270c48>
     bcc:	09 00 00 00 	.word 0x09000000
     bd0:	74 02 23 04 	l.cust2 
     bd4:	00 09 00 00 	l.j 240bd4 <__ram_length+0x1c0bd4>
     bd8:	0b 77 20 0a 	.word 0x0b77200a
     bdc:	00 00 0b b0 	l.j 3a9c <__rom_size-0x168b0>
     be0:	0f 01 2c 20 	l.bnf fc04bc60 <__stack+0xfbbcbc64>
     be4:	0c 00 00 0c 	l.bnf c14 <__rom_size-0x19738>
     be8:	5a 0e 00 00 	.word 0x5a0e0000
     bec:	1a a1 20 0e 	.word 0x1aa1200e
     bf0:	00 00 02 b1 	l.j 16b4 <__rom_size-0x18c98>
     bf4:	02 23 00 0e 	l.j f88c0c2c <__stack+0xf8440c30>
     bf8:	00 00 17 7c 	l.j 69e8 <__rom_size-0x13964>
     bfc:	20 0f 00 00 	.word 0x200f0000
     c00:	00 2c 02 23 	l.j b0148c <__stack+0x681490>
     c04:	0b 0e 00 00 	.word 0x0b0e0000
     c08:	13 4d 20 10 	l.bf fd348c48 <__stack+0xfcec8c4c>
     c0c:	00 00 0b d5 	l.j 3b60 <__rom_size-0x167ec>
     c10:	02 23 0c 0e 	l.j f88c3c48 <__stack+0xf8443c4c>
     c14:	00 00 05 42 	l.j 211c <__rom_size-0x18230>
     c18:	20 11 00 00 	.word 0x20110000
     c1c:	00 74 02 23 	l.j 1d014a8 <__stack+0x18814ac>
     c20:	14 0e 00 00 	.word 0x140e0000
     c24:	0a ba 20 12 	.word 0x0aba2012
     c28:	00 00 00 74 	l.j df8 <__rom_size-0x19554>
     c2c:	02 23 18 0e 	l.j f88c6c64 <__stack+0xf8446c68>
     c30:	00 00 0f 3b 	l.j 491c <__rom_size-0x15a30>
     c34:	20 13 00 00 	.word 0x20130000
     c38:	00 74 02 23 	l.j 1d014c4 <__stack+0x18814c8>
     c3c:	1c 0e 00 00 	.word 0x1c0e0000
     c40:	02 25 20 14 	l.j f8948c90 <__stack+0xf84c8c94>
     c44:	00 00 00 74 	l.j e14 <__rom_size-0x19538>
     c48:	02 23 20 0e 	l.j f88c8c80 <__stack+0xf8448c84>
     c4c:	00 00 1a 9c 	l.j 76bc <__rom_size-0x12c90>
     c50:	20 15 00 00 	.word 0x20150000
     c54:	02 c1 02 23 	l.j fb0414e0 <__stack+0xfabc14e4>
     c58:	24 00 09 00 	l.rfe 
     c5c:	00 1a 1f 20 	l.j 6888dc <__stack+0x2088e0>
     c60:	16 00 00 0b 	.word 0x1600000b
     c64:	e0 12 00 00 	l.add r0,r18,r0
     c68:	06 a4 10 20 	l.jal fa904ce8 <__stack+0xfa484cec>
     c6c:	18 00 00 0c 	l.movhi r0,0xc
     c70:	9c 0e 00 00 	l.addi r0,r14,0x0
     c74:	01 1a 20 1a 	l.j 4688cdc <__stack+0x4208ce0>
     c78:	00 00 02 dd 	l.j 17ec <__rom_size-0x18b60>
     c7c:	02 23 00 0e 	l.j f88c0cb4 <__stack+0xf8440cb8>
     c80:	00 00 17 10 	l.j 68c0 <__rom_size-0x13a8c>
     c84:	20 1b 00 00 	.word 0x201b0000
     c88:	00 74 02 23 	l.j 1d01514 <__stack+0x1881518>
     c8c:	08 0e 00 00 	.word 0x080e0000
     c90:	00 fe 20 1c 	l.j 3f88d00 <__stack+0x3b08d04>
     c94:	00 00 00 74 	l.j e64 <__rom_size-0x194e8>
     c98:	02 23 0c 00 	l.j f88c3c98 <__stack+0xf8443c9c>
     c9c:	04 00 00 0c 	l.jal ccc <__rom_size-0x19680>
     ca0:	65 00 00 0c 	.word 0x6500000c
     ca4:	ac 05 00 00 	l.xori r0,r5,0x0
     ca8:	00 74 03 00 	l.j 1d018a8 <__stack+0x18818ac>
     cac:	0f 02 bc 24 	l.bnf fc0afd3c <__stack+0xfbc2fd40>
     cb0:	0e 00 00 0d 	l.bnf f8000ce4 <__stack+0xf7b80ce8>
     cb4:	2b 0e 00 00 	.word 0x2b0e0000
     cb8:	1c 2a 24 10 	.word 0x1c2a2410
     cbc:	00 00 00 2c 	l.j d6c <__rom_size-0x195e0>
     cc0:	02 23 00 0e 	l.j f88c0cf8 <__stack+0xf8440cfc>
     cc4:	00 00 11 58 	l.j 5224 <__rom_size-0x15128>
     cc8:	24 11 00 00 	l.rfe 
     ccc:	00 2c 02 23 	l.j b01558 <__stack+0x68155c>
     cd0:	01 0e 00 00 	l.j 4380cd0 <__stack+0x3f00cd4>
     cd4:	12 92 24 12 	l.bf fa489d1c <__stack+0xfa009d20>
     cd8:	00 00 04 a5 	l.j 1f6c <__rom_size-0x183e0>
     cdc:	02 23 04 0e 	l.j f88c1d14 <__stack+0xf8441d18>
     ce0:	00 00 12 03 	l.j 54ec <__rom_size-0x14e60>
     ce4:	24 13 00 00 	l.rfe 
     ce8:	00 74 03 23 	l.j 1d01974 <__stack+0x1881978>
     cec:	9c 05 0e 00 	l.addi r0,r5,0xe00
     cf0:	00 0a 33 24 	l.j 28d980 <__ram_length+0x20d980>
     cf4:	14 00 00 00 	.word 0x14000000
     cf8:	2c 03 23 a0 	.word 0x2c0323a0
     cfc:	05 0e 00 00 	l.jal 4380cfc <__stack+0x3f00d00>
     d00:	0b 1f 24 15 	.word 0x0b1f2415
     d04:	00 00 00 2c 	l.j db4 <__rom_size-0x19598>
     d08:	03 23 a1 05 	l.j fc8e911c <__stack+0xfc469120>
     d0c:	0e 00 00 11 	l.bnf f8000d50 <__stack+0xf7b80d54>
     d10:	07 24 16 00 	l.jal fc906510 <__stack+0xfc486514>
     d14:	00 00 2c 03 	l.j bd20 <__rom_size-0xe62c>
     d18:	23 a2 05 0e 	.word 0x23a2050e
     d1c:	00 00 1a a1 	l.j 77a0 <__rom_size-0x12bac>
     d20:	24 17 00 00 	l.rfe 
     d24:	04 b5 03 23 	l.jal 2d419b0 <__stack+0x28c19b4>
     d28:	a3 05 00 09 	l.addic r24,r5,0x9
     d2c:	00 00 0f 8a 	l.j 4b54 <__rom_size-0x157f8>
     d30:	24 18 00 00 	l.rfe 
     d34:	0c ac 0d 18 	l.bnf 2b04194 <__stack+0x2684198>
     d38:	23 03 00 00 	.word 0x23030000
     d3c:	0d 5b 0e 00 	l.bnf 56c453c <__stack+0x5244540>
     d40:	00 1a a1 23 	l.j 6a91cc <__stack+0x2291d0>
     d44:	05 00 00 00 	l.jal 4000d44 <__stack+0x3b80d48>
     d48:	ab 02 23 00 	l.ori r24,r2,0x2300
     d4c:	0e 00 00 1a 	l.bnf f8000db4 <__stack+0xf7b80db8>
     d50:	9c 23 06 00 	l.addi r1,r3,0x600
     d54:	00 05 a4 02 	l.j 169d5c <__ram_length+0xe9d5c>
     d58:	23 08 00 09 	.word 0x23080009
     d5c:	00 00 19 a6 	l.j 73f4 <__rom_size-0x12f58>
     d60:	23 07 00 00 	.word 0x23070000
     d64:	0d 36 0d 02 	l.bnf 4d8416c <__stack+0x4904170>
     d68:	23 09 00 00 	.word 0x23090000
     d6c:	0d 8b 0e 00 	l.bnf 62c456c <__stack+0x5e44570>
     d70:	00 07 85 23 	l.j 1e21fc <__ram_length+0x1621fc>
     d74:	0b 00 00 00 	.word 0x0b000000
     d78:	2c 02 23 00 	.word 0x2c022300
     d7c:	0e 00 00 18 	l.bnf f8000ddc <__stack+0xf7b80de0>
     d80:	3e 23 0c 00 	.word 0x3e230c00
     d84:	00 00 2c 02 	l.j bd8c <__rom_size-0xe5c0>
     d88:	23 01 00 09 	.word 0x23010009
     d8c:	00 00 15 c3 	l.j 6498 <__rom_size-0x13eb4>
     d90:	23 0d 00 00 	.word 0x230d0000
     d94:	0d 66 0d 02 	l.bnf 598419c <__stack+0x55041a0>
     d98:	23 0f 00 00 	.word 0x230f0000
     d9c:	0d bb 0e 00 	l.bnf 6ec459c <__stack+0x6a445a0>
     da0:	00 0b 55 23 	l.j 2d622c <__ram_length+0x25622c>
     da4:	11 00 00 00 	l.bf 4000da4 <__stack+0x3b80da8>
     da8:	2c 02 23 00 	.word 0x2c022300
     dac:	0e 00 00 16 	l.bnf f8000e04 <__stack+0xf7b80e08>
     db0:	e9 23 12 00 	.word 0xe9231200
     db4:	00 00 2c 02 	l.j bdbc <__rom_size-0xe590>
     db8:	23 01 00 09 	.word 0x23010009
     dbc:	00 00 02 f7 	l.j 1998 <__rom_size-0x189b4>
     dc0:	23 13 00 00 	.word 0x23130000
     dc4:	0d 96 0d 1c 	l.bnf 6584234 <__stack+0x6104238>
     dc8:	23 15 00 00 	.word 0x23150000
     dcc:	0e 07 0e 00 	l.bnf f81c45cc <__stack+0xf7d445d0>
     dd0:	00 0c 0d 23 	l.j 30425c <__ram_length+0x28425c>
     dd4:	17 00 00 00 	.word 0x17000000
     dd8:	2c 02 23 00 	.word 0x2c022300
     ddc:	0e 00 00 1a 	l.bnf f8000e44 <__stack+0xf7b80e48>
     de0:	62 23 18 00 	.word 0x62231800
     de4:	00 00 2c 02 	l.j bdec <__rom_size-0xe560>
     de8:	23 01 0e 00 	.word 0x23010e00
     dec:	00 1a a1 23 	l.j 6a9278 <__stack+0x22927c>
     df0:	19 00 00 00 	l.movhi r8,0x0
     df4:	ab 02 23 02 	l.ori r24,r2,0x2302
     df8:	0e 00 00 1a 	l.bnf f8000e60 <__stack+0xf7b80e64>
     dfc:	9c 23 1a 00 	l.addi r1,r3,0x1a00
     e00:	00 05 a4 02 	l.j 169e08 <__ram_length+0xe9e08>
     e04:	23 0a 00 09 	.word 0x230a0009
     e08:	00 00 1a 1b 	l.j 7674 <__rom_size-0x12cd8>
     e0c:	23 1b 00 00 	.word 0x231b0000
     e10:	0d c6 0d 6c 	l.bnf 71843c0 <__stack+0x6d043c4>
     e14:	23 1d 00 00 	.word 0x231d0000
     e18:	0e de 11 69 	l.bnf fb7853bc <__stack+0xfb3053c0>
     e1c:	64 00 23 1f 	.word 0x6400231f
     e20:	00 00 00 ab 	l.j 10cc <__rom_size-0x19280>
     e24:	02 23 00 0e 	l.j f88c0e5c <__stack+0xf8440e60>
     e28:	00 00 06 fc 	l.j 2a18 <__rom_size-0x17934>
     e2c:	23 20 00 00 	.word 0x23200000
     e30:	00 74 02 23 	l.j 1d016bc <__stack+0x18816c0>
     e34:	08 0e 00 00 	.word 0x080e0000
     e38:	10 fd 23 21 	l.bf 3f49abc <__stack+0x3ac9ac0>
     e3c:	00 00 0d 5b 	l.j 43a8 <__rom_size-0x15fa4>
     e40:	02 23 0c 0e 	l.j f88c3e78 <__stack+0xf8443e7c>
     e44:	00 00 18 83 	l.j 7050 <__rom_size-0x132fc>
     e48:	23 22 00 00 	.word 0x23220000
     e4c:	0d 8b 02 23 	l.bnf 62c16d8 <__stack+0x5e416dc>
     e50:	24 0e 00 00 	l.rfe 
     e54:	0b 4e 23 23 	.word 0x0b4e2323
     e58:	00 00 00 2c 	l.j f08 <__rom_size-0x19444>
     e5c:	02 23 26 0e 	l.j f88ca694 <__stack+0xf844a698>
     e60:	00 00 06 56 	l.j 27b8 <__rom_size-0x17b94>
     e64:	23 24 00 00 	.word 0x23240000
     e68:	00 2c 02 23 	l.j b016f4 <__stack+0x6816f8>
     e6c:	27 0e 00 00 	l.rfe 
     e70:	0d ab 23 25 	l.bnf 6ac9b04 <__stack+0x6649b08>
     e74:	00 00 0d bb 	l.j 4560 <__rom_size-0x15dec>
     e78:	02 23 28 0e 	l.j f88caeb0 <__stack+0xf844aeb4>
     e7c:	00 00 02 d9 	l.j 19e0 <__rom_size-0x1896c>
     e80:	23 26 00 00 	.word 0x23260000
     e84:	00 2c 02 23 	l.j b01710 <__stack+0x681714>
     e88:	2a 0e 00 00 	.word 0x2a0e0000
     e8c:	09 ef 23 27 	.word 0x09ef2327
     e90:	00 00 00 2c 	l.j f40 <__rom_size-0x1940c>
     e94:	02 23 2b 0e 	l.j f88cbacc <__stack+0xf844bad0>
     e98:	00 00 0a 61 	l.j 381c <__rom_size-0x16b30>
     e9c:	23 28 00 00 	.word 0x23280000
     ea0:	00 2c 02 23 	l.j b0172c <__stack+0x681730>
     ea4:	2c 0e 00 00 	.word 0x2c0e0000
     ea8:	0e 78 23 29 	l.bnf f9e09b4c <__stack+0xf9989b50>
     eac:	00 00 00 2c 	l.j f5c <__rom_size-0x193f0>
     eb0:	02 23 2d 0e 	l.j f88cc2e8 <__stack+0xf844c2ec>
     eb4:	00 00 00 af 	l.j 1170 <__rom_size-0x191dc>
     eb8:	23 2a 00 00 	.word 0x232a0000
     ebc:	0e de 02 23 	l.bnf fb781748 <__stack+0xfb30174c>
     ec0:	30 11 63 70 	.word 0x30116370
     ec4:	75 00 23 2b 	l.cust2 
     ec8:	00 00 00 2c 	l.j f78 <__rom_size-0x193d4>
     ecc:	02 23 68 0e 	l.j f88daf04 <__stack+0xf845af08>
     ed0:	00 00 0e 7d 	l.j 48c4 <__rom_size-0x15a88>
     ed4:	23 2c 00 00 	.word 0x232c0000
     ed8:	00 2c 02 23 	l.j b01764 <__stack+0x681768>
     edc:	69 00 04 00 	.word 0x69000400
     ee0:	00 0e 07 00 	l.j 382ae0 <__ram_length+0x302ae0>
     ee4:	00 0e ee 05 	l.j 3bc6f8 <__ram_length+0x33c6f8>
     ee8:	00 00 00 74 	l.j 10b8 <__rom_size-0x19294>
     eec:	01 00 09 00 	l.j 40032ec <__stack+0x3b832f0>
     ef0:	00 13 ab 23 	l.j 4ebb7c <__stack+0x6bb80>
     ef4:	2d 00 00 0e 	.word 0x2d00000e
     ef8:	12 09 00 00 	l.bf f8240ef8 <__stack+0xf7dc0efc>
     efc:	1a 05 1f 34 	.word 0x1a051f34
     f00:	00 00 00 74 	l.j 10d0 <__rom_size-0x1927c>
     f04:	0d 08 20 06 	l.bnf 4208f1c <__stack+0x3d88f20>
     f08:	00 00 0f 29 	l.j 4bac <__rom_size-0x157a0>
     f0c:	0e 00 00 05 	l.bnf f8000f20 <__stack+0xf7b80f24>
     f10:	42 20 08 00 	.word 0x42200800
     f14:	00 00 74 02 	l.j 1df1c <__rom_size+0x3bd0>
     f18:	23 00 0e 00 	.word 0x23000e00
     f1c:	00 0b c0 20 	l.j 2f0f9c <__ram_length+0x270f9c>
     f20:	09 00 00 00 	.word 0x09000000
     f24:	74 02 23 04 	l.cust2 
     f28:	00 09 00 00 	l.j 240f28 <__ram_length+0x1c0f28>
     f2c:	0b 77 20 0a 	.word 0x0b77200a
     f30:	00 00 0f 04 	l.j 4b40 <__rom_size-0x1580c>
     f34:	0f 01 2c 20 	l.bnf fc04bfb4 <__stack+0xfbbcbfb8>
     f38:	0c 00 00 0f 	l.bnf f74 <__rom_size-0x193d8>
     f3c:	ae 0e 00 00 	l.xori r16,r14,0x0
     f40:	1a a1 20 0e 	.word 0x1aa1200e
     f44:	00 00 02 b1 	l.j 1a08 <__rom_size-0x18944>
     f48:	02 23 00 0e 	l.j f88c0f80 <__stack+0xf8440f84>
     f4c:	00 00 17 7c 	l.j 6d3c <__rom_size-0x13610>
     f50:	20 0f 00 00 	.word 0x200f0000
     f54:	00 2c 02 23 	l.j b017e0 <__stack+0x6817e4>
     f58:	0b 0e 00 00 	.word 0x0b0e0000
     f5c:	13 4d 20 10 	l.bf fd348f9c <__stack+0xfcec8fa0>
     f60:	00 00 0f 29 	l.j 4c04 <__rom_size-0x15748>
     f64:	02 23 0c 0e 	l.j f88c3f9c <__stack+0xf8443fa0>
     f68:	00 00 05 42 	l.j 2470 <__rom_size-0x17edc>
     f6c:	20 11 00 00 	.word 0x20110000
     f70:	00 74 02 23 	l.j 1d017fc <__stack+0x1881800>
     f74:	14 0e 00 00 	.word 0x140e0000
     f78:	0a ba 20 12 	.word 0x0aba2012
     f7c:	00 00 00 74 	l.j 114c <__rom_size-0x19200>
     f80:	02 23 18 0e 	l.j f88c6fb8 <__stack+0xf8446fbc>
     f84:	00 00 0f 3b 	l.j 4c70 <__rom_size-0x156dc>
     f88:	20 13 00 00 	.word 0x20130000
     f8c:	00 74 02 23 	l.j 1d01818 <__stack+0x188181c>
     f90:	1c 0e 00 00 	.word 0x1c0e0000
     f94:	02 25 20 14 	l.j f8948fe4 <__stack+0xf84c8fe8>
     f98:	00 00 00 74 	l.j 1168 <__rom_size-0x191e4>
     f9c:	02 23 20 0e 	l.j f88c8fd4 <__stack+0xf8448fd8>
     fa0:	00 00 1a 9c 	l.j 7a10 <__rom_size-0x1293c>
     fa4:	20 15 00 00 	.word 0x20150000
     fa8:	02 c1 02 23 	l.j fb041834 <__stack+0xfabc1838>
     fac:	24 00 09 00 	l.rfe 
     fb0:	00 1a 1f 20 	l.j 688c30 <__stack+0x208c34>
     fb4:	16 00 00 0f 	.word 0x1600000f
     fb8:	34 12 00 00 	.word 0x34120000
     fbc:	06 a4 10 20 	l.jal fa90503c <__stack+0xfa485040>
     fc0:	18 00 00 0f 	l.movhi r0,0xf
     fc4:	f0 0e 00 00 	l.cust5 r0,r14,r0,0x0,0x0
     fc8:	01 1a 20 1a 	l.j 4689030 <__stack+0x4209034>
     fcc:	00 00 02 dd 	l.j 1b40 <__rom_size-0x1880c>
     fd0:	02 23 00 0e 	l.j f88c1008 <__stack+0xf844100c>
     fd4:	00 00 17 10 	l.j 6c14 <__rom_size-0x13738>
     fd8:	20 1b 00 00 	.word 0x201b0000
     fdc:	00 74 02 23 	l.j 1d01868 <__stack+0x188186c>
     fe0:	08 0e 00 00 	.word 0x080e0000
     fe4:	00 fe 20 1c 	l.j 3f89054 <__stack+0x3b09058>
     fe8:	00 00 00 74 	l.j 11b8 <__rom_size-0x19194>
     fec:	02 23 0c 00 	l.j f88c3fec <__stack+0xf8443ff0>
     ff0:	04 00 00 0f 	l.jal 102c <__rom_size-0x19320>
     ff4:	b9 00 00 10 	l.slli r8,r0,0x10
     ff8:	00 05 00 00 	l.j 140ff8 <__ram_length+0xc0ff8>
     ffc:	00 74 03 00 	l.j 1d01bfc <__stack+0x1881c00>
    1000:	09 00 00 1a 	.word 0x0900001a
    1004:	05 1f 34 00 	l.jal 47ce004 <__stack+0x434e008>
    1008:	00 00 74 0d 	l.j 1e03c <__rom_size+0x3cf0>
    100c:	08 20 06 00 	.word 0x08200600
    1010:	00 10 30 0e 	l.j 40d048 <BootClearScreen.clone.5+0x158>
    1014:	00 00 05 42 	l.j 251c <__rom_size-0x17e30>
    1018:	20 08 00 00 	.word 0x20080000
    101c:	00 74 02 23 	l.j 1d018a8 <__stack+0x18818ac>
    1020:	00 0e 00 00 	l.j 381020 <__ram_length+0x301020>
    1024:	0b c0 20 09 	.word 0x0bc02009
    1028:	00 00 00 74 	l.j 11f8 <__rom_size-0x19154>
    102c:	02 23 04 00 	l.j f88c202c <__stack+0xf8442030>
    1030:	09 00 00 0b 	.word 0x0900000b
    1034:	77 20 0a 00 	l.cust2 
    1038:	00 10 0b 0f 	l.j 403c74 <OsdWriteOffset+0x678>
    103c:	01 2c 20 0c 	l.j 4b0906c <__stack+0x4689070>
    1040:	00 00 10 b5 	l.j 5314 <__rom_size-0x15038>
    1044:	0e 00 00 1a 	l.bnf f80010ac <__stack+0xf7b810b0>
    1048:	a1 20 0e 00 	l.addic r9,r0,0xe00
    104c:	00 02 b1 02 	l.j ad454 <__ram_length+0x2d454>
    1050:	23 00 0e 00 	.word 0x23000e00
    1054:	00 17 7c 20 	l.j 5e00d4 <__stack+0x1600d8>
    1058:	0f 00 00 00 	l.bnf fc001058 <__stack+0xfbb8105c>
    105c:	2c 02 23 0b 	.word 0x2c02230b
    1060:	0e 00 00 13 	l.bnf f80010ac <__stack+0xf7b810b0>
    1064:	4d 20 10 00 	l.maci r0,0x1000
    1068:	00 10 30 02 	l.j 40d070 <BootClearScreen.clone.5+0x180>
    106c:	23 0c 0e 00 	.word 0x230c0e00
    1070:	00 05 42 20 	l.j 1518f0 <__ram_length+0xd18f0>
    1074:	11 00 00 00 	l.bf 4001074 <__stack+0x3b81078>
    1078:	74 02 23 14 	l.cust2 
    107c:	0e 00 00 0a 	l.bnf f80010a4 <__stack+0xf7b810a8>
    1080:	ba 20 12 00 	l.slli r17,r0,0x0
    1084:	00 00 74 02 	l.j 1e08c <__rom_size+0x3d40>
    1088:	23 18 0e 00 	.word 0x23180e00
    108c:	00 0f 3b 20 	l.j 3cfd0c <__ram_length+0x34fd0c>
    1090:	13 00 00 00 	l.bf fc001090 <__stack+0xfbb81094>
    1094:	74 02 23 1c 	l.cust2 
    1098:	0e 00 00 02 	l.bnf f80010a0 <__stack+0xf7b810a4>
    109c:	25 20 14 00 	l.rfe 
    10a0:	00 00 74 02 	l.j 1e0a8 <__rom_size+0x3d5c>
    10a4:	23 20 0e 00 	.word 0x23200e00
    10a8:	00 1a 9c 20 	l.j 6a8128 <__stack+0x22812c>
    10ac:	15 00 00 02 	l.nop 0x2
    10b0:	c1 02 23 24 	l.mtspr r2,r4,0x4324
    10b4:	00 09 00 00 	l.j 2410b4 <__ram_length+0x1c10b4>
    10b8:	1a 1f 20 16 	.word 0x1a1f2016
    10bc:	00 00 10 3b 	l.j 51a8 <__rom_size-0x151a4>
    10c0:	12 00 00 06 	l.bf f80010d8 <__stack+0xf7b810dc>
    10c4:	a4 10 20 18 	l.andi r0,r16,0x2018
    10c8:	00 00 10 f7 	l.j 54a4 <__rom_size-0x14ea8>
    10cc:	0e 00 00 01 	l.bnf f80010d0 <__stack+0xf7b810d4>
    10d0:	1a 20 1a 00 	l.movhi r17,0x1a00
    10d4:	00 02 dd 02 	l.j b84dc <__ram_length+0x384dc>
    10d8:	23 00 0e 00 	.word 0x23000e00
    10dc:	00 17 10 20 	l.j 5c515c <__stack+0x145160>
    10e0:	1b 00 00 00 	l.movhi r24,0x0
    10e4:	74 02 23 08 	l.cust2 
    10e8:	0e 00 00 00 	l.bnf f80010e8 <__stack+0xf7b810ec>
    10ec:	fe 20 1c 00 	l.cust8 
    10f0:	00 00 74 02 	l.j 1e0f8 <__rom_size+0x3dac>
    10f4:	23 0c 00 04 	.word 0x230c0004
    10f8:	00 00 10 c0 	l.j 53f8 <__rom_size-0x14f54>
    10fc:	00 00 11 07 	l.j 5518 <__rom_size-0x14e34>
    1100:	05 00 00 00 	l.jal 4001100 <__stack+0x3b81104>
    1104:	74 03 00 0f 	l.cust2 
    1108:	11 44 22 23 	l.bf 5109994 <__stack+0x4c89998>
    110c:	00 00 11 a5 	l.j 57a0 <__rom_size-0x14bac>
    1110:	0e 00 00 0e 	l.bnf f8001148 <__stack+0xf7b8114c>
    1114:	cf 22 25 00 	.word 0xcf222500
    1118:	00 00 41 02 	l.j 11520 <__rom_size-0x8e2c>
    111c:	23 00 0e 00 	.word 0x23000e00
    1120:	00 17 e9 22 	l.j 5fb5a8 <__stack+0x17b5ac>
    1124:	26 00 00 10 	l.rfe 
    1128:	b5 02 23 04 	l.mfspr r8,r2,0x2304
    112c:	0e 00 00 13 	l.bnf f8001178 <__stack+0xf7b8117c>
    1130:	a1 22 27 00 	l.addic r9,r2,0x2700
    1134:	00 00 3a 03 	l.j f940 <__rom_size-0xaa0c>
    1138:	23 b0 02 0e 	.word 0x23b0020e
    113c:	00 00 0b 48 	l.j 3e5c <__rom_size-0x164f0>
    1140:	22 28 00 00 	.word 0x22280000
    1144:	00 3a 03 23 	l.j e81dd0 <__stack+0xa01dd4>
    1148:	b2 02 0e 00 	l.muli r16,r2,0xe00
    114c:	00 00 fe 22 	l.j 409d4 <__rom_size+0x26688>
    1150:	29 00 00 00 	.word 0x29000000
    1154:	3a 03 23 b4 	.word 0x3a0323b4
    1158:	02 0e 00 00 	l.j f8381158 <__stack+0xf7f0115c>
    115c:	18 b5 22 2a 	.word 0x18b5222a
    1160:	00 00 00 3a 	l.j 1248 <__rom_size-0x19104>
    1164:	03 23 b6 02 	l.j fc8ee96c <__stack+0xfc46e970>
    1168:	0e 00 00 07 	l.bnf f8001184 <__stack+0xf7b81188>
    116c:	50 22 2b 00 	.word 0x50222b00
    1170:	00 00 3a 03 	l.j f97c <__rom_size-0xa9d0>
    1174:	23 b8 02 0e 	.word 0x23b8020e
    1178:	00 00 05 bc 	l.j 2868 <__rom_size-0x17ae4>
    117c:	22 2c 00 00 	.word 0x222c0000
    1180:	00 5d 03 23 	l.j 1741e0c <__stack+0x12c1e10>
    1184:	bc 02 0e 00 	l.sfeqi r2,0xe00
    1188:	00 0b c0 22 	l.j 2f1210 <__ram_length+0x271210>
    118c:	2d 00 00 05 	.word 0x2d000005
    1190:	63 03 23 c0 	.word 0x630323c0
    1194:	02 0e 00 00 	l.j f8381194 <__stack+0xf7f01198>
    1198:	14 20 22 2e 	.word 0x1420222e
    119c:	00 00 00 74 	l.j 136c <__rom_size-0x18fe0>
    11a0:	03 23 c0 22 	l.j fc8f1228 <__stack+0xfc47122c>
    11a4:	00 09 00 00 	l.j 2411a4 <__ram_length+0x1c11a4>
    11a8:	01 35 22 2f 	l.j 4d49a64 <__stack+0x48c9a68>
    11ac:	00 00 11 07 	l.j 55c8 <__rom_size-0x14d84>
    11b0:	13 00 00 17 	l.bf fc00120c <__stack+0xfbb81210>
    11b4:	3c 01 00 25 	.word 0x3c010025
    11b8:	08 00 00 13 	.word 0x08000013
    11bc:	c5 0e 00 00 	.word 0xc50e0000
    11c0:	1b 06 25 09 	l.movhi r24,0x2509
    11c4:	00 00 00 74 	l.j 1394 <__rom_size-0x18fb8>
    11c8:	02 23 00 0e 	l.j f88c1200 <__stack+0xf8441204>
    11cc:	00 00 07 d8 	l.j 312c <__rom_size-0x17220>
    11d0:	25 0a 00 00 	l.rfe 
    11d4:	00 74 02 23 	l.j 1d01a60 <__stack+0x1881a64>
    11d8:	04 0e 00 00 	l.jal 3811d8 <__ram_length+0x3011d8>
    11dc:	0b fd 25 0b 	.word 0x0bfd250b
    11e0:	00 00 00 5d 	l.j 1354 <__rom_size-0x18ff8>
    11e4:	02 23 08 0e 	l.j f88c321c <__stack+0xf8443220>
    11e8:	00 00 13 59 	l.j 5f4c <__rom_size-0x14400>
    11ec:	25 0c 00 00 	l.rfe 
    11f0:	00 74 02 23 	l.j 1d01a7c <__stack+0x1881a80>
    11f4:	0c 0e 00 00 	l.bnf 3811f4 <__ram_length+0x3011f4>
    11f8:	05 d5 25 0d 	l.jal 754a62c <__stack+0x70ca630>
    11fc:	00 00 00 74 	l.j 13cc <__rom_size-0x18f80>
    1200:	02 23 10 0e 	l.j f88c5238 <__stack+0xf844523c>
    1204:	00 00 16 ca 	l.j 6d2c <__rom_size-0x13620>
    1208:	25 0e 00 00 	l.rfe 
    120c:	00 74 02 23 	l.j 1d01a98 <__stack+0x1881a9c>
    1210:	14 0e 00 00 	.word 0x140e0000
    1214:	00 bf 25 0f 	l.j 2fca650 <__stack+0x2b4a654>
    1218:	00 00 00 74 	l.j 13e8 <__rom_size-0x18f64>
    121c:	02 23 18 0e 	l.j f88c7254 <__stack+0xf8447258>
    1220:	00 00 14 a5 	l.j 64b4 <__rom_size-0x13e98>
    1224:	25 10 00 00 	l.rfe 
    1228:	00 74 02 23 	l.j 1d01ab4 <__stack+0x1881ab8>
    122c:	1c 0e 00 00 	.word 0x1c0e0000
    1230:	1a be 25 11 	l.movhi r21,0x2511
    1234:	00 00 00 74 	l.j 1404 <__rom_size-0x18f48>
    1238:	02 23 20 0e 	l.j f88c9270 <__stack+0xf8449274>
    123c:	00 00 17 ca 	l.j 7164 <__rom_size-0x131e8>
    1240:	25 12 00 00 	l.rfe 
    1244:	00 74 02 23 	l.j 1d01ad0 <__stack+0x1881ad4>
    1248:	24 0e 00 00 	l.rfe 
    124c:	03 4b 25 13 	l.j fd2ca698 <__stack+0xfce4a69c>
    1250:	00 00 13 c5 	l.j 6164 <__rom_size-0x141e8>
    1254:	02 23 28 0e 	l.j f88cb28c <__stack+0xf844b290>
    1258:	00 00 1b 86 	l.j 8070 <__rom_size-0x122dc>
    125c:	25 14 00 00 	l.rfe 
    1260:	00 74 02 23 	l.j 1d01aec <__stack+0x1881af0>
    1264:	40 0e 00 00 	.word 0x400e0000
    1268:	14 b7 25 15 	.word 0x14b72515
    126c:	00 00 00 74 	l.j 143c <__rom_size-0x18f10>
    1270:	02 23 44 0e 	l.j f88d22a8 <__stack+0xf84522ac>
    1274:	00 00 18 4f 	l.j 73b0 <__rom_size-0x12f9c>
    1278:	25 16 00 00 	l.rfe 
    127c:	00 74 02 23 	l.j 1d01b08 <__stack+0x1881b0c>
    1280:	48 0e 00 00 	l.jalr r0
    1284:	15 00 25 17 	l.nop 0x2517
    1288:	00 00 00 74 	l.j 1458 <__rom_size-0x18ef4>
    128c:	02 23 4c 0e 	l.j f88d42c4 <__stack+0xf84542c8>
    1290:	00 00 15 2c 	l.j 6740 <__rom_size-0x13c0c>
    1294:	25 18 00 00 	l.rfe 
    1298:	00 74 02 23 	l.j 1d01b24 <__stack+0x1881b28>
    129c:	50 0e 00 00 	.word 0x500e0000
    12a0:	03 59 25 19 	l.j fd64a704 <__stack+0xfd1ca708>
    12a4:	00 00 13 d5 	l.j 61f8 <__rom_size-0x14154>
    12a8:	02 23 54 0e 	l.j f88d62e0 <__stack+0xf84562e4>
    12ac:	00 00 05 9b 	l.j 2918 <__rom_size-0x17a34>
    12b0:	25 1a 00 00 	l.rfe 
    12b4:	00 74 02 23 	l.j 1d01b40 <__stack+0x1881b44>
    12b8:	60 0e 00 00 	.word 0x600e0000
    12bc:	10 51 25 1b 	l.bf 144a728 <__stack+0xfca72c>
    12c0:	00 00 00 74 	l.j 1490 <__rom_size-0x18ebc>
    12c4:	02 23 64 0e 	l.j f88da2fc <__stack+0xf845a300>
    12c8:	00 00 19 b4 	l.j 7998 <__rom_size-0x129b4>
    12cc:	25 1c 00 00 	l.rfe 
    12d0:	00 74 02 23 	l.j 1d01b5c <__stack+0x1881b60>
    12d4:	68 0e 00 00 	.word 0x680e0000
    12d8:	03 67 25 1d 	l.j fd9ca74c <__stack+0xfd54a750>
    12dc:	00 00 13 e5 	l.j 6270 <__rom_size-0x140dc>
    12e0:	02 23 6c 0e 	l.j f88dc318 <__stack+0xf845c31c>
    12e4:	00 00 17 ee 	l.j 729c <__rom_size-0x130b0>
    12e8:	25 1e 00 00 	l.rfe 
    12ec:	00 74 03 23 	l.j 1d01f78 <__stack+0x1881f7c>
    12f0:	80 01 0e 00 	l.ld r0,0xe00(r1)
    12f4:	00 14 4a 25 	l.j 513b88 <__stack+0x93b8c>
    12f8:	1f 00 00 00 	.word 0x1f000000
    12fc:	74 03 23 84 	l.cust2 
    1300:	01 0e 00 00 	l.j 4381300 <__stack+0x3f01304>
    1304:	12 e3 25 20 	l.bf fb8ca784 <__stack+0xfb44a788>
    1308:	00 00 00 74 	l.j 14d8 <__rom_size-0x18e74>
    130c:	03 23 88 01 	l.j fc8e3310 <__stack+0xfc463314>
    1310:	0e 00 00 01 	l.bnf f8001314 <__stack+0xf7b81318>
    1314:	3d 25 21 00 	.word 0x3d252100
    1318:	00 00 74 03 	l.j 1e324 <__rom_size+0x3fd8>
    131c:	23 8c 01 0e 	.word 0x238c010e
    1320:	00 00 1b e4 	l.j 82b0 <__rom_size-0x1209c>
    1324:	25 22 00 00 	l.rfe 
    1328:	00 74 03 23 	l.j 1d01fb4 <__stack+0x1881fb8>
    132c:	90 01 0e 00 	l.lbs r0,0xe00(r1)
    1330:	00 10 e3 25 	l.j 439fc4 <_stack+0x18304>
    1334:	23 00 00 00 	l.csync 
    1338:	74 03 23 94 	l.cust2 
    133c:	01 0e 00 00 	l.j 438133c <__stack+0x3f01340>
    1340:	10 8d 25 24 	l.bf 234a7d0 <__stack+0x1eca7d4>
    1344:	00 00 00 74 	l.j 1514 <__rom_size-0x18e38>
    1348:	03 23 98 01 	l.j fc8e734c <__stack+0xfc467350>
    134c:	0e 00 00 03 	l.bnf f8001358 <__stack+0xf7b8135c>
    1350:	75 25 25 00 	l.cust2 
    1354:	00 00 74 03 	l.j 1e360 <__rom_size+0x4014>
    1358:	23 9c 01 0e 	.word 0x239c010e
    135c:	00 00 0b 60 	l.j 40dc <__rom_size-0x16270>
    1360:	25 26 00 00 	l.rfe 
    1364:	00 ab 03 23 	l.j 2ac1ff0 <__stack+0x2641ff4>
    1368:	a0 01 0e 00 	l.addic r0,r1,0xe00
    136c:	00 09 2f 25 	l.j 24d000 <__ram_length+0x1cd000>
    1370:	27 00 00 05 	l.rfe 
    1374:	a4 03 23 a8 	l.andi r0,r3,0x23a8
    1378:	01 0e 00 00 	l.j 4381378 <__stack+0x3f0137c>
    137c:	11 5f 25 28 	l.bf 57ca81c <__stack+0x534a820>
    1380:	00 00 13 f5 	l.j 6354 <__rom_size-0x13ff8>
    1384:	03 23 b8 01 	l.j fc8ef388 <__stack+0xfc46f38c>
    1388:	0e 00 00 12 	l.bnf f80013d0 <__stack+0xf7b813d4>
    138c:	bb 25 29 00 	l.slli r25,r5,0x0
    1390:	00 00 ab 03 	l.j 2bf9c <__rom_size+0x11c50>
    1394:	23 bc 01 0e 	.word 0x23bc010e
    1398:	00 00 14 2b 	l.j 6444 <__rom_size-0x13f08>
    139c:	25 2a 00 00 	l.rfe 
    13a0:	05 a4 03 23 	l.jal 690202c <__stack+0x6482030>
    13a4:	c4 01 0e 00 	.word 0xc4010e00
    13a8:	00 1a ef 25 	l.j 6bd03c <__stack+0x23d040>
    13ac:	2b 00 00 13 	lv.all_ge.h r24,r0,r0
    13b0:	f5 03 23 d4 	l.cust6 
    13b4:	01 0e 00 00 	l.j 43813b4 <__stack+0x3f013b8>
    13b8:	03 83 25 2c 	l.j fe0ca868 <__stack+0xfdc4a86c>
    13bc:	00 00 14 05 	l.j 63d0 <__rom_size-0x13f7c>
    13c0:	03 23 d8 01 	l.j fc8f73c4 <__stack+0xfc4773c8>
    13c4:	00 04 00 00 	l.j 1013c4 <__ram_length+0x813c4>
    13c8:	00 74 00 00 	l.j 1d013c8 <__stack+0x18813cc>
    13cc:	13 d5 05 00 	l.bf ff5427cc <__stack+0xff0c27d0>
    13d0:	00 00 74 05 	l.j 1e3e4 <__rom_size+0x4098>
    13d4:	00 04 00 00 	l.j 1013d4 <__ram_length+0x813d4>
    13d8:	00 74 00 00 	l.j 1d013d8 <__stack+0x18813dc>
    13dc:	13 e5 05 00 	l.bf ff9427dc <__stack+0xff4c27e0>
    13e0:	00 00 74 02 	l.j 1e3e8 <__rom_size+0x409c>
    13e4:	00 04 00 00 	l.j 1013e4 <__ram_length+0x813e4>
    13e8:	00 74 00 00 	l.j 1d013e8 <__stack+0x18813ec>
    13ec:	13 f5 05 00 	l.bf ffd427ec <__stack+0xff8c27f0>
    13f0:	00 00 74 04 	l.j 1e400 <__rom_size+0x40b4>
    13f4:	00 04 00 00 	l.j 1013f4 <__ram_length+0x813f4>
    13f8:	00 89 00 00 	l.j 22413f8 <__stack+0x1dc13fc>
    13fc:	14 05 05 00 	.word 0x14050500
    1400:	00 00 74 03 	l.j 1e40c <__rom_size+0x40c0>
    1404:	00 04 00 00 	l.j 101404 <__ram_length+0x81404>
    1408:	00 74 00 00 	l.j 1d01408 <__stack+0x188140c>
    140c:	14 15 05 00 	.word 0x14150500
    1410:	00 00 74 09 	l.j 1e434 <__rom_size+0x40e8>
    1414:	00 12 00 00 	l.j 481414 <__stack+0x1418>
    1418:	0d b2 50 25 	l.bnf 6c954ac <__stack+0x68154b0>
    141c:	2f 00 00 15 	.word 0x2f000015
    1420:	3a 0e 00 00 	.word 0x3a0e0000
    1424:	0f cb 25 30 	l.bnf ff2ca8e4 <__stack+0xfee4a8e8>
    1428:	00 00 00 74 	l.j 15f8 <__rom_size-0x18d54>
    142c:	02 23 00 0e 	l.j f88c1464 <__stack+0xf8441468>
    1430:	00 00 17 03 	l.j 703c <__rom_size-0x13310>
    1434:	25 31 00 00 	l.rfe 
    1438:	00 74 02 23 	l.j 1d01cc4 <__stack+0x1881cc8>
    143c:	04 0e 00 00 	l.jal 38143c <__ram_length+0x30143c>
    1440:	19 0a 25 32 	l.movhi r8,0x2532
    1444:	00 00 00 74 	l.j 1614 <__rom_size-0x18d38>
    1448:	02 23 08 0e 	l.j f88c3480 <__stack+0xf8443484>
    144c:	00 00 09 fa 	l.j 3c34 <__rom_size-0x16718>
    1450:	25 33 00 00 	l.rfe 
    1454:	00 74 02 23 	l.j 1d01ce0 <__stack+0x1881ce4>
    1458:	0c 0e 00 00 	l.bnf 381458 <__ram_length+0x301458>
    145c:	1b 63 25 34 	.word 0x1b632534
    1460:	00 00 00 74 	l.j 1630 <__rom_size-0x18d1c>
    1464:	02 23 10 0e 	l.j f88c549c <__stack+0xf84454a0>
    1468:	00 00 18 0e 	l.j 74a0 <__rom_size-0x12eac>
    146c:	25 35 00 00 	l.rfe 
    1470:	00 74 02 23 	l.j 1d01cfc <__stack+0x1881d00>
    1474:	14 0e 00 00 	.word 0x140e0000
    1478:	01 99 25 36 	l.j 664a950 <__stack+0x61ca954>
    147c:	00 00 00 74 	l.j 164c <__rom_size-0x18d00>
    1480:	02 23 18 0e 	l.j f88c74b8 <__stack+0xf84474bc>
    1484:	00 00 0b ad 	l.j 4338 <__rom_size-0x16014>
    1488:	25 37 00 00 	l.rfe 
    148c:	00 74 02 23 	l.j 1d01d18 <__stack+0x1881d1c>
    1490:	1c 0e 00 00 	.word 0x1c0e0000
    1494:	07 77 25 38 	l.jal fddca974 <__stack+0xfd94a978>
    1498:	00 00 00 74 	l.j 1668 <__rom_size-0x18ce4>
    149c:	02 23 20 0e 	l.j f88c94d4 <__stack+0xf84494d8>
    14a0:	00 00 08 e0 	l.j 3820 <__rom_size-0x16b2c>
    14a4:	25 39 00 00 	l.rfe 
    14a8:	00 74 02 23 	l.j 1d01d34 <__stack+0x1881d38>
    14ac:	24 0e 00 00 	l.rfe 
    14b0:	1c 75 25 3a 	.word 0x1c75253a
    14b4:	00 00 00 74 	l.j 1684 <__rom_size-0x18cc8>
    14b8:	02 23 28 0e 	l.j f88cb4f0 <__stack+0xf844b4f4>
    14bc:	00 00 00 5e 	l.j 1634 <__rom_size-0x18d18>
    14c0:	25 3b 00 00 	l.rfe 
    14c4:	00 74 02 23 	l.j 1d01d50 <__stack+0x1881d54>
    14c8:	2c 0e 00 00 	.word 0x2c0e0000
    14cc:	11 1c 25 3c 	l.bf 470a9bc <__stack+0x428a9c0>
    14d0:	00 00 00 74 	l.j 16a0 <__rom_size-0x18cac>
    14d4:	02 23 30 0e 	l.j f88cd50c <__stack+0xf844d510>
    14d8:	00 00 0d 23 	l.j 4964 <__rom_size-0x159e8>
    14dc:	25 3d 00 00 	l.rfe 
    14e0:	00 74 02 23 	l.j 1d01d6c <__stack+0x1881d70>
    14e4:	34 0e 00 00 	.word 0x340e0000
    14e8:	16 9e 25 3e 	.word 0x169e253e
    14ec:	00 00 00 74 	l.j 16bc <__rom_size-0x18c90>
    14f0:	02 23 38 0e 	l.j f88cf528 <__stack+0xf844f52c>
    14f4:	00 00 07 3e 	l.j 31ec <__rom_size-0x17160>
    14f8:	25 3f 00 00 	l.rfe 
    14fc:	00 5d 02 23 	l.j 1741d88 <__stack+0x12c1d8c>
    1500:	3c 0e 00 00 	.word 0x3c0e0000
    1504:	15 d9 25 40 	l.nop 0x2540
    1508:	00 00 00 74 	l.j 16d8 <__rom_size-0x18c74>
    150c:	02 23 40 0e 	l.j f88d1544 <__stack+0xf8451548>
    1510:	00 00 09 10 	l.j 3950 <__rom_size-0x169fc>
    1514:	25 42 00 00 	l.rfe 
    1518:	00 74 02 23 	l.j 1d01da4 <__stack+0x1881da8>
    151c:	44 0e 00 00 	l.jr r0
    1520:	06 42 25 43 	l.jal f908aa2c <__stack+0xf8c0aa30>
    1524:	00 00 00 74 	l.j 16f4 <__rom_size-0x18c58>
    1528:	02 23 48 0e 	l.j f88d3560 <__stack+0xf8453564>
    152c:	00 00 09 e1 	l.j 3cb0 <__rom_size-0x1669c>
    1530:	25 44 00 00 	l.rfe 
    1534:	00 74 02 23 	l.j 1d01dc0 <__stack+0x1881dc4>
    1538:	4c 00 13 00 	l.maci r0,0x1300
    153c:	00 04 e3 01 	l.j 13a140 <__ram_length+0xba140>
    1540:	00 25 48 00 	l.j 953540 <__stack+0x4d3544>
    1544:	00 15 f2 0e 	l.j 57dd7c <__stack+0xfdd80>
    1548:	00 00 09 0a 	l.j 3970 <__rom_size-0x169dc>
    154c:	25 49 00 00 	l.rfe 
    1550:	00 74 02 23 	l.j 1d01ddc <__stack+0x1881de0>
    1554:	00 0e 00 00 	l.j 381554 <__ram_length+0x301554>
    1558:	0e 82 25 4a 	l.bnf fa08aa80 <__stack+0xf9c0aa84>
    155c:	00 00 00 74 	l.j 172c <__rom_size-0x18c20>
    1560:	02 23 04 0e 	l.j f88c2598 <__stack+0xf844259c>
    1564:	00 00 12 70 	l.j 5f24 <__rom_size-0x14428>
    1568:	25 4b 00 00 	l.rfe 
    156c:	00 5d 02 23 	l.j 1741df8 <__stack+0x12c1dfc>
    1570:	08 0e 00 00 	.word 0x080e0000
    1574:	0e e7 25 4c 	l.bnf fb9caaa4 <__stack+0xfb54aaa8>
    1578:	00 00 00 74 	l.j 1748 <__rom_size-0x18c04>
    157c:	02 23 0c 0e 	l.j f88c45b4 <__stack+0xf84445b8>
    1580:	00 00 00 83 	l.j 178c <__rom_size-0x18bc0>
    1584:	25 4d 00 00 	l.rfe 
    1588:	00 74 02 23 	l.j 1d01e14 <__stack+0x1881e18>
    158c:	10 0e 00 00 	l.bf 38158c <__ram_length+0x30158c>
    1590:	18 71 25 4e 	.word 0x1871254e
    1594:	00 00 00 74 	l.j 1764 <__rom_size-0x18be8>
    1598:	02 23 14 0e 	l.j f88c65d0 <__stack+0xf84465d4>
    159c:	00 00 07 19 	l.j 3200 <__rom_size-0x1714c>
    15a0:	25 4f 00 00 	l.rfe 
    15a4:	15 f2 02 23 	l.nop 0x223
    15a8:	18 0e 00 00 	l.movhi r0,0x0
    15ac:	19 41 25 50 	.word 0x19412550
    15b0:	00 00 00 74 	l.j 1780 <__rom_size-0x18bcc>
    15b4:	02 23 20 0e 	l.j f88c95ec <__stack+0xf84495f0>
    15b8:	00 00 12 d0 	l.j 60f8 <__rom_size-0x14254>
    15bc:	25 51 00 00 	l.rfe 
    15c0:	16 02 02 23 	.word 0x16020223
    15c4:	24 0e 00 00 	l.rfe 
    15c8:	07 26 25 52 	l.jal fc98ab10 <__stack+0xfc50ab14>
    15cc:	00 00 16 12 	l.j 6e14 <__rom_size-0x13538>
    15d0:	02 23 44 0e 	l.j f88d2608 <__stack+0xf845260c>
    15d4:	00 00 19 29 	l.j 7a78 <__rom_size-0x128d4>
    15d8:	25 53 00 00 	l.rfe 
    15dc:	14 15 03 23 	.word 0x14150323
    15e0:	80 01 0e 00 	l.ld r0,0xe00(r1)
    15e4:	00 00 00 25 	l.j 1678 <__rom_size-0x18cd4>
    15e8:	54 00 00 16 	.word 0x54000016
    15ec:	22 03 23 d0 	.word 0x220323d0
    15f0:	01 00 04 00 	l.j 40025f0 <__stack+0x3b825f4>
    15f4:	00 00 74 00 	l.j 1e5f4 <__rom_size+0x42a8>
    15f8:	00 16 02 05 	l.j 581e0c <__stack+0x101e10>
    15fc:	00 00 00 74 	l.j 17cc <__rom_size-0x18b80>
    1600:	01 00 04 00 	l.j 4002600 <__stack+0x3b82604>
    1604:	00 00 89 00 	l.j 23a04 <__rom_size+0x96b8>
    1608:	00 16 12 05 	l.j 585e1c <__stack+0x105e20>
    160c:	00 00 00 74 	l.j 17dc <__rom_size-0x18b70>
    1610:	1f 00 04 00 	.word 0x1f000400
    1614:	00 00 74 00 	l.j 1e614 <__rom_size+0x42c8>
    1618:	00 16 22 05 	l.j 589e2c <__stack+0x109e30>
    161c:	00 00 00 74 	l.j 17ec <__rom_size-0x18b60>
    1620:	0e 00 04 00 	l.bnf f8002620 <__stack+0xf7b82624>
    1624:	00 00 74 00 	l.j 1e624 <__rom_size+0x42d8>
    1628:	00 16 32 05 	l.j 58de3c <__stack+0x10de40>
    162c:	00 00 00 74 	l.j 17fc <__rom_size-0x18b50>
    1630:	0b 00 0d 18 	.word 0x0b000d18
    1634:	23 03 00 00 	.word 0x23030000
    1638:	16 57 0e 00 	.word 0x16570e00
    163c:	00 1a a1 23 	l.j 6a9ac8 <__stack+0x229acc>
    1640:	05 00 00 00 	l.jal 4001640 <__stack+0x3b81644>
    1644:	ab 02 23 00 	l.ori r24,r2,0x2300
    1648:	0e 00 00 1a 	l.bnf f80016b0 <__stack+0xf7b816b4>
    164c:	9c 23 06 00 	l.addi r1,r3,0x600
    1650:	00 05 a4 02 	l.j 16a658 <__ram_length+0xea658>
    1654:	23 08 00 09 	.word 0x23080009
    1658:	00 00 19 a6 	l.j 7cf0 <__rom_size-0x1265c>
    165c:	23 07 00 00 	.word 0x23070000
    1660:	16 32 0d 02 	.word 0x16320d02
    1664:	23 09 00 00 	.word 0x23090000
    1668:	16 87 0e 00 	.word 0x16870e00
    166c:	00 07 85 23 	l.j 1e2af8 <__ram_length+0x162af8>
    1670:	0b 00 00 00 	.word 0x0b000000
    1674:	2c 02 23 00 	.word 0x2c022300
    1678:	0e 00 00 18 	l.bnf f80016d8 <__stack+0xf7b816dc>
    167c:	3e 23 0c 00 	.word 0x3e230c00
    1680:	00 00 2c 02 	l.j c688 <__rom_size-0xdcc4>
    1684:	23 01 00 09 	.word 0x23010009
    1688:	00 00 15 c3 	l.j 6d94 <__rom_size-0x135b8>
    168c:	23 0d 00 00 	.word 0x230d0000
    1690:	16 62 0d 02 	.word 0x16620d02
    1694:	23 0f 00 00 	.word 0x230f0000
    1698:	16 b7 0e 00 	.word 0x16b70e00
    169c:	00 0b 55 23 	l.j 2d6b28 <__ram_length+0x256b28>
    16a0:	11 00 00 00 	l.bf 40016a0 <__stack+0x3b816a4>
    16a4:	2c 02 23 00 	.word 0x2c022300
    16a8:	0e 00 00 16 	l.bnf f8001700 <__stack+0xf7b81704>
    16ac:	e9 23 12 00 	.word 0xe9231200
    16b0:	00 00 2c 02 	l.j c6b8 <__rom_size-0xdc94>
    16b4:	23 01 00 09 	.word 0x23010009
    16b8:	00 00 02 f7 	l.j 2294 <__rom_size-0x180b8>
    16bc:	23 13 00 00 	.word 0x23130000
    16c0:	16 92 0d 1c 	.word 0x16920d1c
    16c4:	23 15 00 00 	.word 0x23150000
    16c8:	17 03 0e 00 	.word 0x17030e00
    16cc:	00 0c 0d 23 	l.j 304b58 <__ram_length+0x284b58>
    16d0:	17 00 00 00 	.word 0x17000000
    16d4:	2c 02 23 00 	.word 0x2c022300
    16d8:	0e 00 00 1a 	l.bnf f8001740 <__stack+0xf7b81744>
    16dc:	62 23 18 00 	.word 0x62231800
    16e0:	00 00 2c 02 	l.j c6e8 <__rom_size-0xdc64>
    16e4:	23 01 0e 00 	.word 0x23010e00
    16e8:	00 1a a1 23 	l.j 6a9b74 <__stack+0x229b78>
    16ec:	19 00 00 00 	l.movhi r8,0x0
    16f0:	ab 02 23 02 	l.ori r24,r2,0x2302
    16f4:	0e 00 00 1a 	l.bnf f800175c <__stack+0xf7b81760>
    16f8:	9c 23 1a 00 	l.addi r1,r3,0x1a00
    16fc:	00 05 a4 02 	l.j 16a704 <__ram_length+0xea704>
    1700:	23 0a 00 09 	.word 0x230a0009
    1704:	00 00 1a 1b 	l.j 7f70 <__rom_size-0x123dc>
    1708:	23 1b 00 00 	.word 0x231b0000
    170c:	16 c2 0d 6c 	.word 0x16c20d6c
    1710:	23 1d 00 00 	.word 0x231d0000
    1714:	17 da 11 69 	.word 0x17da1169
    1718:	64 00 23 1f 	.word 0x6400231f
    171c:	00 00 00 ab 	l.j 19c8 <__rom_size-0x18984>
    1720:	02 23 00 0e 	l.j f88c1758 <__stack+0xf844175c>
    1724:	00 00 06 fc 	l.j 3314 <__rom_size-0x17038>
    1728:	23 20 00 00 	.word 0x23200000
    172c:	00 74 02 23 	l.j 1d01fb8 <__stack+0x1881fbc>
    1730:	08 0e 00 00 	.word 0x080e0000
    1734:	10 fd 23 21 	l.bf 3f4a3b8 <__stack+0x3aca3bc>
    1738:	00 00 16 57 	l.j 7094 <__rom_size-0x132b8>
    173c:	02 23 0c 0e 	l.j f88c4774 <__stack+0xf8444778>
    1740:	00 00 18 83 	l.j 794c <__rom_size-0x12a00>
    1744:	23 22 00 00 	.word 0x23220000
    1748:	16 87 02 23 	.word 0x16870223
    174c:	24 0e 00 00 	l.rfe 
    1750:	0b 4e 23 23 	.word 0x0b4e2323
    1754:	00 00 00 2c 	l.j 1804 <__rom_size-0x18b48>
    1758:	02 23 26 0e 	l.j f88caf90 <__stack+0xf844af94>
    175c:	00 00 06 56 	l.j 30b4 <__rom_size-0x17298>
    1760:	23 24 00 00 	.word 0x23240000
    1764:	00 2c 02 23 	l.j b01ff0 <__stack+0x681ff4>
    1768:	27 0e 00 00 	l.rfe 
    176c:	0d ab 23 25 	l.bnf 6aca400 <__stack+0x664a404>
    1770:	00 00 16 b7 	l.j 724c <__rom_size-0x13100>
    1774:	02 23 28 0e 	l.j f88cb7ac <__stack+0xf844b7b0>
    1778:	00 00 02 d9 	l.j 22dc <__rom_size-0x18070>
    177c:	23 26 00 00 	.word 0x23260000
    1780:	00 2c 02 23 	l.j b0200c <__stack+0x682010>
    1784:	2a 0e 00 00 	.word 0x2a0e0000
    1788:	09 ef 23 27 	.word 0x09ef2327
    178c:	00 00 00 2c 	l.j 183c <__rom_size-0x18b10>
    1790:	02 23 2b 0e 	l.j f88cc3c8 <__stack+0xf844c3cc>
    1794:	00 00 0a 61 	l.j 4118 <__rom_size-0x16234>
    1798:	23 28 00 00 	.word 0x23280000
    179c:	00 2c 02 23 	l.j b02028 <__stack+0x68202c>
    17a0:	2c 0e 00 00 	.word 0x2c0e0000
    17a4:	0e 78 23 29 	l.bnf f9e0a448 <__stack+0xf998a44c>
    17a8:	00 00 00 2c 	l.j 1858 <__rom_size-0x18af4>
    17ac:	02 23 2d 0e 	l.j f88ccbe4 <__stack+0xf844cbe8>
    17b0:	00 00 00 af 	l.j 1a6c <__rom_size-0x188e0>
    17b4:	23 2a 00 00 	.word 0x232a0000
    17b8:	17 da 02 23 	.word 0x17da0223
    17bc:	30 11 63 70 	.word 0x30116370
    17c0:	75 00 23 2b 	l.cust2 
    17c4:	00 00 00 2c 	l.j 1874 <__rom_size-0x18ad8>
    17c8:	02 23 68 0e 	l.j f88db800 <__stack+0xf845b804>
    17cc:	00 00 0e 7d 	l.j 51c0 <__rom_size-0x1518c>
    17d0:	23 2c 00 00 	.word 0x232c0000
    17d4:	00 2c 02 23 	l.j b02060 <__stack+0x682064>
    17d8:	69 00 04 00 	.word 0x69000400
    17dc:	00 17 03 00 	l.j 5c23dc <__stack+0x1423e0>
    17e0:	00 17 ea 05 	l.j 5fbff4 <__stack+0x17bff8>
    17e4:	00 00 00 74 	l.j 19b4 <__rom_size-0x18998>
    17e8:	01 00 09 00 	l.j 4003be8 <__stack+0x3b83bec>
    17ec:	00 13 ab 23 	l.j 4ec478 <__stack+0x6c47c>
    17f0:	2d 00 00 17 	.word 0x2d000017
    17f4:	0e 09 00 00 	l.bnf f82417f4 <__stack+0xf7dc17f8>
    17f8:	14 41 1f 31 	.word 0x14411f31
    17fc:	00 00 00 3a 	l.j 18e4 <__rom_size-0x18a68>
    1800:	09 00 00 1a 	.word 0x0900001a
    1804:	05 1f 34 00 	l.jal 47ce804 <__stack+0x434e808>
    1808:	00 00 74 0d 	l.j 1e83c <__rom_size+0x44f0>
    180c:	08 20 06 00 	.word 0x08200600
    1810:	00 18 30 0e 	l.j 60d848 <__stack+0x18d84c>
    1814:	00 00 05 42 	l.j 2d1c <__rom_size-0x17630>
    1818:	20 08 00 00 	.word 0x20080000
    181c:	00 74 02 23 	l.j 1d020a8 <__stack+0x18820ac>
    1820:	00 0e 00 00 	l.j 381820 <__ram_length+0x301820>
    1824:	0b c0 20 09 	.word 0x0bc02009
    1828:	00 00 00 74 	l.j 19f8 <__rom_size-0x18954>
    182c:	02 23 04 00 	l.j f88c282c <__stack+0xf8442830>
    1830:	09 00 00 0b 	.word 0x0900000b
    1834:	77 20 0a 00 	l.cust2 
    1838:	00 18 0b 0f 	l.j 604474 <__stack+0x184478>
    183c:	01 2c 20 0c 	l.j 4b0986c <__stack+0x4689870>
    1840:	00 00 18 b5 	l.j 7b14 <__rom_size-0x12838>
    1844:	0e 00 00 1a 	l.bnf f80018ac <__stack+0xf7b818b0>
    1848:	a1 20 0e 00 	l.addic r9,r0,0xe00
    184c:	00 02 b1 02 	l.j adc54 <__ram_length+0x2dc54>
    1850:	23 00 0e 00 	.word 0x23000e00
    1854:	00 17 7c 20 	l.j 5e08d4 <__stack+0x1608d8>
    1858:	0f 00 00 00 	l.bnf fc001858 <__stack+0xfbb8185c>
    185c:	2c 02 23 0b 	.word 0x2c02230b
    1860:	0e 00 00 13 	l.bnf f80018ac <__stack+0xf7b818b0>
    1864:	4d 20 10 00 	l.maci r0,0x1000
    1868:	00 18 30 02 	l.j 60d870 <__stack+0x18d874>
    186c:	23 0c 0e 00 	.word 0x230c0e00
    1870:	00 05 42 20 	l.j 1520f0 <__ram_length+0xd20f0>
    1874:	11 00 00 00 	l.bf 4001874 <__stack+0x3b81878>
    1878:	74 02 23 14 	l.cust2 
    187c:	0e 00 00 0a 	l.bnf f80018a4 <__stack+0xf7b818a8>
    1880:	ba 20 12 00 	l.slli r17,r0,0x0
    1884:	00 00 74 02 	l.j 1e88c <__rom_size+0x4540>
    1888:	23 18 0e 00 	.word 0x23180e00
    188c:	00 0f 3b 20 	l.j 3d050c <__ram_length+0x35050c>
    1890:	13 00 00 00 	l.bf fc001890 <__stack+0xfbb81894>
    1894:	74 02 23 1c 	l.cust2 
    1898:	0e 00 00 02 	l.bnf f80018a0 <__stack+0xf7b818a4>
    189c:	25 20 14 00 	l.rfe 
    18a0:	00 00 74 02 	l.j 1e8a8 <__rom_size+0x455c>
    18a4:	23 20 0e 00 	.word 0x23200e00
    18a8:	00 1a 9c 20 	l.j 6a8928 <__stack+0x22892c>
    18ac:	15 00 00 02 	l.nop 0x2
    18b0:	c1 02 23 24 	l.mtspr r2,r4,0x4324
    18b4:	00 09 00 00 	l.j 2418b4 <__ram_length+0x1c18b4>
    18b8:	1a 1f 20 16 	.word 0x1a1f2016
    18bc:	00 00 18 3b 	l.j 79a8 <__rom_size-0x129a4>
    18c0:	12 00 00 06 	l.bf f80018d8 <__stack+0xf7b818dc>
    18c4:	a4 10 20 18 	l.andi r0,r16,0x2018
    18c8:	00 00 18 f7 	l.j 7ca4 <__rom_size-0x126a8>
    18cc:	0e 00 00 01 	l.bnf f80018d0 <__stack+0xf7b818d4>
    18d0:	1a 20 1a 00 	l.movhi r17,0x1a00
    18d4:	00 02 dd 02 	l.j b8cdc <__ram_length+0x38cdc>
    18d8:	23 00 0e 00 	.word 0x23000e00
    18dc:	00 17 10 20 	l.j 5c595c <__stack+0x145960>
    18e0:	1b 00 00 00 	l.movhi r24,0x0
    18e4:	74 02 23 08 	l.cust2 
    18e8:	0e 00 00 00 	l.bnf f80018e8 <__stack+0xf7b818ec>
    18ec:	fe 20 1c 00 	l.cust8 
    18f0:	00 00 74 02 	l.j 1e8f8 <__rom_size+0x45ac>
    18f4:	23 0c 00 04 	.word 0x230c0004
    18f8:	00 00 18 c0 	l.j 7bf8 <__rom_size-0x12754>
    18fc:	00 00 19 07 	l.j 7d18 <__rom_size-0x12634>
    1900:	05 00 00 00 	l.jal 4001900 <__stack+0x3b81904>
    1904:	74 03 00 0f 	l.cust2 
    1908:	02 bc 24 0e 	l.j faf0a940 <__stack+0xfaa8a944>
    190c:	00 00 19 86 	l.j 7f24 <__rom_size-0x12428>
    1910:	0e 00 00 1c 	l.bnf f8001980 <__stack+0xf7b81984>
    1914:	2a 24 10 00 	.word 0x2a241000
    1918:	00 00 2c 02 	l.j c920 <__rom_size-0xda2c>
    191c:	23 00 0e 00 	.word 0x23000e00
    1920:	00 11 58 24 	l.j 4579b0 <_stack+0x35cf0>
    1924:	11 00 00 00 	l.bf 4001924 <__stack+0x3b81928>
    1928:	2c 02 23 01 	.word 0x2c022301
    192c:	0e 00 00 12 	l.bnf f8001974 <__stack+0xf7b81978>
    1930:	92 24 12 00 	l.lbs r17,0x1200(r4)
    1934:	00 04 a5 02 	l.j 12ad3c <__ram_length+0xaad3c>
    1938:	23 04 0e 00 	.word 0x23040e00
    193c:	00 12 03 24 	l.j 4825cc <__stack+0x25d0>
    1940:	13 00 00 00 	l.bf fc001940 <__stack+0xfbb81944>
    1944:	74 03 23 9c 	l.cust2 
    1948:	05 0e 00 00 	l.jal 4381948 <__stack+0x3f0194c>
    194c:	0a 33 24 14 	.word 0x0a332414
    1950:	00 00 00 2c 	l.j 1a00 <__rom_size-0x1894c>
    1954:	03 23 a0 05 	l.j fc8e9968 <__stack+0xfc46996c>
    1958:	0e 00 00 0b 	l.bnf f8001984 <__stack+0xf7b81988>
    195c:	1f 24 15 00 	.word 0x1f241500
    1960:	00 00 2c 03 	l.j c96c <__rom_size-0xd9e0>
    1964:	23 a1 05 0e 	.word 0x23a1050e
    1968:	00 00 11 07 	l.j 5d84 <__rom_size-0x145c8>
    196c:	24 16 00 00 	l.rfe 
    1970:	00 2c 03 23 	l.j b025fc <__stack+0x682600>
    1974:	a2 05 0e 00 	l.addic r16,r5,0xe00
    1978:	00 1a a1 24 	l.j 6a9e08 <__stack+0x229e0c>
    197c:	17 00 00 04 	.word 0x17000004
    1980:	b5 03 23 a3 	l.mfspr r8,r3,0x23a3
    1984:	05 00 09 00 	l.jal 4003d84 <__stack+0x3b83d88>
    1988:	00 0f 8a 24 	l.j 3e4218 <__ram_length+0x364218>
    198c:	18 00 00 19 	l.movhi r0,0x19
    1990:	07 0f 11 44 	l.jal fc3c5ea0 <__stack+0xfbf45ea4>
    1994:	22 23 00 00 	.word 0x22230000
    1998:	1a 2f 0e 00 	.word 0x1a2f0e00
    199c:	00 0e cf 22 	l.j 3b5624 <__ram_length+0x335624>
    19a0:	25 00 00 00 	l.rfe 
    19a4:	41 02 23 00 	.word 0x41022300
    19a8:	0e 00 00 17 	l.bnf f8001a04 <__stack+0xf7b81a08>
    19ac:	e9 22 26 00 	.word 0xe9222600
    19b0:	00 18 b5 02 	l.j 62edb8 <__stack+0x1aedbc>
    19b4:	23 04 0e 00 	.word 0x23040e00
    19b8:	00 13 a1 22 	l.j 4e9e40 <__stack+0x69e44>
    19bc:	27 00 00 00 	l.rfe 
    19c0:	3a 03 23 b0 	.word 0x3a0323b0
    19c4:	02 0e 00 00 	l.j f83819c4 <__stack+0xf7f019c8>
    19c8:	0b 48 22 28 	.word 0x0b482228
    19cc:	00 00 00 3a 	l.j 1ab4 <__rom_size-0x18898>
    19d0:	03 23 b2 02 	l.j fc8ee1d8 <__stack+0xfc46e1dc>
    19d4:	0e 00 00 00 	l.bnf f80019d4 <__stack+0xf7b819d8>
    19d8:	fe 22 29 00 	l.cust8 
    19dc:	00 00 3a 03 	l.j 101e8 <__rom_size-0xa164>
    19e0:	23 b4 02 0e 	.word 0x23b4020e
    19e4:	00 00 18 b5 	l.j 7cb8 <__rom_size-0x12694>
    19e8:	22 2a 00 00 	.word 0x222a0000
    19ec:	00 3a 03 23 	l.j e82678 <__stack+0xa0267c>
    19f0:	b6 02 0e 00 	l.mfspr r16,r2,0xe00
    19f4:	00 07 50 22 	l.j 1d5a7c <__ram_length+0x155a7c>
    19f8:	2b 00 00 00 	.word 0x2b000000
    19fc:	3a 03 23 b8 	.word 0x3a0323b8
    1a00:	02 0e 00 00 	l.j f8381a00 <__stack+0xf7f01a04>
    1a04:	05 bc 22 2c 	l.jal 6f0a2b4 <__stack+0x6a8a2b8>
    1a08:	00 00 00 5d 	l.j 1b7c <__rom_size-0x187d0>
    1a0c:	03 23 bc 02 	l.j fc8f0a14 <__stack+0xfc470a18>
    1a10:	0e 00 00 0b 	l.bnf f8001a3c <__stack+0xf7b81a40>
    1a14:	c0 22 2d 00 	l.mtspr r2,r5,0xd00
    1a18:	00 05 63 03 	l.j 15a624 <__ram_length+0xda624>
    1a1c:	23 c0 02 0e 	.word 0x23c0020e
    1a20:	00 00 14 20 	l.j 6aa0 <__rom_size-0x138ac>
    1a24:	22 2e 00 00 	.word 0x222e0000
    1a28:	00 74 03 23 	l.j 1d026b4 <__stack+0x18826b8>
    1a2c:	c0 22 00 09 	l.mtspr r2,r0,0x809
    1a30:	00 00 01 35 	l.j 1f04 <__rom_size-0x18448>
    1a34:	22 2f 00 00 	.word 0x222f0000
    1a38:	19 91 0d 18 	.word 0x19910d18
    1a3c:	23 03 00 00 	.word 0x23030000
    1a40:	1a 5f 0e 00 	.word 0x1a5f0e00
    1a44:	00 1a a1 23 	l.j 6a9ed0 <__stack+0x229ed4>
    1a48:	05 00 00 00 	l.jal 4001a48 <__stack+0x3b81a4c>
    1a4c:	ab 02 23 00 	l.ori r24,r2,0x2300
    1a50:	0e 00 00 1a 	l.bnf f8001ab8 <__stack+0xf7b81abc>
    1a54:	9c 23 06 00 	l.addi r1,r3,0x600
    1a58:	00 05 a4 02 	l.j 16aa60 <__ram_length+0xeaa60>
    1a5c:	23 08 00 09 	.word 0x23080009
    1a60:	00 00 19 a6 	l.j 80f8 <__rom_size-0x12254>
    1a64:	23 07 00 00 	.word 0x23070000
    1a68:	1a 3a 0d 02 	l.movhi r17,0xd02
    1a6c:	23 09 00 00 	.word 0x23090000
    1a70:	1a 8f 0e 00 	.word 0x1a8f0e00
    1a74:	00 07 85 23 	l.j 1e2f00 <__ram_length+0x162f00>
    1a78:	0b 00 00 00 	.word 0x0b000000
    1a7c:	2c 02 23 00 	.word 0x2c022300
    1a80:	0e 00 00 18 	l.bnf f8001ae0 <__stack+0xf7b81ae4>
    1a84:	3e 23 0c 00 	.word 0x3e230c00
    1a88:	00 00 2c 02 	l.j ca90 <__rom_size-0xd8bc>
    1a8c:	23 01 00 09 	.word 0x23010009
    1a90:	00 00 15 c3 	l.j 719c <__rom_size-0x131b0>
    1a94:	23 0d 00 00 	.word 0x230d0000
    1a98:	1a 6a 0d 02 	l.movhi r19,0xd02
    1a9c:	23 0f 00 00 	.word 0x230f0000
    1aa0:	1a bf 0e 00 	.word 0x1abf0e00
    1aa4:	00 0b 55 23 	l.j 2d6f30 <__ram_length+0x256f30>
    1aa8:	11 00 00 00 	l.bf 4001aa8 <__stack+0x3b81aac>
    1aac:	2c 02 23 00 	.word 0x2c022300
    1ab0:	0e 00 00 16 	l.bnf f8001b08 <__stack+0xf7b81b0c>
    1ab4:	e9 23 12 00 	.word 0xe9231200
    1ab8:	00 00 2c 02 	l.j cac0 <__rom_size-0xd88c>
    1abc:	23 01 00 09 	.word 0x23010009
    1ac0:	00 00 02 f7 	l.j 269c <__rom_size-0x17cb0>
    1ac4:	23 13 00 00 	.word 0x23130000
    1ac8:	1a 9a 0d 1c 	l.movhi r20,0xd1c
    1acc:	23 15 00 00 	.word 0x23150000
    1ad0:	1b 0b 0e 00 	.word 0x1b0b0e00
    1ad4:	00 0c 0d 23 	l.j 304f60 <__ram_length+0x284f60>
    1ad8:	17 00 00 00 	.word 0x17000000
    1adc:	2c 02 23 00 	.word 0x2c022300
    1ae0:	0e 00 00 1a 	l.bnf f8001b48 <__stack+0xf7b81b4c>
    1ae4:	62 23 18 00 	.word 0x62231800
    1ae8:	00 00 2c 02 	l.j caf0 <__rom_size-0xd85c>
    1aec:	23 01 0e 00 	.word 0x23010e00
    1af0:	00 1a a1 23 	l.j 6a9f7c <__stack+0x229f80>
    1af4:	19 00 00 00 	l.movhi r8,0x0
    1af8:	ab 02 23 02 	l.ori r24,r2,0x2302
    1afc:	0e 00 00 1a 	l.bnf f8001b64 <__stack+0xf7b81b68>
    1b00:	9c 23 1a 00 	l.addi r1,r3,0x1a00
    1b04:	00 05 a4 02 	l.j 16ab0c <__ram_length+0xeab0c>
    1b08:	23 0a 00 09 	.word 0x230a0009
    1b0c:	00 00 1a 1b 	l.j 8378 <__rom_size-0x11fd4>
    1b10:	23 1b 00 00 	.word 0x231b0000
    1b14:	1a ca 0d 6c 	l.movhi r22,0xd6c
    1b18:	23 1d 00 00 	.word 0x231d0000
    1b1c:	1b e2 11 69 	l.movhi r31,0x1169
    1b20:	64 00 23 1f 	.word 0x6400231f
    1b24:	00 00 00 ab 	l.j 1dd0 <__rom_size-0x1857c>
    1b28:	02 23 00 0e 	l.j f88c1b60 <__stack+0xf8441b64>
    1b2c:	00 00 06 fc 	l.j 371c <__rom_size-0x16c30>
    1b30:	23 20 00 00 	.word 0x23200000
    1b34:	00 74 02 23 	l.j 1d023c0 <__stack+0x18823c4>
    1b38:	08 0e 00 00 	.word 0x080e0000
    1b3c:	10 fd 23 21 	l.bf 3f4a7c0 <__stack+0x3aca7c4>
    1b40:	00 00 1a 5f 	l.j 84bc <__rom_size-0x11e90>
    1b44:	02 23 0c 0e 	l.j f88c4b7c <__stack+0xf8444b80>
    1b48:	00 00 18 83 	l.j 7d54 <__rom_size-0x125f8>
    1b4c:	23 22 00 00 	.word 0x23220000
    1b50:	1a 8f 02 23 	.word 0x1a8f0223
    1b54:	24 0e 00 00 	l.rfe 
    1b58:	0b 4e 23 23 	.word 0x0b4e2323
    1b5c:	00 00 00 2c 	l.j 1c0c <__rom_size-0x18740>
    1b60:	02 23 26 0e 	l.j f88cb398 <__stack+0xf844b39c>
    1b64:	00 00 06 56 	l.j 34bc <__rom_size-0x16e90>
    1b68:	23 24 00 00 	.word 0x23240000
    1b6c:	00 2c 02 23 	l.j b023f8 <__stack+0x6823fc>
    1b70:	27 0e 00 00 	l.rfe 
    1b74:	0d ab 23 25 	l.bnf 6aca808 <__stack+0x664a80c>
    1b78:	00 00 1a bf 	l.j 8674 <__rom_size-0x11cd8>
    1b7c:	02 23 28 0e 	l.j f88cbbb4 <__stack+0xf844bbb8>
    1b80:	00 00 02 d9 	l.j 26e4 <__rom_size-0x17c68>
    1b84:	23 26 00 00 	.word 0x23260000
    1b88:	00 2c 02 23 	l.j b02414 <__stack+0x682418>
    1b8c:	2a 0e 00 00 	.word 0x2a0e0000
    1b90:	09 ef 23 27 	.word 0x09ef2327
    1b94:	00 00 00 2c 	l.j 1c44 <__rom_size-0x18708>
    1b98:	02 23 2b 0e 	l.j f88cc7d0 <__stack+0xf844c7d4>
    1b9c:	00 00 0a 61 	l.j 4520 <__rom_size-0x15e2c>
    1ba0:	23 28 00 00 	.word 0x23280000
    1ba4:	00 2c 02 23 	l.j b02430 <__stack+0x682434>
    1ba8:	2c 0e 00 00 	.word 0x2c0e0000
    1bac:	0e 78 23 29 	l.bnf f9e0a850 <__stack+0xf998a854>
    1bb0:	00 00 00 2c 	l.j 1c60 <__rom_size-0x186ec>
    1bb4:	02 23 2d 0e 	l.j f88ccfec <__stack+0xf844cff0>
    1bb8:	00 00 00 af 	l.j 1e74 <__rom_size-0x184d8>
    1bbc:	23 2a 00 00 	.word 0x232a0000
    1bc0:	1b e2 02 23 	l.movhi r31,0x223
    1bc4:	30 11 63 70 	.word 0x30116370
    1bc8:	75 00 23 2b 	l.cust2 
    1bcc:	00 00 00 2c 	l.j 1c7c <__rom_size-0x186d0>
    1bd0:	02 23 68 0e 	l.j f88dbc08 <__stack+0xf845bc0c>
    1bd4:	00 00 0e 7d 	l.j 55c8 <__rom_size-0x14d84>
    1bd8:	23 2c 00 00 	.word 0x232c0000
    1bdc:	00 2c 02 23 	l.j b02468 <__stack+0x68246c>
    1be0:	69 00 04 00 	.word 0x69000400
    1be4:	00 1b 0b 00 	l.j 6c47e4 <__stack+0x2447e8>
    1be8:	00 1b f2 05 	l.j 6fe3fc <__stack+0x27e400>
    1bec:	00 00 00 74 	l.j 1dbc <__rom_size-0x18590>
    1bf0:	01 00 09 00 	l.j 4003ff0 <__stack+0x3b83ff4>
    1bf4:	00 13 ab 23 	l.j 4ec880 <__stack+0x6c884>
    1bf8:	2d 00 00 1b 	.word 0x2d00001b
    1bfc:	16 09 00 00 	.word 0x16090000
    1c00:	00 3e 1d d3 	l.j f8934c <__stack+0xb09350>
    1c04:	00 00 00 74 	l.j 1dd4 <__rom_size-0x18578>
    1c08:	0d 08 20 06 	l.bnf 4209c20 <__stack+0x3d89c24>
    1c0c:	00 00 1c 2d 	l.j 8cc0 <__rom_size-0x1168c>
    1c10:	0e 00 00 05 	l.bnf f8001c24 <__stack+0xf7b81c28>
    1c14:	42 20 08 00 	.word 0x42200800
    1c18:	00 00 74 02 	l.j 1ec20 <__rom_size+0x48d4>
    1c1c:	23 00 0e 00 	.word 0x23000e00
    1c20:	00 0b c0 20 	l.j 2f1ca0 <__ram_length+0x271ca0>
    1c24:	09 00 00 00 	.word 0x09000000
    1c28:	74 02 23 04 	l.cust2 
    1c2c:	00 09 00 00 	l.j 241c2c <__ram_length+0x1c1c2c>
    1c30:	0b 77 20 0a 	.word 0x0b77200a
    1c34:	00 00 1c 08 	l.j 8c54 <__rom_size-0x116f8>
    1c38:	0f 01 2c 20 	l.bnf fc04ccb8 <__stack+0xfbbcccbc>
    1c3c:	0c 00 00 1c 	l.bnf 1cac <__rom_size-0x186a0>
    1c40:	b2 0e 00 00 	l.muli r16,r14,0x0
    1c44:	1a a1 20 0e 	.word 0x1aa1200e
    1c48:	00 00 02 b1 	l.j 270c <__rom_size-0x17c40>
    1c4c:	02 23 00 0e 	l.j f88c1c84 <__stack+0xf8441c88>
    1c50:	00 00 17 7c 	l.j 7a40 <__rom_size-0x1290c>
    1c54:	20 0f 00 00 	.word 0x200f0000
    1c58:	00 2c 02 23 	l.j b024e4 <__stack+0x6824e8>
    1c5c:	0b 0e 00 00 	.word 0x0b0e0000
    1c60:	13 4d 20 10 	l.bf fd349ca0 <__stack+0xfcec9ca4>
    1c64:	00 00 1c 2d 	l.j 8d18 <__rom_size-0x11634>
    1c68:	02 23 0c 0e 	l.j f88c4ca0 <__stack+0xf8444ca4>
    1c6c:	00 00 05 42 	l.j 3174 <__rom_size-0x171d8>
    1c70:	20 11 00 00 	.word 0x20110000
    1c74:	00 74 02 23 	l.j 1d02500 <__stack+0x1882504>
    1c78:	14 0e 00 00 	.word 0x140e0000
    1c7c:	0a ba 20 12 	.word 0x0aba2012
    1c80:	00 00 00 74 	l.j 1e50 <__rom_size-0x184fc>
    1c84:	02 23 18 0e 	l.j f88c7cbc <__stack+0xf8447cc0>
    1c88:	00 00 0f 3b 	l.j 5974 <__rom_size-0x149d8>
    1c8c:	20 13 00 00 	.word 0x20130000
    1c90:	00 74 02 23 	l.j 1d0251c <__stack+0x1882520>
    1c94:	1c 0e 00 00 	.word 0x1c0e0000
    1c98:	02 25 20 14 	l.j f8949ce8 <__stack+0xf84c9cec>
    1c9c:	00 00 00 74 	l.j 1e6c <__rom_size-0x184e0>
    1ca0:	02 23 20 0e 	l.j f88c9cd8 <__stack+0xf8449cdc>
    1ca4:	00 00 1a 9c 	l.j 8714 <__rom_size-0x11c38>
    1ca8:	20 15 00 00 	.word 0x20150000
    1cac:	02 c1 02 23 	l.j fb042538 <__stack+0xfabc253c>
    1cb0:	24 00 09 00 	l.rfe 
    1cb4:	00 1a 1f 20 	l.j 689934 <__stack+0x209938>
    1cb8:	16 00 00 1c 	.word 0x1600001c
    1cbc:	38 12 00 00 	.word 0x38120000
    1cc0:	06 a4 10 20 	l.jal fa905d40 <__stack+0xfa485d44>
    1cc4:	18 00 00 1c 	l.movhi r0,0x1c
    1cc8:	f4 0e 00 00 	l.cust6 
    1ccc:	01 1a 20 1a 	l.j 4689d34 <__stack+0x4209d38>
    1cd0:	00 00 02 dd 	l.j 2844 <__rom_size-0x17b08>
    1cd4:	02 23 00 0e 	l.j f88c1d0c <__stack+0xf8441d10>
    1cd8:	00 00 17 10 	l.j 7918 <__rom_size-0x12a34>
    1cdc:	20 1b 00 00 	.word 0x201b0000
    1ce0:	00 74 02 23 	l.j 1d0256c <__stack+0x1882570>
    1ce4:	08 0e 00 00 	.word 0x080e0000
    1ce8:	00 fe 20 1c 	l.j 3f89d58 <__stack+0x3b09d5c>
    1cec:	00 00 00 74 	l.j 1ebc <__rom_size-0x18490>
    1cf0:	02 23 0c 00 	l.j f88c4cf0 <__stack+0xf8444cf4>
    1cf4:	04 00 00 1c 	l.jal 1d64 <__rom_size-0x185e8>
    1cf8:	bd 00 00 1d 	.word 0xbd00001d
    1cfc:	04 05 00 00 	l.jal 141cfc <__ram_length+0xc1cfc>
    1d00:	00 74 03 00 	l.j 1d02900 <__stack+0x1882904>
    1d04:	0d 20 20 29 	l.bnf 4809da8 <__stack+0x4389dac>
    1d08:	00 00 1d c3 	l.j 9414 <__rom_size-0x10f38>
    1d0c:	0e 00 00 12 	l.bnf f8001d54 <__stack+0xf7b81d58>
    1d10:	d8 20 2b 00 	l.sb 0xb00(r0),r5
    1d14:	00 02 dd 02 	l.j b911c <__ram_length+0x3911c>
    1d18:	23 00 0e 00 	.word 0x23000e00
    1d1c:	00 09 b2 20 	l.j 26e59c <__ram_length+0x1ee59c>
    1d20:	2f 00 00 00 	.word 0x2f000000
    1d24:	9b 02 23 08 	l.lhs r24,0x2308(r2)
    1d28:	0e 00 00 06 	l.bnf f8001d40 <__stack+0xf7b81d44>
    1d2c:	ed 20 30 00 	.word 0xed203000
    1d30:	00 00 2c 02 	l.j cd38 <__rom_size-0xd614>
    1d34:	23 0b 0e 00 	.word 0x230b0e00
    1d38:	00 11 76 20 	l.j 45f5b8 <_stack+0x3d8f8>
    1d3c:	39 00 00 00 	.word 0x39000000
    1d40:	2c 02 23 0c 	.word 0x2c02230c
    1d44:	0e 00 00 16 	l.bnf f8001d9c <__stack+0xf7b81da0>
    1d48:	0d 20 3c 00 	l.bnf 4810d48 <__stack+0x4390d4c>
    1d4c:	00 00 2c 02 	l.j cd54 <__rom_size-0xd5f8>
    1d50:	23 0d 0e 00 	.word 0x230d0e00
    1d54:	00 01 0f 20 	l.j 459d4 <__rom_size+0x2b688>
    1d58:	3d 00 00 00 	.word 0x3d000000
    1d5c:	3a 02 23 0e 	.word 0x3a02230e
    1d60:	0e 00 00 10 	l.bnf f8001da0 <__stack+0xf7b81da4>
    1d64:	a7 20 3e 00 	l.andi r25,r0,0x3e00
    1d68:	00 00 3a 02 	l.j 10570 <__rom_size-0x9ddc>
    1d6c:	23 10 0e 00 	.word 0x23100e00
    1d70:	00 15 ce 20 	l.j 5755f0 <__stack+0xf55f4>
    1d74:	3f 00 00 00 	.word 0x3f000000
    1d78:	3a 02 23 12 	.word 0x3a022312
    1d7c:	0e 00 00 15 	l.bnf f8001dd0 <__stack+0xf7b81dd4>
    1d80:	6d 20 40 00 	.word 0x6d204000
    1d84:	00 00 3a 02 	l.j 1058c <__rom_size-0x9dc0>
    1d88:	23 14 0e 00 	.word 0x23140e00
    1d8c:	00 1c 80 20 	l.j 721e0c <__stack+0x2a1e10>
    1d90:	41 00 00 00 	.word 0x41000000
    1d94:	3a 02 23 16 	.word 0x3a022316
    1d98:	0e 00 00 0f 	l.bnf f8001dd4 <__stack+0xf7b81dd8>
    1d9c:	9c 20 42 00 	l.addi r1,r0,0x4200
    1da0:	00 00 3a 02 	l.j 105a8 <__rom_size-0x9da4>
    1da4:	23 18 0e 00 	.word 0x23180e00
    1da8:	00 05 e5 20 	l.j 17b228 <__ram_length+0xfb228>
    1dac:	43 00 00 00 	.word 0x43000000
    1db0:	3a 02 23 1a 	.word 0x3a02231a
    1db4:	0e 00 00 1b 	l.bnf f8001e20 <__stack+0xf7b81e24>
    1db8:	7d 20 44 00 	l.cust4 
    1dbc:	00 00 74 02 	l.j 1edc4 <__rom_size+0x4a78>
    1dc0:	23 1c 00 09 	.word 0x231c0009
    1dc4:	00 00 14 d4 	l.j 7114 <__rom_size-0x13238>
    1dc8:	20 45 00 00 	.word 0x20450000
    1dcc:	1d 04 0f 02 	.word 0x1d040f02
    1dd0:	bc 24 0e 00 	l.sfnei r4,0xe00
    1dd4:	00 1e 4d 0e 	l.j 79520c <__stack+0x315210>
    1dd8:	00 00 1c 2a 	l.j 8e80 <__rom_size-0x114cc>
    1ddc:	24 10 00 00 	l.rfe 
    1de0:	00 2c 02 23 	l.j b0266c <__stack+0x682670>
    1de4:	00 0e 00 00 	l.j 381de4 <__ram_length+0x301de4>
    1de8:	11 58 24 11 	l.bf 560ae2c <__stack+0x518ae30>
    1dec:	00 00 00 2c 	l.j 1e9c <__rom_size-0x184b0>
    1df0:	02 23 01 0e 	l.j f88c2228 <__stack+0xf844222c>
    1df4:	00 00 12 92 	l.j 683c <__rom_size-0x13b10>
    1df8:	24 12 00 00 	l.rfe 
    1dfc:	04 a5 02 23 	l.jal 2942688 <__stack+0x24c268c>
    1e00:	04 0e 00 00 	l.jal 381e00 <__ram_length+0x301e00>
    1e04:	12 03 24 13 	l.bf f80cae50 <__stack+0xf7c4ae54>
    1e08:	00 00 00 74 	l.j 1fd8 <__rom_size-0x18374>
    1e0c:	03 23 9c 05 	l.j fc8e8e20 <__stack+0xfc468e24>
    1e10:	0e 00 00 0a 	l.bnf f8001e38 <__stack+0xf7b81e3c>
    1e14:	33 24 14 00 	.word 0x33241400
    1e18:	00 00 2c 03 	l.j ce24 <__rom_size-0xd528>
    1e1c:	23 a0 05 0e 	.word 0x23a0050e
    1e20:	00 00 0b 1f 	l.j 4a9c <__rom_size-0x158b0>
    1e24:	24 15 00 00 	l.rfe 
    1e28:	00 2c 03 23 	l.j b02ab4 <__stack+0x682ab8>
    1e2c:	a1 05 0e 00 	l.addic r8,r5,0xe00
    1e30:	00 11 07 24 	l.j 443ac0 <_stack+0x21e00>
    1e34:	16 00 00 00 	.word 0x16000000
    1e38:	2c 03 23 a2 	.word 0x2c0323a2
    1e3c:	05 0e 00 00 	l.jal 4381e3c <__stack+0x3f01e40>
    1e40:	1a a1 24 17 	.word 0x1aa12417
    1e44:	00 00 04 b5 	l.j 3118 <__rom_size-0x17234>
    1e48:	03 23 a3 05 	l.j fc8eaa5c <__stack+0xfc46aa60>
    1e4c:	00 09 00 00 	l.j 241e4c <__ram_length+0x1c1e4c>
    1e50:	0f 8a 24 18 	l.bnf fe28aeb0 <__stack+0xfde0aeb4>
    1e54:	00 00 1d ce 	l.j 958c <__rom_size-0x10dc0>
    1e58:	0f 11 44 22 	l.bnf fc452ee0 <__stack+0xfbfd2ee4>
    1e5c:	23 00 00 1e 	.word 0x2300001e
    1e60:	f6 0e 00 00 	l.cust6 
    1e64:	0e cf 22 25 	l.bnf fb3ca6f8 <__stack+0xfaf4a6fc>
    1e68:	00 00 00 41 	l.j 1f6c <__rom_size-0x183e0>
    1e6c:	02 23 00 0e 	l.j f88c1ea4 <__stack+0xf8441ea8>
    1e70:	00 00 17 e9 	l.j 7e14 <__rom_size-0x12538>
    1e74:	22 26 00 00 	.word 0x22260000
    1e78:	1c b2 02 23 	.word 0x1cb20223
    1e7c:	04 0e 00 00 	l.jal 381e7c <__ram_length+0x301e7c>
    1e80:	13 a1 22 27 	l.bf fe84a71c <__stack+0xfe3ca720>
    1e84:	00 00 00 3a 	l.j 1f6c <__rom_size-0x183e0>
    1e88:	03 23 b0 02 	l.j fc8ede90 <__stack+0xfc46de94>
    1e8c:	0e 00 00 0b 	l.bnf f8001eb8 <__stack+0xf7b81ebc>
    1e90:	48 22 28 00 	l.jalr r5
    1e94:	00 00 3a 03 	l.j 106a0 <__rom_size-0x9cac>
    1e98:	23 b2 02 0e 	.word 0x23b2020e
    1e9c:	00 00 00 fe 	l.j 2294 <__rom_size-0x180b8>
    1ea0:	22 29 00 00 	.word 0x22290000
    1ea4:	00 3a 03 23 	l.j e82b30 <__stack+0xa02b34>
    1ea8:	b4 02 0e 00 	l.mfspr r0,r2,0xe00
    1eac:	00 18 b5 22 	l.j 62f334 <__stack+0x1af338>
    1eb0:	2a 00 00 00 	.word 0x2a000000
    1eb4:	3a 03 23 b6 	.word 0x3a0323b6
    1eb8:	02 0e 00 00 	l.j f8381eb8 <__stack+0xf7f01ebc>
    1ebc:	07 50 22 2b 	l.jal fd40a768 <__stack+0xfcf8a76c>
    1ec0:	00 00 00 3a 	l.j 1fa8 <__rom_size-0x183a4>
    1ec4:	03 23 b8 02 	l.j fc8efecc <__stack+0xfc46fed0>
    1ec8:	0e 00 00 05 	l.bnf f8001edc <__stack+0xf7b81ee0>
    1ecc:	bc 22 2c 00 	l.sfnei r2,0x2c00
    1ed0:	00 00 5d 03 	l.j 192dc <__rom_size-0x1070>
    1ed4:	23 bc 02 0e 	.word 0x23bc020e
    1ed8:	00 00 0b c0 	l.j 4dd8 <__rom_size-0x15574>
    1edc:	22 2d 00 00 	.word 0x222d0000
    1ee0:	05 63 03 23 	l.jal 58c2b6c <__stack+0x5442b70>
    1ee4:	c0 02 0e 00 	l.mtspr r2,r1,0x600
    1ee8:	00 14 20 22 	l.j 509f70 <__stack+0x89f74>
    1eec:	2e 00 00 00 	.word 0x2e000000
    1ef0:	74 03 23 c0 	l.cust2 
    1ef4:	22 00 09 00 	.word 0x22000900
    1ef8:	00 01 35 22 	l.j 4f380 <__rom_size+0x35034>
    1efc:	2f 00 00 1e 	.word 0x2f00001e
    1f00:	58 09 00 00 	.word 0x58090000
    1f04:	1a 05 1f 34 	.word 0x1a051f34
    1f08:	00 00 00 74 	l.j 20d8 <__rom_size-0x18274>
    1f0c:	0d 18 23 03 	l.bnf 460ab18 <__stack+0x418ab1c>
    1f10:	00 00 1f 31 	l.j 9bd4 <__rom_size-0x10778>
    1f14:	0e 00 00 1a 	l.bnf f8001f7c <__stack+0xf7b81f80>
    1f18:	a1 23 05 00 	l.addic r9,r3,0x500
    1f1c:	00 00 ab 02 	l.j 2cb24 <__rom_size+0x127d8>
    1f20:	23 00 0e 00 	.word 0x23000e00
    1f24:	00 1a 9c 23 	l.j 6a8fb0 <__stack+0x228fb4>
    1f28:	06 00 00 05 	l.jal f8001f3c <__stack+0xf7b81f40>
    1f2c:	a4 02 23 08 	l.andi r0,r2,0x2308
    1f30:	00 09 00 00 	l.j 241f30 <__ram_length+0x1c1f30>
    1f34:	19 a6 23 07 	l.movhi r13,0x2307
    1f38:	00 00 1f 0c 	l.j 9b68 <__rom_size-0x107e4>
    1f3c:	0d 02 23 09 	l.bnf 408ab60 <__stack+0x3c0ab64>
    1f40:	00 00 1f 61 	l.j 9cc4 <__rom_size-0x10688>
    1f44:	0e 00 00 07 	l.bnf f8001f60 <__stack+0xf7b81f64>
    1f48:	85 23 0b 00 	l.lwz r9,0xb00(r3)
    1f4c:	00 00 2c 02 	l.j cf54 <__rom_size-0xd3f8>
    1f50:	23 00 0e 00 	.word 0x23000e00
    1f54:	00 18 3e 23 	l.j 6117e0 <__stack+0x1917e4>
    1f58:	0c 00 00 00 	l.bnf 1f58 <__rom_size-0x183f4>
    1f5c:	2c 02 23 01 	.word 0x2c022301
    1f60:	00 09 00 00 	l.j 241f60 <__ram_length+0x1c1f60>
    1f64:	15 c3 23 0d 	l.nop 0x230d
    1f68:	00 00 1f 3c 	l.j 9c58 <__rom_size-0x106f4>
    1f6c:	0d 02 23 0f 	l.bnf 408aba8 <__stack+0x3c0abac>
    1f70:	00 00 1f 91 	l.j 9db4 <__rom_size-0x10598>
    1f74:	0e 00 00 0b 	l.bnf f8001fa0 <__stack+0xf7b81fa4>
    1f78:	55 23 11 00 	.word 0x55231100
    1f7c:	00 00 2c 02 	l.j cf84 <__rom_size-0xd3c8>
    1f80:	23 00 0e 00 	.word 0x23000e00
    1f84:	00 16 e9 23 	l.j 5bc410 <__stack+0x13c414>
    1f88:	12 00 00 00 	l.bf f8001f88 <__stack+0xf7b81f8c>
    1f8c:	2c 02 23 01 	.word 0x2c022301
    1f90:	00 09 00 00 	l.j 241f90 <__ram_length+0x1c1f90>
    1f94:	02 f7 23 13 	l.j fbdcabe0 <__stack+0xfb94abe4>
    1f98:	00 00 1f 6c 	l.j 9d48 <__rom_size-0x10604>
    1f9c:	0d 1c 23 15 	l.bnf 470abf0 <__stack+0x428abf4>
    1fa0:	00 00 1f dd 	l.j 9f14 <__rom_size-0x10438>
    1fa4:	0e 00 00 0c 	l.bnf f8001fd4 <__stack+0xf7b81fd8>
    1fa8:	0d 23 17 00 	l.bnf 48c7ba8 <__stack+0x4447bac>
    1fac:	00 00 2c 02 	l.j cfb4 <__rom_size-0xd398>
    1fb0:	23 00 0e 00 	.word 0x23000e00
    1fb4:	00 1a 62 23 	l.j 69a840 <__stack+0x21a844>
    1fb8:	18 00 00 00 	l.movhi r0,0x0
    1fbc:	2c 02 23 01 	.word 0x2c022301
    1fc0:	0e 00 00 1a 	l.bnf f8002028 <__stack+0xf7b8202c>
    1fc4:	a1 23 19 00 	l.addic r9,r3,0x1900
    1fc8:	00 00 ab 02 	l.j 2cbd0 <__rom_size+0x12884>
    1fcc:	23 02 0e 00 	.word 0x23020e00
    1fd0:	00 1a 9c 23 	l.j 6a905c <__stack+0x229060>
    1fd4:	1a 00 00 05 	l.movhi r16,0x5
    1fd8:	a4 02 23 0a 	l.andi r0,r2,0x230a
    1fdc:	00 09 00 00 	l.j 241fdc <__ram_length+0x1c1fdc>
    1fe0:	1a 1b 23 1b 	.word 0x1a1b231b
    1fe4:	00 00 1f 9c 	l.j 9e54 <__rom_size-0x104f8>
    1fe8:	0d 6c 23 1d 	l.bnf 5b0ac5c <__stack+0x568ac60>
    1fec:	00 00 20 b4 	l.j a2bc <__rom_size-0x10090>
    1ff0:	11 69 64 00 	l.bf 5a5aff0 <__stack+0x55daff4>
    1ff4:	23 1f 00 00 	.word 0x231f0000
    1ff8:	00 ab 02 23 	l.j 2ac2884 <__stack+0x2642888>
    1ffc:	00 0e 00 00 	l.j 381ffc <__ram_length+0x301ffc>
    2000:	06 fc 23 20 	l.jal fbf0ac80 <__stack+0xfba8ac84>
    2004:	00 00 00 74 	l.j 21d4 <__rom_size-0x18178>
    2008:	02 23 08 0e 	l.j f88c4040 <__stack+0xf8444044>
    200c:	00 00 10 fd 	l.j 6400 <__rom_size-0x13f4c>
    2010:	23 21 00 00 	.word 0x23210000
    2014:	1f 31 02 23 	.word 0x1f310223
    2018:	0c 0e 00 00 	l.bnf 382018 <__ram_length+0x302018>
    201c:	18 83 23 22 	.word 0x18832322
    2020:	00 00 1f 61 	l.j 9da4 <__rom_size-0x105a8>
    2024:	02 23 24 0e 	l.j f88cb05c <__stack+0xf844b060>
    2028:	00 00 0b 4e 	l.j 4d60 <__rom_size-0x155ec>
    202c:	23 23 00 00 	.word 0x23230000
    2030:	00 2c 02 23 	l.j b028bc <__stack+0x6828c0>
    2034:	26 0e 00 00 	l.rfe 
    2038:	06 56 23 24 	l.jal f958acc8 <__stack+0xf910accc>
    203c:	00 00 00 2c 	l.j 20ec <__rom_size-0x18260>
    2040:	02 23 27 0e 	l.j f88cbc78 <__stack+0xf844bc7c>
    2044:	00 00 0d ab 	l.j 56f0 <__rom_size-0x14c5c>
    2048:	23 25 00 00 	.word 0x23250000
    204c:	1f 91 02 23 	.word 0x1f910223
    2050:	28 0e 00 00 	.word 0x280e0000
    2054:	02 d9 23 26 	l.j fb64acec <__stack+0xfb1cacf0>
    2058:	00 00 00 2c 	l.j 2108 <__rom_size-0x18244>
    205c:	02 23 2a 0e 	l.j f88cc894 <__stack+0xf844c898>
    2060:	00 00 09 ef 	l.j 481c <__rom_size-0x15b30>
    2064:	23 27 00 00 	.word 0x23270000
    2068:	00 2c 02 23 	l.j b028f4 <__stack+0x6828f8>
    206c:	2b 0e 00 00 	.word 0x2b0e0000
    2070:	0a 61 23 28 	.word 0x0a612328
    2074:	00 00 00 2c 	l.j 2124 <__rom_size-0x18228>
    2078:	02 23 2c 0e 	l.j f88cd0b0 <__stack+0xf844d0b4>
    207c:	00 00 0e 78 	l.j 5a5c <__rom_size-0x148f0>
    2080:	23 29 00 00 	.word 0x23290000
    2084:	00 2c 02 23 	l.j b02910 <__stack+0x682914>
    2088:	2d 0e 00 00 	.word 0x2d0e0000
    208c:	00 af 23 2a 	l.j 2bcad34 <__stack+0x274ad38>
    2090:	00 00 20 b4 	l.j a360 <__rom_size-0xffec>
    2094:	02 23 30 11 	l.j f88ce0d8 <__stack+0xf844e0dc>
    2098:	63 70 75 00 	.word 0x63707500
    209c:	23 2b 00 00 	.word 0x232b0000
    20a0:	00 2c 02 23 	l.j b0292c <__stack+0x682930>
    20a4:	68 0e 00 00 	.word 0x680e0000
    20a8:	0e 7d 23 2c 	l.bnf f9f4ad58 <__stack+0xf9acad5c>
    20ac:	00 00 00 2c 	l.j 215c <__rom_size-0x181f0>
    20b0:	02 23 69 00 	l.j f88dc4b0 <__stack+0xf845c4b4>
    20b4:	04 00 00 1f 	l.jal 2130 <__rom_size-0x1821c>
    20b8:	dd 00 00 20 	l.sh 0x4020(r0),r0
    20bc:	c4 05 00 00 	.word 0xc4050000
    20c0:	00 74 01 00 	l.j 1d024c0 <__stack+0x18824c4>
    20c4:	09 00 00 13 	.word 0x09000013
    20c8:	ab 23 2d 00 	l.ori r25,r3,0x2d00
    20cc:	00 1f e8 0b 	l.j 7fc0f8 <__stack+0x37c0fc>
    20d0:	00 00 0d 65 	l.j 5664 <__rom_size-0x14ce8>
    20d4:	04 26 07 00 	l.jal 983cd4 <__stack+0x503cd8>
    20d8:	00 22 50 0c 	l.j 896108 <__stack+0x41610c>
    20dc:	00 00 17 5a 	l.j 7e44 <__rom_size-0x12508>
    20e0:	00 0c 00 00 	l.j 3020e0 <__ram_length+0x2820e0>
    20e4:	17 65 01 0c 	.word 0x1765010c
    20e8:	00 00 05 6e 	l.j 36a0 <__rom_size-0x16cac>
    20ec:	02 0c 00 00 	l.j f83020ec <__stack+0xf7e820f0>
    20f0:	05 79 03 0c 	l.jal 5e42d20 <__stack+0x59c2d24>
    20f4:	00 00 19 1e 	l.j 856c <__rom_size-0x11de0>
    20f8:	04 0c 00 00 	l.jal 3020f8 <__ram_length+0x2820f8>
    20fc:	10 02 05 0c 	l.bf 8352c <__ram_length+0x352c>
    2100:	00 00 02 0d 	l.j 2934 <__rom_size-0x17a18>
    2104:	06 0c 00 00 	l.jal f8302104 <__stack+0xf7e82108>
    2108:	02 19 07 0c 	l.j f8643d38 <__stack+0xf81c3d3c>
    210c:	00 00 19 d8 	l.j 886c <__rom_size-0x11ae0>
    2110:	08 0c 00 00 	.word 0x080c0000
    2114:	19 ea 09 0c 	l.movhi r15,0x90c
    2118:	00 00 08 bb 	l.j 4404 <__rom_size-0x15f48>
    211c:	0a 0c 00 00 	.word 0x0a0c0000
    2120:	17 70 0b 0c 	.word 0x17700b0c
    2124:	00 00 00 d0 	l.j 2464 <__rom_size-0x17ee8>
    2128:	0c 0c 00 00 	l.bnf 302128 <__ram_length+0x282128>
    212c:	14 64 0d 0c 	.word 0x14640d0c
    2130:	00 00 14 71 	l.j 72f4 <__rom_size-0x13058>
    2134:	0e 0c 00 00 	l.bnf f8302134 <__stack+0xf7e82138>
    2138:	0f 57 0f 0c 	l.bnf fd5c5d68 <__stack+0xfd145d6c>
    213c:	00 00 0f 66 	l.j 5ed4 <__rom_size-0x14478>
    2140:	10 0c 00 00 	l.bf 302140 <__ram_length+0x282140>
    2144:	1b b4 11 0c 	l.movhi r29,0x110c
    2148:	00 00 0d 76 	l.j 5720 <__rom_size-0x14c2c>
    214c:	12 0c 00 00 	l.bf f830214c <__stack+0xf7e82150>
    2150:	0d 8d 13 0c 	l.bnf 6346d80 <__stack+0x5ec6d84>
    2154:	00 00 08 4b 	l.j 4280 <__rom_size-0x160cc>
    2158:	14 0c 00 00 	.word 0x140c0000
    215c:	08 60 15 0c 	.word 0x0860150c
    2160:	00 00 0e 44 	l.j 5a70 <__rom_size-0x148dc>
    2164:	16 0c 00 00 	.word 0x160c0000
    2168:	0e 5a 17 0c 	l.bnf f9687d98 <__stack+0xf9207d9c>
    216c:	00 00 03 34 	l.j 2e3c <__rom_size-0x17510>
    2170:	18 0c 00 00 	l.movhi r0,0x0
    2174:	0a 6b 19 0c 	.word 0x0a6b190c
    2178:	00 00 0a f3 	l.j 4d44 <__rom_size-0x15608>
    217c:	1a 0c 00 00 	l.movhi r16,0x0
    2180:	0b 09 1b 0c 	.word 0x0b091b0c
    2184:	00 00 04 f8 	l.j 3564 <__rom_size-0x16de8>
    2188:	1c 0c 00 00 	.word 0x1c0c0000
    218c:	05 10 1d 0c 	l.jal 44095bc <__stack+0x3f895c0>
    2190:	00 00 13 69 	l.j 6f34 <__rom_size-0x13418>
    2194:	1e 0c 00 00 	.word 0x1e0c0000
    2198:	13 7f 1f 0c 	l.bf fdfc9dc8 <__stack+0xfdb49dcc>
    219c:	00 00 15 a7 	l.j 7838 <__rom_size-0x12b14>
    21a0:	20 0c 00 00 	.word 0x200c0000
    21a4:	0c e2 21 0c 	l.bnf 388a5d4 <__stack+0x340a5d8>
    21a8:	00 00 06 5e 	l.j 3b20 <__rom_size-0x1682c>
    21ac:	22 0c 00 00 	.word 0x220c0000
    21b0:	06 75 23 0c 	l.jal f9d4ade0 <__stack+0xf98cade4>
    21b4:	00 00 11 f4 	l.j 6984 <__rom_size-0x139c8>
    21b8:	24 0c 00 00 	l.rfe 
    21bc:	11 bb 25 0c 	l.bf 6ecb5ec <__stack+0x6a4b5f0>
    21c0:	00 00 01 cf 	l.j 28fc <__rom_size-0x17a50>
    21c4:	26 0c 00 00 	l.rfe 
    21c8:	01 e0 27 0c 	l.j 780bdf8 <__stack+0x738bdfc>
    21cc:	00 00 0c 15 	l.j 5220 <__rom_size-0x1512c>
    21d0:	28 0c 00 00 	.word 0x280c0000
    21d4:	0c 22 29 0c 	l.bnf 88c604 <__stack+0x40c608>
    21d8:	00 00 16 2e 	l.j 7a90 <__rom_size-0x128bc>
    21dc:	2a 0c 00 00 	.word 0x2a0c0000
    21e0:	16 40 2b 0c 	.word 0x16402b0c
    21e4:	00 00 07 a8 	l.j 4084 <__rom_size-0x162c8>
    21e8:	2c 0c 00 00 	.word 0x2c0c0000
    21ec:	07 ba 2d 0c 	l.jal fee8d61c <__stack+0xfea0d620>
    21f0:	00 00 04 96 	l.j 3448 <__rom_size-0x16f04>
    21f4:	2e 0c 00 00 	.word 0x2e0c0000
    21f8:	04 a5 2f 0c 	l.jal 294de28 <__stack+0x24cde2c>
    21fc:	00 00 06 16 	l.j 3a54 <__rom_size-0x168f8>
    2200:	30 0c 00 00 	.word 0x300c0000
    2204:	06 2c 31 0c 	l.jal f8b0e634 <__stack+0xf868e638>
    2208:	00 00 19 6e 	l.j 87c0 <__rom_size-0x11b8c>
    220c:	32 0c 00 00 	.word 0x320c0000
    2210:	19 8a 33 0c 	l.movhi r12,0x330c
    2214:	00 00 0c 96 	l.j 546c <__rom_size-0x14ee0>
    2218:	34 0c 00 00 	.word 0x340c0000
    221c:	0c ae 35 0c 	l.bnf 2b8f64c <__stack+0x270f650>
    2220:	00 00 17 9c 	l.j 8090 <__rom_size-0x122bc>
    2224:	36 0c 00 00 	.word 0x360c0000
    2228:	17 b3 37 0c 	.word 0x17b3370c
    222c:	00 00 04 30 	l.j 32ec <__rom_size-0x17060>
    2230:	38 0c 00 00 	.word 0x380c0000
    2234:	04 4e 39 0c 	l.jal 1390664 <__stack+0xf10668>
    2238:	00 00 11 80 	l.j 6838 <__rom_size-0x13b14>
    223c:	3a 0c 00 00 	.word 0x3a0c0000
    2240:	15 79 3b 0c 	l.nop 0x3b0c
    2244:	00 00 18 ea 	l.j 85ec <__rom_size-0x11d60>
    2248:	3c 0c 00 00 	.word 0x3c0c0000
    224c:	12 f2 3d 00 	l.bf fbc9164c <__stack+0xfb811650>
    2250:	0b 00 00 01 	.word 0x0b000001
    2254:	fc 04 10 59 	l.cust8 
    2258:	00 00 22 81 	l.j ac5c <__rom_size-0xf6f0>
    225c:	0c 00 00 02 	l.bnf 2264 <__rom_size-0x180e8>
    2260:	b2 00 0c 00 	l.muli r16,r0,0xc00
    2264:	00 11 9f 01 	l.j 469e68 <_stack+0x481a8>
    2268:	0c 00 00 01 	l.bnf 226c <__rom_size-0x180e0>
    226c:	23 02 0c 00 	.word 0x23020c00
    2270:	00 0e 29 03 	l.j 38c67c <__ram_length+0x30c67c>
    2274:	0c 00 00 03 	l.bnf 2280 <__rom_size-0x180cc>
    2278:	91 04 0c 00 	l.lbs r8,0xc00(r4)
    227c:	00 00 0d 05 	l.j 5690 <__rom_size-0x14cbc>
    2280:	00 09 00 00 	l.j 242280 <__ram_length+0x1c2280>
    2284:	1a 05 1f 34 	.word 0x1a051f34
    2288:	00 00 00 74 	l.j 2458 <__rom_size-0x17ef4>
    228c:	12 00 00 06 	l.bf f80022a4 <__stack+0xf7b822a8>
    2290:	a4 10 20 18 	l.andi r0,r16,0x2018
    2294:	00 00 22 c3 	l.j ada0 <__rom_size-0xf5ac>
    2298:	0e 00 00 01 	l.bnf f800229c <__stack+0xf7b822a0>
    229c:	1a 20 1a 00 	l.movhi r17,0x1a00
    22a0:	00 02 dd 02 	l.j b96a8 <__ram_length+0x396a8>
    22a4:	23 00 0e 00 	.word 0x23000e00
    22a8:	00 17 10 20 	l.j 5c6328 <__stack+0x14632c>
    22ac:	1b 00 00 00 	l.movhi r24,0x0
    22b0:	74 02 23 08 	l.cust2 
    22b4:	0e 00 00 00 	l.bnf f80022b4 <__stack+0xf7b822b8>
    22b8:	fe 20 1c 00 	l.cust8 
    22bc:	00 00 74 02 	l.j 1f2c4 <__rom_size+0x4f78>
    22c0:	23 0c 00 04 	.word 0x230c0004
    22c4:	00 00 22 8c 	l.j acf4 <__rom_size-0xf658>
    22c8:	00 00 22 d3 	l.j ae14 <__rom_size-0xf538>
    22cc:	05 00 00 00 	l.jal 40022cc <__stack+0x3b822d0>
    22d0:	74 03 00 09 	l.cust2 
    22d4:	00 00 1a 05 	l.j 8ae8 <__rom_size-0x11864>
    22d8:	1f 34 00 00 	.word 0x1f340000
    22dc:	00 74 12 00 	l.j 1d06adc <__stack+0x1886ae0>
    22e0:	00 02 a2 10 	l.j aab20 <__ram_length+0x2ab20>
    22e4:	12 3b 00 00 	l.bf f8ec22e4 <__stack+0xf8a422e8>
    22e8:	23 1d 11 78 	.word 0x231d1178
    22ec:	00 12 3d 00 	l.j 4916ec <__stack+0x116f0>
    22f0:	00 00 41 02 	l.j 126f8 <__rom_size-0x7c54>
    22f4:	23 00 11 79 	.word 0x23001179
    22f8:	00 12 3d 00 	l.j 4916f8 <__stack+0x116fc>
    22fc:	00 00 41 02 	l.j 12704 <__rom_size-0x7c48>
    2300:	23 04 11 64 	.word 0x23041164
    2304:	78 00 12 3e 	l.cust3 
    2308:	00 00 00 41 	l.j 240c <__rom_size-0x17f40>
    230c:	02 23 08 11 	l.j f88c4350 <__stack+0xf8444354>
    2310:	64 79 00 12 	.word 0x64790012
    2314:	3e 00 00 00 	.word 0x3e000000
    2318:	41 02 23 0c 	.word 0x4102230c
    231c:	00 0d 08 20 	l.j 34439c <__ram_length+0x2c439c>
    2320:	06 00 00 23 	l.jal f80023ac <__stack+0xf7b823b0>
    2324:	42 0e 00 00 	.word 0x420e0000
    2328:	05 42 20 08 	l.jal 508a348 <__stack+0x4c0a34c>
    232c:	00 00 00 74 	l.j 24fc <__rom_size-0x17e50>
    2330:	02 23 00 0e 	l.j f88c2368 <__stack+0xf844236c>
    2334:	00 00 0b c0 	l.j 5234 <__rom_size-0x15118>
    2338:	20 09 00 00 	.word 0x20090000
    233c:	00 74 02 23 	l.j 1d02bc8 <__stack+0x1882bcc>
    2340:	04 00 09 00 	l.jal 4740 <__rom_size-0x15c0c>
    2344:	00 0b 77 20 	l.j 2dffc4 <__ram_length+0x25ffc4>
    2348:	0a 00 00 23 	.word 0x0a000023
    234c:	1d 0f 01 2c 	.word 0x1d0f012c
    2350:	20 0c 00 00 	.word 0x200c0000
    2354:	23 c7 0e 00 	.word 0x23c70e00
    2358:	00 1a a1 20 	l.j 6aa7d8 <__stack+0x22a7dc>
    235c:	0e 00 00 02 	l.bnf f8002364 <__stack+0xf7b82368>
    2360:	b1 02 23 00 	l.muli r8,r2,0x2300
    2364:	0e 00 00 17 	l.bnf f80023c0 <__stack+0xf7b823c4>
    2368:	7c 20 0f 00 	l.cust4 
    236c:	00 00 2c 02 	l.j d374 <__rom_size-0xcfd8>
    2370:	23 0b 0e 00 	.word 0x230b0e00
    2374:	00 13 4d 20 	l.j 4d57f4 <__stack+0x557f8>
    2378:	10 00 00 23 	l.bf 2404 <__rom_size-0x17f48>
    237c:	42 02 23 0c 	.word 0x4202230c
    2380:	0e 00 00 05 	l.bnf f8002394 <__stack+0xf7b82398>
    2384:	42 20 11 00 	.word 0x42201100
    2388:	00 00 74 02 	l.j 1f390 <__rom_size+0x5044>
    238c:	23 14 0e 00 	.word 0x23140e00
    2390:	00 0a ba 20 	l.j 2b0c10 <__ram_length+0x230c10>
    2394:	12 00 00 00 	l.bf f8002394 <__stack+0xf7b82398>
    2398:	74 02 23 18 	l.cust2 
    239c:	0e 00 00 0f 	l.bnf f80023d8 <__stack+0xf7b823dc>
    23a0:	3b 20 13 00 	.word 0x3b201300
    23a4:	00 00 74 02 	l.j 1f3ac <__rom_size+0x5060>
    23a8:	23 1c 0e 00 	.word 0x231c0e00
    23ac:	00 02 25 20 	l.j 8b82c <__ram_length+0xb82c>
    23b0:	14 00 00 00 	.word 0x14000000
    23b4:	74 02 23 20 	l.cust2 
    23b8:	0e 00 00 1a 	l.bnf f8002420 <__stack+0xf7b82424>
    23bc:	9c 20 15 00 	l.addi r1,r0,0x1500
    23c0:	00 02 c1 02 	l.j b27c8 <__ram_length+0x327c8>
    23c4:	23 24 00 09 	.word 0x23240009
    23c8:	00 00 1a 1f 	l.j 8c44 <__rom_size-0x11708>
    23cc:	20 16 00 00 	.word 0x20160000
    23d0:	23 4d 12 00 	.word 0x234d1200
    23d4:	00 06 a4 10 	l.j 1ab414 <__ram_length+0x12b414>
    23d8:	20 18 00 00 	.word 0x20180000
    23dc:	24 09 0e 00 	l.rfe 
    23e0:	00 01 1a 20 	l.j 48c60 <__rom_size+0x2e914>
    23e4:	1a 00 00 02 	l.movhi r16,0x2
    23e8:	dd 02 23 00 	l.sh 0x4300(r2),r4
    23ec:	0e 00 00 17 	l.bnf f8002448 <__stack+0xf7b8244c>
    23f0:	10 20 1b 00 	l.bf 808ff0 <__stack+0x388ff4>
    23f4:	00 00 74 02 	l.j 1f3fc <__rom_size+0x50b0>
    23f8:	23 08 0e 00 	.word 0x23080e00
    23fc:	00 00 fe 20 	l.j 41c7c <__rom_size+0x27930>
    2400:	1c 00 00 00 	.word 0x1c000000
    2404:	74 02 23 0c 	l.cust2 
    2408:	00 04 00 00 	l.j 102408 <__ram_length+0x82408>
    240c:	23 d2 00 00 	.word 0x23d20000
    2410:	24 19 05 00 	l.rfe 
    2414:	00 00 74 03 	l.j 1f420 <__rom_size+0x50d4>
    2418:	00 0f 03 34 	l.j 3c30e8 <__ram_length+0x3430e8>
    241c:	21 18 00 00 	.word 0x21180000
    2420:	24 5e 0e 00 	l.rfe 
    2424:	00 17 e9 21 	l.j 5fc8a8 <__stack+0x17c8ac>
    2428:	1a 00 00 23 	l.movhi r16,0x23
    242c:	c7 02 23 00 	.word 0xc7022300
    2430:	0e 00 00 0a 	l.bnf f8002458 <__stack+0xf7b8245c>
    2434:	ba 21 1b 00 	l.slli r17,r1,0x0
    2438:	00 00 74 03 	l.j 1f444 <__rom_size+0x50f8>
    243c:	23 ac 02 11 	.word 0x23ac0211
    2440:	70 74 72 00 	l.cust1 
    2444:	21 1c 00 00 	.word 0x211c0000
    2448:	00 74 03 23 	l.j 1d030d4 <__stack+0x18830d8>
    244c:	b0 02 0e 00 	l.muli r0,r2,0xe00
    2450:	00 02 5f 21 	l.j 9a0d4 <__ram_length+0x1a0d4>
    2454:	1d 00 00 03 	.word 0x1d000003
    2458:	63 03 23 b4 	.word 0x630323b4
    245c:	02 00 09 00 	l.j f800485c <__stack+0xf7b84860>
    2460:	00 11 e3 21 	l.j 47b0e4 <_stack+0x59424>
    2464:	1e 00 00 24 	.word 0x1e000024
    2468:	19 09 00 00 	l.macrc r8
    246c:	1a 05 1f 34 	.word 0x1a051f34
    2470:	00 00 00 74 	l.j 2640 <__rom_size-0x17d0c>
    2474:	09 00 00 00 	.word 0x09000000
    2478:	3e 1d d3 00 	.word 0x3e1dd300
    247c:	00 00 74 09 	l.j 1f4a0 <__rom_size+0x5154>
    2480:	00 00 1a 05 	l.j 8c94 <__rom_size-0x116b8>
    2484:	1f 34 00 00 	.word 0x1f340000
    2488:	00 74 16 00 	l.j 1d07c88 <__stack+0x1887c8c>
    248c:	00 16 66 02 	l.j 59bc94 <__stack+0x11bc98>
    2490:	1c 01 00 00 	.word 0x1c010000
    2494:	00 83 01 00 	l.j 20c2894 <__stack+0x1c42898>
    2498:	00 24 ae 17 	l.j 92dcf4 <__stack+0x4adcf8>
    249c:	73 00 19 07 	l.cust1 
    24a0:	00 00 00 90 	l.j 26e0 <__rom_size-0x17c6c>
    24a4:	17 63 00 19 	.word 0x17630019
    24a8:	07 00 00 00 	l.jal fc0024a8 <__stack+0xfbb824ac>
    24ac:	41 00 16 00 	.word 0x41001600
    24b0:	00 15 59 02 	l.j 5588b8 <__stack+0xd88bc>
    24b4:	1a 01 00 00 	l.macrc r16
    24b8:	00 7b 01 00 	l.j 1ec28b8 <__stack+0x1a428bc>
    24bc:	00 24 e6 17 	l.j 93bd18 <__stack+0x4bbd1c>
    24c0:	64 73 74 00 	.word 0x64737400
    24c4:	08 08 00 00 	.word 0x08080000
    24c8:	00 7b 17 63 	l.j 1ec8254 <__stack+0x1a48258>
    24cc:	00 08 08 00 	l.j 2044cc <__ram_length+0x1844cc>
    24d0:	00 00 41 17 	l.j 1292c <__rom_size-0x7a20>
    24d4:	6e 00 08 08 	.word 0x6e000808
    24d8:	00 00 00 d1 	l.j 281c <__rom_size-0x17b30>
    24dc:	18 71 00 08 	.word 0x18710008
    24e0:	0a 00 00 00 	.word 0x0a000000
    24e4:	83 00 19 00 	l.ld r24,0x1900(r0)
    24e8:	00 0a c8 0d 	l.j 2b451c <__ram_length+0x23451c>
    24ec:	02 13 01 00 	l.j f84c28ec <__stack+0xf80428f0>
    24f0:	00 00 41 01 	l.j 128f4 <__rom_size-0x7a58>
    24f4:	00 00 25 39 	l.j b9d8 <__rom_size-0xe974>
    24f8:	1a 73 31 00 	.word 0x1a733100
    24fc:	0d 02 13 00 	l.bnf 40870fc <__stack+0x3c07100>
    2500:	00 00 90 1a 	l.j 26568 <__rom_size+0xc21c>
    2504:	73 32 00 0d 	l.cust1 
    2508:	02 13 00 00 	l.j f84c2508 <__stack+0xf804250c>
    250c:	00 90 1a 6e 	l.j 2408ec4 <__stack+0x1f88ec8>
    2510:	00 0d 02 13 	l.j 342d5c <__ram_length+0x2c2d5c>
    2514:	00 00 09 64 	l.j 4aa4 <__rom_size-0x158a8>
    2518:	1b 63 31 00 	.word 0x1b633100
    251c:	0d 02 17 00 	l.bnf 408811c <__stack+0x3c08120>
    2520:	00 00 89 1b 	l.j 2498c <__rom_size+0xa640>
    2524:	63 32 00 0d 	.word 0x6332000d
    2528:	02 17 00 00 	l.j f85c2528 <__stack+0xf814252c>
    252c:	00 89 1b 76 	l.j 2249304 <__stack+0x1dc9308>
    2530:	00 0d 02 18 	l.j 342d90 <__ram_length+0x2c2d90>
    2534:	00 00 00 41 	l.j 2638 <__rom_size-0x17d14>
    2538:	00 1c 00 00 	l.j 702538 <__stack+0x28253c>
    253c:	02 3e 12 45 	l.j f8f86e50 <__stack+0xf8b06e54>
    2540:	01 00 00 25 	l.j 40025d4 <__stack+0x3b825d8>
    2544:	58 18 69 00 	.word 0x58186900
    2548:	12 49 00 00 	l.bf f9242548 <__stack+0xf8dc254c>
    254c:	00 41 18 6a 	l.j 10486f4 <__stack+0xbc86f8>
    2550:	00 12 49 00 	l.j 494950 <__stack+0x14954>
    2554:	00 00 41 00 	l.j 12954 <__rom_size-0x79f8>
    2558:	1d 00 00 03 	.word 0x1d000003
    255c:	f5 12 56 01 	l.cust6 
    2560:	01 00 00 25 	l.j 40025f4 <__stack+0x3b825f8>
    2564:	78 17 78 00 	l.cust3 
    2568:	12 56 00 00 	l.bf f9582568 <__stack+0xf910256c>
    256c:	00 41 17 79 	l.j 1048350 <__stack+0xbc8354>
    2570:	00 12 56 00 	l.j 497d70 <__stack+0x17d74>
    2574:	00 00 41 00 	l.j 12974 <__rom_size-0x79d8>
    2578:	1d 00 00 16 	.word 0x1d000016
    257c:	7a 12 a5 01 	l.cust3 
    2580:	01 00 00 25 	l.j 4002614 <__stack+0x3b82618>
    2584:	b6 17 69 6e 	l.mfspr r16,r23,0x696e
    2588:	00 12 a5 00 	l.j 4ab988 <__stack+0x2b98c>
    258c:	00 00 7d 17 	l.j 219e8 <__rom_size+0x769c>
    2590:	6f 75 74 00 	.word 0x6f757400
    2594:	12 a5 00 00 	l.bf fa942594 <__stack+0xfa4c2598>
    2598:	00 7d 18 61 	l.j 1f4871c <__stack+0x1ac8720>
    259c:	00 12 a9 00 	l.j 4ac99c <__stack+0x2c9a0>
    25a0:	00 00 41 18 	l.j 12a00 <__rom_size-0x794c>
    25a4:	62 00 12 aa 	.word 0x620012aa
    25a8:	00 00 00 41 	l.j 26ac <__rom_size-0x17ca0>
    25ac:	18 63 00 12 	.word 0x18630012
    25b0:	ab 00 00 00 	l.ori r24,r0,0x0
    25b4:	41 00 1e 00 	.word 0x41001e00
    25b8:	00 17 25 12 	l.j 5cba00 <__stack+0x14ba04>
    25bc:	02 c5 01 01 	l.j fb1429c0 <__stack+0xfacc29c4>
    25c0:	1f 00 00 09 	.word 0x1f000009
    25c4:	9d 12 02 f4 	l.addi r8,r18,0x2f4
    25c8:	01 01 00 00 	l.j 40425c8 <__stack+0x3bc25cc>
    25cc:	25 db 20 00 	l.rfe 
    25d0:	00 12 64 12 	l.j 49b618 <__stack+0x1b61c>
    25d4:	02 f4 00 00 	l.j fbd025d4 <__stack+0xfb8825d8>
    25d8:	00 2c 00 21 	l.j b0265c <__stack+0x682660>
    25dc:	00 00 04 bd 	l.j 38d0 <__rom_size-0x16a7c>
    25e0:	0b 43 01 00 	.word 0x0b430100
    25e4:	00 00 74 01 	l.j 1f5e8 <__rom_size+0x529c>
    25e8:	19 00 00 1a 	l.movhi r8,0x1a
    25ec:	dc 12 03 d6 	l.sh 0x3d6(r18),r0
    25f0:	01 00 00 00 	l.j 40025f0 <__stack+0x3b825f4>
    25f4:	2c 01 00 00 	.word 0x2c010000
    25f8:	26 07 20 00 	l.rfe 
    25fc:	00 10 0d 12 	l.j 405a44 <MMC_Init+0x128>
    2600:	03 d6 00 00 	l.j ff582600 <__stack+0xff102604>
    2604:	00 2c 00 16 	l.j b0265c <__stack+0x682660>
    2608:	00 00 08 fe 	l.j 4a00 <__rom_size-0x1594c>
    260c:	13 5b 01 00 	l.bf fd6c2a0c <__stack+0xfd242a10>
    2610:	00 00 83 01 	l.j 23214 <__rom_size+0x8ec8>
    2614:	00 00 26 3f 	l.j bf10 <__rom_size-0xe43c>
    2618:	17 73 00 13 	.word 0x17730013
    261c:	5b 00 00 00 	.word 0x5b000000
    2620:	83 17 66 00 	l.ld r24,0x6600(r23)
    2624:	13 5b 00 00 	l.bf fd6c2624 <__stack+0xfd242628>
    2628:	26 3f 18 64 	l.rfe 
    262c:	00 13 5d 00 	l.j 4d9a2c <__stack+0x59a30>
    2630:	00 00 41 22 	l.j 12ab8 <__rom_size-0x7894>
    2634:	18 74 00 13 	l.movhi r3,0x13
    2638:	5f 00 00 00 	.word 0x5f000000
    263c:	41 00 00 07 	.word 0x41000007
    2640:	04 00 00 00 	l.jal 2640 <__rom_size-0x17d0c>
    2644:	48 16 00 00 	l.jalr r0
    2648:	08 f8 13 4a 	.word 0x08f8134a
    264c:	01 00 00 00 	l.j 400264c <__stack+0x3b82650>
    2650:	83 01 00 00 	l.ld r24,0x0(r1)
    2654:	26 7d 17 73 	l.rfe 
    2658:	00 13 4a 00 	l.j 4d4e58 <__stack+0x54e5c>
    265c:	00 00 83 17 	l.j 232b8 <__rom_size+0x8f6c>
    2660:	66 00 13 4a 	.word 0x6600134a
    2664:	00 00 26 7d 	l.j c058 <__rom_size-0xe2f4>
    2668:	23 00 00 01 	.word 0x23000001
    266c:	f1 13 4c 00 	l.cust5 r8,r19,r9,0x20,0x0
    2670:	00 00 41 18 	l.j 12ad0 <__rom_size-0x787c>
    2674:	64 00 13 4d 	.word 0x6400134d
    2678:	00 00 00 41 	l.j 277c <__rom_size-0x17bd0>
    267c:	00 07 04 00 	l.j 1c367c <__ram_length+0x14367c>
    2680:	00 00 41 24 	l.j 12b10 <__rom_size-0x783c>
    2684:	00 00 0d 19 	l.j 5ae8 <__rom_size-0x14864>
    2688:	13 c1 01 19 	l.bf ff042aec <__stack+0xfebc2af0>
    268c:	00 00 08 d6 	l.j 49e4 <__rom_size-0x15968>
    2690:	11 02 1d 01 	l.bf 4089a94 <__stack+0x3c09a98>
    2694:	00 00 00 2c 	l.j 2744 <__rom_size-0x17c08>
    2698:	01 00 00 26 	l.j 4002730 <__stack+0x3b82734>
    269c:	aa 1b 4e 63 	l.ori r16,r27,0x4e63
    26a0:	72 00 11 02 	l.cust1 
    26a4:	29 00 00 00 	.word 0x29000000
    26a8:	2c 00 25 00 	.word 0x2c002500
    26ac:	00 1a 6a 11 	l.j 69cef0 <__stack+0x21cef4>
    26b0:	01 14 00 00 	l.j 45026b0 <__stack+0x40826b4>
    26b4:	00 2c 01 00 	l.j b02ab4 <__stack+0x682ab8>
    26b8:	00 26 c6 1b 	l.j 9b3f24 <__stack+0x533f28>
    26bc:	69 00 11 01 	.word 0x69001101
    26c0:	18 00 00 00 	l.movhi r0,0x0
    26c4:	41 00 1f 00 	.word 0x41001f00
    26c8:	00 0a 41 10 	l.j 292b08 <__ram_length+0x212b08>
    26cc:	09 6e 01 01 	.word 0x096e0101
    26d0:	00 00 26 f9 	l.j c2b4 <__rom_size-0xe098>
    26d4:	20 00 00 01 	l.sys 0x1
    26d8:	f6 10 09 6e 	l.cust6 
    26dc:	00 00 00 83 	l.j 28e8 <__rom_size-0x17a64>
    26e0:	20 00 00 13 	l.sys 0x13
    26e4:	95 10 09 6e 	l.lhz r8,0x96e(r16)
    26e8:	00 00 00 90 	l.j 2928 <__rom_size-0x17a24>
    26ec:	20 00 00 0a 	l.sys 0xa
    26f0:	99 10 09 6e 	l.lhs r8,0x96e(r16)
    26f4:	00 00 1b fd 	l.j 96e8 <__rom_size-0x10c64>
    26f8:	00 19 00 00 	l.j 6426f8 <__stack+0x1c26fc>
    26fc:	11 30 0f 01 	l.bf 4c06300 <__stack+0x4786304>
    2700:	04 01 00 00 	l.jal 42700 <__rom_size+0x283b4>
    2704:	00 74 01 00 	l.j 1d02b04 <__stack+0x1882b08>
    2708:	00 27 3c 20 	l.j 9d1788 <__stack+0x55178c>
    270c:	00 00 04 7e 	l.j 3904 <__rom_size-0x16a48>
    2710:	0f 01 04 00 	l.bnf fc043710 <__stack+0xfbbc3714>
    2714:	00 00 3a 20 	l.j 10f94 <__rom_size-0x93b8>
    2718:	00 00 0a 88 	l.j 5138 <__rom_size-0x15214>
    271c:	0f 01 04 00 	l.bnf fc04371c <__stack+0xfbbc3720>
    2720:	00 00 2c 20 	l.j d7a0 <__rom_size-0xcbac>
    2724:	00 00 05 42 	l.j 3c2c <__rom_size-0x16720>
    2728:	0f 01 04 00 	l.bnf fc043728 <__stack+0xfbbc372c>
    272c:	00 00 3a 20 	l.j 10fac <__rom_size-0x93a0>
    2730:	00 00 04 91 	l.j 3974 <__rom_size-0x169d8>
    2734:	0f 01 04 00 	l.bnf fc043734 <__stack+0xfbbc3738>
    2738:	00 00 2c 00 	l.j d738 <__rom_size-0xcc14>
    273c:	1f 00 00 08 	.word 0x1f000008
    2740:	b1 0f 01 46 	l.muli r8,r15,0x146
    2744:	01 01 00 00 	l.j 4042744 <__stack+0x3bc2748>
    2748:	28 1c 1a 63 	lv.packs.h r0,r28,r3
    274c:	31 00 0f 01 	.word 0x31000f01
    2750:	46 00 00 00 	l.jr r0
    2754:	2c 1a 63 32 	.word 0x2c1a6332
    2758:	00 0f 01 46 	l.j 3c2c70 <__ram_length+0x342c70>
    275c:	00 00 00 2c 	l.j 280c <__rom_size-0x17b40>
    2760:	1b 69 64 00 	.word 0x1b696400
    2764:	0f 01 4a 00 	l.bnf fc054f64 <__stack+0xfbbd4f68>
    2768:	00 02 fe 1b 	l.j c1fd4 <__ram_length+0x41fd4>
    276c:	74 66 72 00 	l.cust2 
    2770:	0f 01 4b 00 	l.bnf fc055370 <__stack+0xfbbd5374>
    2774:	00 02 dd 1b 	l.j b9be0 <__ram_length+0x39be0>
    2778:	69 00 0f 01 	.word 0x69000f01
    277c:	4c 00 00 00 	l.maci r0,0x0
    2780:	3a 26 00 00 	.word 0x3a260000
    2784:	05 42 0f 01 	l.jal 5086388 <__stack+0x4c0638c>
    2788:	4d 00 00 00 	l.maci r0,0x0
    278c:	3a 26 00 00 	.word 0x3a260000
    2790:	04 7e 0f 01 	l.jal 1f86394 <__stack+0x1b06398>
    2794:	4e 00 00 00 	l.maci r0,0x0
    2798:	3a 26 00 00 	.word 0x3a260000
    279c:	0a 88 0f 01 	.word 0x0a880f01
    27a0:	4f 00 00 00 	l.maci r0,0x0
    27a4:	2c 26 00 00 	.word 0x2c260000
    27a8:	04 91 0f 01 	l.jal 24463ac <__stack+0x1fc63b0>
    27ac:	50 00 00 00 	.word 0x50000000
    27b0:	2c 26 00 00 	.word 0x2c260000
    27b4:	1b 0d 0f 01 	.word 0x1b0d0f01
    27b8:	51 00 00 00 	.word 0x51000000
    27bc:	3a 26 00 00 	.word 0x3a260000
    27c0:	0d 59 0f 01 	l.bnf 56463c4 <__stack+0x51c63c8>
    27c4:	52 00 00 00 	.word 0x52000000
    27c8:	3a 27 00 00 	.word 0x3a270000
    27cc:	27 db 1b 6c 	l.rfe 
    27d0:	62 61 00 0f 	.word 0x6261000f
    27d4:	01 95 00 00 	l.j 65427d4 <__stack+0x60c27d8>
    27d8:	00 5d 00 27 	l.j 1742874 <__stack+0x12c2878>
    27dc:	00 00 27 fb 	l.j c7c8 <__rom_size-0xdb84>
    27e0:	1b 6c 62 61 	l.movhi r27,0x6261
    27e4:	00 0f 02 1b 	l.j 3c3050 <__ram_length+0x343050>
    27e8:	00 00 00 5d 	l.j 295c <__rom_size-0x179f0>
    27ec:	22 1b 6c 62 	.word 0x221b6c62
    27f0:	61 00 0f 02 	.word 0x61000f02
    27f4:	5c 00 00 00 	.word 0x5c000000
    27f8:	5d 00 00 27 	.word 0x5d000027
    27fc:	00 00 28 0d 	l.j c830 <__rom_size-0xdb1c>
    2800:	1b 6c 62 61 	l.movhi r27,0x6261
    2804:	00 0f 02 91 	l.j 3c3248 <__ram_length+0x343248>
    2808:	00 00 00 5d 	l.j 297c <__rom_size-0x179d0>
    280c:	00 22 1b 6c 	l.j 8895bc <__stack+0x4095c0>
    2810:	62 61 00 0f 	.word 0x6261000f
    2814:	02 e4 00 00 	l.j fb902814 <__stack+0xfb482818>
    2818:	00 5d 00 00 	l.j 1742818 <__stack+0x12c281c>
    281c:	1f 00 00 19 	.word 0x1f000019
    2820:	14 17 02 c6 	.word 0x141702c6
    2824:	01 01 00 00 	l.j 4042824 <__stack+0x3bc2828>
    2828:	28 4d 1a 63 	lv.packs.h r2,r13,r3
    282c:	31 00 17 02 	.word 0x31001702
    2830:	c6 00 00 00 	.word 0xc6000000
    2834:	2c 1a 63 32 	.word 0x2c1a6332
    2838:	00 17 02 c6 	l.j 5c3350 <__stack+0x143354>
    283c:	00 00 00 2c 	l.j 28ec <__rom_size-0x17a60>
    2840:	1b 73 65 6c 	.word 0x1b73656c
    2844:	00 17 02 ca 	l.j 5c336c <__stack+0x143370>
    2848:	00 00 00 2c 	l.j 28f8 <__rom_size-0x17a54>
    284c:	00 1e 00 00 	l.j 78284c <__stack+0x302850>
    2850:	07 fd 17 02 	l.jal fff48458 <__stack+0xffac845c>
    2854:	b9 01 01 1d 	l.slli r8,r1,0x1d
    2858:	00 00 02 50 	l.j 3198 <__rom_size-0x171b4>
    285c:	17 a3 01 01 	.word 0x17a30101
    2860:	00 00 28 6e 	l.j ca18 <__rom_size-0xd934>
    2864:	18 69 00 17 	.word 0x18690017
    2868:	a7 00 00 00 	l.andi r24,r0,0x0
    286c:	3a 00 1f 00 	.word 0x3a001f00
    2870:	00 17 4b 12 	l.j 5d54b8 <__stack+0x1554bc>
    2874:	03 8f 01 01 	l.j fe3c2c78 <__stack+0xfdf42c7c>
    2878:	00 00 28 89 	l.j ca9c <__rom_size-0xd8b0>
    287c:	20 00 00 10 	l.sys 0x10
    2880:	3e 12 03 8f 	.word 0x3e12038f
    2884:	00 00 00 2c 	l.j 2934 <__rom_size-0x17a18>
    2888:	00 1c 00 00 	l.j 702888 <__stack+0x28288c>
    288c:	01 a5 10 75 	l.j 6946a60 <__stack+0x64c6a64>
    2890:	01 00 00 28 	l.j 4002930 <__stack+0x3b82934>
    2894:	aa 18 69 00 	l.ori r16,r24,0x6900
    2898:	10 79 00 00 	l.bf 1e42898 <__stack+0x19c289c>
    289c:	00 41 22 18 	l.j 104b0fc <__stack+0xbcb100>
    28a0:	6a 00 10 7c 	.word 0x6a00107c
    28a4:	00 00 00 41 	l.j 29a8 <__rom_size-0x179a4>
    28a8:	00 00 1f 00 	l.j a4a8 <__rom_size-0xfea4>
    28ac:	00 06 4d 12 	l.j 195cf4 <__ram_length+0x115cf4>
    28b0:	02 ac 01 01 	l.j fab02cb4 <__stack+0xfa682cb8>
    28b4:	00 00 28 c3 	l.j cbc0 <__rom_size-0xd78c>
    28b8:	1b 6e 00 12 	l.movhi r27,0x12
    28bc:	02 b0 00 00 	l.j fac028bc <__stack+0xfa7828c0>
    28c0:	00 3a 00 1c 	l.j e82930 <__stack+0xa02934>
    28c4:	00 00 0b d0 	l.j 5804 <__rom_size-0x14b48>
    28c8:	12 6f 01 00 	l.bf f9bc2cc8 <__stack+0xf9742ccc>
    28cc:	00 28 d9 18 	l.j a38d2c <__stack+0x5b8d30>
    28d0:	69 00 12 73 	.word 0x69001273
    28d4:	00 00 00 41 	l.j 29d8 <__rom_size-0x17974>
    28d8:	00 1c 00 00 	l.j 7028d8 <__stack+0x2828dc>
    28dc:	0a 8d 12 80 	.word 0x0a8d1280
    28e0:	01 00 00 28 	l.j 4002980 <__stack+0x3b82984>
    28e4:	ef 18 69 00 	.word 0xef186900
    28e8:	12 85 00 00 	l.bf fa1428e8 <__stack+0xf9cc28ec>
    28ec:	00 41 00 1f 	l.j 1042968 <__stack+0xbc296c>
    28f0:	00 00 13 12 	l.j 7538 <__rom_size-0x12e14>
    28f4:	10 08 b0 01 	l.bf 22e8f8 <__ram_length+0x1ae8f8>
    28f8:	01 00 00 29 	l.j 400299c <__stack+0x3b829a0>
    28fc:	20 1b 6b 00 	.word 0x201b6b00
    2900:	10 08 b7 00 	l.bf 230500 <__ram_length+0x1b0500>
    2904:	00 00 89 1b 	l.j 24d70 <__rom_size+0xaa24>
    2908:	6c 65 6e 00 	.word 0x6c656e00
    290c:	10 08 b8 00 	l.bf 23090c <__ram_length+0x1b090c>
    2910:	00 00 41 26 	l.j 12da8 <__rom_size-0x75a4>
    2914:	00 00 0c 8e 	l.j 5b4c <__rom_size-0x14800>
    2918:	10 08 b9 00 	l.bf 230d18 <__ram_length+0x1b0d18>
    291c:	00 00 41 00 	l.j 12d1c <__rom_size-0x7630>
    2920:	28 00 00 01 	.word 0x28000001
    2924:	8d 12 03 07 	l.lbz r8,0x307(r18)
    2928:	01 16 00 00 	l.j 4582928 <__stack+0x410292c>
    292c:	16 27 02 17 	.word 0x16270217
    2930:	01 00 00 00 	l.j 4002930 <__stack+0x3b82934>
    2934:	41 01 00 00 	.word 0x41010000
    2938:	29 75 17 73 	lv.subs.b r11,r21,r2
    293c:	31 00 1c 07 	.word 0x31001c07
    2940:	00 00 29 75 	l.j cf14 <__rom_size-0xd438>
    2944:	17 73 32 00 	.word 0x17733200
    2948:	1c 07 00 00 	.word 0x1c070000
    294c:	29 75 17 6e 	lv.sra.b r11,r21,r2
    2950:	00 1c 07 00 	l.j 704550 <__stack+0x284554>
    2954:	00 00 bb 18 	l.j 315b4 <__rom_size+0x17268>
    2958:	63 31 00 1c 	.word 0x6331001c
    295c:	09 00 00 29 	.word 0x09000029
    2960:	7c 18 63 32 	l.cust4 
    2964:	00 1c 09 00 	l.j 704d64 <__stack+0x284d68>
    2968:	00 29 7c 18 	l.j a619c8 <__stack+0x5e19cc>
    296c:	64 00 1c 0a 	.word 0x64001c0a
    2970:	00 00 00 41 	l.j 2a74 <__rom_size-0x178d8>
    2974:	00 07 04 00 	l.j 1c3974 <__ram_length+0x143974>
    2978:	00 29 7b 29 	l.j a6161c <__stack+0x5e1620>
    297c:	07 04 00 00 	l.jal fc10297c <__stack+0xfbc82980>
    2980:	29 82 08 00 	.word 0x29820800
    2984:	00 00 2c 28 	l.j da24 <__rom_size-0xc928>
    2988:	00 00 06 b3 	l.j 4454 <__rom_size-0x15ef8>
    298c:	0c 01 7c 01 	l.bnf 61990 <__rom_size+0x47644>
    2990:	1f 00 00 0f 	.word 0x1f00000f
    2994:	bd 12 02 57 	.word 0xbd120257
    2998:	01 01 00 00 	l.j 4042998 <__stack+0x3bc299c>
    299c:	2a 05 20 00 	.word 0x2a052000
    29a0:	00 0c f5 12 	l.j 33fde8 <__ram_length+0x2bfde8>
    29a4:	02 57 00 00 	l.j f95c29a4 <__stack+0xf91429a8>
    29a8:	00 2c 20 00 	l.j b0a9a8 <__stack+0x68a9ac>
    29ac:	00 16 8f 12 	l.j 5a65f4 <__stack+0x1265f8>
    29b0:	02 57 00 00 	l.j f95c29b0 <__stack+0xf91429b4>
    29b4:	00 83 20 00 	l.j 20ca9b4 <__stack+0x1c4a9b8>
    29b8:	00 1a 2d 12 	l.j 68de00 <__stack+0x20de04>
    29bc:	02 57 00 00 	l.j f95c29bc <__stack+0xf91429c0>
    29c0:	00 74 20 00 	l.j 1d0a9c0 <__stack+0x188a9c4>
    29c4:	00 19 ff 12 	l.j 68260c <__stack+0x202610>
    29c8:	02 57 00 00 	l.j f95c29c8 <__stack+0xf91429cc>
    29cc:	00 74 20 00 	l.j 1d0a9cc <__stack+0x188a9d0>
    29d0:	00 05 bc 12 	l.j 171a18 <__ram_length+0xf1a18>
    29d4:	02 57 00 00 	l.j f95c29d4 <__stack+0xf91429d8>
    29d8:	00 74 20 00 	l.j 1d0a9d8 <__stack+0x188a9dc>
    29dc:	00 0d a4 12 	l.j 36ba24 <__ram_length+0x2eba24>
    29e0:	02 57 00 00 	l.j f95c29e0 <__stack+0xf91429e4>
    29e4:	00 2c 1b 70 	l.j b097a4 <__stack+0x6897a8>
    29e8:	00 12 02 62 	l.j 483370 <__stack+0x3374>
    29ec:	00 00 29 7c 	l.j cfdc <__rom_size-0xd370>
    29f0:	1b 69 00 12 	.word 0x1b690012
    29f4:	02 63 00 00 	l.j f98c29f4 <__stack+0xf94429f8>
    29f8:	00 41 1b 6a 	l.j 10497a0 <__stack+0xbc97a4>
    29fc:	00 12 02 63 	l.j 483388 <__stack+0x338c>
    2a00:	00 00 00 41 	l.j 2b04 <__rom_size-0x17848>
    2a04:	00 1f 00 00 	l.j 7c2a04 <__stack+0x342a08>
    2a08:	10 1e 12 01 	l.bf 78720c <__stack+0x307210>
    2a0c:	94 01 01 00 	l.lhz r0,0x100(r1)
    2a10:	00 2a 7a 1a 	l.j aa1278 <__stack+0x62127c>
    2a14:	6e 00 12 01 	.word 0x6e001201
    2a18:	94 00 00 00 	l.lhz r0,0x0(r0)
    2a1c:	2c 1a 72 6f 	.word 0x2c1a726f
    2a20:	77 00 12 01 	l.cust2 
    2a24:	94 00 00 00 	l.lhz r0,0x0(r0)
    2a28:	89 20 00 00 	l.lws r9,0x0(r0)
    2a2c:	1c 31 12 01 	.word 0x1c311201
    2a30:	94 00 00 00 	l.lhz r0,0x0(r0)
    2a34:	89 1b 69 00 	l.lws r8,0x6900(r27)
    2a38:	12 01 98 00 	l.bf f8068a38 <__stack+0xf7be8a3c>
    2a3c:	00 00 3a 1b 	l.j 112a8 <__rom_size-0x90a4>
    2a40:	70 00 12 01 	l.cust1 
    2a44:	99 00 00 29 	l.lhs r8,0x29(r0)
    2a48:	7c 26 00 00 	l.cust4 
    2a4c:	09 d7 12 01 	.word 0x09d71201
    2a50:	9a 00 00 00 	l.lhs r16,0x0(r0)
    2a54:	41 1b 6c 70 	.word 0x411b6c70
    2a58:	00 12 01 a4 	l.j 4830e8 <__stack+0x30ec>
    2a5c:	00 00 29 7c 	l.j d04c <__rom_size-0xd300>
    2a60:	26 00 00 07 	l.rfe 
    2a64:	a2 12 01 a5 	l.addic r16,r18,0x1a5
    2a68:	00 00 00 41 	l.j 2b6c <__rom_size-0x177e0>
    2a6c:	22 1b 62 67 	.word 0x221b6267
    2a70:	00 12 01 ad 	l.j 483124 <__stack+0x3128>
    2a74:	00 00 00 83 	l.j 2c80 <__rom_size-0x176cc>
    2a78:	00 00 19 00 	l.j 8e78 <__rom_size-0x114d4>
    2a7c:	00 13 3e 0f 	l.j 4d22b8 <__stack+0x522bc>
    2a80:	04 02 01 00 	l.jal 82e80 <__ram_length+0x2e80>
    2a84:	00 00 2c 01 	l.j da88 <__rom_size-0xc8c4>
    2a88:	00 00 2a a5 	l.j d51c <__rom_size-0xce30>
    2a8c:	20 00 00 14 	l.sys 0x14
    2a90:	f7 0f 04 02 	l.cust6 
    2a94:	00 00 00 83 	l.j 2ca0 <__rom_size-0x176ac>
    2a98:	22 1b 69 00 	.word 0x221b6900
    2a9c:	0f 04 08 00 	l.bnf fc104a9c <__stack+0xfbc84aa0>
    2aa0:	00 00 41 00 	l.j 12ea0 <__rom_size-0x74ac>
    2aa4:	00 1d 00 00 	l.j 742aa4 <__stack+0x2c2aa8>
    2aa8:	04 20 17 35 	l.jal 80877c <__stack+0x388780>
    2aac:	01 01 00 00 	l.j 4042aac <__stack+0x3bc2ab0>
    2ab0:	2b 10 2a 00 	.word 0x2b102a00
    2ab4:	00 1b d7 17 	l.j 6f8710 <__stack+0x278714>
    2ab8:	35 00 00 00 	.word 0x35000000
    2abc:	7d 2a 00 00 	l.cust4 
    2ac0:	05 42 17 35 	l.jal 5088794 <__stack+0x4c08798>
    2ac4:	00 00 00 2c 	l.j 2b74 <__rom_size-0x177d8>
    2ac8:	2a 00 00 0b 	.word 0x2a00000b
    2acc:	1f 17 35 00 	.word 0x1f173500
    2ad0:	00 00 2c 2a 	l.j db78 <__rom_size-0xc7d4>
    2ad4:	00 00 1c 1b 	l.j 9b40 <__rom_size-0x1080c>
    2ad8:	17 35 00 00 	.word 0x17350000
    2adc:	00 2c 2a 00 	l.j b0d2dc <__stack+0x68d2e0>
    2ae0:	00 0e f1 17 	l.j 3bef3c <__ram_length+0x33ef3c>
    2ae4:	35 00 00 00 	.word 0x35000000
    2ae8:	2c 23 00 00 	.word 0x2c230000
    2aec:	1a b0 17 39 	l.movhi r21,0x1739
    2af0:	00 00 00 64 	l.j 2c80 <__rom_size-0x176cc>
    2af4:	18 69 00 17 	.word 0x18690017
    2af8:	3a 00 00 00 	.word 0x3a000000
    2afc:	3a 18 78 00 	.word 0x3a187800
    2b00:	17 3b 00 00 	.word 0x173b0000
    2b04:	00 2c 18 70 	l.j b08cc4 <__stack+0x688cc8>
    2b08:	00 17 3c 00 	l.j 5d1b08 <__stack+0x151b0c>
    2b0c:	00 00 7d 00 	l.j 21f0c <__rom_size+0x7bc0>
    2b10:	19 00 00 03 	l.movhi r8,0x3
    2b14:	da 15 02 94 	l.sb 0xffff8294(r21),r0
    2b18:	01 00 00 00 	l.j 4002b18 <__stack+0x3b82b1c>
    2b1c:	2c 01 00 00 	.word 0x2c010000
    2b20:	2b 2f 20 00 	.word 0x2b2f2000
    2b24:	00 14 f7 15 	l.j 540778 <__stack+0xc077c>
    2b28:	02 94 00 00 	l.j fa502b28 <__stack+0xfa082b2c>
    2b2c:	00 83 00 19 	l.j 20c2b90 <__stack+0x1c42b94>
    2b30:	00 00 1b 48 	l.j 9850 <__rom_size-0x10afc>
    2b34:	15 01 7e 01 	l.nop 0x7e01
    2b38:	00 00 00 2c 	l.j 2be8 <__rom_size-0x17764>
    2b3c:	01 00 00 2b 	l.j 4002be8 <__stack+0x3b82bec>
    2b40:	90 20 00 00 	l.lbs r1,0x0(r0)
    2b44:	14 f7 15 01 	.word 0x14f71501
    2b48:	7e 00 00 00 	l.cust4 
    2b4c:	83 2b 00 00 	l.ld r25,0x0(r11)
    2b50:	14 88 15 01 	.word 0x14881501
    2b54:	82 00 00 2b 	l.ld r16,0x2b(r0)
    2b58:	a0 00 00 10 	l.addic r0,r0,0x10
    2b5c:	15 26 00 00 	l.nop 0x0
    2b60:	09 44 15 01 	.word 0x09441501
    2b64:	83 00 00 00 	l.ld r24,0x0(r0)
    2b68:	89 26 00 00 	l.lws r9,0x0(r6)
    2b6c:	03 c0 15 01 	l.j ff007f70 <__stack+0xfeb87f74>
    2b70:	84 00 00 00 	l.lwz r0,0x0(r0)
    2b74:	89 1b 6b 65 	l.lws r8,0x6b65(r27)
    2b78:	79 00 15 01 	l.cust3 
    2b7c:	85 00 00 00 	l.lwz r8,0x0(r0)
    2b80:	2c 22 26 00 	.word 0x2c222600
    2b84:	00 12 12 15 	l.j 4873d8 <__stack+0x73dc>
    2b88:	01 93 00 00 	l.j 64c2b88 <__stack+0x6042b8c>
    2b8c:	2b a5 00 00 	.word 0x2ba50000
    2b90:	04 00 00 00 	l.jal 2b90 <__rom_size-0x177bc>
    2b94:	89 00 00 2b 	l.lws r8,0x2b(r0)
    2b98:	a0 05 00 00 	l.addic r0,r5,0x0
    2b9c:	00 74 08 00 	l.j 1d04b9c <__stack+0x1884ba0>
    2ba0:	08 00 00 2b 	.word 0x0800002b
    2ba4:	90 07 04 00 	l.lbs r0,0x400(r7)
    2ba8:	00 07 47 19 	l.j 1d480c <__ram_length+0x15480c>
    2bac:	00 00 08 0f 	l.j 4be8 <__rom_size-0x15764>
    2bb0:	15 01 6e 01 	l.nop 0x6e01
    2bb4:	00 00 00 2c 	l.j 2c64 <__rom_size-0x176e8>
    2bb8:	01 00 00 2b 	l.j 4002c64 <__stack+0x3b82c68>
    2bbc:	ca 20 00 00 	lf.add.s r17,r0,r0
    2bc0:	14 f7 15 01 	.word 0x14f71501
    2bc4:	6e 00 00 00 	.word 0x6e000000
    2bc8:	83 00 1d 00 	l.ld r24,0x1d00(r0)
    2bcc:	00 10 d3 0c 	l.j 4377fc <_stack+0x15b3c>
    2bd0:	8c 01 01 00 	l.lbz r0,0x100(r1)
    2bd4:	00 2c 04 17 	l.j b03c30 <__stack+0x683c34>
    2bd8:	61 64 72 00 	.word 0x61647200
    2bdc:	0c 8c 00 00 	l.bnf 2302bdc <__stack+0x1e82be0>
    2be0:	00 41 2a 00 	l.j 104d3e0 <__stack+0xbcd3e4>
    2be4:	00 0a ba 0c 	l.j 2b1414 <__ram_length+0x231414>
    2be8:	8c 00 00 00 	l.lbz r0,0x0(r0)
    2bec:	41 18 69 00 	.word 0x41186900
    2bf0:	0c 8e 00 00 	l.bnf 2382bf0 <__stack+0x1f02bf4>
    2bf4:	00 41 22 23 	l.j 104b480 <__stack+0xbcb484>
    2bf8:	00 00 1a b9 	l.j 96dc <__rom_size-0x10c70>
    2bfc:	0c 8f 00 00 	l.bnf 23c2bfc <__stack+0x1f42c00>
    2c00:	00 41 00 00 	l.j 1042c00 <__stack+0xbc2c04>
    2c04:	16 00 00 07 	.word 0x16000007
    2c08:	8b 02 23 01 	l.lws r24,0x2301(r2)
    2c0c:	00 00 00 83 	l.j 2e18 <__rom_size-0x17534>
    2c10:	01 00 00 2c 	l.j 4002cc0 <__stack+0x3b82cc4>
    2c14:	51 17 64 73 	.word 0x51176473
    2c18:	74 00 1b 07 	l.cust2 
    2c1c:	00 00 00 83 	l.j 2e28 <__rom_size-0x17524>
    2c20:	17 73 72 63 	.word 0x17737263
    2c24:	00 1b 07 00 	l.j 6c4824 <__stack+0x244828>
    2c28:	00 00 90 17 	l.j 26c84 <__rom_size+0xc938>
    2c2c:	6e 00 1b 07 	.word 0x6e001b07
    2c30:	00 00 01 24 	l.j 30c0 <__rom_size-0x1728c>
    2c34:	18 71 00 1b 	.word 0x1871001b
    2c38:	09 00 00 00 	.word 0x09000000
    2c3c:	83 18 70 00 	l.ld r24,0x7000(r24)
    2c40:	1b 0a 00 00 	l.movhi r24,0x0
    2c44:	00 90 18 63 	l.j 2408dd0 <__stack+0x1f88dd4>
    2c48:	68 00 1b 0b 	.word 0x68001b0b
    2c4c:	00 00 00 89 	l.j 2e70 <__rom_size-0x174dc>
    2c50:	00 16 00 00 	l.j 582c50 <__stack+0x102c54>
    2c54:	1a 82 02 1b 	l.movhi r20,0x21b
    2c58:	01 00 00 00 	l.j 4002c58 <__stack+0x3b82c5c>
    2c5c:	83 01 00 00 	l.ld r24,0x0(r1)
    2c60:	2c 79 17 64 	.word 0x2c791764
    2c64:	73 74 00 1a 	l.cust1 
    2c68:	07 00 00 00 	l.jal fc002c68 <__stack+0xfbb82c6c>
    2c6c:	83 17 73 72 	l.ld r24,0x7372(r23)
    2c70:	63 00 1a 07 	.word 0x63001a07
    2c74:	00 00 00 90 	l.j 2eb4 <__rom_size-0x17498>
    2c78:	00 16 00 00 	l.j 582c78 <__stack+0x102c7c>
    2c7c:	11 ca 13 82 	l.bf 7287a84 <__stack+0x6e07a88>
    2c80:	01 00 00 00 	l.j 4002c80 <__stack+0x3b82c84>
    2c84:	41 01 00 00 	.word 0x41010000
    2c88:	2c a1 2a 00 	.word 0x2ca12a00
    2c8c:	00 1a 7d 13 	l.j 6a20d8 <__stack+0x2220dc>
    2c90:	82 00 00 2c 	l.ld r16,0x2c(r0)
    2c94:	a1 18 72 65 	l.addic r8,r24,0x7265
    2c98:	74 00 13 84 	l.cust2 
    2c9c:	00 00 00 41 	l.j 2da0 <__rom_size-0x175ac>
    2ca0:	00 08 00 00 	l.j 202ca0 <__ram_length+0x182ca0>
    2ca4:	00 41 2c 00 	l.j 104dca4 <__stack+0xbcdca8>
    2ca8:	00 0f 1e 02 	l.j 3ca4b0 <__ram_length+0x34a4b0>
    2cac:	18 01 00 00 	l.macrc r0
    2cb0:	00 7b 00 40 	l.j 1ec2db0 <__stack+0x1a42db4>
    2cb4:	02 80 00 40 	l.j fa002db4 <__stack+0xf9b82db8>
    2cb8:	02 b0 02 71 	l.j fac0367c <__stack+0xfa783680>
    2cbc:	00 00 00 2d 	l.j 2d70 <__rom_size-0x175dc>
    2cc0:	03 2d 64 73 	l.j fcb5be8c <__stack+0xfc6dbe90>
    2cc4:	74 00 01 08 	l.cust2 
    2cc8:	00 00 00 7b 	l.j 2eb4 <__rom_size-0x17498>
    2ccc:	01 53 2d 73 	l.j 54ce298 <__stack+0x504e29c>
    2cd0:	72 63 00 01 	l.cust1 
    2cd4:	08 00 00 29 	.word 0x08000029
    2cd8:	75 01 54 2e 	l.cust2 
    2cdc:	6e 00 01 08 	.word 0x6e000108
    2ce0:	00 00 00 c6 	l.j 2ff8 <__rom_size-0x17354>
    2ce4:	00 00 00 00 	l.j 2ce4 <__rom_size-0x17668>
    2ce8:	2f 70 00 01 	.word 0x2f700001
    2cec:	0a 00 00 00 	.word 0x0a000000
    2cf0:	90 00 00 00 	l.lbs r0,0x0(r0)
    2cf4:	13 2f 71 00 	l.bf fcbdf0f4 <__stack+0xfc75f0f8>
    2cf8:	01 0b 00 00 	l.j 42c2cf8 <__stack+0x3e42cfc>
    2cfc:	00 83 00 00 	l.j 20c2cfc <__stack+0x1c42d00>
    2d00:	00 26 00 2c 	l.j 982db0 <__stack+0x502db4>
    2d04:	00 00 05 28 	l.j 41a4 <__rom_size-0x161a8>
    2d08:	03 29 01 00 	l.j fca43108 <__stack+0xfc5c310c>
    2d0c:	00 00 41 00 	l.j 1310c <__rom_size-0x7240>
    2d10:	40 02 b0 00 	.word 0x4002b000
    2d14:	40 02 cc 02 	.word 0x4002cc02
    2d18:	71 00 00 00 	l.cust1 
    2d1c:	2d 2c 2e 63 	.word 0x2d2c2e63
    2d20:	00 03 29 00 	l.j cd120 <__ram_length+0x4d120>
    2d24:	00 00 41 00 	l.j 13124 <__rom_size-0x7228>
    2d28:	00 00 39 00 	l.j 11128 <__rom_size-0x9224>
    2d2c:	2c 00 00 0c 	.word 0x2c00000c
    2d30:	74 02 1f 01 	l.cust2 
    2d34:	00 00 00 83 	l.j 2f40 <__rom_size-0x1740c>
    2d38:	00 40 02 cc 	l.j 1003868 <__stack+0xb8386c>
    2d3c:	00 40 02 f4 	l.j 100390c <__stack+0xb83910>
    2d40:	02 71 00 00 	l.j f9c42d40 <__stack+0xf97c2d44>
    2d44:	00 2d 88 2d 	l.j b64df8 <__stack+0x6e4dfc>
    2d48:	64 73 74 00 	.word 0x64737400
    2d4c:	04 09 00 00 	l.jal 242d4c <__ram_length+0x1c2d4c>
    2d50:	00 83 01 53 	l.j 20c329c <__stack+0x1c432a0>
    2d54:	2d 73 72 63 	.word 0x2d737263
    2d58:	00 04 09 00 	l.j 105158 <__ram_length+0x85158>
    2d5c:	00 00 90 01 	l.j 26d60 <__rom_size+0xca14>
    2d60:	54 2f 71 00 	.word 0x542f7100
    2d64:	04 0b 00 00 	l.jal 2c2d64 <__ram_length+0x242d64>
    2d68:	00 83 00 00 	l.j 20c2d68 <__stack+0x1c42d6c>
    2d6c:	00 5a 2f 70 	l.j 168eb2c <__stack+0x120eb30>
    2d70:	00 04 0c 00 	l.j 105d70 <__ram_length+0x85d70>
    2d74:	00 00 90 00 	l.j 26d74 <__rom_size+0xca28>
    2d78:	00 00 6d 30 	l.j 1e238 <__rom_size+0x3eec>
    2d7c:	63 68 00 04 	.word 0x63680004
    2d80:	0d 00 00 00 	l.bnf 4002d80 <__stack+0x3b82d84>
    2d84:	89 01 56 00 	l.lws r8,0x5600(r1)
    2d88:	2c 00 00 18 	.word 0x2c000018
    2d8c:	c7 02 22 01 	l.mac r2,r4
    2d90:	00 00 24 74 	l.j bf60 <__rom_size-0xe3ec>
    2d94:	00 40 02 f4 	l.j 1003964 <__stack+0xb83968>
    2d98:	00 40 03 14 	l.j 10039e8 <__stack+0xb839ec>
    2d9c:	02 71 00 00 	l.j f9c42d9c <__stack+0xf97c2da0>
    2da0:	00 2d bd 2d 	l.j b72254 <__stack+0x6f2258>
    2da4:	73 00 05 07 	l.cust1 
    2da8:	00 00 00 90 	l.j 2fe8 <__rom_size-0x17364>
    2dac:	01 53 2f 73 	l.j 54ceb78 <__stack+0x504eb7c>
    2db0:	73 00 05 09 	l.cust1 
    2db4:	00 00 00 90 	l.j 2ff4 <__rom_size-0x17358>
    2db8:	00 00 00 80 	l.j 2fb8 <__rom_size-0x17394>
    2dbc:	00 2c 00 00 	l.j b02dbc <__stack+0x682dc0>
    2dc0:	12 ad 02 24 	l.bf fab43650 <__stack+0xfa6c3654>
    2dc4:	01 00 00 00 	l.j 4002dc4 <__stack+0x3b82dc8>
    2dc8:	41 00 40 03 	.word 0x41004003
    2dcc:	14 00 40 03 	.word 0x14004003
    2dd0:	6c 02 71 00 	.word 0x6c027100
    2dd4:	00 00 2e 35 	l.j e6a8 <__rom_size-0xbca4>
    2dd8:	2d 73 31 00 	.word 0x2d733100
    2ddc:	06 07 00 00 	l.jal f81c2ddc <__stack+0xf7d42de0>
    2de0:	00 90 01 53 	l.j 240332c <__stack+0x1f83330>
    2de4:	2d 73 32 00 	.word 0x2d733200
    2de8:	06 07 00 00 	l.jal f81c2de8 <__stack+0xf7d42dec>
    2dec:	00 90 01 54 	l.j 240333c <__stack+0x1f83340>
    2df0:	2e 6e 00 06 	.word 0x2e6e0006
    2df4:	07 00 00 01 	l.jal fc002df8 <__stack+0xfbb82dfc>
    2df8:	2f 00 00 00 	.word 0x2f000000
    2dfc:	9e 2f 63 31 	l.addi r17,r15,0x6331
    2e00:	00 06 09 00 	l.j 185200 <__ram_length+0x105200>
    2e04:	00 29 7c 00 	l.j a61e04 <__stack+0x5e1e08>
    2e08:	00 00 b1 2f 	l.j 2f2c4 <__rom_size+0x14f78>
    2e0c:	63 32 00 06 	.word 0x63320006
    2e10:	0a 00 00 29 	.word 0x0a000029
    2e14:	7c 00 00 00 	l.cust4 
    2e18:	c4 2f 63 68 	.word 0xc42f6368
    2e1c:	00 06 0b 00 	l.j 185a1c <__ram_length+0x105a1c>
    2e20:	00 00 2c 00 	l.j de20 <__rom_size-0xc52c>
    2e24:	00 00 d7 2f 	l.j 38ae0 <__rom_size+0x1e794>
    2e28:	64 00 06 0c 	.word 0x6400060c
    2e2c:	00 00 00 41 	l.j 2f30 <__rom_size-0x1741c>
    2e30:	00 00 00 ea 	l.j 31d8 <__rom_size-0x17174>
    2e34:	00 31 00 00 	l.j c42e34 <__stack+0x7c2e38>
    2e38:	0a 42 02 25 	.word 0x0a420225
    2e3c:	01 00 00 00 	l.j 4002e3c <__stack+0x3b82e40>
    2e40:	83 00 40 03 	l.ld r24,0x4003(r0)
    2e44:	6c 00 40 03 	.word 0x6c004003
    2e48:	d8 00 00 01 	l.sb 0x1(r0),r0
    2e4c:	1f 00 00 2e 	.word 0x1f00002e
    2e50:	d5 2d 64 73 	l.sw 0x4c73(r13),r12
    2e54:	74 00 07 07 	l.cust2 
    2e58:	00 00 00 83 	l.j 3064 <__rom_size-0x172e8>
    2e5c:	01 53 2e 73 	l.j 54ce828 <__stack+0x504e82c>
    2e60:	72 63 00 07 	l.cust1 
    2e64:	07 00 00 00 	l.jal fc002e64 <__stack+0xfbb82e68>
    2e68:	90 00 00 01 	l.lbs r0,0x1(r0)
    2e6c:	3f 2e 6e 00 	.word 0x3f2e6e00
    2e70:	07 07 00 00 	l.jal fc1c2e70 <__stack+0xfbd42e74>
    2e74:	01 3a 00 00 	l.j 4e82e74 <__stack+0x4a02e78>
    2e78:	01 52 2f 71 	l.j 548ec3c <__stack+0x500ec40>
    2e7c:	00 07 09 00 	l.j 1c527c <__ram_length+0x14527c>
    2e80:	00 00 83 00 	l.j 23a80 <__rom_size+0x9734>
    2e84:	00 01 70 2f 	l.j 5ef40 <__rom_size+0x44bf4>
    2e88:	70 00 07 0a 	l.cust1 
    2e8c:	00 00 00 90 	l.j 30cc <__rom_size-0x17280>
    2e90:	00 00 01 99 	l.j 34f4 <__rom_size-0x16e58>
    2e94:	2f 63 68 00 	.word 0x2f636800
    2e98:	07 0b 00 00 	l.jal fc2c2e98 <__stack+0xfbe42e9c>
    2e9c:	00 89 00 00 	l.j 2242e9c <__stack+0x1dc2ea0>
    2ea0:	01 d1 32 00 	l.j 744f6a0 <__stack+0x6fcf6a4>
    2ea4:	00 24 ae 00 	l.j 92e6a4 <__stack+0x4ae6a8>
    2ea8:	40 03 ac 00 	.word 0x4003ac00
    2eac:	40 03 c8 07 	.word 0x4003c807
    2eb0:	15 33 00 00 	l.nop 0x0
    2eb4:	24 d3 33 00 	l.rfe 
    2eb8:	00 24 ca 33 	l.j 935784 <__stack+0x4b5788>
    2ebc:	00 00 24 bf 	l.j c1b8 <__rom_size-0xe194>
    2ec0:	34 00 40 03 	.word 0x34004003
    2ec4:	ac 00 40 03 	l.xori r0,r0,0x4003
    2ec8:	c8 35 00 00 	lf.add.s r1,r21,r0
    2ecc:	24 dc 00 00 	l.rfe 
    2ed0:	01 ef 00 00 	l.j 7bc2ed0 <__stack+0x7742ed4>
    2ed4:	00 16 00 00 	l.j 582ed4 <__stack+0x102ed8>
    2ed8:	07 33 09 2d 	l.jal fccc538c <__stack+0xfc845390>
    2edc:	01 00 00 01 	l.j 4002ee0 <__stack+0x3b82ee4>
    2ee0:	5b 01 00 00 	.word 0x5b010000
    2ee4:	2f b8 17 71 	.word 0x2fb81771
    2ee8:	00 09 2d 00 	l.j 24e2e8 <__ram_length+0x1ce2e8>
    2eec:	00 00 83 17 	l.j 23b48 <__rom_size+0x97fc>
    2ef0:	6e 00 09 2d 	.word 0x6e00092d
    2ef4:	00 00 01 5b 	l.j 3460 <__rom_size-0x16eec>
    2ef8:	17 76 61 6c 	.word 0x1776616c
    2efc:	00 09 2d 00 	l.j 24e2fc <__ram_length+0x1ce2fc>
    2f00:	00 00 74 2a 	l.j 1ffa8 <__rom_size+0x5c5c>
    2f04:	00 00 00 a7 	l.j 31a0 <__rom_size-0x171ac>
    2f08:	09 2d 00 00 	.word 0x092d0000
    2f0c:	01 87 2a 00 	l.j 61cd70c <__stack+0x5d4d710>
    2f10:	00 16 e4 09 	l.j 5bbf34 <__stack+0x13bf38>
    2f14:	2e 00 00 00 	.word 0x2e000000
    2f18:	41 2a 00 00 	.word 0x412a0000
    2f1c:	19 ff 09 2e 	.word 0x19ff092e
    2f20:	00 00 00 41 	l.j 3024 <__rom_size-0x17328>
    2f24:	2a 00 00 1b 	lv.all_ne.h r16,r0,r0
    2f28:	25 09 2e 00 	l.rfe 
    2f2c:	00 00 41 18 	l.j 1338c <__rom_size-0x6fc0>
    2f30:	71 71 00 09 	l.cust1 
    2f34:	30 00 00 00 	.word 0x30000000
    2f38:	83 18 6f 00 	l.ld r24,0x6f00(r24)
    2f3c:	09 31 00 00 	.word 0x09310000
    2f40:	01 5b 18 6f 	l.j 56c90fc <__stack+0x5249100>
    2f44:	6f 00 09 31 	.word 0x6f000931
    2f48:	00 00 01 5b 	l.j 34b4 <__rom_size-0x16e98>
    2f4c:	36 00 00 18 	.word 0x36000018
    2f50:	59 09 32 00 	.word 0x59093200
    2f54:	00 2f c8 00 	l.j bf4f54 <__stack+0x774f58>
    2f58:	00 00 e7 36 	l.j 3cc30 <__rom_size+0x228e4>
    2f5c:	00 00 07 e8 	l.j 4efc <__rom_size-0x15450>
    2f60:	09 33 00 00 	.word 0x09330000
    2f64:	2f cd 00 00 	.word 0x2fcd0000
    2f68:	14 c3 23 00 	.word 0x14c32300
    2f6c:	00 18 5b 09 	l.j 619b90 <__stack+0x199b94>
    2f70:	34 00 00 00 	.word 0x34000000
    2f74:	90 23 00 00 	l.lbs r1,0x0(r3)
    2f78:	0d 12 09 35 	l.bnf 448544c <__stack+0x4005450>
    2f7c:	00 00 00 74 	l.j 314c <__rom_size-0x17200>
    2f80:	23 00 00 16 	.word 0x23000016
    2f84:	85 09 36 00 	l.lwz r8,0x3600(r9)
    2f88:	00 00 41 23 	l.j 13414 <__rom_size-0x6f38>
    2f8c:	00 00 1a 13 	l.j 97d8 <__rom_size-0x10b74>
    2f90:	09 37 00 00 	.word 0x09370000
    2f94:	00 41 23 00 	l.j 104bb94 <__stack+0xbcbb98>
    2f98:	00 1a e8 09 	l.j 6bcfbc <__stack+0x23cfc0>
    2f9c:	37 00 00 00 	.word 0x37000000
    2fa0:	41 23 00 00 	.word 0x41230000
    2fa4:	15 45 09 38 	l.nop 0x938
    2fa8:	00 00 00 41 	l.j 30ac <__rom_size-0x172a0>
    2fac:	23 00 00 1c 	.word 0x2300001c
    2fb0:	49 09 38 00 	l.jalr r7
    2fb4:	00 00 41 00 	l.j 133b4 <__rom_size-0x6f98>
    2fb8:	04 00 00 00 	l.jal 2fb8 <__rom_size-0x17394>
    2fbc:	89 00 00 2f 	l.lws r8,0x2f(r0)
    2fc0:	c8 05 00 00 	lf.add.s r0,r5,r0
    2fc4:	00 74 10 00 	l.j 1d06fc4 <__stack+0x1886fc8>
    2fc8:	08 00 00 2f 	.word 0x0800002f
    2fcc:	b8 08 00 00 	l.slli r0,r8,0x0
    2fd0:	2f b8 37 00 	.word 0x2fb83700
    2fd4:	00 11 12 0a 	l.j 4477fc <_stack+0x25b3c>
    2fd8:	01 30 01 00 	l.j 4c033d8 <__stack+0x47833dc>
    2fdc:	00 00 41 00 	l.j 133dc <__rom_size-0x6f70>
    2fe0:	40 03 d8 00 	.word 0x4003d800
    2fe4:	40 0f 28 00 	.word 0x400f2800
    2fe8:	00 02 0d 00 	l.j 863e8 <__ram_length+0x63e8>
    2fec:	00 32 54 38 	l.j c980cc <__stack+0x8180d0>
    2ff0:	00 00 02 5f 	l.j 396c <__rom_size-0x169e0>
    2ff4:	09 a8 00 00 	.word 0x09a80000
    2ff8:	00 83 00 00 	l.j 20c2ff8 <__stack+0x1c42ffc>
    2ffc:	02 2e 2e 6e 	l.j f8b8e9b4 <__stack+0xf870e9b8>
    3000:	00 09 a8 00 	l.j 26d000 <__ram_length+0x1ed000>
    3004:	00 01 5b 00 	l.j 59c04 <__rom_size+0x3f8b8>
    3008:	00 02 4d 38 	l.j 964e8 <__ram_length+0x164e8>
    300c:	00 00 0c 5f 	l.j 6188 <__rom_size-0x141c4>
    3010:	09 a8 00 00 	.word 0x09a80000
    3014:	00 90 00 00 	l.j 2403014 <__stack+0x1f83018>
    3018:	02 6d 2e 61 	l.j f9b4e99c <__stack+0xf96ce9a0>
    301c:	70 00 09 a8 	l.cust1 
    3020:	00 00 01 50 	l.j 3560 <__rom_size-0x16dec>
    3024:	00 00 02 80 	l.j 3a24 <__rom_size-0x16928>
    3028:	2f 70 00 09 	.word 0x2f700009
    302c:	aa 00 00 00 	l.ori r16,r0,0x0
    3030:	90 00 00 04 	l.lbs r0,0x4(r0)
    3034:	06 2f 63 68 	l.jal f8bdbdd4 <__stack+0xf875bdd8>
    3038:	00 09 ab 00 	l.j 26dc38 <__ram_length+0x1edc38>
    303c:	00 00 89 00 	l.j 2543c <__rom_size+0xb0f0>
    3040:	00 04 47 2f 	l.j 114cfc <__ram_length+0x94cfc>
    3044:	71 00 09 ac 	l.cust1 
    3048:	00 00 00 83 	l.j 3254 <__rom_size-0x170f8>
    304c:	00 00 04 a7 	l.j 42e8 <__rom_size-0x16064>
    3050:	2f 6f 00 09 	.word 0x2f6f0009
    3054:	ad 00 00 01 	l.xori r8,r0,0x1
    3058:	5b 00 00 05 	.word 0x5b000005
    305c:	13 2f 76 61 	l.bf fcbe09e0 <__stack+0xfc7609e4>
    3060:	6c 00 09 ae 	.word 0x6c0009ae
    3064:	00 00 01 7c 	l.j 3654 <__rom_size-0x16cf8>
    3068:	00 00 05 ab 	l.j 4714 <__rom_size-0x15c38>
    306c:	39 00 00 05 	.word 0x39000005
    3070:	49 09 af 00 	l.jalr r21
    3074:	00 00 41 00 	l.j 13474 <__rom_size-0x6ed8>
    3078:	00 05 c7 39 	l.j 174d5c <__ram_length+0xf4d5c>
    307c:	00 00 19 ff 	l.j 9878 <__rom_size-0x10ad4>
    3080:	09 b0 00 00 	.word 0x09b00000
    3084:	00 41 00 00 	l.j 1043084 <__stack+0xbc3088>
    3088:	06 33 39 00 	l.jal f8cd1488 <__stack+0xf885148c>
    308c:	00 1b 25 09 	l.j 6cc4b0 <__stack+0x24c4b4>
    3090:	b1 00 00 00 	l.muli r8,r0,0x0
    3094:	41 00 00 06 	.word 0x41000006
    3098:	d7 39 00 00 	l.sw 0xffffc800(r25),r0
    309c:	16 e4 09 b2 	.word 0x16e409b2
    30a0:	00 00 00 41 	l.j 31a4 <__rom_size-0x171a8>
    30a4:	00 00 07 7f 	l.j 4ea0 <__rom_size-0x154ac>
    30a8:	18 73 7a 00 	.word 0x18737a00
    30ac:	09 b3 00 00 	.word 0x09b30000
    30b0:	01 5b 39 00 	l.j 56d14b0 <__stack+0x52514b4>
    30b4:	00 00 a7 09 	l.j 2ccd8 <__rom_size+0x1298c>
    30b8:	b4 00 00 01 	l.mfspr r0,r0,0x1
    30bc:	87 00 00 07 	l.lwz r24,0x7(r0)
    30c0:	c1 3a 04 09 	l.mtspr r26,r0,0x4c09
    30c4:	b5 00 00 30 	l.mfspr r8,r0,0x30
    30c8:	e8 0c 00 00 	.word 0xe80c0000
    30cc:	0d 08 00 0c 	l.bnf 42030fc <__stack+0x3d83100>
    30d0:	00 00 00 a4 	l.j 3360 <__rom_size-0x16fec>
    30d4:	01 0c 00 00 	l.j 43030d4 <__stack+0x3e830d8>
    30d8:	19 fc 02 0c 	l.movhi r15,0x20c
    30dc:	00 00 1b 22 	l.j 9d64 <__rom_size-0x105e8>
    30e0:	03 0c 00 00 	l.j fc3030e0 <__stack+0xfbe830e4>
    30e4:	1b 2a 04 00 	l.movhi r25,0x400
    30e8:	39 00 00 11 	.word 0x39000011
    30ec:	ee 09 bb 00 	.word 0xee09bb00
    30f0:	00 30 c1 00 	l.j c334f0 <__stack+0x7b34f4>
    30f4:	00 08 64 39 	l.j 21c1d8 <__ram_length+0x19c1d8>
    30f8:	00 00 1b 43 	l.j 9e04 <__rom_size-0x10548>
    30fc:	09 bc 00 00 	.word 0x09bc0000
    3100:	00 90 00 00 	l.j 2403100 <__stack+0x1f83104>
    3104:	08 d1 3b 00 	.word 0x08d13b00
    3108:	00 0c 08 09 	l.j 30512c <__ram_length+0x28512c>
    310c:	bd 00 00 00 	.word 0xbd000000
    3110:	89 02 91 53 	l.lws r8,0xffff9153(r2)
    3114:	39 00 00 11 	.word 0x39000011
    3118:	ad 09 be 00 	l.xori r8,r9,0xffffbe00
    311c:	00 00 41 00 	l.j 1351c <__rom_size-0x6e30>
    3120:	00 08 fd 3c 	l.j 242610 <__ram_length+0x1c2610>
    3124:	00 00 08 8d 	l.j 5358 <__rom_size-0x14ff4>
    3128:	09 01 83 00 	.word 0x09018300
    312c:	40 07 9c 3c 	.word 0x40079c3c
    3130:	00 00 1c 3d 	l.j a224 <__rom_size-0x10128>
    3134:	09 01 63 00 	.word 0x09016300
    3138:	40 07 3c 3c 	.word 0x40073c3c
    313c:	00 00 18 34 	l.j 920c <__rom_size-0x11140>
    3140:	09 01 96 00 	.word 0x09019600
    3144:	40 0c 58 3d 	.word 0x400c583d
    3148:	00 00 2e d5 	l.j ec9c <__rom_size-0xb6b0>
    314c:	00 40 07 b0 	l.j 100500c <__stack+0xb85010>
    3150:	00 00 00 00 	l.j 3150 <__rom_size-0x171fc>
    3154:	09 01 84 00 	.word 0x09018400
    3158:	00 32 11 3e 	l.j c87650 <__stack+0x807654>
    315c:	00 00 2f 24 	l.j edec <__rom_size-0xb560>
    3160:	00 00 09 34 	l.j 5630 <__rom_size-0x14d1c>
    3164:	3e 00 00 2f 	.word 0x3e00002f
    3168:	19 00 00 09 	l.movhi r8,0x9
    316c:	68 3e 00 00 	.word 0x683e0000
    3170:	2f 0e 00 00 	.word 0x2f0e0000
    3174:	09 d7 3e 00 	.word 0x09d73e00
    3178:	00 2f 03 00 	l.j bc3d78 <__stack+0x743d7c>
    317c:	00 09 ea 3e 	l.j 27da74 <__ram_length+0x1fda74>
    3180:	00 00 2e f8 	l.j ed60 <__rom_size-0xb5ec>
    3184:	00 00 09 fd 	l.j 5978 <__rom_size-0x149d4>
    3188:	3e 00 00 2e 	.word 0x3e00002e
    318c:	ef 00 00 0a 	.word 0xef00000a
    3190:	42 3e 00 00 	.word 0x423e0000
    3194:	2e e6 00 00 	.word 0x2ee60000
    3198:	0a 55 3f 00 	.word 0x0a553f00
    319c:	00 00 18 35 	l.j 9270 <__rom_size-0x110dc>
    31a0:	00 00 2f 2f 	l.j ee5c <__rom_size-0xb4f0>
    31a4:	00 00 0a fc 	l.j 5d94 <__rom_size-0x145b8>
    31a8:	35 00 00 2f 	.word 0x3500002f
    31ac:	39 00 00 0b 	.word 0x3900000b
    31b0:	4c 35 00 00 	l.maci r21,0x0
    31b4:	2f 42 00 00 	.word 0x2f420000
    31b8:	0b eb 35 00 	.word 0x0beb3500
    31bc:	00 2f 6a 00 	l.j bdd9bc <__stack+0x75d9c0>
    31c0:	00 0c 3b 35 	l.j 311e94 <__ram_length+0x291e94>
    31c4:	00 00 2f 75 	l.j ef98 <__rom_size-0xb3b4>
    31c8:	00 00 0c 4f 	l.j 6304 <__rom_size-0x14048>
    31cc:	35 00 00 2f 	.word 0x3500002f
    31d0:	80 00 00 0c 	l.ld r0,0xc(r0)
    31d4:	7a 35 00 00 	l.cust3 
    31d8:	2f 8b 00 00 	.word 0x2f8b0000
    31dc:	0c b3 35 00 	l.bnf 2cd05dc <__stack+0x28505e0>
    31e0:	00 2f 96 00 	l.j be89e0 <__stack+0x7689e4>
    31e4:	00 0d 53 35 	l.j 357eb8 <__ram_length+0x2d7eb8>
    31e8:	00 00 2f a1 	l.j f06c <__rom_size-0xb2e0>
    31ec:	00 00 0d 80 	l.j 67ec <__rom_size-0x13b60>
    31f0:	35 00 00 2f 	.word 0x3500002f
    31f4:	ac 00 00 0d 	l.xori r0,r0,0xd
    31f8:	95 40 00 00 	l.lhz r10,0x0(r0)
    31fc:	2f 4c 05 03 	.word 0x2f4c0503
    3200:	00 41 77 34 	l.j 1060ed0 <__stack+0xbe0ed4>
    3204:	40 00 00 2f 	.word 0x4000002f
    3208:	5b 05 03 00 	.word 0x5b050300
    320c:	41 77 20 00 	.word 0x41772000
    3210:	00 34 00 40 	l.j d03310 <__stack+0x883314>
    3214:	0c 58 00 40 	l.bnf 1603314 <__stack+0x1183318>
    3218:	0d b8 41 73 	l.bnf 6e137e4 <__stack+0x69937e8>
    321c:	63 68 00 09 	.word 0x63680009
    3220:	01 98 00 00 	l.j 6603220 <__stack+0x6183224>
    3224:	00 89 00 00 	l.j 2243224 <__stack+0x1dc3228>
    3228:	0d d4 41 69 	l.bnf 75137cc <__stack+0x70937d0>
    322c:	00 09 01 99 	l.j 243890 <__ram_length+0x1c3890>
    3230:	00 00 00 41 	l.j 3334 <__rom_size-0x17018>
    3234:	00 00 0d e7 	l.j 69d0 <__rom_size-0x1397c>
    3238:	34 00 40 0c 	.word 0x3400400c
    323c:	b0 00 40 0d 	l.muli r0,r0,0x400d
    3240:	10 41 70 61 	l.bf 105f3c4 <__stack+0xbdf3c8>
    3244:	64 00 09 01 	.word 0x64000901
    3248:	a0 00 00 00 	l.addic r0,r0,0x0
    324c:	89 00 00 0e 	l.lws r8,0xe(r0)
    3250:	1b 00 00 00 	l.movhi r24,0x0
    3254:	2c 00 00 04 	.word 0x2c000004
    3258:	b4 0b 4e 01 	l.mfspr r0,r11,0x4e01
    325c:	00 00 00 74 	l.j 342c <__rom_size-0x16f20>
    3260:	00 40 0f 28 	l.j 1006f00 <__stack+0xb86f04>
    3264:	00 40 0f 40 	l.j 1006f64 <__stack+0xb86f68>
    3268:	02 71 00 00 	l.j f9c43268 <__stack+0xf97c326c>
    326c:	00 32 8e 38 	l.j ca6b4c <__stack+0x826b50>
    3270:	00 00 05 bc 	l.j 4960 <__rom_size-0x159ec>
    3274:	0b 4e 00 00 	.word 0x0b4e0000
    3278:	00 74 00 00 	l.j 1d03278 <__stack+0x188327c>
    327c:	0e 2e 39 00 	l.bnf f8b9167c <__stack+0xf8711680>
    3280:	00 0f 4e 0b 	l.j 3d6aac <__ram_length+0x356aac>
    3284:	52 00 00 00 	.word 0x52000000
    3288:	74 00 00 0e 	l.cust2 
    328c:	41 00 2c 00 	.word 0x41002c00
    3290:	00 06 03 0b 	l.j 183ebc <__ram_length+0x103ebc>
    3294:	5b 01 00 00 	.word 0x5b010000
    3298:	00 74 00 40 	l.j 1d03398 <__stack+0x188339c>
    329c:	0f 40 00 40 	l.bnf fd00339c <__stack+0xfcb833a0>
    32a0:	0f 5c 02 71 	l.bnf fd703c64 <__stack+0xfd283c68>
    32a4:	00 00 00 32 	l.j 336c <__rom_size-0x16fe0>
    32a8:	c8 38 00 00 	lf.add.s r1,r24,r0
    32ac:	15 ee 0b 5b 	l.nop 0xb5b
    32b0:	00 00 00 74 	l.j 3480 <__rom_size-0x16ecc>
    32b4:	00 00 0e 5d 	l.j 6c28 <__rom_size-0x13724>
    32b8:	39 00 00 0f 	.word 0x3900000f
    32bc:	4e 0b 5f 00 	l.maci r11,0x5f00
    32c0:	00 00 74 00 	l.j 202c0 <__rom_size+0x5f74>
    32c4:	00 0e 8d 00 	l.j 3a66c4 <__ram_length+0x3266c4>
    32c8:	42 00 00 05 	.word 0x42000005
    32cc:	84 0c 99 00 	l.lwz r0,0xffff9900(r12)
    32d0:	40 0f 5c 00 	.word 0x400f5c00
    32d4:	40 18 ec 00 	.word 0x4018ec00
    32d8:	00 0e af 00 	l.j 3aeed8 <__ram_length+0x32eed8>
    32dc:	00 33 bf 3b 	l.j cf2fc8 <__stack+0x872fcc>
    32e0:	00 00 17 e9 	l.j 9284 <__rom_size-0x110c8>
    32e4:	0c 9b 00 00 	l.bnf 26c32e4 <__stack+0x22432e8>
    32e8:	03 74 03 91 	l.j fdd0412c <__stack+0xfd884130>
    32ec:	a0 79 2f 78 	l.addic r3,r25,0x2f78
    32f0:	00 0c 9c 00 	l.j 32a2f0 <__ram_length+0x2aa2f0>
    32f4:	00 00 41 00 	l.j 136f4 <__rom_size-0x6c58>
    32f8:	00 0e d0 2f 	l.j 3b73b4 <__ram_length+0x3373b4>
    32fc:	79 00 0c 9c 	l.cust3 
    3300:	00 00 00 41 	l.j 3404 <__rom_size-0x16f48>
    3304:	00 00 0e e4 	l.j 6e94 <__rom_size-0x134b8>
    3308:	2f 69 00 0c 	.word 0x2f69000c
    330c:	9d 00 00 00 	l.addi r8,r0,0x0
    3310:	41 00 00 0f 	.word 0x4100000f
    3314:	04 2f 61 64 	l.jal bdb8a4 <__stack+0x75b8a8>
    3318:	72 00 0c 9e 	l.cust1 
    331c:	00 00 00 41 	l.j 3420 <__rom_size-0x16f2c>
    3320:	00 00 0f 70 	l.j 70e0 <__rom_size-0x1326c>
    3324:	43 00 00 00 	.word 0x43000000
    3328:	30 00 00 33 	.word 0x30000033
    332c:	3d 39 00 00 	.word 0x3d390000
    3330:	1a b9 0c a2 	.word 0x1ab90ca2
    3334:	00 00 00 41 	l.j 3438 <__rom_size-0x16f14>
    3338:	00 00 0f bd 	l.j 722c <__rom_size-0x13120>
    333c:	00 44 00 40 	l.j 110343c <__stack+0xc83440>
    3340:	11 0c 00 40 	l.bf 4303440 <__stack+0x3e83444>
    3344:	11 5c 00 00 	l.bf 5703344 <__stack+0x5283348>
    3348:	33 5a 39 00 	.word 0x335a3900
    334c:	00 1a b9 0c 	l.j 6b177c <__stack+0x231780>
    3350:	a9 00 00 00 	l.ori r8,r0,0x0
    3354:	41 00 00 0f 	.word 0x4100000f
    3358:	fb 00 43 00 	l.cust7 
    335c:	00 00 50 00 	l.j 1735c <__rom_size-0x2ff0>
    3360:	00 33 73 39 	l.j ce0044 <__stack+0x860048>
    3364:	00 00 1a b9 	l.j 9e48 <__rom_size-0x10504>
    3368:	0c b4 00 00 	l.bnf 2d03368 <__stack+0x288336c>
    336c:	00 41 00 00 	l.j 104336c <__stack+0xbc3370>
    3370:	10 24 00 43 	l.bf 90347c <__stack+0x483480>
    3374:	00 00 00 78 	l.j 3554 <__rom_size-0x16df8>
    3378:	00 00 33 8c 	l.j 101a8 <__rom_size-0xa1a4>
    337c:	39 00 00 1a 	.word 0x3900001a
    3380:	b9 0c b8 00 	l.slli r8,r12,0x0
    3384:	00 00 41 00 	l.j 13784 <__rom_size-0x6bc8>
    3388:	00 10 79 00 	l.j 421788 <__bss_end+0xac8>
    338c:	44 00 40 15 	l.jr r8
    3390:	80 00 40 15 	l.ld r0,0x4015(r0)
    3394:	c8 00 00 33 	.word 0xc8000033
    3398:	a9 39 00 00 	l.ori r9,r25,0x0
    339c:	1a b9 0c bf 	.word 0x1ab90cbf
    33a0:	00 00 00 41 	l.j 34a4 <__rom_size-0x16ea8>
    33a4:	00 00 10 b7 	l.j 7680 <__rom_size-0x12ccc>
    33a8:	00 3f 00 00 	l.j fc33a8 <__stack+0xb433ac>
    33ac:	00 98 39 00 	l.j 26117ac <__stack+0x21917b0>
    33b0:	00 1a b9 0c 	l.j 6b17e0 <__stack+0x2317e4>
    33b4:	c8 00 00 00 	lf.add.s r0,r0,r0
    33b8:	41 00 00 10 	.word 0x41000010
    33bc:	e0 00 00 42 	l.sub r0,r0,r0
    33c0:	00 00 0d d9 	l.j 6b24 <__rom_size-0x13828>
    33c4:	0c d1 00 40 	l.bnf 34434c4 <__stack+0x2fc34c8>
    33c8:	18 ec 00 40 	l.movhi r7,0x40
    33cc:	1c f4 00 00 	.word 0x1cf40000
    33d0:	11 35 00 00 	l.bf 4d433d0 <__stack+0x48c33d4>
    33d4:	34 3d 3b 00 	.word 0x343d3b00
    33d8:	00 17 e9 0c 	l.j 5fd808 <__stack+0x17d80c>
    33dc:	d3 00 00 03 	l.sd 0xffffc003(r0),r0
    33e0:	74 03 91 a4 	l.cust2 
    33e4:	79 2f 78 00 	l.cust3 
    33e8:	0c d4 00 00 	l.bnf 35033e8 <__stack+0x30833ec>
    33ec:	00 41 00 00 	l.j 10433ec <__stack+0xbc33f0>
    33f0:	11 56 2f 69 	l.bf 558f194 <__stack+0x510f198>
    33f4:	00 0c d5 00 	l.j 3387f4 <__ram_length+0x2b87f4>
    33f8:	00 00 41 00 	l.j 137f8 <__rom_size-0x6b54>
    33fc:	00 11 6a 2f 	l.j 45dcb8 <_stack+0x3bff8>
    3400:	61 64 72 00 	.word 0x61647200
    3404:	0c d6 00 00 	l.bnf 3583404 <__stack+0x3103408>
    3408:	00 41 00 00 	l.j 1043408 <__stack+0xbc340c>
    340c:	11 a7 43 00 	l.bf 69d400c <__stack+0x6554010>
    3410:	00 00 b0 00 	l.j 2f410 <__rom_size+0x150c4>
    3414:	00 34 27 39 	l.j d0d0f8 <__stack+0x88d0fc>
    3418:	00 00 1a b9 	l.j 9efc <__rom_size-0x10450>
    341c:	0c da 00 00 	l.bnf 368341c <__stack+0x3203420>
    3420:	00 41 00 00 	l.j 1043420 <__stack+0xbc3424>
    3424:	11 d7 00 3f 	l.bf 75c3520 <__stack+0x7143524>
    3428:	00 00 00 e0 	l.j 37a8 <__rom_size-0x16ba4>
    342c:	39 00 00 1a 	.word 0x3900001a
    3430:	b9 0c e0 00 	l.slli r8,r12,0x0
    3434:	00 00 41 00 	l.j 13834 <__rom_size-0x6b18>
    3438:	00 12 15 00 	l.j 488838 <__stack+0x883c>
    343c:	00 42 00 00 	l.j 108343c <__stack+0xc03440>
    3440:	08 23 0c ee 	.word 0x08230cee
    3444:	00 40 1c f4 	l.j 100a814 <__stack+0xb8a818>
    3448:	00 40 2b fc 	l.j 100e438 <__stack+0xb8e43c>
    344c:	00 00 12 5c 	l.j 7dbc <__rom_size-0x12590>
    3450:	00 00 34 d5 	l.j 107a4 <__rom_size-0x9ba8>
    3454:	3b 00 00 17 	.word 0x3b000017
    3458:	e9 0c f0 00 	.word 0xe90cf000
    345c:	00 03 74 03 	l.j e0468 <__ram_length+0x60468>
    3460:	91 a4 79 2f 	l.lbs r13,0x792f(r4)
    3464:	78 00 0c f1 	l.cust3 
    3468:	00 00 00 41 	l.j 356c <__rom_size-0x16de0>
    346c:	00 00 12 7d 	l.j 7e60 <__rom_size-0x124ec>
    3470:	2f 69 00 0c 	.word 0x2f69000c
    3474:	f2 00 00 00 	l.cust5 r16,r0,r0,0x0,0x0
    3478:	41 00 00 12 	.word 0x41000012
    347c:	91 2f 61 64 	l.lbs r9,0x6164(r15)
    3480:	72 00 0c f3 	l.cust1 
    3484:	00 00 00 41 	l.j 3588 <__rom_size-0x16dc4>
    3488:	00 00 12 da 	l.j 7ff0 <__rom_size-0x1235c>
    348c:	43 00 00 01 	.word 0x43000001
    3490:	00 00 00 34 	l.j 3560 <__rom_size-0x16dec>
    3494:	a5 39 00 00 	l.andi r9,r25,0x0
    3498:	1a b9 0c f7 	.word 0x1ab90cf7
    349c:	00 00 00 41 	l.j 35a0 <__rom_size-0x16dac>
    34a0:	00 00 13 0a 	l.j 80c8 <__rom_size-0x12284>
    34a4:	00 43 00 00 	l.j 10c34a4 <__stack+0xc434a8>
    34a8:	01 30 00 00 	l.j 4c034a8 <__stack+0x47834ac>
    34ac:	34 be 39 00 	.word 0x34be3900
    34b0:	00 1a b9 0c 	l.j 6b18e0 <__stack+0x2318e4>
    34b4:	fd 00 00 00 	l.cust8 
    34b8:	41 00 00 13 	.word 0x41000013
    34bc:	48 00 3f 00 	l.jalr r7
    34c0:	00 01 50 45 	l.j 575d4 <__rom_size+0x3d288>
    34c4:	00 00 1a b9 	l.j 9fa8 <__rom_size-0x103a4>
    34c8:	0c 01 07 00 	l.bnf 450c8 <__rom_size+0x2ad7c>
    34cc:	00 00 41 00 	l.j 138cc <__rom_size-0x6a80>
    34d0:	00 13 71 00 	l.j 4df8d0 <__stack+0x5f8d4>
    34d4:	00 31 00 00 	l.j c434d4 <__stack+0x7c34d8>
    34d8:	0c 48 0d 5e 	l.bnf 1206a50 <__stack+0xd86a54>
    34dc:	01 00 00 00 	l.j 40034dc <__stack+0x3b834e0>
    34e0:	74 00 40 2b 	l.cust2 
    34e4:	fc 00 40 2c 	l.cust8 
    34e8:	38 00 00 13 	.word 0x38000013
    34ec:	af 00 00 35 	l.xori r24,r0,0x35
    34f0:	08 2e 6c 00 	.word 0x082e6c00
    34f4:	0d 5e 00 00 	l.bnf 57834f4 <__stack+0x53034f8>
    34f8:	00 74 00 00 	l.j 1d034f8 <__stack+0x18834fc>
    34fc:	13 cf 18 63 	l.bf ff3c9688 <__stack+0xfef4968c>
    3500:	00 0d 62 00 	l.j 35bd00 <__ram_length+0x2dbd00>
    3504:	00 00 64 00 	l.j 1c504 <__rom_size+0x21b8>
    3508:	46 00 00 1c 	l.jr r0
    350c:	08 0d 6d 01 	.word 0x080d6d01
    3510:	00 40 2c 38 	l.j 100e5f0 <__stack+0xb8e5f4>
    3514:	00 40 2c 8c 	l.j 100e744 <__stack+0xb8e748>
    3518:	00 00 13 e2 	l.j 84a0 <__rom_size-0x11eac>
    351c:	00 00 35 2e 	l.j 109d4 <__rom_size-0x9978>
    3520:	2e 69 00 0d 	.word 0x2e69000d
    3524:	6d 00 00 00 	.word 0x6d000000
    3528:	41 00 00 14 	.word 0x41000014
    352c:	02 00 47 00 	l.j f801512c <__stack+0xf7b95130>
    3530:	00 00 76 0d 	l.j 20d64 <__rom_size+0x6a18>
    3534:	02 03 01 00 	l.j f80c3934 <__stack+0xf7c43938>
    3538:	00 00 2c 00 	l.j e538 <__rom_size-0xbe14>
    353c:	40 2c 8c 00 	.word 0x402c8c00
    3540:	40 2c cc 02 	.word 0x402ccc02
    3544:	71 00 00 00 	l.cust1 
    3548:	35 79 48 00 	.word 0x35794800
    354c:	00 16 c4 0d 	l.j 5b4580 <__stack+0x134584>
    3550:	02 03 00 00 	l.j f80c3550 <__stack+0xf7c43554>
    3554:	00 7d 00 00 	l.j 1f43554 <__stack+0x1ac3558>
    3558:	14 15 41 69 	.word 0x14154169
    355c:	00 0d 02 07 	l.j 343d78 <__ram_length+0x2c3d78>
    3560:	00 00 00 2c 	l.j 3610 <__rom_size-0x16d3c>
    3564:	00 00 14 40 	l.j 8664 <__rom_size-0x11ce8>
    3568:	45 00 00 1a 	l.jr r0
    356c:	b0 0d 02 08 	l.muli r0,r13,0x208
    3570:	00 00 00 2c 	l.j 3620 <__rom_size-0x16d2c>
    3574:	00 00 14 75 	l.j 8748 <__rom_size-0x11c04>
    3578:	00 37 00 00 	l.j dc3578 <__stack+0x94357c>
    357c:	04 6c 0d 02 	l.jal 1b06984 <__stack+0x1686988>
    3580:	28 01 00 00 	.word 0x28010000
    3584:	00 41 00 40 	l.j 1043684 <__stack+0xbc3688>
    3588:	2c cc 00 40 	.word 0x2ccc0040
    358c:	2e 20 00 00 	.word 0x2e200000
    3590:	14 9f 00 00 	.word 0x149f0000
    3594:	36 63 48 00 	.word 0x36634800
    3598:	00 12 fc 0d 	l.j 4c25cc <__stack+0x425d0>
    359c:	02 28 00 00 	l.j f8a0359c <__stack+0xf85835a0>
    35a0:	36 63 00 00 	.word 0x36630000
    35a4:	14 bf 48 00 	.word 0x14bf4800
    35a8:	00 09 18 0d 	l.j 2495dc <__ram_length+0x1c95dc>
    35ac:	02 28 00 00 	l.j f8a035ac <__stack+0xf85835b0>
    35b0:	00 83 00 00 	l.j 20c35b0 <__stack+0x1c435b4>
    35b4:	14 d2 48 00 	.word 0x14d24800
    35b8:	00 13 07 0d 	l.j 4c51ec <__stack+0x451f0>
    35bc:	02 28 00 00 	l.j f8a035bc <__stack+0xf85835c0>
    35c0:	36 63 00 00 	.word 0x36630000
    35c4:	14 e5 48 00 	.word 0x14e54800
    35c8:	00 09 1e 0d 	l.j 24adfc <__ram_length+0x1cadfc>
    35cc:	02 28 00 00 	l.j f8a035cc <__stack+0xf85835d0>
    35d0:	00 83 00 00 	l.j 20c35d0 <__stack+0x1c435d4>
    35d4:	14 f8 45 00 	.word 0x14f84500
    35d8:	00 01 f6 0d 	l.j 80e0c <__ram_length+0xe0c>
    35dc:	02 2c 00 00 	l.j f8b035dc <__stack+0xf86835e0>
    35e0:	00 90 00 00 	l.j 24035e0 <__stack+0x1f835e4>
    35e4:	15 0b 45 00 	l.nop 0x4500
    35e8:	00 13 95 0d 	l.j 4e8a1c <__stack+0x68a20>
    35ec:	02 2c 00 00 	l.j f8b035ec <__stack+0xf86835f0>
    35f0:	00 90 00 00 	l.j 24035f0 <__stack+0x1f835f4>
    35f4:	15 29 41 6c 	l.nop 0x416c
    35f8:	65 6e 00 0d 	.word 0x656e000d
    35fc:	02 2d 00 00 	l.j f8b435fc <__stack+0xf86c3600>
    3600:	00 41 00 00 	l.j 1043600 <__stack+0xbc3604>
    3604:	15 47 1b 72 	l.nop 0x1b72
    3608:	63 00 0d 02 	.word 0x63000d02
    360c:	2e 00 00 00 	.word 0x2e000000
    3610:	41 49 00 00 	.word 0x41490000
    3614:	24 e6 00 40 	l.rfe 
    3618:	2d 6c 00 40 	.word 0x2d6c0040
    361c:	2d c4 0d 02 	.word 0x2dc40d02
    3620:	47 3e 00 00 	l.jr r0
    3624:	25 0e 00 00 	l.rfe 
    3628:	15 99 3e 00 	l.nop 0x3e00
    362c:	00 25 03 00 	l.j 94422c <__stack+0x4c4230>
    3630:	00 15 ac 3e 	l.j 56e728 <__stack+0xee72c>
    3634:	00 00 24 f8 	l.j ca14 <__rom_size-0xd938>
    3638:	00 00 15 bf 	l.j 8d34 <__rom_size-0x11618>
    363c:	34 00 40 2d 	.word 0x3400402d
    3640:	6c 00 40 2d 	.word 0x6c00402d
    3644:	c4 35 00 00 	.word 0xc4350000
    3648:	25 18 00 00 	l.rfe 
    364c:	15 d2 35 00 	l.nop 0x3500
    3650:	00 25 23 00 	l.j 94c250 <__stack+0x4cc254>
    3654:	00 15 e5 35 	l.j 57cb28 <__stack+0xfcb2c>
    3658:	00 00 25 2e 	l.j cb10 <__rom_size-0xd83c>
    365c:	00 00 15 fc 	l.j 8e4c <__rom_size-0x11500>
    3660:	00 00 00 07 	l.j 367c <__rom_size-0x16cd0>
    3664:	04 00 00 0b 	l.jal 3690 <__rom_size-0x16cbc>
    3668:	64 4a 00 00 	.word 0x644a0000
    366c:	08 98 0d 04 	.word 0x08980d04
    3670:	8a 01 00 40 	l.lws r16,0x40(r1)
    3674:	2e 20 00 40 	.word 0x2e200040
    3678:	2e 40 02 71 	.word 0x2e400271
    367c:	00 00 00 36 	l.j 3754 <__rom_size-0x16bf8>
    3680:	90 4b 00 00 	l.lbs r2,0x0(r11)
    3684:	05 e4 0d 04 	l.jal 7906a94 <__stack+0x7486a98>
    3688:	8a 00 00 00 	l.lws r16,0x0(r0)
    368c:	74 01 53 00 	l.cust2 
    3690:	37 00 00 18 	.word 0x37000018
    3694:	26 0e 02 8c 	l.rfe 
    3698:	01 00 00 00 	l.j 4003698 <__stack+0x3b8369c>
    369c:	2c 00 40 2e 	.word 0x2c00402e
    36a0:	40 00 40 2e 	.word 0x4000402e
    36a4:	a8 00 00 16 	l.ori r0,r0,0x16
    36a8:	0f 00 00 36 	l.bnf fc003780 <__stack+0xfbb83784>
    36ac:	be 45 00 00 	.word 0xbe450000
    36b0:	1c 2a 0e 02 	.word 0x1c2a0e02
    36b4:	90 00 00 00 	l.lbs r0,0x0(r0)
    36b8:	2c 00 00 16 	.word 0x2c000016
    36bc:	2f 00 4c 00 	.word 0x2f004c00
    36c0:	00 0c fa 0f 	l.j 341efc <__ram_length+0x2c1efc>
    36c4:	01 0e 01 00 	l.j 4383ac4 <__stack+0x3f03ac8>
    36c8:	40 2e a8 00 	.word 0x402ea800
    36cc:	40 2f 80 00 	.word 0x402f8000
    36d0:	00 16 42 00 	l.j 593ed0 <__stack+0x113ed4>
    36d4:	00 37 2e 48 	l.j dceff4 <__stack+0x94eff8>
    36d8:	00 00 0f 29 	l.j 737c <__rom_size-0x12fd0>
    36dc:	0f 01 0e 00 	l.bnf fc046edc <__stack+0xfbbc6ee0>
    36e0:	00 00 2c 00 	l.j e6e0 <__rom_size-0xbc6c>
    36e4:	00 16 62 4b 	l.j 59c010 <__stack+0x11c014>
    36e8:	00 00 1b 0d 	l.j a31c <__rom_size-0x10030>
    36ec:	0f 01 0e 00 	l.bnf fc046eec <__stack+0xfbbc6ef0>
    36f0:	00 00 2c 01 	l.j e6f4 <__rom_size-0xbc58>
    36f4:	54 4b 00 00 	.word 0x544b0000
    36f8:	0e 91 0f 01 	l.bnf fa4472fc <__stack+0xf9fc7300>
    36fc:	0e 00 00 00 	l.bnf f80036fc <__stack+0xf7b83700>
    3700:	2c 01 55 4b 	.word 0x2c01554b
    3704:	00 00 0b f0 	l.j 66c4 <__rom_size-0x13c88>
    3708:	0f 01 0e 00 	l.bnf fc046f08 <__stack+0xfbbc6f0c>
    370c:	00 00 2c 01 	l.j e710 <__rom_size-0xbc3c>
    3710:	56 4b 00 00 	.word 0x564b0000
    3714:	09 c9 0f 01 	.word 0x09c90f01
    3718:	0e 00 00 00 	l.bnf f8003718 <__stack+0xf7b8371c>
    371c:	2c 01 57 4b 	.word 0x2c01574b
    3720:	00 00 0a 82 	l.j 6128 <__rom_size-0x14224>
    3724:	0f 01 0e 00 	l.bnf fc046f24 <__stack+0xfbbc6f28>
    3728:	00 00 2c 01 	l.j e72c <__rom_size-0xbc20>
    372c:	58 00 4c 00 	.word 0x58004c00
    3730:	00 02 8e 0f 	l.j a6f6c <__ram_length+0x26f6c>
    3734:	01 33 01 00 	l.j 4cc3b34 <__stack+0x4843b38>
    3738:	40 2f 80 00 	.word 0x402f8000
    373c:	40 2f e8 00 	.word 0x402fe800
    3740:	00 16 75 00 	l.j 5a0b40 <__stack+0x120b44>
    3744:	00 37 58 48 	l.j dd9864 <__stack+0x959868>
    3748:	00 00 1c 2a 	l.j a7f0 <__rom_size-0xfb5c>
    374c:	0f 01 33 00 	l.bnf fc05034c <__stack+0xfbbd0350>
    3750:	00 00 2c 00 	l.j e750 <__rom_size-0xbbfc>
    3754:	00 16 95 00 	l.j 5a8b54 <__stack+0x128b58>
    3758:	4c 00 00 0e 	l.maci r0,0xe
    375c:	d4 0f 03 8a 	l.sw 0x38a(r15),r0
    3760:	01 00 40 2f 	l.j 401381c <__stack+0x3b93820>
    3764:	e8 00 40 30 	.word 0xe8004030
    3768:	98 00 00 16 	l.lhs r0,0x16(r0)
    376c:	a8 00 00 37 	l.ori r0,r0,0x37
    3770:	be 48 00 00 	.word 0xbe480000
    3774:	15 0f 0f 03 	l.nop 0xf03
    3778:	8a 00 00 37 	l.lws r16,0x37(r0)
    377c:	be 00 00 16 	.word 0xbe000016
    3780:	c8 45 00 00 	lf.add.s r2,r5,r0
    3784:	17 e9 0f 03 	.word 0x17e90f03
    3788:	90 00 00 37 	l.lbs r0,0x37(r0)
    378c:	c4 00 00 16 	.word 0xc4000016
    3790:	f3 45 00 00 	l.cust5 r26,r5,r0,0x0,0x0
    3794:	0b c0 0f 03 	.word 0x0bc00f03
    3798:	91 00 00 37 	l.lbs r8,0x37(r0)
    379c:	ca 00 00 17 	lf.madd.d r16,r0,r0
    37a0:	06 41 69 00 	l.jal f905dba0 <__stack+0xf8bddba4>
    37a4:	0f 03 92 00 	l.bnf fc0e7fa4 <__stack+0xfbc67fa8>
    37a8:	00 00 74 00 	l.j 207a8 <__rom_size+0x645c>
    37ac:	00 17 24 41 	l.j 5cc8b0 <__stack+0x14c8b4>
    37b0:	6a 00 0f 03 	.word 0x6a000f03
    37b4:	93 00 00 00 	l.lbs r24,0x0(r0)
    37b8:	74 00 00 17 	l.cust2 
    37bc:	4d 00 07 04 	l.maci r0,0x704
    37c0:	00 00 11 a5 	l.j 7e54 <__rom_size-0x124f8>
    37c4:	07 04 00 00 	l.jal fc1037c4 <__stack+0xfbc837c8>
    37c8:	10 b5 07 04 	l.bf 2d453d8 <__stack+0x28c53dc>
    37cc:	00 00 00 74 	l.j 399c <__rom_size-0x169b0>
    37d0:	37 00 00 15 	.word 0x37000015
    37d4:	60 0f 03 a8 	.word 0x600f03a8
    37d8:	01 00 00 00 	l.j 40037d8 <__stack+0x3b837dc>
    37dc:	2c 00 40 30 	.word 0x2c004030
    37e0:	98 00 40 31 	l.lhs r0,0x4031(r0)
    37e4:	3c 00 00 17 	.word 0x3c000017
    37e8:	86 00 00 38 	l.lwz r16,0x38(r0)
    37ec:	0c 48 00 00 	l.bnf 12037ec <__stack+0xd837f0>
    37f0:	15 0f 0f 03 	l.nop 0xf03
    37f4:	a8 00 00 37 	l.ori r0,r0,0x37
    37f8:	be 00 00 17 	.word 0xbe000017
    37fc:	a6 4d 6c 62 	l.andi r18,r13,0x6c62
    3800:	61 00 0f 03 	.word 0x61000f03
    3804:	a8 00 00 00 	l.ori r0,r0,0x0
    3808:	74 01 54 00 	l.cust2 
    380c:	4c 00 00 13 	l.maci r0,0x13
    3810:	28 10 0a 00 	.word 0x28100a00
    3814:	01 00 40 31 	l.j 40138d8 <__stack+0x3b938dc>
    3818:	3c 00 40 31 	.word 0x3c004031
    381c:	a8 00 00 17 	l.ori r0,r0,0x17
    3820:	c6 00 00 38 	.word 0xc6000038
    3824:	36 48 00 00 	.word 0x36480000
    3828:	1a d4 10 0a 	l.movhi r22,0x100a
    382c:	00 00 00 00 	l.j 382c <__rom_size-0x16b20>
    3830:	83 00 00 17 	l.ld r24,0x17(r0)
    3834:	e6 00 46 00 	.word 0xe6004600
    3838:	00 15 14 0f 	l.j 548874 <__stack+0xc8878>
    383c:	3e 01 00 40 	.word 0x3e010040
    3840:	31 a8 00 40 	.word 0x31a80040
    3844:	32 20 00 00 	.word 0x32200000
    3848:	18 04 00 00 	l.movhi r0,0x0
    384c:	38 88 2e 70 	.word 0x38882e70
    3850:	00 0f 3e 00 	l.j 3d3050 <__ram_length+0x353050>
    3854:	00 37 ca 00 	l.j df6054 <__stack+0x976058>
    3858:	00 18 24 39 	l.j 60c93c <__stack+0x18c940>
    385c:	00 00 0d 5f 	l.j 6dd8 <__rom_size-0x13574>
    3860:	0f 42 00 00 	l.bnf fd083860 <__stack+0xfcc03864>
    3864:	00 74 00 00 	l.j 1d03864 <__stack+0x1883868>
    3868:	18 4f 2f 63 	.word 0x184f2f63
    386c:	32 00 0f 43 	.word 0x32000f43
    3870:	00 00 00 74 	l.j 3a40 <__rom_size-0x1690c>
    3874:	00 00 18 7a 	l.j 9a5c <__rom_size-0x108f0>
    3878:	39 00 00 03 	.word 0x39000003
    387c:	c0 0f 44 00 	l.mtspr r15,r8,0x400
    3880:	00 00 5d 00 	l.j 1ac80 <__rom_size+0x934>
    3884:	00 18 bc 00 	l.j 632884 <__stack+0x1b2888>
    3888:	4a 00 00 06 	l.jalr r0
    388c:	e5 11 02 3f 	.word 0xe511023f
    3890:	01 00 40 32 	l.j 4013958 <__stack+0x3b9395c>
    3894:	20 00 40 32 	l.sys 0x4032
    3898:	88 02 71 00 	l.lws r0,0x7100(r2)
    389c:	00 00 38 bd 	l.j 11b90 <__rom_size-0x87bc>
    38a0:	4e 63 00 11 	l.maci r3,0x11
    38a4:	02 3f 00 00 	l.j f8fc38a4 <__stack+0xf8b438a8>
    38a8:	00 2c 00 00 	l.j b038a8 <__stack+0x6838ac>
    38ac:	18 ff 41 69 	.word 0x18ff4169
    38b0:	00 11 02 42 	l.j 4441b8 <_stack+0x224f8>
    38b4:	00 00 00 2c 	l.j 3964 <__rom_size-0x169e8>
    38b8:	00 00 19 30 	l.j 9d78 <__rom_size-0x105d4>
    38bc:	00 37 00 00 	l.j dc38bc <__stack+0x9438c0>
    38c0:	17 30 11 01 	.word 0x17301101
    38c4:	f1 01 00 00 	l.cust5 r8,r1,r0,0x0,0x0
    38c8:	00 2c 00 40 	l.j b039c8 <__stack+0x6839cc>
    38cc:	32 88 00 40 	.word 0x32880040
    38d0:	33 b4 00 00 	.word 0x33b40000
    38d4:	19 4f 00 00 	l.macrc r10
    38d8:	39 19 4e 63 	.word 0x39194e63
    38dc:	6d 64 00 11 	.word 0x6d640011
    38e0:	01 f1 00 00 	l.j 7c438e0 <__stack+0x77c38e4>
    38e4:	00 2c 00 00 	l.j b038e4 <__stack+0x6838e8>
    38e8:	19 6f 4e 61 	.word 0x196f4e61
    38ec:	72 67 00 11 	l.cust1 
    38f0:	01 f1 00 00 	l.j 7c438f0 <__stack+0x77c38f4>
    38f4:	00 74 00 00 	l.j 1d038f4 <__stack+0x18838f8>
    38f8:	19 82 41 63 	l.movhi r12,0x4163
    38fc:	00 11 01 f5 	l.j 4440d0 <_stack+0x22410>
    3900:	00 00 00 2c 	l.j 39b0 <__rom_size-0x1699c>
    3904:	00 00 19 a0 	l.j 9f84 <__rom_size-0x103c8>
    3908:	41 4e 63 72 	.word 0x414e6372
    390c:	00 11 02 11 	l.j 444150 <_stack+0x22490>
    3910:	00 00 00 2c 	l.j 39c0 <__rom_size-0x1698c>
    3914:	00 00 19 d4 	l.j a064 <__rom_size-0x102e8>
    3918:	00 4f 00 00 	l.j 13c3918 <__stack+0xf4391c>
    391c:	00 6c 12 60 	l.j 1b0829c <__stack+0x16882a0>
    3920:	00 00 00 41 	l.j 3a24 <__rom_size-0x16928>
    3924:	00 40 33 b4 	l.j 10107f4 <__stack+0xb907f8>
    3928:	00 40 33 f0 	l.j 10108e8 <__stack+0xb908ec>
    392c:	02 71 00 00 	l.j f9c4392c <__stack+0xf97c3930>
    3930:	00 39 52 3b 	l.j e5821c <__stack+0x9d8220>
    3934:	00 00 11 0d 	l.j 7d68 <__rom_size-0x125e4>
    3938:	12 64 00 00 	l.bf f9903938 <__stack+0xf948393c>
    393c:	00 41 05 03 	l.j 1044d48 <__stack+0xbc4d4c>
    3940:	00 42 0a 60 	l.j 10862c0 <__stack+0xc062c4>
    3944:	2f 72 00 12 	.word 0x2f720012
    3948:	65 00 00 00 	.word 0x65000000
    394c:	41 00 00 1a 	.word 0x4100001a
    3950:	0e 00 46 00 	l.bnf f8015150 <__stack+0xf7b95154>
    3954:	00 07 0d 12 	l.j 1c6d9c <__ram_length+0x146d9c>
    3958:	bb 01 00 40 	l.srli r24,r1,0x0
    395c:	33 f0 00 40 	.word 0x33f00040
    3960:	35 fc 00 00 	.word 0x35fc0000
    3964:	1a 46 00 00 	l.movhi r18,0x0
    3968:	3a 69 2e 73 	.word 0x3a692e73
    396c:	00 12 bb 00 	l.j 4b256c <__stack+0x32570>
    3970:	00 00 83 00 	l.j 24570 <__rom_size+0xa224>
    3974:	00 1a 66 2e 	l.j 69d22c <__stack+0x21d230>
    3978:	61 00 12 bb 	.word 0x610012bb
    397c:	00 00 00 41 	l.j 3a80 <__rom_size-0x168cc>
    3980:	00 00 1a 79 	l.j a364 <__rom_size-0xffe8>
    3984:	39 00 00 13 	.word 0x39000013
    3988:	9b 12 c1 00 	l.lhs r24,0xffffc100(r18)
    398c:	00 00 89 00 	l.j 25d8c <__rom_size+0xba40>
    3990:	00 1a 9b 2f 	l.j 6aa64c <__stack+0x22a650>
    3994:	69 00 12 c2 	.word 0x690012c2
    3998:	00 00 00 41 	l.j 3a9c <__rom_size-0x168b0>
    399c:	00 00 1a dc 	l.j a50c <__rom_size-0xfe40>
    39a0:	2f 6a 00 12 	.word 0x2f6a0012
    39a4:	c3 00 00 00 	l.mtspr r0,r0,0xc000
    39a8:	89 00 00 1b 	l.lws r8,0x1b(r0)
    39ac:	57 39 00 00 	.word 0x57390000
    39b0:	10 c5 12 c4 	l.bf 31484c0 <__stack+0x2cc84c4>
    39b4:	00 00 00 41 	l.j 3ab8 <__rom_size-0x16894>
    39b8:	00 00 1b 77 	l.j a794 <__rom_size-0xfbb8>
    39bc:	2f 63 00 12 	.word 0x2f630012
    39c0:	e5 00 00 00 	.word 0xe5000000
    39c4:	41 00 00 1b 	.word 0x4100001b
    39c8:	c4 44 00 40 	.word 0xc4440040
    39cc:	34 14 00 40 	.word 0x34140040
    39d0:	34 cc 00 00 	.word 0x34cc0000
    39d4:	3a 13 2f 63 	.word 0x3a132f63
    39d8:	00 12 c7 00 	l.j 4b55d8 <__stack+0x355dc>
    39dc:	00 00 41 00 	l.j 13ddc <__rom_size-0x6570>
    39e0:	00 1b d7 34 	l.j 6f96b0 <__stack+0x2796b4>
    39e4:	00 40 34 50 	l.j 1010b24 <__stack+0xb90b28>
    39e8:	00 40 34 cc 	l.j 1010d18 <__stack+0xb90d1c>
    39ec:	2f 70 00 12 	.word 0x2f700012
    39f0:	ca 00 00 00 	lf.add.s r16,r0,r0
    39f4:	7d 00 00 1b 	l.cust4 
    39f8:	f5 34 00 40 	l.cust6 
    39fc:	34 60 00 40 	.word 0x34600040
    3a00:	34 b8 2f 6e 	.word 0x34b82f6e
    3a04:	63 00 12 cd 	.word 0x630012cd
    3a08:	00 00 00 2c 	l.j 3ab8 <__rom_size-0x16894>
    3a0c:	00 00 1c 08 	l.j aa2c <__rom_size-0xf920>
    3a10:	00 00 00 3f 	l.j 3b0c <__rom_size-0x16840>
    3a14:	00 00 01 68 	l.j 3fb4 <__rom_size-0x16398>
    3a18:	30 74 6d 70 	.word 0x30746d70
    3a1c:	00 12 f0 00 	l.j 4bfa1c <__stack+0x3fa20>
    3a20:	00 02 dd 02 	l.j bae28 <__ram_length+0x3ae28>
    3a24:	91 74 50 00 	l.lbs r11,0x5000(r20)
    3a28:	00 25 78 00 	l.j 961a28 <__stack+0x4e1a2c>
    3a2c:	40 35 58 00 	.word 0x40355800
    3a30:	00 01 80 12 	l.j 63a78 <__rom_size+0x4972c>
    3a34:	f1 3e 00 00 	l.cust5 r9,r30,r0,0x0,0x0
    3a38:	25 8f 00 00 	l.rfe 
    3a3c:	1c 1b 51 00 	.word 0x1c1b5100
    3a40:	00 25 85 01 	l.j 964e44 <__stack+0x4e4e48>
    3a44:	5b 3f 00 00 	.word 0x5b3f0000
    3a48:	01 a0 35 00 	l.j 6810e48 <__stack+0x6390e4c>
    3a4c:	00 25 9a 00 	l.j 96a24c <__stack+0x4ea250>
    3a50:	00 1c 39 35 	l.j 711f24 <__stack+0x291f28>
    3a54:	00 00 25 a3 	l.j d0e0 <__rom_size-0xd26c>
    3a58:	00 00 1c 6e 	l.j ac10 <__rom_size-0xf73c>
    3a5c:	35 00 00 25 	.word 0x35000025
    3a60:	ac 00 00 1c 	l.xori r0,r0,0x1c
    3a64:	98 00 00 00 	l.lhs r0,0x0(r0)
    3a68:	00 4c 00 00 	l.j 1303a68 <__stack+0xe83a6c>
    3a6c:	18 62 12 01 	l.movhi r3,0x1201
    3a70:	07 01 00 40 	l.jal fc043b70 <__stack+0xfbbc3b74>
    3a74:	35 fc 00 40 	.word 0x35fc0040
    3a78:	3d f0 00 00 	.word 0x3df00000
    3a7c:	1c b7 00 00 	.word 0x1cb70000
    3a80:	3b 29 4e 6e 	.word 0x3b294e6e
    3a84:	00 12 01 07 	l.j 483ea0 <__stack+0x3ea4>
    3a88:	00 00 00 2c 	l.j 3b38 <__rom_size-0x16814>
    3a8c:	00 00 1c d7 	l.j ade8 <__rom_size-0xf564>
    3a90:	4e 73 00 12 	l.maci r19,0x12
    3a94:	01 07 00 00 	l.j 41c3a94 <__stack+0x3d43a98>
    3a98:	00 83 00 00 	l.j 20c3a98 <__stack+0x1c43a9c>
    3a9c:	1d 0b 48 00 	.word 0x1d0b4800
    3aa0:	00 0d a4 12 	l.j 36cae8 <__ram_length+0x2ecae8>
    3aa4:	01 07 00 00 	l.j 41c3aa4 <__stack+0x3d43aa8>
    3aa8:	00 2c 00 00 	l.j b03aa8 <__stack+0x683aac>
    3aac:	1d 66 48 00 	.word 0x1d664800
    3ab0:	00 12 5c 12 	l.j 49aaf8 <__stack+0x1aafc>
    3ab4:	01 07 00 00 	l.j 41c3ab4 <__stack+0x3d43ab8>
    3ab8:	00 2c 00 00 	l.j b03ab8 <__stack+0x683abc>
    3abc:	1d 84 48 00 	.word 0x1d844800
    3ac0:	00 05 bc 12 	l.j 172b08 <__ram_length+0xf2b08>
    3ac4:	01 07 00 00 	l.j 41c3ac4 <__stack+0x3d43ac8>
    3ac8:	00 89 00 00 	l.j 2243ac8 <__stack+0x1dc3acc>
    3acc:	1d a2 41 69 	.word 0x1da24169
    3ad0:	00 12 01 0b 	l.j 483efc <__stack+0x3f00>
    3ad4:	00 00 00 3a 	l.j 3bbc <__rom_size-0x16790>
    3ad8:	00 00 1d b5 	l.j b1ac <__rom_size-0xf1a0>
    3adc:	41 62 00 12 	.word 0x41620012
    3ae0:	01 0c 00 00 	l.j 4303ae0 <__stack+0x3e83ae4>
    3ae4:	00 2c 00 00 	l.j b03ae4 <__stack+0x683ae8>
    3ae8:	1e 0c 41 70 	.word 0x1e0c4170
    3aec:	00 12 01 0d 	l.j 483f20 <__stack+0x3f24>
    3af0:	00 00 29 7c 	l.j e0e0 <__rom_size-0xc26c>
    3af4:	00 00 1e 2a 	l.j b39c <__rom_size-0xefb0>
    3af8:	45 00 00 1a 	l.jr r0
    3afc:	51 12 01 0e 	.word 0x5112010e
    3b00:	00 00 00 2c 	l.j 3bb0 <__rom_size-0x1679c>
    3b04:	00 00 1f 54 	l.j b854 <__rom_size-0xeaf8>
    3b08:	45 00 00 09 	l.jr r0
    3b0c:	d7 12 01 0f 	l.sw 0xffffc10f(r18),r0
    3b10:	00 00 00 41 	l.j 3c14 <__rom_size-0x16738>
    3b14:	00 00 1f d7 	l.j ba70 <__rom_size-0xe8dc>
    3b18:	45 00 00 0e 	l.jr r0
    3b1c:	3a 12 01 10 	.word 0x3a120110
    3b20:	00 00 00 41 	l.j 3c24 <__rom_size-0x16728>
    3b24:	00 00 1f f8 	l.j bb04 <__rom_size-0xe848>
    3b28:	00 46 00 00 	l.j 1183b28 <__stack+0xd03b2c>
    3b2c:	08 a8 12 fc 	.word 0x08a812fc
    3b30:	01 00 40 3d 	l.j 4013c24 <__stack+0x3b93c28>
    3b34:	f0 00 40 3e 	l.cust5 r0,r0,r8,0x1,0x1e
    3b38:	08 00 00 20 	.word 0x08000020
    3b3c:	25 00 00 3b 	l.rfe 
    3b40:	72 2d 6e 00 	l.cust1 
    3b44:	12 fc 00 00 	l.bf fbf03b44 <__stack+0xfba83b48>
    3b48:	00 2c 01 53 	l.j b04094 <__stack+0x684098>
    3b4c:	2d 73 00 12 	.word 0x2d730012
    3b50:	fc 00 00 00 	l.cust8 
    3b54:	83 01 54 52 	l.ld r24,0x5452(r1)
    3b58:	00 00 0d a4 	l.j 71e8 <__rom_size-0x13164>
    3b5c:	12 fc 00 00 	l.bf fbf03b5c <__stack+0xfba83b60>
    3b60:	00 2c 01 55 	l.j b040b4 <__stack+0x6840b8>
    3b64:	52 00 00 12 	.word 0x52000012
    3b68:	5c 12 fc 00 	.word 0x5c12fc00
    3b6c:	00 00 2c 01 	l.j eb70 <__rom_size-0xb7dc>
    3b70:	56 00 4a 00 	.word 0x56004a00
    3b74:	00 0a e9 12 	l.j 2bdfbc <__ram_length+0x23dfbc>
    3b78:	02 d7 01 00 	l.j fb5c3f78 <__stack+0xfb143f7c>
    3b7c:	40 3e 08 00 	.word 0x403e0800
    3b80:	40 3e 48 02 	.word 0x403e4802
    3b84:	71 00 00 00 	l.cust1 
    3b88:	3b 9b 48 00 	.word 0x3b9b4800
    3b8c:	00 05 69 12 	l.j 15dfd4 <__ram_length+0xddfd4>
    3b90:	02 d7 00 00 	l.j fb5c3b90 <__stack+0xfb143b94>
    3b94:	00 2c 00 00 	l.j b03b94 <__stack+0x683b98>
    3b98:	20 45 00 4c 	.word 0x2045004c
    3b9c:	00 00 0d 4d 	l.j 70d0 <__rom_size-0x1327c>
    3ba0:	10 09 e6 01 	l.bf 27d3a4 <__ram_length+0x1fd3a4>
    3ba4:	00 40 3e 48 	l.j 10134c4 <__stack+0xb934c8>
    3ba8:	00 40 3f 74 	l.j 1013978 <__stack+0xb9397c>
    3bac:	00 00 20 58 	l.j bd0c <__rom_size-0xe640>
    3bb0:	00 00 3b c5 	l.j 12ac4 <__rom_size-0x7888>
    3bb4:	48 00 00 1a 	l.jalr r0
    3bb8:	d4 10 09 e6 	l.sw 0x1e6(r16),r1
    3bbc:	00 00 00 83 	l.j 3dc8 <__rom_size-0x16584>
    3bc0:	00 00 20 78 	l.j bda0 <__rom_size-0xe5ac>
    3bc4:	00 53 00 00 	l.j 14c3bc4 <__stack+0x1043bc8>
    3bc8:	07 6c 12 02 	l.jal fdb083d0 <__stack+0xfd6883d4>
    3bcc:	e6 01 00 40 	.word 0xe6010040
    3bd0:	3f 74 00 40 	.word 0x3f740040
    3bd4:	3f bc 00 00 	.word 0x3fbc0000
    3bd8:	20 a1 4a 00 	.word 0x20a14a00
    3bdc:	00 15 20 12 	l.j 54bc24 <__stack+0xcbc28>
    3be0:	03 2a 01 00 	l.j fca83fe0 <__stack+0xfc603fe4>
    3be4:	40 3f bc 00 	.word 0x403fbc00
    3be8:	40 40 10 02 	.word 0x40401002
    3bec:	71 00 00 00 	l.cust1 
    3bf0:	3c 23 48 00 	.word 0x3c234800
    3bf4:	00 18 3e 12 	l.j 61343c <__stack+0x193440>
    3bf8:	03 2a 00 00 	l.j fca83bf8 <__stack+0xfc603bfc>
    3bfc:	00 2c 00 00 	l.j b03bfc <__stack+0x683c00>
    3c00:	20 c1 48 00 	.word 0x20c14800
    3c04:	00 07 85 12 	l.j 1e504c <__ram_length+0x16504c>
    3c08:	03 2a 00 00 	l.j fca83c08 <__stack+0xfc603c0c>
    3c0c:	00 2c 00 00 	l.j b03c0c <__stack+0x683c10>
    3c10:	20 d4 48 00 	.word 0x20d44800
    3c14:	00 0a 61 12 	l.j 29c05c <__ram_length+0x21c05c>
    3c18:	03 2a 00 00 	l.j fca83c18 <__stack+0xfc603c1c>
    3c1c:	00 2c 00 00 	l.j b03c1c <__stack+0x683c20>
    3c20:	20 e7 00 4a 	.word 0x20e7004a
    3c24:	00 00 14 13 	l.j 8c70 <__rom_size-0x116dc>
    3c28:	12 03 38 01 	l.bf f80d1c2c <__stack+0xf7c51c30>
    3c2c:	00 40 40 10 	l.j 1013c6c <__stack+0xb93c70>
    3c30:	00 40 40 48 	l.j 1013d50 <__stack+0xb93d54>
    3c34:	02 71 00 00 	l.j f9c43c34 <__stack+0xf97c3c38>
    3c38:	00 3c 4c 48 	l.j f16d58 <__stack+0xa96d5c>
    3c3c:	00 00 0b 4e 	l.j 6974 <__rom_size-0x139d8>
    3c40:	12 03 38 00 	l.bf f80d1c40 <__stack+0xf7c51c44>
    3c44:	00 00 2c 00 	l.j ec44 <__rom_size-0xb708>
    3c48:	00 20 fa 00 	l.j 842448 <__stack+0x3c244c>
    3c4c:	4a 00 00 04 	l.jalr r0
    3c50:	87 12 03 4e 	l.lwz r24,0x34e(r18)
    3c54:	01 00 40 40 	l.j 4013d54 <__stack+0x3b93d58>
    3c58:	48 00 40 40 	l.jalr r8
    3c5c:	84 02 71 00 	l.lwz r0,0x7100(r2)
    3c60:	00 00 3c 75 	l.j 12e34 <__rom_size-0x7518>
    3c64:	4e 63 70 75 	l.maci r3,0x7075
    3c68:	00 12 03 4e 	l.j 4849a0 <__stack+0x49a4>
    3c6c:	00 00 00 2c 	l.j 3d1c <__rom_size-0x16630>
    3c70:	00 00 21 0d 	l.j c0a4 <__rom_size-0xe2a8>
    3c74:	00 4a 00 00 	l.j 1283c74 <__stack+0xe03c78>
    3c78:	08 ea 12 03 	.word 0x08ea1203
    3c7c:	5b 01 00 40 	.word 0x5b010040
    3c80:	40 84 00 40 	.word 0x40840040
    3c84:	40 bc 02 71 	.word 0x40bc0271
    3c88:	00 00 00 3c 	l.j 3d78 <__rom_size-0x165d4>
    3c8c:	9e 48 00 00 	l.addi r18,r8,0x0
    3c90:	06 56 12 03 	l.jal f958849c <__stack+0xf91084a0>
    3c94:	5b 00 00 00 	.word 0x5b000000
    3c98:	2c 00 00 21 	.word 0x2c000021
    3c9c:	20 00 4a 00 	l.sys 0x4a00
    3ca0:	00 0e 1c 12 	l.j 38ace8 <__ram_length+0x30ace8>
    3ca4:	03 68 01 00 	l.j fda040a4 <__stack+0xfd5840a8>
    3ca8:	40 40 bc 00 	.word 0x4040bc00
    3cac:	40 41 00 02 	.word 0x40410002
    3cb0:	71 00 00 00 	l.cust1 
    3cb4:	3c d7 48 00 	.word 0x3cd74800
    3cb8:	00 16 e9 12 	l.j 5be100 <__stack+0x13e104>
    3cbc:	03 68 00 00 	l.j fda03cbc <__stack+0xfd583cc0>
    3cc0:	00 2c 00 00 	l.j b03cc0 <__stack+0x683cc4>
    3cc4:	21 33 48 00 	.word 0x21334800
    3cc8:	00 0b 55 12 	l.j 2d9110 <__ram_length+0x259110>
    3ccc:	03 68 00 00 	l.j fda03ccc <__stack+0xfd583cd0>
    3cd0:	00 2c 00 00 	l.j b03cd0 <__stack+0x683cd4>
    3cd4:	21 46 00 4a 	.word 0x2146004a
    3cd8:	00 00 1b 9e 	l.j ab50 <__rom_size-0xf7fc>
    3cdc:	12 03 81 01 	l.bf f80e40e0 <__stack+0xf7c640e4>
    3ce0:	00 40 41 00 	l.j 10140e0 <__stack+0xb940e4>
    3ce4:	00 40 41 70 	l.j 10142a4 <__stack+0xb942a8>
    3ce8:	02 71 00 00 	l.j f9c43ce8 <__stack+0xf97c3cec>
    3cec:	00 3d 20 48 	l.j f4be0c <__stack+0xacbe10>
    3cf0:	00 00 11 2a 	l.j 8198 <__rom_size-0x121b4>
    3cf4:	12 03 81 00 	l.bf f80e40f4 <__stack+0xf7c640f8>
    3cf8:	00 00 2c 00 	l.j ecf8 <__rom_size-0xb654>
    3cfc:	00 21 59 48 	l.j 85a21c <__stack+0x3da220>
    3d00:	00 00 11 42 	l.j 8208 <__rom_size-0x12144>
    3d04:	12 03 81 00 	l.bf f80e4104 <__stack+0xf7c64108>
    3d08:	00 00 2c 00 	l.j ed08 <__rom_size-0xb644>
    3d0c:	00 21 6c 48 	l.j 85ee2c <__stack+0x3dee30>
    3d10:	00 00 18 49 	l.j 9e34 <__rom_size-0x10518>
    3d14:	12 03 81 00 	l.bf f80e4114 <__stack+0xf7c64118>
    3d18:	00 00 2c 00 	l.j ed18 <__rom_size-0xb634>
    3d1c:	00 21 7f 00 	l.j 86391c <__stack+0x3e3920>
    3d20:	37 00 00 05 	.word 0x37000005
    3d24:	ca 12 03 9e 	.word 0xca12039e
    3d28:	01 00 00 00 	l.j 4003d28 <__stack+0x3b83d2c>
    3d2c:	2c 00 40 41 	.word 0x2c004041
    3d30:	70 00 40 42 	l.cust1 
    3d34:	bc 00 00 21 	l.sfeqi r0,0x21
    3d38:	92 00 00 3d 	l.lbs r16,0x3d(r0)
    3d3c:	bc 54 63 32 	l.sfgtui r20,0x6332
    3d40:	00 12 03 a2 	l.j 484bc8 <__stack+0x4bcc>
    3d44:	00 00 00 2c 	l.j 3df4 <__rom_size-0x16558>
    3d48:	05 03 00 42 	l.jal 40c3e50 <__stack+0x3c43e54>
    3d4c:	0a 18 55 00 	.word 0x0a185500
    3d50:	00 02 e5 12 	l.j bd198 <__ram_length+0x3d198>
    3d54:	03 a3 00 00 	l.j fe8c3d54 <__stack+0xfe443d58>
    3d58:	00 74 05 03 	l.j 1d05164 <__stack+0x1885168>
    3d5c:	00 42 0a 14 	l.j 10865ac <__stack+0xc065b0>
    3d60:	55 00 00 00 	.word 0x55000000
    3d64:	b8 12 03 a4 	l.srai r0,r18,0x24
    3d68:	00 00 00 74 	l.j 3f38 <__rom_size-0x16414>
    3d6c:	05 03 00 42 	l.jal 40c3e74 <__stack+0x3c43e78>
    3d70:	0a 10 55 00 	.word 0x0a105500
    3d74:	00 09 95 12 	l.j 2691bc <__ram_length+0x1e91bc>
    3d78:	03 a5 00 00 	l.j fe943d78 <__stack+0xfe4c3d7c>
    3d7c:	00 2c 05 03 	l.j b05188 <__stack+0x68518c>
    3d80:	00 42 0a 0c 	l.j 10865b0 <__stack+0xc065b4>
    3d84:	41 63 31 00 	.word 0x41633100
    3d88:	12 03 a6 00 	l.bf f80ed588 <__stack+0xf7c6d58c>
    3d8c:	00 00 2c 00 	l.j ed8c <__rom_size-0xb5c0>
    3d90:	00 21 b2 41 	l.j 870694 <__stack+0x3f0698>
    3d94:	63 00 12 03 	.word 0x63001203
    3d98:	a6 00 00 00 	l.andi r16,r0,0x0
    3d9c:	2c 00 00 21 	.word 0x2c000021
    3da0:	c5 49 00 00 	.word 0xc5490000
    3da4:	25 e8 00 40 	l.rfe 
    3da8:	42 80 00 40 	.word 0x42800040
    3dac:	42 8c 12 03 	.word 0x428c1203
    3db0:	cb 3e 00 00 	lf.add.s r25,r30,r0
    3db4:	25 fa 00 00 	l.rfe 
    3db8:	22 05 00 00 	.word 0x22050000
    3dbc:	56 00 00 1b 	.word 0x5600001b
    3dc0:	37 12 04 13 	.word 0x37120413
    3dc4:	00 40 42 bc 	l.j 10148b4 <__stack+0xb948b8>
    3dc8:	00 40 42 fc 	l.j 10149b8 <__stack+0xb949bc>
    3dcc:	00 00 22 18 	l.j c62c <__rom_size-0xdd20>
    3dd0:	2c 00 00 09 	.word 0x2c000009
    3dd4:	04 13 6f 01 	l.jal 4df9d8 <__stack+0x5f9dc>
    3dd8:	00 00 00 83 	l.j 3fe4 <__rom_size-0x16368>
    3ddc:	00 40 42 fc 	l.j 10149cc <__stack+0xb949d0>
    3de0:	00 40 44 24 	l.j 1014e70 <__stack+0xb94e74>
    3de4:	02 71 00 00 	l.j f9c43de4 <__stack+0xf97c3de8>
    3de8:	00 3e 8e 2e 	l.j fa76a0 <__stack+0xb276a4>
    3dec:	73 00 13 6f 	l.cust1 
    3df0:	00 00 00 83 	l.j 3ffc <__rom_size-0x16350>
    3df4:	00 00 22 38 	l.j c6d4 <__rom_size-0xdc78>
    3df8:	2d 66 00 13 	.word 0x2d660013
    3dfc:	6f 00 00 26 	.word 0x6f000026
    3e00:	7d 01 54 57 	l.cust4 
    3e04:	00 00 26 07 	l.j d620 <__rom_size-0xcd2c>
    3e08:	00 40 43 24 	l.j 1014a98 <__stack+0xb94a9c>
    3e0c:	00 40 43 c0 	l.j 1014d0c <__stack+0xb94d10>
    3e10:	13 73 00 00 	l.bf fdcc3e10 <__stack+0xfd843e14>
    3e14:	3e 4f 3e 00 	.word 0x3e4f3e00
    3e18:	00 26 21 00 	l.j 98c218 <__stack+0x50c21c>
    3e1c:	00 22 61 3e 	l.j 89c314 <__stack+0x41c318>
    3e20:	00 00 26 18 	l.j d680 <__rom_size-0xcccc>
    3e24:	00 00 22 74 	l.j c7f4 <__rom_size-0xdb58>
    3e28:	34 00 40 43 	.word 0x34004043
    3e2c:	24 00 40 43 	l.rfe 
    3e30:	c0 35 00 00 	l.mtspr r21,r0,0x800
    3e34:	26 2a 00 00 	l.rfe 
    3e38:	22 9f 34 00 	.word 0x229f3400
    3e3c:	40 43 24 00 	.word 0x40432400
    3e40:	40 43 54 35 	.word 0x40435435
    3e44:	00 00 26 34 	l.j d714 <__rom_size-0xcc38>
    3e48:	00 00 22 c9 	l.j c96c <__rom_size-0xd9e0>
    3e4c:	00 00 00 32 	l.j 3f14 <__rom_size-0x16438>
    3e50:	00 00 26 45 	l.j d764 <__rom_size-0xcbe8>
    3e54:	00 40 43 c8 	l.j 1014d74 <__stack+0xb94d78>
    3e58:	00 40 44 1c 	l.j 1014ec8 <__stack+0xb94ecc>
    3e5c:	13 75 3e 00 	l.bf fdd5365c <__stack+0xfd8d3660>
    3e60:	00 26 5f 00 	l.j 99ba60 <__stack+0x51ba64>
    3e64:	00 22 f2 3e 	l.j 8c075c <__stack+0x440760>
    3e68:	00 00 26 56 	l.j d7c0 <__rom_size-0xcb8c>
    3e6c:	00 00 23 05 	l.j ca80 <__rom_size-0xd8cc>
    3e70:	34 00 40 43 	.word 0x34004043
    3e74:	c8 00 40 44 	.word 0xc8004044
    3e78:	1c 35 00 00 	.word 0x1c350000
    3e7c:	26 68 00 00 	l.rfe 
    3e80:	23 46 35 00 	.word 0x23463500
    3e84:	00 26 73 00 	l.j 9a0a84 <__stack+0x520a88>
    3e88:	00 23 7c 00 	l.j 8e2e88 <__stack+0x462e8c>
    3e8c:	00 00 2c 00 	l.j ee8c <__rom_size-0xb4c0>
    3e90:	00 00 8b 13 	l.j 26adc <__rom_size+0xc790>
    3e94:	79 01 00 00 	l.cust3 
    3e98:	00 83 00 40 	l.j 20c3f98 <__stack+0x1c43f9c>
    3e9c:	44 24 00 40 	l.jr r0
    3ea0:	44 84 02 71 	l.jr r0
    3ea4:	00 00 00 3e 	l.j 3f9c <__rom_size-0x163b0>
    3ea8:	b7 2e 63 00 	l.mfspr r25,r14,0x6300
    3eac:	13 79 00 00 	l.bf fde43eac <__stack+0xfd9c3eb0>
    3eb0:	00 90 00 00 	l.j 2403eb0 <__stack+0x1f83eb4>
    3eb4:	23 a6 00 31 	.word 0x23a60031
    3eb8:	00 00 0d 3c 	l.j 73a8 <__rom_size-0x12fa4>
    3ebc:	0a e6 01 00 	.word 0x0ae60100
    3ec0:	00 00 41 00 	l.j 142c0 <__rom_size-0x608c>
    3ec4:	40 44 84 00 	.word 0x40448400
    3ec8:	40 44 ac 00 	.word 0x4044ac00
    3ecc:	00 23 cf 00 	l.j 8f7acc <__stack+0x477ad0>
    3ed0:	00 3f 0b 38 	l.j fc6bb0 <__stack+0xb46bb4>
    3ed4:	00 00 02 5f 	l.j 4850 <__rom_size-0x15afc>
    3ed8:	14 08 00 00 	.word 0x14080000
    3edc:	00 83 00 00 	l.j 20c3edc <__stack+0x1c43ee0>
    3ee0:	23 ef 38 00 	.word 0x23ef3800
    3ee4:	00 0c 5f 14 	l.j 31bb34 <__ram_length+0x29bb34>
    3ee8:	08 00 00 00 	.word 0x08000000
    3eec:	90 00 00 24 	l.lbs r0,0x24(r0)
    3ef0:	02 58 30 61 	l.j f9610074 <__stack+0xf9190078>
    3ef4:	70 00 14 0a 	l.cust1 
    3ef8:	00 00 01 19 	l.j 435c <__rom_size-0x15ff0>
    3efc:	03 91 00 9f 	l.j fe444178 <__stack+0xfdfc417c>
    3f00:	18 72 76 00 	l.movhi r3,0x7600
    3f04:	14 0b 00 00 	.word 0x140b0000
    3f08:	00 41 00 4c 	l.j 1044038 <__stack+0xbc403c>
    3f0c:	00 00 1a 38 	l.j a7ec <__rom_size-0xfb60>
    3f10:	10 09 c3 01 	l.bf 274b14 <__ram_length+0x1f4b14>
    3f14:	00 40 44 ac 	l.j 10151c4 <__stack+0xb951c8>
    3f18:	00 40 46 40 	l.j 1015818 <__stack+0xb9581c>
    3f1c:	00 00 24 20 	l.j cf9c <__rom_size-0xd3b0>
    3f20:	00 00 3f 45 	l.j 13c34 <__rom_size-0x6718>
    3f24:	48 00 00 1a 	l.jalr r0
    3f28:	d4 10 09 c3 	l.sw 0x1c3(r16),r1
    3f2c:	00 00 00 90 	l.j 416c <__rom_size-0x161e0>
    3f30:	00 00 24 40 	l.j d030 <__rom_size-0xd31c>
    3f34:	48 00 00 16 	l.jalr r0
    3f38:	61 10 09 c3 	.word 0x611009c3
    3f3c:	00 00 00 2c 	l.j 3fec <__rom_size-0x16360>
    3f40:	00 00 24 69 	l.j d0e4 <__rom_size-0xd268>
    3f44:	00 4c 00 00 	l.j 1303f44 <__stack+0xe83f48>
    3f48:	0c 2f 15 01 	l.bnf bc934c <__stack+0x749350>
    3f4c:	61 01 00 40 	.word 0x61010040
    3f50:	46 40 00 40 	l.jr r0
    3f54:	46 94 00 00 	l.jr r0
    3f58:	24 87 00 00 	l.rfe 
    3f5c:	3f 6f 48 00 	.word 0x3f6f4800
    3f60:	00 01 92 15 	l.j 687b4 <__rom_size+0x4e468>
    3f64:	01 61 00 00 	l.j 5843f64 <__stack+0x53c3f68>
    3f68:	00 41 00 00 	l.j 1043f68 <__stack+0xbc3f6c>
    3f6c:	24 a7 00 31 	l.rfe 
    3f70:	00 00 11 15 	l.j 83c4 <__rom_size-0x11f88>
    3f74:	0a ba 01 00 	.word 0x0aba0100
    3f78:	00 00 41 00 	l.j 14378 <__rom_size-0x5fd4>
    3f7c:	40 46 94 00 	.word 0x40469400
    3f80:	40 46 fc 00 	.word 0x4046fc00
    3f84:	00 24 d1 00 	l.j 938384 <__stack+0x4b8388>
    3f88:	00 3f c4 2e 	l.j ff5040 <__stack+0xb75044>
    3f8c:	66 6d 74 00 	.word 0x666d7400
    3f90:	03 08 00 00 	l.j fc203f90 <__stack+0xfbd83f94>
    3f94:	00 90 00 00 	l.j 2403f94 <__stack+0x1f83f98>
    3f98:	24 f1 58 2f 	l.rfe 
    3f9c:	69 00 03 0a 	.word 0x6900030a
    3fa0:	00 00 00 41 	l.j 40a4 <__rom_size-0x162a8>
    3fa4:	00 00 25 0f 	l.j d3e0 <__rom_size-0xcf6c>
    3fa8:	30 61 70 00 	.word 0x30617000
    3fac:	03 0c 00 00 	l.j fc303fac <__stack+0xfbe83fb0>
    3fb0:	00 ed 03 91 	l.j 3b44df4 <__stack+0x36c4df8>
    3fb4:	7c 9f 30 6e 	l.cust4 
    3fb8:	75 6d 00 03 	l.cust2 
    3fbc:	0e 00 00 00 	l.bnf f8003fbc <__stack+0xf7b83fc0>
    3fc0:	41 01 5b 00 	.word 0x41015b00
    3fc4:	37 00 00 10 	.word 0x37000010
    3fc8:	62 11 01 b6 	.word 0x621101b6
    3fcc:	01 00 00 00 	l.j 4003fcc <__stack+0x3b83fd0>
    3fd0:	2c 00 40 46 	.word 0x2c004046
    3fd4:	fc 00 40 48 	l.cust8 
    3fd8:	d4 00 00 25 	l.sw 0x25(r0),r0
    3fdc:	46 00 00 40 	l.jr r0
    3fe0:	10 4e 6c 62 	l.bf 139f168 <__stack+0xf1f16c>
    3fe4:	61 00 11 01 	.word 0x61001101
    3fe8:	b6 00 00 00 	l.mfspr r16,r0,0x0
    3fec:	74 00 00 25 	l.cust2 
    3ff0:	66 48 00 00 	.word 0x66480000
    3ff4:	1b ca 11 01 	l.movhi r30,0x1101
    3ff8:	b6 00 00 00 	l.mfspr r16,r0,0x0
    3ffc:	7d 00 00 25 	l.cust4 
    4000:	d4 41 69 00 	l.sw 0x1100(r1),r13
    4004:	11 01 b9 00 	l.bf 4072404 <__stack+0x3bf2408>
    4008:	00 00 74 00 	l.j 21008 <__rom_size+0x6cbc>
    400c:	00 25 f2 00 	l.j 98080c <__stack+0x500810>
    4010:	37 00 00 18 	.word 0x37000018
    4014:	04 0d 05 67 	l.jal 3455b0 <__ram_length+0x2c55b0>
    4018:	01 00 00 00 	l.j 4004018 <__stack+0x3b8401c>
    401c:	2c 00 40 48 	.word 0x2c004048
    4020:	d4 00 40 49 	l.sw 0x49(r0),r8
    4024:	5c 00 00 26 	.word 0x5c000026
    4028:	1b 00 00 40 	l.movhi r24,0x40
    402c:	5e 48 00 00 	.word 0x5e480000
    4030:	17 e9 0d 05 	.word 0x17e90d05
    4034:	67 00 00 40 	.word 0x67000040
    4038:	5e 00 00 26 	.word 0x5e000026
    403c:	3b 48 00 00 	.word 0x3b480000
    4040:	0b 6f 0d 05 	.word 0x0b6f0d05
    4044:	67 00 00 00 	.word 0x67000000
    4048:	7d 00 00 26 	l.cust4 
    404c:	59 45 00 00 	.word 0x59450000
    4050:	05 42 0d 05 	l.jal 5087464 <__stack+0x4c07468>
    4054:	6b 00 00 00 	.word 0x6b000000
    4058:	74 00 00 26 	l.cust2 
    405c:	77 00 07 04 	l.cust2 
    4060:	00 00 0a 19 	l.j 68c4 <__rom_size-0x13a88>
    4064:	37 00 00 0c 	.word 0x3700000c
    4068:	c6 11 01 72 	l.msb r17,r0
    406c:	01 00 00 00 	l.j 400406c <__stack+0x3b84070>
    4070:	2c 00 40 49 	.word 0x2c004049
    4074:	5c 00 40 4c 	.word 0x5c00404c
    4078:	7c 00 00 26 	l.cust4 
    407c:	af 00 00 40 	l.xori r24,r0,0x40
    4080:	ea 4e 6c 62 	.word 0xea4e6c62
    4084:	61 00 11 01 	.word 0x61001101
    4088:	72 00 00 00 	l.cust1 
    408c:	74 00 00 26 	l.cust2 
    4090:	cf 48 00 00 	.word 0xcf480000
    4094:	06 98 11 01 	l.jal fa608498 <__stack+0xfa18849c>
    4098:	72 00 00 00 	l.cust1 
    409c:	7d 00 00 26 	l.cust4 
    40a0:	f8 48 00 00 	l.cust7 
    40a4:	07 f1 11 01 	l.jal ffc484a8 <__stack+0xff7c84ac>
    40a8:	72 00 00 00 	l.cust1 
    40ac:	74 00 00 27 	l.cust2 
    40b0:	21 1b 69 00 	.word 0x211b6900
    40b4:	11 01 77 00 	l.bf 4061cb4 <__stack+0x3be1cb8>
    40b8:	00 00 74 41 	l.j 211bc <__rom_size+0x6e70>
    40bc:	70 00 11 01 	l.cust1 
    40c0:	78 00 00 00 	l.cust3 
    40c4:	7d 00 00 27 	l.cust4 
    40c8:	3f 59 00 00 	.word 0x3f590000
    40cc:	26 8b 00 40 	l.rfe 
    40d0:	4b 18 00 00 	l.jalr r0
    40d4:	01 c0 11 01 	l.j 70084d8 <__stack+0x6b884dc>
    40d8:	ad 3f 00 00 	l.xori r9,r31,0x0
    40dc:	01 d8 35 00 	l.j 76114dc <__stack+0x71914e0>
    40e0:	00 26 9d 00 	l.j 9ab4e0 <__stack+0x52b4e4>
    40e4:	00 27 79 00 	l.j 9e24e4 <__stack+0x5624e8>
    40e8:	00 00 37 00 	l.j 11ce8 <__rom_size-0x8664>
    40ec:	00 04 c9 0d 	l.j 136520 <__ram_length+0xb6520>
    40f0:	05 48 01 00 	l.jal 52044f0 <__stack+0x4d844f4>
    40f4:	00 00 2c 00 	l.j f0f4 <__rom_size-0xb258>
    40f8:	40 4c 7c 00 	.word 0x404c7c00
    40fc:	40 4d 80 00 	.word 0x404d8000
    4100:	00 27 b1 00 	l.j 9f0500 <__stack+0x570504>
    4104:	00 41 56 48 	l.j 1059a24 <__stack+0xbd9a28>
    4108:	00 00 17 e9 	l.j a0ac <__rom_size-0x102a0>
    410c:	0d 05 48 00 	l.bnf 415610c <__stack+0x3cd6110>
    4110:	00 40 5e 00 	l.j 101b910 <__stack+0xb9b914>
    4114:	00 27 d1 48 	l.j 9f8634 <__stack+0x578638>
    4118:	00 00 0b 6f 	l.j 6ed4 <__rom_size-0x13478>
    411c:	0d 05 48 00 	l.bnf 415611c <__stack+0x3cd6120>
    4120:	00 00 7d 00 	l.j 23520 <__rom_size+0x91d4>
    4124:	00 27 ef 48 	l.j 9ffe44 <__stack+0x57fe48>
    4128:	00 00 13 53 	l.j 8e74 <__rom_size-0x114d8>
    412c:	0d 05 48 00 	l.bnf 415612c <__stack+0x3cd6130>
    4130:	00 00 74 00 	l.j 21130 <__rom_size+0x6de4>
    4134:	00 28 0d 41 	l.j a07638 <__stack+0x58763c>
    4138:	73 62 00 0d 	l.cust1 
    413c:	05 4c 00 00 	l.jal 530413c <__stack+0x4e84140>
    4140:	00 74 00 00 	l.j 1d04140 <__stack+0x1884144>
    4144:	28 36 41 62 	lv.packs.b r1,r22,r8
    4148:	63 00 0d 05 	.word 0x63000d05
    414c:	4d 00 00 00 	l.maci r0,0x0
    4150:	74 00 00 28 	l.cust2 
    4154:	52 00 25 00 	.word 0x52002500
    4158:	00 0a d9 11 	l.j 2ba59c <__ram_length+0x23a59c>
    415c:	01 3c 00 00 	l.j 4f0415c <__stack+0x4a84160>
    4160:	00 74 01 00 	l.j 1d04560 <__stack+0x1884564>
    4164:	00 41 8e 26 	l.j 10679fc <__stack+0xbe7a00>
    4168:	00 00 03 c0 	l.j 5068 <__rom_size-0x152e4>
    416c:	11 01 40 00 	l.bf 405416c <__stack+0x3bd4170>
    4170:	00 00 74 22 	l.j 211f8 <__rom_size+0x6eac>
    4174:	26 00 00 16 	l.rfe 
    4178:	1d 11 01 62 	.word 0x1d110162
    417c:	00 00 00 41 	l.j 4280 <__rom_size-0x160cc>
    4180:	26 00 00 0d 	l.rfe 
    4184:	bb 11 01 67 	l.srli r24,r17,0x27
    4188:	00 00 00 41 	l.j 428c <__rom_size-0x160c0>
    418c:	00 00 4c 00 	l.j 1718c <__rom_size-0x31c0>
    4190:	00 0d f4 0f 	l.j 3811cc <__ram_length+0x3011cc>
    4194:	03 46 01 00 	l.j fd184594 <__stack+0xfcd04598>
    4198:	40 4d 80 00 	.word 0x404d8000
    419c:	40 50 cc 00 	.word 0x4050cc00
    41a0:	00 28 70 00 	l.j a201a0 <__stack+0x5a01a4>
    41a4:	00 42 75 48 	l.j 10a16c4 <__stack+0xc216c8>
    41a8:	00 00 15 0f 	l.j 95e4 <__rom_size-0x10d68>
    41ac:	0f 03 46 00 	l.bnf fc0d59ac <__stack+0xfbc559b0>
    41b0:	00 37 be 00 	l.j df39b0 <__stack+0x9739b4>
    41b4:	00 28 90 45 	l.j a282c8 <__stack+0x5a82cc>
    41b8:	00 00 11 70 	l.j 8778 <__rom_size-0x11bd4>
    41bc:	0f 03 4a 00 	l.bnf fc0d69bc <__stack+0xfbc569c0>
    41c0:	00 00 74 00 	l.j 211c0 <__rom_size+0x6e74>
    41c4:	00 28 ae 41 	l.j a2fac8 <__stack+0x5afacc>
    41c8:	69 00 0f 03 	.word 0x69000f03
    41cc:	4b 00 00 00 	l.jalr r0
    41d0:	74 00 00 29 	l.cust2 
    41d4:	24 45 00 00 	l.rfe 
    41d8:	0a 88 0f 03 	.word 0x0a880f03
    41dc:	4b 00 00 00 	l.jalr r0
    41e0:	74 00 00 29 	l.cust2 
    41e4:	38 41 63 79 	.word 0x38416379
    41e8:	6c 00 0f 03 	.word 0x6c000f03
    41ec:	4b 00 00 00 	l.jalr r0
    41f0:	74 00 00 29 	l.cust2 
    41f4:	62 41 73 70 	.word 0x62417370
    41f8:	74 00 0f 03 	l.cust2 
    41fc:	4b 00 00 00 	l.jalr r0
    4200:	74 00 00 29 	l.cust2 
    4204:	80 55 00 00 	l.ld r2,0x0(r21)
    4208:	1a 33 0f 03 	.word 0x1a330f03
    420c:	4c 00 00 42 	l.maci r0,0x42
    4210:	75 02 91 54 	l.cust2 
    4214:	49 00 00 41 	l.jalr r0
    4218:	56 00 40 4e 	.word 0x5600404e
    421c:	40 00 40 4f 	.word 0x4000404f
    4220:	d4 0f 03 5e 	l.sw 0x35e(r15),r0
    4224:	34 00 40 4e 	.word 0x3400404e
    4228:	40 00 40 4f 	.word 0x4000404f
    422c:	d4 35 00 00 	l.sw 0x800(r21),r0
    4230:	41 67 00 00 	.word 0x41670000
    4234:	29 9f 5a 00 	.word 0x299f5a00
    4238:	00 26 aa 00 	l.j 9aea38 <__stack+0x52ea3c>
    423c:	40 4e 40 00 	.word 0x404e4000
    4240:	40 4f 5c 11 	.word 0x404f5c11
    4244:	01 41 00 00 	l.j 5044244 <__stack+0x4bc4248>
    4248:	42 5a 34 00 	.word 0x425a3400
    424c:	40 4e 40 00 	.word 0x404e4000
    4250:	40 4f 5c 5b 	.word 0x404f5c5b
    4254:	00 00 26 bb 	l.j dd40 <__rom_size-0xc60c>
    4258:	00 00 34 00 	l.j 11258 <__rom_size-0x90f4>
    425c:	40 4f 9c 00 	.word 0x404f9c00
    4260:	40 4f d4 35 	.word 0x404fd435
    4264:	00 00 41 80 	l.j 14864 <__rom_size-0x5ae8>
    4268:	00 00 2a 2e 	l.j eb20 <__rom_size-0xb82c>
    426c:	5b 00 00 41 	.word 0x5b000041
    4270:	74 00 00 00 	l.cust2 
    4274:	00 04 00 00 	l.j 104274 <__ram_length+0x84274>
    4278:	00 74 00 00 	l.j 1d04278 <__stack+0x188427c>
    427c:	42 85 05 00 	.word 0x42850500
    4280:	00 00 74 03 	l.j 2128c <__rom_size+0x6f40>
    4284:	00 31 00 00 	l.j c44284 <__stack+0x7c4288>
    4288:	01 06 11 d4 	l.j 41889d8 <__stack+0x3d089dc>
    428c:	01 00 00 00 	l.j 400428c <__stack+0x3b84290>
    4290:	2c 00 40 50 	.word 0x2c004050
    4294:	cc 00 40 52 	.word 0xcc004052
    4298:	b4 00 00 2a 	l.mfspr r0,r0,0x2a
    429c:	51 00 00 42 	.word 0x51000042
    42a0:	d6 2e 6c 62 	l.sw 0xffff8c62(r14),r13
    42a4:	61 00 11 d4 	.word 0x610011d4
    42a8:	00 00 00 74 	l.j 4478 <__rom_size-0x15ed4>
    42ac:	00 00 2a 71 	l.j ec70 <__rom_size-0xb6dc>
    42b0:	38 00 00 06 	.word 0x38000006
    42b4:	98 11 d4 00 	l.lhs r0,0xffffd400(r17)
    42b8:	00 00 7d 00 	l.j 236b8 <__rom_size+0x936c>
    42bc:	00 2a c8 18 	l.j ab631c <__stack+0x636320>
    42c0:	69 00 11 da 	.word 0x690011da
    42c4:	00 00 00 74 	l.j 4494 <__rom_size-0x15eb8>
    42c8:	2f 70 00 11 	.word 0x2f700011
    42cc:	db 00 00 00 	l.sb 0xffffc000(r0),r0
    42d0:	7d 00 00 2a 	l.cust4 
    42d4:	e6 00 37 00 	.word 0xe6003700
    42d8:	00 03 ec 0d 	l.j ff30c <__ram_length+0x7f30c>
    42dc:	05 34 01 00 	l.jal 4d046dc <__stack+0x48846e0>
    42e0:	00 00 2c 00 	l.j f2e0 <__rom_size-0xb06c>
    42e4:	40 52 b4 00 	.word 0x4052b400
    42e8:	40 53 3c 00 	.word 0x40533c00
    42ec:	00 2b 20 00 	l.j acc2ec <__stack+0x64c2f0>
    42f0:	00 43 23 48 	l.j 10cd010 <__stack+0xc4d014>
    42f4:	00 00 17 e9 	l.j a298 <__rom_size-0x100b4>
    42f8:	0d 05 34 00 	l.bnf 41512f8 <__stack+0x3cd12fc>
    42fc:	00 40 5e 00 	l.j 101bafc <__stack+0xb9bb00>
    4300:	00 2b 40 48 	l.j ad4420 <__stack+0x654424>
    4304:	00 00 0b 6f 	l.j 70c0 <__rom_size-0x1328c>
    4308:	0d 05 34 00 	l.bnf 4151308 <__stack+0x3cd130c>
    430c:	00 00 7d 00 	l.j 2370c <__rom_size+0x93c0>
    4310:	00 2b 5e 41 	l.j adbc14 <__stack+0x65bc18>
    4314:	73 62 00 0d 	l.cust1 
    4318:	05 38 00 00 	l.jal 4e04318 <__stack+0x498431c>
    431c:	00 74 00 00 	l.j 1d0431c <__stack+0x1884320>
    4320:	2b 7c 00 37 	lv.addus.h r27,r28,r0
    4324:	00 00 15 64 	l.j 98b4 <__rom_size-0x10a98>
    4328:	0d 04 e9 01 	l.bnf 413e72c <__stack+0x3cbe730>
    432c:	00 00 00 2c 	l.j 43dc <__rom_size-0x15f70>
    4330:	00 40 53 3c 	l.j 1019020 <__stack+0xb99024>
    4334:	00 40 55 48 	l.j 1019854 <__stack+0xb99858>
    4338:	00 00 2b b4 	l.j f208 <__rom_size-0xb144>
    433c:	00 00 43 c4 	l.j 1524c <__rom_size-0x5100>
    4340:	48 00 00 17 	l.jalr r0
    4344:	e9 0d 04 e9 	.word 0xe90d04e9
    4348:	00 00 40 5e 	l.j 144c0 <__rom_size-0x5e8c>
    434c:	00 00 2b d4 	l.j f29c <__rom_size-0xb0b0>
    4350:	48 00 00 05 	l.jalr r0
    4354:	bc 0d 04 e9 	l.sfeqi r13,0x4e9
    4358:	00 00 00 74 	l.j 4528 <__rom_size-0x15e24>
    435c:	00 00 2b f2 	l.j f324 <__rom_size-0xb028>
    4360:	48 00 00 1b 	l.jalr r0
    4364:	dd 0d 04 e9 	l.sh 0x44e9(r13),r0
    4368:	00 00 00 74 	l.j 4538 <__rom_size-0x15e14>
    436c:	00 00 2c 10 	l.j f3ac <__rom_size-0xafa0>
    4370:	41 73 62 00 	.word 0x41736200
    4374:	0d 04 f0 00 	l.bnf 4140374 <__stack+0x3cc0378>
    4378:	00 00 74 00 	l.j 21378 <__rom_size+0x702c>
    437c:	00 2c 2e 41 	l.j b0fc80 <__stack+0x68fc84>
    4380:	69 00 0d 04 	.word 0x69000d04
    4384:	f1 00 00 00 	l.cust5 r8,r0,r0,0x0,0x0
    4388:	3a 00 00 2c 	.word 0x3a00002c
    438c:	4c 44 00 40 	l.maci r4,0x40
    4390:	54 30 00 40 	.word 0x54300040
    4394:	54 6c 00 00 	.word 0x546c0000
    4398:	43 aa 41 5f 	.word 0x43aa415f
    439c:	78 00 0d 05 	l.cust3 
    43a0:	1d 00 00 00 	.word 0x1d000000
    43a4:	74 00 00 2c 	l.cust2 
    43a8:	75 00 34 00 	l.cust2 
    43ac:	40 54 8c 00 	.word 0x40548c00
    43b0:	40 54 ac 41 	.word 0x4054ac41
    43b4:	5f 78 00 0d 	.word 0x5f78000d
    43b8:	05 23 00 00 	l.jal 48c43b8 <__stack+0x44443bc>
    43bc:	00 3a 00 00 	l.j e843bc <__stack+0xa043c0>
    43c0:	2c 89 00 00 	.word 0x2c890000
    43c4:	37 00 00 0d 	.word 0x3700000d
    43c8:	ca 0d 04 bc 	.word 0xca0d04bc
    43cc:	01 00 00 00 	l.j 40043cc <__stack+0x3b843d0>
    43d0:	2c 00 40 55 	.word 0x2c004055
    43d4:	48 00 40 56 	l.jalr r8
    43d8:	a4 00 00 2c 	l.andi r0,r0,0x2c
    43dc:	9c 00 00 44 	l.addi r0,r0,0x44
    43e0:	45 48 00 00 	l.jr r0
    43e4:	17 e9 0d 04 	.word 0x17e90d04
    43e8:	bc 00 00 40 	l.sfeqi r0,0x40
    43ec:	5e 00 00 2c 	.word 0x5e00002c
    43f0:	bc 41 73 62 	l.sfgtui r1,0x7362
    43f4:	00 0d 04 c0 	l.j 3456f4 <__ram_length+0x2c56f4>
    43f8:	00 00 00 74 	l.j 45c8 <__rom_size-0x15d84>
    43fc:	00 00 2c da 	l.j f764 <__rom_size-0xabe8>
    4400:	41 69 00 0d 	.word 0x4169000d
    4404:	04 c1 00 00 	l.jal 3044404 <__stack+0x2bc4408>
    4408:	00 3a 00 00 	l.j e84408 <__stack+0xa0440c>
    440c:	2c f8 44 00 	.word 0x2cf84400
    4410:	40 56 14 00 	.word 0x40561400
    4414:	40 56 50 00 	.word 0x40565000
    4418:	00 44 2b 41 	l.j 110f11c <__stack+0xc8f120>
    441c:	5f 78 00 0d 	.word 0x5f78000d
    4420:	04 df 00 00 	l.jal 37c4420 <__stack+0x3344424>
    4424:	00 74 00 00 	l.j 1d04424 <__stack+0x1884428>
    4428:	2d 21 00 34 	.word 0x2d210034
    442c:	00 40 56 60 	l.j 1019dac <__stack+0xb99db0>
    4430:	00 40 56 80 	l.j 1019e30 <__stack+0xb99e34>
    4434:	41 5f 78 00 	.word 0x415f7800
    4438:	0d 04 df 00 	l.bnf 413c038 <__stack+0x3cbc03c>
    443c:	00 00 3a 00 	l.j 12c3c <__rom_size-0x7710>
    4440:	00 2d 35 00 	l.j b51840 <__stack+0x6d1844>
    4444:	00 31 00 00 	l.j c44444 <__stack+0x7c4448>
    4448:	0e fa 16 07 	l.bnf fbe89c64 <__stack+0xfba09c68>
    444c:	01 00 00 00 	l.j 400444c <__stack+0x3b84450>
    4450:	41 00 40 56 	.word 0x41004056
    4454:	a4 00 40 58 	l.andi r0,r0,0x4058
    4458:	08 00 00 2d 	.word 0x0800002d
    445c:	48 00 00 44 	l.jalr r0
    4460:	ec 38 00 00 	.word 0xec380000
    4464:	17 e9 16 07 	.word 0x17e91607
    4468:	00 00 44 ec 	l.j 15818 <__rom_size-0x4b34>
    446c:	00 00 2d 68 	l.j fa0c <__rom_size-0xa940>
    4470:	38 00 00 0b 	.word 0x3800000b
    4474:	6f 16 07 00 	.word 0x6f160700
    4478:	00 00 7d 00 	l.j 23878 <__rom_size+0x952c>
    447c:	00 2d 86 38 	l.j b65d5c <__stack+0x6e5d60>
    4480:	00 00 07 a2 	l.j 6308 <__rom_size-0x14044>
    4484:	16 07 00 00 	.word 0x16070000
    4488:	00 74 00 00 	l.j 1d04488 <__stack+0x188448c>
    448c:	2d de 39 00 	.word 0x2dde3900
    4490:	00 03 c0 16 	l.j f44e8 <__ram_length+0x744e8>
    4494:	0b 00 00 00 	.word 0x0b000000
    4498:	41 00 00 2e 	.word 0x4100002e
    449c:	2b 39 00 00 	.word 0x2b390000
    44a0:	06 8c 16 0e 	l.jal fa309cd8 <__stack+0xf9e89cdc>
    44a4:	00 00 00 74 	l.j 4674 <__rom_size-0x15cd8>
    44a8:	00 00 2e 76 	l.j fe80 <__rom_size-0xa4cc>
    44ac:	44 00 40 56 	l.jr r8
    44b0:	e0 00 40 57 	.word 0xe0004057
    44b4:	38 00 00 44 	.word 0x38000044
    44b8:	d4 2f 69 00 	l.sw 0x900(r15),r13
    44bc:	16 13 00 00 	.word 0x16130000
    44c0:	00 41 00 00 	l.j 10444c0 <__stack+0xbc44c4>
    44c4:	2e 89 2f 6c 	.word 0x2e892f6c
    44c8:	00 16 14 00 	l.j 5894c8 <__stack+0x1094cc>
    44cc:	00 00 41 00 	l.j 148cc <__rom_size-0x5a80>
    44d0:	00 2e bf 00 	l.j bb40d0 <__stack+0x7340d4>
    44d4:	34 00 40 57 	.word 0x34004057
    44d8:	94 00 40 57 	l.lhz r0,0x4057(r0)
    44dc:	e0 2f 69 00 	.word 0xe02f6900
    44e0:	16 2c 00 00 	.word 0x162c0000
    44e4:	00 48 00 00 	l.j 12044e4 <__stack+0xd844e8>
    44e8:	2e dd 00 00 	.word 0x2edd0000
    44ec:	07 04 00 00 	l.jal fc1044ec <__stack+0xfbc844f0>
    44f0:	24 5e 37 00 	l.rfe 
    44f4:	00 13 b6 0d 	l.j 4f1d28 <__stack+0x71d2c>
    44f8:	04 95 01 00 	l.jal 25448f8 <__stack+0x20c48fc>
    44fc:	00 00 74 00 	l.j 214fc <__rom_size+0x71b0>
    4500:	40 58 08 00 	.word 0x40580800
    4504:	40 59 1c 00 	.word 0x40591c00
    4508:	00 2e fc 00 	l.j bc3508 <__stack+0x74350c>
    450c:	00 45 76 48 	l.j 1161e2c <__stack+0xce1e30>
    4510:	00 00 0f 3b 	l.j 81fc <__rom_size-0x12150>
    4514:	0d 04 95 00 	l.bnf 4129914 <__stack+0x3ca9918>
    4518:	00 00 74 00 	l.j 21518 <__rom_size+0x71cc>
    451c:	00 2f 1c 45 	l.j bcb630 <__stack+0x74b634>
    4520:	00 00 0a 0f 	l.j 6d5c <__rom_size-0x135f0>
    4524:	0d 04 9c 00 	l.bnf 412b524 <__stack+0x3cab528>
    4528:	00 00 74 00 	l.j 21528 <__rom_size+0x71dc>
    452c:	00 2f 2f 45 	l.j bd0240 <__stack+0x750244>
    4530:	00 00 0b b9 	l.j 7414 <__rom_size-0x12f38>
    4534:	0d 04 9d 00 	l.bnf 412b934 <__stack+0x3cab938>
    4538:	00 00 3a 00 	l.j 12d38 <__rom_size-0x7614>
    453c:	00 2f 4d 44 	l.j bd7a4c <__stack+0x757a50>
    4540:	00 40 58 9c 	l.j 101a7b0 <__stack+0xb9a7b4>
    4544:	00 40 58 d4 	l.j 101a894 <__stack+0xb9a898>
    4548:	00 00 45 5c 	l.j 15ab8 <__rom_size-0x4894>
    454c:	41 5f 78 00 	.word 0x415f7800
    4550:	0d 04 b5 00 	l.bnf 4131950 <__stack+0x3cb1954>
    4554:	00 00 74 00 	l.j 21554 <__rom_size+0x7208>
    4558:	00 2f 76 00 	l.j be1d58 <__stack+0x761d5c>
    455c:	34 00 40 58 	.word 0x34004058
    4560:	e4 00 40 59 	l.sfeq r0,r8
    4564:	04 41 5f 78 	l.jal 105c344 <__stack+0xbdc348>
    4568:	00 0d 04 b5 	l.j 34583c <__ram_length+0x2c583c>
    456c:	00 00 00 3a 	l.j 4654 <__rom_size-0x15cf8>
    4570:	00 00 2f 89 	l.j 10394 <__rom_size-0x9fb8>
    4574:	00 00 31 00 	l.j 10974 <__rom_size-0x99d8>
    4578:	00 10 ca 11 	l.j 436dbc <_stack+0x150fc>
    457c:	33 01 00 00 	.word 0x33010000
    4580:	00 2c 00 40 	l.j b04680 <__stack+0x684684>
    4584:	59 1c 00 40 	.word 0x591c0040
    4588:	5d d8 00 00 	.word 0x5dd80000
    458c:	2f 9c 00 00 	.word 0x2f9c0000
    4590:	45 ae 2f 6e 	l.jr r5
    4594:	00 11 37 00 	l.j 452194 <_stack+0x304d4>
    4598:	00 00 2c 00 	l.j f598 <__rom_size-0xadb4>
    459c:	00 2f bc 30 	l.j bf365c <__stack+0x773660>
    45a0:	6f 63 72 00 	.word 0x6f637200
    45a4:	11 38 00 00 	l.bf 4e045a4 <__stack+0x49845a8>
    45a8:	00 64 02 91 	l.j 1904fec <__stack+0x1484ff0>
    45ac:	68 00 37 00 	.word 0x68003700
    45b0:	00 01 53 0f 	l.j 591ec <__rom_size+0x3eea0>
    45b4:	03 ba 01 00 	l.j fee849b4 <__stack+0xfea049b8>
    45b8:	00 00 2c 00 	l.j f5b8 <__rom_size-0xad94>
    45bc:	40 5d d8 00 	.word 0x405dd800
    45c0:	40 60 ec 00 	.word 0x4060ec00
    45c4:	00 2f d0 00 	l.j bf85c4 <__stack+0x7785c8>
    45c8:	00 45 fb 48 	l.j 11832e8 <__stack+0xd032ec>
    45cc:	00 00 04 91 	l.j 5810 <__rom_size-0x14b3c>
    45d0:	0f 03 ba 00 	l.bnf fc0f2dd0 <__stack+0xfbc72dd4>
    45d4:	00 00 2c 00 	l.j f5d4 <__rom_size-0xad78>
    45d8:	00 2f f0 45 	l.j c006ec <__stack+0x7806f0>
    45dc:	00 00 15 ee 	l.j 9d94 <__rom_size-0x105b8>
    45e0:	0f 03 be 00 	l.bnf fc0f3de0 <__stack+0xfbc73de4>
    45e4:	00 00 74 00 	l.j 215e4 <__rom_size+0x7298>
    45e8:	00 30 03 55 	l.j c0533c <__stack+0x785340>
    45ec:	00 00 14 f7 	l.j 99c8 <__rom_size-0x10984>
    45f0:	0f 03 bf 00 	l.bnf fc0f41f0 <__stack+0xfbc741f4>
    45f4:	00 45 fb 02 	l.j 11831fc <__stack+0xd03200>
    45f8:	91 58 00 04 	l.lbs r10,0x4(r24)
    45fc:	00 00 00 89 	l.j 4820 <__rom_size-0x15b2c>
    4600:	00 00 46 0b 	l.j 15e2c <__rom_size-0x4520>
    4604:	05 00 00 00 	l.jal 4004604 <__stack+0x3b84608>
    4608:	74 0b 00 37 	l.cust2 
    460c:	00 00 1c 50 	l.j b74c <__rom_size-0xec00>
    4610:	0e 01 a0 01 	l.bnf f806c614 <__stack+0xf7bec618>
    4614:	00 00 00 89 	l.j 4838 <__rom_size-0x15b14>
    4618:	00 40 60 ec 	l.j 101c9c8 <__stack+0xb9c9cc>
    461c:	00 40 61 14 	l.j 101ca6c <__stack+0xb9ca70>
    4620:	00 00 30 3c 	l.j 10710 <__rom_size-0x9c3c>
    4624:	00 00 46 85 	l.j 16038 <__rom_size-0x4314>
    4628:	48 00 00 16 	l.jalr r0
    462c:	8f 0e 01 a0 	l.lbz r24,0x1a0(r14)
    4630:	00 00 00 90 	l.j 4870 <__rom_size-0x15adc>
    4634:	00 00 30 5c 	l.j 107a4 <__rom_size-0x9ba8>
    4638:	1b 63 31 00 	.word 0x1b633100
    463c:	0e 01 a4 00 	l.bnf f806d63c <__stack+0xf7bed640>
    4640:	00 00 2c 1b 	l.j f6ac <__rom_size-0xaca0>
    4644:	63 32 00 0e 	.word 0x6332000e
    4648:	01 a4 00 00 	l.j 6904648 <__stack+0x648464c>
    464c:	00 2c 1b 63 	l.j b0b3d8 <__stack+0x68b3dc>
    4650:	33 00 0e 01 	.word 0x33000e01
    4654:	a4 00 00 00 	l.andi r0,r0,0x0
    4658:	2c 1b 63 34 	.word 0x2c1b6334
    465c:	00 0e 01 a4 	l.j 384cec <__ram_length+0x304cec>
    4660:	00 00 00 2c 	l.j 4710 <__rom_size-0x15c3c>
    4664:	1b 63 6d 64 	.word 0x1b636d64
    4668:	00 0e 01 a5 	l.j 384cfc <__ram_length+0x304cfc>
    466c:	00 00 00 2c 	l.j 471c <__rom_size-0x15c30>
    4670:	1b 70 00 0e 	l.movhi r27,0xe
    4674:	01 a6 00 00 	l.j 6984674 <__stack+0x6504678>
    4678:	00 90 1b 6e 	l.j 240b430 <__stack+0x1f8b434>
    467c:	00 0e 01 a7 	l.j 384d18 <__ram_length+0x304d18>
    4680:	00 00 00 2c 	l.j 4730 <__rom_size-0x15c1c>
    4684:	00 46 00 00 	l.j 1184684 <__stack+0xd04688>
    4688:	0a bf 0d 7a 	.word 0x0abf0d7a
    468c:	01 00 40 61 	l.j 4014810 <__stack+0x3b94814>
    4690:	14 00 40 61 	.word 0x14004061
    4694:	50 00 00 30 	.word 0x50000030
    4698:	6f 00 00 46 	.word 0x6f000046
    469c:	c7 2e 66 6d 	.word 0xc72e666d
    46a0:	74 00 0d 7a 	l.cust2 
    46a4:	00 00 00 90 	l.j 48e4 <__rom_size-0x15a68>
    46a8:	00 00 30 90 	l.j 108e8 <__rom_size-0x9a64>
    46ac:	2e 6c 00 0d 	.word 0x2e6c000d
    46b0:	7a 00 00 00 	l.cust3 
    46b4:	74 00 00 30 	l.cust2 
    46b8:	ae 30 73 00 	l.xori r17,r16,0x7300
    46bc:	0d 7e 00 00 	l.bnf 5f846bc <__stack+0x5b046c0>
    46c0:	46 c7 03 91 	l.jr r0
    46c4:	b8 7f 00 04 	l.slli r3,r31,0x4
    46c8:	00 00 00 89 	l.j 48ec <__rom_size-0x15a60>
    46cc:	00 00 46 d7 	l.j 16228 <__rom_size-0x4124>
    46d0:	05 00 00 00 	l.jal 40046d0 <__stack+0x3b846d4>
    46d4:	74 3f 00 19 	l.cust2 
    46d8:	00 00 19 5a 	l.j ac40 <__rom_size-0xf70c>
    46dc:	17 01 6a 01 	.word 0x17016a01
    46e0:	00 00 00 2c 	l.j 4790 <__rom_size-0x15bbc>
    46e4:	01 00 00 47 	l.j 4004800 <__stack+0x3b84804>
    46e8:	4e 20 00 00 	l.maci r0,0x0
    46ec:	0b 81 17 01 	.word 0x0b811701
    46f0:	6a 00 00 00 	.word 0x6a000000
    46f4:	7d 20 00 00 	l.cust4 
    46f8:	10 9f 17 01 	l.bf 27ca2fc <__stack+0x234a300>
    46fc:	6a 00 00 00 	.word 0x6a000000
    4700:	7d 1b 63 00 	l.cust4 
    4704:	17 01 6f 00 	.word 0x17016f00
    4708:	00 00 2c 1b 	l.j f774 <__rom_size-0xabd8>
    470c:	63 31 00 17 	.word 0x63310017
    4710:	01 6f 00 00 	l.j 5bc4710 <__stack+0x5744714>
    4714:	00 2c 1b 63 	l.j b0b4a0 <__stack+0x68b4a4>
    4718:	32 00 17 01 	.word 0x32001701
    471c:	6f 00 00 00 	.word 0x6f000000
    4720:	2c 1b 63 33 	.word 0x2c1b6333
    4724:	00 17 01 6f 	l.j 5c4ce0 <__stack+0x144ce4>
    4728:	00 00 00 2c 	l.j 47d8 <__rom_size-0x15b74>
    472c:	1b 63 34 00 	.word 0x1b633400
    4730:	17 01 6f 00 	.word 0x17016f00
    4734:	00 00 2c 1b 	l.j f7a0 <__rom_size-0xabac>
    4738:	69 00 17 01 	.word 0x69001701
    473c:	70 00 00 00 	l.cust1 
    4740:	2c 26 00 00 	.word 0x2c260000
    4744:	1a b0 17 01 	l.movhi r21,0x1701
    4748:	71 00 00 00 	l.cust1 
    474c:	64 00 19 00 	.word 0x64001900
    4750:	00 1a 75 17 	l.j 6a1bac <__stack+0x221bb0>
    4754:	02 00 01 00 	l.j f8004b54 <__stack+0xf7b84b58>
    4758:	00 00 2c 01 	l.j f75c <__rom_size-0xabf0>
    475c:	00 00 47 c1 	l.j 16660 <__rom_size-0x3cec>
    4760:	1b 63 00 17 	.word 0x1b630017
    4764:	02 04 00 00 	l.j f8104764 <__stack+0xf7c84768>
    4768:	00 2c 1b 63 	l.j b0b4f4 <__stack+0x68b4f8>
    476c:	31 00 17 02 	.word 0x31001702
    4770:	04 00 00 00 	l.jal 4770 <__rom_size-0x15bdc>
    4774:	2c 1b 63 32 	.word 0x2c1b6332
    4778:	00 17 02 04 	l.j 5c4f88 <__stack+0x144f8c>
    477c:	00 00 00 2c 	l.j 482c <__rom_size-0x15b20>
    4780:	1b 63 33 00 	.word 0x1b633300
    4784:	17 02 04 00 	.word 0x17020400
    4788:	00 00 2c 1b 	l.j f7f4 <__rom_size-0xab58>
    478c:	63 34 00 17 	.word 0x63340017
    4790:	02 04 00 00 	l.j f8104790 <__stack+0xf7c84794>
    4794:	00 2c 1b 69 	l.j b0b538 <__stack+0x68b53c>
    4798:	00 17 02 05 	l.j 5c4fac <__stack+0x144fb0>
    479c:	00 00 00 2c 	l.j 484c <__rom_size-0x15b00>
    47a0:	1b 70 00 17 	l.movhi r27,0x17
    47a4:	02 06 00 00 	l.j f81847a4 <__stack+0xf7d047a8>
    47a8:	00 7d 1b 6e 	l.j 1f4b560 <__stack+0x1acb564>
    47ac:	00 17 02 07 	l.j 5c4fc8 <__stack+0x144fcc>
    47b0:	00 00 00 3a 	l.j 4898 <__rom_size-0x15ab4>
    47b4:	26 00 00 1a 	l.rfe 
    47b8:	b0 17 02 08 	l.muli r0,r23,0x208
    47bc:	00 00 00 64 	l.j 494c <__rom_size-0x15a00>
    47c0:	00 4c 00 00 	l.j 13047c0 <__stack+0xe847c4>
    47c4:	0c 54 17 02 	l.bnf 150a3cc <__stack+0x108a3d0>
    47c8:	79 01 00 40 	l.cust3 
    47cc:	61 50 00 40 	.word 0x61500040
    47d0:	6d 68 00 00 	.word 0x6d680000
    47d4:	30 cd 00 00 	.word 0x30cd0000
    47d8:	48 d3 48 00 	l.jalr r9
    47dc:	00 15 98 17 	l.j 56a838 <__stack+0xea83c>
    47e0:	02 79 00 00 	l.j f9e447e0 <__stack+0xf99c47e4>
    47e4:	48 d3 00 00 	l.jalr r0
    47e8:	30 ed 45 00 	.word 0x30ed4500
    47ec:	00 05 42 17 	l.j 155048 <__ram_length+0xd5048>
    47f0:	02 7d 00 00 	l.j f9f447f0 <__stack+0xf9ac47f4>
    47f4:	00 2c 00 00 	l.j b047f4 <__stack+0x6847f8>
    47f8:	31 0b 45 00 	.word 0x310b4500
    47fc:	00 10 4b 17 	l.j 417458 <boot_font.21009+0x38>
    4800:	02 7e 00 00 	l.j f9f84800 <__stack+0xf9b04804>
    4804:	00 2c 00 00 	l.j b04804 <__stack+0x684808>
    4808:	31 77 45 00 	.word 0x31774500
    480c:	00 04 24 17 	l.j 10d868 <__ram_length+0x8d868>
    4810:	02 7f 00 00 	l.j f9fc4810 <__stack+0xf9b44814>
    4814:	00 2c 00 00 	l.j b04814 <__stack+0x684818>
    4818:	31 95 3d 00 	.word 0x31953d00
    481c:	00 46 d7 00 	l.j 11ba41c <__stack+0xd3a420>
    4820:	40 61 9c 00 	.word 0x40619c00
    4824:	00 01 f0 17 	l.j 80880 <__ram_length+0x880>
    4828:	02 8d 00 00 	l.j fa344828 <__stack+0xf9ec482c>
    482c:	48 76 33 00 	l.jalr r6
    4830:	00 46 f5 33 	l.j 11c1cfc <__stack+0xd41d00>
    4834:	00 00 46 e9 	l.j 163d8 <__rom_size-0x3f74>
    4838:	3f 00 00 02 	.word 0x3f000002
    483c:	28 35 00 00 	.word 0x28350000
    4840:	47 01 00 00 	l.jr r0
    4844:	31 d4 35 00 	.word 0x31d43500
    4848:	00 47 0b 00 	l.j 11c7448 <__stack+0xd4744c>
    484c:	00 32 29 35 	l.j c8ed20 <__stack+0x80ed24>
    4850:	00 00 47 16 	l.j 164a8 <__rom_size-0x3ea4>
    4854:	00 00 32 6f 	l.j 11210 <__rom_size-0x913c>
    4858:	35 00 00 47 	.word 0x35000047
    485c:	21 00 00 32 	l.trap 0x32
    4860:	aa 35 00 00 	l.ori r17,r21,0x0
    4864:	47 2c 00 00 	l.jr r0
    4868:	32 da 5b 00 	.word 0x32da5b00
    486c:	00 47 37 5b 	l.j 11d25d8 <__stack+0xd525dc>
    4870:	00 00 47 41 	l.j 16574 <__rom_size-0x3dd8>
    4874:	00 00 59 00 	l.j 1ac74 <__rom_size+0x928>
    4878:	00 47 4e 00 	l.j 11d8078 <__stack+0xd5807c>
    487c:	40 68 48 00 	.word 0x40684800
    4880:	00 02 60 17 	l.j 9c8dc <__ram_length+0x1c8dc>
    4884:	02 a0 3f 00 	l.j fa814484 <__stack+0xfa394488>
    4888:	00 02 90 35 	l.j a895c <__ram_length+0x2895c>
    488c:	00 00 47 60 	l.j 1660c <__rom_size-0x3d40>
    4890:	00 00 33 15 	l.j 114e4 <__rom_size-0x8e68>
    4894:	35 00 00 47 	.word 0x35000047
    4898:	6a 00 00 33 	.word 0x6a000033
    489c:	75 5b 00 00 	l.cust2 
    48a0:	47 75 35 00 	l.jr r6
    48a4:	00 47 80 00 	l.j 11e48a4 <__stack+0xd648a8>
    48a8:	00 33 b4 35 	l.j cf197c <__stack+0x871980>
    48ac:	00 00 47 8b 	l.j 166d8 <__rom_size-0x3c74>
    48b0:	00 00 33 c7 	l.j 117cc <__rom_size-0x8b80>
    48b4:	35 00 00 47 	.word 0x35000047
    48b8:	96 00 00 33 	l.lhz r16,0x33(r0)
    48bc:	da 35 00 00 	l.sb 0xffff8800(r21),r0
    48c0:	47 a0 00 00 	l.jr r0
    48c4:	33 ef 5b 00 	.word 0x33ef5b00
    48c8:	00 47 aa 5b 	l.j 11ef234 <__stack+0xd6f238>
    48cc:	00 00 47 b4 	l.j 1679c <__rom_size-0x3bb0>
    48d0:	00 00 00 07 	l.j 48ec <__rom_size-0x15a60>
    48d4:	04 00 00 0d 	l.jal 4908 <__rom_size-0x15a44>
    48d8:	2b 37 00 00 	.word 0x2b370000
    48dc:	01 c6 17 01 	l.j 718a4e0 <__stack+0x6d0a4e4>
    48e0:	39 01 00 00 	.word 0x39010000
    48e4:	00 2c 00 40 	l.j b049e4 <__stack+0x6849e8>
    48e8:	6d 68 00 40 	.word 0x6d680040
    48ec:	6e 9c 00 00 	.word 0x6e9c0000
    48f0:	34 af 00 00 	.word 0x34af0000
    48f4:	49 51 48 00 	l.jalr r9
    48f8:	00 15 98 17 	l.j 56a954 <__stack+0xea958>
    48fc:	01 39 00 00 	l.j 4e448fc <__stack+0x49c4900>
    4900:	48 d3 00 00 	l.jalr r0
    4904:	34 cf 41 63 	.word 0x34cf4163
    4908:	31 00 17 01 	.word 0x31001701
    490c:	3e 00 00 00 	.word 0x3e000000
    4910:	2c 00 00 34 	.word 0x2c000034
    4914:	ed 41 63 32 	.word 0xed416332
    4918:	00 17 01 3e 	l.j 5c4e10 <__stack+0x144e14>
    491c:	00 00 00 2c 	l.j 49cc <__rom_size-0x15980>
    4920:	00 00 35 00 	l.j 11d20 <__rom_size-0x862c>
    4924:	41 63 33 00 	.word 0x41633300
    4928:	17 01 3e 00 	.word 0x17013e00
    492c:	00 00 2c 00 	l.j f92c <__rom_size-0xaa20>
    4930:	00 35 13 41 	l.j d49634 <__stack+0x8c9638>
    4934:	63 34 00 17 	.word 0x63340017
    4938:	01 3e 00 00 	l.j 4f84938 <__stack+0x4b0493c>
    493c:	00 2c 00 00 	l.j b0493c <__stack+0x684940>
    4940:	35 31 41 6e 	.word 0x3531416e
    4944:	00 17 01 3f 	l.j 5c4e40 <__stack+0x144e44>
    4948:	00 00 00 3a 	l.j 4a30 <__rom_size-0x1591c>
    494c:	00 00 35 4f 	l.j 11e88 <__rom_size-0x84c4>
    4950:	00 37 00 00 	l.j dc4950 <__stack+0x944954>
    4954:	18 f5 0d 06 	.word 0x18f50d06
    4958:	21 01 00 00 	.word 0x21010000
    495c:	00 2c 00 40 	l.j b04a5c <__stack+0x684a60>
    4960:	6e 9c 00 40 	.word 0x6e9c0040
    4964:	70 88 00 00 	l.cust1 
    4968:	35 62 00 00 	.word 0x35620000
    496c:	49 da 48 00 	l.jalr r9
    4970:	00 17 e9 0d 	l.j 5feda4 <__stack+0x17eda8>
    4974:	06 21 00 00 	l.jal f8844974 <__stack+0xf83c4978>
    4978:	40 5e 00 00 	.word 0x405e0000
    497c:	35 82 45 00 	.word 0x35824500
    4980:	00 00 1c 0d 	l.j b9b4 <__rom_size-0xe998>
    4984:	06 25 00 00 	l.jal f8944984 <__stack+0xf84c4988>
    4988:	36 63 00 00 	.word 0x36630000
    498c:	35 ab 43 00 	.word 0x35ab4300
    4990:	00 02 c0 00 	l.j b4990 <__ram_length+0x34990>
    4994:	00 49 a7 41 	l.j 126e698 <__stack+0xdee69c>
    4998:	5f 78 00 0d 	.word 0x5f78000d
    499c:	06 32 00 00 	l.jal f8c8499c <__stack+0xf88049a0>
    49a0:	00 74 00 00 	l.j 1d049a0 <__stack+0x18849a4>
    49a4:	35 ce 00 44 	.word 0x35ce0044
    49a8:	00 40 6f 9c 	l.j 1020818 <__stack+0xba081c>
    49ac:	00 40 6f c8 	l.j 10208cc <__stack+0xba08d0>
    49b0:	00 00 49 c4 	l.j 170c0 <__rom_size-0x328c>
    49b4:	41 5f 78 00 	.word 0x415f7800
    49b8:	0d 06 35 00 	l.bnf 4191db8 <__stack+0x3d11dbc>
    49bc:	00 00 74 00 	l.j 219bc <__rom_size+0x7670>
    49c0:	00 35 e2 00 	l.j d7d1c0 <__stack+0x8fd1c4>
    49c4:	3f 00 00 02 	.word 0x3f000002
    49c8:	e8 41 5f 78 	.word 0xe8415f78
    49cc:	00 0d 06 3c 	l.j 3462bc <__ram_length+0x2c62bc>
    49d0:	00 00 00 74 	l.j 4ba0 <__rom_size-0x157ac>
    49d4:	00 00 35 f6 	l.j 121ac <__rom_size-0x81a0>
    49d8:	00 00 37 00 	l.j 125d8 <__rom_size-0x7d74>
    49dc:	00 0a 28 0d 	l.j 28ea10 <__ram_length+0x20ea10>
    49e0:	05 7a 01 00 	l.jal 5e84de0 <__stack+0x5a04de4>
    49e4:	00 00 2c 00 	l.j f9e4 <__rom_size-0xa968>
    49e8:	40 70 88 00 	.word 0x40708800
    49ec:	40 75 d0 00 	.word 0x4075d000
    49f0:	00 36 09 00 	l.j d86df0 <__stack+0x906df4>
    49f4:	00 4b 62 48 	l.j 12dd314 <__stack+0xe5d318>
    49f8:	00 00 02 83 	l.j 5404 <__rom_size-0x14f48>
    49fc:	0d 05 7a 00 	l.bnf 41631fc <__stack+0x3ce3200>
    4a00:	00 00 74 00 	l.j 21a00 <__rom_size+0x76b4>
    4a04:	00 36 29 48 	l.j d8ef24 <__stack+0x90ef28>
    4a08:	00 00 17 e9 	l.j a9ac <__rom_size-0xf9a0>
    4a0c:	0d 05 7a 00 	l.bnf 416320c <__stack+0x3ce3210>
    4a10:	00 40 5e 00 	l.j 101c210 <__stack+0xb9c214>
    4a14:	00 36 52 45 	l.j d99328 <__stack+0x91932c>
    4a18:	00 00 00 1c 	l.j 4a88 <__rom_size-0x158c4>
    4a1c:	0d 05 87 00 	l.bnf 416661c <__stack+0x3ce6620>
    4a20:	00 36 63 00 	l.j d9d620 <__stack+0x91d624>
    4a24:	00 36 70 45 	l.j da0b38 <__stack+0x920b3c>
    4a28:	00 00 09 7d 	l.j 701c <__rom_size-0x13330>
    4a2c:	0d 05 88 00 	l.bnf 4166a2c <__stack+0x3ce6a30>
    4a30:	00 00 74 00 	l.j 21a30 <__rom_size+0x76e4>
    4a34:	00 36 cb 45 	l.j db7748 <__stack+0x93774c>
    4a38:	00 00 14 01 	l.j 9a3c <__rom_size-0x10910>
    4a3c:	0d 05 89 00 	l.bnf 4166e3c <__stack+0x3ce6e40>
    4a40:	00 00 74 00 	l.j 21a40 <__rom_size+0x76f4>
    4a44:	00 37 31 45 	l.j dd0f58 <__stack+0x950f5c>
    4a48:	00 00 01 4c 	l.j 4f78 <__rom_size-0x153d4>
    4a4c:	0d 05 8a 00 	l.bnf 416724c <__stack+0x3ce7250>
    4a50:	00 00 74 00 	l.j 21a50 <__rom_size+0x7704>
    4a54:	00 37 8a 45 	l.j de7368 <__stack+0x96736c>
    4a58:	00 00 16 a6 	l.j a4f0 <__rom_size-0xfe5c>
    4a5c:	0d 05 8b 00 	l.bnf 416765c <__stack+0x3ce7660>
    4a60:	00 00 74 00 	l.j 21a60 <__rom_size+0x7714>
    4a64:	00 37 b4 34 	l.j df1b34 <__stack+0x971b38>
    4a68:	00 40 71 ac 	l.j 1021118 <__stack+0xba111c>
    4a6c:	00 40 74 f0 	l.j 1021e2c <__stack+0xba1e30>
    4a70:	45 00 00 0a 	l.jr r0
    4a74:	0f 0d 05 ad 	l.bnf fc346128 <__stack+0xfbec612c>
    4a78:	00 00 00 74 	l.j 4c48 <__rom_size-0x15704>
    4a7c:	00 00 37 dd 	l.j 129f0 <__rom_size-0x795c>
    4a80:	45 00 00 0b 	l.jr r0
    4a84:	b9 0d 05 ae 	l.srai r8,r13,0x2e
    4a88:	00 00 00 74 	l.j 4c58 <__rom_size-0x156f4>
    4a8c:	00 00 38 12 	l.j 12ad4 <__rom_size-0x7878>
    4a90:	3f 00 00 03 	.word 0x3f000003
    4a94:	00 45 00 00 	l.j 1144a94 <__stack+0xcc4a98>
    4a98:	0b a1 0d 05 	.word 0x0ba10d05
    4a9c:	bd 00 00 00 	.word 0xbd000000
    4aa0:	74 00 00 38 	l.cust2 
    4aa4:	69 34 00 40 	.word 0x69340040
    4aa8:	72 94 00 40 	l.cust1 
    4aac:	74 c0 45 00 	l.cust2 
    4ab0:	00 0f 3b 0d 	l.j 3d36e4 <__ram_length+0x3536e4>
    4ab4:	05 c3 00 00 	l.jal 70c4ab4 <__stack+0x6c44ab8>
    4ab8:	00 74 00 00 	l.j 1d04ab8 <__stack+0x1884abc>
    4abc:	38 87 41 69 	.word 0x38874169
    4ac0:	00 0d 05 d6 	l.j 346218 <__ram_length+0x2c6218>
    4ac4:	00 00 00 74 	l.j 4c94 <__rom_size-0x156b8>
    4ac8:	00 00 38 9a 	l.j 12d30 <__rom_size-0x761c>
    4acc:	5a 00 00 24 	.word 0x5a000024
    4ad0:	ae 00 40 73 	l.xori r16,r0,0x4073
    4ad4:	bc 00 40 73 	l.sfeqi r0,0x4073
    4ad8:	d0 0d 05 e1 	l.sd 0x5e1(r13),r0
    4adc:	00 00 4b 0f 	l.j 17718 <__rom_size-0x2c34>
    4ae0:	3e 00 00 24 	.word 0x3e000024
    4ae4:	d3 00 00 38 	l.sd 0xffffc038(r0),r0
    4ae8:	b8 3e 00 00 	l.slli r1,r30,0x0
    4aec:	24 ca 00 00 	l.rfe 
    4af0:	38 cd 3e 00 	.word 0x38cd3e00
    4af4:	00 24 bf 00 	l.j 9346f4 <__stack+0x4b46f8>
    4af8:	00 38 e1 34 	l.j e3cfc8 <__stack+0x9bcfcc>
    4afc:	00 40 73 bc 	l.j 10219ec <__stack+0xba19f0>
    4b00:	00 40 73 d0 	l.j 1021a40 <__stack+0xba1a44>
    4b04:	35 00 00 24 	.word 0x35000024
    4b08:	dc 00 00 38 	l.sh 0x38(r0),r0
    4b0c:	f4 00 00 43 	l.cust6 
    4b10:	00 00 03 20 	l.j 5790 <__rom_size-0x14bbc>
    4b14:	00 00 4b 28 	l.j 177b4 <__rom_size-0x2b98>
    4b18:	41 5f 78 00 	.word 0x415f7800
    4b1c:	0d 05 ef 00 	l.bnf 418071c <__stack+0x3d00720>
    4b20:	00 00 74 00 	l.j 21b20 <__rom_size+0x77d4>
    4b24:	00 39 1d 00 	l.j e4bf24 <__stack+0x9cbf28>
    4b28:	44 00 40 74 	l.jr r8
    4b2c:	30 00 40 74 	.word 0x30004074
    4b30:	3c 00 00 4b 	.word 0x3c00004b
    4b34:	45 41 5f 78 	l.jr r11
    4b38:	00 0d 05 f0 	l.j 3462f8 <__ram_length+0x2c62f8>
    4b3c:	00 00 00 74 	l.j 4d0c <__rom_size-0x15640>
    4b40:	00 00 39 30 	l.j 13000 <__rom_size-0x734c>
    4b44:	00 34 00 40 	l.j d04c44 <__stack+0x884c48>
    4b48:	74 44 00 40 	l.cust2 
    4b4c:	74 70 41 5f 	l.cust2 
    4b50:	78 00 0d 05 	l.cust3 
    4b54:	f1 00 00 00 	l.cust5 r8,r0,r0,0x0,0x0
    4b58:	74 00 00 39 	l.cust2 
    4b5c:	43 00 00 00 	.word 0x43000000
    4b60:	00 00 37 00 	l.j 12760 <__rom_size-0x7bec>
    4b64:	00 0b da 0d 	l.j 2fb398 <__ram_length+0x27b398>
    4b68:	02 5c 01 00 	l.j f9704f68 <__stack+0xf9284f6c>
    4b6c:	00 00 89 00 	l.j 26f6c <__rom_size+0xcc20>
    4b70:	40 75 d0 00 	.word 0x4075d000
    4b74:	40 92 14 00 	.word 0x40921400
    4b78:	00 39 57 00 	l.j e5a778 <__stack+0x9da77c>
    4b7c:	00 4d 68 48 	l.j 135ec9c <__stack+0xedeca0>
    4b80:	00 00 05 69 	l.j 6124 <__rom_size-0x14228>
    4b84:	0d 02 5c 00 	l.bnf 409bb84 <__stack+0x3c1bb88>
    4b88:	00 00 74 00 	l.j 21b88 <__rom_size+0x783c>
    4b8c:	00 39 78 48 	l.j e62cac <__stack+0x9e2cb0>
    4b90:	00 00 0b c6 	l.j 7aa8 <__rom_size-0x128a4>
    4b94:	0d 02 5c 00 	l.bnf 409bb94 <__stack+0x3c1bb98>
    4b98:	00 00 83 00 	l.j 25798 <__rom_size+0xb44c>
    4b9c:	00 39 a6 48 	l.j e6e4bc <__stack+0x9ee4c0>
    4ba0:	00 00 1b 75 	l.j b974 <__rom_size-0xe9d8>
    4ba4:	0d 02 5c 00 	l.bnf 409bba4 <__stack+0x3c1bba8>
    4ba8:	00 00 2c 00 	l.j fba8 <__rom_size-0xa7a4>
    4bac:	00 39 c6 45 	l.j e764c0 <__stack+0x9f64c4>
    4bb0:	00 00 00 1c 	l.j 4c20 <__rom_size-0x1572c>
    4bb4:	0d 02 60 00 	l.bnf 409cbb4 <__stack+0x3c1cbb8>
    4bb8:	00 36 63 00 	l.j d9d7b8 <__stack+0x91d7bc>
    4bbc:	00 3a 05 45 	l.j e860d0 <__stack+0xa060d4>
    4bc0:	00 00 09 7d 	l.j 71b4 <__rom_size-0x13198>
    4bc4:	0d 02 61 00 	l.bnf 409cfc4 <__stack+0x3c1cfc8>
    4bc8:	00 00 74 00 	l.j 21bc8 <__rom_size+0x787c>
    4bcc:	00 3a 4a 45 	l.j e974e0 <__stack+0xa174e4>
    4bd0:	00 00 14 01 	l.j 9bd4 <__rom_size-0x10778>
    4bd4:	0d 02 62 00 	l.bnf 409d3d4 <__stack+0x3c1d3d8>
    4bd8:	00 00 74 00 	l.j 21bd8 <__rom_size+0x788c>
    4bdc:	00 3a bd 45 	l.j eb40f0 <__stack+0xa340f4>
    4be0:	00 00 01 4c 	l.j 5110 <__rom_size-0x1523c>
    4be4:	0d 02 63 00 	l.bnf 409d7e4 <__stack+0x3c1d7e8>
    4be8:	00 00 74 00 	l.j 21be8 <__rom_size+0x789c>
    4bec:	00 3b 1b 45 	l.j ecb900 <__stack+0xa4b904>
    4bf0:	00 00 16 a6 	l.j a688 <__rom_size-0xfcc4>
    4bf4:	0d 02 64 00 	l.bnf 409dbf4 <__stack+0x3c1dbf8>
    4bf8:	00 00 74 00 	l.j 21bf8 <__rom_size+0x78ac>
    4bfc:	00 3b 54 41 	l.j ed9d00 <__stack+0xa59d04>
    4c00:	69 00 0d 02 	.word 0x69000d02
    4c04:	65 00 00 00 	.word 0x65000000
    4c08:	89 00 00 3b 	l.lws r8,0x3b(r0)
    4c0c:	69 41 78 00 	.word 0x69417800
    4c10:	0d 02 66 00 	l.bnf 409e410 <__stack+0x3c1e414>
    4c14:	00 00 2c 00 	l.j fc14 <__rom_size-0xa738>
    4c18:	00 3d 06 45 	l.j f4652c <__stack+0xac6530>
    4c1c:	00 00 17 19 	l.j a880 <__rom_size-0xfacc>
    4c20:	0d 02 67 00 	l.bnf 409e820 <__stack+0x3c1e824>
    4c24:	00 00 2c 00 	l.j fc24 <__rom_size-0xa728>
    4c28:	00 3d c0 41 	l.j f74d2c <__stack+0xaf4d30>
    4c2c:	72 63 00 0d 	l.cust1 
    4c30:	02 68 00 00 	l.j f9a04c30 <__stack+0xf9584c34>
    4c34:	00 89 00 00 	l.j 2244c34 <__stack+0x1dc4c38>
    4c38:	3e 70 45 00 	.word 0x3e704500
    4c3c:	00 17 e4 0d 	l.j 5fdc70 <__stack+0x17dc74>
    4c40:	02 69 00 00 	l.j f9a44c40 <__stack+0xf95c4c44>
    4c44:	00 89 00 00 	l.j 2244c44 <__stack+0x1dc4c48>
    4c48:	3e 91 45 00 	.word 0x3e914500
    4c4c:	00 15 9e 0d 	l.j 56c480 <__stack+0xec484>
    4c50:	02 6a 00 00 	l.j f9a84c50 <__stack+0xf9604c54>
    4c54:	00 89 00 00 	l.j 2244c54 <__stack+0x1dc4c58>
    4c58:	3e bf 45 00 	.word 0x3ebf4500
    4c5c:	00 08 ce 0d 	l.j 238490 <__ram_length+0x1b8490>
    4c60:	02 6b 00 00 	l.j f9ac4c60 <__stack+0xf9644c64>
    4c64:	00 89 00 00 	l.j 2244c64 <__stack+0x1dc4c68>
    4c68:	3e e0 45 00 	.word 0x3ee04500
    4c6c:	00 16 b4 0d 	l.j 5b1ca0 <__stack+0x131ca4>
    4c70:	02 6d 00 00 	l.j f9b44c70 <__stack+0xf96c4c74>
    4c74:	00 2c 00 00 	l.j b04c74 <__stack+0x684c78>
    4c78:	3f 84 45 00 	.word 0x3f844500
    4c7c:	00 1a ab 0d 	l.j 6af8b0 <__stack+0x22f8b4>
    4c80:	02 6e 00 00 	l.j f9b84c80 <__stack+0xf9704c84>
    4c84:	00 2c 00 00 	l.j b04c84 <__stack+0x684c88>
    4c88:	3f ae 45 00 	.word 0x3fae4500
    4c8c:	00 16 af 0d 	l.j 5b08c0 <__stack+0x1308c4>
    4c90:	02 6f 00 00 	l.j f9bc4c90 <__stack+0xf9744c94>
    4c94:	00 2c 00 00 	l.j b04c94 <__stack+0x684c98>
    4c98:	3f ee 45 00 	.word 0x3fee4500
    4c9c:	00 1a a6 0d 	l.j 6ae4d0 <__stack+0x22e4d4>
    4ca0:	02 70 00 00 	l.j f9c04ca0 <__stack+0xf9784ca4>
    4ca4:	00 2c 00 00 	l.j b04ca4 <__stack+0x684ca8>
    4ca8:	40 a7 41 70 	.word 0x40a74170
    4cac:	74 72 00 0d 	l.cust2 
    4cb0:	02 72 00 00 	l.j f9c84cb0 <__stack+0xf9804cb4>
    4cb4:	00 83 00 00 	l.j 20c4cb4 <__stack+0x1c44cb8>
    4cb8:	41 8c 54 6c 	.word 0x418c546c
    4cbc:	66 6e 00 0d 	.word 0x666e000d
    4cc0:	02 73 00 00 	l.j f9cc4cc0 <__stack+0xf9844cc4>
    4cc4:	02 c1 05 03 	l.j fb0460d0 <__stack+0xfabc60d4>
    4cc8:	00 42 0b b8 	l.j 1087ba8 <__stack+0xc07bac>
    4ccc:	45 00 00 0f 	l.jr r0
    4cd0:	25 0d 02 74 	l.rfe 
    4cd4:	00 00 00 2c 	l.j 4d84 <__rom_size-0x155c8>
    4cd8:	00 00 42 12 	l.j 15520 <__rom_size-0x4e2c>
    4cdc:	44 00 40 78 	l.jr r8
    4ce0:	cc 00 40 78 	.word 0xcc004078
    4ce4:	dc 00 00 4c 	l.sh 0x4c(r0),r0
    4ce8:	f9 41 5f 78 	l.cust7 
    4cec:	00 0d 02 c9 	l.j 345810 <__ram_length+0x2c5810>
    4cf0:	00 00 00 3a 	l.j 4dd8 <__rom_size-0x15574>
    4cf4:	00 00 42 33 	l.j 155c0 <__rom_size-0x4d8c>
    4cf8:	00 44 00 40 	l.j 1104df8 <__stack+0xc84dfc>
    4cfc:	78 e0 00 40 	l.cust3 
    4d00:	78 f0 00 00 	l.cust3 
    4d04:	4d 16 41 5f 	l.maci r22,0x415f
    4d08:	78 00 0d 02 	l.cust3 
    4d0c:	ca 00 00 00 	lf.add.s r16,r0,r0
    4d10:	3a 00 00 42 	.word 0x3a000042
    4d14:	46 00 44 00 	l.jr r8
    4d18:	40 78 f4 00 	.word 0x4078f400
    4d1c:	40 79 1c 00 	.word 0x40791c00
    4d20:	00 4d 33 41 	l.j 1351a24 <__stack+0xed1a28>
    4d24:	5f 78 00 0d 	.word 0x5f78000d
    4d28:	02 cb 00 00 	l.j fb2c4d28 <__stack+0xfae44d2c>
    4d2c:	00 74 00 00 	l.j 1d04d2c <__stack+0x1884d30>
    4d30:	42 59 00 44 	.word 0x42590044
    4d34:	00 40 8e 1c 	l.j 10285a4 <__stack+0xba85a8>
    4d38:	00 40 8f 04 	l.j 1028948 <__stack+0xba894c>
    4d3c:	00 00 4d 4f 	l.j 18278 <__rom_size-0x20d4>
    4d40:	41 6a 00 0d 	.word 0x416a000d
    4d44:	04 43 00 00 	l.jal 10c4d44 <__stack+0xc44d48>
    4d48:	00 2c 00 00 	l.j b04d48 <__stack+0x684d4c>
    4d4c:	42 6d 00 34 	.word 0x426d0034
    4d50:	00 40 8f 0c 	l.j 1028980 <__stack+0xba8984>
    4d54:	00 40 90 20 	l.j 1028dd4 <__stack+0xba8dd8>
    4d58:	41 6a 00 0d 	.word 0x416a000d
    4d5c:	04 53 00 00 	l.jal 14c4d5c <__stack+0x1044d60>
    4d60:	00 2c 00 00 	l.j b04d60 <__stack+0x684d64>
    4d64:	42 80 00 00 	.word 0x42800000
    4d68:	46 00 00 02 	l.jr r0
    4d6c:	a7 10 84 01 	l.andi r24,r16,0x8401
    4d70:	00 40 92 14 	l.j 10295c0 <__stack+0xba95c4>
    4d74:	00 40 92 d0 	l.j 10298b4 <__stack+0xba98b8>
    4d78:	00 00 42 93 	l.j 157c4 <__rom_size-0x4b88>
    4d7c:	00 00 4d bd 	l.j 18470 <__rom_size-0x1edc>
    4d80:	38 00 00 0a 	.word 0x3800000a
    4d84:	ad 10 84 00 	l.xori r8,r16,0xffff8400
    4d88:	00 00 83 00 	l.j 25988 <__rom_size+0xb63c>
    4d8c:	00 42 b3 38 	l.j 10b1a6c <__stack+0xc31a70>
    4d90:	00 00 0b 40 	l.j 7a90 <__rom_size-0x128bc>
    4d94:	10 84 00 00 	l.bf 2104d94 <__stack+0x1c84d98>
    4d98:	00 2c 00 00 	l.j b04d98 <__stack+0x684d9c>
    4d9c:	42 e0 38 00 	.word 0x42e03800
    4da0:	00 0e b6 10 	l.j 3b25e0 <__ram_length+0x3325e0>
    4da4:	84 00 00 00 	l.lwz r0,0x0(r0)
    4da8:	2c 00 00 42 	.word 0x2c000042
    4dac:	f3 38 00 00 	l.cust5 r25,r24,r0,0x0,0x0
    4db0:	01 bb 10 84 	l.j 6ec8fc0 <__stack+0x6a48fc4>
    4db4:	00 00 00 2c 	l.j 4e64 <__rom_size-0x154e8>
    4db8:	00 00 43 06 	l.j 159d0 <__rom_size-0x497c>
    4dbc:	00 37 00 00 	l.j dc4dbc <__stack+0x944dc0>
    4dc0:	13 35 0d 01 	l.bf fcd481c4 <__stack+0xfc8c81c8>
    4dc4:	ae 01 00 00 	l.xori r16,r1,0x0
    4dc8:	00 2c 00 40 	l.j b04ec8 <__stack+0x684ecc>
    4dcc:	92 d0 00 40 	l.lbs r22,0x40(r16)
    4dd0:	95 a4 00 00 	l.lhz r13,0x0(r4)
    4dd4:	43 19 00 00 	.word 0x43190000
    4dd8:	4e ee 48 00 	l.maci r14,0x4800
    4ddc:	00 17 e9 0d 	l.j 5ff210 <__stack+0x17f214>
    4de0:	01 ae 00 00 	l.j 6b84de0 <__stack+0x6704de4>
    4de4:	40 5e 00 00 	.word 0x405e0000
    4de8:	43 39 48 00 	.word 0x43394800
    4dec:	00 1a a1 0d 	l.j 6ad220 <__stack+0x22d224>
    4df0:	01 ae 00 00 	l.j 6b84df0 <__stack+0x6704df4>
    4df4:	00 90 00 00 	l.j 2404df4 <__stack+0x1f84df8>
    4df8:	43 65 5c 00 	.word 0x43655c00
    4dfc:	00 02 83 0d 	l.j a5a30 <__ram_length+0x25a30>
    4e00:	01 b2 00 00 	l.j 6c84e00 <__stack+0x6804e04>
    4e04:	00 74 00 45 	l.j 1d04f18 <__stack+0x1884f1c>
    4e08:	00 00 00 1c 	l.j 4e78 <__rom_size-0x154d4>
    4e0c:	0d 01 b3 00 	l.bnf 4071a0c <__stack+0x3bf1a10>
    4e10:	00 36 63 00 	l.j d9da10 <__stack+0x91da14>
    4e14:	00 43 83 45 	l.j 10e5b28 <__stack+0xc65b2c>
    4e18:	00 00 09 7d 	l.j 740c <__rom_size-0x12f40>
    4e1c:	0d 01 b4 00 	l.bnf 4071e1c <__stack+0x3bf1e20>
    4e20:	00 00 74 00 	l.j 21e20 <__rom_size+0x7ad4>
    4e24:	00 43 d3 45 	l.j 10f9b38 <__stack+0xc79b3c>
    4e28:	00 00 14 01 	l.j 9e2c <__rom_size-0x10520>
    4e2c:	0d 01 b5 00 	l.bnf 407222c <__stack+0x3bf2230>
    4e30:	00 00 74 00 	l.j 21e30 <__rom_size+0x7ae4>
    4e34:	00 44 45 45 	l.j 1116348 <__stack+0xc9634c>
    4e38:	00 00 01 4c 	l.j 5368 <__rom_size-0x14fe4>
    4e3c:	0d 01 b6 00 	l.bnf 407263c <__stack+0x3bf2640>
    4e40:	00 00 74 00 	l.j 21e40 <__rom_size+0x7af4>
    4e44:	00 44 7d 45 	l.j 1124358 <__stack+0xca435c>
    4e48:	00 00 16 a6 	l.j a8e0 <__rom_size-0xfa6c>
    4e4c:	0d 01 b7 00 	l.bnf 4072a4c <__stack+0x3bf2a50>
    4e50:	00 00 74 00 	l.j 21e50 <__rom_size+0x7b04>
    4e54:	00 44 a7 44 	l.j 112eb64 <__stack+0xcaeb68>
    4e58:	00 40 94 00 	l.j 1029e58 <__stack+0xba9e5c>
    4e5c:	00 40 94 2c 	l.j 1029f0c <__stack+0xba9f10>
    4e60:	00 00 4e 74 	l.j 18830 <__rom_size-0x1b1c>
    4e64:	41 5f 78 00 	.word 0x415f7800
    4e68:	0d 01 dc 00 	l.bnf 407be68 <__stack+0x3bfbe6c>
    4e6c:	00 00 74 00 	l.j 21e6c <__rom_size+0x7b20>
    4e70:	00 44 ba 00 	l.j 1133670 <__stack+0xcb3674>
    4e74:	44 00 40 94 	l.jr r8
    4e78:	30 00 40 94 	.word 0x30004094
    4e7c:	44 00 00 4e 	l.jr r0
    4e80:	91 41 5f 78 	l.lbs r10,0x5f78(r1)
    4e84:	00 0d 01 df 	l.j 345600 <__ram_length+0x2c5600>
    4e88:	00 00 00 3a 	l.j 4f70 <__rom_size-0x153dc>
    4e8c:	00 00 44 ce 	l.j 161c4 <__rom_size-0x4188>
    4e90:	00 44 00 40 	l.j 1104f90 <__stack+0xc84f94>
    4e94:	94 5c 00 40 	l.lhz r2,0x40(r28)
    4e98:	94 6c 00 00 	l.lhz r3,0x0(r12)
    4e9c:	4e ae 41 5f 	l.maci r14,0x415f
    4ea0:	78 00 0d 01 	l.cust3 
    4ea4:	df 00 00 00 	l.sh 0xffffc000(r0),r0
    4ea8:	3a 00 00 44 	.word 0x3a000044
    4eac:	e1 00 49 00 	.word 0xe1004900
    4eb0:	00 24 ae 00 	l.j 9306b0 <__stack+0x4b06b4>
    4eb4:	40 95 58 00 	.word 0x40955800
    4eb8:	40 95 70 0d 	.word 0x4095700d
    4ebc:	01 fc 3e 00 	l.j 7f146bc <__stack+0x7a946c0>
    4ec0:	00 24 d3 00 	l.j 939ac0 <__stack+0x4b9ac4>
    4ec4:	00 44 f4 3e 	l.j 1141fbc <__stack+0xcc1fc0>
    4ec8:	00 00 24 ca 	l.j e1f0 <__rom_size-0xc15c>
    4ecc:	00 00 45 0a 	l.j 162f4 <__rom_size-0x4058>
    4ed0:	3e 00 00 24 	.word 0x3e000024
    4ed4:	bf 00 00 45 	.word 0xbf000045
    4ed8:	1e 34 00 40 	.word 0x1e340040
    4edc:	95 58 00 40 	l.lhz r10,0x40(r24)
    4ee0:	95 70 35 00 	l.lhz r11,0x3500(r16)
    4ee4:	00 24 dc 00 	l.j 93bee4 <__stack+0x4bbee8>
    4ee8:	00 45 3f 00 	l.j 1154ae8 <__stack+0xcd4aec>
    4eec:	00 00 31 00 	l.j 112ec <__rom_size-0x9060>
    4ef0:	00 0a d2 16 	l.j 2b9748 <__ram_length+0x239748>
    4ef4:	53 01 00 00 	.word 0x53010000
    4ef8:	00 41 00 40 	l.j 1044ff8 <__stack+0xbc4ffc>
    4efc:	95 a4 00 40 	l.lhz r13,0x40(r4)
    4f00:	95 e8 00 00 	l.lhz r15,0x0(r8)
    4f04:	45 5d 00 00 	l.jr r0
    4f08:	4f 38 38 00 	l.maci r24,0x3800
    4f0c:	00 17 e9 16 	l.j 5ff364 <__stack+0x17f368>
    4f10:	53 00 00 44 	.word 0x53000044
    4f14:	ec 00 00 45 	.word 0xec000045
    4f18:	7d 38 00 00 	l.cust4 
    4f1c:	14 f7 16 53 	.word 0x14f71653
    4f20:	00 00 00 90 	l.j 5160 <__rom_size-0x151ec>
    4f24:	00 00 45 9b 	l.j 16590 <__rom_size-0x3dbc>
    4f28:	39 00 00 03 	.word 0x39000003
    4f2c:	c0 16 57 00 	l.mtspr r22,r10,0x700
    4f30:	00 00 41 00 	l.j 15330 <__rom_size-0x501c>
    4f34:	00 45 ae 00 	l.j 1170734 <__stack+0xcf0738>
    4f38:	37 00 00 0a 	.word 0x3700000a
    4f3c:	57 0d 01 03 	.word 0x570d0103
    4f40:	01 00 00 00 	l.j 4004f40 <__stack+0x3b84f44>
    4f44:	2c 00 40 95 	.word 0x2c004095
    4f48:	e8 00 40 9d 	.word 0xe800409d
    4f4c:	78 00 00 45 	l.cust3 
    4f50:	cd 00 00 4f 	.word 0xcd00004f
    4f54:	88 34 00 40 	l.lws r1,0x40(r20)
    4f58:	96 b4 00 40 	l.lhz r21,0x40(r20)
    4f5c:	98 7c 41 6d 	l.lhs r3,0x416d(r28)
    4f60:	62 72 00 0d 	.word 0x6272000d
    4f64:	01 18 00 00 	l.j 4604f64 <__stack+0x4184f68>
    4f68:	4f 88 00 00 	l.maci r8,0x0
    4f6c:	45 ed 34 00 	l.jr r6
    4f70:	40 97 40 00 	.word 0x40974000
    4f74:	40 98 7c 41 	.word 0x40987c41
    4f78:	69 00 0d 01 	.word 0x69000d01
    4f7c:	2e 00 00 00 	.word 0x2e000000
    4f80:	41 00 00 46 	.word 0x41000046
    4f84:	05 00 00 00 	l.jal 4004f84 <__stack+0x3b84f88>
    4f88:	07 04 00 00 	l.jal fc104f88 <__stack+0xfbc84f8c>
    4f8c:	0a 5b 31 00 	.word 0x0a5b3100
    4f90:	00 1b f2 15 	l.j 7017e4 <__stack+0x2817e8>
    4f94:	1c 01 00 00 	.word 0x1c010000
    4f98:	00 89 00 40 	l.j 2245098 <__stack+0x1dc509c>
    4f9c:	9d 78 00 40 	l.addi r11,r24,0x40
    4fa0:	a5 b0 00 00 	l.andi r13,r16,0x0
    4fa4:	46 3c 00 00 	l.jr r0
    4fa8:	50 61 38 00 	.word 0x50613800
    4fac:	00 1a a1 15 	l.j 6ad400 <__stack+0x22d404>
    4fb0:	1c 00 00 00 	.word 0x1c000000
    4fb4:	83 00 00 46 	l.ld r24,0x46(r0)
    4fb8:	5c 39 00 00 	.word 0x5c390000
    4fbc:	0f 0e 15 20 	l.bnf fc38a43c <__stack+0xfbf0a440>
    4fc0:	00 00 00 41 	l.j 50c4 <__rom_size-0x15288>
    4fc4:	00 00 46 7a 	l.j 169ac <__rom_size-0x39a0>
    4fc8:	3b 00 00 14 	.word 0x3b000014
    4fcc:	f7 15 21 00 	l.cust6 
    4fd0:	00 45 fb 02 	l.j 1183bd8 <__stack+0xd03bdc>
    4fd4:	91 48 44 00 	l.lbs r10,0x4400(r8)
    4fd8:	40 9e 10 00 	.word 0x409e1000
    4fdc:	40 9e 4c 00 	.word 0x409e4c00
    4fe0:	00 4f f1 2f 	l.j 140149c <__stack+0xf814a0>
    4fe4:	63 00 15 2b 	.word 0x6300152b
    4fe8:	00 00 00 41 	l.j 50ec <__rom_size-0x15260>
    4fec:	00 00 46 a8 	l.j 16a8c <__rom_size-0x38c0>
    4ff0:	00 34 00 40 	l.j d050f0 <__stack+0x8850f4>
    4ff4:	9e 8c 00 40 	l.addi r20,r12,0x40
    4ff8:	a5 54 2f 69 	l.andi r10,r20,0x2f69
    4ffc:	00 15 4b 00 	l.j 557bfc <__stack+0xd7c00>
    5000:	00 00 41 00 	l.j 15400 <__rom_size-0x4f4c>
    5004:	00 46 df 2f 	l.j 11bccc0 <__stack+0xd3ccc4>
    5008:	6a 00 15 4b 	.word 0x6a00154b
    500c:	00 00 00 41 	l.j 5110 <__rom_size-0x1523c>
    5010:	00 00 47 14 	l.j 16c60 <__rom_size-0x36ec>
    5014:	2f 61 64 72 	.word 0x2f616472
    5018:	00 15 4c 00 	l.j 558018 <__stack+0xd801c>
    501c:	00 00 48 00 	l.j 1701c <__rom_size-0x3330>
    5020:	00 47 33 39 	l.j 11d1d04 <__stack+0xd51d08>
    5024:	00 00 0a ba 	l.j 7b0c <__rom_size-0x12840>
    5028:	15 4c 00 00 	l.nop 0x0
    502c:	00 48 00 00 	l.j 120502c <__stack+0xd85030>
    5030:	47 5c 39 00 	l.jr r7
    5034:	00 16 e4 15 	l.j 5be088 <__stack+0x13e08c>
    5038:	4c 00 00 00 	l.maci r0,0x0
    503c:	48 00 00 47 	l.jalr r0
    5040:	6f 39 00 00 	.word 0x6f390000
    5044:	05 bc 15 4c 	l.jal 6f0a574 <__stack+0x6a8a578>
    5048:	00 00 00 48 	l.j 5168 <__rom_size-0x151e4>
    504c:	00 00 47 87 	l.j 16e68 <__rom_size-0x34e4>
    5050:	39 00 00 19 	.word 0x39000019
    5054:	05 15 4c 00 	l.jal 4558054 <__stack+0x40d8058>
    5058:	00 00 48 00 	l.j 17058 <__rom_size-0x32f4>
    505c:	00 47 9f 00 	l.j 11ecc5c <__stack+0xd6cc60>
    5060:	00 4c 00 00 	l.j 1305060 <__stack+0xe85064>
    5064:	0d 6a 0c 01 	l.bnf 5a88068 <__stack+0x560806c>
    5068:	90 01 00 40 	l.lbs r0,0x40(r1)
    506c:	a5 b0 00 40 	l.andi r13,r16,0x40
    5070:	a8 a8 00 00 	l.ori r5,r8,0x0
    5074:	47 be 00 00 	l.jr r0
    5078:	50 e7 4e 73 	.word 0x50e74e73
    507c:	74 72 00 0c 	l.cust2 
    5080:	01 90 00 00 	l.j 6405080 <__stack+0x5f85084>
    5084:	00 83 00 00 	l.j 20c5084 <__stack+0x1c45088>
    5088:	47 de 54 61 	l.jr r10
    508c:	64 72 00 0c 	.word 0x6472000c
    5090:	01 94 00 00 	l.j 6505090 <__stack+0x6085094>
    5094:	00 41 05 03 	l.j 10464a0 <__stack+0xbc64a4>
    5098:	00 41 a3 48 	l.j 106ddb8 <__stack+0xbeddbc>
    509c:	1b 62 75 66 	l.movhi r27,0x7566
    50a0:	00 0c 01 95 	l.j 3056f4 <__ram_length+0x2856f4>
    50a4:	00 00 50 e7 	l.j 19440 <__rom_size-0xf0c>
    50a8:	41 69 00 0c 	.word 0x4169000c
    50ac:	01 96 00 00 	l.j 65850ac <__stack+0x61050b0>
    50b0:	00 2c 00 00 	l.j b050b0 <__stack+0x6850b4>
    50b4:	47 fc 41 6a 	l.jr r8
    50b8:	00 0c 01 96 	l.j 305710 <__ram_length+0x285710>
    50bc:	00 00 00 2c 	l.j 516c <__rom_size-0x151e0>
    50c0:	00 00 48 26 	l.j 17158 <__rom_size-0x31f4>
    50c4:	1b 6c 65 6e 	l.movhi r27,0x656e
    50c8:	00 0c 01 97 	l.j 305724 <__ram_length+0x285724>
    50cc:	00 00 00 2c 	l.j 517c <__rom_size-0x151d0>
    50d0:	3f 00 00 03 	.word 0x3f000003
    50d4:	40 45 00 00 	.word 0x40450000
    50d8:	1a b9 0c 01 	.word 0x1ab90c01
    50dc:	a0 00 00 00 	l.addic r0,r0,0x0
    50e0:	41 00 00 48 	.word 0x41000048
    50e4:	3a 00 00 04 	.word 0x3a000004
    50e8:	00 00 00 89 	l.j 530c <__rom_size-0x15040>
    50ec:	00 00 50 f7 	l.j 194c8 <__rom_size-0xe84>
    50f0:	05 00 00 00 	l.jal 40050f0 <__stack+0x3b850f4>
    50f4:	74 01 00 46 	l.cust2 
    50f8:	00 00 00 dc 	l.j 5468 <__rom_size-0x14ee4>
    50fc:	18 47 01 00 	.word 0x18470100
    5100:	40 a8 a8 00 	.word 0x40a8a800
    5104:	40 a9 34 00 	.word 0x40a93400
    5108:	00 48 63 00 	l.j 121dd08 <__stack+0xd9dd0c>
    510c:	00 51 1f 38 	l.j 144cdec <__stack+0xfccdf0>
    5110:	00 00 0f 29 	l.j 8db4 <__rom_size-0x11598>
    5114:	18 47 00 00 	l.macrc r2
    5118:	00 74 00 00 	l.j 1d05118 <__stack+0x188511c>
    511c:	48 83 00 5d 	l.jalr r0
    5120:	00 00 25 c0 	l.j e820 <__rom_size-0xbb2c>
    5124:	00 40 a9 34 	l.j 102f5f4 <__stack+0xbaf5f8>
    5128:	00 40 a9 98 	l.j 102f788 <__stack+0xbaf78c>
    512c:	00 00 48 a1 	l.j 173b0 <__rom_size-0x2f9c>
    5130:	1d 00 00 13 	.word 0x1d000013
    5134:	f2 0f ae 01 	l.cust5 r16,r15,r21,0x30,0x1
    5138:	01 00 00 51 	l.j 400527c <__stack+0x3b85280>
    513c:	7a 2a 00 00 	l.cust3 
    5140:	0b 6f 0f ae 	.word 0x0b6f0fae
    5144:	00 00 51 7a 	l.j 1972c <__rom_size-0xc20>
    5148:	2a 00 00 04 	.word 0x2a000004
    514c:	91 0f ae 00 	l.lbs r8,0xffffae00(r15)
    5150:	00 00 2c 18 	l.j 101b0 <__rom_size-0xa19c>
    5154:	70 00 0f b2 	l.cust1 
    5158:	00 00 00 83 	l.j 5364 <__rom_size-0x14fe8>
    515c:	18 69 00 0f 	.word 0x1869000f
    5160:	b2 00 00 00 	l.muli r16,r0,0x0
    5164:	89 18 78 00 	l.lws r8,0x7800(r24)
    5168:	0f b2 00 00 	l.bnf fec85168 <__stack+0xfe80516c>
    516c:	00 89 23 00 	l.j 224dd6c <__stack+0x1dcdd70>
    5170:	00 00 f8 0f 	l.j 431ac <__rom_size+0x28e60>
    5174:	b3 00 00 00 	l.muli r24,r0,0x0
    5178:	74 00 07 04 	l.cust2 
    517c:	00 00 00 3a 	l.j 5264 <__rom_size-0x150e8>
    5180:	1d 00 00 0f 	.word 0x1d00000f
    5184:	b0 0f 51 01 	l.muli r0,r15,0x5101
    5188:	01 00 00 51 	l.j 40052cc <__stack+0x3b852d0>
    518c:	ca 2a 00 00 	lf.add.s r17,r10,r0
    5190:	04 91 0f 51 	l.jal 2448ed4 <__stack+0x1fc8ed8>
    5194:	00 00 00 41 	l.j 5298 <__rom_size-0x150b4>
    5198:	2a 00 00 18 	lv.all_lt.b r16,r0,r0
    519c:	c1 0f 51 00 	l.mtspr r15,r10,0x4100
    51a0:	00 00 41 18 	l.j 15600 <__rom_size-0x4d4c>
    51a4:	69 00 0f 55 	.word 0x69000f55
    51a8:	00 00 00 41 	l.j 52ac <__rom_size-0x150a0>
    51ac:	27 00 00 51 	l.rfe 
    51b0:	bd 18 72 64 	.word 0xbd187264
    51b4:	62 00 0f 60 	.word 0x62000f60
    51b8:	00 00 51 ca 	l.j 198e0 <__rom_size-0xa6c>
    51bc:	00 22 18 70 	l.j 88b37c <__stack+0x40b380>
    51c0:	62 00 0f 89 	.word 0x62000f89
    51c4:	00 00 51 d0 	l.j 19904 <__rom_size-0xa48>
    51c8:	00 00 07 04 	l.j 6dd8 <__rom_size-0x13574>
    51cc:	00 00 11 b0 	l.j 988c <__rom_size-0x10ac0>
    51d0:	07 04 00 00 	l.jal fc1051d0 <__stack+0xfbc851d4>
    51d4:	15 3a 5e 00 	l.nop 0x5e00
    51d8:	00 27 3c 00 	l.j 9d41d8 <__stack+0x5541dc>
    51dc:	40 a9 98 00 	.word 0x40a99800
    51e0:	40 c2 04 00 	.word 0x40c20400
    51e4:	00 48 c1 00 	l.j 12355e4 <__stack+0xdb55e8>
    51e8:	00 54 d1 3e 	l.j 15396e0 <__stack+0x10b96e4>
    51ec:	00 00 27 4a 	l.j ef14 <__rom_size-0xb438>
    51f0:	00 00 48 e2 	l.j 17578 <__rom_size-0x2dd4>
    51f4:	40 00 00 27 	.word 0x40000027
    51f8:	60 03 91 cc 	.word 0x600391cc
    51fc:	7b 40 00 00 	l.cust3 
    5200:	27 6b 02 91 	l.rfe 
    5204:	4c 35 00 00 	l.maci r21,0x0
    5208:	27 77 00 00 	l.rfe 
    520c:	48 f5 35 00 	l.jalr r6
    5210:	00 27 81 00 	l.j 9e5610 <__stack+0x565614>
    5214:	00 49 2d 35 	l.j 12506e8 <__stack+0xdd06ec>
    5218:	00 00 27 8d 	l.j f04c <__rom_size-0xb300>
    521c:	00 00 4a 85 	l.j 17c30 <__rom_size-0x271c>
    5220:	35 00 00 27 	.word 0x35000027
    5224:	99 00 00 4b 	l.lhs r8,0x4b(r0)
    5228:	7f 35 00 00 	l.cust4 
    522c:	27 a5 00 00 	l.rfe 
    5230:	4c e2 35 00 	l.maci r2,0x3500
    5234:	00 27 b1 00 	l.j 9f1634 <__stack+0x571638>
    5238:	00 4d 72 35 	l.j 1361b0c <__stack+0xee1b10>
    523c:	00 00 27 bd 	l.j f130 <__rom_size-0xb21c>
    5240:	00 00 4e 56 	l.j 18b98 <__rom_size-0x17b4>
    5244:	3d 00 00 51 	.word 0x3d000051
    5248:	30 00 40 aa 	.word 0x300040aa
    524c:	bc 00 00 03 	l.sfeqi r0,0x3
    5250:	70 0f 01 77 	l.cust1 
    5254:	00 00 52 cb 	l.j 19d80 <__rom_size-0x5cc>
    5258:	3e 00 00 51 	.word 0x3e000051
    525c:	48 00 00 4e 	l.jalr r0
    5260:	a0 3e 00 00 	l.addic r1,r30,0x0
    5264:	51 3d 00 00 	.word 0x513d0000
    5268:	4e b9 3f 00 	l.maci r25,0x3f00
    526c:	00 03 b0 35 	l.j f1340 <__ram_length+0x71340>
    5270:	00 00 51 53 	l.j 197bc <__rom_size-0xb90>
    5274:	00 00 4e cf 	l.j 18db0 <__rom_size-0x159c>
    5278:	5b 00 00 51 	.word 0x5b000051
    527c:	5c 35 00 00 	.word 0x5c350000
    5280:	51 65 00 00 	.word 0x51650000
    5284:	4f 8c 35 00 	l.maci r12,0x3500
    5288:	00 51 6e 00 	l.j 1460a88 <__stack+0xfe0a8c>
    528c:	00 4f aa 50 	l.j 13efbcc <__stack+0xf6fbd0>
    5290:	00 00 24 ae 	l.j e548 <__rom_size-0xbe04>
    5294:	00 40 aa bc 	l.j 102fd84 <__stack+0xbafd88>
    5298:	00 00 03 f0 	l.j 6258 <__rom_size-0x140f4>
    529c:	0f b5 3e 00 	l.bnf fed54a9c <__stack+0xfe8d4aa0>
    52a0:	00 24 d3 00 	l.j 939ea0 <__stack+0x4b9ea4>
    52a4:	00 4f c8 3e 	l.j 13f739c <__stack+0xf773a0>
    52a8:	00 00 24 ca 	l.j e5d0 <__rom_size-0xbd7c>
    52ac:	00 00 4f de 	l.j 19224 <__rom_size-0x1128>
    52b0:	3e 00 00 24 	.word 0x3e000024
    52b4:	bf 00 00 4f 	.word 0xbf00004f
    52b8:	f2 3f 00 00 	l.cust5 r17,r31,r0,0x0,0x0
    52bc:	04 08 35 00 	l.jal 2126bc <__ram_length+0x1926bc>
    52c0:	00 24 dc 00 	l.j 93c2c0 <__stack+0x4bc2c4>
    52c4:	00 50 08 00 	l.j 14072c4 <__stack+0xf872c8>
    52c8:	00 00 00 44 	l.j 53d8 <__rom_size-0x14f74>
    52cc:	00 40 ae f4 	l.j 1030e9c <__stack+0xbb0ea0>
    52d0:	00 40 b6 24 	l.j 1032b60 <__stack+0xbb2b64>
    52d4:	00 00 53 ac 	l.j 1a184 <__rom_size-0x1c8>
    52d8:	35 00 00 27 	.word 0x35000027
    52dc:	ce 00 00 50 	.word 0xce000050
    52e0:	34 5a 00 00 	.word 0x345a0000
    52e4:	26 f9 00 40 	l.rfe 
    52e8:	af 60 00 40 	l.xori r27,r0,0x40
    52ec:	af 94 0f 01 	l.xori r28,r20,0xf01
    52f0:	a2 00 00 53 	l.addic r16,r0,0x53
    52f4:	1a 3e 00 00 	l.movhi r17,0x0
    52f8:	27 2f 00 00 	l.rfe 
    52fc:	50 82 3e 00 	.word 0x50823e00
    5300:	00 27 23 00 	l.j 9cdf00 <__stack+0x54df04>
    5304:	00 50 9b 3e 	l.j 142bffc <__stack+0xfac000>
    5308:	00 00 27 17 	l.j ef64 <__rom_size-0xb3e8>
    530c:	00 00 50 b9 	l.j 195f0 <__rom_size-0xd5c>
    5310:	3e 00 00 27 	.word 0x3e000027
    5314:	0b 00 00 50 	.word 0x0b000050
    5318:	cc 00 3d 00 	.word 0xcc003d00
    531c:	00 51 80 00 	l.j 146531c <__stack+0xfe5320>
    5320:	40 b0 6c 00 	.word 0x40b06c00
    5324:	00 04 20 0f 	l.j 10d360 <__ram_length+0x8d360>
    5328:	01 bf 00 00 	l.j 6fc5328 <__stack+0x6b4532c>
    532c:	53 7a 3e 00 	.word 0x537a3e00
    5330:	00 51 98 00 	l.j 146b330 <__stack+0xfeb334>
    5334:	00 50 df 3e 	l.j 143d02c <__stack+0xfbd030>
    5338:	00 00 51 8d 	l.j 1996c <__rom_size-0x9e0>
    533c:	00 00 50 f2 	l.j 19704 <__rom_size-0xc48>
    5340:	3f 00 00 04 	.word 0x3f000004
    5344:	48 35 00 00 	l.jalr r0
    5348:	51 a3 00 00 	.word 0x51a30000
    534c:	51 05 44 00 	.word 0x51054400
    5350:	40 b1 90 00 	.word 0x40b19000
    5354:	40 b2 8c 00 	.word 0x40b28c00
    5358:	00 53 65 35 	l.j 14de82c <__stack+0x105e830>
    535c:	00 00 51 b1 	l.j 19a20 <__rom_size-0x92c>
    5360:	00 00 51 19 	l.j 197c4 <__rom_size-0xb88>
    5364:	00 34 00 40 	l.j d05464 <__stack+0x885468>
    5368:	b2 8c 00 40 	l.muli r20,r12,0x40
    536c:	b3 6c 35 00 	l.muli r27,r12,0x3500
    5370:	00 51 be 00 	l.j 1474b70 <__stack+0xff4b74>
    5374:	00 51 31 00 	l.j 1451774 <__stack+0xfd1778>
    5378:	00 00 59 00 	l.j 1b778 <__rom_size+0x142c>
    537c:	00 26 f9 00 	l.j 9c377c <__stack+0x543780>
    5380:	40 b5 00 00 	.word 0x40b50000
    5384:	00 04 70 0f 	l.j 1213c0 <__ram_length+0xa13c0>
    5388:	01 ec 3e 00 	l.j 7b14b88 <__stack+0x7694b8c>
    538c:	00 27 2f 00 	l.j 9d0f8c <__stack+0x550f90>
    5390:	00 51 49 33 	l.j 145785c <__stack+0xfd7860>
    5394:	00 00 27 23 	l.j f020 <__rom_size-0xb32c>
    5398:	3e 00 00 27 	.word 0x3e000027
    539c:	17 00 00 51 	.word 0x17000051
    53a0:	62 3e 00 00 	.word 0x623e0000
    53a4:	27 0b 00 00 	l.rfe 
    53a8:	51 75 00 00 	.word 0x51750000
    53ac:	44 00 40 b6 	l.jr r8
    53b0:	b0 00 40 ba 	l.muli r0,r0,0x40ba
    53b4:	a8 00 00 54 	l.ori r0,r0,0x54
    53b8:	44 35 00 00 	l.jr r0
    53bc:	27 e0 00 00 	l.rfe 
    53c0:	51 88 5a 00 	.word 0x51885a00
    53c4:	00 26 f9 00 	l.j 9c37c4 <__stack+0x5437c8>
    53c8:	40 b7 24 00 	.word 0x40b72400
    53cc:	40 b7 58 0f 	.word 0x40b7580f
    53d0:	02 29 00 00 	l.j f8a453d0 <__stack+0xf85c53d4>
    53d4:	53 fb 3e 00 	.word 0x53fb3e00
    53d8:	00 27 2f 00 	l.j 9d0fd8 <__stack+0x550fdc>
    53dc:	00 51 9b 3e 	l.j 146c0d4 <__stack+0xfec0d8>
    53e0:	00 00 27 23 	l.j f06c <__rom_size-0xb2e0>
    53e4:	00 00 51 b4 	l.j 19ab4 <__rom_size-0x898>
    53e8:	3e 00 00 27 	.word 0x3e000027
    53ec:	17 00 00 51 	.word 0x17000051
    53f0:	d2 3e 00 00 	l.sd 0xffff8800(r30),r0
    53f4:	27 0b 00 00 	l.rfe 
    53f8:	51 e5 00 34 	.word 0x51e50034
    53fc:	00 40 b9 1c 	l.j 103386c <__stack+0xbb3870>
    5400:	00 40 ba a8 	l.j 1033ea0 <__stack+0xbb3ea4>
    5404:	35 00 00 27 	.word 0x35000027
    5408:	ed 00 00 51 	.word 0xed000051
    540c:	f8 59 00 00 	l.cust7 
    5410:	26 f9 00 40 	l.rfe 
    5414:	b9 1c 00 00 	l.slli r8,r28,0x0
    5418:	04 88 0f 02 	l.jal 2209020 <__stack+0x1d89024>
    541c:	5c 3e 00 00 	.word 0x5c3e0000
    5420:	27 2f 00 00 	l.rfe 
    5424:	52 0b 3e 00 	.word 0x520b3e00
    5428:	00 27 23 00 	l.j 9ce028 <__stack+0x54e02c>
    542c:	00 52 24 3e 	l.j 148e524 <__stack+0x100e528>
    5430:	00 00 27 17 	l.j f08c <__rom_size-0xb2c0>
    5434:	00 00 52 42 	l.j 19d3c <__rom_size-0x610>
    5438:	3e 00 00 27 	.word 0x3e000027
    543c:	0b 00 00 52 	.word 0x0b000052
    5440:	55 00 00 00 	.word 0x55000000
    5444:	44 00 40 ba 	l.jr r8
    5448:	b0 00 40 bd 	l.muli r0,r0,0x40bd
    544c:	b8 00 00 54 	l.srli r0,r0,0x14
    5450:	8c 35 00 00 	l.lbz r1,0x0(r21)
    5454:	28 00 00 00 	.word 0x28000000
    5458:	52 68 59 00 	.word 0x52685900
    545c:	00 26 f9 00 	l.j 9c385c <__stack+0x543860>
    5460:	40 ba e4 00 	.word 0x40bae400
    5464:	00 04 a0 0f 	l.j 12d4a0 <__ram_length+0xad4a0>
    5468:	02 91 33 00 	l.j fa452068 <__stack+0xf9fd206c>
    546c:	00 27 2f 3e 	l.j 9d1164 <__stack+0x551168>
    5470:	00 00 27 23 	l.j f0fc <__rom_size-0xb250>
    5474:	00 00 52 91 	l.j 19eb8 <__rom_size-0x494>
    5478:	3e 00 00 27 	.word 0x3e000027
    547c:	17 00 00 52 	.word 0x17000052
    5480:	af 3e 00 00 	l.xori r25,r30,0x0
    5484:	27 0b 00 00 	l.rfe 
    5488:	52 c2 00 00 	.word 0x52c20000
    548c:	34 00 40 bd 	.word 0x340040bd
    5490:	c0 00 40 c1 	l.mtspr r0,r8,0xc1
    5494:	58 35 00 00 	.word 0x58350000
    5498:	28 0e 00 00 	.word 0x280e0000
    549c:	52 d5 59 00 	.word 0x52d55900
    54a0:	00 26 f9 00 	l.j 9c38a0 <__stack+0x5438a4>
    54a4:	40 bd f4 00 	.word 0x40bdf400
    54a8:	00 04 b8 0f 	l.j 1334e4 <__ram_length+0xb34e4>
    54ac:	02 e4 33 00 	l.j fb9120ac <__stack+0xfb4920b0>
    54b0:	00 27 2f 3e 	l.j 9d11a8 <__stack+0x5511ac>
    54b4:	00 00 27 23 	l.j f140 <__rom_size-0xb20c>
    54b8:	00 00 52 fe 	l.j 1a0b0 <__rom_size-0x29c>
    54bc:	3e 00 00 27 	.word 0x3e000027
    54c0:	17 00 00 53 	.word 0x17000053
    54c4:	1c 3e 00 00 	.word 0x1c3e0000
    54c8:	27 0b 00 00 	l.rfe 
    54cc:	53 2f 00 00 	.word 0x532f0000
    54d0:	00 46 00 00 	l.j 11854d0 <__stack+0xd054d4>
    54d4:	17 91 18 5c 	.word 0x1791185c
    54d8:	01 00 40 c2 	l.j 40157e0 <__stack+0x3b957e4>
    54dc:	04 00 40 c3 	l.jal 157e8 <__rom_size-0x4b64>
    54e0:	90 00 00 53 	l.lbs r0,0x53(r0)
    54e4:	42 00 00 55 	.word 0x42000055
    54e8:	4a 2f 63 31 	l.jalr r12
    54ec:	00 18 60 00 	l.j 61d4ec <__stack+0x19d4f0>
    54f0:	00 00 2c 00 	l.j 104f0 <__rom_size-0x9e5c>
    54f4:	00 53 62 2f 	l.j 14dddb0 <__stack+0x105ddb4>
    54f8:	63 32 00 18 	.word 0x63320018
    54fc:	60 00 00 00 	.word 0x60000000
    5500:	2c 00 00 53 	.word 0x2c000053
    5504:	80 57 00 00 	l.ld r2,0x0(r23)
    5508:	28 1c 00 40 	lv.cmp_eq.b r0,r28,r0
    550c:	c2 9c 00 40 	l.mtspr r28,r0,0xa040
    5510:	c3 14 18 6c 	l.mtspr r20,r3,0xc06c
    5514:	00 00 55 3a 	l.j 1a9fc <__rom_size+0x6b0>
    5518:	3e 00 00 28 	.word 0x3e000028
    551c:	35 00 00 53 	.word 0x35000053
    5520:	93 3e 00 00 	l.lbs r25,0x0(r30)
    5524:	28 2a 00 00 	.word 0x282a0000
    5528:	53 a6 34 00 	.word 0x53a63400
    552c:	40 c2 9c 00 	.word 0x40c29c00
    5530:	40 c3 14 5b 	.word 0x40c3145b
    5534:	00 00 28 40 	l.j f634 <__rom_size-0xad18>
    5538:	00 00 5f 00 	l.j 1d138 <__rom_size+0x2dec>
    553c:	00 28 4d 00 	l.j a1893c <__stack+0x598940>
    5540:	40 c3 20 00 	.word 0x40c32000
    5544:	40 c3 7c 18 	.word 0x40c37c18
    5548:	6f 00 5e 00 	.word 0x6f005e00
    554c:	00 2c 79 00 	l.j b2394c <__stack+0x6a3950>
    5550:	40 c3 90 00 	.word 0x40c39000
    5554:	40 c4 1c 00 	.word 0x40c41c00
    5558:	00 53 c4 00 	l.j 14f6558 <__stack+0x107655c>
    555c:	00 55 6f 35 	l.j 1561230 <__stack+0x10e1234>
    5560:	00 00 2c 95 	l.j 107b4 <__rom_size-0x9b98>
    5564:	00 00 53 e4 	l.j 1a4f4 <__rom_size+0x1a8>
    5568:	60 00 00 2c 	.word 0x6000002c
    556c:	8a 01 00 31 	l.lws r16,0x31(r1)
    5570:	00 00 14 5a 	l.j a6d8 <__rom_size-0xfc74>
    5574:	13 8f 01 00 	l.bf fe3c5974 <__stack+0xfdf45978>
    5578:	00 00 41 00 	l.j 15978 <__rom_size-0x49d4>
    557c:	40 c4 1c 00 	.word 0x40c41c00
    5580:	40 c4 a8 00 	.word 0x40c4a800
    5584:	00 54 03 00 	l.j 1506184 <__stack+0x1086188>
    5588:	00 55 a8 2e 	l.j 156f640 <__stack+0x10ef644>
    558c:	63 00 13 8f 	.word 0x6300138f
    5590:	00 00 00 96 	l.j 57e8 <__rom_size-0x14b64>
    5594:	00 00 54 23 	l.j 1a620 <__rom_size+0x2d4>
    5598:	2f 72 65 74 	.word 0x2f726574
    559c:	00 13 91 00 	l.j 4e999c <__stack+0x699a0>
    55a0:	00 00 41 00 	l.j 159a0 <__rom_size-0x49ac>
    55a4:	00 54 36 00 	l.j 1512da4 <__stack+0x1092da8>
    55a8:	31 00 00 04 	.word 0x31000004
    55ac:	06 13 9c 01 	l.jal f84ec5b0 <__stack+0xf806c5b4>
    55b0:	00 00 00 41 	l.j 56b4 <__rom_size-0x14c98>
    55b4:	00 40 c4 a8 	l.j 1036854 <__stack+0xbb6858>
    55b8:	00 40 c4 e8 	l.j 1036958 <__stack+0xbb695c>
    55bc:	00 00 54 60 	l.j 1a73c <__rom_size+0x3f0>
    55c0:	00 00 55 ee 	l.j 1ad78 <__rom_size+0xa2c>
    55c4:	2e 73 00 13 	.word 0x2e730013
    55c8:	9c 00 00 55 	l.addi r0,r0,0x55
    55cc:	ee 00 00 54 	.word 0xee000054
    55d0:	80 2f 70 00 	l.ld r1,0x7000(r15)
    55d4:	13 9e 00 00 	l.bf fe7855d4 <__stack+0xfe3055d8>
    55d8:	00 90 00 00 	l.j 24055d8 <__stack+0x1f855dc>
    55dc:	54 93 2f 72 	.word 0x54932f72
    55e0:	65 74 00 13 	.word 0x65740013
    55e4:	9f 00 00 00 	l.addi r24,r0,0x0
    55e8:	41 00 00 54 	.word 0x41000054
    55ec:	b1 00 08 00 	l.muli r8,r0,0x800
    55f0:	00 00 90 61 	l.j 29774 <__rom_size+0xf428>
    55f4:	00 00 0f d8 	l.j 9554 <__rom_size-0x10df8>
    55f8:	13 a7 00 40 	l.bf fe9c56f8 <__stack+0xfe5456fc>
    55fc:	c4 e8 00 40 	.word 0xc4e80040
    5600:	c5 28 00 00 	.word 0xc5280000
    5604:	54 db 62 00 	.word 0x54db6200
    5608:	00 06 d8 13 	l.j 1bb654 <__ram_length+0x13b654>
    560c:	d5 00 00 00 	l.sw 0x4000(r0),r0
    5610:	41 01 00 00 	.word 0x41010000
    5614:	56 2c 18 72 	.word 0x562c1872
    5618:	78 00 13 d7 	l.cust3 
    561c:	00 00 00 89 	l.j 5840 <__rom_size-0x14b0c>
    5620:	18 72 65 74 	l.movhi r3,0x6574
    5624:	00 13 d8 00 	l.j 4fb624 <__stack+0x7b628>
    5628:	00 00 41 00 	l.j 15a28 <__rom_size-0x4924>
    562c:	1c 00 00 02 	.word 0x1c000002
    5630:	75 13 fe 01 	l.cust2 
    5634:	00 00 56 81 	l.j 1b038 <__rom_size+0xcec>
    5638:	1b 73 00 13 	.word 0x1b730013
    563c:	01 00 00 00 	l.j 400563c <__stack+0x3b85640>
    5640:	00 83 1b 61 	l.j 20cc3c4 <__stack+0x1c4c3c8>
    5644:	64 72 00 13 	.word 0x64720013
    5648:	01 01 00 00 	l.j 4045648 <__stack+0x3bc564c>
    564c:	00 41 1b 6c 	l.j 104c3fc <__stack+0xbcc400>
    5650:	65 6e 00 13 	.word 0x656e0013
    5654:	01 02 00 00 	l.j 4085654 <__stack+0x3c05658>
    5658:	00 41 1b 76 	l.j 104c430 <__stack+0xbcc434>
    565c:	61 6c 00 13 	.word 0x616c0013
    5660:	01 03 00 00 	l.j 40c5660 <__stack+0x3c45664>
    5664:	00 41 26 00 	l.j 104ee64 <__stack+0xbcee68>
    5668:	00 0f 01 13 	l.j 3c5ab4 <__ram_length+0x345ab4>
    566c:	01 04 00 00 	l.j 410566c <__stack+0x3c85670>
    5670:	16 02 22 26 	.word 0x16022226
    5674:	00 00 1a b9 	l.j c158 <__rom_size-0xe1f4>
    5678:	13 01 3e 00 	l.bf fc054e78 <__stack+0xfbbd4e7c>
    567c:	00 00 41 00 	l.j 15a7c <__rom_size-0x48d0>
    5680:	00 63 00 00 	l.j 18c5680 <__stack+0x1445684>
    5684:	13 c1 13 01 	l.bf ff04a288 <__stack+0xfebca28c>
    5688:	57 00 40 c5 	.word 0x570040c5
    568c:	28 00 40 ce 	lv.cust1 
    5690:	44 00 00 54 	l.jr r0
    5694:	fb 00 00 57 	l.cust7 
    5698:	41 41 63 6d 	.word 0x4141636d
    569c:	64 00 13 01 	.word 0x64001301
    56a0:	59 00 00 00 	.word 0x59000000
    56a4:	41 00 00 55 	.word 0x41000055
    56a8:	1b 41 72 78 	.word 0x1b417278
    56ac:	00 13 01 5a 	l.j 4c5c14 <__stack+0x45c18>
    56b0:	00 00 00 89 	l.j 58d4 <__rom_size-0x14a78>
    56b4:	00 00 55 53 	l.j 1ac00 <__rom_size+0x8b4>
    56b8:	3d 00 00 56 	.word 0x3d000056
    56bc:	06 00 40 c5 	l.jal f80159d0 <__stack+0xf7b959d4>
    56c0:	58 00 00 04 	.word 0x58000004
    56c4:	d0 13 01 60 	l.sd 0x160(r19),r0
    56c8:	00 00 56 e5 	l.j 1b25c <__rom_size+0xf10>
    56cc:	3f 00 00 04 	.word 0x3f000004
    56d0:	e8 35 00 00 	.word 0xe8350000
    56d4:	56 16 00 00 	.word 0x56160000
    56d8:	55 92 35 00 	.word 0x55923500
    56dc:	00 56 20 00 	l.j 158d6dc <__stack+0x110d6e0>
    56e0:	00 55 c6 00 	l.j 1576ee0 <__stack+0x10f6ee4>
    56e4:	00 59 00 00 	l.j 16456e4 <__stack+0x11c56e8>
    56e8:	56 2c 00 40 	.word 0x562c0040
    56ec:	c6 08 00 00 	.word 0xc6080000
    56f0:	05 00 13 01 	l.jal 400a2f4 <__stack+0x3b8a2f8>
    56f4:	61 3f 00 00 	.word 0x613f0000
    56f8:	05 18 35 00 	l.jal 4612af8 <__stack+0x4192afc>
    56fc:	00 56 38 00 	l.j 15936fc <__stack+0x1113700>
    5700:	00 56 0a 35 	l.j 1587fd4 <__stack+0x1107fd8>
    5704:	00 00 56 42 	l.j 1b00c <__rom_size+0xcc0>
    5708:	00 00 56 75 	l.j 1b0dc <__rom_size+0xd90>
    570c:	35 00 00 56 	.word 0x35000056
    5710:	5a 00 00 56 	.word 0x5a000056
    5714:	c5 5b 00 00 	.word 0xc55b0000
    5718:	56 66 5b 00 	.word 0x56665b00
    571c:	00 56 4e 64 	l.j 15990ac <__stack+0x11190b0>
    5720:	00 00 26 83 	l.j f12c <__rom_size-0xb220>
    5724:	00 40 c7 14 	l.j 1037374 <__stack+0xbb7378>
    5728:	00 40 c7 bc 	l.j 1037618 <__stack+0xbb761c>
    572c:	13 01 0a 3f 	l.bf fc048028 <__stack+0xfbbc802c>
    5730:	00 00 05 30 	l.j 6bf0 <__rom_size-0x1375c>
    5734:	35 00 00 56 	.word 0x35000056
    5738:	73 00 00 57 	l.cust1 
    573c:	09 00 00 00 	.word 0x09000000
    5740:	00 5e 00 00 	l.j 1785740 <__stack+0x1305744>
    5744:	2c 51 00 40 	.word 0x2c510040
    5748:	ce 44 00 40 	.word 0xce440040
    574c:	ce 84 00 00 	.word 0xce840000
    5750:	57 33 00 00 	.word 0x57330000
    5754:	57 8b 3e 00 	.word 0x578b3e00
    5758:	00 2c 6d 00 	l.j b20b58 <__stack+0x6a0b5c>
    575c:	00 57 53 51 	l.j 15da4a0 <__stack+0x115a4a4>
    5760:	00 00 2c 62 	l.j 108e8 <__rom_size-0x9a64>
    5764:	06 03 00 41 	l.jal f80c5868 <__stack+0xf7c4586c>
    5768:	cd 18 9f 32 	.word 0xcd189f32
    576c:	00 00 24 8a 	l.j e994 <__rom_size-0xb9b8>
    5770:	00 40 ce 58 	l.j 10390d0 <__stack+0xbb90d4>
    5774:	00 40 ce 68 	l.j 1039114 <__stack+0xbb9118>
    5778:	1a 09 60 00 	.word 0x1a096000
    577c:	00 24 a4 00 	l.j 92e77c <__stack+0x4ae780>
    5780:	3e 00 00 24 	.word 0x3e000024
    5784:	9b 00 00 57 	l.lhs r24,0x57(r0)
    5788:	71 00 00 5e 	l.cust1 
    578c:	00 00 2c 04 	l.j 1079c <__rom_size-0x9bb0>
    5790:	00 40 ce 84 	l.j 10391a0 <__stack+0xbb91a4>
    5794:	00 40 ce f0 	l.j 1039354 <__stack+0xbb9358>
    5798:	00 00 57 94 	l.j 1b5e8 <__rom_size+0x129c>
    579c:	00 00 57 f2 	l.j 1b764 <__rom_size+0x1418>
    57a0:	51 00 00 2c 	.word 0x5100002c
    57a4:	20 01 53 3e 	.word 0x2001533e
    57a8:	00 00 2c 2b 	l.j 10854 <__rom_size-0x9af8>
    57ac:	00 00 57 b4 	l.j 1b67c <__rom_size+0x1330>
    57b0:	35 00 00 2c 	.word 0x3500002c
    57b4:	34 00 00 57 	.word 0x34000057
    57b8:	c7 5b 00 00 	.word 0xc75b0000
    57bc:	2c 3d 35 00 	.word 0x2c3d3500
    57c0:	00 2c 46 00 	l.j b16fc0 <__stack+0x696fc4>
    57c4:	00 57 f2 51 	l.j 1602108 <__stack+0x118210c>
    57c8:	00 00 2c 15 	l.j 1081c <__rom_size-0x9b30>
    57cc:	06 03 00 41 	l.jal f80c58d0 <__stack+0xf7c458d4>
    57d0:	cd 18 9f 32 	.word 0xcd189f32
    57d4:	00 00 24 8a 	l.j e9fc <__rom_size-0xb950>
    57d8:	00 40 ce 94 	l.j 1039228 <__stack+0xbb922c>
    57dc:	00 40 ce b0 	l.j 103929c <__stack+0xbb92a0>
    57e0:	1b 09 33 00 	.word 0x1b093300
    57e4:	00 24 a4 3e 	l.j 92e8dc <__stack+0x4ae8e0>
    57e8:	00 00 24 9b 	l.j ea54 <__rom_size-0xb8f8>
    57ec:	00 00 58 05 	l.j 1b800 <__rom_size+0x14b4>
    57f0:	00 00 5e 00 	l.j 1cff0 <__rom_size+0x2ca4>
    57f4:	00 2b ca 00 	l.j af7ff4 <__stack+0x677ff8>
    57f8:	40 ce f0 00 	.word 0x40cef000
    57fc:	40 d1 0c 00 	.word 0x40d10c00
    5800:	00 58 18 00 	l.j 160b800 <__stack+0x118b804>
    5804:	00 58 30 35 	l.j 16118d8 <__stack+0x11918dc>
    5808:	00 00 2b ed 	l.j 107bc <__rom_size-0x9b90>
    580c:	00 00 58 38 	l.j 1b8ec <__rom_size+0x15a0>
    5810:	65 00 00 2b 	.word 0x6500002b
    5814:	e2 a0 00 66 	.word 0xe2a00066
    5818:	00 00 2b d7 	l.j 10774 <__rom_size-0x9bd8>
    581c:	00 08 00 00 	l.j 20581c <__ram_length+0x18581c>
    5820:	3f 00 00 05 	.word 0x3f000005
    5824:	48 35 00 00 	l.jalr r0
    5828:	2b f7 00 00 	.word 0x2bf70000
    582c:	58 57 00 00 	.word 0x58570000
    5830:	5e 00 00 2b 	.word 0x5e00002b
    5834:	ab 00 40 d1 	l.ori r24,r0,0x40d1
    5838:	0c 00 40 d1 	l.bnf 15b7c <__rom_size-0x47d0>
    583c:	3c 00 00 58 	.word 0x3c000058
    5840:	95 00 00 58 	l.lhz r8,0x58(r0)
    5844:	52 51 00 00 	.word 0x52510000
    5848:	2b bd 06 03 	.word 0x2bbd0603
    584c:	00 41 cd 40 	l.j 1078d4c <__stack+0xbf8d50>
    5850:	9f 00 1f 00 	l.addi r24,r0,0x1f00
    5854:	00 03 a1 15 	l.j edca8 <__ram_length+0x6dca8>
    5858:	01 d6 01 01 	l.j 7585c5c <__stack+0x7105c60>
    585c:	00 00 58 6d 	l.j 1ba10 <__rom_size+0x16c4>
    5860:	20 00 00 10 	l.sys 0x10
    5864:	f7 15 01 d6 	l.cust6 
    5868:	00 00 00 89 	l.j 5a8c <__rom_size-0x148c0>
    586c:	00 62 00 00 	l.j 188586c <__stack+0x1405870>
    5870:	18 ce 15 fa 	l.movhi r6,0x15fa
    5874:	00 00 00 89 	l.j 5a98 <__rom_size-0x148b4>
    5878:	01 00 00 58 	l.j 40059d8 <__stack+0x3b859dc>
    587c:	d5 18 69 00 	l.sw 0x4100(r24),r13
    5880:	15 fe 00 00 	l.nop 0x0
    5884:	00 41 18 6a 	l.j 104ba2c <__stack+0xbcba30>
    5888:	00 15 fe 00 	l.j 585088 <__stack+0x10508c>
    588c:	00 00 41 18 	l.j 15cec <__rom_size-0x4660>
    5890:	61 64 72 00 	.word 0x61647200
    5894:	15 ff 00 00 	l.nop 0x0
    5898:	00 48 23 00 	l.j 120e498 <__stack+0xd8e49c>
    589c:	00 0a ba 15 	l.j 2b40f0 <__ram_length+0x2340f0>
    58a0:	ff 00 00 00 	l.cust8 
    58a4:	48 23 00 00 	l.jalr r0
    58a8:	16 e4 15 ff 	.word 0x16e415ff
    58ac:	00 00 00 48 	l.j 59cc <__rom_size-0x14980>
    58b0:	23 00 00 05 	.word 0x23000005
    58b4:	bc 15 ff 00 	l.sfeqi r21,0xffffff00
    58b8:	00 00 48 23 	l.j 17944 <__rom_size-0x2a08>
    58bc:	00 00 19 05 	l.j bcd0 <__rom_size-0xe67c>
    58c0:	15 ff 00 00 	l.nop 0x0
    58c4:	00 48 22 26 	l.j 120e15c <__stack+0xd8e160>
    58c8:	00 00 13 21 	l.j a54c <__rom_size-0xfe00>
    58cc:	15 01 42 00 	l.nop 0x4200
    58d0:	00 58 d5 00 	l.j 163acd0 <__stack+0x11bacd4>
    58d4:	00 07 04 00 	l.j 1c68d4 <__ram_length+0x1468d4>
    58d8:	00 58 db 67 	l.j 163c674 <__stack+0x11bc678>
    58dc:	00 00 09 59 	l.j 7e40 <__rom_size-0x1250c>
    58e0:	1c 00 00 16 	.word 0x1c000016
    58e4:	6d 15 cc 01 	.word 0x6d15cc01
    58e8:	00 00 59 01 	l.j 1bcec <__rom_size+0x19a0>
    58ec:	18 69 00 15 	.word 0x18690015
    58f0:	d0 00 00 00 	l.sd 0x0(r0),r0
    58f4:	41 23 00 00 	.word 0x41230000
    58f8:	13 21 15 d1 	l.bf fc84b03c <__stack+0xfc3cb040>
    58fc:	00 00 58 d5 	l.j 1bc50 <__rom_size+0x1904>
    5900:	00 5e 00 00 	l.j 1785900 <__stack+0x1305904>
    5904:	2b 2f 00 40 	lv.cmp_eq.b r25,r15,r0
    5908:	d1 3c 00 40 	l.sd 0x4840(r28),r0
    590c:	e4 64 00 00 	l.sfgeu r4,r0
    5910:	58 b5 00 00 	.word 0x58b50000
    5914:	5a 4f 35 00 	.word 0x5a4f3500
    5918:	00 2b 5d 00 	l.j adcd18 <__stack+0x65cd1c>
    591c:	00 58 d5 35 	l.j 163adf0 <__stack+0x11badf4>
    5920:	00 00 2b 69 	l.j 106c4 <__rom_size-0x9c88>
    5924:	00 00 59 23 	l.j 1bdb0 <__rom_size+0x1a64>
    5928:	35 00 00 2b 	.word 0x3500002b
    592c:	75 00 00 59 	l.cust2 
    5930:	4f 51 00 00 	l.maci r17,0x0
    5934:	2b 41 06 03 	.word 0x2b410603
    5938:	00 41 cd 40 	l.j 1078e38 <__stack+0xbf8e3c>
    593c:	9f 40 00 00 	l.addi r26,r0,0x0
    5940:	2b 4d 05 03 	.word 0x2b4d0503
    5944:	00 41 74 14 	l.j 1062994 <__stack+0xbe2998>
    5948:	43 00 00 05 	.word 0x43000005
    594c:	70 00 00 59 	l.cust1 
    5950:	5b 35 00 00 	.word 0x5b350000
    5954:	2b 82 00 00 	.word 0x2b820000
    5958:	59 62 00 5a 	.word 0x5962005a
    595c:	00 00 24 ae 	l.j ec14 <__rom_size-0xb738>
    5960:	00 40 d2 9c 	l.j 103a3d0 <__stack+0xbba3d4>
    5964:	00 40 d2 bc 	l.j 103a454 <__stack+0xbba458>
    5968:	15 01 b2 00 	l.nop 0xb200
    596c:	00 59 9e 3e 	l.j 166d264 <__stack+0x11ed268>
    5970:	00 00 24 d3 	l.j ecbc <__rom_size-0xb690>
    5974:	00 00 59 7a 	l.j 1bf5c <__rom_size+0x1c10>
    5978:	3e 00 00 24 	.word 0x3e000024
    597c:	ca 00 00 59 	.word 0xca000059
    5980:	8f 3e 00 00 	l.lbz r25,0x0(r30)
    5984:	24 bf 00 00 	l.rfe 
    5988:	59 a3 34 00 	.word 0x59a33400
    598c:	40 d2 9c 00 	.word 0x40d29c00
    5990:	40 d2 bc 35 	.word 0x40d2bc35
    5994:	00 00 24 dc 	l.j ed04 <__rom_size-0xb648>
    5998:	00 00 59 bb 	l.j 1c084 <__rom_size+0x1d38>
    599c:	00 00 59 00 	l.j 1bd9c <__rom_size+0x1a50>
    59a0:	00 58 52 00 	l.j 161a1a0 <__stack+0x119a1a4>
    59a4:	40 d3 b0 00 	.word 0x40d3b000
    59a8:	00 05 88 15 	l.j 1679fc <__ram_length+0xe79fc>
    59ac:	01 ce 3e 00 	l.j 73951ac <__stack+0x6f151b0>
    59b0:	00 58 60 00 	l.j 161d9b0 <__stack+0x119d9b4>
    59b4:	00 59 f7 49 	l.j 16836d8 <__stack+0x12036dc>
    59b8:	00 00 58 6d 	l.j 1bb6c <__rom_size+0x1820>
    59bc:	00 40 da 0c 	l.j 103c1ec <__stack+0xbbc1f0>
    59c0:	00 40 df b0 	l.j 103d880 <__stack+0xbbd884>
    59c4:	15 02 5f 34 	l.nop 0x5f34
    59c8:	00 40 da 0c 	l.j 103c1f8 <__stack+0xbbc1fc>
    59cc:	00 40 df b0 	l.j 103d88c <__stack+0xbbd890>
    59d0:	35 00 00 58 	.word 0x35000058
    59d4:	7d 00 00 5a 	l.cust4 
    59d8:	15 35 00 00 	l.nop 0x0
    59dc:	58 86 00 00 	.word 0x58860000
    59e0:	5a 4a 35 00 	.word 0x5a4a3500
    59e4:	00 58 8f 00 	l.j 16295e4 <__stack+0x11a95e8>
    59e8:	00 5a 5d 35 	l.j 169cebc <__stack+0x121cec0>
    59ec:	00 00 58 9a 	l.j 1bc54 <__rom_size+0x1908>
    59f0:	00 00 5a 8d 	l.j 1c424 <__rom_size+0x20d8>
    59f4:	35 00 00 58 	.word 0x35000058
    59f8:	bb 00 00 5a 	l.srli r24,r0,0x1a
    59fc:	a0 35 00 00 	l.addic r1,r21,0x0
    5a00:	58 a5 00 00 	.word 0x58a50000
    5a04:	5a bf 35 00 	.word 0x5abf3500
    5a08:	00 58 b0 00 	l.j 1631a08 <__stack+0x11b1a0c>
    5a0c:	00 5a d7 34 	l.j 16bb6dc <__stack+0x123b6e0>
    5a10:	00 40 da 2c 	l.j 103c2c0 <__stack+0xbbc2c4>
    5a14:	00 40 df b0 	l.j 103d8d4 <__stack+0xbbd8d8>
    5a18:	35 00 00 58 	.word 0x35000058
    5a1c:	c7 00 00 5a 	.word 0xc700005a
    5a20:	ef 59 00 00 	.word 0xef590000
    5a24:	58 e0 00 40 	.word 0x58e00040
    5a28:	db a0 00 00 	l.sb 0xffffe800(r0),r0
    5a2c:	05 a0 15 01 	l.jal 680ae30 <__stack+0x638ae34>
    5a30:	52 3f 00 00 	.word 0x523f0000
    5a34:	05 b8 35 00 	l.jal 6e12e34 <__stack+0x6992e38>
    5a38:	00 58 ec 00 	l.j 1640a38 <__stack+0x11c0a3c>
    5a3c:	00 5b 07 35 	l.j 16c7710 <__stack+0x1247714>
    5a40:	00 00 58 f5 	l.j 1be14 <__rom_size+0x1ac8>
    5a44:	00 00 5b 25 	l.j 1c6d8 <__rom_size+0x238c>
    5a48:	00 00 00 00 	l.j 5a48 <__rom_size-0x14904>
    5a4c:	00 00 00 46 	l.j 5b64 <__rom_size-0x147e8>
    5a50:	00 00 10 47 	l.j 9b6c <__rom_size-0x107e0>
    5a54:	17 b0 01 00 	.word 0x17b00100
    5a58:	40 e4 64 00 	.word 0x40e46400
    5a5c:	40 e9 f0 00 	.word 0x40e9f000
    5a60:	00 5b 3d 00 	l.j 16d4e60 <__stack+0x1254e64>
    5a64:	00 5b 46 38 	l.j 16d7344 <__stack+0x1257348>
    5a68:	00 00 15 98 	l.j b0c8 <__rom_size-0xf284>
    5a6c:	17 b0 00 00 	.word 0x17b00000
    5a70:	48 d3 00 00 	l.jalr r0
    5a74:	5b 5d 39 00 	.word 0x5b5d3900
    5a78:	00 05 42 17 	l.j 1562d4 <__ram_length+0xd62d4>
    5a7c:	b4 00 00 00 	l.mfspr r0,r0,0x0
    5a80:	2c 00 00 5b 	.word 0x2c00005b
    5a84:	7b 39 00 00 	l.cust3 
    5a88:	1c 2a 17 b5 	.word 0x1c2a17b5
    5a8c:	00 00 00 2c 	l.j 5b3c <__rom_size-0x14810>
    5a90:	00 00 5b d2 	l.j 1c9d8 <__rom_size+0x268c>
    5a94:	39 00 00 0b 	.word 0x3900000b
    5a98:	1f 17 b6 00 	.word 0x1f17b600
    5a9c:	00 00 2c 00 	l.j 10a9c <__rom_size-0x98b0>
    5aa0:	00 5b e5 39 	l.j 16fef84 <__stack+0x127ef88>
    5aa4:	00 00 14 92 	l.j acec <__rom_size-0xf660>
    5aa8:	17 b7 00 00 	.word 0x17b70000
    5aac:	00 3a 00 00 	l.j e85aac <__stack+0xa05ab0>
    5ab0:	5c 19 23 00 	.word 0x5c192300
    5ab4:	00 12 69 17 	l.j 49ff10 <__stack+0x1ff14>
    5ab8:	b8 00 00 00 	l.slli r0,r0,0x0
    5abc:	3a 3d 00 00 	.word 0x3a3d0000
    5ac0:	2a a5 00 40 	lv.cmp_eq.b r21,r5,r0
    5ac4:	e5 9c 00 00 	l.sflts r28,r0
    5ac8:	05 d0 17 01 	l.jal 740b6cc <__stack+0x6f8b6d0>
    5acc:	0d 00 00 5b 	l.bnf 4005c38 <__stack+0x3b85c3c>
    5ad0:	21 3e 00 00 	.word 0x213e0000
    5ad4:	2a de 00 00 	.word 0x2ade0000
    5ad8:	5c 46 33 00 	.word 0x5c463300
    5adc:	00 2a d3 3e 	l.j aba7d4 <__stack+0x63a7d8>
    5ae0:	00 00 2a c8 	l.j 10600 <__rom_size-0x9d4c>
    5ae4:	00 00 5c 59 	l.j 1cc48 <__rom_size+0x28fc>
    5ae8:	3e 00 00 2a 	.word 0x3e00002a
    5aec:	bd 00 00 5c 	.word 0xbd00005c
    5af0:	6c 3f 00 00 	.word 0x6c3f0000
    5af4:	05 f8 5b 00 	l.jal 7e1c6f4 <__stack+0x799c6f8>
    5af8:	00 2a e9 35 	l.j abffcc <__stack+0x63ffd0>
    5afc:	00 00 2a f4 	l.j 106cc <__rom_size-0x9c80>
    5b00:	00 00 5c 7f 	l.j 1ccfc <__rom_size+0x29b0>
    5b04:	35 00 00 2a 	.word 0x3500002a
    5b08:	fd 00 00 5c 	l.cust8 
    5b0c:	af 35 00 00 	l.xori r25,r21,0x0
    5b10:	2b 06 00 00 	.word 0x2b060000
    5b14:	5d 26 3e 00 	.word 0x5d263e00
    5b18:	00 2a b2 00 	l.j ab2318 <__stack+0x63231c>
    5b1c:	00 5d d8 00 	l.j 177bb1c <__stack+0x12fbb20>
    5b20:	00 49 00 00 	l.j 1245b20 <__stack+0xdc5b24>
    5b24:	28 57 00 40 	lv.cmp_eq.b r2,r23,r0
    5b28:	e9 20 00 40 	.word 0xe9200040
    5b2c:	e9 40 17 01 	.word 0xe9401701
    5b30:	10 34 00 40 	l.bf d05c30 <__stack+0x885c34>
    5b34:	e9 20 00 40 	.word 0xe9200040
    5b38:	e9 40 35 00 	.word 0xe9403500
    5b3c:	00 28 64 00 	l.j a1eb3c <__stack+0x59eb40>
    5b40:	00 5d f0 00 	l.j 1781b40 <__stack+0x1301b44>
    5b44:	00 00 5e 00 	l.j 1d344 <__rom_size+0x2ff8>
    5b48:	00 2a 7a 00 	l.j aa4348 <__stack+0x62434c>
    5b4c:	40 e9 f0 00 	.word 0x40e9f000
    5b50:	40 eb 34 00 	.word 0x40eb3400
    5b54:	00 5e 19 00 	l.j 178bf54 <__stack+0x130bf58>
    5b58:	00 5b 7b 51 	l.j 16e489c <__stack+0x12648a0>
    5b5c:	00 00 2a 8c 	l.j 1058c <__rom_size-0x9dc0>
    5b60:	06 03 00 41 	l.jal f80c5c64 <__stack+0xf7c45c68>
    5b64:	cb 80 9f 34 	.word 0xcb809f34
    5b68:	00 40 ea 24 	l.j 10403f8 <__stack+0xbc03fc>
    5b6c:	00 40 eb 1c 	l.j 10407dc <__stack+0xbc07e0>
    5b70:	35 00 00 2a 	.word 0x3500002a
    5b74:	99 00 00 5e 	l.lhs r8,0x5e(r0)
    5b78:	39 00 00 5e 	.word 0x3900005e
    5b7c:	00 00 2a 05 	l.j 10390 <__rom_size-0x9fbc>
    5b80:	00 40 eb 34 	l.j 1040850 <__stack+0xbc0854>
    5b84:	00 40 ee 44 	l.j 1041494 <__stack+0xbc1498>
    5b88:	00 00 5e 4c 	l.j 1d4b8 <__rom_size+0x316c>
    5b8c:	00 00 5b e3 	l.j 1cb18 <__rom_size+0x27cc>
    5b90:	3e 00 00 2a 	.word 0x3e00002a
    5b94:	13 00 00 5e 	l.bf fc005d0c <__stack+0xfbb85d10>
    5b98:	6c 3e 00 00 	.word 0x6c3e0000
    5b9c:	2a 1d 00 00 	.word 0x2a1d0000
    5ba0:	5e 7f 35 00 	.word 0x5e7f3500
    5ba4:	00 2a 35 00 	l.j a92fa4 <__stack+0x612fa8>
    5ba8:	00 5e 92 35 	l.j 17aa47c <__stack+0x132a480>
    5bac:	00 00 2a 3f 	l.j 104a8 <__rom_size-0x9ea4>
    5bb0:	00 00 5e de 	l.j 1d728 <__rom_size+0x33dc>
    5bb4:	68 00 00 2a 	.word 0x6800002a
    5bb8:	49 01 00 35 	l.jalr r0
    5bbc:	00 00 2a 55 	l.j 10510 <__rom_size-0x9e3c>
    5bc0:	00 00 5f 41 	l.j 1d8c4 <__rom_size+0x3578>
    5bc4:	35 00 00 2a 	.word 0x3500002a
    5bc8:	60 00 00 5f 	.word 0x6000005f
    5bcc:	75 60 00 00 	l.cust2 
    5bd0:	2a 29 01 3f 	.word 0x2a29013f
    5bd4:	00 00 06 20 	l.j 7454 <__rom_size-0x12ef8>
    5bd8:	35 00 00 2a 	.word 0x3500002a
    5bdc:	6d 00 00 5f 	.word 0x6d00005f
    5be0:	95 00 00 4c 	l.lhz r8,0x4c(r0)
    5be4:	00 00 14 9a 	l.j ae4c <__rom_size-0xf500>
    5be8:	12 03 e3 01 	l.bf f80fe7ec <__stack+0xf7c7e7f0>
    5bec:	00 40 ee 44 	l.j 10414fc <__stack+0xbc1500>
    5bf0:	00 40 f2 48 	l.j 1042510 <__stack+0xbc2514>
    5bf4:	00 00 5f d4 	l.j 1db44 <__rom_size+0x37f8>
    5bf8:	00 00 5d 06 	l.j 1d010 <__rom_size+0x2cc4>
    5bfc:	4e 6e 00 12 	l.maci r14,0x12
    5c00:	03 e3 00 00 	l.j ff8c5c00 <__stack+0xff445c04>
    5c04:	00 89 00 00 	l.j 2245c04 <__stack+0x1dc5c08>
    5c08:	5f f4 4e 73 	.word 0x5ff44e73
    5c0c:	74 72 00 12 	l.cust2 
    5c10:	03 e3 00 00 	l.j ff8c5c10 <__stack+0xff445c14>
    5c14:	00 90 00 00 	l.j 2405c14 <__stack+0x1f85c18>
    5c18:	60 07 4e 6c 	.word 0x60074e6c
    5c1c:	65 6e 00 12 	.word 0x656e0012
    5c20:	03 e3 00 00 	l.j ff8c5c20 <__stack+0xff445c24>
    5c24:	00 41 00 00 	l.j 1045c24 <__stack+0xbc5c28>
    5c28:	60 25 48 00 	.word 0x60254800
    5c2c:	00 0c 8e 12 	l.j 329474 <__ram_length+0x2a9474>
    5c30:	03 e3 00 00 	l.j ff8c5c30 <__stack+0xff445c34>
    5c34:	00 41 00 00 	l.j 1045c34 <__stack+0xbc5c38>
    5c38:	60 59 48 00 	.word 0x60594800
    5c3c:	00 0d a4 12 	l.j 36ec84 <__ram_length+0x2eec84>
    5c40:	03 e3 00 00 	l.j ff8c5c40 <__stack+0xff445c44>
    5c44:	00 2c 00 00 	l.j b05c44 <__stack+0x685c48>
    5c48:	60 8f 45 00 	.word 0x608f4500
    5c4c:	00 05 bc 12 	l.j 174c94 <__ram_length+0xf4c94>
    5c50:	03 eb 00 00 	l.j ffac5c50 <__stack+0xff645c54>
    5c54:	00 5d 00 00 	l.j 1745c54 <__stack+0x12c5c58>
    5c58:	60 a2 5a 00 	.word 0x60a25a00
    5c5c:	00 24 ae 00 	l.j 93145c <__stack+0x4b1460>
    5c60:	40 ee e4 00 	.word 0x40eee400
    5c64:	40 ef 00 12 	.word 0x40ef0012
    5c68:	03 f4 00 00 	l.j ffd05c68 <__stack+0xff885c6c>
    5c6c:	5c 9d 3e 00 	.word 0x5c9d3e00
    5c70:	00 24 d3 00 	l.j 93a870 <__stack+0x4ba874>
    5c74:	00 60 b5 3e 	l.j 183316c <__stack+0x13b3170>
    5c78:	00 00 24 ca 	l.j efa0 <__rom_size-0xb3ac>
    5c7c:	00 00 60 ca 	l.j 1dfa4 <__rom_size+0x3c58>
    5c80:	3e 00 00 24 	.word 0x3e000024
    5c84:	bf 00 00 60 	.word 0xbf000060
    5c88:	df 34 00 40 	l.sh 0xffffc840(r20),r0
    5c8c:	ee e4 00 40 	.word 0xeee40040
    5c90:	ef 00 35 00 	.word 0xef003500
    5c94:	00 24 dc 00 	l.j 93cc94 <__stack+0x4bcc98>
    5c98:	00 60 f7 00 	l.j 1843898 <__stack+0x13c389c>
    5c9c:	00 59 00 00 	l.j 1645c9c <__stack+0x11c5ca0>
    5ca0:	29 90 00 40 	lv.cmp_eq.b r12,r16,r0
    5ca4:	ef a8 00 00 	.word 0xefa80000
    5ca8:	06 38 12 04 	l.jal f8e0a4b8 <__stack+0xf898a4bc>
    5cac:	0b 3e 00 00 	.word 0x0b3e0000
    5cb0:	29 da 00 00 	.word 0x29da0000
    5cb4:	61 25 3e 00 	.word 0x61253e00
    5cb8:	00 29 ce 00 	l.j a794b8 <__stack+0x5f94bc>
    5cbc:	00 61 43 3e 	l.j 18569b4 <__stack+0x13d69b8>
    5cc0:	00 00 29 c2 	l.j 103c8 <__rom_size-0x9f84>
    5cc4:	00 00 61 56 	l.j 1e21c <__rom_size+0x3ed0>
    5cc8:	3e 00 00 29 	.word 0x3e000029
    5ccc:	9e 00 00 61 	l.addi r16,r0,0x61
    5cd0:	8c 3f 00 00 	l.lbz r1,0x0(r31)
    5cd4:	06 68 35 00 	l.jal f9a130d4 <__stack+0xf95930d8>
    5cd8:	00 29 e6 00 	l.j a7f4d8 <__stack+0x5ff4dc>
    5cdc:	00 61 db 35 	l.j 187c9b0 <__stack+0x13fc9b4>
    5ce0:	00 00 29 f0 	l.j 104a0 <__rom_size-0x9eac>
    5ce4:	00 00 62 3f 	l.j 1e5e0 <__rom_size+0x4294>
    5ce8:	35 00 00 29 	.word 0x35000029
    5cec:	fa 00 00 62 	l.cust7 
    5cf0:	53 3e 00 00 	.word 0x533e0000
    5cf4:	29 b6 00 00 	.word 0x29b60000
    5cf8:	62 72 3e 00 	.word 0x62723e00
    5cfc:	00 29 aa 00 	l.j a704fc <__stack+0x5f0500>
    5d00:	00 62 c3 00 	l.j 18b6900 <__stack+0x1436904>
    5d04:	00 00 24 00 	l.j ed04 <__rom_size-0xb648>
    5d08:	00 11 d5 0c 	l.j 47b138 <_stack+0x59478>
    5d0c:	7a 01 69 00 	l.cust3 
    5d10:	00 02 66 0c 	l.j 9f540 <__ram_length+0x1f540>
    5d14:	01 14 01 00 	l.j 4506114 <__stack+0x4086118>
    5d18:	00 5d cc 27 	l.j 1778db4 <__stack+0x12f8db8>
    5d1c:	00 00 5d 2d 	l.j 1d1d0 <__rom_size+0x2e84>
    5d20:	26 00 00 1a 	l.rfe 
    5d24:	b9 0c 01 17 	l.slli r8,r12,0x17
    5d28:	00 00 00 41 	l.j 5e2c <__rom_size-0x14520>
    5d2c:	00 27 00 00 	l.j 9c5d2c <__stack+0x545d30>
    5d30:	5d 3f 26 00 	.word 0x5d3f2600
    5d34:	00 1a b9 0c 	l.j 6b4164 <__stack+0x234168>
    5d38:	01 1c 00 00 	l.j 4705d38 <__stack+0x4285d3c>
    5d3c:	00 41 00 27 	l.j 1045dd8 <__stack+0xbc5ddc>
    5d40:	00 00 5d 51 	l.j 1d284 <__rom_size+0x2f38>
    5d44:	26 00 00 1a 	l.rfe 
    5d48:	b9 0c 01 22 	l.slli r8,r12,0x22
    5d4c:	00 00 00 41 	l.j 5e50 <__rom_size-0x144fc>
    5d50:	00 27 00 00 	l.j 9c5d50 <__stack+0x545d54>
    5d54:	5d 63 26 00 	.word 0x5d632600
    5d58:	00 1a b9 0c 	l.j 6b4188 <__stack+0x23418c>
    5d5c:	01 30 00 00 	l.j 4c05d5c <__stack+0x4785d60>
    5d60:	00 41 00 27 	l.j 1045dfc <__stack+0xbc5e00>
    5d64:	00 00 5d 75 	l.j 1d338 <__rom_size+0x2fec>
    5d68:	26 00 00 1a 	l.rfe 
    5d6c:	b9 0c 01 43 	l.srli r8,r12,0x3
    5d70:	00 00 00 41 	l.j 5e74 <__rom_size-0x144d8>
    5d74:	00 27 00 00 	l.j 9c5d74 <__stack+0x545d78>
    5d78:	5d 87 26 00 	.word 0x5d872600
    5d7c:	00 1a b9 0c 	l.j 6b41ac <__stack+0x2341b0>
    5d80:	01 4e 00 00 	l.j 5385d80 <__stack+0x4f05d84>
    5d84:	00 41 00 27 	l.j 1045e20 <__stack+0xbc5e24>
    5d88:	00 00 5d 99 	l.j 1d3ec <__rom_size+0x30a0>
    5d8c:	26 00 00 1a 	l.rfe 
    5d90:	b9 0c 01 5b 	l.srli r8,r12,0x1b
    5d94:	00 00 00 41 	l.j 5e98 <__rom_size-0x144b4>
    5d98:	00 27 00 00 	l.j 9c5d98 <__stack+0x545d9c>
    5d9c:	5d ab 26 00 	.word 0x5dab2600
    5da0:	00 1a b9 0c 	l.j 6b41d0 <__stack+0x2341d4>
    5da4:	01 64 00 00 	l.j 5905da4 <__stack+0x5485da8>
    5da8:	00 41 00 27 	l.j 1045e44 <__stack+0xbc5e48>
    5dac:	00 00 5d bd 	l.j 1d4a0 <__rom_size+0x3154>
    5db0:	26 00 00 1a 	l.rfe 
    5db4:	b9 0c 01 6d 	l.srli r8,r12,0x2d
    5db8:	00 00 00 41 	l.j 5ebc <__rom_size-0x14490>
    5dbc:	00 22 26 00 	l.j 88f5bc <__stack+0x40f5c0>
    5dc0:	00 1a b9 0c 	l.j 6b41f0 <__stack+0x2341f4>
    5dc4:	01 75 00 00 	l.j 5d45dc4 <__stack+0x58c5dc8>
    5dc8:	00 41 00 00 	l.j 1045dc8 <__stack+0xbc5dcc>
    5dcc:	1d 00 00 03 	.word 0x1d000003
    5dd0:	d1 10 bc 01 	l.sd 0x4401(r16),r23
    5dd4:	01 00 00 5e 	l.j 4005f4c <__stack+0x3b85f50>
    5dd8:	a9 18 69 00 	l.ori r8,r24,0x6900
    5ddc:	10 c0 00 00 	l.bf 3005ddc <__stack+0x2b85de0>
    5de0:	00 2c 18 63 	l.j b0bf6c <__stack+0x68bf70>
    5de4:	00 10 c0 00 	l.j 435de4 <_stack+0x14124>
    5de8:	00 00 2c 18 	l.j 10e48 <__rom_size-0x9504>
    5dec:	75 70 00 10 	l.cust2 
    5df0:	c0 00 00 00 	l.mtspr r0,r0,0x0
    5df4:	2c 23 00 00 	.word 0x2c230000
    5df8:	1a 0e 10 c0 	l.movhi r16,0x10c0
    5dfc:	00 00 00 2c 	l.j 5eac <__rom_size-0x144a0>
    5e00:	23 00 00 13 	.word 0x23000013
    5e04:	ce 10 c0 00 	.word 0xce10c000
    5e08:	00 00 2c 23 	l.j 10e94 <__rom_size-0x94b8>
    5e0c:	00 00 04 2b 	l.j 6eb8 <__rom_size-0x13494>
    5e10:	10 c0 00 00 	l.bf 3005e10 <__stack+0x2b85e14>
    5e14:	00 2c 23 00 	l.j b0ea14 <__stack+0x68ea18>
    5e18:	00 0e 9f 10 	l.j 3ada58 <__ram_length+0x32da58>
    5e1c:	c0 00 00 00 	l.mtspr r0,r0,0x0
    5e20:	2c 23 00 00 	.word 0x2c230000
    5e24:	0b 88 10 c0 	.word 0x0b8810c0
    5e28:	00 00 00 2c 	l.j 5ed8 <__rom_size-0x14474>
    5e2c:	23 00 00 09 	.word 0x23000009
    5e30:	3f 10 c0 00 	.word 0x3f10c000
    5e34:	00 00 2c 23 	l.j 10ec0 <__rom_size-0x948c>
    5e38:	00 00 16 85 	l.j b84c <__rom_size-0xeb00>
    5e3c:	10 c0 00 00 	l.bf 3005e3c <__stack+0x2b85e40>
    5e40:	00 2c 18 6c 	l.j b0bff0 <__stack+0x68bff4>
    5e44:	65 6e 00 10 	.word 0x656e0010
    5e48:	c1 00 00 00 	l.mtspr r0,r0,0x4000
    5e4c:	74 23 00 00 	l.cust2 
    5e50:	00 ad 10 c2 	l.j 2b4a158 <__stack+0x26ca15c>
    5e54:	00 00 20 b4 	l.j e124 <__rom_size-0xc228>
    5e58:	23 00 00 09 	.word 0x23000009
    5e5c:	78 10 c3 00 	l.cust3 
    5e60:	00 00 2c 23 	l.j 10eec <__rom_size-0x9460>
    5e64:	00 00 15 e9 	l.j b608 <__rom_size-0xed44>
    5e68:	10 c4 00 00 	l.bf 3105e68 <__stack+0x2c85e6c>
    5e6c:	00 2c 23 00 	l.j b0ea6c <__stack+0x68ea70>
    5e70:	00 0f 07 10 	l.j 3c7ab0 <__ram_length+0x347ab0>
    5e74:	c5 00 00 00 	.word 0xc5000000
    5e78:	89 23 00 00 	l.lws r9,0x0(r3)
    5e7c:	0a 19 10 c6 	.word 0x0a1910c6
    5e80:	00 00 00 5d 	l.j 5ff4 <__rom_size-0x14358>
    5e84:	23 00 00 16 	.word 0x23000016
    5e88:	8b 10 c7 00 	l.lws r24,0xffffc700(r16)
    5e8c:	00 00 90 23 	l.j 29f18 <__rom_size+0xfbcc>
    5e90:	00 00 11 ea 	l.j a638 <__rom_size-0xfd14>
    5e94:	10 c8 00 00 	l.bf 3205e94 <__stack+0x2d85e98>
    5e98:	00 89 22 26 	l.j 224e730 <__stack+0x1dce734>
    5e9c:	00 00 0b 25 	l.j 8b30 <__rom_size-0x1181c>
    5ea0:	10 04 7d 00 	l.bf 1252a0 <__ram_length+0xa52a0>
    5ea4:	00 00 41 00 	l.j 162a4 <__rom_size-0x40a8>
    5ea8:	00 1f 00 00 	l.j 7c5ea8 <__stack+0x345eac>
    5eac:	0a 4a 10 09 	.word 0x0a4a1009
    5eb0:	82 01 01 00 	l.ld r16,0x100(r1)
    5eb4:	00 5e e4 20 	l.j 17bef34 <__stack+0x133ef38>
    5eb8:	00 00 15 98 	l.j b518 <__rom_size-0xee34>
    5ebc:	10 09 82 00 	l.bf 2666bc <__ram_length+0x1e66bc>
    5ec0:	00 5e e4 1b 	l.j 17bef2c <__stack+0x133ef30>
    5ec4:	69 00 10 09 	.word 0x69001009
    5ec8:	86 00 00 00 	l.lwz r16,0x0(r0)
    5ecc:	2c 1b 6a 00 	.word 0x2c1b6a00
    5ed0:	10 09 86 00 	l.bf 2676d0 <__ram_length+0x1e76d0>
    5ed4:	00 00 2c 26 	l.j 10f6c <__rom_size-0x93e0>
    5ed8:	00 00 11 58 	l.j a438 <__rom_size-0xff14>
    5edc:	10 09 87 00 	l.bf 267adc <__ram_length+0x1e7adc>
    5ee0:	00 00 74 00 	l.j 22ee0 <__rom_size+0x8b94>
    5ee4:	07 04 00 00 	l.jal fc105ee4 <__stack+0xfbc85ee8>
    5ee8:	1e 4d 1f 00 	.word 0x1e4d1f00
    5eec:	00 11 49 10 	l.j 45832c <_stack+0x3666c>
    5ef0:	09 17 01 01 	.word 0x09170101
    5ef4:	00 00 5f 45 	l.j 1dc08 <__rom_size+0x38bc>
    5ef8:	1b 69 00 10 	.word 0x1b690010
    5efc:	09 1b 00 00 	.word 0x091b0000
    5f00:	00 2c 1b 6b 	l.j b0ccac <__stack+0x68ccb0>
    5f04:	00 10 09 1c 	l.j 408374 <ScanDirectory+0xda4>
    5f08:	00 00 00 2c 	l.j 5fb8 <__rom_size-0x14394>
    5f0c:	1b 6c 65 6e 	l.movhi r27,0x656e
    5f10:	00 10 09 1d 	l.j 408384 <ScanDirectory+0xdb4>
    5f14:	00 00 00 74 	l.j 60e4 <__rom_size-0x14268>
    5f18:	1b 6c 66 6e 	l.movhi r27,0x666e
    5f1c:	00 10 09 1e 	l.j 408394 <ScanDirectory+0xdc4>
    5f20:	00 00 00 83 	l.j 612c <__rom_size-0x14220>
    5f24:	26 00 00 13 	l.rfe 
    5f28:	64 10 09 1f 	.word 0x6410091f
    5f2c:	00 00 00 83 	l.j 6138 <__rom_size-0x14214>
    5f30:	1b 70 00 10 	l.movhi r27,0x10
    5f34:	09 20 00 00 	.word 0x09200000
    5f38:	00 83 1b 6a 	l.j 20ccce0 <__stack+0x1c4cce4>
    5f3c:	00 10 09 21 	l.j 4083c0 <ScanDirectory+0xdf0>
    5f40:	00 00 00 2c 	l.j 5ff0 <__rom_size-0x1435c>
    5f44:	00 19 00 00 	l.j 645f44 <__stack+0x1c5f48>
    5f48:	16 d4 10 08 	.word 0x16d41008
    5f4c:	cf 01 00 00 	.word 0xcf010000
    5f50:	00 83 01 00 	l.j 20c6350 <__stack+0x1c46354>
    5f54:	00 5f ca 1a 	l.j 17f87bc <__stack+0x13787c0>
    5f58:	6c 66 6e 00 	.word 0x6c666e00
    5f5c:	10 08 cf 00 	l.bf 239b5c <__ram_length+0x1b9b5c>
    5f60:	00 00 83 1a 	l.j 26bc8 <__rom_size+0xc87c>
    5f64:	6c 65 6e 00 	.word 0x6c656e00
    5f68:	10 08 cf 00 	l.bf 239b68 <__ram_length+0x1b9b68>
    5f6c:	00 00 5d 1b 	l.j 1d3d8 <__rom_size+0x308c>
    5f70:	69 00 10 08 	.word 0x69001008
    5f74:	d8 00 00 00 	l.sb 0x0(r0),r0
    5f78:	33 1b 6b 00 	.word 0x331b6b00
    5f7c:	10 08 d8 00 	l.bf 23bf7c <__ram_length+0x1bbf7c>
    5f80:	00 00 33 26 	l.j 12c18 <__rom_size-0x7734>
    5f84:	00 00 13 64 	l.j ad14 <__rom_size-0xf638>
    5f88:	10 08 d9 00 	l.bf 23c388 <__ram_length+0x1bc388>
    5f8c:	00 5f ca 26 	l.j 17f8824 <__stack+0x1378828>
    5f90:	00 00 10 84 	l.j a1a0 <__rom_size-0x101ac>
    5f94:	10 08 da 00 	l.bf 23c794 <__ram_length+0x1bc794>
    5f98:	00 13 f5 26 	l.j 503430 <__stack+0x83434>
    5f9c:	00 00 16 52 	l.j b8e4 <__rom_size-0xea68>
    5fa0:	10 08 db 00 	l.bf 23cba0 <__ram_length+0x1bcba0>
    5fa4:	00 00 83 26 	l.j 26c3c <__rom_size+0xc8f0>
    5fa8:	00 00 0b 38 	l.j 8c88 <__rom_size-0x116c4>
    5fac:	10 08 db 00 	l.bf 23cbac <__ram_length+0x1bcbac>
    5fb0:	00 00 83 1b 	l.j 26c1c <__rom_size+0xc8d0>
    5fb4:	63 00 10 08 	.word 0x63001008
    5fb8:	db 00 00 00 	l.sb 0xffffc000(r0),r0
    5fbc:	89 1b 63 6d 	l.lws r8,0x636d(r27)
    5fc0:	70 00 10 08 	l.cust1 
    5fc4:	dc 00 00 00 	l.sh 0x0(r0),r0
    5fc8:	2c 00 04 00 	.word 0x2c000400
    5fcc:	00 00 89 00 	l.j 283cc <__rom_size+0xe080>
    5fd0:	00 5f da 05 	l.j 17fc7e4 <__stack+0x137c7e8>
    5fd4:	00 00 00 74 	l.j 61a4 <__rom_size-0x141a8>
    5fd8:	05 00 6a 01 	l.jal 40207dc <__stack+0x3ba07e0>
    5fdc:	00 00 04 d4 	l.j 732c <__rom_size-0x13020>
    5fe0:	18 77 01 00 	.word 0x18770100
    5fe4:	40 f2 48 00 	.word 0x40f24800
    5fe8:	41 6d 08 00 	.word 0x416d0800
    5fec:	00 63 19 00 	l.j 18cc3ec <__stack+0x144c3f0>
    5ff0:	00 66 4b 39 	l.j 1998cd4 <__stack+0x1518cd8>
    5ff4:	00 00 0b 31 	l.j 8cb8 <__rom_size-0x11694>
    5ff8:	18 7e 00 00 	l.movhi r3,0x0
    5ffc:	18 00 00 00 	l.movhi r0,0x0
    6000:	63 39 23 00 	.word 0x63392300
    6004:	00 00 45 18 	l.j 17464 <__rom_size-0x2ee8>
    6008:	7f 00 00 18 	l.cust4 
    600c:	b5 6b 00 00 	l.mfspr r11,r11,0x0
    6010:	29 87 00 40 	lv.cmp_eq.b r12,r7,r0
    6014:	f5 00 00 00 	l.cust6 
    6018:	06 98 18 a3 	l.jal fa60c2a4 <__stack+0xfa18c2a8>
    601c:	00 00 61 18 	l.j 1e47c <__rom_size+0x4130>
    6020:	6c 00 00 5d 	.word 0x6c00005d
    6024:	06 00 40 f5 	l.jal f80163f8 <__stack+0xf7b963fc>
    6028:	00 00 00 06 	l.j 6040 <__rom_size-0x1430c>
    602c:	c0 0c 01 7e 	l.mtspr r12,r0,0x17e
    6030:	49 00 00 5d 	l.jalr r0
    6034:	0e 00 40 f6 	l.bnf f801640c <__stack+0xf7b96410>
    6038:	20 00 41 1c 	l.sys 0x411c
    603c:	80 0c 01 83 	l.ld r0,0x183(r12)
    6040:	43 00 00 06 	.word 0x43000006
    6044:	e8 00 00 60 	.word 0xe8000060
    6048:	53 35 00 00 	.word 0x53350000
    604c:	5d 20 00 00 	.word 0x5d200000
    6050:	63 57 00 43 	.word 0x63570043
    6054:	00 00 07 18 	l.j 7cb4 <__rom_size-0x12698>
    6058:	00 00 60 66 	l.j 1e1f0 <__rom_size+0x3ea4>
    605c:	35 00 00 5d 	.word 0x3500005d
    6060:	32 00 00 63 	.word 0x32000063
    6064:	96 00 43 00 	l.lhz r16,0x4300(r0)
    6068:	00 07 30 00 	l.j 1d2068 <__ram_length+0x152068>
    606c:	00 60 79 35 	l.j 1824540 <__stack+0x13a4544>
    6070:	00 00 5d 44 	l.j 1d580 <__rom_size+0x3234>
    6074:	00 00 63 d5 	l.j 1efc8 <__rom_size+0x4c7c>
    6078:	00 44 00 40 	l.j 1106178 <__stack+0xc8617c>
    607c:	fe 10 00 40 	l.cust8 
    6080:	fe 40 00 00 	l.cust8 
    6084:	60 90 35 00 	.word 0x60903500
    6088:	00 5d 56 00 	l.j 175b888 <__stack+0x12db88c>
    608c:	00 64 14 00 	l.j 190b08c <__stack+0x148b090>
    6090:	44 00 41 05 	l.jr r8
    6094:	ac 00 41 05 	l.xori r0,r0,0x4105
    6098:	e0 00 00 60 	l.add r0,r0,r0
    609c:	a7 35 00 00 	l.andi r25,r21,0x0
    60a0:	5d 68 00 00 	.word 0x5d680000
    60a4:	64 53 00 44 	.word 0x64530044
    60a8:	00 41 09 e8 	l.j 1048848 <__stack+0xbc884c>
    60ac:	00 41 0a 14 	l.j 10488fc <__stack+0xbc8900>
    60b0:	00 00 60 be 	l.j 1e3a8 <__rom_size+0x405c>
    60b4:	35 00 00 5d 	.word 0x3500005d
    60b8:	7a 00 00 64 	l.cust3 
    60bc:	92 00 44 00 	l.lbs r16,0x4400(r0)
    60c0:	41 0f bc 00 	.word 0x410fbc00
    60c4:	41 0f e8 00 	.word 0x410fe800
    60c8:	00 60 d5 35 	l.j 183b59c <__stack+0x13bb5a0>
    60cc:	00 00 5d 8c 	l.j 1d6fc <__rom_size+0x33b0>
    60d0:	00 00 64 d1 	l.j 1f414 <__rom_size+0x50c8>
    60d4:	00 44 00 41 	l.j 11061d8 <__stack+0xc861dc>
    60d8:	13 f0 00 41 	l.bf ffc061dc <__stack+0xff7861e0>
    60dc:	14 20 00 00 	.word 0x14200000
    60e0:	60 ec 35 00 	.word 0x60ec3500
    60e4:	00 5d 9e 00 	l.j 176d8e4 <__stack+0x12ed8e8>
    60e8:	00 65 10 00 	l.j 194a0e8 <__stack+0x14ca0ec>
    60ec:	44 00 41 16 	l.jr r8
    60f0:	84 00 41 16 	l.lwz r0,0x4116(r0)
    60f4:	b0 00 00 61 	l.muli r0,r0,0x61
    60f8:	03 35 00 00 	l.j fcd460f8 <__stack+0xfc8c60fc>
    60fc:	5d b0 00 00 	.word 0x5db00000
    6100:	65 4f 00 34 	.word 0x654f0034
    6104:	00 41 1a bc 	l.j 104cbf4 <__stack+0xbccbf8>
    6108:	00 41 1a ec 	l.j 104ccb8 <__stack+0xbcccbc>
    610c:	35 00 00 5d 	.word 0x3500005d
    6110:	be 00 00 65 	.word 0xbe000065
    6114:	8e 00 00 00 	l.lbz r16,0x0(r0)
    6118:	50 00 00 5d 	.word 0x5000005d
    611c:	cc 00 41 1d 	.word 0xcc00411d
    6120:	d8 00 00 07 	l.sb 0x7(r0),r0
    6124:	48 18 c7 3f 	l.jalr r24
    6128:	00 00 07 60 	l.j 7ea8 <__rom_size-0x124a4>
    612c:	35 00 00 5d 	.word 0x3500005d
    6130:	d9 00 00 65 	l.sb 0x4065(r0),r0
    6134:	cd 35 00 00 	.word 0xcd350000
    6138:	5d e2 00 00 	.word 0x5de20000
    613c:	65 ec 35 00 	.word 0x65ec3500
    6140:	00 5d eb 00 	l.j 1780d40 <__stack+0x1300d44>
    6144:	00 66 41 35 	l.j 1996618 <__stack+0x151661c>
    6148:	00 00 5d f5 	l.j 1d91c <__rom_size+0x35d0>
    614c:	00 00 66 a5 	l.j 1fbe0 <__rom_size+0x5894>
    6150:	35 00 00 5e 	.word 0x3500005e
    6154:	00 00 00 67 	l.j 62f0 <__rom_size-0x1405c>
    6158:	40 35 00 00 	.word 0x40350000
    615c:	5e 0b 00 00 	.word 0x5e0b0000
    6160:	67 ee 35 00 	.word 0x67ee3500
    6164:	00 5e 16 00 	l.j 178b964 <__stack+0x130b968>
    6168:	00 68 9c 35 	l.j 1a2d23c <__stack+0x15ad240>
    616c:	00 00 5e 21 	l.j 1d9f0 <__rom_size+0x36a4>
    6170:	00 00 69 2d 	l.j 20624 <__rom_size+0x62d8>
    6174:	35 00 00 5e 	.word 0x3500005e
    6178:	2c 00 00 69 	.word 0x2c000069
    617c:	b3 35 00 00 	l.muli r25,r21,0x0
    6180:	5e 37 00 00 	.word 0x5e370000
    6184:	6a 1f 35 00 	.word 0x6a1f3500
    6188:	00 5e 42 00 	l.j 1796988 <__stack+0x131698c>
    618c:	00 6c 59 35 	l.j 1b1c660 <__stack+0x169c664>
    6190:	00 00 5e 6e 	l.j 1db48 <__rom_size+0x37fc>
    6194:	00 00 6c 82 	l.j 2139c <__rom_size+0x7050>
    6198:	40 00 00 5e 	.word 0x4000005e
    619c:	4d 05 03 00 	l.maci r5,0x300
    61a0:	42 0b 80 40 	.word 0x420b8040
    61a4:	00 00 5e 58 	l.j 1db04 <__rom_size+0x37b8>
    61a8:	05 03 00 42 	l.jal 40c62b0 <__stack+0x3c462b4>
    61ac:	0b 7d 40 00 	.word 0x0b7d4000
    61b0:	00 5e 63 05 	l.j 179edc4 <__stack+0x131edc8>
    61b4:	03 00 42 0b 	l.j fc0169e0 <__stack+0xfbb969e4>
    61b8:	7c 40 00 00 	l.cust4 
    61bc:	5e 79 05 03 	.word 0x5e790503
    61c0:	00 42 0b 78 	l.j 1088fa0 <__stack+0xc08fa4>
    61c4:	40 00 00 5e 	.word 0x4000005e
    61c8:	84 05 03 00 	l.lwz r0,0x300(r5)
    61cc:	42 0b 74 40 	.word 0x420b7440
    61d0:	00 00 5e 8f 	l.j 1dc0c <__rom_size+0x38c0>
    61d4:	05 03 00 42 	l.jal 40c62dc <__stack+0x3c462e0>
    61d8:	0b 70 5a 00 	.word 0x0b705a00
    61dc:	00 29 29 00 	l.j a505dc <__stack+0x5d05e0>
    61e0:	41 5e ac 00 	.word 0x415eac00
    61e4:	41 5e f4 10 	.word 0x415ef410
    61e8:	06 51 00 00 	l.jal f94461e8 <__stack+0xf8fc61ec>
    61ec:	62 2f 3e 00 	.word 0x622f3e00
    61f0:	00 29 4e 00 	l.j a599f0 <__stack+0x5d99f4>
    61f4:	00 6c a0 3e 	l.j 1b2e2ec <__stack+0x16ae2f0>
    61f8:	00 00 29 44 	l.j 10708 <__rom_size-0x9c44>
    61fc:	00 00 6c b5 	l.j 214d0 <__rom_size+0x7184>
    6200:	3e 00 00 29 	.word 0x3e000029
    6204:	3a 00 00 6c 	.word 0x3a00006c
    6208:	cd 34 00 41 	.word 0xcd340041
    620c:	5e ac 00 41 	.word 0x5eac0041
    6210:	5e f4 35 00 	.word 0x5ef43500
    6214:	00 29 57 00 	l.j a5be14 <__stack+0x5dbe18>
    6218:	00 6c e5 35 	l.j 1b3f6ec <__stack+0x16bf6f0>
    621c:	00 00 29 61 	l.j 107a0 <__rom_size-0x9bac>
    6220:	00 00 6d 22 	l.j 216a8 <__rom_size+0x735c>
    6224:	35 00 00 29 	.word 0x35000029
    6228:	6b 00 00 6d 	.word 0x6b00006d
    622c:	6a 00 00 44 	.word 0x6a000044
    6230:	00 41 50 14 	l.j 105a280 <__stack+0xbda284>
    6234:	00 41 50 6c 	l.j 105a3e4 <__stack+0xbda3e8>
    6238:	00 00 62 46 	l.j 1eb50 <__rom_size+0x4804>
    623c:	35 00 00 5e 	.word 0x3500005e
    6240:	9b 00 00 6d 	l.lhs r24,0x6d(r0)
    6244:	ce 00 5a 00 	.word 0xce005a00
    6248:	00 2b 10 00 	l.j aca248 <__stack+0x64a24c>
    624c:	41 4b cc 00 	.word 0x414bcc00
    6250:	41 4d 74 10 	.word 0x414d7410
    6254:	04 3e 00 00 	l.jal f86254 <__stack+0xb06258>
    6258:	62 ec 34 00 	.word 0x62ec3400
    625c:	41 4b cc 00 	.word 0x414bcc00
    6260:	41 4d 74 3e 	.word 0x414d743e
    6264:	00 00 2b 22 	l.j 10eec <__rom_size-0x9460>
    6268:	00 00 6d f7 	l.j 21a44 <__rom_size+0x76f8>
    626c:	5a 00 00 24 	.word 0x5a000024
    6270:	ae 00 41 4c 	l.xori r16,r0,0x414c
    6274:	28 00 41 4c 	.word 0x2800414c
    6278:	50 15 02 a6 	.word 0x501502a6
    627c:	00 00 62 af 	l.j 1ed38 <__rom_size+0x49ec>
    6280:	3e 00 00 24 	.word 0x3e000024
    6284:	d3 00 00 6e 	l.sd 0xffffc06e(r0),r0
    6288:	0f 3e 00 00 	l.bnf fcf86288 <__stack+0xfcb0628c>
    628c:	24 ca 00 00 	l.rfe 
    6290:	6e 25 3e 00 	.word 0x6e253e00
    6294:	00 24 bf 00 	l.j 935e94 <__stack+0x4b5e98>
    6298:	00 6e 39 34 	l.j 1b94768 <__stack+0x171476c>
    629c:	00 41 4c 28 	l.j 105933c <__stack+0xbd9340>
    62a0:	00 41 4c 50 	l.j 10593e0 <__stack+0xbd93e4>
    62a4:	35 00 00 24 	.word 0x35000024
    62a8:	dc 00 00 6e 	l.sh 0x6e(r0),r0
    62ac:	51 00 00 59 	.word 0x51000059
    62b0:	00 00 24 ae 	l.j f568 <__rom_size-0xade4>
    62b4:	00 41 4c d4 	l.j 1059604 <__stack+0xbd9608>
    62b8:	00 00 07 78 	l.j 8098 <__rom_size-0x122b4>
    62bc:	15 02 b6 3e 	l.nop 0xb63e
    62c0:	00 00 24 d3 	l.j f60c <__rom_size-0xad40>
    62c4:	00 00 6e 7f 	l.j 21cc0 <__rom_size+0x7974>
    62c8:	3e 00 00 24 	.word 0x3e000024
    62cc:	ca 00 00 6e 	.word 0xca00006e
    62d0:	95 3e 00 00 	l.lhz r9,0x0(r30)
    62d4:	24 bf 00 00 	l.rfe 
    62d8:	6e a9 3f 00 	.word 0x6ea93f00
    62dc:	00 07 90 35 	l.j 1ea3b0 <__ram_length+0x16a3b0>
    62e0:	00 00 24 dc 	l.j f650 <__rom_size-0xacfc>
    62e4:	00 00 6e c1 	l.j 21de8 <__rom_size+0x7a9c>
    62e8:	00 00 00 00 	l.j 62e8 <__rom_size-0x14064>
    62ec:	64 00 00 29 	.word 0x64000029
    62f0:	20 00 41 49 	l.sys 0x4149
    62f4:	20 00 41 49 	l.sys 0x4149
    62f8:	68 10 03 b3 	.word 0x681003b3
    62fc:	5a 00 00 24 	.word 0x5a000024
    6300:	ae 00 41 45 	l.xori r16,r0,0x4145
    6304:	30 00 41 45 	.word 0x30004145
    6308:	4c 10 03 60 	l.maci r16,0x360
    630c:	00 00 63 3f 	l.j 1f008 <__rom_size+0x4cbc>
    6310:	3e 00 00 24 	.word 0x3e000024
    6314:	d3 00 00 6e 	l.sd 0xffffc06e(r0),r0
    6318:	ef 3e 00 00 	.word 0xef3e0000
    631c:	24 bf 00 00 	l.rfe 
    6320:	6f 05 3e 00 	.word 0x6f053e00
    6324:	00 24 ca 00 	l.j 938b24 <__stack+0x4b8b28>
    6328:	00 6f 1d 34 	l.j 1bcd7f8 <__stack+0x174d7fc>
    632c:	00 41 45 30 	l.j 10577ec <__stack+0xbd77f0>
    6330:	00 41 45 4c 	l.j 1057860 <__stack+0xbd7864>
    6334:	35 00 00 24 	.word 0x35000024
    6338:	dc 00 00 6f 	l.sh 0x6f(r0),r0
    633c:	31 00 00 5a 	.word 0x3100005a
    6340:	00 00 25 e8 	l.j fae0 <__rom_size-0xa86c>
    6344:	00 41 41 e0 	l.j 1056ac4 <__stack+0xbd6ac8>
    6348:	00 41 42 00 	l.j 1056b48 <__stack+0xbd6b4c>
    634c:	10 03 11 00 	l.bf ca74c <__ram_length+0x4a74c>
    6350:	00 63 5d 3e 	l.j 18dd848 <__stack+0x145d84c>
    6354:	00 00 25 fa 	l.j fb3c <__rom_size-0xa810>
    6358:	00 00 6f 6d 	l.j 2210c <__rom_size+0x7dc0>
    635c:	00 3d 00 00 	l.j f4635c <__stack+0xac6360>
    6360:	28 ef 00 41 	lv.cmp_eq.h r7,r15,r0
    6364:	3e fc 00 00 	.word 0x3efc0000
    6368:	07 a8 10 02 	l.jal fea0a370 <__stack+0xfe58a374>
    636c:	e5 00 00 63 	.word 0xe5000063
    6370:	91 3f 00 00 	l.lbs r9,0x0(r31)
    6374:	07 c0 5b 00 	l.jal ff01cf74 <__stack+0xfeb9cf78>
    6378:	00 28 fd 35 	l.j a4584c <__stack+0x5c5850>
    637c:	00 00 29 13 	l.j 107c8 <__rom_size-0x9b84>
    6380:	00 00 6f 80 	l.j 22180 <__rom_size+0x7e34>
    6384:	40 00 00 29 	.word 0x40000029
    6388:	07 05 03 00 	l.jal fc146f88 <__stack+0xfbcc6f8c>
    638c:	42 0b 6c 00 	.word 0x420b6c00
    6390:	00 3d 00 00 	l.j f46390 <__stack+0xac6394>
    6394:	5e ea 00 41 	.word 0x5eea0041
    6398:	3a b4 00 00 	.word 0x3ab40000
    639c:	07 d8 10 02 	l.jal ff60a3a4 <__stack+0xff18a3a8>
    63a0:	de 00 00 64 	l.sh 0xffff8064(r0),r0
    63a4:	9b 3f 00 00 	l.lhs r25,0x0(r31)
    63a8:	08 00 35 00 	.word 0x08003500
    63ac:	00 5e f8 00 	l.j 17c43ac <__stack+0x13443b0>
    63b0:	00 6f 9f 35 	l.j 1bee084 <__stack+0x176e088>
    63b4:	00 00 5f 02 	l.j 1dfbc <__rom_size+0x3c70>
    63b8:	00 00 6f b3 	l.j 22284 <__rom_size+0x7f38>
    63bc:	35 00 00 5f 	.word 0x3500005f
    63c0:	0c 00 00 6f 	l.bnf 657c <__rom_size-0x13dd0>
    63c4:	d1 35 00 00 	l.sd 0x4800(r21),r0
    63c8:	5f 18 00 00 	.word 0x5f180000
    63cc:	6f fa 35 00 	.word 0x6ffa3500
    63d0:	00 5f 24 00 	l.j 17cf3d0 <__stack+0x134f3d4>
    63d4:	00 70 18 35 	l.j 1c0c4a8 <__stack+0x178c4ac>
    63d8:	00 00 5f 30 	l.j 1e098 <__rom_size+0x3d4c>
    63dc:	00 00 70 37 	l.j 224b8 <__rom_size+0x816c>
    63e0:	35 00 00 5f 	.word 0x3500005f
    63e4:	3a 00 00 70 	.word 0x3a000070
    63e8:	55 5a 00 00 	.word 0x555a0000
    63ec:	24 ae 00 41 	l.rfe 
    63f0:	3a f0 00 41 	.word 0x3af00041
    63f4:	3b 0c 10 09 	.word 0x3b0c1009
    63f8:	29 00 00 64 	lv.packus.b r8,r0,r0
    63fc:	20 33 00 00 	.word 0x20330000
    6400:	24 d3 33 00 	l.rfe 
    6404:	00 24 ca 33 	l.j 938cd0 <__stack+0x4b8cd4>
    6408:	00 00 24 bf 	l.j f704 <__rom_size-0xac48>
    640c:	34 00 41 3a 	.word 0x3400413a
    6410:	f0 00 41 3b 	l.cust5 r0,r0,r8,0x9,0x1b
    6414:	0c 35 00 00 	l.bnf d46414 <__stack+0x8c6418>
    6418:	24 dc 00 00 	l.rfe 
    641c:	70 97 00 00 	l.cust1 
    6420:	49 00 00 5f 	l.jalr r0
    6424:	45 00 41 3b 	l.jr r8
    6428:	b8 00 41 3d 	l.slli r0,r0,0x3d
    642c:	24 10 09 3b 	l.rfe 
    6430:	3e 00 00 5f 	.word 0x3e00005f
    6434:	63 00 00 70 	.word 0x63000070
    6438:	d8 3e 00 00 	l.sb 0x800(r30),r0
    643c:	5f 57 00 00 	.word 0x5f570000
    6440:	70 f6 34 00 	l.cust1 
    6444:	41 3b b8 00 	.word 0x413bb800
    6448:	41 3d 24 35 	.word 0x413d2435
    644c:	00 00 5f 6f 	l.j 1e208 <__rom_size+0x3ebc>
    6450:	00 00 71 14 	l.j 228a0 <__rom_size+0x8554>
    6454:	35 00 00 5f 	.word 0x3500005f
    6458:	79 00 00 71 	l.cust3 
    645c:	29 35 00 00 	.word 0x29350000
    6460:	5f 9b 00 00 	.word 0x5f9b0000
    6464:	71 74 35 00 	l.cust1 
    6468:	00 5f a7 00 	l.j 17f0068 <__stack+0x137006c>
    646c:	00 71 9f 35 	l.j 1c6e140 <__stack+0x17ee144>
    6470:	00 00 5f b3 	l.j 1e33c <__rom_size+0x3ff0>
    6474:	00 00 71 cf 	l.j 22bb0 <__rom_size+0x8864>
    6478:	35 00 00 5f 	.word 0x3500005f
    647c:	bd 00 00 72 	.word 0xbd000072
    6480:	0e 40 00 00 	l.bnf f9006480 <__stack+0xf8b86484>
    6484:	5f 83 05 03 	.word 0x5f830503
    6488:	00 41 a3 40 	l.j 106f188 <__stack+0xbef18c>
    648c:	40 00 00 5f 	.word 0x4000005f
    6490:	8f 05 03 00 	l.lbz r24,0x300(r5)
    6494:	41 a3 3c 00 	.word 0x41a33c00
    6498:	00 00 00 3d 	l.j 658c <__rom_size-0x13dc0>
    649c:	00 00 28 d9 	l.j 10800 <__rom_size-0x9b4c>
    64a0:	00 41 35 80 	l.j 1053aa0 <__stack+0xbd3aa4>
    64a4:	00 00 08 28 	l.j 8544 <__rom_size-0x11e08>
    64a8:	10 02 8f 00 	l.bf aa0a8 <__ram_length+0x2a0a8>
    64ac:	00 65 09 3f 	l.j 19489a8 <__stack+0x14c89ac>
    64b0:	00 00 08 40 	l.j 85b0 <__rom_size-0x11d9c>
    64b4:	5b 00 00 28 	.word 0x5b000028
    64b8:	e5 6b 00 00 	l.sfges r11,r0
    64bc:	25 39 00 41 	l.rfe 
    64c0:	35 80 00 00 	.word 0x35800000
    64c4:	08 58 12 84 	.word 0x08581284
    64c8:	00 00 64 e5 	l.j 1f85c <__rom_size+0x5510>
    64cc:	3f 00 00 08 	.word 0x3f000008
    64d0:	80 35 00 00 	l.ld r1,0x0(r21)
    64d4:	25 45 00 00 	l.rfe 
    64d8:	72 4e 35 00 	l.cust1 
    64dc:	00 25 4e 00 	l.j 959cdc <__stack+0x4d9ce0>
    64e0:	00 72 61 00 	l.j 1c9e8e0 <__stack+0x181e8e4>
    64e4:	00 50 00 00 	l.j 14064e4 <__stack+0xf864e8>
    64e8:	25 58 00 41 	l.rfe 
    64ec:	35 e4 00 00 	.word 0x35e40000
    64f0:	08 a8 12 92 	.word 0x08a81292
    64f4:	3e 00 00 25 	.word 0x3e000025
    64f8:	6e 00 00 72 	.word 0x6e000072
    64fc:	8b 3e 00 00 	l.lws r25,0x0(r30)
    6500:	25 65 00 00 	l.rfe 
    6504:	72 9e 00 00 	l.cust1 
    6508:	00 3d 00 00 	l.j f46508 <__stack+0xac650c>
    650c:	28 c3 00 41 	lv.cmp_eq.h r6,r3,r0
    6510:	34 38 00 00 	.word 0x34380000
    6514:	08 d8 10 02 	.word 0x08d81002
    6518:	87 00 00 65 	l.lwz r24,0x65(r0)
    651c:	2d 3f 00 00 	.word 0x2d3f0000
    6520:	08 f0 35 00 	.word 0x08f03500
    6524:	00 28 cf 00 	l.j a3a124 <__stack+0x5ba128>
    6528:	00 72 b1 00 	l.j 1cb2928 <__stack+0x183292c>
    652c:	00 3d 00 00 	l.j f4652c <__stack+0xac6530>
    6530:	5e a9 00 41 	.word 0x5ea90041
    6534:	2b d4 00 00 	.word 0x2bd40000
    6538:	09 08 10 01 	.word 0x09081001
    653c:	f4 00 00 65 	l.cust6 
    6540:	d7 3e 00 00 	l.sw 0xffffc800(r30),r0
    6544:	5e b7 00 00 	.word 0x5eb70000
    6548:	72 b9 3f 00 	l.cust1 
    654c:	00 09 28 35 	l.j 250620 <__ram_length+0x1d0620>
    6550:	00 00 5e c3 	l.j 1e05c <__rom_size+0x3d10>
    6554:	00 00 72 cc 	l.j 23084 <__rom_size+0x8d38>
    6558:	35 00 00 5e 	.word 0x3500005e
    655c:	cd 00 00 72 	.word 0xcd000072
    6560:	f6 35 00 00 	l.cust6 
    6564:	5e d7 00 00 	.word 0x5ed70000
    6568:	73 09 5a 00 	l.cust1 
    656c:	00 26 c6 00 	l.j 9b7d6c <__stack+0x537d70>
    6570:	41 2c c0 00 	.word 0x412cc000
    6574:	41 2d 1c 10 	.word 0x412d1c10
    6578:	09 9c 00 00 	.word 0x099c0000
    657c:	65 9a 3e 00 	.word 0x659a3e00
    6580:	00 26 ec 00 	l.j 9c1580 <__stack+0x541584>
    6584:	00 73 27 3e 	l.j 1cd027c <__stack+0x1850280>
    6588:	00 00 26 e0 	l.j 10108 <__rom_size-0xa244>
    658c:	00 00 73 51 	l.j 232d0 <__rom_size+0x8f84>
    6590:	3e 00 00 26 	.word 0x3e000026
    6594:	d4 00 00 73 	l.sw 0x73(r0),r0
    6598:	97 00 49 00 	l.lhz r24,0x4900(r0)
    659c:	00 24 ae 00 	l.j 931d9c <__stack+0x4b1da0>
    65a0:	41 2d 54 00 	.word 0x412d5400
    65a4:	41 2d 68 10 	.word 0x412d6810
    65a8:	09 a0 3e 00 	.word 0x09a03e00
    65ac:	00 24 d3 00 	l.j 93b1ac <__stack+0x4bb1b0>
    65b0:	00 73 c0 3e 	l.j 1cf66a8 <__stack+0x18766ac>
    65b4:	00 00 24 ca 	l.j f8dc <__rom_size-0xaa70>
    65b8:	00 00 73 d4 	l.j 23508 <__rom_size+0x91bc>
    65bc:	33 00 00 24 	.word 0x33000024
    65c0:	bf 34 00 41 	.word 0xbf340041
    65c4:	2d 54 00 41 	.word 0x2d540041
    65c8:	2d 68 35 00 	.word 0x2d683500
    65cc:	00 24 dc 00 	l.j 93d5cc <__stack+0x4bd5d0>
    65d0:	00 73 e9 00 	l.j 1d009d0 <__stack+0x18809d4>
    65d4:	00 00 00 3d 	l.j 66c8 <__rom_size-0x13c84>
    65d8:	00 00 28 aa 	l.j 10880 <__rom_size-0x9acc>
    65dc:	00 41 26 14 	l.j 104fe2c <__stack+0xbcfe30>
    65e0:	00 00 09 48 	l.j 8b00 <__rom_size-0x1184c>
    65e4:	10 01 79 00 	l.bf 649e4 <__rom_size+0x4a698>
    65e8:	00 65 fb 3f 	l.j 19852e4 <__stack+0x15052e8>
    65ec:	00 00 09 70 	l.j 8bac <__rom_size-0x117a0>
    65f0:	35 00 00 28 	.word 0x35000028
    65f4:	b8 00 00 74 	l.srli r0,r0,0x34
    65f8:	07 00 00 3d 	l.jal fc0066ec <__stack+0xfbb866f0>
    65fc:	00 00 28 89 	l.j 10820 <__rom_size-0x9b2c>
    6600:	00 41 25 98 	l.j 104fc60 <__stack+0xbcfc64>
    6604:	00 00 09 98 	l.j 8c64 <__rom_size-0x116e8>
    6608:	10 01 74 00 	l.bf 63608 <__rom_size+0x492bc>
    660c:	00 66 2e 3f 	l.j 1991f08 <__stack+0x1511f0c>
    6610:	00 00 09 b0 	l.j 8cd0 <__rom_size-0x1167c>
    6614:	35 00 00 28 	.word 0x35000028
    6618:	95 00 00 74 	l.lhz r8,0x74(r0)
    661c:	26 3f 00 00 	l.rfe 
    6620:	09 c8 35 00 	.word 0x09c83500
    6624:	00 28 9f 00 	l.j a2e224 <__stack+0x5ae228>
    6628:	00 74 39 00 	l.j 1d14a28 <__stack+0x1894a2c>
    662c:	00 00 59 00 	l.j 1ca2c <__rom_size+0x26e0>
    6630:	00 28 6e 00 	l.j a21e30 <__stack+0x5a1e34>
    6634:	41 20 c0 00 	.word 0x4120c000
    6638:	00 09 e0 10 	l.j 27e678 <__ram_length+0x1fe678>
    663c:	01 06 3e 00 	l.j 4195e3c <__stack+0x3d15e40>
    6640:	00 28 7c 00 	l.j a25640 <__stack+0x5a5644>
    6644:	00 74 77 00 	l.j 1d24244 <__stack+0x18a4248>
    6648:	00 00 00 6d 	l.j 67fc <__rom_size-0x13b50>
    664c:	00 00 09 8e 	l.j 8c84 <__rom_size-0x116c8>
    6650:	27 95 00 00 	l.rfe 
    6654:	24 7f 01 01 	l.rfe 
    6658:	3b 00 00 04 	.word 0x3b000004
    665c:	f2 13 3e 00 	l.cust5 r16,r19,r7,0x30,0x0
    6660:	00 00 ab 05 	l.j 31274 <__rom_size+0x16f28>
    6664:	03 00 42 09 	l.j fc016e88 <__stack+0xfbb96e8c>
    6668:	b8 3b 00 00 	l.slli r1,r27,0x0
    666c:	12 dd 13 3f 	l.bf fb74b368 <__stack+0xfb2cb36c>
    6670:	00 00 46 c7 	l.j 1818c <__rom_size-0x21c0>
    6674:	05 03 00 42 	l.jal 40c677c <__stack+0x3c46780>
    6678:	09 74 3b 00 	.word 0x09743b00
    667c:	00 0c 88 13 	l.j 3286c8 <__ram_length+0x2a86c8>
    6680:	40 00 00 46 	.word 0x40000046
    6684:	c7 05 03 00 	.word 0xc7050300
    6688:	42 09 c4 3b 	.word 0x4209c43b
    668c:	00 00 18 44 	l.j c79c <__rom_size-0xdbb0>
    6690:	13 41 00 00 	l.bf fd046690 <__stack+0xfcbc6694>
    6694:	00 2c 05 03 	l.j b07aa0 <__stack+0x687aa4>
    6698:	00 42 09 b5 	l.j 1088d6c <__stack+0xc08d70>
    669c:	3b 00 00 03 	.word 0x3b000003
    66a0:	16 13 41 00 	.word 0x16134100
    66a4:	00 00 2c 05 	l.j 116b8 <__rom_size-0x8c94>
    66a8:	03 00 42 09 	l.j fc016ecc <__stack+0xfbb96ed0>
    66ac:	71 3b 00 00 	l.cust1 
    66b0:	0b 5b 13 42 	.word 0x0b5b1342
    66b4:	00 00 00 2c 	l.j 6764 <__rom_size-0x13be8>
    66b8:	05 03 00 42 	l.jal 40c67c0 <__stack+0x3c467c4>
    66bc:	09 b4 3b 00 	.word 0x09b43b00
    66c0:	00 01 88 13 	l.j 6870c <__rom_size+0x4e3c0>
    66c4:	42 00 00 00 	.word 0x42000000
    66c8:	2c 05 03 00 	.word 0x2c050300
    66cc:	42 09 70 3b 	.word 0x4209703b
    66d0:	00 00 15 e4 	l.j be60 <__rom_size-0xe4ec>
    66d4:	13 43 00 00 	l.bf fd0c66d4 <__stack+0xfcc466d8>
    66d8:	00 2c 05 03 	l.j b07ae4 <__stack+0x687ae8>
    66dc:	00 42 09 c0 	l.j 1088ddc <__stack+0xc08de0>
    66e0:	6e 00 00 15 	.word 0x6e000015
    66e4:	be 13 43 00 	.word 0xbe134300
    66e8:	00 00 2c 00 	l.j 116e8 <__rom_size-0x8c64>
    66ec:	3b 00 00 07 	.word 0x3b000007
    66f0:	49 13 44 00 	l.jalr r8
    66f4:	00 00 41 05 	l.j 16b08 <__rom_size-0x3844>
    66f8:	03 00 42 09 	l.j fc016f1c <__stack+0xfbb96f20>
    66fc:	68 3b 00 00 	.word 0x683b0000
    6700:	18 e1 13 45 	.word 0x18e11345
    6704:	00 00 00 41 	l.j 6808 <__rom_size-0x13b44>
    6708:	05 03 00 42 	l.jal 40c6810 <__stack+0x3c46814>
    670c:	09 6c 6d 00 	.word 0x096c6d00
    6710:	00 0f 7f 20 	l.j 3e6390 <__ram_length+0x366390>
    6714:	26 00 00 24 	l.rfe 
    6718:	09 01 01 6d 	.word 0x0901016d
    671c:	00 00 03 25 	l.j 73b0 <__rom_size-0x12f9c>
    6720:	20 27 00 00 	.word 0x20270000
    6724:	00 41 01 01 	l.j 1046b28 <__stack+0xbc6b2c>
    6728:	04 00 00 00 	l.jal 6728 <__rom_size-0x13c24>
    672c:	2c 00 00 67 	.word 0x2c000067
    6730:	39 10 00 00 	.word 0x39100000
    6734:	00 74 03 ff 	l.j 1d07730 <__stack+0x1887734>
    6738:	00 6d 00 00 	l.j 1b46738 <__stack+0x16c673c>
    673c:	02 58 20 51 	l.j f960e880 <__stack+0xf918e884>
    6740:	00 00 67 28 	l.j 203e0 <__rom_size+0x6094>
    6744:	01 01 6d 00 	l.j 4061b44 <__stack+0x3be1b48>
    6748:	00 05 4e 20 	l.j 159fc8 <__ram_length+0xd9fc8>
    674c:	52 00 00 00 	.word 0x52000000
    6750:	2c 01 01 6d 	.word 0x2c01016d
    6754:	00 00 09 bc 	l.j 8e44 <__rom_size-0x11508>
    6758:	20 53 00 00 	.word 0x20530000
    675c:	00 74 01 01 	l.j 1d06b60 <__stack+0x1886b64>
    6760:	6d 00 00 18 	.word 0x6d000018
    6764:	20 20 54 00 	.word 0x20205400
    6768:	00 00 2c 01 	l.j 1176c <__rom_size-0x8be0>
    676c:	01 6d 00 00 	l.j 5b4676c <__stack+0x56c6770>
    6770:	09 8e 27 95 	.word 0x098e2795
    6774:	00 00 24 69 	l.j f918 <__rom_size-0xaa34>
    6778:	01 01 6d 00 	l.j 4061b78 <__stack+0x3be1b7c>
    677c:	00 09 8e 27 	l.j 26a018 <__ram_length+0x1ea018>
    6780:	95 00 00 22 	l.lhz r8,0x22(r0)
    6784:	d3 01 01 04 	l.sd 0xffffc104(r1),r0
    6788:	00 00 00 2c 	l.j 6838 <__rom_size-0x13b14>
    678c:	00 00 67 9d 	l.j 20600 <__rom_size+0x62b4>
    6790:	05 00 00 00 	l.jal 4006790 <__stack+0x3b86794>
    6794:	74 ff 05 00 	l.cust2 
    6798:	00 00 74 07 	l.j 237b4 <__rom_size+0x9468>
    679c:	00 6d 00 00 	l.j 1b4679c <__stack+0x16c67a0>
    67a0:	1c 5a 28 1e 	.word 0x1c5a281e
    67a4:	00 00 67 87 	l.j 205c0 <__rom_size+0x6274>
    67a8:	01 01 04 00 	l.j 40477a8 <__stack+0x3bc77ac>
    67ac:	00 00 2c 00 	l.j 117ac <__rom_size-0x8ba0>
    67b0:	00 67 c0 05 	l.j 19f67c4 <__stack+0x15767c8>
    67b4:	00 00 00 74 	l.j 6984 <__rom_size-0x139c8>
    67b8:	04 05 00 00 	l.jal 1467b8 <__ram_length+0xc67b8>
    67bc:	00 74 e2 00 	l.j 1d3efbc <__stack+0x18befc0>
    67c0:	6d 00 00 19 	.word 0x6d000019
    67c4:	01 29 03 00 	l.j 4a473c4 <__stack+0x45c73c8>
    67c8:	00 67 cd 01 	l.j 19f9bcc <__stack+0x1579bd0>
    67cc:	01 08 00 00 	l.j 42067cc <__stack+0x3d867d0>
    67d0:	67 aa 04 00 	.word 0x67aa0400
    67d4:	00 00 89 00 	l.j 28bd4 <__rom_size+0xe888>
    67d8:	00 67 e2 05 	l.j 19fefec <__stack+0x157eff0>
    67dc:	00 00 00 74 	l.j 69ac <__rom_size-0x139a0>
    67e0:	7f 00 6d 00 	l.cust4 
    67e4:	00 0c 66 12 	l.j 32002c <__ram_length+0x2a002c>
    67e8:	2f 00 00 67 	.word 0x2f000067
    67ec:	ef 01 01 08 	.word 0xef010108
    67f0:	00 00 67 d2 	l.j 20738 <__rom_size+0x63ec>
    67f4:	04 00 00 22 	l.jal 687c <__rom_size-0x13ad0>
    67f8:	de 00 00 68 	l.sh 0xffff8068(r0),r0
    67fc:	04 05 00 00 	l.jal 1467fc <__ram_length+0xc67fc>
    6800:	00 74 3f 00 	l.j 1d16400 <__stack+0x1896404>
    6804:	6d 00 00 17 	.word 0x6d000017
    6808:	fe 12 41 00 	l.cust8 
    680c:	00 67 f4 01 	l.j 1a03810 <__stack+0x1583814>
    6810:	01 04 00 00 	l.j 4106810 <__stack+0x3c86814>
    6814:	00 89 00 00 	l.j 2246814 <__stack+0x1dc6818>
    6818:	68 27 05 00 	.word 0x68270500
    681c:	00 00 74 07 	l.j 23838 <__rom_size+0x94ec>
    6820:	05 00 00 00 	l.jal 4006820 <__stack+0x3b86824>
    6824:	74 ff 00 6d 	l.cust2 
    6828:	00 00 02 eb 	l.j 73d4 <__rom_size-0x12f78>
    682c:	12 42 00 00 	l.bf f908682c <__stack+0xf8c06830>
    6830:	68 11 01 01 	.word 0x68110101
    6834:	3b 00 00 05 	.word 0x3b000005
    6838:	b5 12 9d 00 	l.mfspr r8,r18,0x9d00
    683c:	00 00 74 05 	l.j 23850 <__rom_size+0x9504>
    6840:	03 00 42 0a 	l.j fc017068 <__stack+0xfbb9706c>
    6844:	08 3b 00 00 	.word 0x083b0000
    6848:	0c 7b 12 9e 	l.bnf 1ecb2c0 <__stack+0x1a4b2c4>
    684c:	00 00 00 74 	l.j 6a1c <__rom_size-0x13930>
    6850:	05 03 00 42 	l.jal 40c6958 <__stack+0x3c4695c>
    6854:	0a 04 04 00 	.word 0x0a040400
    6858:	00 00 89 00 	l.j 28c58 <__rom_size+0xe90c>
    685c:	00 68 66 05 	l.j 1a20070 <__stack+0x15a0074>
    6860:	00 00 00 74 	l.j 6a30 <__rom_size-0x1391c>
    6864:	27 00 6f 73 	l.rfe 
    6868:	00 12 a0 00 	l.j 4ae868 <__stack+0x2e86c>
    686c:	00 68 56 01 	l.j 1a1c070 <__stack+0x159c074>
    6870:	01 3b 00 00 	l.j 4ec6870 <__stack+0x4a46874>
    6874:	16 f0 12 a2 	.word 0x16f012a2
    6878:	00 00 00 41 	l.j 697c <__rom_size-0x139d0>
    687c:	05 03 00 42 	l.jal 40c6984 <__stack+0x3c46988>
    6880:	0a 5c 04 00 	.word 0x0a5c0400
    6884:	00 00 2c 00 	l.j 11884 <__rom_size-0x8ac8>
    6888:	00 68 92 05 	l.j 1a2b09c <__stack+0x15ab0a0>
    688c:	00 00 00 74 	l.j 6a5c <__rom_size-0x138f0>
    6890:	3f 00 3b 00 	.word 0x3f003b00
    6894:	00 12 2c 12 	l.j 4918dc <__stack+0x118e0>
    6898:	a3 00 00 68 	l.addic r24,r0,0x68
    689c:	82 05 03 00 	l.ld r16,0x300(r5)
    68a0:	42 0a 1c 6d 	.word 0x420a1c6d
    68a4:	00 00 09 8e 	l.j 8edc <__rom_size-0x11470>
    68a8:	27 95 00 00 	l.rfe 
    68ac:	22 81 01 01 	.word 0x22810101
    68b0:	04 00 00 00 	l.jal 68b0 <__rom_size-0x13a9c>
    68b4:	2c 00 00 68 	.word 0x2c000068
    68b8:	c0 05 00 00 	l.mtspr r5,r0,0x0
    68bc:	00 74 0f 00 	l.j 1d0a4bc <__stack+0x188a4c0>
    68c0:	6d 00 00 02 	.word 0x6d000002
    68c4:	9a 2a 52 00 	l.lhs r17,0x5200(r10)
    68c8:	00 68 b0 01 	l.j 1a328cc <__stack+0x15b28d0>
    68cc:	01 6d 00 00 	l.j 5b468cc <__stack+0x56c68d0>
    68d0:	0f 7f 20 26 	l.bnf fdfce968 <__stack+0xfdb4e96c>
    68d4:	00 00 22 c3 	l.j f3e0 <__rom_size-0xaf6c>
    68d8:	01 01 6d 00 	l.j 4061cd8 <__stack+0x3be1cdc>
    68dc:	00 03 25 20 	l.j cfd5c <__ram_length+0x4fd5c>
    68e0:	27 00 00 00 	l.rfe 
    68e4:	41 01 01 6d 	.word 0x4101016d
    68e8:	00 00 02 58 	l.j 7248 <__rom_size-0x13104>
    68ec:	20 51 00 00 	.word 0x20510000
    68f0:	67 28 01 01 	.word 0x67280101
    68f4:	6d 00 00 05 	.word 0x6d000005
    68f8:	4e 20 52 00 	l.maci r0,0x5200
    68fc:	00 00 2c 01 	l.j 11900 <__rom_size-0x8a4c>
    6900:	01 6d 00 00 	l.j 5b46900 <__stack+0x56c6904>
    6904:	09 bc 20 53 	.word 0x09bc2053
    6908:	00 00 00 74 	l.j 6ad8 <__rom_size-0x13874>
    690c:	01 01 6d 00 	l.j 4061d0c <__stack+0x3be1d10>
    6910:	00 18 20 20 	l.j 60e990 <__stack+0x18e994>
    6914:	54 00 00 00 	.word 0x54000000
    6918:	2c 01 01 6f 	.word 0x2c01016f
    691c:	63 72 63 00 	.word 0x63726300
    6920:	11 25 00 00 	l.bf 4946920 <__stack+0x44c6924>
    6924:	00 2c 01 01 	l.j b06d28 <__stack+0x686d2c>
    6928:	6d 00 00 0f 	.word 0x6d00000f
    692c:	e3 11 26 00 	.word 0xe3112600
    6930:	00 00 48 01 	l.j 18934 <__rom_size-0x1a18>
    6934:	01 6d 00 00 	l.j 5b46934 <__stack+0x56c6938>
    6938:	00 35 11 27 	l.j d4add4 <__stack+0x8cadd8>
    693c:	00 00 00 2c 	l.j 69ec <__rom_size-0x13960>
    6940:	01 01 6d 00 	l.j 4061d40 <__stack+0x3be1d44>
    6944:	00 05 ac 11 	l.j 171988 <__ram_length+0xf1988>
    6948:	28 00 00 00 	.word 0x28000000
    694c:	2c 01 01 6d 	.word 0x2c01016d
    6950:	00 00 00 e1 	l.j 6cd4 <__rom_size-0x13678>
    6954:	2b 06 00 00 	.word 0x2b060000
    6958:	00 2c 01 01 	l.j b06d5c <__stack+0x686d60>
    695c:	6d 00 00 0f 	.word 0x6d00000f
    6960:	7f 20 26 00 	l.cust4 
    6964:	00 1c f4 01 	l.j 743968 <__stack+0x2c396c>
    6968:	01 6d 00 00 	l.j 5b46968 <__stack+0x56c696c>
    696c:	03 25 20 27 	l.j fc94ea08 <__stack+0xfc4cea0c>
    6970:	00 00 00 41 	l.j 6a74 <__rom_size-0x138d8>
    6974:	01 01 6d 00 	l.j 4061d74 <__stack+0x3be1d78>
    6978:	00 02 58 20 	l.j 9c9f8 <__ram_length+0x1c9f8>
    697c:	51 00 00 67 	.word 0x51000067
    6980:	28 01 01 6d 	lv.srl.h r0,r1,r0
    6984:	00 00 05 4e 	l.j 7ebc <__rom_size-0x12490>
    6988:	20 52 00 00 	.word 0x20520000
    698c:	00 2c 01 01 	l.j b06d90 <__stack+0x686d94>
    6990:	6d 00 00 09 	.word 0x6d000009
    6994:	bc 20 53 00 	l.sfnei r0,0x5300
    6998:	00 00 74 01 	l.j 2399c <__rom_size+0x9650>
    699c:	01 6d 00 00 	l.j 5b4699c <__stack+0x56c69a0>
    69a0:	18 20 20 54 	l.movhi r1,0x2054
    69a4:	00 00 00 2c 	l.j 6a54 <__rom_size-0x138f8>
    69a8:	01 01 6d 00 	l.j 4061da8 <__stack+0x3be1dac>
    69ac:	00 03 c7 22 	l.j f8634 <__ram_length+0x78634>
    69b0:	43 00 00 68 	.word 0x43000068
    69b4:	56 01 01 04 	.word 0x56010104
    69b8:	00 00 1e f6 	l.j e590 <__rom_size-0xbdbc>
    69bc:	00 00 69 c7 	l.j 210d8 <__rom_size+0x6d8c>
    69c0:	05 00 00 00 	l.jal 40069c0 <__stack+0x3b869c4>
    69c4:	74 01 00 6f 	l.cust2 
    69c8:	68 64 66 00 	.word 0x68646600
    69cc:	22 45 00 00 	.word 0x22450000
    69d0:	69 b7 01 01 	.word 0x69b70101
    69d4:	6d 00 00 09 	.word 0x6d000009
    69d8:	8e 27 95 00 	l.lbz r17,0xffff9500(r7)
    69dc:	00 1f 01 01 	l.j 7c6de0 <__stack+0x346de4>
    69e0:	01 6d 00 00 	l.j 5b469e0 <__stack+0x56c69e4>
    69e4:	17 e9 23 2f 	.word 0x17e9232f
    69e8:	00 00 1c b2 	l.j dcb0 <__rom_size-0xc69c>
    69ec:	01 01 6d 00 	l.j 4061dec <__stack+0x3be1df0>
    69f0:	00 01 92 23 	l.j 6b27c <__rom_size+0x50f30>
    69f4:	32 00 00 20 	.word 0x32000020
    69f8:	c4 01 01 6d 	.word 0xc401016d
    69fc:	00 00 12 22 	l.j b284 <__rom_size-0xf0c8>
    6a00:	23 33 00 00 	.word 0x23330000
    6a04:	00 89 01 01 	l.j 2246e08 <__stack+0x1dc6e0c>
    6a08:	04 00 00 00 	l.jal 6a08 <__rom_size-0x13944>
    6a0c:	90 00 00 6a 	l.lbs r0,0x6a(r0)
    6a10:	18 05 00 00 	l.macrc r0
    6a14:	00 74 03 00 	l.j 1d07614 <__stack+0x1887618>
    6a18:	6d 00 00 00 	.word 0x6d000000
    6a1c:	23 26 4a 00 	.word 0x23264a00
    6a20:	00 6a 08 01 	l.j 1a88a24 <__stack+0x1608a28>
    6a24:	01 6d 00 00 	l.j 5b46a24 <__stack+0x56c6a28>
    6a28:	0f eb 26 4b 	l.bnf ffad0354 <__stack+0xff650358>
    6a2c:	00 00 6a 08 	l.j 2124c <__rom_size+0x6f00>
    6a30:	01 01 6d 00 	l.j 4061e30 <__stack+0x3be1e34>
    6a34:	00 08 34 26 	l.j 213acc <__ram_length+0x193acc>
    6a38:	4c 00 00 6a 	l.maci r0,0x6a
    6a3c:	08 01 01 6d 	.word 0x0801016d
    6a40:	00 00 19 c1 	l.j d144 <__rom_size-0xd208>
    6a44:	26 4d 00 00 	l.rfe 
    6a48:	6a 08 01 01 	.word 0x6a080101
    6a4c:	6d 00 00 14 	.word 0x6d000014
    6a50:	7e 10 2d 00 	l.cust4 
    6a54:	00 00 2c 01 	l.j 11a58 <__rom_size-0x88f4>
    6a58:	01 6d 00 00 	l.j 5b46a58 <__stack+0x56c6a5c>
    6a5c:	07 cc 10 2e 	l.jal ff30ab14 <__stack+0xfee8ab18>
    6a60:	00 00 00 2c 	l.j 6b10 <__rom_size-0x1383c>
    6a64:	01 01 6d 00 	l.j 4061e64 <__stack+0x3be1e68>
    6a68:	00 14 e3 10 	l.j 53f6a8 <__stack+0xbf6ac>
    6a6c:	2f 00 00 00 	.word 0x2f000000
    6a70:	2c 01 01 6d 	.word 0x2c01016d
    6a74:	00 00 07 04 	l.j 8684 <__rom_size-0x11cc8>
    6a78:	10 30 00 00 	l.bf c06a78 <__stack+0x786a7c>
    6a7c:	00 48 01 01 	l.j 1206e80 <__stack+0xd86e84>
    6a80:	6d 00 00 15 	.word 0x6d000015
    6a84:	4e 10 31 00 	l.maci r16,0x3100
    6a88:	00 00 74 01 	l.j 23a8c <__rom_size+0x9740>
    6a8c:	01 6d 00 00 	l.j 5b46a8c <__stack+0x56c6a90>
    6a90:	16 e9 10 33 	.word 0x16e91033
    6a94:	00 00 00 2c 	l.j 6b44 <__rom_size-0x13808>
    6a98:	01 01 04 00 	l.j 4047a98 <__stack+0x3bc7a9c>
    6a9c:	00 1e 4d 00 	l.j 799e9c <__stack+0x319ea0>
    6aa0:	00 6a aa 05 	l.j 1ab12b4 <__stack+0x16312b8>
    6aa4:	00 00 00 74 	l.j 6c74 <__rom_size-0x136d8>
    6aa8:	03 00 6f 64 	l.j fc022838 <__stack+0xfbba283c>
    6aac:	66 00 10 34 	.word 0x66001034
    6ab0:	00 00 6a 9a 	l.j 21518 <__rom_size+0x71cc>
    6ab4:	01 01 6f 73 	l.j 4062880 <__stack+0x3be2884>
    6ab8:	00 10 38 00 	l.j 414ab8 <main+0x5870>
    6abc:	00 68 56 01 	l.j 1a1c2c0 <__stack+0x159c2c4>
    6ac0:	01 04 00 00 	l.j 4106ac0 <__stack+0x3c86ac4>
    6ac4:	1d c3 00 00 	.word 0x1dc30000
    6ac8:	6a d1 05 00 	.word 0x6ad10500
    6acc:	00 00 74 07 	l.j 23ae8 <__rom_size+0x979c>
    6ad0:	00 6d 00 00 	l.j 1b46ad0 <__stack+0x16c6ad4>
    6ad4:	09 26 10 3c 	.word 0x0926103c
    6ad8:	00 00 6a c1 	l.j 215dc <__rom_size+0x7290>
    6adc:	01 01 6d 00 	l.j 4061edc <__stack+0x3be1ee0>
    6ae0:	00 02 c2 10 	l.j b7320 <__ram_length+0x37320>
    6ae4:	3d 00 00 02 	.word 0x3d000002
    6ae8:	dd 01 01 6d 	l.sh 0x416d(r1),r0
    6aec:	00 00 16 01 	l.j c2f0 <__rom_size-0xe05c>
    6af0:	10 3e 00 00 	l.bf f86af0 <__stack+0xb06af4>
    6af4:	00 2c 01 01 	l.j b06ef8 <__stack+0x686efc>
    6af8:	6d 00 00 12 	.word 0x6d000012
    6afc:	7a 10 3f 00 	l.cust3 
    6b00:	00 00 2c 01 	l.j 11b04 <__rom_size-0x8848>
    6b04:	01 6d 00 00 	l.j 5b46b04 <__stack+0x56c6b08>
    6b08:	1c 63 10 40 	.word 0x1c631040
    6b0c:	00 00 00 74 	l.j 6cdc <__rom_size-0x13670>
    6b10:	01 01 04 00 	l.j 4047b10 <__stack+0x3bc7b14>
    6b14:	00 00 89 00 	l.j 28f14 <__rom_size+0xebc8>
    6b18:	00 6b 29 05 	l.j 1ad0f2c <__stack+0x1650f30>
    6b1c:	00 00 00 74 	l.j 6cec <__rom_size-0x13660>
    6b20:	07 10 00 00 	l.jal fc406b20 <__stack+0xfbf86b24>
    6b24:	00 74 01 04 	l.j 1d06f34 <__stack+0x1886f38>
    6b28:	00 6d 00 00 	l.j 1b46b28 <__stack+0x16c6b2c>
    6b2c:	06 be 10 41 	l.jal faf8ac30 <__stack+0xfab0ac34>
    6b30:	00 00 6b 12 	l.j 21778 <__rom_size+0x742c>
    6b34:	01 01 04 00 	l.j 4047b34 <__stack+0x3bc7b38>
    6b38:	00 00 89 00 	l.j 28f38 <__rom_size+0xebec>
    6b3c:	00 6b 4c 05 	l.j 1ad9b50 <__stack+0x1659b54>
    6b40:	00 00 00 74 	l.j 6d10 <__rom_size-0x1363c>
    6b44:	07 05 00 00 	l.jal fc146b44 <__stack+0xfbcc6b48>
    6b48:	00 74 04 00 	l.j 1d07b48 <__stack+0x1887b4c>
    6b4c:	6d 00 00 16 	.word 0x6d000016
    6b50:	f6 10 42 00 	l.cust6 
    6b54:	00 6b 36 01 	l.j 1ad4358 <__stack+0x165435c>
    6b58:	01 04 00 00 	l.j 4106b58 <__stack+0x3c86b5c>
    6b5c:	00 89 00 00 	l.j 2246b5c <__stack+0x1dc6b60>
    6b60:	6b 69 05 00 	.word 0x6b690500
    6b64:	00 00 74 04 	l.j 23b74 <__rom_size+0x9828>
    6b68:	00 6d 00 00 	l.j 1b46b68 <__stack+0x16c6b6c>
    6b6c:	16 d7 10 43 	.word 0x16d71043
    6b70:	00 00 6b 59 	l.j 218d4 <__rom_size+0x7588>
    6b74:	01 01 04 00 	l.j 4047b74 <__stack+0x3bc7b78>
    6b78:	00 00 90 00 	l.j 2ab78 <__rom_size+0x1082c>
    6b7c:	00 6b 86 05 	l.j 1ae8390 <__stack+0x1668394>
    6b80:	00 00 00 74 	l.j 6d50 <__rom_size-0x135fc>
    6b84:	02 00 6d 00 	l.j f8021f84 <__stack+0xf7ba1f88>
    6b88:	00 01 73 10 	l.j 637c8 <__rom_size+0x4947c>
    6b8c:	4a 00 00 6b 	l.jalr r0
    6b90:	76 01 01 6d 	l.cust2 
    6b94:	00 00 1c 8b 	l.j ddc0 <__rom_size-0xc58c>
    6b98:	10 50 00 00 	l.bf 1406b98 <__stack+0xf86b9c>
    6b9c:	6a 08 01 01 	.word 0x6a080101
    6ba0:	04 00 00 00 	l.jal 6ba0 <__rom_size-0x137ac>
    6ba4:	90 00 00 6b 	l.lbs r0,0x6b(r0)
    6ba8:	b0 05 00 00 	l.muli r0,r5,0x0
    6bac:	00 74 06 00 	l.j 1d083ac <__stack+0x18883b0>
    6bb0:	6d 00 00 04 	.word 0x6d000004
    6bb4:	11 10 51 00 	l.bf 441afb4 <__stack+0x3f9afb8>
    6bb8:	00 6b a0 01 	l.j 1aeebbc <__stack+0x166ebc0>
    6bbc:	01 04 00 00 	l.j 4106bbc <__stack+0x3c86bc0>
    6bc0:	00 90 00 00 	l.j 2406bc0 <__stack+0x1f86bc4>
    6bc4:	6b cd 05 00 	.word 0x6bcd0500
    6bc8:	00 00 74 07 	l.j 23be4 <__rom_size+0x9898>
    6bcc:	00 6d 00 00 	l.j 1b46bcc <__stack+0x16c6bd0>
    6bd0:	01 60 10 53 	l.j 580ad1c <__stack+0x538ad20>
    6bd4:	00 00 6b bd 	l.j 21ac8 <__rom_size+0x777c>
    6bd8:	01 01 04 00 	l.j 4047bd8 <__stack+0x3bc7bdc>
    6bdc:	00 00 83 00 	l.j 277dc <__rom_size+0xd490>
    6be0:	00 6b ea 05 	l.j 1b013f4 <__stack+0x16813f8>
    6be4:	00 00 00 74 	l.j 6db4 <__rom_size-0x13598>
    6be8:	03 00 6d 00 	l.j fc021fe8 <__stack+0xfbba1fec>
    6bec:	00 0e 08 10 	l.j 388c2c <__ram_length+0x308c2c>
    6bf0:	57 00 00 6b 	.word 0x5700006b
    6bf4:	da 01 01 6d 	l.sb 0xffff816d(r1),r0
    6bf8:	00 00 0f 75 	l.j a9cc <__rom_size-0xf980>
    6bfc:	10 5a 00 00 	l.bf 1686bfc <__stack+0x1206c00>
    6c00:	6b a0 01 01 	.word 0x6ba00101
    6c04:	6d 00 00 10 	.word 0x6d000010
    6c08:	37 10 6a 00 	.word 0x37106a00
    6c0c:	00 00 2c 01 	l.j 11c10 <__rom_size-0x873c>
    6c10:	01 6d 00 00 	l.j 5b46c10 <__stack+0x56c6c14>
    6c14:	0a aa 10 6d 	.word 0x0aaa106d
    6c18:	00 00 00 83 	l.j 6e24 <__rom_size-0x13528>
    6c1c:	01 01 6d 00 	l.j 406201c <__stack+0x3be2020>
    6c20:	00 0b 3d 10 	l.j 2d6060 <__ram_length+0x256060>
    6c24:	6e 00 00 00 	.word 0x6e000000
    6c28:	2c 01 01 6d 	.word 0x2c01016d
    6c2c:	00 00 0e b3 	l.j a6f8 <__rom_size-0xfc54>
    6c30:	10 6f 00 00 	l.bf 1bc6c30 <__stack+0x1746c34>
    6c34:	00 2c 01 01 	l.j b07038 <__stack+0x68703c>
    6c38:	6d 00 00 01 	.word 0x6d000001
    6c3c:	b8 10 70 00 	l.slli r0,r16,0x0
    6c40:	00 00 2c 01 	l.j 11c44 <__rom_size-0x8708>
    6c44:	01 04 00 00 	l.j 4106c44 <__stack+0x3c86c48>
    6c48:	00 89 00 00 	l.j 2246c48 <__stack+0x1dc6c4c>
    6c4c:	6c 56 10 00 	.word 0x6c561000
    6c50:	00 00 74 01 	l.j 23c54 <__rom_size+0x9908>
    6c54:	00 00 3b 00 	l.j 15854 <__rom_size-0x4af8>
    6c58:	00 12 41 10 	l.j 497098 <__stack+0x1709c>
    6c5c:	72 00 00 6c 	l.cust1 
    6c60:	45 05 03 00 	l.jr r0
    6c64:	42 0a 68 3b 	.word 0x420a683b
    6c68:	00 00 18 7a 	l.j ce50 <__rom_size-0xd4fc>
    6c6c:	10 73 00 00 	l.bf 1cc6c6c <__stack+0x1846c70>
    6c70:	00 89 05 03 	l.j 224807c <__stack+0x1dc8080>
    6c74:	00 42 0a 64 	l.j 1089604 <__stack+0xc09608>
    6c78:	6d 00 00 00 	.word 0x6d000000
    6c7c:	e1 2b 06 00 	.word 0xe12b0600
    6c80:	00 00 2c 01 	l.j 11c84 <__rom_size-0x86c8>
    6c84:	01 6d 00 00 	l.j 5b46c84 <__stack+0x56c6c88>
    6c88:	09 8e 27 95 	.word 0x098e2795
    6c8c:	00 00 18 00 	l.j cc8c <__rom_size-0xd6c0>
    6c90:	01 01 6d 00 	l.j 4062090 <__stack+0x3be2094>
    6c94:	00 0f 7f 20 	l.j 3e6914 <__ram_length+0x366914>
    6c98:	26 00 00 18 	l.rfe 
    6c9c:	f7 01 01 6d 	l.cust6 
    6ca0:	00 00 03 25 	l.j 7934 <__rom_size-0x12a18>
    6ca4:	20 27 00 00 	.word 0x20270000
    6ca8:	00 41 01 01 	l.j 10470ac <__stack+0xbc70b0>
    6cac:	6d 00 00 02 	.word 0x6d000002
    6cb0:	58 20 51 00 	.word 0x58205100
    6cb4:	00 67 28 01 	l.j 19d0cb8 <__stack+0x1550cbc>
    6cb8:	01 6d 00 00 	l.j 5b46cb8 <__stack+0x56c6cbc>
    6cbc:	05 4e 20 52 	l.jal 538ee04 <__stack+0x4f0ee08>
    6cc0:	00 00 00 2c 	l.j 6d70 <__rom_size-0x135dc>
    6cc4:	01 01 6d 00 	l.j 40620c4 <__stack+0x3be20c8>
    6cc8:	00 09 bc 20 	l.j 275d48 <__ram_length+0x1f5d48>
    6ccc:	53 00 00 00 	.word 0x53000000
    6cd0:	74 01 01 6d 	l.cust2 
    6cd4:	00 00 18 20 	l.j cd54 <__rom_size-0xd5f8>
    6cd8:	20 54 00 00 	.word 0x20540000
    6cdc:	00 2c 01 01 	l.j b070e0 <__stack+0x6870e4>
    6ce0:	6d 00 00 03 	.word 0x6d000003
    6ce4:	c7 22 43 00 	.word 0xc7224300
    6ce8:	00 68 56 01 	l.j 1a1c4ec <__stack+0x159c4f0>
    6cec:	01 04 00 00 	l.j 4106cec <__stack+0x3c86cf0>
    6cf0:	1a 2f 00 00 	l.macrc r17
    6cf4:	6c fd 05 00 	.word 0x6cfd0500
    6cf8:	00 00 74 01 	l.j 23cfc <__rom_size+0x99b0>
    6cfc:	00 6f 68 64 	l.j 1be0e8c <__stack+0x1760e90>
    6d00:	66 00 22 45 	.word 0x66002245
    6d04:	00 00 6c ed 	l.j 220b8 <__rom_size+0x7d6c>
    6d08:	01 01 04 00 	l.j 4047d08 <__stack+0x3bc7d0c>
    6d0c:	00 00 90 00 	l.j 2ad0c <__rom_size+0x109c0>
    6d10:	00 6d 15 70 	l.j 1b4c2d0 <__stack+0x16cc2d4>
    6d14:	00 6d 00 00 	l.j 1b46d14 <__stack+0x16c6d18>
    6d18:	0f eb 26 4b 	l.bnf ffad0644 <__stack+0xff650648>
    6d1c:	00 00 6d 0a 	l.j 22144 <__rom_size+0x7df8>
    6d20:	01 01 6d 00 	l.j 4062120 <__stack+0x3be2124>
    6d24:	00 08 34 26 	l.j 213dbc <__ram_length+0x193dbc>
    6d28:	4c 00 00 6d 	l.maci r0,0x6d
    6d2c:	0a 01 01 6d 	.word 0x0a01016d
    6d30:	00 00 19 c1 	l.j d434 <__rom_size-0xcf18>
    6d34:	26 4d 00 00 	l.rfe 
    6d38:	6d 0a 01 01 	.word 0x6d0a0101
    6d3c:	6d 00 00 17 	.word 0x6d000017
    6d40:	e9 23 2f 00 	.word 0xe9232f00
    6d44:	00 18 b5 01 	l.j 634148 <__stack+0x1b414c>
    6d48:	01 6d 00 00 	l.j 5b46d48 <__stack+0x56c6d4c>
    6d4c:	01 92 23 32 	l.j 648fa14 <__stack+0x600fa18>
    6d50:	00 00 1b f2 	l.j dd18 <__rom_size-0xc634>
    6d54:	01 01 6d 00 	l.j 4062154 <__stack+0x3be2158>
    6d58:	00 12 22 23 	l.j 48f5e4 <__stack+0xf5e8>
    6d5c:	33 00 00 00 	.word 0x33000000
    6d60:	89 01 01 04 	l.lws r8,0x104(r1)
    6d64:	00 00 19 86 	l.j d37c <__rom_size-0xcfd0>
    6d68:	00 00 6d 73 	l.j 22334 <__rom_size+0x7fe8>
    6d6c:	05 00 00 00 	l.jal 4006d6c <__stack+0x3b86d70>
    6d70:	74 03 00 6f 	l.cust2 
    6d74:	64 66 00 18 	.word 0x64660018
    6d78:	42 00 00 6d 	.word 0x4200006d
    6d7c:	63 01 01 6f 	.word 0x6301016f
    6d80:	73 00 18 43 	l.cust1 
    6d84:	00 00 68 56 	l.j 20edc <__rom_size+0x6b90>
    6d88:	01 01 6f 6c 	l.j 4062b38 <__stack+0x3be2b3c>
    6d8c:	65 64 00 18 	.word 0x65640018
    6d90:	44 00 00 00 	l.jr r0
    6d94:	89 01 01 6d 	l.lws r8,0x16d(r1)
    6d98:	00 00 00 e1 	l.j 711c <__rom_size-0x13230>
    6d9c:	2b 06 00 00 	.word 0x2b060000
    6da0:	00 2c 01 01 	l.j b071a4 <__stack+0x6871a8>
    6da4:	6d 00 00 09 	.word 0x6d000009
    6da8:	8e 27 95 00 	l.lbz r17,0xffff9500(r7)
    6dac:	00 10 00 01 	l.j 406db0 <FindSync+0x48>
    6db0:	01 6d 00 00 	l.j 5b46db0 <__stack+0x56c6db4>
    6db4:	0f 7f 20 26 	l.bnf fdfcee4c <__stack+0xfdb4ee50>
    6db8:	00 00 10 f7 	l.j b194 <__rom_size-0xf1b8>
    6dbc:	01 01 6d 00 	l.j 40621bc <__stack+0x3be21c0>
    6dc0:	00 03 25 20 	l.j d0240 <__ram_length+0x50240>
    6dc4:	27 00 00 00 	l.rfe 
    6dc8:	41 01 01 6d 	.word 0x4101016d
    6dcc:	00 00 02 58 	l.j 772c <__rom_size-0x12c20>
    6dd0:	20 51 00 00 	.word 0x20510000
    6dd4:	67 28 01 01 	.word 0x67280101
    6dd8:	6d 00 00 05 	.word 0x6d000005
    6ddc:	4e 20 52 00 	l.maci r0,0x5200
    6de0:	00 00 2c 01 	l.j 11de4 <__rom_size-0x8568>
    6de4:	01 6d 00 00 	l.j 5b46de4 <__stack+0x56c6de8>
    6de8:	09 bc 20 53 	.word 0x09bc2053
    6dec:	00 00 00 74 	l.j 6fbc <__rom_size-0x13390>
    6df0:	01 01 6d 00 	l.j 40621f0 <__stack+0x3be21f4>
    6df4:	00 18 20 20 	l.j 60ee74 <__stack+0x18ee78>
    6df8:	54 00 00 00 	.word 0x54000000
    6dfc:	2c 01 01 6d 	.word 0x2c01016d
    6e00:	00 00 03 c7 	l.j 7d1c <__rom_size-0x12630>
    6e04:	22 43 00 00 	.word 0x22430000
    6e08:	68 56 01 01 	.word 0x68560101
    6e0c:	04 00 00 11 	l.jal 6e50 <__rom_size-0x134fc>
    6e10:	a5 00 00 6e 	l.andi r8,r0,0x6e
    6e14:	1c 05 00 00 	.word 0x1c050000
    6e18:	00 74 01 00 	l.j 1d07218 <__stack+0x188721c>
    6e1c:	6f 68 64 66 	.word 0x6f686466
    6e20:	00 22 45 00 	l.j 898220 <__stack+0x418224>
    6e24:	00 6e 0c 01 	l.j 1b89e28 <__stack+0x1709e2c>
    6e28:	01 6d 00 00 	l.j 5b46e28 <__stack+0x56c6e2c>
    6e2c:	0f eb 26 4b 	l.bnf ffad0758 <__stack+0xff65075c>
    6e30:	00 00 6d 0a 	l.j 22258 <__rom_size+0x7f0c>
    6e34:	01 01 6d 00 	l.j 4062234 <__stack+0x3be2238>
    6e38:	00 08 34 26 	l.j 213ed0 <__ram_length+0x193ed0>
    6e3c:	4c 00 00 6d 	l.maci r0,0x6d
    6e40:	0a 01 01 6d 	.word 0x0a01016d
    6e44:	00 00 19 c1 	l.j d548 <__rom_size-0xce04>
    6e48:	26 4d 00 00 	l.rfe 
    6e4c:	6d 0a 01 01 	.word 0x6d0a0101
    6e50:	6d 00 00 17 	.word 0x6d000017
    6e54:	e9 23 2f 00 	.word 0xe9232f00
    6e58:	00 10 b5 01 	l.j 43425c <_stack+0x1259c>
    6e5c:	01 6d 00 00 	l.j 5b46e5c <__stack+0x56c6e60>
    6e60:	01 92 23 32 	l.j 648fb28 <__stack+0x600fb2c>
    6e64:	00 00 17 ea 	l.j ce0c <__rom_size-0xd540>
    6e68:	01 01 6d 00 	l.j 4062268 <__stack+0x3be226c>
    6e6c:	00 12 22 23 	l.j 48f6f8 <__stack+0xf6fc>
    6e70:	33 00 00 00 	.word 0x33000000
    6e74:	89 01 01 71 	l.lws r8,0x171(r1)
    6e78:	00 00 0f 16 	l.j aad0 <__rom_size-0xf87c>
    6e7c:	0f 04 00 00 	l.bnf fc106e7c <__stack+0xfbc86e80>
    6e80:	00 10 b5 01 	l.j 434284 <_stack+0x125c4>
    6e84:	01 6d 00 00 	l.j 5b46e84 <__stack+0x56c6e88>
    6e88:	00 e1 2b 06 	l.j 3851aa0 <__stack+0x33d1aa4>
    6e8c:	00 00 00 2c 	l.j 6f3c <__rom_size-0x13410>
    6e90:	01 01 6d 00 	l.j 4062290 <__stack+0x3be2294>
    6e94:	00 09 8e 27 	l.j 26a730 <__ram_length+0x1ea730>
    6e98:	95 00 00 0e 	l.lhz r8,0xe(r0)
    6e9c:	f9 01 01 6d 	l.cust7 
    6ea0:	00 00 0f 7f 	l.j ac9c <__rom_size-0xf6b0>
    6ea4:	20 26 00 00 	.word 0x20260000
    6ea8:	0f f0 01 01 	l.bnf ffc072ac <__stack+0xff7872b0>
    6eac:	6d 00 00 03 	.word 0x6d000003
    6eb0:	25 20 27 00 	l.rfe 
    6eb4:	00 00 41 01 	l.j 172b8 <__rom_size-0x3094>
    6eb8:	01 6d 00 00 	l.j 5b46eb8 <__stack+0x56c6ebc>
    6ebc:	02 58 20 51 	l.j f960f000 <__stack+0xf918f004>
    6ec0:	00 00 67 28 	l.j 20b60 <__rom_size+0x6814>
    6ec4:	01 01 6d 00 	l.j 40622c4 <__stack+0x3be22c8>
    6ec8:	00 05 4e 20 	l.j 15a748 <__ram_length+0xda748>
    6ecc:	52 00 00 00 	.word 0x52000000
    6ed0:	2c 01 01 6d 	.word 0x2c01016d
    6ed4:	00 00 09 bc 	l.j 95c4 <__rom_size-0x10d88>
    6ed8:	20 53 00 00 	.word 0x20530000
    6edc:	00 74 01 01 	l.j 1d072e0 <__stack+0x18872e4>
    6ee0:	6d 00 00 18 	.word 0x6d000018
    6ee4:	20 20 54 00 	.word 0x20205400
    6ee8:	00 00 2c 01 	l.j 11eec <__rom_size-0x8460>
    6eec:	01 6d 00 00 	l.j 5b46eec <__stack+0x56c6ef0>
    6ef0:	17 e9 0e 26 	.word 0x17e90e26
    6ef4:	00 00 0f ae 	l.j adac <__rom_size-0xf5a0>
    6ef8:	01 01 6f 73 	l.j 4062cc4 <__stack+0x3be2cc8>
    6efc:	00 0e 27 00 	l.j 390afc <__ram_length+0x310afc>
    6f00:	00 68 56 01 	l.j 1a1c704 <__stack+0x159c708>
    6f04:	01 6d 00 00 	l.j 5b46f04 <__stack+0x56c6f08>
    6f08:	00 e1 2b 06 	l.j 3851b20 <__stack+0x33d1b24>
    6f0c:	00 00 00 2c 	l.j 6fbc <__rom_size-0x13390>
    6f10:	01 01 6d 00 	l.j 4062310 <__stack+0x3be2314>
    6f14:	00 09 8e 27 	l.j 26a7b0 <__ram_length+0x1ea7b0>
    6f18:	95 00 00 0b 	l.lhz r8,0xb(r0)
    6f1c:	a5 01 01 6d 	l.andi r8,r1,0x16d
    6f20:	00 00 0f 7f 	l.j ad1c <__rom_size-0xf630>
    6f24:	20 26 00 00 	.word 0x20260000
    6f28:	0c 9c 01 01 	l.bnf 270732c <__stack+0x2287330>
    6f2c:	6d 00 00 03 	.word 0x6d000003
    6f30:	25 20 27 00 	l.rfe 
    6f34:	00 00 41 01 	l.j 17338 <__rom_size-0x3014>
    6f38:	01 6d 00 00 	l.j 5b46f38 <__stack+0x56c6f3c>
    6f3c:	02 58 20 51 	l.j f960f080 <__stack+0xf918f084>
    6f40:	00 00 67 28 	l.j 20be0 <__rom_size+0x6894>
    6f44:	01 01 6d 00 	l.j 4062344 <__stack+0x3be2348>
    6f48:	00 05 4e 20 	l.j 15a7c8 <__ram_length+0xda7c8>
    6f4c:	52 00 00 00 	.word 0x52000000
    6f50:	2c 01 01 6d 	.word 0x2c01016d
    6f54:	00 00 09 bc 	l.j 9644 <__rom_size-0x10d08>
    6f58:	20 53 00 00 	.word 0x20530000
    6f5c:	00 74 01 01 	l.j 1d07360 <__stack+0x1887364>
    6f60:	6d 00 00 18 	.word 0x6d000018
    6f64:	20 20 54 00 	.word 0x20205400
    6f68:	00 00 2c 01 	l.j 11f6c <__rom_size-0x83e0>
    6f6c:	01 6d 00 00 	l.j 5b46f6c <__stack+0x56c6f70>
    6f70:	17 e9 23 2f 	.word 0x17e9232f
    6f74:	00 00 0c 5a 	l.j a0dc <__rom_size-0x10270>
    6f78:	01 01 6d 00 	l.j 4062378 <__stack+0x3be237c>
    6f7c:	00 01 92 23 	l.j 6b808 <__rom_size+0x514bc>
    6f80:	32 00 00 0e 	.word 0x3200000e
    6f84:	ee 01 01 6d 	.word 0xee01016d
    6f88:	00 00 15 35 	l.j c45c <__rom_size-0xdef0>
    6f8c:	17 25 00 00 	.word 0x17250000
    6f90:	00 2c 01 01 	l.j b07394 <__stack+0x687398>
    6f94:	6d 00 00 16 	.word 0x6d000016
    6f98:	e9 17 27 00 	.word 0xe9172700
    6f9c:	00 00 2c 01 	l.j 11fa0 <__rom_size-0x83ac>
    6fa0:	01 04 00 00 	l.j 4106fa0 <__stack+0x3c86fa4>
    6fa4:	0d 2b 00 00 	l.bnf 4ac6fa4 <__stack+0x4646fa8>
    6fa8:	6f b1 05 00 	.word 0x6fb10500
    6fac:	00 00 74 03 	l.j 23fb8 <__rom_size+0x9c6c>
    6fb0:	00 6f 64 66 	l.j 1be0148 <__stack+0x176014c>
    6fb4:	00 17 29 00 	l.j 5d13b4 <__stack+0x1513b8>
    6fb8:	00 6f a1 01 	l.j 1bef3bc <__stack+0x176f3c0>
    6fbc:	01 6d 00 00 	l.j 5b46fbc <__stack+0x56c6fc0>
    6fc0:	0f 7f 20 26 	l.bnf fdfcf058 <__stack+0xfdb4f05c>
    6fc4:	00 00 0a 95 	l.j 9a18 <__rom_size-0x10934>
    6fc8:	01 01 6d 00 	l.j 40623c8 <__stack+0x3be23cc>
    6fcc:	00 03 25 20 	l.j d044c <__ram_length+0x5044c>
    6fd0:	27 00 00 00 	l.rfe 
    6fd4:	41 01 01 6d 	.word 0x4101016d
    6fd8:	00 00 02 58 	l.j 7938 <__rom_size-0x12a14>
    6fdc:	20 51 00 00 	.word 0x20510000
    6fe0:	67 28 01 01 	.word 0x67280101
    6fe4:	6d 00 00 05 	.word 0x6d000005
    6fe8:	4e 20 52 00 	l.maci r0,0x5200
    6fec:	00 00 2c 01 	l.j 11ff0 <__rom_size-0x835c>
    6ff0:	01 6d 00 00 	l.j 5b46ff0 <__stack+0x56c6ff4>
    6ff4:	09 bc 20 53 	.word 0x09bc2053
    6ff8:	00 00 00 74 	l.j 71c8 <__rom_size-0x13184>
    6ffc:	01 01 6d 00 	l.j 40623fc <__stack+0x3be2400>
    7000:	00 18 20 20 	l.j 60f080 <__stack+0x18f084>
    7004:	54 00 00 00 	.word 0x54000000
    7008:	2c 01 01 6d 	.word 0x2c01016d
    700c:	00 00 09 8e 	l.j 9644 <__rom_size-0x10d08>
    7010:	27 95 00 00 	l.rfe 
    7014:	0b 9a 01 01 	.word 0x0b9a0101
    7018:	6d 00 00 0e 	.word 0x6d00000e
    701c:	cc 0d 36 00 	.word 0xcc0d3600
    7020:	00 00 2c 01 	l.j 12024 <__rom_size-0x8328>
    7024:	01 6d 00 00 	l.j 5b47024 <__stack+0x56c7028>
    7028:	05 3d 0d 38 	l.jal 4f4a508 <__stack+0x4aca50c>
    702c:	00 00 00 74 	l.j 71fc <__rom_size-0x13150>
    7030:	01 01 6d 00 	l.j 4062430 <__stack+0x3be2434>
    7034:	00 18 94 0d 	l.j 62c068 <__stack+0x1ac06c>
    7038:	39 00 00 00 	.word 0x39000000
    703c:	74 01 01 6d 	l.cust2 
    7040:	00 00 1a 28 	l.j d8e0 <__rom_size-0xca6c>
    7044:	0d 3a 00 00 	l.bnf 4e87044 <__stack+0x4a07048>
    7048:	00 74 01 01 	l.j 1d0744c <__stack+0x1887450>
    704c:	6d 00 00 18 	.word 0x6d000018
    7050:	9e 0d 3b 00 	l.addi r16,r13,0x3b00
    7054:	00 00 74 01 	l.j 24058 <__rom_size+0x9d0c>
    7058:	01 6d 00 00 	l.j 5b47058 <__stack+0x56c705c>
    705c:	12 98 0d 3c 	l.bf fa60a54c <__stack+0xfa18a550>
    7060:	00 00 00 74 	l.j 7230 <__rom_size-0x1311c>
    7064:	01 01 6d 00 	l.j 4062464 <__stack+0x3be2468>
    7068:	00 03 02 0d 	l.j c789c <__ram_length+0x4789c>
    706c:	3d 00 00 00 	.word 0x3d000000
    7070:	74 01 01 6d 	l.cust2 
    7074:	00 00 02 33 	l.j 7940 <__rom_size-0x12a0c>
    7078:	0d 3e 00 00 	l.bnf 4f87078 <__stack+0x4b0707c>
    707c:	00 2c 01 01 	l.j b07480 <__stack+0x687484>
    7080:	6d 00 00 0d 	.word 0x6d00000d
    7084:	e8 0d 41 00 	.word 0xe80d4100
    7088:	00 00 3a 01 	l.j 1588c <__rom_size-0x4ac0>
    708c:	01 6d 00 00 	l.j 5b4708c <__stack+0x56c7090>
    7090:	19 38 0d 42 	l.movhi r9,0xd42
    7094:	00 00 00 74 	l.j 7264 <__rom_size-0x130e8>
    7098:	01 01 6d 00 	l.j 4062498 <__stack+0x3be249c>
    709c:	00 0c d7 0d 	l.j 33ccd0 <__ram_length+0x2bccd0>
    70a0:	49 00 00 0b 	l.jalr r0
    70a4:	8f 01 01 6d 	l.lbz r24,0x16d(r1)
    70a8:	00 00 0a 06 	l.j 98c0 <__rom_size-0x10a8c>
    70ac:	0d 4a 00 00 	l.bnf 52870ac <__stack+0x4e070b0>
    70b0:	00 74 01 01 	l.j 1d074b4 <__stack+0x18874b8>
    70b4:	6d 00 00 06 	.word 0x6d000006
    70b8:	be 0d 4c 00 	.word 0xbe0d4c00
    70bc:	00 6b 12 01 	l.j 1acb8c0 <__stack+0x164b8c4>
    70c0:	01 04 00 00 	l.j 41070c0 <__stack+0x3c870c4>
    70c4:	0b 64 00 00 	.word 0x0b640000
    70c8:	70 d1 05 00 	l.cust1 
    70cc:	00 00 74 07 	l.j 240e8 <__rom_size+0x9d9c>
    70d0:	00 6d 00 00 	l.j 1b470d0 <__stack+0x16c70d4>
    70d4:	09 26 0d 4d 	.word 0x09260d4d
    70d8:	00 00 70 c1 	l.j 233dc <__rom_size+0x9090>
    70dc:	01 01 6d 00 	l.j 40624dc <__stack+0x3be24e0>
    70e0:	00 02 c2 0d 	l.j b7914 <__ram_length+0x37914>
    70e4:	4e 00 00 02 	l.maci r0,0x2
    70e8:	dd 01 01 6d 	l.sh 0x416d(r1),r0
    70ec:	00 00 16 01 	l.j c8f0 <__rom_size-0xda5c>
    70f0:	0d 4f 00 00 	l.bnf 53c70f0 <__stack+0x4f470f4>
    70f4:	00 2c 01 01 	l.j b074f8 <__stack+0x6874fc>
    70f8:	6d 00 00 12 	.word 0x6d000012
    70fc:	7a 0d 50 00 	l.cust3 
    7100:	00 00 2c 01 	l.j 12104 <__rom_size-0x8248>
    7104:	01 6d 00 00 	l.j 5b47104 <__stack+0x56c7108>
    7108:	1c 63 0d 51 	.word 0x1c630d51
    710c:	00 00 00 74 	l.j 72dc <__rom_size-0x13070>
    7110:	01 01 6d 00 	l.j 4062510 <__stack+0x3be2514>
    7114:	00 10 b2 0d 	l.j 433948 <_stack+0x11c88>
    7118:	52 00 00 00 	.word 0x52000000
    711c:	74 01 01 6d 	l.cust2 
    7120:	00 00 06 bc 	l.j 8c10 <__rom_size-0x1173c>
    7124:	0d 55 00 00 	l.bnf 5547124 <__stack+0x50c7128>
    7128:	6b 12 01 01 	.word 0x6b120101
    712c:	6d 00 00 09 	.word 0x6d000009
    7130:	24 0d 56 00 	l.rfe 
    7134:	00 70 c1 01 	l.j 1c37538 <__stack+0x17b753c>
    7138:	01 6d 00 00 	l.j 5b47138 <__stack+0x56c713c>
    713c:	02 c0 0d 57 	l.j fb00a698 <__stack+0xfab8a69c>
    7140:	00 00 02 dd 	l.j 7cb4 <__rom_size-0x12698>
    7144:	01 01 6d 00 	l.j 4062544 <__stack+0x3be2548>
    7148:	00 09 8e 27 	l.j 26a9e4 <__ram_length+0x1ea9e4>
    714c:	95 00 00 03 	l.lhz r8,0x3(r0)
    7150:	95 01 01 6d 	l.lhz r8,0x16d(r1)
    7154:	00 00 02 58 	l.j 7ab4 <__rom_size-0x12898>
    7158:	20 51 00 00 	.word 0x20510000
    715c:	67 28 01 01 	.word 0x67280101
    7160:	04 00 00 05 	l.jal 7174 <__rom_size-0x131d8>
    7164:	74 00 00 71 	l.cust2 
    7168:	70 05 00 00 	l.cust1 
    716c:	00 74 01 00 	l.j 1d0756c <__stack+0x1887570>
    7170:	6f 68 64 66 	.word 0x6f686466
    7174:	00 22 45 00 	l.j 898574 <__stack+0x418578>
    7178:	00 71 60 01 	l.j 1c5f17c <__stack+0x17df180>
    717c:	01 6d 00 00 	l.j 5b4717c <__stack+0x56c7180>
    7180:	0f eb 26 4b 	l.bnf ffad0aac <__stack+0xff650ab0>
    7184:	00 00 6d 0a 	l.j 225ac <__rom_size+0x8260>
    7188:	01 01 6d 00 	l.j 4062588 <__stack+0x3be258c>
    718c:	00 08 34 26 	l.j 214224 <__ram_length+0x194224>
    7190:	4c 00 00 6d 	l.maci r0,0x6d
    7194:	0a 01 01 6d 	.word 0x0a01016d
    7198:	00 00 19 c1 	l.j d89c <__rom_size-0xcab0>
    719c:	26 4d 00 00 	l.rfe 
    71a0:	6d 0a 01 01 	.word 0x6d0a0101
    71a4:	6d 00 00 17 	.word 0x6d000017
    71a8:	e9 23 2f 00 	.word 0xe9232f00
    71ac:	00 04 4a 01 	l.j 1199b0 <__ram_length+0x999b0>
    71b0:	01 6d 00 00 	l.j 5b471b0 <__stack+0x56c71b4>
    71b4:	01 92 23 32 	l.j 648fe7c <__stack+0x600fe80>
    71b8:	00 00 07 47 	l.j 8ed4 <__rom_size-0x11478>
    71bc:	01 01 6f 73 	l.j 4062f88 <__stack+0x3be2f8c>
    71c0:	00 15 13 00 	l.j 54bdc0 <__stack+0xcbdc4>
    71c4:	00 68 56 01 	l.j 1a1c9c8 <__stack+0x159c9cc>
    71c8:	01 6d 00 00 	l.j 5b471c8 <__stack+0x56c71cc>
    71cc:	14 f1 15 14 	.word 0x14f11514
    71d0:	00 00 45 fb 	l.j 189bc <__rom_size-0x1990>
    71d4:	01 01 04 00 	l.j 40481d4 <__stack+0x3bc81d8>
    71d8:	00 00 2c 00 	l.j 121d8 <__rom_size-0x8174>
    71dc:	00 71 e7 10 	l.j 1c80e1c <__stack+0x1800e20>
    71e0:	00 00 00 74 	l.j 73b0 <__rom_size-0x12f9c>
    71e4:	0b ff 00 6d 	.word 0x0bff006d
    71e8:	00 00 09 ab 	l.j 9894 <__rom_size-0x10ab8>
    71ec:	15 17 00 00 	l.nop 0x0
    71f0:	71 d6 01 01 	l.cust1 
    71f4:	6d 00 00 05 	.word 0x6d000005
    71f8:	93 15 19 00 	l.lbs r24,0x1900(r21)
    71fc:	00 04 9a 01 	l.j 12da00 <__ram_length+0xada00>
    7200:	01 6d 00 00 	l.j 5b47200 <__stack+0x56c7204>
    7204:	02 58 20 51 	l.j f960f348 <__stack+0xf918f34c>
    7208:	00 00 67 28 	l.j 20ea8 <__rom_size+0x6b5c>
    720c:	01 01 04 00 	l.j 404820c <__stack+0x3bc8210>
    7210:	00 00 89 00 	l.j 29610 <__rom_size+0xf2c4>
    7214:	00 72 24 05 	l.j 1c90228 <__stack+0x181022c>
    7218:	00 00 00 74 	l.j 73e8 <__rom_size-0x12f64>
    721c:	5f 05 00 00 	.word 0x5f050000
    7220:	00 74 07 00 	l.j 1d08e20 <__stack+0x1888e24>
    7224:	3b 00 00 19 	.word 0x3b000019
    7228:	64 0c 15 00 	.word 0x640c1500
    722c:	00 72 35 05 	l.j 1c94640 <__stack+0x1814644>
    7230:	03 00 41 74 	l.j fc017800 <__stack+0xfbb97804>
    7234:	20 08 00 00 	.word 0x20080000
    7238:	72 0e 6d 00 	l.cust1 
    723c:	00 17 d8 0b 	l.j 5fd268 <__stack+0x17d26c>
    7240:	75 00 00 26 	l.cust2 
    7244:	7d 01 01 6d 	l.cust4 
    7248:	00 00 03 1b 	l.j 7eb4 <__rom_size-0x12498>
    724c:	0b 76 00 00 	.word 0x0b760000
    7250:	26 7d 01 01 	l.rfe 
    7254:	6e 00 00 0f 	.word 0x6e00000f
    7258:	43 0b 77 00 	.word 0x430b7700
    725c:	00 26 7d 00 	l.j 9a665c <__stack+0x526660>
    7260:	04 00 00 00 	l.jal 7260 <__rom_size-0x130ec>
    7264:	89 00 00 72 	l.lws r8,0x72(r0)
    7268:	70 05 00 00 	l.cust1 
    726c:	00 74 ff 00 	l.j 1d46e6c <__stack+0x18c6e70>
    7270:	6f 62 75 66 	.word 0x6f627566
    7274:	00 03 06 00 	l.j c8a74 <__ram_length+0x48a74>
    7278:	00 72 60 01 	l.j 1c9f27c <__stack+0x181f280>
    727c:	01 04 00 00 	l.j 410727c <__stack+0x3c87280>
    7280:	24 7f 00 00 	l.rfe 
    7284:	72 8d 05 00 	l.cust1 
    7288:	00 00 74 14 	l.j 242d8 <__rom_size+0x9f8c>
    728c:	00 23 00 00 	l.j 8c728c <__stack+0x447290>
    7290:	12 4c 0b 24 	l.bf f9309f20 <__stack+0xf8e89f24>
    7294:	00 00 72 7d 	l.j 23c88 <__rom_size+0x993c>
    7298:	3b 00 00 09 	.word 0x3b000009
    729c:	8e 0b 3f 00 	l.lbz r16,0x3f00(r11)
    72a0:	00 24 7f 05 	l.j 926eb4 <__stack+0x4a6eb8>
    72a4:	03 00 41 a3 	l.j fc017930 <__stack+0xfbb97934>
    72a8:	4c 30 62 75 	l.maci r16,0x6275
    72ac:	66 00 03 06 	.word 0x66000306
    72b0:	00 00 72 60 	l.j 23c30 <__rom_size+0x98e4>
    72b4:	05 03 00 41 	l.jal 40c73b8 <__stack+0x3c473bc>
    72b8:	a3 98 6d 00 	l.addic r28,r24,0x6d00
    72bc:	00 17 d8 0b 	l.j 5fd2e8 <__stack+0x17d2ec>
    72c0:	75 00 00 26 	l.cust2 
    72c4:	7d 01 01 6d 	l.cust4 
    72c8:	00 00 03 1b 	l.j 7f34 <__rom_size-0x12418>
    72cc:	0b 76 00 00 	.word 0x0b760000
    72d0:	26 7d 01 01 	l.rfe 
    72d4:	3b 00 00 0f 	.word 0x3b00000f
    72d8:	7f 20 26 00 	l.cust4 
    72dc:	00 24 09 05 	l.j 9096f0 <__stack+0x4896f4>
    72e0:	03 00 41 a4 	l.j fc017970 <__stack+0xfbb97974>
    72e4:	98 3b 00 00 	l.lhs r1,0x0(r27)
    72e8:	03 25 20 27 	l.j fc94f384 <__stack+0xfc4cf388>
    72ec:	00 00 00 41 	l.j 73f0 <__rom_size-0x12f5c>
    72f0:	05 03 00 41 	l.jal 40c73f4 <__stack+0x3c473f8>
    72f4:	a4 d8 3b 00 	l.andi r6,r24,0x3b00
    72f8:	00 02 58 20 	l.j 9d378 <__ram_length+0x1d378>
    72fc:	51 00 00 67 	.word 0x51000067
    7300:	28 05 03 00 	.word 0x28050300
    7304:	41 a4 dc 3b 	.word 0x41a4dc3b
    7308:	00 00 05 4e 	l.j 8840 <__rom_size-0x11b0c>
    730c:	20 52 00 00 	.word 0x20520000
    7310:	00 2c 05 03 	l.j b0871c <__stack+0x688720>
    7314:	00 41 a8 dc 	l.j 1071684 <__stack+0xbf1688>
    7318:	3b 00 00 09 	.word 0x3b000009
    731c:	bc 20 53 00 	l.sfnei r0,0x5300
    7320:	00 00 74 05 	l.j 24334 <__rom_size+0x9fe8>
    7324:	03 00 41 a8 	l.j fc0179c4 <__stack+0xfbb979c8>
    7328:	e0 3b 00 00 	l.add r1,r27,r0
    732c:	18 20 0d 37 	l.movhi r1,0xd37
    7330:	00 00 00 2c 	l.j 73e0 <__rom_size-0x12f6c>
    7334:	05 03 00 41 	l.jal 40c7438 <__stack+0x3c4743c>
    7338:	a3 51 6e 00 	l.addic r26,r17,0x6e00
    733c:	00 03 b4 0c 	l.j f436c <__ram_length+0x7436c>
    7340:	10 00 00 00 	l.bf 7340 <__rom_size-0x1300c>
    7344:	3a 00 6e 00 	.word 0x3a006e00
    7348:	00 03 ba 0c 	l.j f5b78 <__ram_length+0x75b78>
    734c:	11 00 00 00 	l.bf 400734c <__stack+0x3b87350>
    7350:	3a 60 3b 00 	.word 0x3a603b00
    7354:	00 00 e1 2b 	l.j 3f800 <__rom_size+0x254b4>
    7358:	06 00 00 00 	l.jal f8007358 <__stack+0xf7b8735c>
    735c:	2c 05 03 00 	.word 0x2c050300
    7360:	41 a8 e4 3b 	.word 0x41a8e43b
    7364:	00 00 02 9a 	l.j 7dcc <__rom_size-0x12580>
    7368:	11 2a 00 00 	l.bf 4a87368 <__stack+0x460736c>
    736c:	68 b0 05 03 	.word 0x68b00503
    7370:	00 41 a8 e8 	l.j 1071710 <__stack+0xbf1714>
    7374:	23 00 00 0d 	.word 0x2300000d
    7378:	44 0f 29 00 	l.jr r5
    737c:	00 68 56 3b 	l.j 1a1cc68 <__stack+0x159cc6c>
    7380:	00 00 03 c7 	l.j 829c <__rom_size-0x120b0>
    7384:	0f 2a 00 00 	l.bnf fca87384 <__stack+0xfc607388>
    7388:	68 56 05 03 	.word 0x68560503
    738c:	00 41 a3 60 	l.j 107010c <__stack+0xbf0110>
    7390:	30 68 64 66 	.word 0x30686466
    7394:	00 22 45 00 	l.j 898794 <__stack+0x418798>
    7398:	00 69 b7 05 	l.j 1a74fac <__stack+0x15f4fb0>
    739c:	03 00 41 a8 	l.j fc017a3c <__stack+0xfbb97a40>
    73a0:	f8 3b 00 00 	l.cust7 
    73a4:	00 23 10 47 	l.j 8cb4c0 <__stack+0x44b4c4>
    73a8:	00 00 73 b2 	l.j 24270 <__rom_size+0x9f24>
    73ac:	05 03 00 41 	l.jal 40c74b0 <__stack+0x3c474b4>
    73b0:	6e 6c 08 00 	.word 0x6e6c0800
    73b4:	00 6a 08 3b 	l.j 1a894a0 <__stack+0x16094a4>
    73b8:	00 00 0f eb 	l.j b364 <__rom_size-0xefe8>
    73bc:	10 48 00 00 	l.bf 12073bc <__stack+0xd873c0>
    73c0:	73 c8 05 03 	l.cust1 
    73c4:	00 41 6e 7c 	l.j 1062db4 <__stack+0xbe2db8>
    73c8:	08 00 00 6a 	.word 0x0800006a
    73cc:	08 3b 00 00 	.word 0x083b0000
    73d0:	08 34 10 49 	.word 0x08341049
    73d4:	00 00 73 de 	l.j 2434c <__rom_size+0xa000>
    73d8:	05 03 00 41 	l.jal 40c74dc <__stack+0x3c474e0>
    73dc:	6e 8c 08 00 	.word 0x6e8c0800
    73e0:	00 6a 08 3b 	l.j 1a894cc <__stack+0x16094d0>
    73e4:	00 00 19 c1 	l.j dae8 <__rom_size-0xc864>
    73e8:	10 4e 00 00 	l.bf 13873e8 <__stack+0xf073ec>
    73ec:	73 f4 05 03 	l.cust1 
    73f0:	00 41 6e a8 	l.j 1062e90 <__stack+0xbe2e94>
    73f4:	08 00 00 6a 	.word 0x0800006a
    73f8:	08 3b 00 00 	.word 0x083b0000
    73fc:	17 e9 10 37 	.word 0x17e91037
    7400:	00 00 1c b2 	l.j e6c8 <__rom_size-0xbc84>
    7404:	05 03 00 41 	l.jal 40c7508 <__stack+0x3c4750c>
    7408:	cb 80 3b 00 	lf.add.s r28,r0,r7
    740c:	00 01 92 10 	l.j 6bc4c <__rom_size+0x51900>
    7410:	36 00 00 20 	.word 0x36000020
    7414:	c4 05 03 00 	.word 0xc4050300
    7418:	41 cc ac 3b 	.word 0x41ccac3b
    741c:	00 00 12 22 	l.j bca4 <__rom_size-0xe6a8>
    7420:	15 15 00 00 	l.nop 0x0
    7424:	00 89 05 03 	l.j 2248830 <__stack+0x1dc8834>
    7428:	00 41 a3 50 	l.j 1070168 <__stack+0xbf016c>
    742c:	30 73 00 12 	.word 0x30730012
    7430:	a0 00 00 68 	l.addic r0,r0,0x68
    7434:	56 05 03 00 	.word 0x56050300
    7438:	41 cd 18 3b 	.word 0x41cd183b
    743c:	00 00 14 f1 	l.j c800 <__rom_size-0xdb4c>
    7440:	15 14 00 00 	l.nop 0x0
    7444:	45 fb 05 03 	l.jr r0
    7448:	00 41 cd 40 	l.j 107a948 <__stack+0xbfa94c>
    744c:	3b 00 00 09 	.word 0x3b000009
    7450:	ab 15 17 00 	l.ori r24,r21,0x1700
    7454:	00 71 d6 05 	l.j 1c7cc68 <__stack+0x17fcc6c>
    7458:	03 00 41 cd 	l.j fc017b8c <__stack+0xfbb97b90>
    745c:	4c 3b 00 00 	l.maci r27,0x0
    7460:	05 93 15 19 	l.jal 64cc8c4 <__stack+0x604c8c8>
    7464:	00 00 04 9a 	l.j 86cc <__rom_size-0x11c80>
    7468:	05 03 00 41 	l.jal 40c756c <__stack+0x3c47570>
    746c:	d9 4c 23 00 	l.sb 0x5300(r12),r4
    7470:	00 18 a3 0d 	l.j 6300a4 <__stack+0x1b00a8>
    7474:	32 00 00 00 	.word 0x32000000
    7478:	3a 23 00 00 	.word 0x3a230000
    747c:	0f 2f 0d 33 	l.bnf fcbca948 <__stack+0xfc74a94c>
    7480:	00 00 00 3a 	l.j 7568 <__rom_size-0x12de4>
    7484:	3b 00 00 0e 	.word 0x3b00000e
    7488:	cc 0d 36 00 	.word 0xcc0d3600
    748c:	00 00 2c 05 	l.j 124a0 <__rom_size-0x7eac>
    7490:	03 00 41 dc 	l.j fc017c00 <__stack+0xfbb97c04>
    7494:	80 3b 00 00 	l.ld r1,0x0(r27)
    7498:	05 3d 0d 38 	l.jal 4f4a978 <__stack+0x4aca97c>
    749c:	00 00 00 74 	l.j 766c <__rom_size-0x12ce0>
    74a0:	05 03 00 41 	l.jal 40c75a4 <__stack+0x3c475a8>
    74a4:	dc 84 3b 00 	l.sh 0x2300(r4),r7
    74a8:	00 18 94 0d 	l.j 62c4dc <__stack+0x1ac4e0>
    74ac:	39 00 00 00 	.word 0x39000000
    74b0:	74 05 03 00 	l.cust2 
    74b4:	41 dc 88 3b 	.word 0x41dc883b
    74b8:	00 00 1a 28 	l.j dd58 <__rom_size-0xc5f4>
    74bc:	0d 3a 00 00 	l.bnf 4e874bc <__stack+0x4a074c0>
    74c0:	00 74 05 03 	l.j 1d088cc <__stack+0x18888d0>
    74c4:	00 41 dc 8c 	l.j 107e6f4 <__stack+0xbfe6f8>
    74c8:	3b 00 00 18 	.word 0x3b000018
    74cc:	9e 0d 3b 00 	l.addi r16,r13,0x3b00
    74d0:	00 00 74 05 	l.j 244e4 <__rom_size+0xa198>
    74d4:	03 00 41 dc 	l.j fc017c44 <__stack+0xfbb97c48>
    74d8:	90 3b 00 00 	l.lbs r1,0x0(r27)
    74dc:	12 98 0d 3c 	l.bf fa60a9cc <__stack+0xfa18a9d0>
    74e0:	00 00 00 74 	l.j 76b0 <__rom_size-0x12c9c>
    74e4:	05 03 00 41 	l.jal 40c75e8 <__stack+0x3c475ec>
    74e8:	dc 94 3b 00 	l.sh 0x2300(r20),r7
    74ec:	00 03 02 0d 	l.j c7d20 <__ram_length+0x47d20>
    74f0:	3d 00 00 00 	.word 0x3d000000
    74f4:	74 05 03 00 	l.cust2 
    74f8:	41 dc 98 3b 	.word 0x41dc983b
    74fc:	00 00 02 33 	l.j 7dc8 <__rom_size-0x12584>
    7500:	0d 3e 00 00 	l.bnf 4f87500 <__stack+0x4b07504>
    7504:	00 2c 05 03 	l.j b08910 <__stack+0x688914>
    7508:	00 41 dc 9c 	l.j 107e778 <__stack+0xbfe77c>
    750c:	3b 00 00 0d 	.word 0x3b00000d
    7510:	e8 0d 41 00 	.word 0xe80d4100
    7514:	00 00 3a 05 	l.j 15d28 <__rom_size-0x4624>
    7518:	03 00 41 dc 	l.j fc017c88 <__stack+0xfbb97c8c>
    751c:	9e 3b 00 00 	l.addi r17,r27,0x0
    7520:	19 38 0d 42 	l.movhi r9,0xd42
    7524:	00 00 00 74 	l.j 76f4 <__rom_size-0x12c58>
    7528:	05 03 00 41 	l.jal 40c762c <__stack+0x3c47630>
    752c:	dc a0 3b 00 	l.sh 0x2b00(r0),r7
    7530:	00 0c d7 0d 	l.j 33d164 <__ram_length+0x2bd164>
    7534:	49 00 00 0b 	l.jalr r0
    7538:	8f 05 03 00 	l.lbz r24,0x300(r5)
    753c:	41 dc a4 3b 	.word 0x41dca43b
    7540:	00 00 0a 06 	l.j 9d58 <__rom_size-0x105f4>
    7544:	0d 4a 00 00 	l.bnf 5287544 <__stack+0x4e07548>
    7548:	00 74 05 03 	l.j 1d08954 <__stack+0x1888958>
    754c:	00 41 de a4 	l.j 107efdc <__stack+0xbfefe0>
    7550:	3b 00 00 06 	.word 0x3b000006
    7554:	be 10 41 00 	.word 0xbe104100
    7558:	00 6b 12 05 	l.j 1acbd6c <__stack+0x164bd70>
    755c:	03 00 41 de 	l.j fc017cd4 <__stack+0xfbb97cd8>
    7560:	a8 3b 00 00 	l.ori r1,r27,0x0
    7564:	09 26 10 3c 	.word 0x0926103c
    7568:	00 00 6a c1 	l.j 2206c <__rom_size+0x7d20>
    756c:	05 03 00 41 	l.jal 40c7670 <__stack+0x3c47674>
    7570:	e6 d0 3b 00 	.word 0xe6d03b00
    7574:	00 02 c2 10 	l.j b7db4 <__ram_length+0x37db4>
    7578:	3d 00 00 02 	.word 0x3d000002
    757c:	dd 05 03 00 	l.sh 0x4300(r5),r0
    7580:	41 e7 d0 3b 	.word 0x41e7d03b
    7584:	00 00 16 01 	l.j cd88 <__rom_size-0xd5c4>
    7588:	0d 4f 00 00 	l.bnf 53c7588 <__stack+0x4f4758c>
    758c:	00 2c 05 03 	l.j b08998 <__stack+0x68899c>
    7590:	00 41 a3 52 	l.j 10702d8 <__stack+0xbf02dc>
    7594:	3b 00 00 12 	.word 0x3b000012
    7598:	7a 0d 50 00 	l.cust3 
    759c:	00 00 2c 05 	l.j 125b0 <__rom_size-0x7d9c>
    75a0:	03 00 41 a3 	l.j fc017c2c <__stack+0xfbb97c30>
    75a4:	53 3b 00 00 	.word 0x533b0000
    75a8:	1c 63 0d 51 	.word 0x1c630d51
    75ac:	00 00 00 74 	l.j 777c <__rom_size-0x12bd0>
    75b0:	05 03 00 41 	l.jal 40c76b4 <__stack+0x3c476b8>
    75b4:	a3 54 3b 00 	l.addic r26,r20,0x3b00
    75b8:	00 10 b2 0d 	l.j 433dec <_stack+0x1212c>
    75bc:	52 00 00 00 	.word 0x52000000
    75c0:	74 05 03 00 	l.cust2 
    75c4:	41 a3 58 3b 	.word 0x41a3583b
    75c8:	00 00 06 bc 	l.j 90b8 <__rom_size-0x11294>
    75cc:	0d 55 00 00 	l.bnf 55475cc <__stack+0x50c75d0>
    75d0:	6b 12 05 03 	.word 0x6b120503
    75d4:	00 41 e7 d8 	l.j 1081534 <__stack+0xc01538>
    75d8:	3b 00 00 09 	.word 0x3b000009
    75dc:	24 0d 56 00 	l.rfe 
    75e0:	00 70 c1 05 	l.j 1c379f4 <__stack+0x17b79f8>
    75e4:	03 00 41 f0 	l.j fc017da4 <__stack+0xfbb97da8>
    75e8:	00 3b 00 00 	l.j ec75e8 <__stack+0xa475ec>
    75ec:	02 c0 0d 57 	l.j fb00ab48 <__stack+0xfab8ab4c>
    75f0:	00 00 02 dd 	l.j 8164 <__rom_size-0x121e8>
    75f4:	05 03 00 41 	l.jal 40c76f8 <__stack+0x3c476fc>
    75f8:	f1 00 6e 00 	l.cust5 r8,r0,r13,0x30,0x0
    75fc:	00 15 35 17 	l.j 554a58 <__stack+0xd4a5c>
    7600:	25 00 00 29 	l.rfe 
    7604:	82 00 3b 00 	l.ld r16,0x3b00(r0)
    7608:	00 16 e9 17 	l.j 5c1a64 <__stack+0x141a68>
    760c:	27 00 00 00 	l.rfe 
    7610:	2c 05 03 00 	.word 0x2c050300
    7614:	41 a3 5c 23 	.word 0x41a35c23
    7618:	00 00 0f b8 	l.j b4f8 <__rom_size-0xee54>
    761c:	17 28 00 00 	.word 0x17280000
    7620:	48 d3 30 64 	l.jalr r6
    7624:	66 00 10 34 	.word 0x66001034
    7628:	00 00 6a 9a 	l.j 22090 <__rom_size+0x7d44>
    762c:	05 03 00 41 	l.jal 40c7730 <__stack+0x3c47734>
    7630:	f1 08 55 00 	l.cust5 r8,r8,r10,0x28,0x0
    7634:	00 0f 16 0f 	l.j 3cce70 <__ram_length+0x34ce70>
    7638:	04 00 00 00 	l.jal 7638 <__rom_size-0x12d14>
    763c:	10 b5 05 03 	l.bf 2d48a48 <__stack+0x28c8a4c>
    7640:	00 41 fb f8 	l.j 1086620 <__stack+0xc06624>
    7644:	23 00 00 00 	l.csync 
    7648:	9b 18 40 00 	l.lhs r24,0x4000(r24)
    764c:	00 00 90 30 	l.j 2b70c <__rom_size+0x113c0>
    7650:	6c 65 64 00 	.word 0x6c656400
    7654:	18 44 00 00 	l.movhi r2,0x0
    7658:	00 89 05 03 	l.j 2248a64 <__stack+0x1dc8a68>
    765c:	00 41 a3 88 	l.j 107047c <__stack+0xbf0480>
    7660:	3b 00 00 14 	.word 0x3b000014
    7664:	7e 10 2d 00 	l.cust4 
    7668:	00 00 2c 05 	l.j 1267c <__rom_size-0x7cd0>
    766c:	03 00 41 a3 	l.j fc017cf8 <__stack+0xfbb97cfc>
    7670:	89 3b 00 00 	l.lws r9,0x0(r27)
    7674:	07 cc 10 2e 	l.jal ff30b72c <__stack+0xfee8b730>
    7678:	00 00 00 2c 	l.j 7728 <__rom_size-0x12c24>
    767c:	05 03 00 41 	l.jal 40c7780 <__stack+0x3c47784>
    7680:	fd 24 3b 00 	l.cust8 
    7684:	00 14 e3 10 	l.j 5402c4 <__stack+0xc02c8>
    7688:	2f 00 00 00 	.word 0x2f000000
    768c:	2c 05 03 00 	.word 0x2c050300
    7690:	41 a3 8a 3b 	.word 0x41a38a3b
    7694:	00 00 07 04 	l.j 92a4 <__rom_size-0x110a8>
    7698:	10 30 00 00 	l.bf c07698 <__stack+0x78769c>
    769c:	00 48 05 03 	l.j 1208aa8 <__stack+0xd88aac>
    76a0:	00 41 a3 8c 	l.j 10704d0 <__stack+0xbf04d4>
    76a4:	3b 00 00 15 	.word 0x3b000015
    76a8:	4e 10 31 00 	l.maci r16,0x3100
    76ac:	00 00 74 05 	l.j 246c0 <__rom_size+0xa374>
    76b0:	03 00 41 fd 	l.j fc017ea4 <__stack+0xfbb97ea8>
    76b4:	28 3b 00 00 	.word 0x283b0000
    76b8:	16 f6 10 42 	.word 0x16f61042
    76bc:	00 00 6b 36 	l.j 22394 <__rom_size+0x8048>
    76c0:	05 03 00 41 	l.jal 40c77c4 <__stack+0x3c477c8>
    76c4:	fd 2c 3b 00 	l.cust8 
    76c8:	00 16 d7 10 	l.j 5bd308 <__stack+0x13d30c>
    76cc:	43 00 00 6b 	.word 0x4300006b
    76d0:	59 05 03 00 	.word 0x59050300
    76d4:	41 fd 54 3b 	.word 0x41fd543b
    76d8:	00 00 01 73 	l.j 7ca4 <__rom_size-0x126a8>
    76dc:	10 4a 00 00 	l.bf 12876dc <__stack+0xe076e0>
    76e0:	76 e8 05 03 	l.cust2 
    76e4:	00 41 6e 9c 	l.j 1063154 <__stack+0xbe3158>
    76e8:	08 00 00 6b 	.word 0x0800006b
    76ec:	76 3b 00 00 	l.cust2 
    76f0:	1c 8b 10 50 	.word 0x1c8b1050
    76f4:	00 00 76 fe 	l.j 252ec <__rom_size+0xafa0>
    76f8:	05 03 00 41 	l.jal 40c77fc <__stack+0x3c47800>
    76fc:	6e b8 08 00 	.word 0x6eb80800
    7700:	00 6a 08 3b 	l.j 1a897ec <__stack+0x16097f0>
    7704:	00 00 04 11 	l.j 8748 <__rom_size-0x11c04>
    7708:	10 51 00 00 	l.bf 1447708 <__stack+0xfc770c>
    770c:	77 14 05 03 	l.cust2 
    7710:	00 41 6e c8 	l.j 1063230 <__stack+0xbe3234>
    7714:	08 00 00 6b 	.word 0x0800006b
    7718:	a0 3b 00 00 	l.addic r1,r27,0x0
    771c:	01 60 10 53 	l.j 580b868 <__stack+0x538b86c>
    7720:	00 00 77 2a 	l.j 253c8 <__rom_size+0xb07c>
    7724:	05 03 00 41 	l.jal 40c7828 <__stack+0x3c4782c>
    7728:	6e e4 08 00 	.word 0x6ee40800
    772c:	00 6b bd 3b 	l.j 1af6c18 <__stack+0x1676c1c>
    7730:	00 00 0e 08 	l.j af50 <__rom_size-0xf3fc>
    7734:	10 57 00 00 	l.bf 15c7734 <__stack+0x1147738>
    7738:	77 40 05 03 	l.cust2 
    773c:	00 41 6f 04 	l.j 106334c <__stack+0xbe3350>
    7740:	08 00 00 6b 	.word 0x0800006b
    7744:	da 23 00 00 	l.sb 0xffff8800(r3),r0
    7748:	0f 75 10 5a 	l.bnf fdd4b8b0 <__stack+0xfd8cb8b4>
    774c:	00 00 77 50 	l.j 2548c <__rom_size+0xb140>
    7750:	08 00 00 6b 	.word 0x0800006b
    7754:	a0 3b 00 00 	l.addic r1,r27,0x0
    7758:	10 37 10 6a 	l.bf dcb900 <__stack+0x94b904>
    775c:	00 00 00 2c 	l.j 780c <__rom_size-0x12b40>
    7760:	05 03 00 41 	l.jal 40c7864 <__stack+0x3c47868>
    7764:	a3 90 3b 00 	l.addic r28,r16,0x3b00
    7768:	00 0a aa 10 	l.j 2b1fa8 <__ram_length+0x231fa8>
    776c:	6d 00 00 00 	.word 0x6d000000
    7770:	83 05 03 00 	l.ld r24,0x300(r5)
    7774:	41 a3 94 3b 	.word 0x41a3943b
    7778:	00 00 0b 3d 	l.j a46c <__rom_size-0xfee0>
    777c:	10 6e 00 00 	l.bf 1b8777c <__stack+0x1707780>
    7780:	00 2c 05 03 	l.j b08b8c <__stack+0x688b90>
    7784:	00 41 fd 59 	l.j 1086ce8 <__stack+0xc06cec>
    7788:	3b 00 00 0e 	.word 0x3b00000e
    778c:	b3 10 6f 00 	l.muli r24,r16,0x6f00
    7790:	00 00 2c 05 	l.j 127a4 <__rom_size-0x7ba8>
    7794:	03 00 41 fd 	l.j fc017f88 <__stack+0xfbb97f8c>
    7798:	5a 3b 00 00 	.word 0x5a3b0000
    779c:	01 b8 10 70 	l.j 6e0b95c <__stack+0x698b960>
    77a0:	00 00 00 2c 	l.j 7850 <__rom_size-0x12afc>
    77a4:	05 03 00 41 	l.jal 40c78a8 <__stack+0x3c478ac>
    77a8:	fd 5b 30 63 	l.cust8 
    77ac:	72 63 00 11 	l.cust1 
    77b0:	25 00 00 00 	l.rfe 
    77b4:	2c 05 03 00 	.word 0x2c050300
    77b8:	41 fd 5c 3b 	.word 0x41fd5c3b
    77bc:	00 00 0f e3 	l.j b748 <__rom_size-0xec04>
    77c0:	11 26 00 00 	l.bf 49877c0 <__stack+0x45077c4>
    77c4:	00 48 05 03 	l.j 1208bd0 <__stack+0xd88bd4>
    77c8:	00 41 fd 60 	l.j 1086d48 <__stack+0xc06d4c>
    77cc:	3b 00 00 00 	.word 0x3b000000
    77d0:	35 11 27 00 	.word 0x35112700
    77d4:	00 00 2c 05 	l.j 127e8 <__rom_size-0x7b64>
    77d8:	03 00 41 fd 	l.j fc017fcc <__stack+0xfbb97fd0>
    77dc:	64 3b 00 00 	.word 0x643b0000
    77e0:	05 ac 11 28 	l.jal 6b0bc80 <__stack+0x668bc84>
    77e4:	00 00 00 2c 	l.j 7894 <__rom_size-0x12ab8>
    77e8:	05 03 00 41 	l.jal 40c78ec <__stack+0x3c478f0>
    77ec:	fd 65 3b 00 	l.cust8 
    77f0:	00 1c 5a 28 	l.j 71e090 <__stack+0x29e094>
    77f4:	1e 00 00 67 	.word 0x1e000067
    77f8:	87 05 03 00 	l.lwz r24,0x300(r5)
    77fc:	41 9b 3c 3b 	.word 0x419b3c3b
    7800:	00 00 19 01 	l.j dc04 <__rom_size-0xc748>
    7804:	29 03 00 00 	.word 0x29030000
    7808:	78 10 05 03 	l.cust3 
    780c:	00 41 6f 14 	l.j 106345c <__stack+0xbe3460>
    7810:	08 00 00 67 	.word 0x08000067
    7814:	aa 3b 00 00 	l.ori r17,r27,0x0
    7818:	0c 66 12 2f 	l.bnf 198c0d4 <__stack+0x150c0d8>
    781c:	00 00 78 26 	l.j 258b4 <__rom_size+0xb568>
    7820:	05 03 00 41 	l.jal 40c7924 <__stack+0x3c47928>
    7824:	73 84 08 00 	l.cust1 
    7828:	00 67 d2 3b 	l.j 19fc114 <__stack+0x157c118>
    782c:	00 00 17 fe 	l.j d824 <__rom_size-0xcb28>
    7830:	12 41 00 00 	l.bf f9047830 <__stack+0xf8bc7834>
    7834:	67 f4 05 03 	.word 0x67f40503
    7838:	00 41 fd 68 	l.j 1086dd8 <__stack+0xc06ddc>
    783c:	3b 00 00 02 	.word 0x3b000002
    7840:	eb 12 42 00 	.word 0xeb124200
    7844:	00 68 11 05 	l.j 1a0bc58 <__stack+0x158bc5c>
    7848:	03 00 42 01 	l.j fc01804c <__stack+0xfbb98050>
    784c:	Address 0x0000784c is out of bounds.


Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	00 00 c9 74 	l.j 325d0 <__rom_size+0x18284>
       4:	00 02 00 00 	l.j 80004 <__ram_length+0x4>
       8:	02 ab 01 01 	l.j faac040c <__stack+0xfa640410>
       c:	f6 f5 0a 00 	l.cust6 
      10:	01 01 01 01 	l.j 4040414 <__stack+0x3bc0418>
      14:	00 00 00 01 	l.j 18 <__rom_size-0x1a334>
      18:	6b 6c 69 62 	.word 0x6b6c6962
      1c:	63 00 2f 6f 	.word 0x63002f6f
      20:	70 74 2f 6f 	l.cust1 
      24:	72 33 32 2d 	l.cust1 
      28:	65 6c 66 2d 	.word 0x656c662d
      2c:	31 2e 30 72 	.word 0x312e3072
      30:	63 31 2f 62 	.word 0x63312f62
      34:	69 6e 2f 2e 	.word 0x696e2f2e
      38:	2e 2f 6c 69 	.word 0x2e2f6c69
      3c:	62 2f 67 63 	.word 0x622f6763
      40:	63 2f 6f 72 	.word 0x632f6f72
      44:	33 32 2d 65 	.word 0x33322d65
      48:	6c 66 2f 34 	.word 0x6c662f34
      4c:	2e 35 2e 31 	.word 0x2e352e31
      50:	2d 6f 72 33 	.word 0x2d6f7233
      54:	32 2d 31 2e 	.word 0x322d312e
      58:	30 72 63 34 	.word 0x30726334
      5c:	2f 2e 2e 2f 	.word 0x2f2e2e2f
      60:	2e 2e 2f 2e 	.word 0x2e2e2f2e
      64:	2e 2f 2e 2e 	.word 0x2e2f2e2e
      68:	2f 6f 72 33 	.word 0x2f6f7233
      6c:	32 2d 65 6c 	.word 0x322d656c
      70:	66 2f 69 6e 	.word 0x662f696e
      74:	63 6c 75 64 	.word 0x636c7564
      78:	65 00 2f 6f 	.word 0x65002f6f
      7c:	70 74 2f 6f 	l.cust1 
      80:	72 33 32 2d 	l.cust1 
      84:	65 6c 66 2d 	.word 0x656c662d
      88:	31 2e 30 72 	.word 0x312e3072
      8c:	63 31 2f 62 	.word 0x63312f62
      90:	69 6e 2f 2e 	.word 0x696e2f2e
      94:	2e 2f 6c 69 	.word 0x2e2f6c69
      98:	62 2f 67 63 	.word 0x622f6763
      9c:	63 2f 6f 72 	.word 0x632f6f72
      a0:	33 32 2d 65 	.word 0x33322d65
      a4:	6c 66 2f 34 	.word 0x6c662f34
      a8:	2e 35 2e 31 	.word 0x2e352e31
      ac:	2d 6f 72 33 	.word 0x2d6f7233
      b0:	32 2d 31 2e 	.word 0x322d312e
      b4:	30 72 63 34 	.word 0x30726334
      b8:	2f 69 6e 63 	.word 0x2f696e63
      bc:	6c 75 64 65 	.word 0x6c756465
      c0:	00 00 6d 65 	l.j 1b654 <__rom_size+0x1308>
      c4:	6d 63 70 79 	.word 0x6d637079
      c8:	2e 63 00 01 	.word 0x2e630001
      cc:	00 00 73 74 	l.j 1ce9c <__rom_size+0x2b50>
      d0:	72 69 6e 67 	l.cust1 
      d4:	2e 68 00 02 	.word 0x2e680002
      d8:	00 00 70 72 	l.j 1c2a0 <__rom_size+0x1f54>
      dc:	69 6e 74 66 	.word 0x696e7466
      e0:	2e 63 00 01 	.word 0x2e630001
      e4:	00 00 73 74 	l.j 1ceb4 <__rom_size+0x2b68>
      e8:	72 63 70 79 	l.cust1 
      ec:	2e 63 00 01 	.word 0x2e630001
      f0:	00 00 73 74 	l.j 1cec0 <__rom_size+0x2b74>
      f4:	72 6c 65 6e 	l.cust1 
      f8:	2e 63 00 01 	.word 0x2e630001
      fc:	00 00 73 74 	l.j 1cecc <__rom_size+0x2b80>
     100:	72 6e 63 6d 	l.cust1 
     104:	70 2e 63 00 	l.cust1 
     108:	01 00 00 73 	l.j 40002d4 <__stack+0x3b802d8>
     10c:	74 72 6e 63 	l.cust2 
     110:	70 79 2e 63 	l.cust1 
     114:	00 01 00 00 	l.j 40114 <__rom_size+0x25dc8>
     118:	6d 65 6d 73 	.word 0x6d656d73
     11c:	65 74 2e 63 	.word 0x65742e63
     120:	00 01 00 00 	l.j 40120 <__rom_size+0x25dd4>
     124:	76 73 6e 70 	l.cust2 
     128:	72 69 6e 74 	l.cust1 
     12c:	66 2e 63 00 	.word 0x662e6300
     130:	01 00 00 73 	l.j 40002fc <__stack+0x3b80300>
     134:	74 64 69 6f 	l.cust2 
     138:	2e 68 00 02 	.word 0x2e680002
     13c:	00 00 68 61 	l.j 1a2c0 <__rom_size-0x8c>
     140:	72 64 77 61 	l.cust1 
     144:	72 65 2e 63 	l.cust1 
     148:	00 00 00 00 	l.j 148 <__rom_size-0x1a204>
     14c:	62 6f 6f 74 	.word 0x626f6f74
     150:	2e 63 00 00 	.word 0x2e630000
     154:	00 00 66 61 	l.j 19ad8 <__rom_size-0x874>
     158:	74 2e 63 00 	l.cust2 
     15c:	00 00 00 66 	l.j 2f4 <__rom_size-0x1a058>
     160:	70 67 61 2e 	l.cust1 
     164:	63 00 00 00 	.word 0x63000000
     168:	00 68 64 64 	l.j 1a192f8 <__stack+0x15992fc>
     16c:	2e 63 00 00 	.word 0x2e630000
     170:	00 00 6d 65 	l.j 1b704 <__rom_size+0x13b8>
     174:	6e 75 2e 63 	.word 0x6e752e63
     178:	00 00 00 00 	l.j 178 <__rom_size-0x1a1d4>
     17c:	6d 6d 63 2e 	.word 0x6d6d632e
     180:	63 00 00 00 	.word 0x63000000
     184:	00 6f 73 64 	l.j 1bdcf14 <__stack+0x175cf18>
     188:	2e 63 00 00 	.word 0x2e630000
     18c:	00 00 73 65 	l.j 1cf20 <__rom_size+0x2bd4>
     190:	72 69 61 6c 	l.cust1 
     194:	2e 63 00 00 	.word 0x2e630000
     198:	00 00 73 70 	l.j 1cf58 <__rom_size+0x2c0c>
     19c:	72 69 6e 74 	l.cust1 
     1a0:	66 2e 63 00 	.word 0x662e6300
     1a4:	01 00 00 63 	l.j 4000330 <__stack+0x3b80334>
     1a8:	6f 6e 66 69 	.word 0x6f6e6669
     1ac:	67 2e 63 00 	.word 0x672e6300
     1b0:	00 00 00 72 	l.j 378 <__rom_size-0x19fd4>
     1b4:	61 66 69 6c 	.word 0x6166696c
     1b8:	65 2e 63 00 	.word 0x652e6300
     1bc:	00 00 00 66 	l.j 354 <__rom_size-0x19ff8>
     1c0:	64 64 2e 63 	.word 0x64642e63
     1c4:	00 00 00 00 	l.j 1c4 <__rom_size-0x1a188>
     1c8:	6d 61 69 6e 	.word 0x6d61696e
     1cc:	2e 63 00 00 	.word 0x2e630000
     1d0:	00 00 73 74 	l.j 1cfa0 <__rom_size+0x2c54>
     1d4:	72 63 68 72 	l.cust1 
     1d8:	2e 63 00 01 	.word 0x2e630001
     1dc:	00 00 73 74 	l.j 1cfac <__rom_size+0x2c60>
     1e0:	72 63 61 74 	l.cust1 
     1e4:	2e 63 00 01 	.word 0x2e630001
     1e8:	00 00 73 74 	l.j 1cfb8 <__rom_size+0x2c6c>
     1ec:	72 6e 63 61 	l.cust1 
     1f0:	74 2e 63 00 	l.cust2 
     1f4:	01 00 00 6d 	l.j 40003a8 <__stack+0x3b803ac>
     1f8:	65 6d 63 6d 	.word 0x656d636d
     1fc:	70 2e 63 00 	l.cust1 
     200:	01 00 00 73 	l.j 40003cc <__stack+0x3b803d0>
     204:	74 64 64 65 	l.cust2 
     208:	66 2e 68 00 	.word 0x662e6800
     20c:	03 00 00 73 	l.j fc0003d8 <__stack+0xfbb803dc>
     210:	74 64 61 72 	l.cust2 
     214:	67 2e 68 00 	.word 0x672e6800
     218:	03 00 00 73 	l.j fc0003e4 <__stack+0xfbb803e8>
     21c:	74 64 69 6e 	l.cust2 
     220:	74 2d 67 63 	l.cust2 
     224:	63 2e 68 00 	.word 0x632e6800
     228:	03 00 00 66 	l.j fc0003c0 <__stack+0xfbb803c4>
     22c:	61 74 2e 68 	.word 0x61742e68
     230:	00 00 00 00 	l.j 230 <__rom_size-0x1a11c>
     234:	72 61 66 69 	l.cust1 
     238:	6c 65 2e 68 	.word 0x6c652e68
     23c:	00 00 00 00 	l.j 23c <__rom_size-0x1a110>
     240:	68 64 64 2e 	.word 0x6864642e
     244:	68 00 00 00 	.word 0x68000000
     248:	00 63 6f 6e 	l.j 18dc000 <__stack+0x145c004>
     24c:	66 69 67 2e 	.word 0x6669672e
     250:	68 00 00 00 	.word 0x68000000
     254:	00 66 64 64 	l.j 19993e4 <__stack+0x15193e8>
     258:	2e 68 00 00 	.word 0x2e680000
     25c:	00 00 68 64 	l.j 1a3ec <__rom_size+0xa0>
     260:	64 5f 69 6e 	.word 0x645f696e
     264:	74 65 72 6e 	l.cust2 
     268:	61 6c 2e 68 	.word 0x616c2e68
     26c:	00 00 00 00 	l.j 26c <__rom_size-0x1a0e0>
     270:	6d 65 6e 75 	.word 0x6d656e75
     274:	2e 68 00 00 	.word 0x2e680000
     278:	00 00 68 61 	l.j 1a3fc <__rom_size+0xb0>
     27c:	72 64 77 61 	l.cust1 
     280:	72 65 2e 68 	l.cust1 
     284:	00 00 00 00 	l.j 284 <__rom_size-0x1a0c8>
     288:	63 68 61 72 	.word 0x63686172
     28c:	72 6f 6d 2e 	l.cust1 
     290:	68 00 00 00 	.word 0x68000000
     294:	00 6c 6f 67 	l.j 1b1c030 <__stack+0x169c034>
     298:	6f 2e 68 00 	.word 0x6f2e6800
     29c:	00 00 00 6d 	l.j 450 <__rom_size-0x19efc>
     2a0:	6d 63 2e 68 	.word 0x6d632e68
     2a4:	00 00 00 00 	l.j 2a4 <__rom_size-0x1a0a8>
     2a8:	65 72 72 6f 	.word 0x6572726f
     2ac:	72 73 2e 68 	l.cust1 
     2b0:	00 00 00 00 	l.j 2b0 <__rom_size-0x1a09c>
     2b4:	00 00 05 02 	l.j 16bc <__rom_size-0x18c90>
     2b8:	00 40 02 80 	l.j 1000cb8 <__stack+0xb80cbc>
     2bc:	1c 00 05 02 	.word 0x1c000502
     2c0:	00 40 02 80 	l.j 1000cc0 <__stack+0xb80cc4>
     2c4:	22 00 05 02 	.word 0x22000502
     2c8:	00 40 02 88 	l.j 1000ce8 <__stack+0xb80cec>
     2cc:	04 02 15 00 	l.jal 856cc <__ram_length+0x56cc>
     2d0:	05 02 00 40 	l.jal 40803d0 <__stack+0x3c003d4>
     2d4:	02 8c 04 01 	l.j fa3012d8 <__stack+0xf9e812dc>
     2d8:	01 00 05 02 	l.j 40016e0 <__stack+0x3b816e4>
     2dc:	00 40 02 9c 	l.j 1000d4c <__stack+0xb80d50>
     2e0:	13 00 05 02 	l.bf fc0016e8 <__stack+0xfbb816ec>
     2e4:	00 40 02 a8 	l.j 1000d84 <__stack+0xb80d88>
     2e8:	1a 00 05 02 	l.movhi r16,0x502
     2ec:	00 40 02 b0 	l.j 1000dac <__stack+0xb80db0>
     2f0:	04 03 21 00 	l.jal c86f0 <__ram_length+0x486f0>
     2f4:	05 02 00 40 	l.jal 40803f4 <__stack+0x3c003f8>
     2f8:	02 b0 15 00 	l.j fac056f8 <__stack+0xfa7856fc>
     2fc:	05 02 00 40 	l.jal 40803fc <__stack+0x3c00400>
     300:	02 c0 15 00 	l.j fb005700 <__stack+0xfab85704>
     304:	05 02 00 40 	l.jal 4080404 <__stack+0x3c00408>
     308:	02 c4 18 00 	l.j fb106308 <__stack+0xfac8630c>
     30c:	05 02 00 40 	l.jal 408040c <__stack+0x3c00410>
     310:	02 cc 04 04 	l.j fb301320 <__stack+0xfae81324>
     314:	03 5a 01 00 	l.j fd680714 <__stack+0xfd200718>
     318:	05 02 00 40 	l.jal 4080418 <__stack+0x3c0041c>
     31c:	02 cc 01 00 	l.j fb30071c <__stack+0xfae80720>
     320:	05 02 00 40 	l.jal 4080420 <__stack+0x3c00424>
     324:	02 d0 04 02 	l.j fb40132c <__stack+0xfaf81330>
     328:	29 00 05 02 	.word 0x29000502
     32c:	00 40 02 d8 	l.j 1000e8c <__stack+0xb80e90>
     330:	04 04 03 71 	l.jal 1010f4 <__ram_length+0x810f4>
     334:	01 00 05 02 	l.j 400173c <__stack+0x3b81740>
     338:	00 40 02 e0 	l.j 1000eb8 <__stack+0xb80ebc>
     33c:	15 00 05 02 	l.nop 0x502
     340:	00 40 02 ec 	l.j 1000ef0 <__stack+0xb80ef4>
     344:	17 00 05 02 	.word 0x17000502
     348:	00 40 02 f4 	l.j 1000f18 <__stack+0xb80f1c>
     34c:	04 05 03 74 	l.jal 14111c <__ram_length+0xc111c>
     350:	01 00 05 02 	l.j 4001758 <__stack+0x3b8175c>
     354:	00 40 02 f8 	l.j 1000f34 <__stack+0xb80f38>
     358:	16 00 05 02 	.word 0x16000502
     35c:	00 40 03 0c 	l.j 1000f8c <__stack+0xb80f90>
     360:	17 00 05 02 	.word 0x17000502
     364:	00 40 03 14 	l.j 1000fb4 <__stack+0xb80fb8>
     368:	04 06 0f 00 	l.jal 183f68 <__ram_length+0x103f68>
     36c:	05 02 00 40 	l.jal 408046c <__stack+0x3c00470>
     370:	03 14 1a 00 	l.j fc506b70 <__stack+0xfc086b74>
     374:	05 02 00 40 	l.jal 4080474 <__stack+0x3c00478>
     378:	03 20 04 02 	l.j fc801380 <__stack+0xfc381384>
     37c:	2a 00 05 02 	.word 0x2a000502
     380:	00 40 03 24 	l.j 1001010 <__stack+0xb81014>
     384:	04 06 03 6b 	l.jal 181130 <__ram_length+0x101130>
     388:	01 00 05 02 	l.j 4001790 <__stack+0x3b81794>
     38c:	00 40 03 34 	l.j 100105c <__stack+0xb81060>
     390:	15 00 05 02 	l.nop 0x502
     394:	00 40 03 58 	l.j 10010f4 <__stack+0xb810f8>
     398:	12 00 05 02 	l.bf f80017a0 <__stack+0xf7b817a4>
     39c:	00 40 03 64 	l.j 100112c <__stack+0xb81130>
     3a0:	1b 00 05 02 	l.movhi r24,0x502
     3a4:	00 40 03 6c 	l.j 1001154 <__stack+0xb81158>
     3a8:	04 07 03 73 	l.jal 1c1174 <__ram_length+0x141174>
     3ac:	01 00 05 02 	l.j 40017b4 <__stack+0x3b817b8>
     3b0:	00 40 03 70 	l.j 1001170 <__stack+0xb81174>
     3b4:	15 00 05 02 	l.nop 0x502
     3b8:	00 40 03 74 	l.j 1001188 <__stack+0xb8118c>
     3bc:	18 00 05 02 	l.movhi r0,0x502
     3c0:	00 40 03 7c 	l.j 10011b0 <__stack+0xb811b4>
     3c4:	16 00 05 02 	.word 0x16000502
     3c8:	00 40 03 84 	l.j 10011d8 <__stack+0xb811dc>
     3cc:	13 00 05 02 	l.bf fc0017d4 <__stack+0xfbb817d8>
     3d0:	00 40 03 88 	l.j 10011f0 <__stack+0xb811f4>
     3d4:	16 00 05 02 	.word 0x16000502
     3d8:	00 40 03 94 	l.j 1001228 <__stack+0xb8122c>
     3dc:	13 00 05 02 	l.bf fc0017e4 <__stack+0xfbb817e8>
     3e0:	00 40 03 98 	l.j 1001240 <__stack+0xb81244>
     3e4:	12 00 05 02 	l.bf f80017ec <__stack+0xf7b817f0>
     3e8:	00 40 03 a4 	l.j 1001278 <__stack+0xb8127c>
     3ec:	1f 00 05 02 	.word 0x1f000502
     3f0:	00 40 03 ac 	l.j 10012a0 <__stack+0xb812a4>
     3f4:	04 08 15 00 	l.jal 2057f4 <__ram_length+0x1857f4>
     3f8:	05 02 00 40 	l.jal 40804f8 <__stack+0x3c004fc>
     3fc:	03 bc 13 00 	l.j fef04ffc <__stack+0xfea85000>
     400:	05 02 00 40 	l.jal 4080500 <__stack+0x3c00504>
     404:	03 c8 04 07 	l.j ff201420 <__stack+0xfed81424>
     408:	01 00 05 02 	l.j 4001810 <__stack+0x3b81814>
     40c:	00 40 03 d8 	l.j 100136c <__stack+0xb81370>
     410:	04 09 a5 00 	l.jal 269810 <__ram_length+0x1e9810>
     414:	05 02 00 40 	l.jal 4080514 <__stack+0x3c00518>
     418:	03 d8 26 00 	l.j ff609c18 <__stack+0xff189c1c>
     41c:	05 02 00 40 	l.jal 408051c <__stack+0x3c00520>
     420:	03 dc 03 6e 	l.j ff7011d8 <__stack+0xff2811dc>
     424:	01 00 05 02 	l.j 400182c <__stack+0x3b81830>
     428:	00 40 04 0c 	l.j 1001458 <__stack+0xb8145c>
     42c:	01 00 05 02 	l.j 4001834 <__stack+0x3b81838>
     430:	00 40 04 18 	l.j 1001490 <__stack+0xb81494>
     434:	17 00 05 02 	.word 0x17000502
     438:	00 40 04 1c 	l.j 10014a8 <__stack+0xb814ac>
     43c:	1c 00 05 02 	.word 0x1c000502
     440:	00 40 04 20 	l.j 10014c0 <__stack+0xb814c4>
     444:	11 00 05 02 	l.bf 400184c <__stack+0x3b81850>
     448:	00 40 04 24 	l.j 10014d8 <__stack+0xb814dc>
     44c:	13 00 05 02 	l.bf fc001854 <__stack+0xfbb81858>
     450:	00 40 04 28 	l.j 10014f0 <__stack+0xb814f4>
     454:	13 00 05 02 	l.bf fc00185c <__stack+0xfbb81860>
     458:	00 40 04 2c 	l.j 1001508 <__stack+0xb8150c>
     45c:	25 00 05 02 	l.rfe 
     460:	00 40 04 34 	l.j 1001530 <__stack+0xb81534>
     464:	15 00 05 02 	l.nop 0x502
     468:	00 40 04 58 	l.j 10015c8 <__stack+0xb815cc>
     46c:	16 00 05 02 	.word 0x16000502
     470:	00 40 04 64 	l.j 1001600 <__stack+0xb81604>
     474:	1b 00 05 02 	l.movhi r24,0x502
     478:	00 40 04 70 	l.j 1001638 <__stack+0xb8163c>
     47c:	01 00 05 02 	l.j 4001884 <__stack+0x3b81888>
     480:	00 40 04 78 	l.j 1001660 <__stack+0xb81664>
     484:	01 00 05 02 	l.j 400188c <__stack+0x3b81890>
     488:	00 40 04 80 	l.j 1001688 <__stack+0xb8168c>
     48c:	19 00 05 02 	l.movhi r8,0x502
     490:	00 40 04 ac 	l.j 1001740 <__stack+0xb81744>
     494:	1a 00 05 02 	l.movhi r16,0x502
     498:	00 40 04 b4 	l.j 1001768 <__stack+0xb8176c>
     49c:	17 00 05 02 	.word 0x17000502
     4a0:	00 40 04 bc 	l.j 1001790 <__stack+0xb81794>
     4a4:	17 00 05 02 	.word 0x17000502
     4a8:	00 40 04 c4 	l.j 10017b8 <__stack+0xb817bc>
     4ac:	17 00 05 02 	.word 0x17000502
     4b0:	00 40 04 cc 	l.j 10017e0 <__stack+0xb817e4>
     4b4:	17 00 05 02 	.word 0x17000502
     4b8:	00 40 04 d4 	l.j 1001808 <__stack+0xb8180c>
     4bc:	1d 00 05 02 	.word 0x1d000502
     4c0:	00 40 04 e8 	l.j 1001860 <__stack+0xb81864>
     4c4:	15 00 05 02 	l.nop 0x502
     4c8:	00 40 05 00 	l.j 10018c8 <__stack+0xb818cc>
     4cc:	15 00 05 02 	l.nop 0x502
     4d0:	00 40 05 08 	l.j 10018f0 <__stack+0xb818f4>
     4d4:	15 00 05 02 	l.nop 0x502
     4d8:	00 40 05 0c 	l.j 1001908 <__stack+0xb8190c>
     4dc:	15 00 05 02 	l.nop 0x502
     4e0:	00 40 05 18 	l.j 1001940 <__stack+0xb81944>
     4e4:	15 00 05 02 	l.nop 0x502
     4e8:	00 40 05 1c 	l.j 1001958 <__stack+0xb8195c>
     4ec:	15 00 05 02 	l.nop 0x502
     4f0:	00 40 05 24 	l.j 1001980 <__stack+0xb81984>
     4f4:	16 00 05 02 	.word 0x16000502
     4f8:	00 40 05 2c 	l.j 10019a8 <__stack+0xb819ac>
     4fc:	16 00 05 02 	.word 0x16000502
     500:	00 40 05 30 	l.j 10019c0 <__stack+0xb819c4>
     504:	13 00 05 02 	l.bf fc00190c <__stack+0xfbb81910>
     508:	00 40 05 38 	l.j 10019e8 <__stack+0xb819ec>
     50c:	1d 00 05 02 	.word 0x1d000502
     510:	00 40 05 4c 	l.j 1001a40 <__stack+0xb81a44>
     514:	15 00 05 02 	l.nop 0x502
     518:	00 40 05 64 	l.j 1001aa8 <__stack+0xb81aac>
     51c:	15 00 05 02 	l.nop 0x502
     520:	00 40 05 6c 	l.j 1001ad0 <__stack+0xb81ad4>
     524:	15 00 05 02 	l.nop 0x502
     528:	00 40 05 70 	l.j 1001ae8 <__stack+0xb81aec>
     52c:	15 00 05 02 	l.nop 0x502
     530:	00 40 05 7c 	l.j 1001b20 <__stack+0xb81b24>
     534:	15 00 05 02 	l.nop 0x502
     538:	00 40 05 84 	l.j 1001b48 <__stack+0xb81b4c>
     53c:	1c 00 05 02 	.word 0x1c000502
     540:	00 40 05 cc 	l.j 1001c70 <__stack+0xb81c74>
     544:	27 00 05 02 	l.rfe 
     548:	00 40 05 d4 	l.j 1001c98 <__stack+0xb81c9c>
     54c:	0a 00 05 02 	.word 0x0a000502
     550:	00 40 05 dc 	l.j 1001cc0 <__stack+0xb81cc4>
     554:	0f 00 05 02 	l.bnf fc00195c <__stack+0xfbb81960>
     558:	00 40 05 e4 	l.j 1001ce8 <__stack+0xb81cec>
     55c:	17 00 05 02 	.word 0x17000502
     560:	00 40 05 ec 	l.j 1001d10 <__stack+0xb81d14>
     564:	21 00 05 02 	l.trap 0x502
     568:	00 40 06 10 	l.j 1001da8 <__stack+0xb81dac>
     56c:	21 00 05 02 	l.trap 0x502
     570:	00 40 06 48 	l.j 1001e90 <__stack+0xb81e94>
     574:	47 00 05 02 	l.jr r0
     578:	00 40 06 50 	l.j 1001eb8 <__stack+0xb81ebc>
     57c:	03 4d 01 00 	l.j fd34097c <__stack+0xfcec0980>
     580:	05 02 00 40 	l.jal 4080680 <__stack+0x3c00684>
     584:	06 60 23 00 	l.jal f9809184 <__stack+0xf9389188>
     588:	05 02 00 40 	l.jal 4080688 <__stack+0x3c0068c>
     58c:	06 68 03 71 	l.jal f9a01350 <__stack+0xf9581354>
     590:	01 00 05 02 	l.j 4001998 <__stack+0x3b8199c>
     594:	00 40 06 8c 	l.j 1001fc4 <__stack+0xb81fc8>
     598:	1c 00 05 02 	.word 0x1c000502
     59c:	00 40 06 94 	l.j 1001fec <__stack+0xb81ff0>
     5a0:	0c 00 05 02 	l.bnf 19a8 <__rom_size-0x189a4>
     5a4:	00 40 06 a4 	l.j 1002034 <__stack+0xb82038>
     5a8:	4a 00 05 02 	l.jalr r0
     5ac:	00 40 06 ac 	l.j 100205c <__stack+0xb82060>
     5b0:	0b 00 05 02 	.word 0x0b000502
     5b4:	00 40 06 b4 	l.j 1002084 <__stack+0xb82088>
     5b8:	03 55 01 00 	l.j fd5409b8 <__stack+0xfd0c09bc>
     5bc:	05 02 00 40 	l.jal 40806bc <__stack+0x3c006c0>
     5c0:	06 b8 1a 00 	l.jal fae06dc0 <__stack+0xfa986dc4>
     5c4:	05 02 00 40 	l.jal 40806c4 <__stack+0x3c006c8>
     5c8:	06 bc 13 00 	l.jal faf051c8 <__stack+0xfaa851cc>
     5cc:	05 02 00 40 	l.jal 40806cc <__stack+0x3c006d0>
     5d0:	06 c0 16 00 	l.jal fb005dd0 <__stack+0xfab85dd4>
     5d4:	05 02 00 40 	l.jal 40806d4 <__stack+0x3c006d8>
     5d8:	06 c4 10 00 	l.jal fb1045d8 <__stack+0xfac845dc>
     5dc:	05 02 00 40 	l.jal 40806dc <__stack+0x3c006e0>
     5e0:	06 c8 19 00 	l.jal fb2069e0 <__stack+0xfad869e4>
     5e4:	05 02 00 40 	l.jal 40806e4 <__stack+0x3c006e8>
     5e8:	06 d0 19 00 	l.jal fb4069e8 <__stack+0xfaf869ec>
     5ec:	05 02 00 40 	l.jal 40806ec <__stack+0x3c006f0>
     5f0:	06 d4 15 00 	l.jal fb5059f0 <__stack+0xfb0859f4>
     5f4:	05 02 00 40 	l.jal 40806f4 <__stack+0x3c006f8>
     5f8:	06 f4 1d 00 	l.jal fbd079f8 <__stack+0xfb8879fc>
     5fc:	05 02 00 40 	l.jal 40806fc <__stack+0x3c00700>
     600:	06 fc 0b 00 	l.jal fbf03200 <__stack+0xfba83204>
     604:	05 02 00 40 	l.jal 4080704 <__stack+0x3c00708>
     608:	07 10 1f 00 	l.jal fc408208 <__stack+0xfbf8820c>
     60c:	05 02 00 40 	l.jal 408070c <__stack+0x3c00710>
     610:	07 18 1b 00 	l.jal fc607210 <__stack+0xfc187214>
     614:	05 02 00 40 	l.jal 4080714 <__stack+0x3c00718>
     618:	07 20 18 00 	l.jal fc806618 <__stack+0xfc38661c>
     61c:	05 02 00 40 	l.jal 408071c <__stack+0x3c00720>
     620:	07 28 17 00 	l.jal fca06220 <__stack+0xfc586224>
     624:	05 02 00 40 	l.jal 4080724 <__stack+0x3c00728>
     628:	07 30 1c 00 	l.jal fcc07628 <__stack+0xfc78762c>
     62c:	05 02 00 40 	l.jal 408072c <__stack+0x3c00730>
     630:	07 38 19 00 	l.jal fce06a30 <__stack+0xfc986a34>
     634:	05 02 00 40 	l.jal 4080734 <__stack+0x3c00738>
     638:	07 3c 18 00 	l.jal fcf06638 <__stack+0xfca8663c>
     63c:	05 02 00 40 	l.jal 408073c <__stack+0x3c00740>
     640:	07 5c 1d 00 	l.jal fd707a40 <__stack+0xfd287a44>
     644:	05 02 00 40 	l.jal 4080744 <__stack+0x3c00748>
     648:	07 64 0b 00 	l.jal fd903248 <__stack+0xfd48324c>
     64c:	05 02 00 40 	l.jal 408074c <__stack+0x3c00750>
     650:	07 74 17 00 	l.jal fdd06250 <__stack+0xfd886254>
     654:	05 02 00 40 	l.jal 4080754 <__stack+0x3c00758>
     658:	07 78 13 00 	l.jal fde05258 <__stack+0xfd98525c>
     65c:	05 02 00 40 	l.jal 408075c <__stack+0x3c00760>
     660:	07 80 1a 00 	l.jal fe006e60 <__stack+0xfdb86e64>
     664:	05 02 00 40 	l.jal 4080764 <__stack+0x3c00768>
     668:	07 88 1f 00 	l.jal fe208268 <__stack+0xfdd8826c>
     66c:	05 02 00 40 	l.jal 408076c <__stack+0x3c00770>
     670:	07 8c 17 00 	l.jal fe306270 <__stack+0xfde86274>
     674:	05 02 00 40 	l.jal 4080774 <__stack+0x3c00778>
     678:	07 94 16 00 	l.jal fe505e78 <__stack+0xfe085e7c>
     67c:	05 02 00 40 	l.jal 408077c <__stack+0x3c00780>
     680:	07 9c 1c 00 	l.jal fe707680 <__stack+0xfe287684>
     684:	05 02 00 40 	l.jal 4080784 <__stack+0x3c00788>
     688:	07 ac 01 00 	l.jal feb00a88 <__stack+0xfe680a8c>
     68c:	05 02 00 40 	l.jal 408078c <__stack+0x3c00790>
     690:	07 b0 03 b7 	l.jal fec0156c <__stack+0xfe781570>
     694:	7d 01 00 05 	l.cust4 
     698:	02 00 40 07 	l.j f80106b4 <__stack+0xf7b906b8>
     69c:	bc 03 c9 02 	l.sfeqi r3,0xffffc902
     6a0:	01 00 05 02 	l.j 4001aa8 <__stack+0x3b81aac>
     6a4:	00 40 07 c0 	l.j 10025a4 <__stack+0xb825a8>
     6a8:	03 b7 7d 01 	l.j feddfaac <__stack+0xfe95fab0>
     6ac:	00 05 02 00 	l.j 140eac <__ram_length+0xc0eac>
     6b0:	40 07 d0 01 	.word 0x4007d001
     6b4:	00 05 02 00 	l.j 140eb4 <__ram_length+0xc0eb4>
     6b8:	40 07 dc 17 	.word 0x4007dc17
     6bc:	00 05 02 00 	l.j 140ebc <__ram_length+0xc0ebc>
     6c0:	40 07 f8 15 	.word 0x4007f815
     6c4:	00 05 02 00 	l.j 140ec4 <__ram_length+0xc0ec4>
     6c8:	40 07 fc 15 	.word 0x4007fc15
     6cc:	00 05 02 00 	l.j 140ecc <__ram_length+0xc0ecc>
     6d0:	40 08 00 13 	.word 0x40080013
     6d4:	00 05 02 00 	l.j 140ed4 <__ram_length+0xc0ed4>
     6d8:	40 08 08 0b 	.word 0x4008080b
     6dc:	00 05 02 00 	l.j 140edc <__ram_length+0xc0edc>
     6e0:	40 08 10 15 	.word 0x40081015
     6e4:	00 05 02 00 	l.j 140ee4 <__ram_length+0xc0ee4>
     6e8:	40 08 14 1c 	.word 0x4008141c
     6ec:	00 05 02 00 	l.j 140eec <__ram_length+0xc0eec>
     6f0:	40 08 18 0c 	.word 0x4008180c
     6f4:	00 05 02 00 	l.j 140ef4 <__ram_length+0xc0ef4>
     6f8:	40 08 20 23 	.word 0x40082023
     6fc:	00 05 02 00 	l.j 140efc <__ram_length+0xc0efc>
     700:	40 08 28 15 	.word 0x40082815
     704:	00 05 02 00 	l.j 140f04 <__ram_length+0xc0f04>
     708:	40 08 34 12 	.word 0x40083412
     70c:	00 05 02 00 	l.j 140f0c <__ram_length+0xc0f0c>
     710:	40 08 40 1b 	.word 0x4008401b
     714:	00 05 02 00 	l.j 140f14 <__ram_length+0xc0f14>
     718:	40 08 60 15 	.word 0x40086015
     71c:	00 05 02 00 	l.j 140f1c <__ram_length+0xc0f1c>
     720:	40 08 70 15 	.word 0x40087015
     724:	00 05 02 00 	l.j 140f24 <__ram_length+0xc0f24>
     728:	40 08 78 12 	.word 0x40087812
     72c:	00 05 02 00 	l.j 140f2c <__ram_length+0xc0f2c>
     730:	40 08 7c 19 	.word 0x40087c19
     734:	00 05 02 00 	l.j 140f34 <__ram_length+0xc0f34>
     738:	40 08 8c 16 	.word 0x40088c16
     73c:	00 05 02 00 	l.j 140f3c <__ram_length+0xc0f3c>
     740:	40 08 a0 19 	.word 0x4008a019
     744:	00 05 02 00 	l.j 140f44 <__ram_length+0xc0f44>
     748:	40 08 b0 15 	.word 0x4008b015
     74c:	00 05 02 00 	l.j 140f4c <__ram_length+0xc0f4c>
     750:	40 08 c8 1a 	.word 0x4008c81a
     754:	00 05 02 00 	l.j 140f54 <__ram_length+0xc0f54>
     758:	40 08 d8 19 	.word 0x4008d819
     75c:	00 05 02 00 	l.j 140f5c <__ram_length+0xc0f5c>
     760:	40 08 f8 15 	.word 0x4008f815
     764:	00 05 02 00 	l.j 140f64 <__ram_length+0xc0f64>
     768:	40 09 04 15 	.word 0x40090415
     76c:	00 05 02 00 	l.j 140f6c <__ram_length+0xc0f6c>
     770:	40 09 2c 15 	.word 0x40092c15
     774:	00 05 02 00 	l.j 140f74 <__ram_length+0xc0f74>
     778:	40 09 38 18 	.word 0x40093818
     77c:	00 05 02 00 	l.j 140f7c <__ram_length+0xc0f7c>
     780:	40 09 74 16 	.word 0x40097416
     784:	00 05 02 00 	l.j 140f84 <__ram_length+0xc0f84>
     788:	40 09 88 15 	.word 0x40098815
     78c:	00 05 02 00 	l.j 140f8c <__ram_length+0xc0f8c>
     790:	40 09 8c 12 	.word 0x40098c12
     794:	00 05 02 00 	l.j 140f94 <__ram_length+0xc0f94>
     798:	40 09 9c 1b 	.word 0x40099c1b
     79c:	00 05 02 00 	l.j 140f9c <__ram_length+0xc0f9c>
     7a0:	40 09 a4 0c 	.word 0x4009a40c
     7a4:	00 05 02 00 	l.j 140fa4 <__ram_length+0xc0fa4>
     7a8:	40 09 a8 03 	.word 0x4009a803
     7ac:	46 01 00 05 	l.jr r0
     7b0:	02 00 40 09 	l.j f80107d4 <__stack+0xf7b907d8>
     7b4:	ac 56 00 05 	l.xori r2,r22,0x5
     7b8:	02 00 40 09 	l.j f80107dc <__stack+0xf7b907e0>
     7bc:	bc 15 00 05 	l.sfeqi r21,0x5
     7c0:	02 00 40 09 	l.j f80107e4 <__stack+0xf7b907e8>
     7c4:	c8 18 00 05 	lf.ftoi.s r0,r24
     7c8:	02 00 40 09 	l.j f80107ec <__stack+0xf7b907f0>
     7cc:	d0 11 00 05 	l.sd 0x5(r17),r0
     7d0:	02 00 40 09 	l.j f80107f4 <__stack+0xf7b907f8>
     7d4:	dc 15 00 05 	l.sh 0x5(r21),r0
     7d8:	02 00 40 09 	l.j f80107fc <__stack+0xf7b90800>
     7dc:	e8 16 00 05 	.word 0xe8160005
     7e0:	02 00 40 09 	l.j f8010804 <__stack+0xf7b90808>
     7e4:	f0 13 00 05 	l.cust5 r0,r19,r0,0x0,0x5
     7e8:	02 00 40 09 	l.j f801080c <__stack+0xf7b90810>
     7ec:	fc 15 00 05 	l.cust8 
     7f0:	02 00 40 0a 	l.j f8010818 <__stack+0xf7b9081c>
     7f4:	14 16 00 05 	.word 0x14160005
     7f8:	02 00 40 0a 	l.j f8010820 <__stack+0xf7b90824>
     7fc:	20 15 00 05 	.word 0x20150005
     800:	02 00 40 0a 	l.j f8010828 <__stack+0xf7b9082c>
     804:	38 15 00 05 	.word 0x38150005
     808:	02 00 40 0a 	l.j f8010830 <__stack+0xf7b90834>
     80c:	60 18 00 05 	.word 0x60180005
     810:	02 00 40 0a 	l.j f8010838 <__stack+0xf7b9083c>
     814:	90 15 00 05 	l.lbs r0,0x5(r21)
     818:	02 00 40 0a 	l.j f8010840 <__stack+0xf7b90844>
     81c:	98 15 00 05 	l.lhs r0,0x5(r21)
     820:	02 00 40 0a 	l.j f8010848 <__stack+0xf7b9084c>
     824:	ac 15 00 05 	l.xori r0,r21,0x5
     828:	02 00 40 0a 	l.j f8010850 <__stack+0xf7b90854>
     82c:	b0 12 00 05 	l.muli r0,r18,0x5
     830:	02 00 40 0a 	l.j f8010858 <__stack+0xf7b9085c>
     834:	c0 1b 00 05 	l.mtspr r27,r0,0x5
     838:	02 00 40 0a 	l.j f8010860 <__stack+0xf7b90864>
     83c:	c4 21 00 05 	.word 0xc4210005
     840:	02 00 40 0a 	l.j f8010868 <__stack+0xf7b9086c>
     844:	c8 03 73 01 	lf.sub.s r0,r3,r14
     848:	00 05 02 00 	l.j 141048 <__ram_length+0xc1048>
     84c:	40 0a cc 15 	.word 0x400acc15
     850:	00 05 02 00 	l.j 141050 <__ram_length+0xc1050>
     854:	40 0a d0 20 	.word 0x400ad020
     858:	00 05 02 00 	l.j 141058 <__ram_length+0xc1058>
     85c:	40 0a d4 03 	.word 0x400ad403
     860:	73 01 00 05 	l.cust1 
     864:	02 00 40 0a 	l.j f801088c <__stack+0xf7b90890>
     868:	d8 15 00 05 	l.sb 0x5(r21),r0
     86c:	02 00 40 0a 	l.j f8010894 <__stack+0xf7b90898>
     870:	dc 16 00 05 	l.sh 0x5(r22),r0
     874:	02 00 40 0a 	l.j f801089c <__stack+0xf7b908a0>
     878:	e0 13 00 05 	l.xor r0,r19,r0
     87c:	02 00 40 0a 	l.j f80108a4 <__stack+0xf7b908a8>
     880:	e4 1f 00 05 	l.sfeq r31,r0
     884:	02 00 40 0a 	l.j f80108ac <__stack+0xf7b908b0>
     888:	ec 0e 00 05 	.word 0xec0e0005
     88c:	02 00 40 0b 	l.j f80108b8 <__stack+0xf7b908bc>
     890:	04 16 00 05 	l.jal 5808a4 <__stack+0x1008a8>
     894:	02 00 40 0b 	l.j f80108c0 <__stack+0xf7b908c4>
     898:	08 15 00 05 	.word 0x08150005
     89c:	02 00 40 0b 	l.j f80108c8 <__stack+0xf7b908cc>
     8a0:	0c 13 00 05 	l.bnf 4c08b4 <__stack+0x408b8>
     8a4:	02 00 40 0b 	l.j f80108d0 <__stack+0xf7b908d4>
     8a8:	10 13 00 05 	l.bf 4c08bc <__stack+0x408c0>
     8ac:	02 00 40 0b 	l.j f80108d8 <__stack+0xf7b908dc>
     8b0:	14 16 00 05 	.word 0x14160005
     8b4:	02 00 40 0b 	l.j f80108e0 <__stack+0xf7b908e4>
     8b8:	18 12 00 05 	l.movhi r0,0x5
     8bc:	02 00 40 0b 	l.j f80108e8 <__stack+0xf7b908ec>
     8c0:	1c 15 00 05 	.word 0x1c150005
     8c4:	02 00 40 0b 	l.j f80108f0 <__stack+0xf7b908f4>
     8c8:	20 16 00 05 	.word 0x20160005
     8cc:	02 00 40 0b 	l.j f80108f8 <__stack+0xf7b908fc>
     8d0:	2c 15 00 05 	.word 0x2c150005
     8d4:	02 00 40 0b 	l.j f8010900 <__stack+0xf7b90904>
     8d8:	34 15 00 05 	.word 0x34150005
     8dc:	02 00 40 0b 	l.j f8010908 <__stack+0xf7b9090c>
     8e0:	38 16 00 05 	.word 0x38160005
     8e4:	02 00 40 0b 	l.j f8010910 <__stack+0xf7b90914>
     8e8:	3c 15 00 05 	.word 0x3c150005
     8ec:	02 00 40 0b 	l.j f8010918 <__stack+0xf7b9091c>
     8f0:	40 15 00 05 	.word 0x40150005
     8f4:	02 00 40 0b 	l.j f8010920 <__stack+0xf7b90924>
     8f8:	44 13 00 05 	l.jr r0
     8fc:	02 00 40 0b 	l.j f8010928 <__stack+0xf7b9092c>
     900:	48 13 00 05 	l.jalr r0
     904:	02 00 40 0b 	l.j f8010930 <__stack+0xf7b90934>
     908:	4c 16 00 05 	l.maci r22,0x5
     90c:	02 00 40 0b 	l.j f8010938 <__stack+0xf7b9093c>
     910:	50 10 00 05 	.word 0x50100005
     914:	02 00 40 0b 	l.j f8010940 <__stack+0xf7b90944>
     918:	54 16 00 05 	.word 0x54160005
     91c:	02 00 40 0b 	l.j f8010948 <__stack+0xf7b9094c>
     920:	58 15 00 05 	.word 0x58150005
     924:	02 00 40 0b 	l.j f8010950 <__stack+0xf7b90954>
     928:	5c 16 00 05 	.word 0x5c160005
     92c:	02 00 40 0b 	l.j f8010958 <__stack+0xf7b9095c>
     930:	68 15 00 05 	.word 0x68150005
     934:	02 00 40 0b 	l.j f8010960 <__stack+0xf7b90964>
     938:	88 15 00 05 	l.lws r0,0x5(r21)
     93c:	02 00 40 0b 	l.j f8010968 <__stack+0xf7b9096c>
     940:	98 03 72 01 	l.lhs r0,0x7201(r3)
     944:	00 05 02 00 	l.j 141144 <__ram_length+0xc1144>
     948:	40 0b a8 26 	.word 0x400ba826
     94c:	00 05 02 00 	l.j 14114c <__ram_length+0xc114c>
     950:	40 0b b0 15 	.word 0x400bb015
     954:	00 05 02 00 	l.j 141154 <__ram_length+0xc1154>
     958:	40 0b d4 15 	.word 0x400bd415
     95c:	00 05 02 00 	l.j 14115c <__ram_length+0xc115c>
     960:	40 0b d8 13 	.word 0x400bd813
     964:	00 05 02 00 	l.j 141164 <__ram_length+0xc1164>
     968:	40 0b e0 13 	.word 0x400be013
     96c:	00 05 02 00 	l.j 14116c <__ram_length+0xc116c>
     970:	40 0c 0c fb 	.word 0x400c0cfb
     974:	00 05 02 00 	l.j 141174 <__ram_length+0xc1174>
     978:	40 0c 14 15 	.word 0x400c1415
     97c:	00 05 02 00 	l.j 14117c <__ram_length+0xc117c>
     980:	40 0c 1c 18 	.word 0x400c1c18
     984:	00 05 02 00 	l.j 141184 <__ram_length+0xc1184>
     988:	40 0c 20 16 	.word 0x400c2016
     98c:	00 05 02 00 	l.j 14118c <__ram_length+0xc118c>
     990:	40 0c 24 12 	.word 0x400c2412
     994:	00 05 02 00 	l.j 141194 <__ram_length+0xc1194>
     998:	40 0c 2c 17 	.word 0x400c2c17
     99c:	00 05 02 00 	l.j 14119c <__ram_length+0xc119c>
     9a0:	40 0c 34 16 	.word 0x400c3416
     9a4:	00 05 02 00 	l.j 1411a4 <__ram_length+0xc11a4>
     9a8:	40 0c 38 15 	.word 0x400c3815
     9ac:	00 05 02 00 	l.j 1411ac <__ram_length+0xc11ac>
     9b0:	40 0c 4c 15 	.word 0x400c4c15
     9b4:	00 05 02 00 	l.j 1411b4 <__ram_length+0xc11b4>
     9b8:	40 0c 58 1c 	.word 0x400c581c
     9bc:	00 05 02 00 	l.j 1411bc <__ram_length+0xc11bc>
     9c0:	40 0c 94 17 	.word 0x400c9417
     9c4:	00 05 02 00 	l.j 1411c4 <__ram_length+0xc11c4>
     9c8:	40 0c a0 15 	.word 0x400ca015
     9cc:	00 05 02 00 	l.j 1411cc <__ram_length+0xc11cc>
     9d0:	40 0c b0 16 	.word 0x400cb016
     9d4:	00 05 02 00 	l.j 1411d4 <__ram_length+0xc11d4>
     9d8:	40 0c b4 13 	.word 0x400cb413
     9dc:	00 05 02 00 	l.j 1411dc <__ram_length+0xc11dc>
     9e0:	40 0c c4 01 	.word 0x400cc401
     9e4:	00 05 02 00 	l.j 1411e4 <__ram_length+0xc11e4>
     9e8:	40 0c cc 18 	.word 0x400ccc18
     9ec:	00 05 02 00 	l.j 1411ec <__ram_length+0xc11ec>
     9f0:	40 0c dc 01 	.word 0x400cdc01
     9f4:	00 05 02 00 	l.j 1411f4 <__ram_length+0xc11f4>
     9f8:	40 0c e4 15 	.word 0x400ce415
     9fc:	00 05 02 00 	l.j 1411fc <__ram_length+0xc11fc>
     a00:	40 0c e8 12 	.word 0x400ce812
     a04:	00 05 02 00 	l.j 141204 <__ram_length+0xc1204>
     a08:	40 0c f4 04 	.word 0x400cf404
     a0c:	0a 03 8d 7f 	.word 0x0a038d7f
     a10:	01 00 05 02 	l.j 4001e18 <__stack+0x3b81e1c>
     a14:	00 40 0d 10 	l.j 1003e54 <__stack+0xb83e58>
     a18:	04 09 8c 00 	l.jal 263a18 <__ram_length+0x1e3a18>
     a1c:	05 02 00 40 	l.jal 4080b1c <__stack+0x3c00b20>
     a20:	0d 1c 16 00 	l.bnf 4706220 <__stack+0x4286224>
     a24:	05 02 00 40 	l.jal 4080b24 <__stack+0x3c00b28>
     a28:	0d 30 01 00 	l.bnf 4c00e28 <__stack+0x4780e2c>
     a2c:	05 02 00 40 	l.jal 4080b2c <__stack+0x3c00b30>
     a30:	0d 38 12 00 	l.bnf 4e05230 <__stack+0x4985234>
     a34:	05 02 00 40 	l.jal 4080b34 <__stack+0x3c00b38>
     a38:	0d 40 01 00 	l.bnf 5000e38 <__stack+0x4b80e3c>
     a3c:	05 02 00 40 	l.jal 4080b3c <__stack+0x3c00b40>
     a40:	0d 4c 04 0a 	l.bnf 5301a68 <__stack+0x4e81a6c>
     a44:	03 88 7f 01 	l.j fe220648 <__stack+0xfdda064c>
     a48:	00 05 02 00 	l.j 141248 <__ram_length+0xc1248>
     a4c:	40 0d 50 04 	.word 0x400d5004
     a50:	09 90 00 05 	.word 0x09900005
     a54:	02 00 40 0d 	l.j f8010a88 <__stack+0xf7b90a8c>
     a58:	5c 15 00 05 	.word 0x5c150005
     a5c:	02 00 40 0d 	l.j f8010a90 <__stack+0xf7b90a94>
     a60:	74 16 00 05 	l.cust2 
     a64:	02 00 40 0d 	l.j f8010a98 <__stack+0xf7b90a9c>
     a68:	84 01 00 05 	l.lwz r0,0x5(r1)
     a6c:	02 00 40 0d 	l.j f8010aa0 <__stack+0xf7b90aa4>
     a70:	8c 15 00 05 	l.lbz r0,0x5(r21)
     a74:	02 00 40 0d 	l.j f8010aa8 <__stack+0xf7b90aac>
     a78:	90 12 00 05 	l.lbs r0,0x5(r18)
     a7c:	02 00 40 0d 	l.j f8010ab0 <__stack+0xf7b90ab4>
     a80:	9c 04 0a 03 	l.addi r0,r4,0xa03
     a84:	82 7f 01 00 	l.ld r19,0x100(r31)
     a88:	05 02 00 40 	l.jal 4080b88 <__stack+0x3c00b8c>
     a8c:	0d b8 04 09 	l.bnf 6e01ab0 <__stack+0x6981ab4>
     a90:	9f 00 05 02 	l.addi r24,r0,0x502
     a94:	00 40 0d dc 	l.j 1004204 <__stack+0xb84208>
     a98:	1b 00 05 02 	l.movhi r24,0x502
     a9c:	00 40 0d e4 	l.j 100422c <__stack+0xb84230>
     aa0:	0d 00 05 02 	l.bnf 4001ea8 <__stack+0x3b81eac>
     aa4:	00 40 0d f4 	l.j 1004274 <__stack+0xb84278>
     aa8:	16 00 05 02 	.word 0x16000502
     aac:	00 40 0d f8 	l.j 100428c <__stack+0xb84290>
     ab0:	03 e5 7e 01 	l.j ff9602b4 <__stack+0xff4e02b8>
     ab4:	00 05 02 00 	l.j 1412b4 <__ram_length+0xc12b4>
     ab8:	40 0d fc b1 	.word 0x400dfcb1
     abc:	00 05 02 00 	l.j 1412bc <__ram_length+0xc12bc>
     ac0:	40 0e 00 12 	.word 0x400e0012
     ac4:	00 05 02 00 	l.j 1412c4 <__ram_length+0xc12c4>
     ac8:	40 0e 04 17 	.word 0x400e0417
     acc:	00 05 02 00 	l.j 1412cc <__ram_length+0xc12cc>
     ad0:	40 0e 0c 18 	.word 0x400e0c18
     ad4:	00 05 02 00 	l.j 1412d4 <__ram_length+0xc12d4>
     ad8:	40 0e 14 17 	.word 0x400e1417
     adc:	00 05 02 00 	l.j 1412dc <__ram_length+0xc12dc>
     ae0:	40 0e 18 16 	.word 0x400e1816
     ae4:	00 05 02 00 	l.j 1412e4 <__ram_length+0xc12e4>
     ae8:	40 0e 1c 15 	.word 0x400e1c15
     aec:	00 05 02 00 	l.j 1412ec <__ram_length+0xc12ec>
     af0:	40 0e 24 16 	.word 0x400e2416
     af4:	00 05 02 00 	l.j 1412f4 <__ram_length+0xc12f4>
     af8:	40 0e 28 16 	.word 0x400e2816
     afc:	00 05 02 00 	l.j 1412fc <__ram_length+0xc12fc>
     b00:	40 0e 2c 12 	.word 0x400e2c12
     b04:	00 05 02 00 	l.j 141304 <__ram_length+0xc1304>
     b08:	40 0e 30 17 	.word 0x400e3017
     b0c:	00 05 02 00 	l.j 14130c <__ram_length+0xc130c>
     b10:	40 0e 38 16 	.word 0x400e3816
     b14:	00 05 02 00 	l.j 141314 <__ram_length+0xc1314>
     b18:	40 0e 3c 16 	.word 0x400e3c16
     b1c:	00 05 02 00 	l.j 14131c <__ram_length+0xc131c>
     b20:	40 0e 48 15 	.word 0x400e4815
     b24:	00 05 02 00 	l.j 141324 <__ram_length+0xc1324>
     b28:	40 0e 50 1a 	.word 0x400e501a
     b2c:	00 05 02 00 	l.j 14132c <__ram_length+0xc132c>
     b30:	40 0e 5c 01 	.word 0x400e5c01
     b34:	00 05 02 00 	l.j 141334 <__ram_length+0xc1334>
     b38:	40 0e 64 01 	.word 0x400e6401
     b3c:	00 05 02 00 	l.j 14133c <__ram_length+0xc133c>
     b40:	40 0e 6c 03 	.word 0x400e6c03
     b44:	eb 7d 01 00 	.word 0xeb7d0100
     b48:	05 02 00 40 	l.jal 4080c48 <__stack+0x3c00c4c>
     b4c:	0e 70 13 00 	l.bnf f9c0574c <__stack+0xf9785750>
     b50:	05 02 00 40 	l.jal 4080c50 <__stack+0x3c00c54>
     b54:	0e 74 18 00 	l.bnf f9d06b54 <__stack+0xf9886b58>
     b58:	05 02 00 40 	l.jal 4080c58 <__stack+0x3c00c5c>
     b5c:	0e 78 13 00 	l.bnf f9e0575c <__stack+0xf9985760>
     b60:	05 02 00 40 	l.jal 4080c60 <__stack+0x3c00c64>
     b64:	0e 7c 13 00 	l.bnf f9f05764 <__stack+0xf9a85768>
     b68:	05 02 00 40 	l.jal 4080c68 <__stack+0x3c00c6c>
     b6c:	0e 84 1d 00 	l.bnf fa107f6c <__stack+0xf9c87f70>
     b70:	05 02 00 40 	l.jal 4080c70 <__stack+0x3c00c74>
     b74:	0e 88 28 00 	l.bnf fa20ab74 <__stack+0xf9d8ab78>
     b78:	05 02 00 40 	l.jal 4080c78 <__stack+0x3c00c7c>
     b7c:	0e 90 2f 00 	l.bnf fa40c77c <__stack+0xf9f8c780>
     b80:	05 02 00 40 	l.jal 4080c80 <__stack+0x3c00c84>
     b84:	0e 94 19 00 	l.bnf fa506f84 <__stack+0xfa086f88>
     b88:	05 02 00 40 	l.jal 4080c88 <__stack+0x3c00c8c>
     b8c:	0e 9c 12 00 	l.bnf fa70538c <__stack+0xfa285390>
     b90:	05 02 00 40 	l.jal 4080c90 <__stack+0x3c00c94>
     b94:	0e a4 28 00 	l.bnf fa90ab94 <__stack+0xfa48ab98>
     b98:	05 02 00 40 	l.jal 4080c98 <__stack+0x3c00c9c>
     b9c:	0e a8 03 6c 	l.bnf faa0194c <__stack+0xfa581950>
     ba0:	01 00 05 02 	l.j 4001fa8 <__stack+0x3b81fac>
     ba4:	00 40 0e ac 	l.j 1004654 <__stack+0xb84658>
     ba8:	03 bf 7f 01 	l.j fefe07ac <__stack+0xfeb607b0>
     bac:	00 05 02 00 	l.j 1413ac <__ram_length+0xc13ac>
     bb0:	40 0e c0 03 	.word 0x400ec003
     bb4:	a2 02 01 00 	l.addic r16,r2,0x100
     bb8:	05 02 00 40 	l.jal 4080cb8 <__stack+0x3c00cbc>
     bbc:	0e d0 15 00 	l.bnf fb405fbc <__stack+0xfaf85fc0>
     bc0:	05 02 00 40 	l.jal 4080cc0 <__stack+0x3c00cc4>
     bc4:	0e d8 15 00 	l.bnf fb605fc4 <__stack+0xfb185fc8>
     bc8:	05 02 00 40 	l.jal 4080cc8 <__stack+0x3c00ccc>
     bcc:	0e e8 15 00 	l.bnf fba05fcc <__stack+0xfb585fd0>
     bd0:	05 02 00 40 	l.jal 4080cd0 <__stack+0x3c00cd4>
     bd4:	0e f0 17 00 	l.bnf fbc067d4 <__stack+0xfb7867d8>
     bd8:	05 02 00 40 	l.jal 4080cd8 <__stack+0x3c00cdc>
     bdc:	0f 28 04 0b 	l.bnf fca01c08 <__stack+0xfc581c0c>
     be0:	03 e7 7c 01 	l.j ff9dfbe4 <__stack+0xff55fbe8>
     be4:	00 05 02 00 	l.j 1413e4 <__ram_length+0xc13e4>
     be8:	40 0f 28 17 	.word 0x400f2817
     bec:	00 05 02 00 	l.j 1413ec <__ram_length+0xc13ec>
     bf0:	40 0f 34 16 	.word 0x400f3416
     bf4:	00 05 02 00 	l.j 1413f4 <__ram_length+0xc13f4>
     bf8:	40 0f 38 18 	.word 0x400f3818
     bfc:	00 05 02 00 	l.j 1413fc <__ram_length+0xc13fc>
     c00:	40 0f 40 18 	.word 0x400f4018
     c04:	00 05 02 00 	l.j 141404 <__ram_length+0xc1404>
     c08:	40 0f 40 17 	.word 0x400f4017
     c0c:	00 05 02 00 	l.j 14140c <__ram_length+0xc140c>
     c10:	40 0f 4c 15 	.word 0x400f4c15
     c14:	00 05 02 00 	l.j 141414 <__ram_length+0xc1414>
     c18:	40 0f 50 15 	.word 0x400f5015
     c1c:	00 05 02 00 	l.j 14141c <__ram_length+0xc141c>
     c20:	40 0f 54 19 	.word 0x400f5419
     c24:	00 05 02 00 	l.j 141424 <__ram_length+0xc1424>
     c28:	40 0f 5c 04 	.word 0x400f5c04
     c2c:	0c 48 00 05 	l.bnf 1200c40 <__stack+0xd80c44>
     c30:	02 00 40 0f 	l.j f8010c6c <__stack+0xf7b90c70>
     c34:	88 1a 00 05 	l.lws r0,0x5(r26)
     c38:	02 00 40 0f 	l.j f8010c74 <__stack+0xf7b90c78>
     c3c:	8c 0e 00 05 	l.lbz r0,0x5(r14)
     c40:	02 00 40 0f 	l.j f8010c7c <__stack+0xf7b90c80>
     c44:	90 1a 00 05 	l.lbs r0,0x5(r26)
     c48:	02 00 40 0f 	l.j f8010c84 <__stack+0xf7b90c88>
     c4c:	a8 15 00 05 	l.ori r0,r21,0x5
     c50:	02 00 40 0f 	l.j f8010c8c <__stack+0xf7b90c90>
     c54:	c4 15 00 05 	.word 0xc4150005
     c58:	02 00 40 0f 	l.j f8010c94 <__stack+0xf7b90c98>
     c5c:	fc 15 00 05 	l.cust8 
     c60:	02 00 40 10 	l.j f8010ca0 <__stack+0xf7b90ca4>
     c64:	00 13 00 05 	l.j 4c0c78 <__stack+0x40c7c>
     c68:	02 00 40 10 	l.j f8010ca8 <__stack+0xf7b90cac>
     c6c:	04 0f 00 05 	l.jal 3c0c80 <__ram_length+0x340c80>
     c70:	02 00 40 10 	l.j f8010cb0 <__stack+0xf7b90cb4>
     c74:	08 19 00 05 	.word 0x08190005
     c78:	02 00 40 10 	l.j f8010cb8 <__stack+0xf7b90cbc>
     c7c:	10 19 00 05 	l.bf 640c90 <__stack+0x1c0c94>
     c80:	02 00 40 10 	l.j f8010cc0 <__stack+0xf7b90cc4>
     c84:	14 0f 00 05 	.word 0x140f0005
     c88:	02 00 40 10 	l.j f8010cc8 <__stack+0xf7b90ccc>
     c8c:	1c 25 00 05 	.word 0x1c250005
     c90:	02 00 40 10 	l.j f8010cd0 <__stack+0xf7b90cd4>
     c94:	20 03 6f 01 	.word 0x20036f01
     c98:	00 05 02 00 	l.j 141498 <__ram_length+0xc1498>
     c9c:	40 10 2c 18 	.word 0x40102c18
     ca0:	00 05 02 00 	l.j 1414a0 <__ram_length+0xc14a0>
     ca4:	40 10 38 15 	.word 0x40103815
     ca8:	00 05 02 00 	l.j 1414a8 <__ram_length+0xc14a8>
     cac:	40 10 3c 15 	.word 0x40103c15
     cb0:	00 05 02 00 	l.j 1414b0 <__ram_length+0xc14b0>
     cb4:	40 10 40 13 	.word 0x40104013
     cb8:	00 05 02 00 	l.j 1414b8 <__ram_length+0xc14b8>
     cbc:	40 11 00 15 	.word 0x40110015
     cc0:	00 05 02 00 	l.j 1414c0 <__ram_length+0xc14c0>
     cc4:	40 11 0c 15 	.word 0x40110c15
     cc8:	00 05 02 00 	l.j 1414c8 <__ram_length+0xc14c8>
     ccc:	40 11 1c 15 	.word 0x40111c15
     cd0:	00 05 02 00 	l.j 1414d0 <__ram_length+0xc14d0>
     cd4:	40 11 20 13 	.word 0x40112013
     cd8:	00 05 02 00 	l.j 1414d8 <__ram_length+0xc14d8>
     cdc:	40 11 5c 17 	.word 0x40115c17
     ce0:	00 05 02 00 	l.j 1414e0 <__ram_length+0xc14e0>
     ce4:	40 11 60 16 	.word 0x40116016
     ce8:	00 05 02 00 	l.j 1414e8 <__ram_length+0xc14e8>
     cec:	40 11 64 12 	.word 0x40116412
     cf0:	00 05 02 00 	l.j 1414f0 <__ram_length+0xc14f0>
     cf4:	40 11 68 0d 	.word 0x4011680d
     cf8:	00 05 02 00 	l.j 1414f8 <__ram_length+0xc14f8>
     cfc:	40 11 6c 1b 	.word 0x40116c1b
     d00:	00 05 02 00 	l.j 141500 <__ram_length+0xc1500>
     d04:	40 11 80 15 	.word 0x40118015
     d08:	00 05 02 00 	l.j 141508 <__ram_length+0xc1508>
     d0c:	40 11 9c 15 	.word 0x40119c15
     d10:	00 05 02 00 	l.j 141510 <__ram_length+0xc1510>
     d14:	40 12 5c 0b 	.word 0x40125c0b
     d18:	00 05 02 00 	l.j 141518 <__ram_length+0xc1518>
     d1c:	40 12 64 22 	.word 0x40126422
     d20:	00 05 02 00 	l.j 141520 <__ram_length+0xc1520>
     d24:	40 12 68 15 	.word 0x40126815
     d28:	00 05 02 00 	l.j 141528 <__ram_length+0xc1528>
     d2c:	40 12 6c 13 	.word 0x40126c13
     d30:	00 05 02 00 	l.j 141530 <__ram_length+0xc1530>
     d34:	40 12 70 15 	.word 0x40127015
     d38:	00 05 02 00 	l.j 141538 <__ram_length+0xc1538>
     d3c:	40 12 74 13 	.word 0x40127413
     d40:	00 05 02 00 	l.j 141540 <__ram_length+0xc1540>
     d44:	40 13 34 15 	.word 0x40133415
     d48:	00 05 02 00 	l.j 141548 <__ram_length+0xc1548>
     d4c:	40 13 48 13 	.word 0x40134813
     d50:	00 05 02 00 	l.j 141550 <__ram_length+0xc1550>
     d54:	40 13 4c 15 	.word 0x40134c15
     d58:	00 05 02 00 	l.j 141558 <__ram_length+0xc1558>
     d5c:	40 13 78 03 	.word 0x40137803
     d60:	70 01 00 05 	l.cust1 
     d64:	02 00 40 13 	l.j f8010db0 <__stack+0xf7b90db4>
     d68:	8c 0a 00 05 	l.lbz r0,0x5(r10)
     d6c:	02 00 40 13 	l.j f8010db8 <__stack+0xf7b90dbc>
     d70:	94 31 00 05 	l.lhz r1,0x5(r17)
     d74:	02 00 40 13 	l.j f8010dc0 <__stack+0xf7b90dc4>
     d78:	98 15 00 05 	l.lhs r0,0x5(r21)
     d7c:	02 00 40 13 	l.j f8010dc8 <__stack+0xf7b90dcc>
     d80:	9c 13 00 05 	l.addi r0,r19,0x5
     d84:	02 00 40 14 	l.j f8010dd4 <__stack+0xf7b90dd8>
     d88:	5c 15 00 05 	.word 0x5c150005
     d8c:	02 00 40 14 	l.j f8010ddc <__stack+0xf7b90de0>
     d90:	70 15 00 05 	l.cust1 
     d94:	02 00 40 14 	l.j f8010de4 <__stack+0xf7b90de8>
     d98:	74 13 00 05 	l.cust2 
     d9c:	02 00 40 14 	l.j f8010dec <__stack+0xf7b90df0>
     da0:	78 23 00 05 	l.cust3 
     da4:	02 00 40 14 	l.j f8010df4 <__stack+0xf7b90df8>
     da8:	7c 03 71 01 	l.cust4 
     dac:	00 05 02 00 	l.j 1415ac <__ram_length+0xc15ac>
     db0:	40 14 a0 18 	.word 0x4014a018
     db4:	00 05 02 00 	l.j 1415b4 <__ram_length+0xc15b4>
     db8:	40 14 ac 15 	.word 0x4014ac15
     dbc:	00 05 02 00 	l.j 1415bc <__ram_length+0xc15bc>
     dc0:	40 14 b0 15 	.word 0x4014b015
     dc4:	00 05 02 00 	l.j 1415c4 <__ram_length+0xc15c4>
     dc8:	40 14 b4 13 	.word 0x4014b413
     dcc:	00 05 02 00 	l.j 1415cc <__ram_length+0xc15cc>
     dd0:	40 15 74 15 	.word 0x40157415
     dd4:	00 05 02 00 	l.j 1415d4 <__ram_length+0xc15d4>
     dd8:	40 15 80 15 	.word 0x40158015
     ddc:	00 05 02 00 	l.j 1415dc <__ram_length+0xc15dc>
     de0:	40 15 88 15 	.word 0x40158815
     de4:	00 05 02 00 	l.j 1415e4 <__ram_length+0xc15e4>
     de8:	40 15 8c 13 	.word 0x40158c13
     dec:	00 05 02 00 	l.j 1415ec <__ram_length+0xc15ec>
     df0:	40 15 c8 17 	.word 0x4015c817
     df4:	00 05 02 00 	l.j 1415f4 <__ram_length+0xc15f4>
     df8:	40 15 cc 16 	.word 0x4015cc16
     dfc:	00 05 02 00 	l.j 1415fc <__ram_length+0xc15fc>
     e00:	40 15 d0 12 	.word 0x4015d012
     e04:	00 05 02 00 	l.j 141604 <__ram_length+0xc1604>
     e08:	40 15 d4 0d 	.word 0x4015d40d
     e0c:	00 05 02 00 	l.j 14160c <__ram_length+0xc160c>
     e10:	40 15 d8 1b 	.word 0x4015d81b
     e14:	00 05 02 00 	l.j 141614 <__ram_length+0xc1614>
     e18:	40 15 ec 15 	.word 0x4015ec15
     e1c:	00 05 02 00 	l.j 14161c <__ram_length+0xc161c>
     e20:	40 16 08 15 	.word 0x40160815
     e24:	00 05 02 00 	l.j 141624 <__ram_length+0xc1624>
     e28:	40 16 c8 0b 	.word 0x4016c80b
     e2c:	00 05 02 00 	l.j 14162c <__ram_length+0xc162c>
     e30:	40 16 d0 20 	.word 0x4016d020
     e34:	00 05 02 00 	l.j 141634 <__ram_length+0xc1634>
     e38:	40 16 d4 15 	.word 0x4016d415
     e3c:	00 05 02 00 	l.j 14163c <__ram_length+0xc163c>
     e40:	40 16 d8 13 	.word 0x4016d813
     e44:	00 05 02 00 	l.j 141644 <__ram_length+0xc1644>
     e48:	40 17 a0 15 	.word 0x4017a015
     e4c:	00 05 02 00 	l.j 14164c <__ram_length+0xc164c>
     e50:	40 17 dc 03 	.word 0x4017dc03
     e54:	72 01 00 05 	l.cust1 
     e58:	02 00 40 17 	l.j f8010eb4 <__stack+0xf7b90eb8>
     e5c:	f0 25 00 05 	l.cust5 r1,r5,r0,0x0,0x5
     e60:	02 00 40 18 	l.j f8010ec0 <__stack+0xf7b90ec4>
     e64:	b8 16 00 05 	l.slli r0,r22,0x5
     e68:	02 00 40 18 	l.j f8010ec8 <__stack+0xf7b90ecc>
     e6c:	ec 19 00 05 	.word 0xec190005
     e70:	02 00 40 19 	l.j f8010ed4 <__stack+0xf7b90ed8>
     e74:	14 1a 00 05 	.word 0x141a0005
     e78:	02 00 40 19 	l.j f8010edc <__stack+0xf7b90ee0>
     e7c:	18 0e 00 05 	l.movhi r0,0x5
     e80:	02 00 40 19 	l.j f8010ee4 <__stack+0xf7b90ee8>
     e84:	1c 1a 00 05 	.word 0x1c1a0005
     e88:	02 00 40 19 	l.j f8010eec <__stack+0xf7b90ef0>
     e8c:	34 15 00 05 	.word 0x34150005
     e90:	02 00 40 19 	l.j f8010ef4 <__stack+0xf7b90ef8>
     e94:	50 15 00 05 	.word 0x50150005
     e98:	02 00 40 19 	l.j f8010efc <__stack+0xf7b90f00>
     e9c:	68 15 00 05 	.word 0x68150005
     ea0:	02 00 40 19 	l.j f8010f04 <__stack+0xf7b90f08>
     ea4:	6c 13 00 05 	.word 0x6c130005
     ea8:	02 00 40 19 	l.j f8010f0c <__stack+0xf7b90f10>
     eac:	74 15 00 05 	l.cust2 
     eb0:	02 00 40 19 	l.j f8010f14 <__stack+0xf7b90f18>
     eb4:	78 13 00 05 	l.cust3 
     eb8:	02 00 40 19 	l.j f8010f1c <__stack+0xf7b90f20>
     ebc:	7c 0f 00 05 	l.cust4 
     ec0:	02 00 40 19 	l.j f8010f24 <__stack+0xf7b90f28>
     ec4:	80 19 00 05 	l.ld r0,0x5(r25)
     ec8:	02 00 40 19 	l.j f8010f2c <__stack+0xf7b90f30>
     ecc:	88 1f 00 05 	l.lws r0,0x5(r31)
     ed0:	02 00 40 19 	l.j f8010f34 <__stack+0xf7b90f38>
     ed4:	8c 03 75 01 	l.lbz r0,0x7501(r3)
     ed8:	00 05 02 00 	l.j 1416d8 <__ram_length+0xc16d8>
     edc:	40 19 90 18 	.word 0x40199018
     ee0:	00 05 02 00 	l.j 1416e0 <__ram_length+0xc16e0>
     ee4:	40 19 94 10 	.word 0x40199410
     ee8:	00 05 02 00 	l.j 1416e8 <__ram_length+0xc16e8>
     eec:	40 19 9c 1a 	.word 0x40199c1a
     ef0:	00 05 02 00 	l.j 1416f0 <__ram_length+0xc16f0>
     ef4:	40 19 a0 0e 	.word 0x4019a00e
     ef8:	00 05 02 00 	l.j 1416f8 <__ram_length+0xc16f8>
     efc:	40 19 a4 1a 	.word 0x4019a41a
     f00:	00 05 02 00 	l.j 141700 <__ram_length+0xc1700>
     f04:	40 19 a8 0e 	.word 0x4019a80e
     f08:	00 05 02 00 	l.j 141708 <__ram_length+0xc1708>
     f0c:	40 19 b8 1d 	.word 0x4019b81d
     f10:	00 05 02 00 	l.j 141710 <__ram_length+0xc1710>
     f14:	40 19 c0 0e 	.word 0x4019c00e
     f18:	00 05 02 00 	l.j 141718 <__ram_length+0xc1718>
     f1c:	40 19 cc 15 	.word 0x4019cc15
     f20:	00 05 02 00 	l.j 141720 <__ram_length+0xc1720>
     f24:	40 19 d0 15 	.word 0x4019d015
     f28:	00 05 02 00 	l.j 141728 <__ram_length+0xc1728>
     f2c:	40 19 d4 13 	.word 0x4019d413
     f30:	00 05 02 00 	l.j 141730 <__ram_length+0xc1730>
     f34:	40 1a 94 15 	.word 0x401a9415
     f38:	00 05 02 00 	l.j 141738 <__ram_length+0xc1738>
     f3c:	40 1a a0 15 	.word 0x401aa015
     f40:	00 05 02 00 	l.j 141740 <__ram_length+0xc1740>
     f44:	40 1a a8 15 	.word 0x401aa815
     f48:	00 05 02 00 	l.j 141748 <__ram_length+0xc1748>
     f4c:	40 1a ac 13 	.word 0x401aac13
     f50:	00 05 02 00 	l.j 141750 <__ram_length+0xc1750>
     f54:	40 1a e8 17 	.word 0x401ae817
     f58:	00 05 02 00 	l.j 141758 <__ram_length+0xc1758>
     f5c:	40 1b 04 15 	.word 0x401b0415
     f60:	00 05 02 00 	l.j 141760 <__ram_length+0xc1760>
     f64:	40 1b 1c 15 	.word 0x401b1c15
     f68:	00 05 02 00 	l.j 141768 <__ram_length+0xc1768>
     f6c:	40 1b dc 0b 	.word 0x401bdc0b
     f70:	00 05 02 00 	l.j 141770 <__ram_length+0xc1770>
     f74:	40 1b f4 20 	.word 0x401bf420
     f78:	00 05 02 00 	l.j 141778 <__ram_length+0xc1778>
     f7c:	40 1c c4 16 	.word 0x401cc416
     f80:	00 05 02 00 	l.j 141780 <__ram_length+0xc1780>
     f84:	40 1c f4 19 	.word 0x401cf419
     f88:	00 05 02 00 	l.j 141788 <__ram_length+0xc1788>
     f8c:	40 1d 1c 1a 	.word 0x401d1c1a
     f90:	00 05 02 00 	l.j 141790 <__ram_length+0xc1790>
     f94:	40 1d 20 0e 	.word 0x401d200e
     f98:	00 05 02 00 	l.j 141798 <__ram_length+0xc1798>
     f9c:	40 1d 24 1a 	.word 0x401d241a
     fa0:	00 05 02 00 	l.j 1417a0 <__ram_length+0xc17a0>
     fa4:	40 1d 3c 15 	.word 0x401d3c15
     fa8:	00 05 02 00 	l.j 1417a8 <__ram_length+0xc17a8>
     fac:	40 1d 5c 15 	.word 0x401d5c15
     fb0:	00 05 02 00 	l.j 1417b0 <__ram_length+0xc17b0>
     fb4:	40 1d 74 15 	.word 0x401d7415
     fb8:	00 05 02 00 	l.j 1417b8 <__ram_length+0xc17b8>
     fbc:	40 1d 78 13 	.word 0x401d7813
     fc0:	00 05 02 00 	l.j 1417c0 <__ram_length+0xc17c0>
     fc4:	40 1d 80 15 	.word 0x401d8015
     fc8:	00 05 02 00 	l.j 1417c8 <__ram_length+0xc17c8>
     fcc:	40 1d 84 13 	.word 0x401d8413
     fd0:	00 05 02 00 	l.j 1417d0 <__ram_length+0xc17d0>
     fd4:	40 1d 88 0f 	.word 0x401d880f
     fd8:	00 05 02 00 	l.j 1417d8 <__ram_length+0xc17d8>
     fdc:	40 1d 8c 19 	.word 0x401d8c19
     fe0:	00 05 02 00 	l.j 1417e0 <__ram_length+0xc17e0>
     fe4:	40 1d 94 1f 	.word 0x401d941f
     fe8:	00 05 02 00 	l.j 1417e8 <__ram_length+0xc17e8>
     fec:	40 1d 98 03 	.word 0x401d9803
     ff0:	75 01 00 05 	l.cust2 
     ff4:	02 00 40 1d 	l.j f8011068 <__stack+0xf7b9106c>
     ff8:	9c 18 00 05 	l.addi r0,r24,0x5
     ffc:	02 00 40 1d 	l.j f8011070 <__stack+0xf7b91074>
    1000:	a0 10 00 05 	l.addic r0,r16,0x5
    1004:	02 00 40 1d 	l.j f8011078 <__stack+0xf7b9107c>
    1008:	a8 1a 00 05 	l.ori r0,r26,0x5
    100c:	02 00 40 1d 	l.j f8011080 <__stack+0xf7b91084>
    1010:	ac 0e 00 05 	l.xori r0,r14,0x5
    1014:	02 00 40 1d 	l.j f8011088 <__stack+0xf7b9108c>
    1018:	b0 1a 00 05 	l.muli r0,r26,0x5
    101c:	02 00 40 1d 	l.j f8011090 <__stack+0xf7b91094>
    1020:	b4 0e 00 05 	l.mfspr r0,r14,0x5
    1024:	02 00 40 1d 	l.j f8011098 <__stack+0xf7b9109c>
    1028:	c4 1d 00 05 	.word 0xc41d0005
    102c:	02 00 40 1d 	l.j f80110a0 <__stack+0xf7b910a4>
    1030:	cc 0e 00 05 	.word 0xcc0e0005
    1034:	02 00 40 1d 	l.j f80110a8 <__stack+0xf7b910ac>
    1038:	d8 15 00 05 	l.sb 0x5(r21),r0
    103c:	02 00 40 1d 	l.j f80110b0 <__stack+0xf7b910b4>
    1040:	dc 15 00 05 	l.sh 0x5(r21),r0
    1044:	02 00 40 1d 	l.j f80110b8 <__stack+0xf7b910bc>
    1048:	e0 13 00 05 	l.xor r0,r19,r0
    104c:	02 00 40 1e 	l.j f80110c4 <__stack+0xf7b910c8>
    1050:	a0 15 00 05 	l.addic r0,r21,0x5
    1054:	02 00 40 1e 	l.j f80110cc <__stack+0xf7b910d0>
    1058:	ac 15 00 05 	l.xori r0,r21,0x5
    105c:	02 00 40 1e 	l.j f80110d4 <__stack+0xf7b910d8>
    1060:	b4 15 00 05 	l.mfspr r0,r21,0x5
    1064:	02 00 40 1e 	l.j f80110dc <__stack+0xf7b910e0>
    1068:	b8 13 00 05 	l.slli r0,r19,0x5
    106c:	02 00 40 1e 	l.j f80110e4 <__stack+0xf7b910e8>
    1070:	f4 17 00 05 	l.cust6 
    1074:	02 00 40 1f 	l.j f80110f0 <__stack+0xf7b910f4>
    1078:	10 15 00 05 	l.bf 54108c <__stack+0xc1090>
    107c:	02 00 40 1f 	l.j f80110f8 <__stack+0xf7b910fc>
    1080:	28 15 00 05 	.word 0x28150005
    1084:	02 00 40 1f 	l.j f8011100 <__stack+0xf7b91104>
    1088:	e8 0b 00 05 	.word 0xe80b0005
    108c:	02 00 40 20 	l.j f801110c <__stack+0xf7b91110>
    1090:	00 20 00 05 	l.j 8010a4 <__stack+0x3810a8>
    1094:	02 00 40 20 	l.j f8011114 <__stack+0xf7b91118>
    1098:	d0 1f 00 05 	l.sd 0x5(r31),r0
    109c:	02 00 40 20 	l.j f801111c <__stack+0xf7b91120>
    10a0:	d8 0b 00 05 	l.sb 0x5(r11),r0
    10a4:	02 00 40 20 	l.j f8011124 <__stack+0xf7b91128>
    10a8:	f4 15 00 05 	l.cust6 
    10ac:	02 00 40 20 	l.j f801112c <__stack+0xf7b91130>
    10b0:	f8 13 00 05 	l.cust7 
    10b4:	02 00 40 21 	l.j f8011138 <__stack+0xf7b9113c>
    10b8:	24 15 00 05 	l.rfe 
    10bc:	02 00 40 22 	l.j f8011144 <__stack+0xf7b91148>
    10c0:	c8 15 00 05 	lf.ftoi.s r0,r21
    10c4:	02 00 40 24 	l.j f8011154 <__stack+0xf7b91158>
    10c8:	6c 15 00 05 	.word 0x6c150005
    10cc:	02 00 40 26 	l.j f8011164 <__stack+0xf7b91168>
    10d0:	10 15 00 05 	l.bf 5410e4 <__stack+0xc10e8>
    10d4:	02 00 40 27 	l.j f8011170 <__stack+0xf7b91174>
    10d8:	b4 15 00 05 	l.mfspr r0,r21,0x5
    10dc:	02 00 40 29 	l.j f8011180 <__stack+0xf7b91184>
    10e0:	5c 15 00 05 	.word 0x5c150005
    10e4:	02 00 40 2b 	l.j f8011190 <__stack+0xf7b91194>
    10e8:	04 15 00 05 	l.jal 5410fc <__stack+0xc1100>
    10ec:	02 00 40 2b 	l.j f8011198 <__stack+0xf7b9119c>
    10f0:	cc 16 00 05 	.word 0xcc160005
    10f4:	02 00 40 2b 	l.j f80111a0 <__stack+0xf7b911a4>
    10f8:	fc 04 0d 03 	l.cust8 
    10fc:	cf 7e 01 00 	.word 0xcf7e0100
    1100:	05 02 00 40 	l.jal 4081200 <__stack+0x3c01204>
    1104:	2b fc 1c 00 	.word 0x2bfc1c00
    1108:	05 02 00 40 	l.jal 4081208 <__stack+0x3c0120c>
    110c:	2c 04 0c 00 	.word 0x2c040c00
    1110:	05 02 00 40 	l.jal 4081210 <__stack+0x3c01214>
    1114:	2c 08 1c 00 	.word 0x2c081c00
    1118:	05 02 00 40 	l.jal 4081218 <__stack+0x3c0121c>
    111c:	2c 18 0c 00 	.word 0x2c180c00
    1120:	05 02 00 40 	l.jal 4081220 <__stack+0x3c01224>
    1124:	2c 1c 1c 00 	.word 0x2c1c1c00
    1128:	05 02 00 40 	l.jal 4081228 <__stack+0x3c0122c>
    112c:	2c 28 17 00 	.word 0x2c281700
    1130:	05 02 00 40 	l.jal 4081230 <__stack+0x3c01234>
    1134:	2c 38 18 00 	.word 0x2c381800
    1138:	05 02 00 40 	l.jal 4081238 <__stack+0x3c0123c>
    113c:	2c 3c 18 00 	.word 0x2c3c1800
    1140:	05 02 00 40 	l.jal 4081240 <__stack+0x3c01244>
    1144:	2c 44 10 00 	.word 0x2c441000
    1148:	05 02 00 40 	l.jal 4081248 <__stack+0x3c0124c>
    114c:	2c 48 18 00 	.word 0x2c481800
    1150:	05 02 00 40 	l.jal 4081250 <__stack+0x3c01254>
    1154:	2c 4c 10 00 	.word 0x2c4c1000
    1158:	05 02 00 40 	l.jal 4081258 <__stack+0x3c0125c>
    115c:	2c 50 18 00 	.word 0x2c501800
    1160:	05 02 00 40 	l.jal 4081260 <__stack+0x3c01264>
    1164:	2c 54 10 00 	.word 0x2c541000
    1168:	05 02 00 40 	l.jal 4081268 <__stack+0x3c0126c>
    116c:	2c 58 18 00 	.word 0x2c581800
    1170:	05 02 00 40 	l.jal 4081270 <__stack+0x3c01274>
    1174:	2c 5c 15 00 	.word 0x2c5c1500
    1178:	05 02 00 40 	l.jal 4081278 <__stack+0x3c0127c>
    117c:	2c 60 13 00 	.word 0x2c601300
    1180:	05 02 00 40 	l.jal 4081280 <__stack+0x3c01284>
    1184:	2c 6c 15 00 	.word 0x2c6c1500
    1188:	05 02 00 40 	l.jal 4081288 <__stack+0x3c0128c>
    118c:	2c 78 17 00 	.word 0x2c781700
    1190:	05 02 00 40 	l.jal 4081290 <__stack+0x3c01294>
    1194:	2c 8c 03 8e 	.word 0x2c8c038e
    1198:	03 01 00 05 	l.j fc0411ac <__stack+0xfbbc11b0>
    119c:	02 00 40 2c 	l.j f801124c <__stack+0xf7b91250>
    11a0:	8c 18 00 05 	l.lbz r0,0x5(r24)
    11a4:	02 00 40 2c 	l.j f8011254 <__stack+0xf7b91258>
    11a8:	90 16 00 05 	l.lbs r0,0x5(r22)
    11ac:	02 00 40 2c 	l.j f801125c <__stack+0xf7b91260>
    11b0:	98 15 00 05 	l.lhs r0,0x5(r21)
    11b4:	02 00 40 2c 	l.j f8011264 <__stack+0xf7b91268>
    11b8:	b0 13 00 05 	l.muli r0,r19,0x5
    11bc:	02 00 40 2c 	l.j f801126c <__stack+0xf7b91270>
    11c0:	c4 1a 00 05 	.word 0xc41a0005
    11c4:	02 00 40 2c 	l.j f8011274 <__stack+0xf7b91278>
    11c8:	cc 2d 00 05 	.word 0xcc2d0005
    11cc:	02 00 40 2c 	l.j f801127c <__stack+0xf7b91280>
    11d0:	f4 1b 00 05 	l.cust6 
    11d4:	02 00 40 2d 	l.j f8011288 <__stack+0xf7b9128c>
    11d8:	08 01 00 05 	.word 0x08010005
    11dc:	02 00 40 2d 	l.j f8011290 <__stack+0xf7b91294>
    11e0:	18 3d 00 05 	.word 0x183d0005
    11e4:	02 00 40 2d 	l.j f8011298 <__stack+0xf7b9129c>
    11e8:	20 03 5a 01 	.word 0x20035a01
    11ec:	00 05 02 00 	l.j 1419ec <__ram_length+0xc19ec>
    11f0:	40 2d 30 18 	.word 0x402d3018
    11f4:	00 05 02 00 	l.j 1419f4 <__ram_length+0xc19f4>
    11f8:	40 2d 40 19 	.word 0x402d4019
    11fc:	00 05 02 00 	l.j 1419fc <__ram_length+0xc19fc>
    1200:	40 2d 48 0f 	.word 0x402d480f
    1204:	00 05 02 00 	l.j 141a04 <__ram_length+0xc1a04>
    1208:	40 2d 4c 13 	.word 0x402d4c13
    120c:	00 05 02 00 	l.j 141a0c <__ram_length+0xc1a0c>
    1210:	40 2d 50 1d 	.word 0x402d501d
    1214:	00 05 02 00 	l.j 141a14 <__ram_length+0xc1a14>
    1218:	40 2d 60 18 	.word 0x402d6018
    121c:	00 05 02 00 	l.j 141a1c <__ram_length+0xc1a1c>
    1220:	40 2d 64 15 	.word 0x402d6415
    1224:	00 05 02 00 	l.j 141a24 <__ram_length+0xc1a24>
    1228:	40 2d 68 17 	.word 0x402d6817
    122c:	00 05 02 00 	l.j 141a2c <__ram_length+0xc1a2c>
    1230:	40 2d 6c 03 	.word 0x402d6c03
    1234:	61 01 00 05 	.word 0x61010005
    1238:	02 00 40 2d 	l.j f80112ec <__stack+0xf7b912f0>
    123c:	70 03 74 01 	l.cust1 
    1240:	00 05 02 00 	l.j 141a40 <__ram_length+0xc1a40>
    1244:	40 2d 74 16 	.word 0x402d7416
    1248:	00 05 02 00 	l.j 141a48 <__ram_length+0xc1a48>
    124c:	40 2d 7c 1e 	.word 0x402d7c1e
    1250:	00 05 02 00 	l.j 141a50 <__ram_length+0xc1a50>
    1254:	40 2d 80 0a 	.word 0x402d800a
    1258:	00 05 02 00 	l.j 141a58 <__ram_length+0xc1a58>
    125c:	40 2d 90 16 	.word 0x402d9016
    1260:	00 05 02 00 	l.j 141a60 <__ram_length+0xc1a60>
    1264:	40 2d bc 3f 	.word 0x402dbc3f
    1268:	00 05 02 00 	l.j 141a68 <__ram_length+0xc1a68>
    126c:	40 2d c4 12 	.word 0x402dc412
    1270:	00 05 02 00 	l.j 141a70 <__ram_length+0xc1a70>
    1274:	40 2d d0 16 	.word 0x402dd016
    1278:	00 05 02 00 	l.j 141a78 <__ram_length+0xc1a78>
    127c:	40 2d d8 03 	.word 0x402dd803
    1280:	66 01 00 05 	.word 0x66010005
    1284:	02 00 40 2d 	l.j f8011338 <__stack+0xf7b9133c>
    1288:	e8 35 00 05 	.word 0xe8350005
    128c:	02 00 40 2d 	l.j f8011340 <__stack+0xf7b91344>
    1290:	f4 1b 00 05 	l.cust6 
    1294:	02 00 40 2e 	l.j f801134c <__stack+0xf7b91350>
    1298:	20 03 b2 04 	.word 0x2003b204
    129c:	01 00 05 02 	l.j 40026a4 <__stack+0x3b826a8>
    12a0:	00 40 2e 20 	l.j 100cb20 <__stack+0xb8cb24>
    12a4:	17 00 05 02 	.word 0x17000502
    12a8:	00 40 2e 34 	l.j 100cb78 <__stack+0xb8cb7c>
    12ac:	15 00 05 02 	l.nop 0x502
    12b0:	00 40 2e 38 	l.j 100cb90 <__stack+0xb8cb94>
    12b4:	17 00 05 02 	.word 0x17000502
    12b8:	00 40 2e 40 	l.j 100cbb8 <__stack+0xb8cbbc>
    12bc:	04 0e 03 fb 	l.jal 3822a8 <__ram_length+0x3022a8>
    12c0:	7b 01 00 05 	l.cust3 
    12c4:	02 00 40 2e 	l.j f801137c <__stack+0xf7b91380>
    12c8:	40 19 00 05 	.word 0x40190005
    12cc:	02 00 40 2e 	l.j f8011384 <__stack+0xf7b91388>
    12d0:	4c 0f 00 05 	l.maci r15,0x5
    12d4:	02 00 40 2e 	l.j f801138c <__stack+0xf7b91390>
    12d8:	50 1a 00 05 	.word 0x501a0005
    12dc:	02 00 40 2e 	l.j f8011394 <__stack+0xf7b91398>
    12e0:	58 13 00 05 	.word 0x58130005
    12e4:	02 00 40 2e 	l.j f801139c <__stack+0xf7b913a0>
    12e8:	5c 15 00 05 	.word 0x5c150005
    12ec:	02 00 40 2e 	l.j f80113a4 <__stack+0xf7b913a8>
    12f0:	60 0e 00 05 	.word 0x600e0005
    12f4:	02 00 40 2e 	l.j f80113ac <__stack+0xf7b913b0>
    12f8:	64 1a 00 05 	.word 0x641a0005
    12fc:	02 00 40 2e 	l.j f80113b4 <__stack+0xf7b913b8>
    1300:	68 15 00 05 	.word 0x68150005
    1304:	02 00 40 2e 	l.j f80113bc <__stack+0xf7b913c0>
    1308:	6c 1e 00 05 	.word 0x6c1e0005
    130c:	02 00 40 2e 	l.j f80113c4 <__stack+0xf7b913c8>
    1310:	70 0a 00 05 	l.cust1 
    1314:	02 00 40 2e 	l.j f80113cc <__stack+0xf7b913d0>
    1318:	74 15 00 05 	l.cust2 
    131c:	02 00 40 2e 	l.j f80113d4 <__stack+0xf7b913d8>
    1320:	7c 15 00 05 	l.cust4 
    1324:	02 00 40 2e 	l.j f80113dc <__stack+0xf7b913e0>
    1328:	84 15 00 05 	l.lwz r0,0x5(r21)
    132c:	02 00 40 2e 	l.j f80113e4 <__stack+0xf7b913e8>
    1330:	8c 15 00 05 	l.lbz r0,0x5(r21)
    1334:	02 00 40 2e 	l.j f80113ec <__stack+0xf7b913f0>
    1338:	94 15 00 05 	l.lhz r0,0x5(r21)
    133c:	02 00 40 2e 	l.j f80113f4 <__stack+0xf7b913f8>
    1340:	9c 19 00 05 	l.addi r0,r25,0x5
    1344:	02 00 40 2e 	l.j f80113fc <__stack+0xf7b91400>
    1348:	a8 04 0f 03 	l.ori r0,r4,0xf03
    134c:	f1 7c 01 00 	l.cust5 r11,r28,r0,0x8,0x0
    1350:	05 02 00 40 	l.jal 4081450 <__stack+0x3c01454>
    1354:	2e a8 17 00 	.word 0x2ea81700
    1358:	05 02 00 40 	l.jal 4081458 <__stack+0x3c0145c>
    135c:	2e b4 11 00 	.word 0x2eb41100
    1360:	05 02 00 40 	l.jal 4081460 <__stack+0x3c01464>
    1364:	2e b8 19 00 	.word 0x2eb81900
    1368:	05 02 00 40 	l.jal 4081468 <__stack+0x3c0146c>
    136c:	2e bc 12 00 	.word 0x2ebc1200
    1370:	05 02 00 40 	l.jal 4081470 <__stack+0x3c01474>
    1374:	2e c0 16 00 	.word 0x2ec01600
    1378:	05 02 00 40 	l.jal 4081478 <__stack+0x3c0147c>
    137c:	2e c4 15 00 	.word 0x2ec41500
    1380:	05 02 00 40 	l.jal 4081480 <__stack+0x3c01484>
    1384:	2e c8 13 00 	.word 0x2ec81300
    1388:	05 02 00 40 	l.jal 4081488 <__stack+0x3c0148c>
    138c:	2e cc 0f 00 	.word 0x2ecc0f00
    1390:	05 02 00 40 	l.jal 4081490 <__stack+0x3c01494>
    1394:	2e d0 19 00 	.word 0x2ed01900
    1398:	05 02 00 40 	l.jal 4081498 <__stack+0x3c0149c>
    139c:	2e d4 15 00 	.word 0x2ed41500
    13a0:	05 02 00 40 	l.jal 40814a0 <__stack+0x3c014a4>
    13a4:	2e dc 15 00 	.word 0x2edc1500
    13a8:	05 02 00 40 	l.jal 40814a8 <__stack+0x3c014ac>
    13ac:	2e e4 15 00 	.word 0x2ee41500
    13b0:	05 02 00 40 	l.jal 40814b0 <__stack+0x3c014b4>
    13b4:	2e ec 15 00 	.word 0x2eec1500
    13b8:	05 02 00 40 	l.jal 40814b8 <__stack+0x3c014bc>
    13bc:	2e f4 15 00 	.word 0x2ef41500
    13c0:	05 02 00 40 	l.jal 40814c0 <__stack+0x3c014c4>
    13c4:	2e fc 18 00 	.word 0x2efc1800
    13c8:	05 02 00 40 	l.jal 40814c8 <__stack+0x3c014cc>
    13cc:	2f 04 16 00 	.word 0x2f041600
    13d0:	05 02 00 40 	l.jal 40814d0 <__stack+0x3c014d4>
    13d4:	2f 0c 15 00 	.word 0x2f0c1500
    13d8:	05 02 00 40 	l.jal 40814d8 <__stack+0x3c014dc>
    13dc:	2f 14 15 00 	.word 0x2f141500
    13e0:	05 02 00 40 	l.jal 40814e0 <__stack+0x3c014e4>
    13e4:	2f 1c 15 00 	.word 0x2f1c1500
    13e8:	05 02 00 40 	l.jal 40814e8 <__stack+0x3c014ec>
    13ec:	2f 24 15 00 	.word 0x2f241500
    13f0:	05 02 00 40 	l.jal 40814f0 <__stack+0x3c014f4>
    13f4:	2f 2c 15 00 	.word 0x2f2c1500
    13f8:	05 02 00 40 	l.jal 40814f8 <__stack+0x3c014fc>
    13fc:	2f 34 15 00 	.word 0x2f341500
    1400:	05 02 00 40 	l.jal 4081500 <__stack+0x3c01504>
    1404:	2f 3c 15 00 	.word 0x2f3c1500
    1408:	05 02 00 40 	l.jal 4081508 <__stack+0x3c0150c>
    140c:	2f 44 15 00 	.word 0x2f441500
    1410:	05 02 00 40 	l.jal 4081510 <__stack+0x3c01514>
    1414:	2f 4c 15 00 	.word 0x2f4c1500
    1418:	05 02 00 40 	l.jal 4081518 <__stack+0x3c0151c>
    141c:	2f 54 15 00 	.word 0x2f541500
    1420:	05 02 00 40 	l.jal 4081520 <__stack+0x3c01524>
    1424:	2f 5c 15 00 	.word 0x2f5c1500
    1428:	05 02 00 40 	l.jal 4081528 <__stack+0x3c0152c>
    142c:	2f 64 15 00 	.word 0x2f641500
    1430:	05 02 00 40 	l.jal 4081530 <__stack+0x3c01534>
    1434:	2f 6c 16 00 	.word 0x2f6c1600
    1438:	05 02 00 40 	l.jal 4081538 <__stack+0x3c0153c>
    143c:	2f 74 17 00 	.word 0x2f741700
    1440:	05 02 00 40 	l.jal 4081540 <__stack+0x3c01544>
    1444:	2f 80 18 00 	.word 0x2f801800
    1448:	05 02 00 40 	l.jal 4081548 <__stack+0x3c0154c>
    144c:	2f 80 17 00 	.word 0x2f801700
    1450:	05 02 00 40 	l.jal 4081550 <__stack+0x3c01554>
    1454:	2f 8c 11 00 	.word 0x2f8c1100
    1458:	05 02 00 40 	l.jal 4081558 <__stack+0x3c0155c>
    145c:	2f 90 17 00 	.word 0x2f901700
    1460:	05 02 00 40 	l.jal 4081560 <__stack+0x3c01564>
    1464:	2f 94 16 00 	.word 0x2f941600
    1468:	05 02 00 40 	l.jal 4081568 <__stack+0x3c0156c>
    146c:	2f 9c 16 00 	.word 0x2f9c1600
    1470:	05 02 00 40 	l.jal 4081570 <__stack+0x3c01574>
    1474:	2f a0 12 00 	.word 0x2fa01200
    1478:	05 02 00 40 	l.jal 4081578 <__stack+0x3c0157c>
    147c:	2f a4 0f 00 	.word 0x2fa40f00
    1480:	05 02 00 40 	l.jal 4081580 <__stack+0x3c01584>
    1484:	2f a8 19 00 	.word 0x2fa81900
    1488:	05 02 00 40 	l.jal 4081588 <__stack+0x3c0158c>
    148c:	2f ac 15 00 	.word 0x2fac1500
    1490:	05 02 00 40 	l.jal 4081590 <__stack+0x3c01594>
    1494:	2f b4 15 00 	.word 0x2fb41500
    1498:	05 02 00 40 	l.jal 4081598 <__stack+0x3c0159c>
    149c:	2f bc 15 00 	.word 0x2fbc1500
    14a0:	05 02 00 40 	l.jal 40815a0 <__stack+0x3c015a4>
    14a4:	2f c4 15 00 	.word 0x2fc41500
    14a8:	05 02 00 40 	l.jal 40815a8 <__stack+0x3c015ac>
    14ac:	2f cc 15 00 	.word 0x2fcc1500
    14b0:	05 02 00 40 	l.jal 40815b0 <__stack+0x3c015b4>
    14b4:	2f d4 16 00 	.word 0x2fd41600
    14b8:	05 02 00 40 	l.jal 40815b8 <__stack+0x3c015bc>
    14bc:	2f dc 17 00 	.word 0x2fdc1700
    14c0:	05 02 00 40 	l.jal 40815c0 <__stack+0x3c015c4>
    14c4:	2f e8 03 c8 	.word 0x2fe803c8
    14c8:	04 01 00 05 	l.jal 414dc <__rom_size+0x27190>
    14cc:	02 00 40 30 	l.j f801158c <__stack+0xf7b91590>
    14d0:	04 19 00 05 	l.jal 6414e4 <__stack+0x1c14e8>
    14d4:	02 00 40 30 	l.j f8011594 <__stack+0xf7b91598>
    14d8:	08 15 00 05 	.word 0x08150005
    14dc:	02 00 40 30 	l.j f801159c <__stack+0xf7b915a0>
    14e0:	0c 18 00 05 	l.bnf 6014f4 <__stack+0x1814f8>
    14e4:	02 00 40 30 	l.j f80115a4 <__stack+0xf7b915a8>
    14e8:	10 0a 00 05 	l.bf 2814fc <__ram_length+0x2014fc>
    14ec:	02 00 40 30 	l.j f80115ac <__stack+0xf7b915b0>
    14f0:	14 1e 00 05 	.word 0x141e0005
    14f4:	02 00 40 30 	l.j f80115b4 <__stack+0xf7b915b8>
    14f8:	18 16 00 05 	l.movhi r0,0x5
    14fc:	02 00 40 30 	l.j f80115bc <__stack+0xf7b915c0>
    1500:	1c 13 00 05 	.word 0x1c130005
    1504:	02 00 40 30 	l.j f80115c4 <__stack+0xf7b915c8>
    1508:	20 16 00 05 	.word 0x20160005
    150c:	02 00 40 30 	l.j f80115cc <__stack+0xf7b915d0>
    1510:	28 17 00 05 	.word 0x28170005
    1514:	02 00 40 30 	l.j f80115d4 <__stack+0xf7b915d8>
    1518:	2c 13 00 05 	.word 0x2c130005
    151c:	02 00 40 30 	l.j f80115dc <__stack+0xf7b915e0>
    1520:	30 15 00 05 	.word 0x30150005
    1524:	02 00 40 30 	l.j f80115e4 <__stack+0xf7b915e8>
    1528:	38 11 00 05 	.word 0x38110005
    152c:	02 00 40 30 	l.j f80115ec <__stack+0xf7b915f0>
    1530:	44 1a 00 05 	l.jr r0
    1534:	02 00 40 30 	l.j f80115f4 <__stack+0xf7b915f8>
    1538:	4c 16 00 05 	l.maci r22,0x5
    153c:	02 00 40 30 	l.j f80115fc <__stack+0xf7b91600>
    1540:	5c 15 00 05 	.word 0x5c150005
    1544:	02 00 40 30 	l.j f8011604 <__stack+0xf7b91608>
    1548:	68 11 00 05 	.word 0x68110005
    154c:	02 00 40 30 	l.j f801160c <__stack+0xf7b91610>
    1550:	78 1b 00 05 	l.cust3 
    1554:	02 00 40 30 	l.j f8011614 <__stack+0xf7b91618>
    1558:	98 18 00 05 	l.lhs r0,0x5(r24)
    155c:	02 00 40 30 	l.j f801161c <__stack+0xf7b91620>
    1560:	9c 17 00 05 	l.addi r0,r23,0x5
    1564:	02 00 40 30 	l.j f8011624 <__stack+0xf7b91628>
    1568:	b0 01 00 05 	l.muli r0,r1,0x5
    156c:	02 00 40 30 	l.j f801162c <__stack+0xf7b91630>
    1570:	c0 16 00 05 	l.mtspr r22,r0,0x5
    1574:	02 00 40 30 	l.j f8011634 <__stack+0xf7b91638>
    1578:	cc 01 00 05 	.word 0xcc010005
    157c:	02 00 40 30 	l.j f801163c <__stack+0xf7b91640>
    1580:	e0 01 00 05 	l.xor r0,r1,r0
    1584:	02 00 40 30 	l.j f8011644 <__stack+0xf7b91648>
    1588:	e4 01 00 05 	l.sfeq r1,r0
    158c:	02 00 40 30 	l.j f801164c <__stack+0xf7b91650>
    1590:	f8 16 00 05 	l.cust7 
    1594:	02 00 40 31 	l.j f8011658 <__stack+0xf7b9165c>
    1598:	18 15 00 05 	.word 0x18150005
    159c:	02 00 40 31 	l.j f8011660 <__stack+0xf7b91664>
    15a0:	28 1a 00 05 	.word 0x281a0005
    15a4:	02 00 40 31 	l.j f8011668 <__stack+0xf7b9166c>
    15a8:	2c 11 00 05 	.word 0x2c110005
    15ac:	02 00 40 31 	l.j f8011670 <__stack+0xf7b91674>
    15b0:	30 17 00 05 	.word 0x30170005
    15b4:	02 00 40 31 	l.j f8011678 <__stack+0xf7b9167c>
    15b8:	34 11 00 05 	.word 0x34110005
    15bc:	02 00 40 31 	l.j f8011680 <__stack+0xf7b91684>
    15c0:	3c 04 10 03 	.word 0x3c041003
    15c4:	cd 0c 01 00 	.word 0xcd0c0100
    15c8:	05 02 00 40 	l.jal 40816c8 <__stack+0x3c016cc>
    15cc:	31 40 17 00 	.word 0x31401700
    15d0:	05 02 00 40 	l.jal 40816d0 <__stack+0x3c016d4>
    15d4:	31 44 11 00 	.word 0x31441100
    15d8:	05 02 00 40 	l.jal 40816d8 <__stack+0x3c016dc>
    15dc:	31 50 17 00 	.word 0x31501700
    15e0:	05 02 00 40 	l.jal 40816e0 <__stack+0x3c016e4>
    15e4:	31 54 11 00 	.word 0x31541100
    15e8:	05 02 00 40 	l.jal 40816e8 <__stack+0x3c016ec>
    15ec:	31 58 17 00 	.word 0x31581700
    15f0:	05 02 00 40 	l.jal 40816f0 <__stack+0x3c016f4>
    15f4:	31 68 11 00 	.word 0x31681100
    15f8:	05 02 00 40 	l.jal 40816f8 <__stack+0x3c016fc>
    15fc:	31 6c 17 00 	.word 0x316c1700
    1600:	05 02 00 40 	l.jal 4081700 <__stack+0x3c01704>
    1604:	31 80 16 00 	.word 0x31801600
    1608:	05 02 00 40 	l.jal 4081708 <__stack+0x3c0170c>
    160c:	31 84 13 00 	.word 0x31841300
    1610:	05 02 00 40 	l.jal 4081710 <__stack+0x3c01714>
    1614:	31 88 15 00 	.word 0x31881500
    1618:	05 02 00 40 	l.jal 4081718 <__stack+0x3c0171c>
    161c:	31 8c 13 00 	.word 0x318c1300
    1620:	05 02 00 40 	l.jal 4081720 <__stack+0x3c01724>
    1624:	31 90 18 00 	.word 0x31901800
    1628:	05 02 00 40 	l.jal 4081728 <__stack+0x3c0172c>
    162c:	31 a8 04 0f 	.word 0x31a8040f
    1630:	03 b6 6c 01 	l.j fed9c634 <__stack+0xfe91c638>
    1634:	00 05 02 00 	l.j 141e34 <__ram_length+0xc1e34>
    1638:	40 31 b8 17 	.word 0x4031b817
    163c:	00 05 02 00 	l.j 141e3c <__ram_length+0xc1e3c>
    1640:	40 31 bc 17 	.word 0x4031bc17
    1644:	00 05 02 00 	l.j 141e44 <__ram_length+0xc1e44>
    1648:	40 31 c0 0e 	.word 0x4031c00e
    164c:	00 05 02 00 	l.j 141e4c <__ram_length+0xc1e4c>
    1650:	40 31 c4 1a 	.word 0x4031c41a
    1654:	00 05 02 00 	l.j 141e54 <__ram_length+0xc1e54>
    1658:	40 31 cc 15 	.word 0x4031cc15
    165c:	00 05 02 00 	l.j 141e5c <__ram_length+0xc1e5c>
    1660:	40 31 d4 12 	.word 0x4031d412
    1664:	00 05 02 00 	l.j 141e64 <__ram_length+0xc1e64>
    1668:	40 31 d8 16 	.word 0x4031d816
    166c:	00 05 02 00 	l.j 141e6c <__ram_length+0xc1e6c>
    1670:	40 31 dc 15 	.word 0x4031dc15
    1674:	00 05 02 00 	l.j 141e74 <__ram_length+0xc1e74>
    1678:	40 31 e8 15 	.word 0x4031e815
    167c:	00 05 02 00 	l.j 141e7c <__ram_length+0xc1e7c>
    1680:	40 31 ec 13 	.word 0x4031ec13
    1684:	00 05 02 00 	l.j 141e84 <__ram_length+0xc1e84>
    1688:	40 31 f0 15 	.word 0x4031f015
    168c:	00 05 02 00 	l.j 141e8c <__ram_length+0xc1e8c>
    1690:	40 31 f4 13 	.word 0x4031f413
    1694:	00 05 02 00 	l.j 141e94 <__ram_length+0xc1e94>
    1698:	40 31 f8 01 	.word 0x4031f801
    169c:	00 05 02 00 	l.j 141e9c <__ram_length+0xc1e9c>
    16a0:	40 32 04 16 	.word 0x40320416
    16a4:	00 05 02 00 	l.j 141ea4 <__ram_length+0xc1ea4>
    16a8:	40 32 0c 17 	.word 0x40320c17
    16ac:	00 05 02 00 	l.j 141eac <__ram_length+0xc1eac>
    16b0:	40 32 20 04 	.word 0x40322004
    16b4:	11 03 f4 03 	l.bf 40fe6c0 <__stack+0x3c7e6c4>
    16b8:	01 00 05 02 	l.j 4002ac0 <__stack+0x3b82ac4>
    16bc:	00 40 32 20 	l.j 100df3c <__stack+0xb8df40>
    16c0:	18 00 05 02 	l.movhi r0,0x502
    16c4:	00 40 32 30 	l.j 100df84 <__stack+0xb8df88>
    16c8:	17 00 05 02 	.word 0x17000502
    16cc:	00 40 32 34 	l.j 100df9c <__stack+0xb8dfa0>
    16d0:	13 00 05 02 	l.bf fc002ad8 <__stack+0xfbb82adc>
    16d4:	00 40 32 38 	l.j 100dfb4 <__stack+0xb8dfb8>
    16d8:	15 00 05 02 	l.nop 0x502
    16dc:	00 40 32 44 	l.j 100dfec <__stack+0xb8dff0>
    16e0:	15 00 05 02 	l.nop 0x502
    16e4:	00 40 32 48 	l.j 100e004 <__stack+0xb8e008>
    16e8:	15 00 05 02 	l.nop 0x502
    16ec:	00 40 32 58 	l.j 100e04c <__stack+0xb8e050>
    16f0:	15 00 05 02 	l.nop 0x502
    16f4:	00 40 32 5c 	l.j 100e064 <__stack+0xb8e068>
    16f8:	0e 00 05 02 	l.bnf f8002b00 <__stack+0xf7b82b04>
    16fc:	00 40 32 70 	l.j 100e0bc <__stack+0xb8e0c0>
    1700:	1b 00 05 02 	l.movhi r24,0x502
    1704:	00 40 32 80 	l.j 100e104 <__stack+0xb8e108>
    1708:	17 00 05 02 	.word 0x17000502
    170c:	00 40 32 88 	l.j 100e12c <__stack+0xb8e130>
    1710:	03 a4 7f 01 	l.j fe921314 <__stack+0xfe4a1318>
    1714:	00 05 02 00 	l.j 141f14 <__ram_length+0xc1f14>
    1718:	40 32 8c 19 	.word 0x40328c19
    171c:	00 05 02 00 	l.j 141f1c <__ram_length+0xc1f1c>
    1720:	40 32 90 0f 	.word 0x4032900f
    1724:	00 05 02 00 	l.j 141f24 <__ram_length+0xc1f24>
    1728:	40 32 94 19 	.word 0x40329419
    172c:	00 05 02 00 	l.j 141f2c <__ram_length+0xc1f2c>
    1730:	40 32 9c 0f 	.word 0x40329c0f
    1734:	00 05 02 00 	l.j 141f34 <__ram_length+0xc1f34>
    1738:	40 32 a0 19 	.word 0x4032a019
    173c:	00 05 02 00 	l.j 141f3c <__ram_length+0xc1f3c>
    1740:	40 32 a4 15 	.word 0x4032a415
    1744:	00 05 02 00 	l.j 141f44 <__ram_length+0xc1f44>
    1748:	40 32 b0 0e 	.word 0x4032b00e
    174c:	00 05 02 00 	l.j 141f4c <__ram_length+0xc1f4c>
    1750:	40 32 b8 1a 	.word 0x4032b81a
    1754:	00 05 02 00 	l.j 141f54 <__ram_length+0xc1f54>
    1758:	40 32 bc 0e 	.word 0x4032bc0e
    175c:	00 05 02 00 	l.j 141f5c <__ram_length+0xc1f5c>
    1760:	40 32 c0 1a 	.word 0x4032c01a
    1764:	00 05 02 00 	l.j 141f64 <__ram_length+0xc1f64>
    1768:	40 32 c4 16 	.word 0x4032c416
    176c:	00 05 02 00 	l.j 141f6c <__ram_length+0xc1f6c>
    1770:	40 32 c8 0c 	.word 0x4032c80c
    1774:	00 05 02 00 	l.j 141f74 <__ram_length+0xc1f74>
    1778:	40 32 cc 1c 	.word 0x4032cc1c
    177c:	00 05 02 00 	l.j 141f7c <__ram_length+0xc1f7c>
    1780:	40 32 d0 15 	.word 0x4032d015
    1784:	00 05 02 00 	l.j 141f84 <__ram_length+0xc1f84>
    1788:	40 32 d8 16 	.word 0x4032d816
    178c:	00 05 02 00 	l.j 141f8c <__ram_length+0xc1f8c>
    1790:	40 32 dc 15 	.word 0x4032dc15
    1794:	00 05 02 00 	l.j 141f94 <__ram_length+0xc1f94>
    1798:	40 32 e4 15 	.word 0x4032e415
    179c:	00 05 02 00 	l.j 141f9c <__ram_length+0xc1f9c>
    17a0:	40 32 ec 16 	.word 0x4032ec16
    17a4:	00 05 02 00 	l.j 141fa4 <__ram_length+0xc1fa4>
    17a8:	40 32 f4 15 	.word 0x4032f415
    17ac:	00 05 02 00 	l.j 141fac <__ram_length+0xc1fac>
    17b0:	40 32 fc 15 	.word 0x4032fc15
    17b4:	00 05 02 00 	l.j 141fb4 <__ram_length+0xc1fb4>
    17b8:	40 33 04 16 	.word 0x40330416
    17bc:	00 05 02 00 	l.j 141fbc <__ram_length+0xc1fbc>
    17c0:	40 33 0c 15 	.word 0x40330c15
    17c4:	00 05 02 00 	l.j 141fc4 <__ram_length+0xc1fc4>
    17c8:	40 33 14 15 	.word 0x40331415
    17cc:	00 05 02 00 	l.j 141fcc <__ram_length+0xc1fcc>
    17d0:	40 33 1c 16 	.word 0x40331c16
    17d4:	00 05 02 00 	l.j 141fd4 <__ram_length+0xc1fd4>
    17d8:	40 33 20 15 	.word 0x40332015
    17dc:	00 05 02 00 	l.j 141fdc <__ram_length+0xc1fdc>
    17e0:	40 33 28 15 	.word 0x40332815
    17e4:	00 05 02 00 	l.j 141fe4 <__ram_length+0xc1fe4>
    17e8:	40 33 30 16 	.word 0x40333016
    17ec:	00 05 02 00 	l.j 141fec <__ram_length+0xc1fec>
    17f0:	40 33 38 15 	.word 0x40333815
    17f4:	00 05 02 00 	l.j 141ff4 <__ram_length+0xc1ff4>
    17f8:	40 33 44 15 	.word 0x40334415
    17fc:	00 05 02 00 	l.j 141ffc <__ram_length+0xc1ffc>
    1800:	40 33 4c 16 	.word 0x40334c16
    1804:	00 05 02 00 	l.j 142004 <__ram_length+0xc2004>
    1808:	40 33 50 16 	.word 0x40335016
    180c:	00 05 02 00 	l.j 14200c <__ram_length+0xc200c>
    1810:	40 33 5c 15 	.word 0x40335c15
    1814:	00 05 02 00 	l.j 142014 <__ram_length+0xc2014>
    1818:	40 33 68 01 	.word 0x40336801
    181c:	00 05 02 00 	l.j 14201c <__ram_length+0xc201c>
    1820:	40 33 78 01 	.word 0x40337801
    1824:	00 05 02 00 	l.j 142024 <__ram_length+0xc2024>
    1828:	40 33 80 01 	.word 0x40338001
    182c:	00 05 02 00 	l.j 14202c <__ram_length+0xc202c>
    1830:	40 33 98 19 	.word 0x40339819
    1834:	00 05 02 00 	l.j 142034 <__ram_length+0xc2034>
    1838:	40 33 b4 04 	.word 0x4033b404
    183c:	12 03 c8 7c 	l.bf f80f3a2c <__stack+0xf7c73a30>
    1840:	01 00 05 02 	l.j 4002c48 <__stack+0x3b82c4c>
    1844:	00 40 33 b4 	l.j 100e714 <__stack+0xb8e718>
    1848:	18 00 05 02 	l.movhi r0,0x502
    184c:	00 40 33 b8 	l.j 100e72c <__stack+0xb8e730>
    1850:	15 00 05 02 	l.nop 0x502
    1854:	00 40 33 bc 	l.j 100e744 <__stack+0xb8e748>
    1858:	13 00 05 02 	l.bf fc002c60 <__stack+0xfbb82c64>
    185c:	00 40 33 c0 	l.j 100e75c <__stack+0xb8e760>
    1860:	15 00 05 02 	l.nop 0x502
    1864:	00 40 33 c4 	l.j 100e774 <__stack+0xb8e778>
    1868:	13 00 05 02 	l.bf fc002c70 <__stack+0xfbb82c74>
    186c:	00 40 33 c8 	l.j 100e78c <__stack+0xb8e790>
    1870:	15 00 05 02 	l.nop 0x502
    1874:	00 40 33 cc 	l.j 100e7a4 <__stack+0xb8e7a8>
    1878:	15 00 05 02 	l.nop 0x502
    187c:	00 40 33 d0 	l.j 100e7bc <__stack+0xb8e7c0>
    1880:	13 00 05 02 	l.bf fc002c88 <__stack+0xfbb82c8c>
    1884:	00 40 33 d4 	l.j 100e7d4 <__stack+0xb8e7d8>
    1888:	15 00 05 02 	l.nop 0x502
    188c:	00 40 33 d8 	l.j 100e7ec <__stack+0xb8e7f0>
    1890:	13 00 05 02 	l.bf fc002c98 <__stack+0xfbb82c9c>
    1894:	00 40 33 dc 	l.j 100e804 <__stack+0xb8e808>
    1898:	15 00 05 02 	l.nop 0x502
    189c:	00 40 33 e0 	l.j 100e81c <__stack+0xb8e820>
    18a0:	13 00 05 02 	l.bf fc002ca8 <__stack+0xfbb82cac>
    18a4:	00 40 33 e4 	l.j 100e834 <__stack+0xb8e838>
    18a8:	15 00 05 02 	l.nop 0x502
    18ac:	00 40 33 e8 	l.j 100e84c <__stack+0xb8e850>
    18b0:	19 00 05 02 	l.movhi r8,0x502
    18b4:	00 40 33 f0 	l.j 100e874 <__stack+0xb8e878>
    18b8:	64 00 05 02 	.word 0x64000502
    18bc:	00 40 33 f0 	l.j 100e87c <__stack+0xb8e880>
    18c0:	18 00 05 02 	l.movhi r0,0x502
    18c4:	00 40 33 f4 	l.j 100e894 <__stack+0xb8e898>
    18c8:	10 00 05 02 	l.bf 2cd0 <__rom_size-0x1767c>
    18cc:	00 40 33 f8 	l.j 100e8ac <__stack+0xb8e8b0>
    18d0:	18 00 05 02 	l.movhi r0,0x502
    18d4:	00 40 33 fc 	l.j 100e8c4 <__stack+0xb8e8c8>
    18d8:	10 00 05 02 	l.bf 2ce0 <__rom_size-0x1766c>
    18dc:	00 40 34 00 	l.j 100e8dc <__stack+0xb8e8e0>
    18e0:	18 00 05 02 	l.movhi r0,0x502
    18e4:	00 40 34 04 	l.j 100e8f4 <__stack+0xb8e8f8>
    18e8:	18 00 05 02 	l.movhi r0,0x502
    18ec:	00 40 34 08 	l.j 100e90c <__stack+0xb8e910>
    18f0:	11 00 05 02 	l.bf 4002cf8 <__stack+0x3b82cfc>
    18f4:	00 40 34 10 	l.j 100e934 <__stack+0xb8e938>
    18f8:	13 00 05 02 	l.bf fc002d00 <__stack+0xfbb82d04>
    18fc:	00 40 34 14 	l.j 100e94c <__stack+0xb8e950>
    1900:	1b 00 05 02 	l.movhi r24,0x502
    1904:	00 40 34 18 	l.j 100e964 <__stack+0xb8e968>
    1908:	15 00 05 02 	l.nop 0x502
    190c:	00 40 34 50 	l.j 100ea4c <__stack+0xb8ea50>
    1910:	16 00 05 02 	.word 0x16000502
    1914:	00 40 34 60 	l.j 100ea94 <__stack+0xb8ea98>
    1918:	03 71 01 00 	l.j fdc41d18 <__stack+0xfd7c1d1c>
    191c:	05 02 00 40 	l.jal 4081a1c <__stack+0x3c01a20>
    1920:	34 64 26 00 	.word 0x34642600
    1924:	05 02 00 40 	l.jal 4081a24 <__stack+0x3c01a28>
    1928:	34 68 15 00 	.word 0x34681500
    192c:	05 02 00 40 	l.jal 4081a2c <__stack+0x3c01a30>
    1930:	34 74 17 00 	.word 0x34741700
    1934:	05 02 00 40 	l.jal 4081a34 <__stack+0x3c01a38>
    1938:	34 88 13 00 	.word 0x34881300
    193c:	05 02 00 40 	l.jal 4081a3c <__stack+0x3c01a40>
    1940:	34 90 17 00 	.word 0x34901700
    1944:	05 02 00 40 	l.jal 4081a44 <__stack+0x3c01a48>
    1948:	34 98 16 00 	.word 0x34981600
    194c:	05 02 00 40 	l.jal 4081a4c <__stack+0x3c01a50>
    1950:	34 a8 12 00 	.word 0x34a81200
    1954:	05 02 00 40 	l.jal 4081a54 <__stack+0x3c01a58>
    1958:	34 ac 19 00 	.word 0x34ac1900
    195c:	05 02 00 40 	l.jal 4081a5c <__stack+0x3c01a60>
    1960:	34 b8 03 73 	.word 0x34b80373
    1964:	01 00 05 02 	l.j 4002d6c <__stack+0x3b82d70>
    1968:	00 40 34 c4 	l.j 100ec78 <__stack+0xb8ec7c>
    196c:	03 75 01 00 	l.j fdd41d6c <__stack+0xfd8c1d70>
    1970:	05 02 00 40 	l.jal 4081a70 <__stack+0x3c01a74>
    1974:	34 cc 0f 00 	.word 0x34cc0f00
    1978:	05 02 00 40 	l.jal 4081a78 <__stack+0x3c01a7c>
    197c:	34 d4 3a 00 	.word 0x34d43a00
    1980:	05 02 00 40 	l.jal 4081a80 <__stack+0x3c01a84>
    1984:	34 d8 12 00 	.word 0x34d81200
    1988:	05 02 00 40 	l.jal 4081a88 <__stack+0x3c01a8c>
    198c:	34 dc 16 00 	.word 0x34dc1600
    1990:	05 02 00 40 	l.jal 4081a90 <__stack+0x3c01a94>
    1994:	34 e0 12 00 	.word 0x34e01200
    1998:	05 02 00 40 	l.jal 4081a98 <__stack+0x3c01a9c>
    199c:	34 ec 1a 00 	.word 0x34ec1a00
    19a0:	05 02 00 40 	l.jal 4081aa0 <__stack+0x3c01aa4>
    19a4:	34 f4 03 56 	.word 0x34f40356
    19a8:	01 00 05 02 	l.j 4002db0 <__stack+0x3b82db4>
    19ac:	00 40 34 f8 	l.j 100ed8c <__stack+0xb8ed90>
    19b0:	3e 00 05 02 	.word 0x3e000502
    19b4:	00 40 35 04 	l.j 100edc4 <__stack+0xb8edc8>
    19b8:	15 00 05 02 	l.nop 0x502
    19bc:	00 40 35 10 	l.j 100edfc <__stack+0xb8ee00>
    19c0:	16 00 05 02 	.word 0x16000502
    19c4:	00 40 35 14 	l.j 100ee14 <__stack+0xb8ee18>
    19c8:	12 00 05 02 	l.bf f8002dd0 <__stack+0xf7b82dd4>
    19cc:	00 40 35 18 	l.j 100ee2c <__stack+0xb8ee30>
    19d0:	16 00 05 02 	.word 0x16000502
    19d4:	00 40 35 1c 	l.j 100ee44 <__stack+0xb8ee48>
    19d8:	12 00 05 02 	l.bf f8002de0 <__stack+0xf7b82de4>
    19dc:	00 40 35 20 	l.j 100ee5c <__stack+0xb8ee60>
    19e0:	01 00 05 02 	l.j 4002de8 <__stack+0x3b82dec>
    19e4:	00 40 35 34 	l.j 100eeb4 <__stack+0xb8eeb8>
    19e8:	03 55 01 00 	l.j fd541de8 <__stack+0xfd0c1dec>
    19ec:	05 02 00 40 	l.jal 4081aec <__stack+0x3c01af0>
    19f0:	35 3c 44 00 	.word 0x353c4400
    19f4:	05 02 00 40 	l.jal 4081af4 <__stack+0x3c01af8>
    19f8:	35 40 13 00 	.word 0x35401300
    19fc:	05 02 00 40 	l.jal 4081afc <__stack+0x3c01b00>
    1a00:	35 44 15 00 	.word 0x35441500
    1a04:	05 02 00 40 	l.jal 4081b04 <__stack+0x3c01b08>
    1a08:	35 48 13 00 	.word 0x35481300
    1a0c:	05 02 00 40 	l.jal 4081b0c <__stack+0x3c01b10>
    1a10:	35 54 01 00 	.word 0x35540100
    1a14:	05 02 00 40 	l.jal 4081b14 <__stack+0x3c01b18>
    1a18:	35 58 03 51 	.word 0x35580351
    1a1c:	01 00 05 02 	l.j 4002e24 <__stack+0x3b82e28>
    1a20:	00 40 35 60 	l.j 100efa0 <__stack+0xb8efa4>
    1a24:	4a 00 05 02 	l.jalr r0
    1a28:	00 40 35 64 	l.j 100efb8 <__stack+0xb8efbc>
    1a2c:	03 bb 7f 01 	l.j feee1630 <__stack+0xfea61634>
    1a30:	00 05 02 00 	l.j 142230 <__ram_length+0xc2230>
    1a34:	40 35 68 59 	.word 0x40356859
    1a38:	00 05 02 00 	l.j 142238 <__ram_length+0xc2238>
    1a3c:	40 35 74 03 	.word 0x40357403
    1a40:	4a 01 00 05 	l.jalr r0
    1a44:	02 00 40 35 	l.j f8011b18 <__stack+0xf7b91b1c>
    1a48:	78 0a 00 05 	l.cust3 
    1a4c:	02 00 40 35 	l.j f8011b20 <__stack+0xf7b91b24>
    1a50:	7c 15 00 05 	l.cust4 
    1a54:	02 00 40 35 	l.j f8011b28 <__stack+0xf7b91b2c>
    1a58:	84 11 00 05 	l.lwz r0,0x5(r17)
    1a5c:	02 00 40 35 	l.j f8011b30 <__stack+0xf7b91b34>
    1a60:	88 17 00 05 	l.lws r0,0x5(r23)
    1a64:	02 00 40 35 	l.j f8011b38 <__stack+0xf7b91b3c>
    1a68:	8c 11 00 05 	l.lbz r0,0x5(r17)
    1a6c:	02 00 40 35 	l.j f8011b40 <__stack+0xf7b91b44>
    1a70:	98 20 00 05 	l.lhs r1,0x5(r0)
    1a74:	02 00 40 35 	l.j f8011b48 <__stack+0xf7b91b4c>
    1a78:	9c 03 71 01 	l.addi r0,r3,0x7101
    1a7c:	00 05 02 00 	l.j 14227c <__ram_length+0xc227c>
    1a80:	40 35 ac 52 	.word 0x4035ac52
    1a84:	00 05 02 00 	l.j 142284 <__ram_length+0xc2284>
    1a88:	40 35 b8 03 	.word 0x4035b803
    1a8c:	51 01 00 05 	.word 0x51010005
    1a90:	02 00 40 35 	l.j f8011b64 <__stack+0xf7b91b68>
    1a94:	bc 03 71 01 	l.sfeqi r3,0x7101
    1a98:	00 05 02 00 	l.j 142298 <__ram_length+0xc2298>
    1a9c:	40 35 c0 23 	.word 0x4035c023
    1aa0:	00 05 02 00 	l.j 1422a0 <__ram_length+0xc22a0>
    1aa4:	40 35 c8 4d 	.word 0x4035c84d
    1aa8:	00 05 02 00 	l.j 1422a8 <__ram_length+0xc22a8>
    1aac:	40 35 d4 12 	.word 0x4035d412
    1ab0:	00 05 02 00 	l.j 1422b0 <__ram_length+0xc22b0>
    1ab4:	40 35 e0 10 	.word 0x4035e010
    1ab8:	00 05 02 00 	l.j 1422b8 <__ram_length+0xc22b8>
    1abc:	40 35 f0 1f 	.word 0x4035f01f
    1ac0:	00 05 02 00 	l.j 1422c0 <__ram_length+0xc22c0>
    1ac4:	40 35 fc 23 	.word 0x4035fc23
    1ac8:	00 05 02 00 	l.j 1422c8 <__ram_length+0xc22c8>
    1acc:	40 35 fc 1c 	.word 0x4035fc1c
    1ad0:	00 05 02 00 	l.j 1422d0 <__ram_length+0xc22d0>
    1ad4:	40 36 00 0c 	.word 0x4036000c
    1ad8:	00 05 02 00 	l.j 1422d8 <__ram_length+0xc22d8>
    1adc:	40 36 28 1c 	.word 0x4036281c
    1ae0:	00 05 02 00 	l.j 1422e0 <__ram_length+0xc22e0>
    1ae4:	40 36 2c 0c 	.word 0x40362c0c
    1ae8:	00 05 02 00 	l.j 1422e8 <__ram_length+0xc22e8>
    1aec:	40 36 30 1c 	.word 0x4036301c
    1af0:	00 05 02 00 	l.j 1422f0 <__ram_length+0xc22f0>
    1af4:	40 36 34 15 	.word 0x40363415
    1af8:	00 05 02 00 	l.j 1422f8 <__ram_length+0xc22f8>
    1afc:	40 36 40 01 	.word 0x40364001
    1b00:	00 05 02 00 	l.j 142300 <__ram_length+0xc2300>
    1b04:	40 36 50 15 	.word 0x40365015
    1b08:	00 05 02 00 	l.j 142308 <__ram_length+0xc2308>
    1b0c:	40 36 54 16 	.word 0x40365416
    1b10:	00 05 02 00 	l.j 142310 <__ram_length+0xc2310>
    1b14:	40 36 60 16 	.word 0x40366016
    1b18:	00 05 02 00 	l.j 142318 <__ram_length+0xc2318>
    1b1c:	40 36 64 15 	.word 0x40366415
    1b20:	00 05 02 00 	l.j 142320 <__ram_length+0xc2320>
    1b24:	40 36 68 1a 	.word 0x4036681a
    1b28:	00 05 02 00 	l.j 142328 <__ram_length+0xc2328>
    1b2c:	40 36 74 1b 	.word 0x4036741b
    1b30:	00 05 02 00 	l.j 142330 <__ram_length+0xc2330>
    1b34:	40 36 78 0d 	.word 0x4036780d
    1b38:	00 05 02 00 	l.j 142338 <__ram_length+0xc2338>
    1b3c:	40 36 7c 1b 	.word 0x40367c1b
    1b40:	00 05 02 00 	l.j 142340 <__ram_length+0xc2340>
    1b44:	40 36 80 15 	.word 0x40368015
    1b48:	00 05 02 00 	l.j 142348 <__ram_length+0xc2348>
    1b4c:	40 36 84 13 	.word 0x40368413
    1b50:	00 05 02 00 	l.j 142350 <__ram_length+0xc2350>
    1b54:	40 36 88 17 	.word 0x40368817
    1b58:	00 05 02 00 	l.j 142358 <__ram_length+0xc2358>
    1b5c:	40 36 8c 11 	.word 0x40368c11
    1b60:	00 05 02 00 	l.j 142360 <__ram_length+0xc2360>
    1b64:	40 36 90 15 	.word 0x40369015
    1b68:	00 05 02 00 	l.j 142368 <__ram_length+0xc2368>
    1b6c:	40 36 b0 16 	.word 0x4036b016
    1b70:	00 05 02 00 	l.j 142370 <__ram_length+0xc2370>
    1b74:	40 36 b8 15 	.word 0x4036b815
    1b78:	00 05 02 00 	l.j 142378 <__ram_length+0xc2378>
    1b7c:	40 36 bc 32 	.word 0x4036bc32
    1b80:	00 05 02 00 	l.j 142380 <__ram_length+0xc2380>
    1b84:	40 36 c0 03 	.word 0x4036c003
    1b88:	6b 01 00 05 	.word 0x6b010005
    1b8c:	02 00 40 36 	l.j f8011c64 <__stack+0xf7b91c68>
    1b90:	c4 29 00 05 	.word 0xc4290005
    1b94:	02 00 40 36 	l.j f8011c6c <__stack+0xf7b91c70>
    1b98:	c8 32 00 05 	lf.ftoi.s r1,r18
    1b9c:	02 00 40 36 	l.j f8011c74 <__stack+0xf7b91c78>
    1ba0:	cc 1b 00 05 	.word 0xcc1b0005
    1ba4:	02 00 40 36 	l.j f8011c7c <__stack+0xf7b91c80>
    1ba8:	d0 03 bf 7f 	l.sd 0x77f(r3),r23
    1bac:	01 00 05 02 	l.j 4002fb4 <__stack+0x3b82fb8>
    1bb0:	00 40 36 d4 	l.j 100f700 <__stack+0xb8f704>
    1bb4:	1b 00 05 02 	l.movhi r24,0x502
    1bb8:	00 40 36 d8 	l.j 100f718 <__stack+0xb8f71c>
    1bbc:	4e 00 05 02 	l.maci r0,0x502
    1bc0:	00 40 36 dc 	l.j 100f730 <__stack+0xb8f734>
    1bc4:	03 5c 01 00 	l.j fd701fc4 <__stack+0xfd281fc8>
    1bc8:	05 02 00 40 	l.jal 4081cc8 <__stack+0x3c01ccc>
    1bcc:	36 e4 15 00 	.word 0x36e41500
    1bd0:	05 02 00 40 	l.jal 4081cd0 <__stack+0x3c01cd4>
    1bd4:	36 ec 15 00 	.word 0x36ec1500
    1bd8:	05 02 00 40 	l.jal 4081cd8 <__stack+0x3c01cdc>
    1bdc:	36 f0 15 00 	.word 0x36f01500
    1be0:	05 02 00 40 	l.jal 4081ce0 <__stack+0x3c01ce4>
    1be4:	37 00 15 00 	.word 0x37001500
    1be8:	05 02 00 40 	l.jal 4081ce8 <__stack+0x3c01cec>
    1bec:	37 08 03 63 	.word 0x37080363
    1bf0:	01 00 05 02 	l.j 4002ff8 <__stack+0x3b82ffc>
    1bf4:	00 40 37 14 	l.j 100f844 <__stack+0xb8f848>
    1bf8:	16 00 05 02 	.word 0x16000502
    1bfc:	00 40 37 18 	l.j 100f85c <__stack+0xb8f860>
    1c00:	15 00 05 02 	l.nop 0x502
    1c04:	00 40 37 1c 	l.j 100f874 <__stack+0xb8f878>
    1c08:	13 00 05 02 	l.bf fc003010 <__stack+0xfbb83014>
    1c0c:	00 40 37 30 	l.j 100f8cc <__stack+0xb8f8d0>
    1c10:	15 00 05 02 	l.nop 0x502
    1c14:	00 40 37 34 	l.j 100f8e4 <__stack+0xb8f8e8>
    1c18:	15 00 05 02 	l.nop 0x502
    1c1c:	00 40 37 38 	l.j 100f8fc <__stack+0xb8f900>
    1c20:	15 00 05 02 	l.nop 0x502
    1c24:	00 40 37 44 	l.j 100f934 <__stack+0xb8f938>
    1c28:	13 00 05 02 	l.bf fc003030 <__stack+0xfbb83034>
    1c2c:	00 40 37 48 	l.j 100f94c <__stack+0xb8f950>
    1c30:	15 00 05 02 	l.nop 0x502
    1c34:	00 40 37 64 	l.j 100f9c4 <__stack+0xb8f9c8>
    1c38:	15 00 05 02 	l.nop 0x502
    1c3c:	00 40 37 6c 	l.j 100f9ec <__stack+0xb8f9f0>
    1c40:	13 00 05 02 	l.bf fc003048 <__stack+0xfbb8304c>
    1c44:	00 40 37 70 	l.j 100fa04 <__stack+0xb8fa08>
    1c48:	15 00 05 02 	l.nop 0x502
    1c4c:	00 40 37 90 	l.j 100fa8c <__stack+0xb8fa90>
    1c50:	15 00 05 02 	l.nop 0x502
    1c54:	00 40 37 98 	l.j 100fab4 <__stack+0xb8fab8>
    1c58:	13 00 05 02 	l.bf fc003060 <__stack+0xfbb83064>
    1c5c:	00 40 37 9c 	l.j 100facc <__stack+0xb8fad0>
    1c60:	15 00 05 02 	l.nop 0x502
    1c64:	00 40 37 bc 	l.j 100fb54 <__stack+0xb8fb58>
    1c68:	15 00 05 02 	l.nop 0x502
    1c6c:	00 40 37 c4 	l.j 100fb7c <__stack+0xb8fb80>
    1c70:	13 00 05 02 	l.bf fc003078 <__stack+0xfbb8307c>
    1c74:	00 40 37 c8 	l.j 100fb94 <__stack+0xb8fb98>
    1c78:	15 00 05 02 	l.nop 0x502
    1c7c:	00 40 37 e8 	l.j 100fc1c <__stack+0xb8fc20>
    1c80:	15 00 05 02 	l.nop 0x502
    1c84:	00 40 37 f0 	l.j 100fc44 <__stack+0xb8fc48>
    1c88:	13 00 05 02 	l.bf fc003090 <__stack+0xfbb83094>
    1c8c:	00 40 37 f4 	l.j 100fc5c <__stack+0xb8fc60>
    1c90:	15 00 05 02 	l.nop 0x502
    1c94:	00 40 38 14 	l.j 100fce4 <__stack+0xb8fce8>
    1c98:	15 00 05 02 	l.nop 0x502
    1c9c:	00 40 38 1c 	l.j 100fd0c <__stack+0xb8fd10>
    1ca0:	13 00 05 02 	l.bf fc0030a8 <__stack+0xfbb830ac>
    1ca4:	00 40 38 20 	l.j 100fd24 <__stack+0xb8fd28>
    1ca8:	15 00 05 02 	l.nop 0x502
    1cac:	00 40 38 40 	l.j 100fdac <__stack+0xb8fdb0>
    1cb0:	15 00 05 02 	l.nop 0x502
    1cb4:	00 40 38 4c 	l.j 100fde4 <__stack+0xb8fde8>
    1cb8:	13 00 05 02 	l.bf fc0030c0 <__stack+0xfbb830c4>
    1cbc:	00 40 38 50 	l.j 100fdfc <__stack+0xb8fe00>
    1cc0:	15 00 05 02 	l.nop 0x502
    1cc4:	00 40 38 6c 	l.j 100fe74 <__stack+0xb8fe78>
    1cc8:	15 00 05 02 	l.nop 0x502
    1ccc:	00 40 38 74 	l.j 100fe9c <__stack+0xb8fea0>
    1cd0:	13 00 05 02 	l.bf fc0030d8 <__stack+0xfbb830dc>
    1cd4:	00 40 38 78 	l.j 100feb4 <__stack+0xb8feb8>
    1cd8:	15 00 05 02 	l.nop 0x502
    1cdc:	00 40 38 98 	l.j 100ff3c <__stack+0xb8ff40>
    1ce0:	15 00 05 02 	l.nop 0x502
    1ce4:	00 40 38 a0 	l.j 100ff64 <__stack+0xb8ff68>
    1ce8:	15 00 05 02 	l.nop 0x502
    1cec:	00 40 38 a8 	l.j 100ff8c <__stack+0xb8ff90>
    1cf0:	15 00 05 02 	l.nop 0x502
    1cf4:	00 40 38 b0 	l.j 100ffb4 <__stack+0xb8ffb8>
    1cf8:	15 00 05 02 	l.nop 0x502
    1cfc:	00 40 38 b4 	l.j 100ffcc <__stack+0xb8ffd0>
    1d00:	15 00 05 02 	l.nop 0x502
    1d04:	00 40 38 b8 	l.j 100ffe4 <__stack+0xb8ffe8>
    1d08:	13 00 05 02 	l.bf fc003110 <__stack+0xfbb83114>
    1d0c:	00 40 38 bc 	l.j 100fffc <__stack+0xb90000>
    1d10:	17 00 05 02 	.word 0x17000502
    1d14:	00 40 38 c8 	l.j 1010034 <__stack+0xb90038>
    1d18:	01 00 05 02 	l.j 4003120 <__stack+0x3b83124>
    1d1c:	00 40 38 d4 	l.j 101006c <__stack+0xb90070>
    1d20:	17 00 05 02 	.word 0x17000502
    1d24:	00 40 38 d8 	l.j 1010084 <__stack+0xb90088>
    1d28:	13 00 05 02 	l.bf fc003130 <__stack+0xfbb83134>
    1d2c:	00 40 38 dc 	l.j 101009c <__stack+0xb900a0>
    1d30:	22 00 05 02 	.word 0x22000502
    1d34:	00 40 38 e0 	l.j 10100b4 <__stack+0xb900b8>
    1d38:	03 72 01 00 	l.j fdc82138 <__stack+0xfd80213c>
    1d3c:	05 02 00 40 	l.jal 4081e3c <__stack+0x3c01e40>
    1d40:	38 e4 15 00 	.word 0x38e41500
    1d44:	05 02 00 40 	l.jal 4081e44 <__stack+0x3c01e48>
    1d48:	38 e8 21 00 	.word 0x38e82100
    1d4c:	05 02 00 40 	l.jal 4081e4c <__stack+0x3c01e50>
    1d50:	38 ec 03 73 	.word 0x38ec0373
    1d54:	01 00 05 02 	l.j 400315c <__stack+0x3b83160>
    1d58:	00 40 38 f0 	l.j 1010118 <__stack+0xb9011c>
    1d5c:	15 00 05 02 	l.nop 0x502
    1d60:	00 40 38 f4 	l.j 1010130 <__stack+0xb90134>
    1d64:	16 00 05 02 	.word 0x16000502
    1d68:	00 40 38 f8 	l.j 1010148 <__stack+0xb9014c>
    1d6c:	12 00 05 02 	l.bf f8003174 <__stack+0xf7b83178>
    1d70:	00 40 38 fc 	l.j 1010160 <__stack+0xb90164>
    1d74:	16 00 05 02 	.word 0x16000502
    1d78:	00 40 39 30 	l.j 1010238 <__stack+0xb9023c>
    1d7c:	1a 00 05 02 	l.movhi r16,0x502
    1d80:	00 40 39 34 	l.j 1010250 <__stack+0xb90254>
    1d84:	0e 00 05 02 	l.bnf f800318c <__stack+0xf7b83190>
    1d88:	00 40 39 4c 	l.j 10102b8 <__stack+0xb902bc>
    1d8c:	15 00 05 02 	l.nop 0x502
    1d90:	00 40 39 8c 	l.j 10103c0 <__stack+0xb903c4>
    1d94:	16 00 05 02 	.word 0x16000502
    1d98:	00 40 39 cc 	l.j 10104c8 <__stack+0xb904cc>
    1d9c:	15 00 05 02 	l.nop 0x502
    1da0:	00 40 3a 0c 	l.j 10105d0 <__stack+0xb905d4>
    1da4:	15 00 05 02 	l.nop 0x502
    1da8:	00 40 3a 18 	l.j 1010608 <__stack+0xb9060c>
    1dac:	15 00 05 02 	l.nop 0x502
    1db0:	00 40 3a 20 	l.j 1010630 <__stack+0xb90634>
    1db4:	15 00 05 02 	l.nop 0x502
    1db8:	00 40 3a 28 	l.j 1010658 <__stack+0xb9065c>
    1dbc:	15 00 05 02 	l.nop 0x502
    1dc0:	00 40 3a 30 	l.j 1010680 <__stack+0xb90684>
    1dc4:	15 00 05 02 	l.nop 0x502
    1dc8:	00 40 3a 38 	l.j 10106a8 <__stack+0xb906ac>
    1dcc:	16 00 05 02 	.word 0x16000502
    1dd0:	00 40 3a 40 	l.j 10106d0 <__stack+0xb906d4>
    1dd4:	15 00 05 02 	l.nop 0x502
    1dd8:	00 40 3a 50 	l.j 1010718 <__stack+0xb9071c>
    1ddc:	15 00 05 02 	l.nop 0x502
    1de0:	00 40 3a 60 	l.j 1010760 <__stack+0xb90764>
    1de4:	15 00 05 02 	l.nop 0x502
    1de8:	00 40 3a 74 	l.j 10107b8 <__stack+0xb907bc>
    1dec:	3a 00 05 02 	.word 0x3a000502
    1df0:	00 40 3a 7c 	l.j 10107e0 <__stack+0xb907e4>
    1df4:	03 5e 01 00 	l.j fd7821f4 <__stack+0xfd3021f8>
    1df8:	05 02 00 40 	l.jal 4081ef8 <__stack+0x3c01efc>
    1dfc:	3a 80 16 00 	.word 0x3a801600
    1e00:	05 02 00 40 	l.jal 4081f00 <__stack+0x3c01f04>
    1e04:	3a 8c 17 00 	.word 0x3a8c1700
    1e08:	05 02 00 40 	l.jal 4081f08 <__stack+0x3c01f0c>
    1e0c:	3a b0 17 00 	.word 0x3ab01700
    1e10:	05 02 00 40 	l.jal 4081f10 <__stack+0x3c01f14>
    1e14:	3a c4 15 00 	.word 0x3ac41500
    1e18:	05 02 00 40 	l.jal 4081f18 <__stack+0x3c01f1c>
    1e1c:	3a c8 17 00 	.word 0x3ac81700
    1e20:	05 02 00 40 	l.jal 4081f20 <__stack+0x3c01f24>
    1e24:	3a cc 13 00 	.word 0x3acc1300
    1e28:	05 02 00 40 	l.jal 4081f28 <__stack+0x3c01f2c>
    1e2c:	3a d0 15 00 	.word 0x3ad01500
    1e30:	05 02 00 40 	l.jal 4081f30 <__stack+0x3c01f34>
    1e34:	3a d4 16 00 	.word 0x3ad41600
    1e38:	05 02 00 40 	l.jal 4081f38 <__stack+0x3c01f3c>
    1e3c:	3a d8 15 00 	.word 0x3ad81500
    1e40:	05 02 00 40 	l.jal 4081f40 <__stack+0x3c01f44>
    1e44:	3a dc 13 00 	.word 0x3adc1300
    1e48:	05 02 00 40 	l.jal 4081f48 <__stack+0x3c01f4c>
    1e4c:	3a e4 15 00 	.word 0x3ae41500
    1e50:	05 02 00 40 	l.jal 4081f50 <__stack+0x3c01f54>
    1e54:	3b 04 03 46 	.word 0x3b040346
    1e58:	01 00 05 02 	l.j 4003260 <__stack+0x3b83264>
    1e5c:	00 40 3b 0c 	l.j 1010a8c <__stack+0xb90a90>
    1e60:	51 00 05 02 	.word 0x51000502
    1e64:	00 40 3b 18 	l.j 1010ac4 <__stack+0xb90ac8>
    1e68:	16 00 05 02 	.word 0x16000502
    1e6c:	00 40 3b 20 	l.j 1010aec <__stack+0xb90af0>
    1e70:	1d 00 05 02 	.word 0x1d000502
    1e74:	00 40 3b 24 	l.j 1010b04 <__stack+0xb90b08>
    1e78:	0b 00 05 02 	.word 0x0b000502
    1e7c:	00 40 3b 28 	l.j 1010b1c <__stack+0xb90b20>
    1e80:	1d 00 05 02 	.word 0x1d000502
    1e84:	00 40 3b 2c 	l.j 1010b34 <__stack+0xb90b38>
    1e88:	0c 00 05 02 	l.bnf 3290 <__rom_size-0x170bc>
    1e8c:	00 40 3b 44 	l.j 1010b9c <__stack+0xb90ba0>
    1e90:	15 00 05 02 	l.nop 0x502
    1e94:	00 40 3b 4c 	l.j 1010bc4 <__stack+0xb90bc8>
    1e98:	13 00 05 02 	l.bf fc0032a0 <__stack+0xfbb832a4>
    1e9c:	00 40 3b 50 	l.j 1010bdc <__stack+0xb90be0>
    1ea0:	15 00 05 02 	l.nop 0x502
    1ea4:	00 40 3b 64 	l.j 1010c34 <__stack+0xb90c38>
    1ea8:	15 00 05 02 	l.nop 0x502
    1eac:	00 40 3b 6c 	l.j 1010c5c <__stack+0xb90c60>
    1eb0:	13 00 05 02 	l.bf fc0032b8 <__stack+0xfbb832bc>
    1eb4:	00 40 3b 70 	l.j 1010c74 <__stack+0xb90c78>
    1eb8:	15 00 05 02 	l.nop 0x502
    1ebc:	00 40 3b 80 	l.j 1010cbc <__stack+0xb90cc0>
    1ec0:	15 00 05 02 	l.nop 0x502
    1ec4:	00 40 3b 88 	l.j 1010ce4 <__stack+0xb90ce8>
    1ec8:	13 00 05 02 	l.bf fc0032d0 <__stack+0xfbb832d4>
    1ecc:	00 40 3b 8c 	l.j 1010cfc <__stack+0xb90d00>
    1ed0:	15 00 05 02 	l.nop 0x502
    1ed4:	00 40 3b a0 	l.j 1010d54 <__stack+0xb90d58>
    1ed8:	15 00 05 02 	l.nop 0x502
    1edc:	00 40 3b a8 	l.j 1010d7c <__stack+0xb90d80>
    1ee0:	13 00 05 02 	l.bf fc0032e8 <__stack+0xfbb832ec>
    1ee4:	00 40 3b ac 	l.j 1010d94 <__stack+0xb90d98>
    1ee8:	15 00 05 02 	l.nop 0x502
    1eec:	00 40 3b bc 	l.j 1010ddc <__stack+0xb90de0>
    1ef0:	15 00 05 02 	l.nop 0x502
    1ef4:	00 40 3b c4 	l.j 1010e04 <__stack+0xb90e08>
    1ef8:	13 00 05 02 	l.bf fc003300 <__stack+0xfbb83304>
    1efc:	00 40 3b c8 	l.j 1010e1c <__stack+0xb90e20>
    1f00:	15 00 05 02 	l.nop 0x502
    1f04:	00 40 3b e0 	l.j 1010e84 <__stack+0xb90e88>
    1f08:	15 00 05 02 	l.nop 0x502
    1f0c:	00 40 3b e8 	l.j 1010eac <__stack+0xb90eb0>
    1f10:	13 00 05 02 	l.bf fc003318 <__stack+0xfbb8331c>
    1f14:	00 40 3b ec 	l.j 1010ec4 <__stack+0xb90ec8>
    1f18:	15 00 05 02 	l.nop 0x502
    1f1c:	00 40 3b fc 	l.j 1010f0c <__stack+0xb90f10>
    1f20:	15 00 05 02 	l.nop 0x502
    1f24:	00 40 3c 04 	l.j 1010f34 <__stack+0xb90f38>
    1f28:	13 00 05 02 	l.bf fc003330 <__stack+0xfbb83334>
    1f2c:	00 40 3c 08 	l.j 1010f4c <__stack+0xb90f50>
    1f30:	15 00 05 02 	l.nop 0x502
    1f34:	00 40 3c 20 	l.j 1010fb4 <__stack+0xb90fb8>
    1f38:	03 b9 7f 01 	l.j fee61b3c <__stack+0xfe9e1b40>
    1f3c:	00 05 02 00 	l.j 14273c <__ram_length+0xc273c>
    1f40:	40 3c 28 61 	.word 0x403c2861
    1f44:	00 05 02 00 	l.j 142744 <__ram_length+0xc2744>
    1f48:	40 3c 2c 13 	.word 0x403c2c13
    1f4c:	00 05 02 00 	l.j 14274c <__ram_length+0xc274c>
    1f50:	40 3c 30 15 	.word 0x403c3015
    1f54:	00 05 02 00 	l.j 142754 <__ram_length+0xc2754>
    1f58:	40 3c 34 13 	.word 0x403c3413
    1f5c:	00 05 02 00 	l.j 14275c <__ram_length+0xc275c>
    1f60:	40 3c 3c 15 	.word 0x403c3c15
    1f64:	00 05 02 00 	l.j 142764 <__ram_length+0xc2764>
    1f68:	40 3c 44 13 	.word 0x403c4413
    1f6c:	00 05 02 00 	l.j 14276c <__ram_length+0xc276c>
    1f70:	40 3c 50 16 	.word 0x403c5016
    1f74:	00 05 02 00 	l.j 142774 <__ram_length+0xc2774>
    1f78:	40 3c 58 01 	.word 0x403c5801
    1f7c:	00 05 02 00 	l.j 14277c <__ram_length+0xc277c>
    1f80:	40 3c 68 16 	.word 0x403c6816
    1f84:	00 05 02 00 	l.j 142784 <__ram_length+0xc2784>
    1f88:	40 3c 78 15 	.word 0x403c7815
    1f8c:	00 05 02 00 	l.j 14278c <__ram_length+0xc278c>
    1f90:	40 3c 80 15 	.word 0x403c8015
    1f94:	00 05 02 00 	l.j 142794 <__ram_length+0xc2794>
    1f98:	40 3c 88 15 	.word 0x403c8815
    1f9c:	00 05 02 00 	l.j 14279c <__ram_length+0xc279c>
    1fa0:	40 3c 90 15 	.word 0x403c9015
    1fa4:	00 05 02 00 	l.j 1427a4 <__ram_length+0xc27a4>
    1fa8:	40 3c d0 15 	.word 0x403cd015
    1fac:	00 05 02 00 	l.j 1427ac <__ram_length+0xc27ac>
    1fb0:	40 3d 14 16 	.word 0x403d1416
    1fb4:	00 05 02 00 	l.j 1427b4 <__ram_length+0xc27b4>
    1fb8:	40 3d 54 15 	.word 0x403d5415
    1fbc:	00 05 02 00 	l.j 1427bc <__ram_length+0xc27bc>
    1fc0:	40 3d 98 15 	.word 0x403d9815
    1fc4:	00 05 02 00 	l.j 1427c4 <__ram_length+0xc27c4>
    1fc8:	40 3d a0 15 	.word 0x403da015
    1fcc:	00 05 02 00 	l.j 1427cc <__ram_length+0xc27cc>
    1fd0:	40 3d a8 15 	.word 0x403da815
    1fd4:	00 05 02 00 	l.j 1427d4 <__ram_length+0xc27d4>
    1fd8:	40 3d b0 19 	.word 0x403db019
    1fdc:	00 05 02 00 	l.j 1427dc <__ram_length+0xc27dc>
    1fe0:	40 3d c0 17 	.word 0x403dc017
    1fe4:	00 05 02 00 	l.j 1427e4 <__ram_length+0xc27e4>
    1fe8:	40 3d f0 03 	.word 0x403df003
    1fec:	ec 7e 01 00 	.word 0xec7e0100
    1ff0:	05 02 00 40 	l.jal 40820f0 <__stack+0x3c020f4>
    1ff4:	3d f8 1a 00 	.word 0x3df81a00
    1ff8:	05 02 00 40 	l.jal 40820f8 <__stack+0x3c020fc>
    1ffc:	3e 00 11 00 	.word 0x3e001100
    2000:	05 02 00 40 	l.jal 4082100 <__stack+0x3c02104>
    2004:	3e 08 03 d8 	.word 0x3e0803d8
    2008:	03 01 00 05 	l.j fc04201c <__stack+0xfbbc2020>
    200c:	02 00 40 3e 	l.j f8012104 <__stack+0xf7b92108>
    2010:	08 17 00 05 	.word 0x08170005
    2014:	02 00 40 3e 	l.j f801210c <__stack+0xf7b92110>
    2018:	14 17 00 05 	.word 0x14170005
    201c:	02 00 40 3e 	l.j f8012114 <__stack+0xf7b92118>
    2020:	18 11 00 05 	.word 0x18110005
    2024:	02 00 40 3e 	l.j f801211c <__stack+0xf7b92120>
    2028:	1c 16 00 05 	.word 0x1c160005
    202c:	02 00 40 3e 	l.j f8012124 <__stack+0xf7b92128>
    2030:	24 15 00 05 	l.rfe 
    2034:	02 00 40 3e 	l.j f801212c <__stack+0xf7b92130>
    2038:	28 13 00 05 	.word 0x28130005
    203c:	02 00 40 3e 	l.j f8012134 <__stack+0xf7b92138>
    2040:	30 15 00 05 	.word 0x30150005
    2044:	02 00 40 3e 	l.j f801213c <__stack+0xf7b92140>
    2048:	38 15 00 05 	.word 0x38150005
    204c:	02 00 40 3e 	l.j f8012144 <__stack+0xf7b92148>
    2050:	40 17 00 05 	.word 0x40170005
    2054:	02 00 40 3e 	l.j f801214c <__stack+0xf7b92150>
    2058:	48 04 10 03 	l.jalr r2
    205c:	85 0e 01 00 	l.lwz r8,0x100(r14)
    2060:	05 02 00 40 	l.jal 4082160 <__stack+0x3c02164>
    2064:	3e 50 18 00 	.word 0x3e501800
    2068:	05 02 00 40 	l.jal 4082168 <__stack+0x3c0216c>
    206c:	3e 54 10 00 	.word 0x3e541000
    2070:	05 02 00 40 	l.jal 4082170 <__stack+0x3c02174>
    2074:	3e 58 18 00 	.word 0x3e581800
    2078:	05 02 00 40 	l.jal 4082178 <__stack+0x3c0217c>
    207c:	3e 5c 01 00 	.word 0x3e5c0100
    2080:	05 02 00 40 	l.jal 4082180 <__stack+0x3c02184>
    2084:	3e 6c 17 00 	.word 0x3e6c1700
    2088:	05 02 00 40 	l.jal 4082188 <__stack+0x3c0218c>
    208c:	3e 7c 15 00 	.word 0x3e7c1500
    2090:	05 02 00 40 	l.jal 4082190 <__stack+0x3c02194>
    2094:	3e 84 16 00 	.word 0x3e841600
    2098:	05 02 00 40 	l.jal 4082198 <__stack+0x3c0219c>
    209c:	3e 9c 15 00 	.word 0x3e9c1500
    20a0:	05 02 00 40 	l.jal 40821a0 <__stack+0x3c021a4>
    20a4:	3e b4 15 00 	.word 0x3eb41500
    20a8:	05 02 00 40 	l.jal 40821a8 <__stack+0x3c021ac>
    20ac:	3e cc 15 00 	.word 0x3ecc1500
    20b0:	05 02 00 40 	l.jal 40821b0 <__stack+0x3c021b4>
    20b4:	3e e4 15 00 	.word 0x3ee41500
    20b8:	05 02 00 40 	l.jal 40821b8 <__stack+0x3c021bc>
    20bc:	3e fc 15 00 	.word 0x3efc1500
    20c0:	05 02 00 40 	l.jal 40821c0 <__stack+0x3c021c4>
    20c4:	3f 14 15 00 	.word 0x3f141500
    20c8:	05 02 00 40 	l.jal 40821c8 <__stack+0x3c021cc>
    20cc:	3f 2c 15 00 	.word 0x3f2c1500
    20d0:	05 02 00 40 	l.jal 40821d0 <__stack+0x3c021d4>
    20d4:	3f 44 15 00 	.word 0x3f441500
    20d8:	05 02 00 40 	l.jal 40821d8 <__stack+0x3c021dc>
    20dc:	3f 58 15 00 	.word 0x3f581500
    20e0:	05 02 00 40 	l.jal 40821e0 <__stack+0x3c021e4>
    20e4:	3f 64 17 00 	.word 0x3f641700
    20e8:	05 02 00 40 	l.jal 40821e8 <__stack+0x3c021ec>
    20ec:	3f 74 04 12 	.word 0x3f740412
    20f0:	03 ea 71 01 	l.j ffa9e4f4 <__stack+0xff61e4f8>
    20f4:	00 05 02 00 	l.j 1428f4 <__ram_length+0xc28f4>
    20f8:	40 3f 74 17 	.word 0x403f7417
    20fc:	00 05 02 00 	l.j 1428fc <__ram_length+0xc28fc>
    2100:	40 3f 80 11 	.word 0x403f8011
    2104:	00 05 02 00 	l.j 142904 <__ram_length+0xc2904>
    2108:	40 3f 84 17 	.word 0x403f8417
    210c:	00 05 02 00 	l.j 14290c <__ram_length+0xc290c>
    2110:	40 3f 88 16 	.word 0x403f8816
    2114:	00 05 02 00 	l.j 142914 <__ram_length+0xc2914>
    2118:	40 3f 90 15 	.word 0x403f9015
    211c:	00 05 02 00 	l.j 14291c <__ram_length+0xc291c>
    2120:	40 3f 94 13 	.word 0x403f9413
    2124:	00 05 02 00 	l.j 142924 <__ram_length+0xc2924>
    2128:	40 3f 98 0f 	.word 0x403f980f
    212c:	00 05 02 00 	l.j 14292c <__ram_length+0xc292c>
    2130:	40 3f 9c 19 	.word 0x403f9c19
    2134:	00 05 02 00 	l.j 142934 <__ram_length+0xc2934>
    2138:	40 3f a0 15 	.word 0x403fa015
    213c:	00 05 02 00 	l.j 14293c <__ram_length+0xc293c>
    2140:	40 3f a8 15 	.word 0x403fa815
    2144:	00 05 02 00 	l.j 142944 <__ram_length+0xc2944>
    2148:	40 3f b0 17 	.word 0x403fb017
    214c:	00 05 02 00 	l.j 14294c <__ram_length+0xc294c>
    2150:	40 3f bc 4e 	.word 0x403fbc4e
    2154:	00 05 02 00 	l.j 142954 <__ram_length+0xc2954>
    2158:	40 3f bc 1a 	.word 0x403fbc1a
    215c:	00 05 02 00 	l.j 14295c <__ram_length+0xc295c>
    2160:	40 3f c0 11 	.word 0x403fc011
    2164:	00 05 02 00 	l.j 142964 <__ram_length+0xc2964>
    2168:	40 3f c4 17 	.word 0x403fc417
    216c:	00 05 02 00 	l.j 14296c <__ram_length+0xc296c>
    2170:	40 3f cc 11 	.word 0x403fcc11
    2174:	00 05 02 00 	l.j 142974 <__ram_length+0xc2974>
    2178:	40 3f d4 17 	.word 0x403fd417
    217c:	00 05 02 00 	l.j 14297c <__ram_length+0xc297c>
    2180:	40 3f dc 11 	.word 0x403fdc11
    2184:	00 05 02 00 	l.j 142984 <__ram_length+0xc2984>
    2188:	40 3f e0 16 	.word 0x403fe016
    218c:	00 05 02 00 	l.j 14298c <__ram_length+0xc298c>
    2190:	40 3f e8 15 	.word 0x403fe815
    2194:	00 05 02 00 	l.j 142994 <__ram_length+0xc2994>
    2198:	40 3f ec 13 	.word 0x403fec13
    219c:	00 05 02 00 	l.j 14299c <__ram_length+0xc299c>
    21a0:	40 3f f0 15 	.word 0x403ff015
    21a4:	00 05 02 00 	l.j 1429a4 <__ram_length+0xc29a4>
    21a8:	40 3f f4 13 	.word 0x403ff413
    21ac:	00 05 02 00 	l.j 1429ac <__ram_length+0xc29ac>
    21b0:	40 3f f8 15 	.word 0x403ff815
    21b4:	00 05 02 00 	l.j 1429b4 <__ram_length+0xc29b4>
    21b8:	40 40 00 15 	.word 0x40400015
    21bc:	00 05 02 00 	l.j 1429bc <__ram_length+0xc29bc>
    21c0:	40 40 08 17 	.word 0x40400817
    21c4:	00 05 02 00 	l.j 1429c4 <__ram_length+0xc29c4>
    21c8:	40 40 10 18 	.word 0x40401018
    21cc:	00 05 02 00 	l.j 1429cc <__ram_length+0xc29cc>
    21d0:	40 40 10 17 	.word 0x40401017
    21d4:	00 05 02 00 	l.j 1429d4 <__ram_length+0xc29d4>
    21d8:	40 40 1c 1c 	.word 0x40401c1c
    21dc:	00 05 02 00 	l.j 1429dc <__ram_length+0xc29dc>
    21e0:	40 40 20 0c 	.word 0x4040200c
    21e4:	00 05 02 00 	l.j 1429e4 <__ram_length+0xc29e4>
    21e8:	40 40 24 1c 	.word 0x4040241c
    21ec:	00 05 02 00 	l.j 1429ec <__ram_length+0xc29ec>
    21f0:	40 40 30 15 	.word 0x40403015
    21f4:	00 05 02 00 	l.j 1429f4 <__ram_length+0xc29f4>
    21f8:	40 40 38 15 	.word 0x40403815
    21fc:	00 05 02 00 	l.j 1429fc <__ram_length+0xc29fc>
    2200:	40 40 40 1a 	.word 0x4040401a
    2204:	00 05 02 00 	l.j 142a04 <__ram_length+0xc2a04>
    2208:	40 40 48 17 	.word 0x40404817
    220c:	00 05 02 00 	l.j 142a0c <__ram_length+0xc2a0c>
    2210:	40 40 48 17 	.word 0x40404817
    2214:	00 05 02 00 	l.j 142a14 <__ram_length+0xc2a14>
    2218:	40 40 54 16 	.word 0x40405416
    221c:	00 05 02 00 	l.j 142a1c <__ram_length+0xc2a1c>
    2220:	40 40 58 12 	.word 0x40405812
    2224:	00 05 02 00 	l.j 142a24 <__ram_length+0xc2a24>
    2228:	40 40 5c 16 	.word 0x40405c16
    222c:	00 05 02 00 	l.j 142a2c <__ram_length+0xc2a2c>
    2230:	40 40 60 15 	.word 0x40406015
    2234:	00 05 02 00 	l.j 142a34 <__ram_length+0xc2a34>
    2238:	40 40 64 13 	.word 0x40406413
    223c:	00 05 02 00 	l.j 142a3c <__ram_length+0xc2a3c>
    2240:	40 40 6c 15 	.word 0x40406c15
    2244:	00 05 02 00 	l.j 142a44 <__ram_length+0xc2a44>
    2248:	40 40 74 15 	.word 0x40407415
    224c:	00 05 02 00 	l.j 142a4c <__ram_length+0xc2a4c>
    2250:	40 40 7c 17 	.word 0x40407c17
    2254:	00 05 02 00 	l.j 142a54 <__ram_length+0xc2a54>
    2258:	40 40 84 17 	.word 0x40408417
    225c:	00 05 02 00 	l.j 142a5c <__ram_length+0xc2a5c>
    2260:	40 40 84 17 	.word 0x40408417
    2264:	00 05 02 00 	l.j 142a64 <__ram_length+0xc2a64>
    2268:	40 40 90 16 	.word 0x40409016
    226c:	00 05 02 00 	l.j 142a6c <__ram_length+0xc2a6c>
    2270:	40 40 94 12 	.word 0x40409412
    2274:	00 05 02 00 	l.j 142a74 <__ram_length+0xc2a74>
    2278:	40 40 98 16 	.word 0x40409816
    227c:	00 05 02 00 	l.j 142a7c <__ram_length+0xc2a7c>
    2280:	40 40 a4 15 	.word 0x4040a415
    2284:	00 05 02 00 	l.j 142a84 <__ram_length+0xc2a84>
    2288:	40 40 ac 15 	.word 0x4040ac15
    228c:	00 05 02 00 	l.j 142a8c <__ram_length+0xc2a8c>
    2290:	40 40 b4 17 	.word 0x4040b417
    2294:	00 05 02 00 	l.j 142a94 <__ram_length+0xc2a94>
    2298:	40 40 bc 17 	.word 0x4040bc17
    229c:	00 05 02 00 	l.j 142a9c <__ram_length+0xc2a9c>
    22a0:	40 40 bc 17 	.word 0x4040bc17
    22a4:	00 05 02 00 	l.j 142aa4 <__ram_length+0xc2aa4>
    22a8:	40 40 c0 17 	.word 0x4040c017
    22ac:	00 05 02 00 	l.j 142aac <__ram_length+0xc2aac>
    22b0:	40 40 c4 11 	.word 0x4040c411
    22b4:	00 05 02 00 	l.j 142ab4 <__ram_length+0xc2ab4>
    22b8:	40 40 cc 17 	.word 0x4040cc17
    22bc:	00 05 02 00 	l.j 142abc <__ram_length+0xc2abc>
    22c0:	40 40 d0 13 	.word 0x4040d013
    22c4:	00 05 02 00 	l.j 142ac4 <__ram_length+0xc2ac4>
    22c8:	40 40 d4 15 	.word 0x4040d415
    22cc:	00 05 02 00 	l.j 142acc <__ram_length+0xc2acc>
    22d0:	40 40 d8 11 	.word 0x4040d811
    22d4:	00 05 02 00 	l.j 142ad4 <__ram_length+0xc2ad4>
    22d8:	40 40 dc 16 	.word 0x4040dc16
    22dc:	00 05 02 00 	l.j 142adc <__ram_length+0xc2adc>
    22e0:	40 40 e0 15 	.word 0x4040e015
    22e4:	00 05 02 00 	l.j 142ae4 <__ram_length+0xc2ae4>
    22e8:	40 40 e4 13 	.word 0x4040e413
    22ec:	00 05 02 00 	l.j 142aec <__ram_length+0xc2aec>
    22f0:	40 40 e8 15 	.word 0x4040e815
    22f4:	00 05 02 00 	l.j 142af4 <__ram_length+0xc2af4>
    22f8:	40 40 f0 15 	.word 0x4040f015
    22fc:	00 05 02 00 	l.j 142afc <__ram_length+0xc2afc>
    2300:	40 40 f8 17 	.word 0x4040f817
    2304:	00 05 02 00 	l.j 142b04 <__ram_length+0xc2b04>
    2308:	40 41 00 23 	.word 0x40410023
    230c:	00 05 02 00 	l.j 142b0c <__ram_length+0xc2b0c>
    2310:	40 41 00 17 	.word 0x40410017
    2314:	00 05 02 00 	l.j 142b14 <__ram_length+0xc2b14>
    2318:	40 41 0c 16 	.word 0x40410c16
    231c:	00 05 02 00 	l.j 142b1c <__ram_length+0xc2b1c>
    2320:	40 41 10 12 	.word 0x40411012
    2324:	00 05 02 00 	l.j 142b24 <__ram_length+0xc2b24>
    2328:	40 41 14 16 	.word 0x40411416
    232c:	00 05 02 00 	l.j 142b2c <__ram_length+0xc2b2c>
    2330:	40 41 18 15 	.word 0x40411815
    2334:	00 05 02 00 	l.j 142b34 <__ram_length+0xc2b34>
    2338:	40 41 1c 13 	.word 0x40411c13
    233c:	00 05 02 00 	l.j 142b3c <__ram_length+0xc2b3c>
    2340:	40 41 24 15 	.word 0x40412415
    2344:	00 05 02 00 	l.j 142b44 <__ram_length+0xc2b44>
    2348:	40 41 30 01 	.word 0x40413001
    234c:	00 05 02 00 	l.j 142b4c <__ram_length+0xc2b4c>
    2350:	40 41 38 01 	.word 0x40413801
    2354:	00 05 02 00 	l.j 142b54 <__ram_length+0xc2b54>
    2358:	40 41 3c 01 	.word 0x40413c01
    235c:	00 05 02 00 	l.j 142b5c <__ram_length+0xc2b5c>
    2360:	40 41 4c 15 	.word 0x40414c15
    2364:	00 05 02 00 	l.j 142b64 <__ram_length+0xc2b64>
    2368:	40 41 50 13 	.word 0x40415013
    236c:	00 05 02 00 	l.j 142b6c <__ram_length+0xc2b6c>
    2370:	40 41 60 15 	.word 0x40416015
    2374:	00 05 02 00 	l.j 142b74 <__ram_length+0xc2b74>
    2378:	40 41 68 17 	.word 0x40416817
    237c:	00 05 02 00 	l.j 142b7c <__ram_length+0xc2b7c>
    2380:	40 41 70 27 	.word 0x40417027
    2384:	00 05 02 00 	l.j 142b84 <__ram_length+0xc2b84>
    2388:	40 41 74 1e 	.word 0x4041741e
    238c:	00 05 02 00 	l.j 142b8c <__ram_length+0xc2b8c>
    2390:	40 41 80 0a 	.word 0x4041800a
    2394:	00 05 02 00 	l.j 142b94 <__ram_length+0xc2b94>
    2398:	40 41 8c 1e 	.word 0x40418c1e
    239c:	00 05 02 00 	l.j 142b9c <__ram_length+0xc2b9c>
    23a0:	40 41 90 15 	.word 0x40419015
    23a4:	00 05 02 00 	l.j 142ba4 <__ram_length+0xc2ba4>
    23a8:	40 41 98 03 	.word 0x40419803
    23ac:	75 01 00 05 	l.cust2 
    23b0:	02 00 40 41 	l.j f80124b4 <__stack+0xf7b924b8>
    23b4:	9c 1f 00 05 	l.addi r0,r31,0x5
    23b8:	02 00 40 41 	l.j f80124bc <__stack+0xf7b924c0>
    23bc:	a0 15 00 05 	l.addic r0,r21,0x5
    23c0:	02 00 40 41 	l.j f80124c4 <__stack+0xf7b924c8>
    23c4:	a4 13 00 05 	l.andi r0,r19,0x5
    23c8:	02 00 40 41 	l.j f80124cc <__stack+0xf7b924d0>
    23cc:	a8 15 00 05 	l.ori r0,r21,0x5
    23d0:	02 00 40 41 	l.j f80124d4 <__stack+0xf7b924d8>
    23d4:	ac 18 00 05 	l.xori r0,r24,0x5
    23d8:	02 00 40 41 	l.j f80124dc <__stack+0xf7b924e0>
    23dc:	c4 1d 00 05 	.word 0xc41d0005
    23e0:	02 00 40 41 	l.j f80124e4 <__stack+0xf7b924e8>
    23e4:	dc 13 00 05 	l.sh 0x5(r19),r0
    23e8:	02 00 40 41 	l.j f80124ec <__stack+0xf7b924f0>
    23ec:	e0 18 00 05 	l.xor r0,r24,r0
    23f0:	02 00 40 41 	l.j f80124f4 <__stack+0xf7b924f8>
    23f4:	f0 17 00 05 	l.cust5 r0,r23,r0,0x0,0x5
    23f8:	02 00 40 42 	l.j f8012500 <__stack+0xf7b92504>
    23fc:	00 16 00 05 	l.j 582410 <__stack+0x102414>
    2400:	02 00 40 42 	l.j f8012508 <__stack+0xf7b9250c>
    2404:	10 16 00 05 	l.bf 582418 <__stack+0x10241c>
    2408:	02 00 40 42 	l.j f8012510 <__stack+0xf7b92514>
    240c:	24 16 00 05 	l.rfe 
    2410:	02 00 40 42 	l.j f8012518 <__stack+0xf7b9251c>
    2414:	2c 15 00 05 	.word 0x2c150005
    2418:	02 00 40 42 	l.j f8012520 <__stack+0xf7b92524>
    241c:	44 16 00 05 	l.jr r0
    2420:	02 00 40 42 	l.j f8012528 <__stack+0xf7b9252c>
    2424:	58 15 00 05 	.word 0x58150005
    2428:	02 00 40 42 	l.j f8012530 <__stack+0xf7b92534>
    242c:	64 16 00 05 	.word 0x64160005
    2430:	02 00 40 42 	l.j f8012538 <__stack+0xf7b9253c>
    2434:	6c 15 00 05 	.word 0x6c150005
    2438:	02 00 40 42 	l.j f8012540 <__stack+0xf7b92544>
    243c:	80 26 00 05 	l.ld r1,0x5(r6)
    2440:	02 00 40 42 	l.j f8012548 <__stack+0xf7b9254c>
    2444:	8c 03 6e 01 	l.lbz r0,0x6e01(r3)
    2448:	00 05 02 00 	l.j 142c48 <__ram_length+0xc2c48>
    244c:	40 42 9c 01 	.word 0x40429c01
    2450:	00 05 02 00 	l.j 142c50 <__ram_length+0xc2c50>
    2454:	40 42 a0 1c 	.word 0x4042a01c
    2458:	00 05 02 00 	l.j 142c58 <__ram_length+0xc2c58>
    245c:	40 42 bc 55 	.word 0x4042bc55
    2460:	00 05 02 00 	l.j 142c60 <__ram_length+0xc2c60>
    2464:	40 42 c4 17 	.word 0x4042c417
    2468:	00 05 02 00 	l.j 142c68 <__ram_length+0xc2c68>
    246c:	40 42 c8 11 	.word 0x4042c811
    2470:	00 05 02 00 	l.j 142c70 <__ram_length+0xc2c70>
    2474:	40 42 cc 17 	.word 0x4042cc17
    2478:	00 05 02 00 	l.j 142c78 <__ram_length+0xc2c78>
    247c:	40 42 e0 15 	.word 0x4042e015
    2480:	00 05 02 00 	l.j 142c80 <__ram_length+0xc2c80>
    2484:	40 42 ec 17 	.word 0x4042ec17
    2488:	00 05 02 00 	l.j 142c88 <__ram_length+0xc2c88>
    248c:	40 42 fc 04 	.word 0x4042fc04
    2490:	13 03 d5 78 	l.bf fc0f7a70 <__stack+0xfbc77a74>
    2494:	01 00 05 02 	l.j 400389c <__stack+0x3b838a0>
    2498:	00 40 42 fc 	l.j 1013088 <__stack+0xb9308c>
    249c:	15 00 05 02 	l.nop 0x502
    24a0:	00 40 43 0c 	l.j 10130d0 <__stack+0xb930d4>
    24a4:	01 00 05 02 	l.j 40038ac <__stack+0x3b838b0>
    24a8:	00 40 43 1c 	l.j 1013118 <__stack+0xb9311c>
    24ac:	15 00 05 02 	l.nop 0x502
    24b0:	00 40 43 24 	l.j 1013140 <__stack+0xb93144>
    24b4:	03 6e 01 00 	l.j fdb828b4 <__stack+0xfd7028b8>
    24b8:	05 02 00 40 	l.jal 40825b8 <__stack+0x3c025bc>
    24bc:	43 2c 15 00 	.word 0x432c1500
    24c0:	05 02 00 40 	l.jal 40825c0 <__stack+0x3c025c4>
    24c4:	43 34 15 00 	.word 0x43341500
    24c8:	05 02 00 40 	l.jal 40825c8 <__stack+0x3c025cc>
    24cc:	43 3c 15 00 	.word 0x433c1500
    24d0:	05 02 00 40 	l.jal 40825d0 <__stack+0x3c025d4>
    24d4:	43 44 16 00 	.word 0x43441600
    24d8:	05 02 00 40 	l.jal 40825d8 <__stack+0x3c025dc>
    24dc:	43 48 16 00 	.word 0x43481600
    24e0:	05 02 00 40 	l.jal 40825e0 <__stack+0x3c025e4>
    24e4:	43 4c 15 00 	.word 0x434c1500
    24e8:	05 02 00 40 	l.jal 40825e8 <__stack+0x3c025ec>
    24ec:	43 50 13 00 	.word 0x43501300
    24f0:	05 02 00 40 	l.jal 40825f0 <__stack+0x3c025f4>
    24f4:	43 54 0b 00 	.word 0x43540b00
    24f8:	05 02 00 40 	l.jal 40825f8 <__stack+0x3c025fc>
    24fc:	43 c0 29 00 	.word 0x43c02900
    2500:	05 02 00 40 	l.jal 4082600 <__stack+0x3c02604>
    2504:	43 c8 03 5b 	.word 0x43c8035b
    2508:	01 00 05 02 	l.j 4003910 <__stack+0x3b83914>
    250c:	00 40 43 d0 	l.j 101344c <__stack+0xb93450>
    2510:	16 00 05 02 	.word 0x16000502
    2514:	00 40 43 d4 	l.j 1013464 <__stack+0xb93468>
    2518:	13 00 05 02 	l.bf fc003920 <__stack+0xfbb83924>
    251c:	00 40 43 d8 	l.j 101347c <__stack+0xb93480>
    2520:	11 00 05 02 	l.bf 4003928 <__stack+0x3b8392c>
    2524:	00 40 43 e0 	l.j 10134a4 <__stack+0xb934a8>
    2528:	1b 00 05 02 	l.movhi r24,0x502
    252c:	00 40 43 e8 	l.j 10134cc <__stack+0xb934d0>
    2530:	15 00 05 02 	l.nop 0x502
    2534:	00 40 43 ec 	l.j 10134e4 <__stack+0xb934e8>
    2538:	13 00 05 02 	l.bf fc003940 <__stack+0xfbb83944>
    253c:	00 40 43 f4 	l.j 101350c <__stack+0xb93510>
    2540:	13 00 05 02 	l.bf fc003948 <__stack+0xfbb8394c>
    2544:	00 40 44 0c 	l.j 1013574 <__stack+0xb93578>
    2548:	18 00 05 02 	l.movhi r0,0x502
    254c:	00 40 44 1c 	l.j 10135bc <__stack+0xb935c0>
    2550:	34 00 05 02 	.word 0x34000502
    2554:	00 40 44 24 	l.j 10135e4 <__stack+0xb935e8>
    2558:	18 00 05 02 	l.movhi r0,0x502
    255c:	00 40 44 24 	l.j 10135ec <__stack+0xb935f0>
    2560:	15 00 05 02 	l.nop 0x502
    2564:	00 40 44 2c 	l.j 1013614 <__stack+0xb93618>
    2568:	01 00 05 02 	l.j 4003970 <__stack+0x3b83974>
    256c:	00 40 44 54 	l.j 10136bc <__stack+0xb936c0>
    2570:	15 00 05 02 	l.nop 0x502
    2574:	00 40 44 5c 	l.j 10136e4 <__stack+0xb936e8>
    2578:	01 00 05 02 	l.j 4003980 <__stack+0x3b83984>
    257c:	00 40 44 6c 	l.j 101372c <__stack+0xb93730>
    2580:	15 00 05 02 	l.nop 0x502
    2584:	00 40 44 7c 	l.j 1013774 <__stack+0xb93778>
    2588:	16 00 05 02 	.word 0x16000502
    258c:	00 40 44 84 	l.j 101379c <__stack+0xb937a0>
    2590:	04 14 03 8a 	l.jal 5033b8 <__stack+0x833bc>
    2594:	7f 01 00 05 	l.cust4 
    2598:	02 00 40 44 	l.j f80126a8 <__stack+0xf7b926ac>
    259c:	8c 01 00 05 	l.lbz r0,0x5(r1)
    25a0:	02 00 40 44 	l.j f80126b0 <__stack+0xf7b926b4>
    25a4:	90 19 00 05 	l.lbs r0,0x5(r25)
    25a8:	02 00 40 44 	l.j f80126b8 <__stack+0xf7b926bc>
    25ac:	9c 18 00 05 	l.addi r0,r24,0x5
    25b0:	02 00 40 44 	l.j f80126c0 <__stack+0xf7b926c4>
    25b4:	ac 04 10 03 	l.xori r0,r4,0x1003
    25b8:	b2 13 01 00 	l.muli r16,r19,0x100
    25bc:	05 02 00 40 	l.jal 40826bc <__stack+0x3c026c0>
    25c0:	44 b0 17 00 	l.jr r2
    25c4:	05 02 00 40 	l.jal 40826c4 <__stack+0x3c026c8>
    25c8:	44 b4 11 00 	l.jr r2
    25cc:	05 02 00 40 	l.jal 40826cc <__stack+0x3c026d0>
    25d0:	44 c0 17 00 	l.jr r2
    25d4:	05 02 00 40 	l.jal 40826d4 <__stack+0x3c026d8>
    25d8:	44 c4 11 00 	l.jr r2
    25dc:	05 02 00 40 	l.jal 40826dc <__stack+0x3c026e0>
    25e0:	44 c8 17 00 	l.jr r2
    25e4:	05 02 00 40 	l.jal 40826e4 <__stack+0x3c026e8>
    25e8:	44 cc 11 00 	l.jr r2
    25ec:	05 02 00 40 	l.jal 40826ec <__stack+0x3c026f0>
    25f0:	44 d0 17 00 	l.jr r2
    25f4:	05 02 00 40 	l.jal 40826f4 <__stack+0x3c026f8>
    25f8:	44 dc 15 00 	l.jr r2
    25fc:	05 02 00 40 	l.jal 40826fc <__stack+0x3c02700>
    2600:	44 e4 16 00 	l.jr r2
    2604:	05 02 00 40 	l.jal 4082704 <__stack+0x3c02708>
    2608:	44 fc 17 00 	l.jr r2
    260c:	05 02 00 40 	l.jal 408270c <__stack+0x3c02710>
    2610:	45 0c 15 00 	l.jr r2
    2614:	05 02 00 40 	l.jal 4082714 <__stack+0x3c02718>
    2618:	45 28 15 00 	l.jr r2
    261c:	05 02 00 40 	l.jal 408271c <__stack+0x3c02720>
    2620:	45 40 15 00 	l.jr r2
    2624:	05 02 00 40 	l.jal 4082724 <__stack+0x3c02728>
    2628:	45 54 15 00 	l.jr r2
    262c:	05 02 00 40 	l.jal 408272c <__stack+0x3c02730>
    2630:	45 58 15 00 	l.jr r2
    2634:	05 02 00 40 	l.jal 4082734 <__stack+0x3c02738>
    2638:	45 5c 13 00 	l.jr r2
    263c:	05 02 00 40 	l.jal 408273c <__stack+0x3c02740>
    2640:	45 60 15 00 	l.jr r2
    2644:	05 02 00 40 	l.jal 4082744 <__stack+0x3c02748>
    2648:	45 70 16 00 	l.jr r2
    264c:	05 02 00 40 	l.jal 408274c <__stack+0x3c02750>
    2650:	45 74 15 00 	l.jr r2
    2654:	05 02 00 40 	l.jal 4082754 <__stack+0x3c02758>
    2658:	45 80 15 00 	l.jr r2
    265c:	05 02 00 40 	l.jal 408275c <__stack+0x3c02760>
    2660:	45 94 16 00 	l.jr r2
    2664:	05 02 00 40 	l.jal 4082764 <__stack+0x3c02768>
    2668:	45 ac 15 00 	l.jr r2
    266c:	05 02 00 40 	l.jal 408276c <__stack+0x3c02770>
    2670:	45 c4 16 00 	l.jr r2
    2674:	05 02 00 40 	l.jal 4082774 <__stack+0x3c02778>
    2678:	45 dc 15 00 	l.jr r2
    267c:	05 02 00 40 	l.jal 408277c <__stack+0x3c02780>
    2680:	45 f4 15 00 	l.jr r2
    2684:	05 02 00 40 	l.jal 4082784 <__stack+0x3c02788>
    2688:	46 0c 1a 00 	l.jr r3
    268c:	05 02 00 40 	l.jal 408278c <__stack+0x3c02790>
    2690:	46 10 10 00 	l.jr r2
    2694:	05 02 00 40 	l.jal 4082794 <__stack+0x3c02798>
    2698:	46 14 18 00 	l.jr r3
    269c:	05 02 00 40 	l.jal 408279c <__stack+0x3c027a0>
    26a0:	46 20 10 00 	l.jr r2
    26a4:	05 02 00 40 	l.jal 40827a4 <__stack+0x3c027a8>
    26a8:	46 28 18 00 	l.jr r3
    26ac:	05 02 00 40 	l.jal 40827ac <__stack+0x3c027b0>
    26b0:	46 40 04 15 	l.jr r0
    26b4:	03 ff 6e 01 	l.j fffddeb8 <__stack+0xffb5debc>
    26b8:	00 05 02 00 	l.j 142eb8 <__ram_length+0xc2eb8>
    26bc:	40 46 44 17 	.word 0x40464417
    26c0:	00 05 02 00 	l.j 142ec0 <__ram_length+0xc2ec0>
    26c4:	40 46 48 01 	.word 0x40464801
    26c8:	00 05 02 00 	l.j 142ec8 <__ram_length+0xc2ec8>
    26cc:	40 46 50 15 	.word 0x40465015
    26d0:	00 05 02 00 	l.j 142ed0 <__ram_length+0xc2ed0>
    26d4:	40 46 68 19 	.word 0x40466819
    26d8:	00 05 02 00 	l.j 142ed8 <__ram_length+0xc2ed8>
    26dc:	40 46 78 11 	.word 0x40467811
    26e0:	00 05 02 00 	l.j 142ee0 <__ram_length+0xc2ee0>
    26e4:	40 46 80 17 	.word 0x40468017
    26e8:	00 05 02 00 	l.j 142ee8 <__ram_length+0xc2ee8>
    26ec:	40 46 84 11 	.word 0x40468411
    26f0:	00 05 02 00 	l.j 142ef0 <__ram_length+0xc2ef0>
    26f4:	40 46 88 17 	.word 0x40468817
    26f8:	00 05 02 00 	l.j 142ef8 <__ram_length+0xc2ef8>
    26fc:	40 46 8c 11 	.word 0x40468c11
    2700:	00 05 02 00 	l.j 142f00 <__ram_length+0xc2f00>
    2704:	40 46 94 04 	.word 0x40469404
    2708:	03 03 a1 7d 	l.j fc0eacfc <__stack+0xfbc6ad00>
    270c:	01 00 05 02 	l.j 4003b14 <__stack+0x3b83b18>
    2710:	00 40 46 a4 	l.j 10141a0 <__stack+0xb941a4>
    2714:	19 00 05 02 	l.movhi r8,0x502
    2718:	00 40 46 b8 	l.j 10141f8 <__stack+0xb941fc>
    271c:	18 00 05 02 	l.movhi r0,0x502
    2720:	00 40 46 bc 	l.j 1014210 <__stack+0xb94214>
    2724:	13 00 05 02 	l.bf fc003b2c <__stack+0xfbb83b30>
    2728:	00 40 46 c8 	l.j 1014248 <__stack+0xb9424c>
    272c:	04 0a bd 00 	l.jal 2b1b2c <__ram_length+0x231b2c>
    2730:	05 02 00 40 	l.jal 4082830 <__stack+0x3c02834>
    2734:	46 d4 04 03 	l.jr r0
    2738:	03 d7 7e 01 	l.j ff5e1f3c <__stack+0xff161f40>
    273c:	00 05 02 00 	l.j 142f3c <__ram_length+0xc2f3c>
    2740:	40 46 d8 15 	.word 0x4046d815
    2744:	00 05 02 00 	l.j 142f44 <__ram_length+0xc2f44>
    2748:	40 46 e0 13 	.word 0x4046e013
    274c:	00 05 02 00 	l.j 142f4c <__ram_length+0xc2f4c>
    2750:	40 46 ec 19 	.word 0x4046ec19
    2754:	00 05 02 00 	l.j 142f54 <__ram_length+0xc2f54>
    2758:	40 46 fc 04 	.word 0x4046fc04
    275c:	11 03 a1 03 	l.bf 40eab68 <__stack+0x3c6ab6c>
    2760:	01 00 05 02 	l.j 4003b68 <__stack+0x3b83b6c>
    2764:	00 40 47 04 	l.j 1014374 <__stack+0xb94378>
    2768:	18 00 05 02 	l.movhi r0,0x502
    276c:	00 40 47 08 	l.j 101438c <__stack+0xb94390>
    2770:	10 00 05 02 	l.bf 3b78 <__rom_size-0x167d4>
    2774:	00 40 47 18 	l.j 10143d4 <__stack+0xb943d8>
    2778:	18 00 05 02 	l.movhi r0,0x502
    277c:	00 40 47 1c 	l.j 10143ec <__stack+0xb943f0>
    2780:	10 00 05 02 	l.bf 3b88 <__rom_size-0x167c4>
    2784:	00 40 47 20 	l.j 1014404 <__stack+0xb94408>
    2788:	18 00 05 02 	l.movhi r0,0x502
    278c:	00 40 47 30 	l.j 101444c <__stack+0xb94450>
    2790:	15 00 05 02 	l.nop 0x502
    2794:	00 40 47 34 	l.j 1014464 <__stack+0xb94468>
    2798:	16 00 05 02 	.word 0x16000502
    279c:	00 40 47 40 	l.j 101449c <__stack+0xb944a0>
    27a0:	16 00 05 02 	.word 0x16000502
    27a4:	00 40 47 44 	l.j 10144b4 <__stack+0xb944b8>
    27a8:	12 00 05 02 	l.bf f8003bb0 <__stack+0xf7b83bb4>
    27ac:	00 40 47 48 	l.j 10144cc <__stack+0xb944d0>
    27b0:	16 00 05 02 	.word 0x16000502
    27b4:	00 40 47 5c 	l.j 1014524 <__stack+0xb94528>
    27b8:	16 00 05 02 	.word 0x16000502
    27bc:	00 40 47 80 	l.j 10145bc <__stack+0xb945c0>
    27c0:	15 00 05 02 	l.nop 0x502
    27c4:	00 40 47 84 	l.j 10145d4 <__stack+0xb945d8>
    27c8:	2c 00 05 02 	.word 0x2c000502
    27cc:	00 40 47 8c 	l.j 10145fc <__stack+0xb94600>
    27d0:	03 6c 01 00 	l.j fdb02bd0 <__stack+0xfd682bd4>
    27d4:	05 02 00 40 	l.jal 40828d4 <__stack+0x3c028d8>
    27d8:	47 98 15 00 	l.jr r2
    27dc:	05 02 00 40 	l.jal 40828dc <__stack+0x3c028e0>
    27e0:	47 a4 03 6e 	l.jr r0
    27e4:	01 00 05 02 	l.j 4003bec <__stack+0x3b83bf0>
    27e8:	00 40 47 a8 	l.j 1014688 <__stack+0xb9468c>
    27ec:	29 00 05 02 	.word 0x29000502
    27f0:	00 40 47 ac 	l.j 10146a0 <__stack+0xb946a4>
    27f4:	15 00 05 02 	l.nop 0x502
    27f8:	00 40 47 b4 	l.j 10146c8 <__stack+0xb946cc>
    27fc:	13 00 05 02 	l.bf fc003c04 <__stack+0xfbb83c08>
    2800:	00 40 47 b8 	l.j 10146e0 <__stack+0xb946e4>
    2804:	15 00 05 02 	l.nop 0x502
    2808:	00 40 47 bc 	l.j 10146f8 <__stack+0xb946fc>
    280c:	13 00 05 02 	l.bf fc003c14 <__stack+0xfbb83c18>
    2810:	00 40 47 c4 	l.j 1014720 <__stack+0xb94724>
    2814:	17 00 05 02 	.word 0x17000502
    2818:	00 40 47 c8 	l.j 1014738 <__stack+0xb9473c>
    281c:	1c 00 05 02 	.word 0x1c000502
    2820:	00 40 47 cc 	l.j 1014750 <__stack+0xb94754>
    2824:	0c 00 05 02 	l.bnf 3c2c <__rom_size-0x16720>
    2828:	00 40 47 d0 	l.j 1014768 <__stack+0xb9476c>
    282c:	1c 00 05 02 	.word 0x1c000502
    2830:	00 40 47 d4 	l.j 1014780 <__stack+0xb94784>
    2834:	0c 00 05 02 	l.bnf 3c3c <__rom_size-0x16710>
    2838:	00 40 47 d8 	l.j 1014798 <__stack+0xb9479c>
    283c:	15 00 05 02 	l.nop 0x502
    2840:	00 40 47 e0 	l.j 10147c0 <__stack+0xb947c4>
    2844:	16 00 05 02 	.word 0x16000502
    2848:	00 40 47 e8 	l.j 10147e8 <__stack+0xb947ec>
    284c:	19 00 05 02 	l.movhi r8,0x502
    2850:	00 40 47 ec 	l.j 1014800 <__stack+0xb94804>
    2854:	15 00 05 02 	l.nop 0x502
    2858:	00 40 47 f8 	l.j 1014838 <__stack+0xb9483c>
    285c:	16 00 05 02 	.word 0x16000502
    2860:	00 40 48 10 	l.j 10148a0 <__stack+0xb948a4>
    2864:	15 00 05 02 	l.nop 0x502
    2868:	00 40 48 1c 	l.j 10148d8 <__stack+0xb948dc>
    286c:	15 00 05 02 	l.nop 0x502
    2870:	00 40 48 24 	l.j 1014900 <__stack+0xb94904>
    2874:	17 00 05 02 	.word 0x17000502
    2878:	00 40 48 34 	l.j 1014948 <__stack+0xb9494c>
    287c:	15 00 05 02 	l.nop 0x502
    2880:	00 40 48 40 	l.j 1014980 <__stack+0xb94984>
    2884:	16 00 05 02 	.word 0x16000502
    2888:	00 40 48 60 	l.j 1014a08 <__stack+0xb94a0c>
    288c:	16 00 05 02 	.word 0x16000502
    2890:	00 40 48 74 	l.j 1014a60 <__stack+0xb94a64>
    2894:	16 00 05 02 	.word 0x16000502
    2898:	00 40 48 78 	l.j 1014a78 <__stack+0xb94a7c>
    289c:	13 00 05 02 	l.bf fc003ca4 <__stack+0xfbb83ca8>
    28a0:	00 40 48 7c 	l.j 1014a90 <__stack+0xb94a94>
    28a4:	15 00 05 02 	l.nop 0x502
    28a8:	00 40 48 84 	l.j 1014ab8 <__stack+0xb94abc>
    28ac:	0e 00 05 02 	l.bnf f8003cb4 <__stack+0xf7b83cb8>
    28b0:	00 40 48 9c 	l.j 1014b20 <__stack+0xb94b24>
    28b4:	01 00 05 02 	l.j 4003cbc <__stack+0x3b83cc0>
    28b8:	00 40 48 a0 	l.j 1014b38 <__stack+0xb94b3c>
    28bc:	1e 00 05 02 	.word 0x1e000502
    28c0:	00 40 48 a4 	l.j 1014b50 <__stack+0xb94b54>
    28c4:	0a 00 05 02 	.word 0x0a000502
    28c8:	00 40 48 a8 	l.j 1014b68 <__stack+0xb94b6c>
    28cc:	1f 00 05 02 	.word 0x1f000502
    28d0:	00 40 48 ac 	l.j 1014b80 <__stack+0xb94b84>
    28d4:	03 75 01 00 	l.j fdd42cd4 <__stack+0xfd8c2cd8>
    28d8:	05 02 00 40 	l.jal 40829d8 <__stack+0x3c029dc>
    28dc:	48 b0 1e 00 	l.jalr r3
    28e0:	05 02 00 40 	l.jal 40829e0 <__stack+0x3c029e4>
    28e4:	48 b8 18 00 	l.jalr r3
    28e8:	05 02 00 40 	l.jal 40829e8 <__stack+0x3c029ec>
    28ec:	48 d4 04 0d 	l.jalr r0
    28f0:	03 fb 06 01 	l.j ffec40f4 <__stack+0xffa440f8>
    28f4:	00 05 02 00 	l.j 1430f4 <__ram_length+0xc30f4>
    28f8:	40 48 dc 19 	.word 0x4048dc19
    28fc:	00 05 02 00 	l.j 1430fc <__ram_length+0xc30fc>
    2900:	40 48 e0 0f 	.word 0x4048e00f
    2904:	00 05 02 00 	l.j 143104 <__ram_length+0xc3104>
    2908:	40 48 e8 1a 	.word 0x4048e81a
    290c:	00 05 02 00 	l.j 14310c <__ram_length+0xc310c>
    2910:	40 48 ec 0e 	.word 0x4048ec0e
    2914:	00 05 02 00 	l.j 143114 <__ram_length+0xc3114>
    2918:	40 48 f4 19 	.word 0x4048f419
    291c:	00 05 02 00 	l.j 14311c <__ram_length+0xc311c>
    2920:	40 48 f8 15 	.word 0x4048f815
    2924:	00 05 02 00 	l.j 143124 <__ram_length+0xc3124>
    2928:	40 48 fc 13 	.word 0x4048fc13
    292c:	00 05 02 00 	l.j 14312c <__ram_length+0xc312c>
    2930:	40 49 00 15 	.word 0x40490015
    2934:	00 05 02 00 	l.j 143134 <__ram_length+0xc3134>
    2938:	40 49 08 0e 	.word 0x4049080e
    293c:	00 05 02 00 	l.j 14313c <__ram_length+0xc313c>
    2940:	40 49 0c 1a 	.word 0x40490c1a
    2944:	00 05 02 00 	l.j 143144 <__ram_length+0xc3144>
    2948:	40 49 14 15 	.word 0x40491415
    294c:	00 05 02 00 	l.j 14314c <__ram_length+0xc314c>
    2950:	40 49 2c 16 	.word 0x40492c16
    2954:	00 05 02 00 	l.j 143154 <__ram_length+0xc3154>
    2958:	40 49 30 11 	.word 0x40493011
    295c:	00 05 02 00 	l.j 14315c <__ram_length+0xc315c>
    2960:	40 49 34 17 	.word 0x40493417
    2964:	00 05 02 00 	l.j 143164 <__ram_length+0xc3164>
    2968:	40 49 3c 1a 	.word 0x40493c1a
    296c:	00 05 02 00 	l.j 14316c <__ram_length+0xc316c>
    2970:	40 49 40 0f 	.word 0x4049400f
    2974:	00 05 02 00 	l.j 143174 <__ram_length+0xc3174>
    2978:	40 49 44 19 	.word 0x40494419
    297c:	00 05 02 00 	l.j 14317c <__ram_length+0xc317c>
    2980:	40 49 5c 04 	.word 0x40495c04
    2984:	11 03 fc 77 	l.bf 4101b60 <__stack+0x3c81b64>
    2988:	01 00 05 02 	l.j 4003d90 <__stack+0x3b83d94>
    298c:	00 40 49 64 	l.j 1014f1c <__stack+0xb94f20>
    2990:	1b 00 05 02 	l.movhi r24,0x502
    2994:	00 40 49 68 	l.j 1014f34 <__stack+0xb94f38>
    2998:	0d 00 05 02 	l.bnf 4003da0 <__stack+0x3b83da4>
    299c:	00 40 49 7c 	l.j 1014f8c <__stack+0xb94f90>
    29a0:	1b 00 05 02 	l.movhi r24,0x502
    29a4:	00 40 49 80 	l.j 1014fa4 <__stack+0xb94fa8>
    29a8:	0d 00 05 02 	l.bnf 4003db0 <__stack+0x3b83db4>
    29ac:	00 40 49 84 	l.j 1014fbc <__stack+0xb94fc0>
    29b0:	1b 00 05 02 	l.movhi r24,0x502
    29b4:	00 40 49 88 	l.j 1014fd4 <__stack+0xb94fd8>
    29b8:	0d 00 05 02 	l.bnf 4003dc0 <__stack+0x3b83dc4>
    29bc:	00 40 49 8c 	l.j 1014fec <__stack+0xb94ff0>
    29c0:	1b 00 05 02 	l.movhi r24,0x502
    29c4:	00 40 49 98 	l.j 1015024 <__stack+0xb95028>
    29c8:	15 00 05 02 	l.nop 0x502
    29cc:	00 40 49 9c 	l.j 101503c <__stack+0xb95040>
    29d0:	15 00 05 02 	l.nop 0x502
    29d4:	00 40 49 a8 	l.j 1015074 <__stack+0xb95078>
    29d8:	16 00 05 02 	.word 0x16000502
    29dc:	00 40 49 ac 	l.j 101508c <__stack+0xb95090>
    29e0:	12 00 05 02 	l.bf f8003de8 <__stack+0xf7b83dec>
    29e4:	00 40 49 b0 	l.j 10150a4 <__stack+0xb950a8>
    29e8:	16 00 05 02 	.word 0x16000502
    29ec:	00 40 49 c4 	l.j 10150fc <__stack+0xb95100>
    29f0:	1f 00 05 02 	.word 0x1f000502
    29f4:	00 40 49 c8 	l.j 1015114 <__stack+0xb95118>
    29f8:	03 75 01 00 	l.j fdd42df8 <__stack+0xfd8c2dfc>
    29fc:	05 02 00 40 	l.jal 4082afc <__stack+0x3c02b00>
    2a00:	49 cc 2b 00 	l.jalr r5
    2a04:	05 02 00 40 	l.jal 4082b04 <__stack+0x3c02b08>
    2a08:	49 d0 03 69 	l.jalr r0
    2a0c:	01 00 05 02 	l.j 4003e14 <__stack+0x3b83e18>
    2a10:	00 40 49 d4 	l.j 1015160 <__stack+0xb95164>
    2a14:	1f 00 05 02 	.word 0x1f000502
    2a18:	00 40 49 d8 	l.j 1015178 <__stack+0xb9517c>
    2a1c:	21 00 05 02 	l.trap 0x502
    2a20:	00 40 49 dc 	l.j 1015190 <__stack+0xb95194>
    2a24:	03 73 01 00 	l.j fdcc2e24 <__stack+0xfd842e28>
    2a28:	05 02 00 40 	l.jal 4082b28 <__stack+0x3c02b2c>
    2a2c:	49 e0 21 00 	l.jalr r4
    2a30:	05 02 00 40 	l.jal 4082b30 <__stack+0x3c02b34>
    2a34:	49 e4 17 00 	l.jalr r2
    2a38:	05 02 00 40 	l.jal 4082b38 <__stack+0x3c02b3c>
    2a3c:	49 ec 03 67 	l.jalr r0
    2a40:	01 00 05 02 	l.j 4003e48 <__stack+0x3b83e4c>
    2a44:	00 40 4a 04 	l.j 1015254 <__stack+0xb95258>
    2a48:	15 00 05 02 	l.nop 0x502
    2a4c:	00 40 4a 08 	l.j 101526c <__stack+0xb95270>
    2a50:	13 00 05 02 	l.bf fc003e58 <__stack+0xfbb83e5c>
    2a54:	00 40 4a 10 	l.j 1015294 <__stack+0xb95298>
    2a58:	15 00 05 02 	l.nop 0x502
    2a5c:	00 40 4a 14 	l.j 10152ac <__stack+0xb952b0>
    2a60:	22 00 05 02 	.word 0x22000502
    2a64:	00 40 4a 1c 	l.j 10152d4 <__stack+0xb952d8>
    2a68:	03 73 01 00 	l.j fdcc2e68 <__stack+0xfd842e6c>
    2a6c:	05 02 00 40 	l.jal 4082b6c <__stack+0x3c02b70>
    2a70:	4a 20 1d 00 	l.jalr r3
    2a74:	05 02 00 40 	l.jal 4082b74 <__stack+0x3c02b78>
    2a78:	4a 34 16 00 	l.jalr r2
    2a7c:	05 02 00 40 	l.jal 4082b7c <__stack+0x3c02b80>
    2a80:	4a 38 12 00 	l.jalr r2
    2a84:	05 02 00 40 	l.jal 4082b84 <__stack+0x3c02b88>
    2a88:	4a 3c 16 00 	l.jalr r2
    2a8c:	05 02 00 40 	l.jal 4082b8c <__stack+0x3c02b90>
    2a90:	4a 40 12 00 	l.jalr r2
    2a94:	05 02 00 40 	l.jal 4082b94 <__stack+0x3c02b98>
    2a98:	4a 44 17 00 	l.jalr r2
    2a9c:	05 02 00 40 	l.jal 4082b9c <__stack+0x3c02ba0>
    2aa0:	4a 48 13 00 	l.jalr r2
    2aa4:	05 02 00 40 	l.jal 4082ba4 <__stack+0x3c02ba8>
    2aa8:	4a 50 15 00 	l.jalr r2
    2aac:	05 02 00 40 	l.jal 4082bac <__stack+0x3c02bb0>
    2ab0:	4a 5c 15 00 	l.jalr r2
    2ab4:	05 02 00 40 	l.jal 4082bb4 <__stack+0x3c02bb8>
    2ab8:	4a 64 0d 00 	l.jalr r1
    2abc:	05 02 00 40 	l.jal 4082bbc <__stack+0x3c02bc0>
    2ac0:	4a 68 15 00 	l.jalr r2
    2ac4:	05 02 00 40 	l.jal 4082bc4 <__stack+0x3c02bc8>
    2ac8:	4a 7c 1e 00 	l.jalr r3
    2acc:	05 02 00 40 	l.jal 4082bcc <__stack+0x3c02bd0>
    2ad0:	4a 88 16 00 	l.jalr r2
    2ad4:	05 02 00 40 	l.jal 4082bd4 <__stack+0x3c02bd8>
    2ad8:	4a 8c 15 00 	l.jalr r2
    2adc:	05 02 00 40 	l.jal 4082bdc <__stack+0x3c02be0>
    2ae0:	4a 90 15 00 	l.jalr r2
    2ae4:	05 02 00 40 	l.jal 4082be4 <__stack+0x3c02be8>
    2ae8:	4a 98 15 00 	l.jalr r2
    2aec:	05 02 00 40 	l.jal 4082bec <__stack+0x3c02bf0>
    2af0:	4a a0 15 00 	l.jalr r2
    2af4:	05 02 00 40 	l.jal 4082bf4 <__stack+0x3c02bf8>
    2af8:	4a ac 03 59 	l.jalr r0
    2afc:	01 00 05 02 	l.j 4003f04 <__stack+0x3b83f08>
    2b00:	00 40 4a b0 	l.j 10155c0 <__stack+0xb955c4>
    2b04:	42 00 05 02 	.word 0x42000502
    2b08:	00 40 4a bc 	l.j 10155f8 <__stack+0xb955fc>
    2b0c:	15 00 05 02 	l.nop 0x502
    2b10:	00 40 4a c8 	l.j 1015630 <__stack+0xb95634>
    2b14:	15 00 05 02 	l.nop 0x502
    2b18:	00 40 4a d4 	l.j 1015668 <__stack+0xb9566c>
    2b1c:	15 00 05 02 	l.nop 0x502
    2b20:	00 40 4a e0 	l.j 10156a0 <__stack+0xb956a4>
    2b24:	03 4f 01 00 	l.j fd3c2f24 <__stack+0xfcf42f28>
    2b28:	05 02 00 40 	l.jal 4082c28 <__stack+0x3c02c2c>
    2b2c:	4a e4 40 00 	l.jalr r8
    2b30:	05 02 00 40 	l.jal 4082c30 <__stack+0x3c02c34>
    2b34:	4a f0 1c 00 	l.jalr r3
    2b38:	05 02 00 40 	l.jal 4082c38 <__stack+0x3c02c3c>
    2b3c:	4a f4 17 00 	l.jalr r2
    2b40:	05 02 00 40 	l.jal 4082c40 <__stack+0x3c02c44>
    2b44:	4a f8 15 00 	l.jalr r2
    2b48:	05 02 00 40 	l.jal 4082c48 <__stack+0x3c02c4c>
    2b4c:	4a fc 13 00 	l.jalr r2
    2b50:	05 02 00 40 	l.jal 4082c50 <__stack+0x3c02c54>
    2b54:	4b 00 15 00 	l.jalr r2
    2b58:	05 02 00 40 	l.jal 4082c58 <__stack+0x3c02c5c>
    2b5c:	4b 08 03 5b 	l.jalr r0
    2b60:	01 00 05 02 	l.j 4003f68 <__stack+0x3b83f6c>
    2b64:	00 40 4b 14 	l.j 10157b4 <__stack+0xb957b8>
    2b68:	01 00 05 02 	l.j 4003f70 <__stack+0x3b83f74>
    2b6c:	00 40 4b 18 	l.j 10157cc <__stack+0xb957d0>
    2b70:	b0 00 05 02 	l.muli r0,r0,0x502
    2b74:	00 40 4b 1c 	l.j 10157e4 <__stack+0xb957e8>
    2b78:	03 e4 7e 01 	l.j ff92237c <__stack+0xff4a2380>
    2b7c:	00 05 02 00 	l.j 14337c <__ram_length+0xc337c>
    2b80:	40 4b 24 b0 	.word 0x404b24b0
    2b84:	00 05 02 00 	l.j 143384 <__ram_length+0xc3384>
    2b88:	40 4b 34 15 	.word 0x404b3415
    2b8c:	00 05 02 00 	l.j 14338c <__ram_length+0xc338c>
    2b90:	40 4b 3c 15 	.word 0x404b3c15
    2b94:	00 05 02 00 	l.j 143394 <__ram_length+0xc3394>
    2b98:	40 4b 44 15 	.word 0x404b4415
    2b9c:	00 05 02 00 	l.j 14339c <__ram_length+0xc339c>
    2ba0:	40 4b 4c 15 	.word 0x404b4c15
    2ba4:	00 05 02 00 	l.j 1433a4 <__ram_length+0xc33a4>
    2ba8:	40 4b 54 16 	.word 0x404b5416
    2bac:	00 05 02 00 	l.j 1433ac <__ram_length+0xc33ac>
    2bb0:	40 4b 58 13 	.word 0x404b5813
    2bb4:	00 05 02 00 	l.j 1433b4 <__ram_length+0xc33b4>
    2bb8:	40 4b 5c 19 	.word 0x404b5c19
    2bbc:	00 05 02 00 	l.j 1433bc <__ram_length+0xc33bc>
    2bc0:	40 4b 60 0f 	.word 0x404b600f
    2bc4:	00 05 02 00 	l.j 1433c4 <__ram_length+0xc33c4>
    2bc8:	40 4b 64 15 	.word 0x404b6415
    2bcc:	00 05 02 00 	l.j 1433cc <__ram_length+0xc33cc>
    2bd0:	40 4b 6c 16 	.word 0x404b6c16
    2bd4:	00 05 02 00 	l.j 1433d4 <__ram_length+0xc33d4>
    2bd8:	40 4b 70 16 	.word 0x404b7016
    2bdc:	00 05 02 00 	l.j 1433dc <__ram_length+0xc33dc>
    2be0:	40 4b 7c 16 	.word 0x404b7c16
    2be4:	00 05 02 00 	l.j 1433e4 <__ram_length+0xc33e4>
    2be8:	40 4b bc 16 	.word 0x404bbc16
    2bec:	00 05 02 00 	l.j 1433ec <__ram_length+0xc33ec>
    2bf0:	40 4b c8 15 	.word 0x404bc815
    2bf4:	00 05 02 00 	l.j 1433f4 <__ram_length+0xc33f4>
    2bf8:	40 4b cc 13 	.word 0x404bcc13
    2bfc:	00 05 02 00 	l.j 1433fc <__ram_length+0xc33fc>
    2c00:	40 4b d0 15 	.word 0x404bd015
    2c04:	00 05 02 00 	l.j 143404 <__ram_length+0xc3404>
    2c08:	40 4b d4 13 	.word 0x404bd413
    2c0c:	00 05 02 00 	l.j 14340c <__ram_length+0xc340c>
    2c10:	40 4b d8 15 	.word 0x404bd815
    2c14:	00 05 02 00 	l.j 143414 <__ram_length+0xc3414>
    2c18:	40 4b e0 13 	.word 0x404be013
    2c1c:	00 05 02 00 	l.j 14341c <__ram_length+0xc341c>
    2c20:	40 4b e4 17 	.word 0x404be417
    2c24:	00 05 02 00 	l.j 143424 <__ram_length+0xc3424>
    2c28:	40 4c 04 16 	.word 0x404c0416
    2c2c:	00 05 02 00 	l.j 14342c <__ram_length+0xc342c>
    2c30:	40 4c 08 15 	.word 0x404c0815
    2c34:	00 05 02 00 	l.j 143434 <__ram_length+0xc3434>
    2c38:	40 4c 0c 13 	.word 0x404c0c13
    2c3c:	00 05 02 00 	l.j 14343c <__ram_length+0xc343c>
    2c40:	40 4c 18 15 	.word 0x404c1815
    2c44:	00 05 02 00 	l.j 143444 <__ram_length+0xc3444>
    2c48:	40 4c 20 03 	.word 0x404c2003
    2c4c:	fa 7e 01 00 	l.cust7 
    2c50:	05 02 00 40 	l.jal 4082d50 <__stack+0x3c02d54>
    2c54:	4c 28 95 00 	l.maci r8,0xffff9500
    2c58:	05 02 00 40 	l.jal 4082d58 <__stack+0x3c02d5c>
    2c5c:	4c 48 03 ff 	l.maci r8,0x3ff
    2c60:	7e 01 00 05 	l.cust4 
    2c64:	02 00 40 4c 	l.j f8012d94 <__stack+0xf7b92d98>
    2c68:	54 15 00 05 	.word 0x54150005
    2c6c:	02 00 40 4c 	l.j f8012d9c <__stack+0xf7b92da0>
    2c70:	58 13 00 05 	.word 0x58130005
    2c74:	02 00 40 4c 	l.j f8012da4 <__stack+0xf7b92da8>
    2c78:	5c 17 00 05 	.word 0x5c170005
    2c7c:	02 00 40 4c 	l.j f8012dac <__stack+0xf7b92db0>
    2c80:	7c 04 0d 03 	l.cust4 
    2c84:	97 07 01 00 	l.lhz r24,0x100(r7)
    2c88:	05 02 00 40 	l.jal 4082d88 <__stack+0x3c02d8c>
    2c8c:	4c 88 1d 00 	l.maci r8,0x1d00
    2c90:	05 02 00 40 	l.jal 4082d90 <__stack+0x3c02d94>
    2c94:	4c 8c 13 00 	l.maci r12,0x1300
    2c98:	05 02 00 40 	l.jal 4082d98 <__stack+0x3c02d9c>
    2c9c:	4c 90 16 00 	l.maci r16,0x1600
    2ca0:	05 02 00 40 	l.jal 4082da0 <__stack+0x3c02da4>
    2ca4:	4c 94 0a 00 	l.maci r20,0xa00
    2ca8:	05 02 00 40 	l.jal 4082da8 <__stack+0x3c02dac>
    2cac:	4c b8 01 00 	l.maci r24,0x100
    2cb0:	05 02 00 40 	l.jal 4082db0 <__stack+0x3c02db4>
    2cb4:	4c c0 1c 00 	l.maci r0,0x1c00
    2cb8:	05 02 00 40 	l.jal 4082db8 <__stack+0x3c02dbc>
    2cbc:	4c c4 15 00 	l.maci r4,0x1500
    2cc0:	05 02 00 40 	l.jal 4082dc0 <__stack+0x3c02dc4>
    2cc4:	4c c8 11 00 	l.maci r8,0x1100
    2cc8:	05 02 00 40 	l.jal 4082dc8 <__stack+0x3c02dcc>
    2ccc:	4c d0 17 00 	l.maci r16,0x1700
    2cd0:	05 02 00 40 	l.jal 4082dd0 <__stack+0x3c02dd4>
    2cd4:	4c d4 15 00 	l.maci r20,0x1500
    2cd8:	05 02 00 40 	l.jal 4082dd8 <__stack+0x3c02ddc>
    2cdc:	4c d8 13 00 	l.maci r24,0x1300
    2ce0:	05 02 00 40 	l.jal 4082de0 <__stack+0x3c02de4>
    2ce4:	4c dc 15 00 	l.maci r28,0x1500
    2ce8:	05 02 00 40 	l.jal 4082de8 <__stack+0x3c02dec>
    2cec:	4c e4 13 00 	l.maci r4,0x1300
    2cf0:	05 02 00 40 	l.jal 4082df0 <__stack+0x3c02df4>
    2cf4:	4c f4 16 00 	l.maci r20,0x1600
    2cf8:	05 02 00 40 	l.jal 4082df8 <__stack+0x3c02dfc>
    2cfc:	4c f8 12 00 	l.maci r24,0x1200
    2d00:	05 02 00 40 	l.jal 4082e00 <__stack+0x3c02e04>
    2d04:	4c fc 13 00 	l.maci r28,0x1300
    2d08:	05 02 00 40 	l.jal 4082e08 <__stack+0x3c02e0c>
    2d0c:	4d 00 17 00 	l.maci r0,0x1700
    2d10:	05 02 00 40 	l.jal 4082e10 <__stack+0x3c02e14>
    2d14:	4d 10 18 00 	l.maci r16,0x1800
    2d18:	05 02 00 40 	l.jal 4082e18 <__stack+0x3c02e1c>
    2d1c:	4d 2c 17 00 	l.maci r12,0x1700
    2d20:	05 02 00 40 	l.jal 4082e20 <__stack+0x3c02e24>
    2d24:	4d 44 03 74 	l.maci r4,0x374
    2d28:	01 00 05 02 	l.j 4004130 <__stack+0x3b84134>
    2d2c:	00 40 4d 50 	l.j 101626c <__stack+0xb96270>
    2d30:	29 00 05 02 	.word 0x29000502
    2d34:	00 40 4d 80 	l.j 1016334 <__stack+0xb96338>
    2d38:	04 0f 03 e3 	l.jal 3c3cc4 <__ram_length+0x343cc4>
    2d3c:	7b 01 00 05 	l.cust3 
    2d40:	02 00 40 4d 	l.j f8012e74 <__stack+0xf7b92e78>
    2d44:	9c 19 00 05 	l.addi r0,r25,0x5
    2d48:	02 00 40 4d 	l.j f8012e7c <__stack+0xf7b92e80>
    2d4c:	a0 0f 00 05 	l.addic r0,r15,0x5
    2d50:	02 00 40 4d 	l.j f8012e84 <__stack+0xf7b92e88>
    2d54:	a4 19 00 05 	l.andi r0,r25,0x5
    2d58:	02 00 40 4d 	l.j f8012e8c <__stack+0xf7b92e90>
    2d5c:	a8 0f 00 05 	l.ori r0,r15,0x5
    2d60:	02 00 40 4d 	l.j f8012e94 <__stack+0xf7b92e98>
    2d64:	ac 19 00 05 	l.xori r0,r25,0x5
    2d68:	02 00 40 4d 	l.j f8012e9c <__stack+0xf7b92ea0>
    2d6c:	bc 16 00 05 	l.sfeqi r22,0x5
    2d70:	02 00 40 4d 	l.j f8012ea4 <__stack+0xf7b92ea8>
    2d74:	ec 04 11 03 	.word 0xec041103
    2d78:	cb 7b 01 00 	lf.add.s r27,r27,r0
    2d7c:	05 02 00 40 	l.jal 4082e7c <__stack+0x3c02e80>
    2d80:	4d f4 04 0f 	l.maci r20,0x40f
    2d84:	03 b5 04 01 	l.j fed43d88 <__stack+0xfe8c3d8c>
    2d88:	00 05 02 00 	l.j 143588 <__ram_length+0xc3588>
    2d8c:	40 4d fc 17 	.word 0x404dfc17
    2d90:	00 05 02 00 	l.j 143590 <__ram_length+0xc3590>
    2d94:	40 4e 0c 17 	.word 0x404e0c17
    2d98:	00 05 02 00 	l.j 143598 <__ram_length+0xc3598>
    2d9c:	40 4e 10 15 	.word 0x404e1015
    2da0:	00 05 02 00 	l.j 1435a0 <__ram_length+0xc35a0>
    2da4:	40 4e 14 15 	.word 0x404e1415
    2da8:	00 05 02 00 	l.j 1435a8 <__ram_length+0xc35a8>
    2dac:	40 4e 18 12 	.word 0x404e1812
    2db0:	00 05 02 00 	l.j 1435b0 <__ram_length+0xc35b0>
    2db4:	40 4e 1c 15 	.word 0x404e1c15
    2db8:	00 05 02 00 	l.j 1435b8 <__ram_length+0xc35b8>
    2dbc:	40 4e 20 16 	.word 0x404e2016
    2dc0:	00 05 02 00 	l.j 1435c0 <__ram_length+0xc35c0>
    2dc4:	40 4e 28 16 	.word 0x404e2816
    2dc8:	00 05 02 00 	l.j 1435c8 <__ram_length+0xc35c8>
    2dcc:	40 4e 38 17 	.word 0x404e3817
    2dd0:	00 05 02 00 	l.j 1435d0 <__ram_length+0xc35d0>
    2dd4:	40 4e 40 04 	.word 0x404e4004
    2dd8:	11 03 bd 7b 	l.bf 40f23c4 <__stack+0x3c723c8>
    2ddc:	01 00 05 02 	l.j 40041e4 <__stack+0x3b841e8>
    2de0:	00 40 4e 44 	l.j 10166f0 <__stack+0xb966f4>
    2de4:	16 00 05 02 	.word 0x16000502
    2de8:	00 40 4e 48 	l.j 1016708 <__stack+0xb9670c>
    2dec:	12 00 05 02 	l.bf f80041f4 <__stack+0xf7b841f8>
    2df0:	00 40 4e 4c 	l.j 1016720 <__stack+0xb96724>
    2df4:	16 00 05 02 	.word 0x16000502
    2df8:	00 40 4e 60 	l.j 1016778 <__stack+0xb9677c>
    2dfc:	16 00 05 02 	.word 0x16000502
    2e00:	00 40 4e 7c 	l.j 10167f0 <__stack+0xb967f4>
    2e04:	15 00 05 02 	l.nop 0x502
    2e08:	00 40 4e 80 	l.j 1016808 <__stack+0xb9680c>
    2e0c:	4e 00 05 02 	l.maci r0,0x502
    2e10:	00 40 4e 88 	l.j 1016830 <__stack+0xb96834>
    2e14:	03 4b 01 00 	l.j fd2c3214 <__stack+0xfce43218>
    2e18:	05 02 00 40 	l.jal 4082f18 <__stack+0x3c02f1c>
    2e1c:	4e 8c 15 00 	l.maci r12,0x1500
    2e20:	05 02 00 40 	l.jal 4082f20 <__stack+0x3c02f24>
    2e24:	4e 90 13 00 	l.maci r16,0x1300
    2e28:	05 02 00 40 	l.jal 4082f28 <__stack+0x3c02f2c>
    2e2c:	4e 98 15 00 	l.maci r24,0x1500
    2e30:	05 02 00 40 	l.jal 4082f30 <__stack+0x3c02f34>
    2e34:	4e a0 13 00 	l.maci r0,0x1300
    2e38:	05 02 00 40 	l.jal 4082f38 <__stack+0x3c02f3c>
    2e3c:	4e a4 17 00 	l.maci r4,0x1700
    2e40:	05 02 00 40 	l.jal 4082f40 <__stack+0x3c02f44>
    2e44:	4e c4 16 00 	l.maci r4,0x1600
    2e48:	05 02 00 40 	l.jal 4082f48 <__stack+0x3c02f4c>
    2e4c:	4e d0 15 00 	l.maci r16,0x1500
    2e50:	05 02 00 40 	l.jal 4082f50 <__stack+0x3c02f54>
    2e54:	4e d8 43 00 	l.maci r24,0x4300
    2e58:	05 02 00 40 	l.jal 4082f58 <__stack+0x3c02f5c>
    2e5c:	4e e0 03 4c 	l.maci r0,0x34c
    2e60:	01 00 05 02 	l.j 4004268 <__stack+0x3b8426c>
    2e64:	00 40 4f 0c 	l.j 1016a94 <__stack+0xb96a98>
    2e68:	1f 00 05 02 	.word 0x1f000502
    2e6c:	00 40 4f 24 	l.j 1016afc <__stack+0xb96b00>
    2e70:	13 00 05 02 	l.bf fc004278 <__stack+0xfbb8427c>
    2e74:	00 40 4f 28 	l.j 1016b14 <__stack+0xb96b18>
    2e78:	15 00 05 02 	l.nop 0x502
    2e7c:	00 40 4f 2c 	l.j 1016b2c <__stack+0xb96b30>
    2e80:	13 00 05 02 	l.bf fc004288 <__stack+0xfbb8428c>
    2e84:	00 40 4f 3c 	l.j 1016b74 <__stack+0xb96b78>
    2e88:	17 00 05 02 	.word 0x17000502
    2e8c:	00 40 4f 44 	l.j 1016b9c <__stack+0xb96ba0>
    2e90:	15 00 05 02 	l.nop 0x502
    2e94:	00 40 4f 48 	l.j 1016bb4 <__stack+0xb96bb8>
    2e98:	16 00 05 02 	.word 0x16000502
    2e9c:	00 40 4f 4c 	l.j 1016bcc <__stack+0xb96bd0>
    2ea0:	12 00 05 02 	l.bf f80042a8 <__stack+0xf7b842ac>
    2ea4:	00 40 4f 50 	l.j 1016be4 <__stack+0xb96be8>
    2ea8:	16 00 05 02 	.word 0x16000502
    2eac:	00 40 4f 5c 	l.j 1016c1c <__stack+0xb96c20>
    2eb0:	38 00 05 02 	.word 0x38000502
    2eb4:	00 40 4f 80 	l.j 1016cb4 <__stack+0xb96cb8>
    2eb8:	16 00 05 02 	.word 0x16000502
    2ebc:	00 40 4f 84 	l.j 1016ccc <__stack+0xb96cd0>
    2ec0:	15 00 05 02 	l.nop 0x502
    2ec4:	00 40 4f 88 	l.j 1016ce4 <__stack+0xb96ce8>
    2ec8:	15 00 05 02 	l.nop 0x502
    2ecc:	00 40 4f 8c 	l.j 1016cfc <__stack+0xb96d00>
    2ed0:	13 00 05 02 	l.bf fc0042d8 <__stack+0xfbb842dc>
    2ed4:	00 40 4f 90 	l.j 1016d14 <__stack+0xb96d18>
    2ed8:	15 00 05 02 	l.nop 0x502
    2edc:	00 40 4f 94 	l.j 1016d2c <__stack+0xb96d30>
    2ee0:	15 00 05 02 	l.nop 0x502
    2ee4:	00 40 4f 9c 	l.j 1016d54 <__stack+0xb96d58>
    2ee8:	1b 00 05 02 	l.movhi r24,0x502
    2eec:	00 40 4f a0 	l.j 1016d6c <__stack+0xb96d70>
    2ef0:	18 00 05 02 	l.movhi r0,0x502
    2ef4:	00 40 4f a4 	l.j 1016d84 <__stack+0xb96d88>
    2ef8:	10 00 05 02 	l.bf 4300 <__rom_size-0x1604c>
    2efc:	00 40 4f a8 	l.j 1016d9c <__stack+0xb96da0>
    2f00:	16 00 05 02 	.word 0x16000502
    2f04:	00 40 4f ac 	l.j 1016db4 <__stack+0xb96db8>
    2f08:	13 00 05 02 	l.bf fc004310 <__stack+0xfbb84314>
    2f0c:	00 40 4f b0 	l.j 1016dcc <__stack+0xb96dd0>
    2f10:	16 00 05 02 	.word 0x16000502
    2f14:	00 40 4f b4 	l.j 1016de4 <__stack+0xb96de8>
    2f18:	11 00 05 02 	l.bf 4004320 <__stack+0x3b84324>
    2f1c:	00 40 4f b8 	l.j 1016dfc <__stack+0xb96e00>
    2f20:	18 00 05 02 	l.movhi r0,0x502
    2f24:	00 40 4f bc 	l.j 1016e14 <__stack+0xb96e18>
    2f28:	11 00 05 02 	l.bf 4004330 <__stack+0x3b84334>
    2f2c:	00 40 4f c0 	l.j 1016e2c <__stack+0xb96e30>
    2f30:	16 00 05 02 	.word 0x16000502
    2f34:	00 40 4f c4 	l.j 1016e44 <__stack+0xb96e48>
    2f38:	13 00 05 02 	l.bf fc004340 <__stack+0xfbb84344>
    2f3c:	00 40 4f c8 	l.j 1016e5c <__stack+0xb96e60>
    2f40:	16 00 05 02 	.word 0x16000502
    2f44:	00 40 4f cc 	l.j 1016e74 <__stack+0xb96e78>
    2f48:	15 00 05 02 	l.nop 0x502
    2f4c:	00 40 4f d0 	l.j 1016e8c <__stack+0xb96e90>
    2f50:	15 00 05 02 	l.nop 0x502
    2f54:	00 40 4f d4 	l.j 1016ea4 <__stack+0xb96ea8>
    2f58:	04 0f 03 f5 	l.jal 3c3f2c <__ram_length+0x343f2c>
    2f5c:	03 01 00 05 	l.j fc042f70 <__stack+0xfbbc2f74>
    2f60:	02 00 40 4f 	l.j f801309c <__stack+0xf7b930a0>
    2f64:	dc 19 00 05 	l.sh 0x5(r25),r0
    2f68:	02 00 40 4f 	l.j f80130a4 <__stack+0xf7b930a8>
    2f6c:	ec 15 00 05 	.word 0xec150005
    2f70:	02 00 40 4f 	l.j f80130ac <__stack+0xf7b930b0>
    2f74:	f4 03 65 01 	l.cust6 
    2f78:	00 05 02 00 	l.j 143778 <__ram_length+0xc3778>
    2f7c:	40 4f f8 2f 	.word 0x404ff82f
    2f80:	00 05 02 00 	l.j 143780 <__ram_length+0xc3780>
    2f84:	40 4f fc 1b 	.word 0x404ffc1b
    2f88:	00 05 02 00 	l.j 143788 <__ram_length+0xc3788>
    2f8c:	40 50 00 15 	.word 0x40500015
    2f90:	00 05 02 00 	l.j 143790 <__ram_length+0xc3790>
    2f94:	40 50 04 13 	.word 0x40500413
    2f98:	00 05 02 00 	l.j 143798 <__ram_length+0xc3798>
    2f9c:	40 50 08 17 	.word 0x40500817
    2fa0:	00 05 02 00 	l.j 1437a0 <__ram_length+0xc37a0>
    2fa4:	40 50 14 15 	.word 0x40501415
    2fa8:	00 05 02 00 	l.j 1437a8 <__ram_length+0xc37a8>
    2fac:	40 50 24 1b 	.word 0x4050241b
    2fb0:	00 05 02 00 	l.j 1437b0 <__ram_length+0xc37b0>
    2fb4:	40 50 30 16 	.word 0x40503016
    2fb8:	00 05 02 00 	l.j 1437b8 <__ram_length+0xc37b8>
    2fbc:	40 50 6c 16 	.word 0x40506c16
    2fc0:	00 05 02 00 	l.j 1437c0 <__ram_length+0xc37c0>
    2fc4:	40 50 78 03 	.word 0x40507803
    2fc8:	72 01 00 05 	l.cust1 
    2fcc:	02 00 40 50 	l.j f801310c <__stack+0xf7b93110>
    2fd0:	88 2b 00 05 	l.lws r1,0x5(r11)
    2fd4:	02 00 40 50 	l.j f8013114 <__stack+0xf7b93118>
    2fd8:	90 12 00 05 	l.lbs r0,0x5(r18)
    2fdc:	02 00 40 50 	l.j f801311c <__stack+0xf7b93120>
    2fe0:	94 15 00 05 	l.lhz r0,0x5(r21)
    2fe4:	02 00 40 50 	l.j f8013124 <__stack+0xf7b93128>
    2fe8:	98 15 00 05 	l.lhs r0,0x5(r21)
    2fec:	02 00 40 50 	l.j f801312c <__stack+0xf7b93130>
    2ff0:	a0 11 00 05 	l.addic r0,r17,0x5
    2ff4:	02 00 40 50 	l.j f8013134 <__stack+0xf7b93138>
    2ff8:	a8 1a 00 05 	l.ori r0,r26,0x5
    2ffc:	02 00 40 50 	l.j f801313c <__stack+0xf7b93140>
    3000:	cc 04 11 03 	.word 0xcc041103
    3004:	ce 7a 01 00 	.word 0xce7a0100
    3008:	05 02 00 40 	l.jal 4083108 <__stack+0x3c0310c>
    300c:	50 d4 1c 00 	.word 0x50d41c00
    3010:	05 02 00 40 	l.jal 4083110 <__stack+0x3c03114>
    3014:	50 d8 0c 00 	.word 0x50d80c00
    3018:	05 02 00 40 	l.jal 4083118 <__stack+0x3c0311c>
    301c:	50 e8 1c 00 	.word 0x50e81c00
    3020:	05 02 00 40 	l.jal 4083120 <__stack+0x3c03124>
    3024:	50 ec 0c 00 	.word 0x50ec0c00
    3028:	05 02 00 40 	l.jal 4083128 <__stack+0x3c0312c>
    302c:	50 f0 1c 00 	.word 0x50f01c00
    3030:	05 02 00 40 	l.jal 4083130 <__stack+0x3c03134>
    3034:	51 00 15 00 	.word 0x51001500
    3038:	05 02 00 40 	l.jal 4083138 <__stack+0x3c0313c>
    303c:	51 04 16 00 	.word 0x51041600
    3040:	05 02 00 40 	l.jal 4083140 <__stack+0x3c03144>
    3044:	51 10 16 00 	.word 0x51101600
    3048:	05 02 00 40 	l.jal 4083148 <__stack+0x3c0314c>
    304c:	51 14 12 00 	.word 0x51141200
    3050:	05 02 00 40 	l.jal 4083150 <__stack+0x3c03154>
    3054:	51 18 16 00 	.word 0x51181600
    3058:	05 02 00 40 	l.jal 4083158 <__stack+0x3c0315c>
    305c:	51 2c 16 00 	.word 0x512c1600
    3060:	05 02 00 40 	l.jal 4083160 <__stack+0x3c03164>
    3064:	51 50 15 00 	.word 0x51501500
    3068:	05 02 00 40 	l.jal 4083168 <__stack+0x3c0316c>
    306c:	51 54 20 00 	.word 0x51542000
    3070:	05 02 00 40 	l.jal 4083170 <__stack+0x3c03174>
    3074:	51 5c 0e 00 	.word 0x515c0e00
    3078:	05 02 00 40 	l.jal 4083178 <__stack+0x3c0317c>
    307c:	51 60 13 00 	.word 0x51601300
    3080:	05 02 00 40 	l.jal 4083180 <__stack+0x3c03184>
    3084:	51 68 15 00 	.word 0x51681500
    3088:	05 02 00 40 	l.jal 4083188 <__stack+0x3c0318c>
    308c:	51 74 16 00 	.word 0x51741600
    3090:	05 02 00 40 	l.jal 4083190 <__stack+0x3c03194>
    3094:	51 98 16 00 	.word 0x51981600
    3098:	05 02 00 40 	l.jal 4083198 <__stack+0x3c0319c>
    309c:	51 ac 15 00 	.word 0x51ac1500
    30a0:	05 02 00 40 	l.jal 40831a0 <__stack+0x3c031a4>
    30a4:	51 b0 15 00 	.word 0x51b01500
    30a8:	05 02 00 40 	l.jal 40831a8 <__stack+0x3c031ac>
    30ac:	51 b8 0e 00 	.word 0x51b80e00
    30b0:	05 02 00 40 	l.jal 40831b0 <__stack+0x3c031b4>
    30b4:	51 d0 01 00 	.word 0x51d00100
    30b8:	05 02 00 40 	l.jal 40831b8 <__stack+0x3c031bc>
    30bc:	51 d4 1e 00 	.word 0x51d41e00
    30c0:	05 02 00 40 	l.jal 40831c0 <__stack+0x3c031c4>
    30c4:	51 d8 0a 00 	.word 0x51d80a00
    30c8:	05 02 00 40 	l.jal 40831c8 <__stack+0x3c031cc>
    30cc:	51 dc 1e 00 	.word 0x51dc1e00
    30d0:	05 02 00 40 	l.jal 40831d0 <__stack+0x3c031d4>
    30d4:	51 e4 16 00 	.word 0x51e41600
    30d8:	05 02 00 40 	l.jal 40831d8 <__stack+0x3c031dc>
    30dc:	51 ec 15 00 	.word 0x51ec1500
    30e0:	05 02 00 40 	l.jal 40831e0 <__stack+0x3c031e4>
    30e4:	51 f0 13 00 	.word 0x51f01300
    30e8:	05 02 00 40 	l.jal 40831e8 <__stack+0x3c031ec>
    30ec:	51 f4 15 00 	.word 0x51f41500
    30f0:	05 02 00 40 	l.jal 40831f0 <__stack+0x3c031f4>
    30f4:	51 fc 15 00 	.word 0x51fc1500
    30f8:	05 02 00 40 	l.jal 40831f8 <__stack+0x3c031fc>
    30fc:	52 04 15 00 	.word 0x52041500
    3100:	05 02 00 40 	l.jal 4083200 <__stack+0x3c03204>
    3104:	52 0c 15 00 	.word 0x520c1500
    3108:	05 02 00 40 	l.jal 4083208 <__stack+0x3c0320c>
    310c:	52 14 22 00 	.word 0x52142200
    3110:	05 02 00 40 	l.jal 4083210 <__stack+0x3c03214>
    3114:	52 1c 03 4b 	.word 0x521c034b
    3118:	01 00 05 02 	l.j 4004520 <__stack+0x3b84524>
    311c:	00 40 52 24 	l.j 10179ac <__stack+0xb979b0>
    3120:	42 00 05 02 	.word 0x42000502
    3124:	00 40 52 2c 	l.j 10179d4 <__stack+0xb979d8>
    3128:	01 00 05 02 	l.j 4004530 <__stack+0x3b84534>
    312c:	00 40 52 38 	l.j 1017a0c <__stack+0xb97a10>
    3130:	15 00 05 02 	l.nop 0x502
    3134:	00 40 52 44 	l.j 1017a44 <__stack+0xb97a48>
    3138:	15 00 05 02 	l.nop 0x502
    313c:	00 40 52 50 	l.j 1017a7c <__stack+0xb97a80>
    3140:	15 00 05 02 	l.nop 0x502
    3144:	00 40 52 5c 	l.j 1017ab4 <__stack+0xb97ab8>
    3148:	03 4f 01 00 	l.j fd3c3548 <__stack+0xfcf4354c>
    314c:	05 02 00 40 	l.jal 408324c <__stack+0x3c03250>
    3150:	52 60 40 00 	.word 0x52604000
    3154:	05 02 00 40 	l.jal 4083254 <__stack+0x3c03258>
    3158:	52 6c 1d 00 	.word 0x526c1d00
    315c:	05 02 00 40 	l.jal 408325c <__stack+0x3c03260>
    3160:	52 78 17 00 	.word 0x52781700
    3164:	05 02 00 40 	l.jal 4083264 <__stack+0x3c03268>
    3168:	52 7c 11 00 	.word 0x527c1100
    316c:	05 02 00 40 	l.jal 408326c <__stack+0x3c03270>
    3170:	52 80 18 00 	.word 0x52801800
    3174:	05 02 00 40 	l.jal 4083274 <__stack+0x3c03278>
    3178:	52 84 10 00 	.word 0x52841000
    317c:	05 02 00 40 	l.jal 408327c <__stack+0x3c03280>
    3180:	52 88 15 00 	.word 0x52881500
    3184:	05 02 00 40 	l.jal 4083284 <__stack+0x3c03288>
    3188:	52 90 16 00 	.word 0x52901600
    318c:	05 02 00 40 	l.jal 408328c <__stack+0x3c03290>
    3190:	52 98 18 00 	.word 0x52981800
    3194:	05 02 00 40 	l.jal 4083294 <__stack+0x3c03298>
    3198:	52 b4 04 0d 	.word 0x52b4040d
    319c:	03 a5 08 01 	l.j fe9451a0 <__stack+0xfe4c51a4>
    31a0:	00 05 02 00 	l.j 1439a0 <__ram_length+0xc39a0>
    31a4:	40 52 bc 19 	.word 0x4052bc19
    31a8:	00 05 02 00 	l.j 1439a8 <__ram_length+0xc39a8>
    31ac:	40 52 c0 0f 	.word 0x4052c00f
    31b0:	00 05 02 00 	l.j 1439b0 <__ram_length+0xc39b0>
    31b4:	40 52 c8 1a 	.word 0x4052c81a
    31b8:	00 05 02 00 	l.j 1439b8 <__ram_length+0xc39b8>
    31bc:	40 52 cc 0e 	.word 0x4052cc0e
    31c0:	00 05 02 00 	l.j 1439c0 <__ram_length+0xc39c0>
    31c4:	40 52 d4 19 	.word 0x4052d419
    31c8:	00 05 02 00 	l.j 1439c8 <__ram_length+0xc39c8>
    31cc:	40 52 d8 15 	.word 0x4052d815
    31d0:	00 05 02 00 	l.j 1439d0 <__ram_length+0xc39d0>
    31d4:	40 52 dc 13 	.word 0x4052dc13
    31d8:	00 05 02 00 	l.j 1439d8 <__ram_length+0xc39d8>
    31dc:	40 52 e0 15 	.word 0x4052e015
    31e0:	00 05 02 00 	l.j 1439e0 <__ram_length+0xc39e0>
    31e4:	40 52 e8 0e 	.word 0x4052e80e
    31e8:	00 05 02 00 	l.j 1439e8 <__ram_length+0xc39e8>
    31ec:	40 52 ec 1a 	.word 0x4052ec1a
    31f0:	00 05 02 00 	l.j 1439f0 <__ram_length+0xc39f0>
    31f4:	40 52 f4 15 	.word 0x4052f415
    31f8:	00 05 02 00 	l.j 1439f8 <__ram_length+0xc39f8>
    31fc:	40 53 0c 16 	.word 0x40530c16
    3200:	00 05 02 00 	l.j 143a00 <__ram_length+0xc3a00>
    3204:	40 53 10 11 	.word 0x40531011
    3208:	00 05 02 00 	l.j 143a08 <__ram_length+0xc3a08>
    320c:	40 53 14 17 	.word 0x40531417
    3210:	00 05 02 00 	l.j 143a10 <__ram_length+0xc3a10>
    3214:	40 53 1c 1a 	.word 0x40531c1a
    3218:	00 05 02 00 	l.j 143a18 <__ram_length+0xc3a18>
    321c:	40 53 20 0f 	.word 0x4053200f
    3220:	00 05 02 00 	l.j 143a20 <__ram_length+0xc3a20>
    3224:	40 53 24 19 	.word 0x40532419
    3228:	00 05 02 00 	l.j 143a28 <__ram_length+0xc3a28>
    322c:	40 53 3c 03 	.word 0x40533c03
    3230:	a6 7f 01 00 	l.andi r19,r31,0x100
    3234:	05 02 00 40 	l.jal 4083334 <__stack+0x3c03338>
    3238:	53 6c 1d 00 	.word 0x536c1d00
    323c:	05 02 00 40 	l.jal 408333c <__stack+0x3c03340>
    3240:	53 78 15 00 	.word 0x53781500
    3244:	05 02 00 40 	l.jal 4083344 <__stack+0x3c03348>
    3248:	53 80 16 00 	.word 0x53801600
    324c:	05 02 00 40 	l.jal 408334c <__stack+0x3c03350>
    3250:	53 90 16 00 	.word 0x53901600
    3254:	05 02 00 40 	l.jal 4083354 <__stack+0x3c03358>
    3258:	53 b0 16 00 	.word 0x53b01600
    325c:	05 02 00 40 	l.jal 408335c <__stack+0x3c03360>
    3260:	53 b8 15 00 	.word 0x53b81500
    3264:	05 02 00 40 	l.jal 4083364 <__stack+0x3c03368>
    3268:	53 c4 18 00 	.word 0x53c41800
    326c:	05 02 00 40 	l.jal 408336c <__stack+0x3c03370>
    3270:	53 cc 1b 00 	.word 0x53cc1b00
    3274:	05 02 00 40 	l.jal 4083374 <__stack+0x3c03378>
    3278:	53 dc 16 00 	.word 0x53dc1600
    327c:	05 02 00 40 	l.jal 408337c <__stack+0x3c03380>
    3280:	53 e0 15 00 	.word 0x53e01500
    3284:	05 02 00 40 	l.jal 4083384 <__stack+0x3c03388>
    3288:	53 e8 18 00 	.word 0x53e81800
    328c:	05 02 00 40 	l.jal 408338c <__stack+0x3c03390>
    3290:	53 ec 15 00 	.word 0x53ec1500
    3294:	05 02 00 40 	l.jal 4083394 <__stack+0x3c03398>
    3298:	53 f0 17 00 	.word 0x53f01700
    329c:	05 02 00 40 	l.jal 408339c <__stack+0x3c033a0>
    32a0:	54 00 16 00 	.word 0x54001600
    32a4:	05 02 00 40 	l.jal 40833a4 <__stack+0x3c033a8>
    32a8:	54 1c 17 00 	.word 0x541c1700
    32ac:	05 02 00 40 	l.jal 40833ac <__stack+0x3c033b0>
    32b0:	54 20 19 00 	.word 0x54201900
    32b4:	05 02 00 40 	l.jal 40833b4 <__stack+0x3c033b8>
    32b8:	54 30 16 00 	.word 0x54301600
    32bc:	05 02 00 40 	l.jal 40833bc <__stack+0x3c033c0>
    32c0:	54 78 15 00 	.word 0x54781500
    32c4:	05 02 00 40 	l.jal 40833c4 <__stack+0x3c033c8>
    32c8:	54 84 15 00 	.word 0x54841500
    32cc:	05 02 00 40 	l.jal 40833cc <__stack+0x3c033d0>
    32d0:	54 8c 18 00 	.word 0x548c1800
    32d4:	05 02 00 40 	l.jal 40833d4 <__stack+0x3c033d8>
    32d8:	54 ac 15 00 	.word 0x54ac1500
    32dc:	05 02 00 40 	l.jal 40833dc <__stack+0x3c033e0>
    32e0:	54 bc 18 00 	.word 0x54bc1800
    32e4:	05 02 00 40 	l.jal 40833e4 <__stack+0x3c033e8>
    32e8:	54 d0 03 5c 	.word 0x54d0035c
    32ec:	01 00 05 02 	l.j 40046f4 <__stack+0x3b846f8>
    32f0:	00 40 54 d4 	l.j 1018640 <__stack+0xb98644>
    32f4:	16 00 05 02 	.word 0x16000502
    32f8:	00 40 54 d8 	l.j 1018658 <__stack+0xb9865c>
    32fc:	1f 00 05 02 	.word 0x1f000502
    3300:	00 40 54 dc 	l.j 1018670 <__stack+0xb98674>
    3304:	16 00 05 02 	.word 0x16000502
    3308:	00 40 54 e0 	l.j 1018688 <__stack+0xb9868c>
    330c:	29 00 05 02 	.word 0x29000502
    3310:	00 40 54 e4 	l.j 10186a0 <__stack+0xb986a4>
    3314:	03 5c 01 00 	l.j fd703714 <__stack+0xfd283718>
    3318:	05 02 00 40 	l.jal 4083418 <__stack+0x3c0341c>
    331c:	54 e8 16 00 	.word 0x54e81600
    3320:	05 02 00 40 	l.jal 4083420 <__stack+0x3c03424>
    3324:	54 ec 1f 00 	.word 0x54ec1f00
    3328:	05 02 00 40 	l.jal 4083428 <__stack+0x3c0342c>
    332c:	54 f0 16 00 	.word 0x54f01600
    3330:	05 02 00 40 	l.jal 4083430 <__stack+0x3c03434>
    3334:	54 f4 29 00 	.word 0x54f42900
    3338:	05 02 00 40 	l.jal 4083438 <__stack+0x3c0343c>
    333c:	54 f8 03 5c 	.word 0x54f8035c
    3340:	01 00 05 02 	l.j 4004748 <__stack+0x3b8474c>
    3344:	00 40 55 14 	l.j 1018794 <__stack+0xb98798>
    3348:	3b 00 05 02 	.word 0x3b000502
    334c:	00 40 55 18 	l.j 10187ac <__stack+0xb987b0>
    3350:	19 00 05 02 	l.movhi r8,0x502
    3354:	00 40 55 48 	l.j 1018874 <__stack+0xb98878>
    3358:	03 8d 7f 01 	l.j fe362f5c <__stack+0xfdee2f60>
    335c:	00 05 02 00 	l.j 143b5c <__ram_length+0xc3b5c>
    3360:	40 55 48 1e 	.word 0x4055481e
    3364:	00 05 02 00 	l.j 143b64 <__ram_length+0xc3b64>
    3368:	40 55 4c 0a 	.word 0x40554c0a
    336c:	00 05 02 00 	l.j 143b6c <__ram_length+0xc3b6c>
    3370:	40 55 60 1e 	.word 0x4055601e
    3374:	00 05 02 00 	l.j 143b74 <__ram_length+0xc3b74>
    3378:	40 55 64 0a 	.word 0x4055640a
    337c:	00 05 02 00 	l.j 143b7c <__ram_length+0xc3b7c>
    3380:	40 55 68 1e 	.word 0x4055681e
    3384:	00 05 02 00 	l.j 143b84 <__ram_length+0xc3b84>
    3388:	40 55 6c 11 	.word 0x40556c11
    338c:	00 05 02 00 	l.j 143b8c <__ram_length+0xc3b8c>
    3390:	40 55 70 17 	.word 0x40557017
    3394:	00 05 02 00 	l.j 143b94 <__ram_length+0xc3b94>
    3398:	40 55 74 11 	.word 0x40557411
    339c:	00 05 02 00 	l.j 143b9c <__ram_length+0xc3b9c>
    33a0:	40 55 78 0d 	.word 0x4055780d
    33a4:	00 05 02 00 	l.j 143ba4 <__ram_length+0xc3ba4>
    33a8:	40 55 7c 1b 	.word 0x40557c1b
    33ac:	00 05 02 00 	l.j 143bac <__ram_length+0xc3bac>
    33b0:	40 55 80 17 	.word 0x40558017
    33b4:	00 05 02 00 	l.j 143bb4 <__ram_length+0xc3bb4>
    33b8:	40 55 90 16 	.word 0x40559016
    33bc:	00 05 02 00 	l.j 143bbc <__ram_length+0xc3bbc>
    33c0:	40 55 a8 16 	.word 0x4055a816
    33c4:	00 05 02 00 	l.j 143bc4 <__ram_length+0xc3bc4>
    33c8:	40 55 ac 15 	.word 0x4055ac15
    33cc:	00 05 02 00 	l.j 143bcc <__ram_length+0xc3bcc>
    33d0:	40 55 b4 18 	.word 0x4055b418
    33d4:	00 05 02 00 	l.j 143bd4 <__ram_length+0xc3bd4>
    33d8:	40 55 b8 15 	.word 0x4055b815
    33dc:	00 05 02 00 	l.j 143bdc <__ram_length+0xc3bdc>
    33e0:	40 55 bc 18 	.word 0x4055bc18
    33e4:	00 05 02 00 	l.j 143be4 <__ram_length+0xc3be4>
    33e8:	40 55 d4 16 	.word 0x4055d416
    33ec:	00 05 02 00 	l.j 143bec <__ram_length+0xc3bec>
    33f0:	40 55 f8 18 	.word 0x4055f818
    33f4:	00 05 02 00 	l.j 143bf4 <__ram_length+0xc3bf4>
    33f8:	40 55 fc 18 	.word 0x4055fc18
    33fc:	00 05 02 00 	l.j 143bfc <__ram_length+0xc3bfc>
    3400:	40 56 14 01 	.word 0x40561401
    3404:	00 05 02 00 	l.j 143c04 <__ram_length+0xc3c04>
    3408:	40 56 60 01 	.word 0x40566001
    340c:	00 05 02 00 	l.j 143c0c <__ram_length+0xc3c0c>
    3410:	40 56 80 01 	.word 0x40568001
    3414:	00 05 02 00 	l.j 143c14 <__ram_length+0xc3c14>
    3418:	40 56 84 17 	.word 0x40568417
    341c:	00 05 02 00 	l.j 143c1c <__ram_length+0xc3c1c>
    3420:	40 56 88 17 	.word 0x40568817
    3424:	00 05 02 00 	l.j 143c24 <__ram_length+0xc3c24>
    3428:	40 56 a4 04 	.word 0x4056a404
    342c:	16 03 a3 76 	.word 0x1603a376
    3430:	01 00 05 02 	l.j 4004838 <__stack+0x3b8483c>
    3434:	00 40 56 c4 	l.j 1018f44 <__stack+0xb98f48>
    3438:	1a 00 05 02 	l.movhi r16,0x502
    343c:	00 40 56 c8 	l.j 1018f5c <__stack+0xb98f60>
    3440:	0e 00 05 02 	l.bnf f8004848 <__stack+0xf7b8484c>
    3444:	00 40 56 cc 	l.j 1018f74 <__stack+0xb98f78>
    3448:	1a 00 05 02 	l.movhi r16,0x502
    344c:	00 40 56 d0 	l.j 1018f8c <__stack+0xb98f90>
    3450:	0e 00 05 02 	l.bnf f8004858 <__stack+0xf7b8485c>
    3454:	00 40 56 d4 	l.j 1018fa4 <__stack+0xb98fa8>
    3458:	1d 00 05 02 	.word 0x1d000502
    345c:	00 40 56 e0 	l.j 1018fdc <__stack+0xb98fe0>
    3460:	17 00 05 02 	.word 0x17000502
    3464:	00 40 56 f0 	l.j 1019024 <__stack+0xb99028>
    3468:	03 73 01 00 	l.j fdcc3868 <__stack+0xfd84386c>
    346c:	05 02 00 40 	l.jal 408356c <__stack+0x3c03570>
    3470:	56 f4 24 00 	.word 0x56f42400
    3474:	05 02 00 40 	l.jal 4083574 <__stack+0x3c03578>
    3478:	57 00 16 00 	.word 0x57001600
    347c:	05 02 00 40 	l.jal 408357c <__stack+0x3c03580>
    3480:	57 04 12 00 	.word 0x57041200
    3484:	05 02 00 40 	l.jal 4083584 <__stack+0x3c03588>
    3488:	57 08 16 00 	.word 0x57081600
    348c:	05 02 00 40 	l.jal 408358c <__stack+0x3c03590>
    3490:	57 0c 12 00 	.word 0x570c1200
    3494:	05 02 00 40 	l.jal 4083594 <__stack+0x3c03598>
    3498:	57 10 16 00 	.word 0x57101600
    349c:	05 02 00 40 	l.jal 408359c <__stack+0x3c035a0>
    34a0:	57 14 12 00 	.word 0x57141200
    34a4:	05 02 00 40 	l.jal 40835a4 <__stack+0x3c035a8>
    34a8:	57 20 18 00 	.word 0x57201800
    34ac:	05 02 00 40 	l.jal 40835ac <__stack+0x3c035b0>
    34b0:	57 24 15 00 	.word 0x57241500
    34b4:	05 02 00 40 	l.jal 40835b4 <__stack+0x3c035b8>
    34b8:	57 28 13 00 	.word 0x57281300
    34bc:	05 02 00 40 	l.jal 40835bc <__stack+0x3c035c0>
    34c0:	57 2c 15 00 	.word 0x572c1500
    34c4:	05 02 00 40 	l.jal 40835c4 <__stack+0x3c035c8>
    34c8:	57 30 13 00 	.word 0x57301300
    34cc:	05 02 00 40 	l.jal 40835cc <__stack+0x3c035d0>
    34d0:	57 38 03 6d 	.word 0x5738036d
    34d4:	01 00 05 02 	l.j 40048dc <__stack+0x3b848e0>
    34d8:	00 40 57 48 	l.j 10191f8 <__stack+0xb991fc>
    34dc:	2f 00 05 02 	.word 0x2f000502
    34e0:	00 40 57 54 	l.j 1019230 <__stack+0xb99234>
    34e4:	15 00 05 02 	l.nop 0x502
    34e8:	00 40 57 60 	l.j 1019268 <__stack+0xb9926c>
    34ec:	16 00 05 02 	.word 0x16000502
    34f0:	00 40 57 64 	l.j 1019280 <__stack+0xb99284>
    34f4:	15 00 05 02 	l.nop 0x502
    34f8:	00 40 57 68 	l.j 1019298 <__stack+0xb9929c>
    34fc:	13 00 05 02 	l.bf fc004904 <__stack+0xfbb84908>
    3500:	00 40 57 70 	l.j 10192c0 <__stack+0xb992c4>
    3504:	0f 00 05 02 	l.bnf fc00490c <__stack+0xfbb84910>
    3508:	00 40 57 7c 	l.j 10192f8 <__stack+0xb992fc>
    350c:	03 66 01 00 	l.j fd98390c <__stack+0xfd503910>
    3510:	05 02 00 40 	l.jal 4083610 <__stack+0x3c03614>
    3514:	57 84 2e 00 	.word 0x57842e00
    3518:	05 02 00 40 	l.jal 4083618 <__stack+0x3c0361c>
    351c:	57 88 1d 00 	.word 0x57881d00
    3520:	05 02 00 40 	l.jal 4083620 <__stack+0x3c03624>
    3524:	57 94 17 00 	.word 0x57941700
    3528:	05 02 00 40 	l.jal 4083628 <__stack+0x3c0362c>
    352c:	57 a4 15 00 	.word 0x57a41500
    3530:	05 02 00 40 	l.jal 4083630 <__stack+0x3c03634>
    3534:	57 b4 15 00 	.word 0x57b41500
    3538:	05 02 00 40 	l.jal 4083638 <__stack+0x3c0363c>
    353c:	57 b8 16 00 	.word 0x57b81600
    3540:	05 02 00 40 	l.jal 4083640 <__stack+0x3c03644>
    3544:	57 bc 03 56 	.word 0x57bc0356
    3548:	01 00 05 02 	l.j 4004950 <__stack+0x3b84954>
    354c:	00 40 57 c0 	l.j 101944c <__stack+0xb99450>
    3550:	3c 00 05 02 	.word 0x3c000502
    3554:	00 40 57 c4 	l.j 1019464 <__stack+0xb99468>
    3558:	16 00 05 02 	.word 0x16000502
    355c:	00 40 57 c8 	l.j 101947c <__stack+0xb99480>
    3560:	12 00 05 02 	l.bf f8004968 <__stack+0xf7b8496c>
    3564:	00 40 57 d4 	l.j 10194b4 <__stack+0xb994b8>
    3568:	18 00 05 02 	l.movhi r0,0x502
    356c:	00 40 57 e0 	l.j 10194ec <__stack+0xb994f0>
    3570:	19 00 05 02 	l.movhi r8,0x502
    3574:	00 40 58 08 	l.j 1019594 <__stack+0xb99598>
    3578:	04 0d 03 de 	l.jal 3444f0 <__ram_length+0x2c44f0>
    357c:	08 01 00 05 	.word 0x08010005
    3580:	02 00 40 58 	l.j f80136e0 <__stack+0xf7b936e4>
    3584:	0c 1d 00 05 	l.bnf 743598 <__stack+0x2c359c>
    3588:	02 00 40 58 	l.j f80136e8 <__stack+0xf7b936ec>
    358c:	10 0b 00 05 	l.bf 2c35a0 <__ram_length+0x2435a0>
    3590:	02 00 40 58 	l.j f80136f0 <__stack+0xf7b936f4>
    3594:	1c 1d 00 05 	.word 0x1c1d0005
    3598:	02 00 40 58 	l.j f80136f8 <__stack+0xf7b936fc>
    359c:	20 01 00 05 	.word 0x20010005
    35a0:	02 00 40 58 	l.j f8013700 <__stack+0xf7b93704>
    35a4:	30 16 00 05 	.word 0x30160005
    35a8:	02 00 40 58 	l.j f8013708 <__stack+0xf7b9370c>
    35ac:	34 15 00 05 	.word 0x34150005
    35b0:	02 00 40 58 	l.j f8013710 <__stack+0xf7b93714>
    35b4:	3c 18 00 05 	.word 0x3c180005
    35b8:	02 00 40 58 	l.j f8013718 <__stack+0xf7b9371c>
    35bc:	40 15 00 05 	.word 0x40150005
    35c0:	02 00 40 58 	l.j f8013720 <__stack+0xf7b93724>
    35c4:	44 18 00 05 	l.jr r0
    35c8:	02 00 40 58 	l.j f8013728 <__stack+0xf7b9372c>
    35cc:	5c 16 00 05 	.word 0x5c160005
    35d0:	02 00 40 58 	l.j f8013730 <__stack+0xf7b93734>
    35d4:	80 18 00 05 	l.ld r0,0x5(r24)
    35d8:	02 00 40 58 	l.j f8013738 <__stack+0xf7b9373c>
    35dc:	84 18 00 05 	l.lwz r0,0x5(r24)
    35e0:	02 00 40 58 	l.j f8013740 <__stack+0xf7b93744>
    35e4:	9c 01 00 05 	l.addi r0,r1,0x5
    35e8:	02 00 40 58 	l.j f8013748 <__stack+0xf7b9374c>
    35ec:	e4 01 00 05 	l.sfeq r1,r0
    35f0:	02 00 40 59 	l.j f8013754 <__stack+0xf7b93758>
    35f4:	04 17 00 05 	l.jal 5c3608 <__stack+0x14360c>
    35f8:	02 00 40 59 	l.j f801375c <__stack+0xf7b93760>
    35fc:	1c 04 11 03 	.word 0x1c041103
    3600:	fc 76 01 00 	l.cust8 
    3604:	05 02 00 40 	l.jal 4083704 <__stack+0x3c03708>
    3608:	59 20 1a 00 	.word 0x59201a00
    360c:	05 02 00 40 	l.jal 408370c <__stack+0x3c03710>
    3610:	59 2c 0e 00 	.word 0x592c0e00
    3614:	05 02 00 40 	l.jal 4083714 <__stack+0x3c03718>
    3618:	59 3c 1a 00 	.word 0x593c1a00
    361c:	05 02 00 40 	l.jal 408371c <__stack+0x3c03720>
    3620:	59 40 15 00 	.word 0x59401500
    3624:	05 02 00 40 	l.jal 4083724 <__stack+0x3c03728>
    3628:	59 48 0d 00 	.word 0x59480d00
    362c:	05 02 00 40 	l.jal 408372c <__stack+0x3c03730>
    3630:	59 4c 1b 00 	.word 0x594c1b00
    3634:	05 02 00 40 	l.jal 4083734 <__stack+0x3c03738>
    3638:	59 50 15 00 	.word 0x59501500
    363c:	05 02 00 40 	l.jal 408373c <__stack+0x3c03740>
    3640:	59 58 15 00 	.word 0x59581500
    3644:	05 02 00 40 	l.jal 4083744 <__stack+0x3c03748>
    3648:	59 5c 13 00 	.word 0x595c1300
    364c:	05 02 00 40 	l.jal 408374c <__stack+0x3c03750>
    3650:	59 64 15 00 	.word 0x59641500
    3654:	05 02 00 40 	l.jal 4083754 <__stack+0x3c03758>
    3658:	59 6c 01 00 	.word 0x596c0100
    365c:	05 02 00 40 	l.jal 408375c <__stack+0x3c03760>
    3660:	59 7c 01 00 	.word 0x597c0100
    3664:	05 02 00 40 	l.jal 4083764 <__stack+0x3c03768>
    3668:	59 80 15 00 	.word 0x59801500
    366c:	05 02 00 40 	l.jal 408376c <__stack+0x3c03770>
    3670:	59 a4 15 00 	.word 0x59a41500
    3674:	05 02 00 40 	l.jal 4083774 <__stack+0x3c03778>
    3678:	59 b0 01 00 	.word 0x59b00100
    367c:	05 02 00 40 	l.jal 408377c <__stack+0x3c03780>
    3680:	59 c0 15 00 	.word 0x59c01500
    3684:	05 02 00 40 	l.jal 4083784 <__stack+0x3c03788>
    3688:	59 c8 19 00 	.word 0x59c81900
    368c:	05 02 00 40 	l.jal 408378c <__stack+0x3c03790>
    3690:	59 cc 0f 00 	.word 0x59cc0f00
    3694:	05 02 00 40 	l.jal 4083794 <__stack+0x3c03798>
    3698:	59 d0 16 00 	.word 0x59d01600
    369c:	05 02 00 40 	l.jal 408379c <__stack+0x3c037a0>
    36a0:	59 e4 17 00 	.word 0x59e41700
    36a4:	05 02 00 40 	l.jal 40837a4 <__stack+0x3c037a8>
    36a8:	59 ec 01 00 	.word 0x59ec0100
    36ac:	05 02 00 40 	l.jal 40837ac <__stack+0x3c037b0>
    36b0:	59 fc 15 00 	.word 0x59fc1500
    36b4:	05 02 00 40 	l.jal 40837b4 <__stack+0x3c037b8>
    36b8:	5a 18 12 00 	.word 0x5a181200
    36bc:	05 02 00 40 	l.jal 40837bc <__stack+0x3c037c0>
    36c0:	5a 24 9b 00 	.word 0x5a249b00
    36c4:	05 02 00 40 	l.jal 40837c4 <__stack+0x3c037c8>
    36c8:	5a 2c 03 ff 	.word 0x5a2c03ff
    36cc:	7e 01 00 05 	l.cust4 
    36d0:	02 00 40 5a 	l.j f8013838 <__stack+0xf7b9383c>
    36d4:	3c 15 00 05 	.word 0x3c150005
    36d8:	02 00 40 5a 	l.j f8013840 <__stack+0xf7b93844>
    36dc:	40 13 00 05 	.word 0x40130005
    36e0:	02 00 40 5a 	l.j f8013848 <__stack+0xf7b9384c>
    36e4:	44 15 00 05 	l.jr r0
    36e8:	02 00 40 5a 	l.j f8013850 <__stack+0xf7b93854>
    36ec:	50 15 00 05 	.word 0x50150005
    36f0:	02 00 40 5a 	l.j f8013858 <__stack+0xf7b9385c>
    36f4:	58 15 00 05 	.word 0x58150005
    36f8:	02 00 40 5a 	l.j f8013860 <__stack+0xf7b93864>
    36fc:	5c 13 00 05 	.word 0x5c130005
    3700:	02 00 40 5a 	l.j f8013868 <__stack+0xf7b9386c>
    3704:	60 15 00 05 	.word 0x60150005
    3708:	02 00 40 5a 	l.j f8013870 <__stack+0xf7b93874>
    370c:	6c 15 00 05 	.word 0x6c150005
    3710:	02 00 40 5a 	l.j f8013878 <__stack+0xf7b9387c>
    3714:	88 03 65 01 	l.lws r0,0x6501(r3)
    3718:	00 05 02 00 	l.j 143f18 <__ram_length+0xc3f18>
    371c:	40 5a 90 32 	.word 0x405a9032
    3720:	00 05 02 00 	l.j 143f20 <__ram_length+0xc3f20>
    3724:	40 5a 98 01 	.word 0x405a9801
    3728:	00 05 02 00 	l.j 143f28 <__ram_length+0xc3f28>
    372c:	40 5a a8 13 	.word 0x405aa813
    3730:	00 05 02 00 	l.j 143f30 <__ram_length+0xc3f30>
    3734:	40 5a b4 16 	.word 0x405ab416
    3738:	00 05 02 00 	l.j 143f38 <__ram_length+0xc3f38>
    373c:	40 5a c4 01 	.word 0x405ac401
    3740:	00 05 02 00 	l.j 143f40 <__ram_length+0xc3f40>
    3744:	40 5a d4 17 	.word 0x405ad417
    3748:	00 05 02 00 	l.j 143f48 <__ram_length+0xc3f48>
    374c:	40 5a d8 13 	.word 0x405ad813
    3750:	00 05 02 00 	l.j 143f50 <__ram_length+0xc3f50>
    3754:	40 5a e4 15 	.word 0x405ae415
    3758:	00 05 02 00 	l.j 143f58 <__ram_length+0xc3f58>
    375c:	40 5a ec 16 	.word 0x405aec16
    3760:	00 05 02 00 	l.j 143f60 <__ram_length+0xc3f60>
    3764:	40 5b 04 16 	.word 0x405b0416
    3768:	00 05 02 00 	l.j 143f68 <__ram_length+0xc3f68>
    376c:	40 5b 18 16 	.word 0x405b1816
    3770:	00 05 02 00 	l.j 143f70 <__ram_length+0xc3f70>
    3774:	40 5b 2c 17 	.word 0x405b2c17
    3778:	00 05 02 00 	l.j 143f78 <__ram_length+0xc3f78>
    377c:	40 5b 44 13 	.word 0x405b4413
    3780:	00 05 02 00 	l.j 143f80 <__ram_length+0xc3f80>
    3784:	40 5b 50 17 	.word 0x405b5017
    3788:	00 05 02 00 	l.j 143f88 <__ram_length+0xc3f88>
    378c:	40 5b 68 01 	.word 0x405b6801
    3790:	00 05 02 00 	l.j 143f90 <__ram_length+0xc3f90>
    3794:	40 5b 78 17 	.word 0x405b7817
    3798:	00 05 02 00 	l.j 143f98 <__ram_length+0xc3f98>
    379c:	40 5b 84 25 	.word 0x405b8425
    37a0:	00 05 02 00 	l.j 143fa0 <__ram_length+0xc3fa0>
    37a4:	40 5b 88 15 	.word 0x405b8815
    37a8:	00 05 02 00 	l.j 143fa8 <__ram_length+0xc3fa8>
    37ac:	40 5b 8c 13 	.word 0x405b8c13
    37b0:	00 05 02 00 	l.j 143fb0 <__ram_length+0xc3fb0>
    37b4:	40 5b 98 15 	.word 0x405b9815
    37b8:	00 05 02 00 	l.j 143fb8 <__ram_length+0xc3fb8>
    37bc:	40 5b 9c 15 	.word 0x405b9c15
    37c0:	00 05 02 00 	l.j 143fc0 <__ram_length+0xc3fc0>
    37c4:	40 5b a0 13 	.word 0x405ba013
    37c8:	00 05 02 00 	l.j 143fc8 <__ram_length+0xc3fc8>
    37cc:	40 5b a4 15 	.word 0x405ba415
    37d0:	00 05 02 00 	l.j 143fd0 <__ram_length+0xc3fd0>
    37d4:	40 5b ac 03 	.word 0x405bac03
    37d8:	5f 01 00 05 	.word 0x5f010005
    37dc:	02 00 40 5b 	l.j f8013948 <__stack+0xf7b9394c>
    37e0:	c0 38 00 05 	l.mtspr r24,r0,0x805
    37e4:	02 00 40 5b 	l.j f8013950 <__stack+0xf7b93954>
    37e8:	cc 1b 00 05 	.word 0xcc1b0005
    37ec:	02 00 40 5b 	l.j f8013958 <__stack+0xf7b9395c>
    37f0:	e4 16 00 05 	l.sfeq r22,r0
    37f4:	02 00 40 5b 	l.j f8013960 <__stack+0xf7b93964>
    37f8:	fc 16 00 05 	l.cust8 
    37fc:	02 00 40 5c 	l.j f801396c <__stack+0xf7b93970>
    3800:	0c 15 00 05 	l.bnf 543814 <__stack+0xc3818>
    3804:	02 00 40 5c 	l.j f8013974 <__stack+0xf7b93978>
    3808:	24 15 00 05 	l.rfe 
    380c:	02 00 40 5c 	l.j f801397c <__stack+0xf7b93980>
    3810:	2c 16 00 05 	.word 0x2c160005
    3814:	02 00 40 5c 	l.j f8013984 <__stack+0xf7b93988>
    3818:	44 16 00 05 	l.jr r0
    381c:	02 00 40 5c 	l.j f801398c <__stack+0xf7b93990>
    3820:	5c 17 00 05 	.word 0x5c170005
    3824:	02 00 40 5c 	l.j f8013994 <__stack+0xf7b93998>
    3828:	70 15 00 05 	l.cust1 
    382c:	02 00 40 5c 	l.j f801399c <__stack+0xf7b939a0>
    3830:	80 15 00 05 	l.ld r0,0x5(r21)
    3834:	02 00 40 5c 	l.j f80139a4 <__stack+0xf7b939a8>
    3838:	8c 1e 00 05 	l.lbz r0,0x5(r30)
    383c:	02 00 40 5c 	l.j f80139ac <__stack+0xf7b939b0>
    3840:	90 0a 00 05 	l.lbs r0,0x5(r10)
    3844:	02 00 40 5c 	l.j f80139b4 <__stack+0xf7b939b8>
    3848:	94 1e 00 05 	l.lhz r0,0x5(r30)
    384c:	02 00 40 5c 	l.j f80139bc <__stack+0xf7b939c0>
    3850:	9c 16 00 05 	l.addi r0,r22,0x5
    3854:	02 00 40 5c 	l.j f80139c4 <__stack+0xf7b939c8>
    3858:	ac 19 00 05 	l.xori r0,r25,0x5
    385c:	02 00 40 5c 	l.j f80139cc <__stack+0xf7b939d0>
    3860:	b4 15 00 05 	l.mfspr r0,r21,0x5
    3864:	02 00 40 5c 	l.j f80139d4 <__stack+0xf7b939d8>
    3868:	c4 40 00 05 	.word 0xc4400005
    386c:	02 00 40 5c 	l.j f80139dc <__stack+0xf7b939e0>
    3870:	cc 03 b9 7f 	.word 0xcc03b97f
    3874:	01 00 05 02 	l.j 4004c7c <__stack+0x3b84c80>
    3878:	00 40 5c e0 	l.j 101abf8 <__stack+0xb9abfc>
    387c:	33 00 05 02 	.word 0x33000502
    3880:	00 40 5c ec 	l.j 101ac30 <__stack+0xb9ac34>
    3884:	1b 00 05 02 	l.movhi r24,0x502
    3888:	00 40 5c f0 	l.j 101ac48 <__stack+0xb9ac4c>
    388c:	15 00 05 02 	l.nop 0x502
    3890:	00 40 5c f4 	l.j 101ac60 <__stack+0xb9ac64>
    3894:	13 00 05 02 	l.bf fc004c9c <__stack+0xfbb84ca0>
    3898:	00 40 5d 00 	l.j 101ac98 <__stack+0xb9ac9c>
    389c:	15 00 05 02 	l.nop 0x502
    38a0:	00 40 5d 08 	l.j 101acc0 <__stack+0xb9acc4>
    38a4:	16 00 05 02 	.word 0x16000502
    38a8:	00 40 5d 1c 	l.j 101ad18 <__stack+0xb9ad1c>
    38ac:	17 00 05 02 	.word 0x17000502
    38b0:	00 40 5d 30 	l.j 101ad70 <__stack+0xb9ad74>
    38b4:	15 00 05 02 	l.nop 0x502
    38b8:	00 40 5d 3c 	l.j 101ada8 <__stack+0xb9adac>
    38bc:	16 00 05 02 	.word 0x16000502
    38c0:	00 40 5d 48 	l.j 101ade0 <__stack+0xb9ade4>
    38c4:	1d 00 05 02 	.word 0x1d000502
    38c8:	00 40 5d 4c 	l.j 101adf8 <__stack+0xb9adfc>
    38cc:	0b 00 05 02 	.word 0x0b000502
    38d0:	00 40 5d 50 	l.j 101ae10 <__stack+0xb9ae14>
    38d4:	1d 00 05 02 	.word 0x1d000502
    38d8:	00 40 5d 54 	l.j 101ae28 <__stack+0xb9ae2c>
    38dc:	18 00 05 02 	l.movhi r0,0x502
    38e0:	00 40 5d 58 	l.j 101ae40 <__stack+0xb9ae44>
    38e4:	10 00 05 02 	l.bf 4cec <__rom_size-0x15660>
    38e8:	00 40 5d 5c 	l.j 101ae58 <__stack+0xb9ae5c>
    38ec:	16 00 05 02 	.word 0x16000502
    38f0:	00 40 5d 68 	l.j 101ae90 <__stack+0xb9ae94>
    38f4:	16 00 05 02 	.word 0x16000502
    38f8:	00 40 5d 70 	l.j 101aeb8 <__stack+0xb9aebc>
    38fc:	03 6b 01 00 	l.j fdac3cfc <__stack+0xfd643d00>
    3900:	05 02 00 40 	l.jal 4083a00 <__stack+0x3c03a04>
    3904:	5d 84 2d 00 	.word 0x5d842d00
    3908:	05 02 00 40 	l.jal 4083a08 <__stack+0x3c03a0c>
    390c:	5d 94 15 00 	.word 0x5d941500
    3910:	05 02 00 40 	l.jal 4083a10 <__stack+0x3c03a14>
    3914:	5d 9c 15 00 	.word 0x5d9c1500
    3918:	05 02 00 40 	l.jal 4083a18 <__stack+0x3c03a1c>
    391c:	5d a0 13 00 	.word 0x5da01300
    3920:	05 02 00 40 	l.jal 4083a20 <__stack+0x3c03a24>
    3924:	5d a4 1d 00 	.word 0x5da41d00
    3928:	05 02 00 40 	l.jal 4083a28 <__stack+0x3c03a2c>
    392c:	5d c0 0f 00 	.word 0x5dc00f00
    3930:	05 02 00 40 	l.jal 4083a30 <__stack+0x3c03a34>
    3934:	5d c4 15 00 	.word 0x5dc41500
    3938:	05 02 00 40 	l.jal 4083a38 <__stack+0x3c03a3c>
    393c:	5d d0 15 00 	.word 0x5dd01500
    3940:	05 02 00 40 	l.jal 4083a40 <__stack+0x3c03a44>
    3944:	5d d8 04 0f 	.word 0x5dd8040f
    3948:	03 ee 05 01 	l.j ffb84d4c <__stack+0xff704d50>
    394c:	00 05 02 00 	l.j 14414c <__ram_length+0xc414c>
    3950:	40 5d e4 1a 	.word 0x405de41a
    3954:	00 05 02 00 	l.j 144154 <__ram_length+0xc4154>
    3958:	40 5d ec 0e 	.word 0x405dec0e
    395c:	00 05 02 00 	l.j 14415c <__ram_length+0xc415c>
    3960:	40 5d f4 1a 	.word 0x405df41a
    3964:	00 05 02 00 	l.j 144164 <__ram_length+0xc4164>
    3968:	40 5d fc 0e 	.word 0x405dfc0e
    396c:	00 05 02 00 	l.j 14416c <__ram_length+0xc416c>
    3970:	40 5e 00 1a 	.word 0x405e001a
    3974:	00 05 02 00 	l.j 144174 <__ram_length+0xc4174>
    3978:	40 5e 04 0e 	.word 0x405e040e
    397c:	00 05 02 00 	l.j 14417c <__ram_length+0xc417c>
    3980:	40 5e 08 1a 	.word 0x405e081a
    3984:	00 05 02 00 	l.j 144184 <__ram_length+0xc4184>
    3988:	40 5e 0c 0e 	.word 0x405e0c0e
    398c:	00 05 02 00 	l.j 14418c <__ram_length+0xc418c>
    3990:	40 5e 10 1a 	.word 0x405e101a
    3994:	00 05 02 00 	l.j 144194 <__ram_length+0xc4194>
    3998:	40 5e 14 01 	.word 0x405e1401
    399c:	00 05 02 00 	l.j 14419c <__ram_length+0xc419c>
    39a0:	40 5e 44 38 	.word 0x405e4438
    39a4:	00 05 02 00 	l.j 1441a4 <__ram_length+0xc41a4>
    39a8:	40 5e 4c 03 	.word 0x405e4c03
    39ac:	5c 01 00 05 	.word 0x5c010005
    39b0:	02 00 40 5e 	l.j f8013b28 <__stack+0xf7b93b2c>
    39b4:	58 18 00 05 	.word 0x58180005
    39b8:	02 00 40 5e 	l.j f8013b30 <__stack+0xf7b93b34>
    39bc:	6c 15 00 05 	.word 0x6c150005
    39c0:	02 00 40 5e 	l.j f8013b38 <__stack+0xf7b93b3c>
    39c4:	70 13 00 05 	l.cust1 
    39c8:	02 00 40 5e 	l.j f8013b40 <__stack+0xf7b93b44>
    39cc:	74 15 00 05 	l.cust2 
    39d0:	02 00 40 5e 	l.j f8013b48 <__stack+0xf7b93b4c>
    39d4:	78 13 00 05 	l.cust3 
    39d8:	02 00 40 5e 	l.j f8013b50 <__stack+0xf7b93b54>
    39dc:	7c 15 00 05 	l.cust4 
    39e0:	02 00 40 5e 	l.j f8013b58 <__stack+0xf7b93b5c>
    39e4:	90 13 00 05 	l.lbs r0,0x5(r19)
    39e8:	02 00 40 5e 	l.j f8013b60 <__stack+0xf7b93b64>
    39ec:	94 15 00 05 	l.lhz r0,0x5(r21)
    39f0:	02 00 40 5e 	l.j f8013b68 <__stack+0xf7b93b6c>
    39f4:	a0 15 00 05 	l.addic r0,r21,0x5
    39f8:	02 00 40 5e 	l.j f8013b70 <__stack+0xf7b93b74>
    39fc:	b0 16 00 05 	l.muli r0,r22,0x5
    3a00:	02 00 40 5e 	l.j f8013b78 <__stack+0xf7b93b7c>
    3a04:	c0 16 00 05 	l.mtspr r22,r0,0x5
    3a08:	02 00 40 5e 	l.j f8013b80 <__stack+0xf7b93b84>
    3a0c:	e4 16 00 05 	l.sfeq r22,r0
    3a10:	02 00 40 5e 	l.j f8013b88 <__stack+0xf7b93b8c>
    3a14:	ec 16 00 05 	.word 0xec160005
    3a18:	02 00 40 5e 	l.j f8013b90 <__stack+0xf7b93b94>
    3a1c:	fc 15 00 05 	l.cust8 
    3a20:	02 00 40 5f 	l.j f8013b9c <__stack+0xf7b93ba0>
    3a24:	1c 15 00 05 	.word 0x1c150005
    3a28:	02 00 40 5f 	l.j f8013ba4 <__stack+0xf7b93ba8>
    3a2c:	20 15 00 05 	.word 0x20150005
    3a30:	02 00 40 5f 	l.j f8013bac <__stack+0xf7b93bb0>
    3a34:	24 13 00 05 	l.rfe 
    3a38:	02 00 40 5f 	l.j f8013bb4 <__stack+0xf7b93bb8>
    3a3c:	2c 15 00 05 	.word 0x2c150005
    3a40:	02 00 40 5f 	l.j f8013bbc <__stack+0xf7b93bc0>
    3a44:	30 13 00 05 	.word 0x30130005
    3a48:	02 00 40 5f 	l.j f8013bc4 <__stack+0xf7b93bc8>
    3a4c:	40 15 00 05 	.word 0x40150005
    3a50:	02 00 40 5f 	l.j f8013bcc <__stack+0xf7b93bd0>
    3a54:	64 15 00 05 	.word 0x64150005
    3a58:	02 00 40 5f 	l.j f8013bd4 <__stack+0xf7b93bd8>
    3a5c:	90 16 00 05 	l.lbs r0,0x5(r22)
    3a60:	02 00 40 5f 	l.j f8013bdc <__stack+0xf7b93be0>
    3a64:	98 15 00 05 	l.lhs r0,0x5(r21)
    3a68:	02 00 40 5f 	l.j f8013be4 <__stack+0xf7b93be8>
    3a6c:	a4 15 00 05 	l.andi r0,r21,0x5
    3a70:	02 00 40 5f 	l.j f8013bec <__stack+0xf7b93bf0>
    3a74:	b4 15 00 05 	l.mfspr r0,r21,0x5
    3a78:	02 00 40 5f 	l.j f8013bf4 <__stack+0xf7b93bf8>
    3a7c:	c8 16 00 05 	lf.ftoi.s r0,r22
    3a80:	02 00 40 5f 	l.j f8013bfc <__stack+0xf7b93c00>
    3a84:	e4 15 00 05 	l.sfeq r21,r0
    3a88:	02 00 40 5f 	l.j f8013c04 <__stack+0xf7b93c08>
    3a8c:	fc 16 00 05 	l.cust8 
    3a90:	02 00 40 60 	l.j f8013c10 <__stack+0xf7b93c14>
    3a94:	00 16 00 05 	l.j 583aa8 <__stack+0x103aac>
    3a98:	02 00 40 60 	l.j f8013c18 <__stack+0xf7b93c1c>
    3a9c:	24 1a 00 05 	l.rfe 
    3aa0:	02 00 40 60 	l.j f8013c20 <__stack+0xf7b93c24>
    3aa4:	30 15 00 05 	.word 0x30150005
    3aa8:	02 00 40 60 	l.j f8013c28 <__stack+0xf7b93c2c>
    3aac:	34 13 00 05 	.word 0x34130005
    3ab0:	02 00 40 60 	l.j f8013c30 <__stack+0xf7b93c34>
    3ab4:	38 16 00 05 	.word 0x38160005
    3ab8:	02 00 40 60 	l.j f8013c38 <__stack+0xf7b93c3c>
    3abc:	3c 12 00 05 	.word 0x3c120005
    3ac0:	02 00 40 60 	l.j f8013c40 <__stack+0xf7b93c44>
    3ac4:	40 15 00 05 	.word 0x40150005
    3ac8:	02 00 40 60 	l.j f8013c48 <__stack+0xf7b93c4c>
    3acc:	44 15 00 05 	l.jr r0
    3ad0:	02 00 40 60 	l.j f8013c50 <__stack+0xf7b93c54>
    3ad4:	48 16 00 05 	l.jalr r0
    3ad8:	02 00 40 60 	l.j f8013c58 <__stack+0xf7b93c5c>
    3adc:	50 15 00 05 	.word 0x50150005
    3ae0:	02 00 40 60 	l.j f8013c60 <__stack+0xf7b93c64>
    3ae4:	58 1a 00 05 	.word 0x581a0005
    3ae8:	02 00 40 60 	l.j f8013c68 <__stack+0xf7b93c6c>
    3aec:	68 16 00 05 	.word 0x68160005
    3af0:	02 00 40 60 	l.j f8013c70 <__stack+0xf7b93c74>
    3af4:	6c 12 00 05 	.word 0x6c120005
    3af8:	02 00 40 60 	l.j f8013c78 <__stack+0xf7b93c7c>
    3afc:	70 18 00 05 	l.cust1 
    3b00:	02 00 40 60 	l.j f8013c80 <__stack+0xf7b93c84>
    3b04:	74 10 00 05 	l.cust2 
    3b08:	02 00 40 60 	l.j f8013c88 <__stack+0xf7b93c8c>
    3b0c:	78 18 00 05 	l.cust3 
    3b10:	02 00 40 60 	l.j f8013c90 <__stack+0xf7b93c94>
    3b14:	7c 10 00 05 	l.cust4 
    3b18:	02 00 40 60 	l.j f8013c98 <__stack+0xf7b93c9c>
    3b1c:	80 15 00 05 	l.ld r0,0x5(r21)
    3b20:	02 00 40 60 	l.j f8013ca0 <__stack+0xf7b93ca4>
    3b24:	84 16 00 05 	l.lwz r0,0x5(r22)
    3b28:	02 00 40 60 	l.j f8013ca8 <__stack+0xf7b93cac>
    3b2c:	88 12 00 05 	l.lws r0,0x5(r18)
    3b30:	02 00 40 60 	l.j f8013cb0 <__stack+0xf7b93cb4>
    3b34:	8c 17 00 05 	l.lbz r0,0x5(r23)
    3b38:	02 00 40 60 	l.j f8013cb8 <__stack+0xf7b93cbc>
    3b3c:	90 13 00 05 	l.lbs r0,0x5(r19)
    3b40:	02 00 40 60 	l.j f8013cc0 <__stack+0xf7b93cc4>
    3b44:	94 15 00 05 	l.lhz r0,0x5(r21)
    3b48:	02 00 40 60 	l.j f8013cc8 <__stack+0xf7b93ccc>
    3b4c:	a4 19 00 05 	l.andi r0,r25,0x5
    3b50:	02 00 40 60 	l.j f8013cd0 <__stack+0xf7b93cd4>
    3b54:	b0 15 00 05 	l.muli r0,r21,0x5
    3b58:	02 00 40 60 	l.j f8013cd8 <__stack+0xf7b93cdc>
    3b5c:	b4 13 00 05 	l.mfspr r0,r19,0x5
    3b60:	02 00 40 60 	l.j f8013ce0 <__stack+0xf7b93ce4>
    3b64:	c8 18 00 05 	lf.ftoi.s r0,r24
    3b68:	02 00 40 60 	l.j f8013ce8 <__stack+0xf7b93cec>
    3b6c:	ec 04 0e 03 	.word 0xec040e03
    3b70:	a4 7b 01 00 	l.andi r3,r27,0x100
    3b74:	05 02 00 40 	l.jal 4083c74 <__stack+0x3c03c78>
    3b78:	60 f0 1c 00 	.word 0x60f01c00
    3b7c:	05 02 00 40 	l.jal 4083c7c <__stack+0x3c03c80>
    3b80:	60 f8 15 00 	.word 0x60f81500
    3b84:	05 02 00 40 	l.jal 4083c84 <__stack+0x3c03c88>
    3b88:	61 04 5b 00 	.word 0x61045b00
    3b8c:	05 02 00 40 	l.jal 4083c8c <__stack+0x3c03c90>
    3b90:	61 14 04 0d 	.word 0x6114040d
    3b94:	03 8a 7d 01 	l.j fe2a2f98 <__stack+0xfde22f9c>
    3b98:	00 05 02 00 	l.j 144398 <__ram_length+0xc4398>
    3b9c:	40 61 20 01 	.word 0x40612001
    3ba0:	00 05 02 00 	l.j 1443a0 <__ram_length+0xc43a0>
    3ba4:	40 61 24 18 	.word 0x40612418
    3ba8:	00 05 02 00 	l.j 1443a8 <__ram_length+0xc43a8>
    3bac:	40 61 38 15 	.word 0x40613815
    3bb0:	00 05 02 00 	l.j 1443b0 <__ram_length+0xc43b0>
    3bb4:	40 61 40 17 	.word 0x40614017
    3bb8:	00 05 02 00 	l.j 1443b8 <__ram_length+0xc43b8>
    3bbc:	40 61 50 04 	.word 0x40615004
    3bc0:	17 03 f7 03 	.word 0x1703f703
    3bc4:	01 00 05 02 	l.j 4004fcc <__stack+0x3b84fd0>
    3bc8:	00 40 61 80 	l.j 101c1c8 <__stack+0xb9c1cc>
    3bcc:	1c 00 05 02 	.word 0x1c000502
    3bd0:	00 40 61 94 	l.j 101c220 <__stack+0xb9c224>
    3bd4:	15 00 05 02 	l.nop 0x502
    3bd8:	00 40 61 98 	l.j 101c238 <__stack+0xb9c23c>
    3bdc:	13 00 05 02 	l.bf fc004fe4 <__stack+0xfbb84fe8>
    3be0:	00 40 61 9c 	l.j 101c250 <__stack+0xb9c254>
    3be4:	03 f1 7d 01 	l.j ffc62fe8 <__stack+0xff7e2fec>
    3be8:	00 05 02 00 	l.j 1443e8 <__ram_length+0xc43e8>
    3bec:	40 61 a0 03 	.word 0x4061a003
    3bf0:	8f 02 01 00 	l.lbz r24,0x100(r2)
    3bf4:	05 02 00 40 	l.jal 4083cf4 <__stack+0x3c03cf8>
    3bf8:	61 a4 0c 00 	.word 0x61a40c00
    3bfc:	05 02 00 40 	l.jal 4083cfc <__stack+0x3c03d00>
    3c00:	61 a8 1c 00 	.word 0x61a81c00
    3c04:	05 02 00 40 	l.jal 4083d04 <__stack+0x3c03d08>
    3c08:	61 ac 15 00 	.word 0x61ac1500
    3c0c:	05 02 00 40 	l.jal 4083d0c <__stack+0x3c03d10>
    3c10:	61 b0 17 00 	.word 0x61b01700
    3c14:	05 02 00 40 	l.jal 4083d14 <__stack+0x3c03d18>
    3c18:	61 b8 11 00 	.word 0x61b81100
    3c1c:	05 02 00 40 	l.jal 4083d1c <__stack+0x3c03d20>
    3c20:	61 bc 03 f0 	.word 0x61bc03f0
    3c24:	7d 01 00 05 	l.cust4 
    3c28:	02 00 40 61 	l.j f8013dac <__stack+0xf7b93db0>
    3c2c:	c0 03 90 02 	l.mtspr r3,r18,0x2
    3c30:	01 00 05 02 	l.j 4005038 <__stack+0x3b8503c>
    3c34:	00 40 61 c4 	l.j 101c344 <__stack+0xb9c348>
    3c38:	03 f3 7e 01 	l.j ffce343c <__stack+0xff863440>
    3c3c:	00 05 02 00 	l.j 14443c <__ram_length+0xc443c>
    3c40:	40 61 c8 a1 	.word 0x4061c8a1
    3c44:	00 05 02 00 	l.j 144444 <__ram_length+0xc4444>
    3c48:	40 61 cc 03 	.word 0x4061cc03
    3c4c:	f3 7d 01 00 	l.cust5 r27,r29,r0,0x8,0x0
    3c50:	05 02 00 40 	l.jal 4083d50 <__stack+0x3c03d54>
    3c54:	61 d0 03 a4 	.word 0x61d003a4
    3c58:	02 01 00 05 	l.j f8043c6c <__stack+0xf7bc3c70>
    3c5c:	02 00 40 61 	l.j f8013de0 <__stack+0xf7b93de4>
    3c60:	d4 03 dc 7d 	l.sw 0x47d(r3),r27
    3c64:	01 00 05 02 	l.j 400506c <__stack+0x3b85070>
    3c68:	00 40 61 d8 	l.j 101c3c8 <__stack+0xb9c3cc>
    3c6c:	15 00 05 02 	l.nop 0x502
    3c70:	00 40 61 dc 	l.j 101c3e0 <__stack+0xb9c3e4>
    3c74:	28 00 05 02 	.word 0x28000502
    3c78:	00 40 61 e0 	l.j 101c3f8 <__stack+0xb9c3fc>
    3c7c:	a4 00 05 02 	l.andi r0,r0,0x502
    3c80:	00 40 61 e8 	l.j 101c420 <__stack+0xb9c424>
    3c84:	03 d8 7e 01 	l.j ff623488 <__stack+0xff1a348c>
    3c88:	00 05 02 00 	l.j 144488 <__ram_length+0xc4488>
    3c8c:	40 61 f0 18 	.word 0x4061f018
    3c90:	00 05 02 00 	l.j 144490 <__ram_length+0xc4490>
    3c94:	40 61 f4 13 	.word 0x4061f413
    3c98:	00 05 02 00 	l.j 144498 <__ram_length+0xc4498>
    3c9c:	40 61 f8 15 	.word 0x4061f815
    3ca0:	00 05 02 00 	l.j 1444a0 <__ram_length+0xc44a0>
    3ca4:	40 62 00 15 	.word 0x40620015
    3ca8:	00 05 02 00 	l.j 1444a8 <__ram_length+0xc44a8>
    3cac:	40 62 04 15 	.word 0x40620415
    3cb0:	00 05 02 00 	l.j 1444b0 <__ram_length+0xc44b0>
    3cb4:	40 62 08 13 	.word 0x40620813
    3cb8:	00 05 02 00 	l.j 1444b8 <__ram_length+0xc44b8>
    3cbc:	40 62 0c 15 	.word 0x40620c15
    3cc0:	00 05 02 00 	l.j 1444c0 <__ram_length+0xc44c0>
    3cc4:	40 62 18 16 	.word 0x40621816
    3cc8:	00 05 02 00 	l.j 1444c8 <__ram_length+0xc44c8>
    3ccc:	40 62 20 15 	.word 0x40622015
    3cd0:	00 05 02 00 	l.j 1444d0 <__ram_length+0xc44d0>
    3cd4:	40 62 28 15 	.word 0x40622815
    3cd8:	00 05 02 00 	l.j 1444d8 <__ram_length+0xc44d8>
    3cdc:	40 62 30 15 	.word 0x40623015
    3ce0:	00 05 02 00 	l.j 1444e0 <__ram_length+0xc44e0>
    3ce4:	40 62 34 13 	.word 0x40623413
    3ce8:	00 05 02 00 	l.j 1444e8 <__ram_length+0xc44e8>
    3cec:	40 62 38 15 	.word 0x40623815
    3cf0:	00 05 02 00 	l.j 1444f0 <__ram_length+0xc44f0>
    3cf4:	40 62 3c 16 	.word 0x40623c16
    3cf8:	00 05 02 00 	l.j 1444f8 <__ram_length+0xc44f8>
    3cfc:	40 62 74 16 	.word 0x40627416
    3d00:	00 05 02 00 	l.j 144500 <__ram_length+0xc4500>
    3d04:	40 62 80 15 	.word 0x40628015
    3d08:	00 05 02 00 	l.j 144508 <__ram_length+0xc4508>
    3d0c:	40 62 88 15 	.word 0x40628815
    3d10:	00 05 02 00 	l.j 144510 <__ram_length+0xc4510>
    3d14:	40 62 b4 17 	.word 0x4062b417
    3d18:	00 05 02 00 	l.j 144518 <__ram_length+0xc4518>
    3d1c:	40 62 b8 13 	.word 0x4062b813
    3d20:	00 05 02 00 	l.j 144520 <__ram_length+0xc4520>
    3d24:	40 62 bc 15 	.word 0x4062bc15
    3d28:	00 05 02 00 	l.j 144528 <__ram_length+0xc4528>
    3d2c:	40 62 d0 18 	.word 0x4062d018
    3d30:	00 05 02 00 	l.j 144530 <__ram_length+0xc4530>
    3d34:	40 63 00 16 	.word 0x40630016
    3d38:	00 05 02 00 	l.j 144538 <__ram_length+0xc4538>
    3d3c:	40 63 08 17 	.word 0x40630817
    3d40:	00 05 02 00 	l.j 144540 <__ram_length+0xc4540>
    3d44:	40 63 38 15 	.word 0x40633815
    3d48:	00 05 02 00 	l.j 144548 <__ram_length+0xc4548>
    3d4c:	40 63 3c 10 	.word 0x40633c10
    3d50:	00 05 02 00 	l.j 144550 <__ram_length+0xc4550>
    3d54:	40 63 40 18 	.word 0x40634018
    3d58:	00 05 02 00 	l.j 144558 <__ram_length+0xc4558>
    3d5c:	40 63 44 18 	.word 0x40634418
    3d60:	00 05 02 00 	l.j 144560 <__ram_length+0xc4560>
    3d64:	40 63 74 16 	.word 0x40637416
    3d68:	00 05 02 00 	l.j 144568 <__ram_length+0xc4568>
    3d6c:	40 63 7c 17 	.word 0x40637c17
    3d70:	00 05 02 00 	l.j 144570 <__ram_length+0xc4570>
    3d74:	40 63 ac 15 	.word 0x4063ac15
    3d78:	00 05 02 00 	l.j 144578 <__ram_length+0xc4578>
    3d7c:	40 63 b0 03 	.word 0x4063b003
    3d80:	74 01 00 05 	l.cust2 
    3d84:	02 00 40 63 	l.j f8013f10 <__stack+0xf7b93f14>
    3d88:	b4 20 00 05 	l.mfspr r1,r0,0x5
    3d8c:	02 00 40 63 	l.j f8013f18 <__stack+0xf7b93f1c>
    3d90:	b8 18 00 05 	l.slli r0,r24,0x5
    3d94:	02 00 40 63 	l.j f8013f20 <__stack+0xf7b93f24>
    3d98:	e8 16 00 05 	.word 0xe8160005
    3d9c:	02 00 40 63 	l.j f8013f28 <__stack+0xf7b93f2c>
    3da0:	ec 03 6e 01 	.word 0xec036e01
    3da4:	00 05 02 00 	l.j 1445a4 <__ram_length+0xc45a4>
    3da8:	40 63 f0 26 	.word 0x4063f026
    3dac:	00 05 02 00 	l.j 1445ac <__ram_length+0xc45ac>
    3db0:	40 63 f4 03 	.word 0x4063f403
    3db4:	70 01 00 05 	l.cust1 
    3db8:	02 00 40 63 	l.j f8013f44 <__stack+0xf7b93f48>
    3dbc:	f8 24 00 05 	l.cust7 
    3dc0:	02 00 40 63 	l.j f8013f4c <__stack+0xf7b93f50>
    3dc4:	fc 0a 00 05 	l.cust8 
    3dc8:	02 00 40 64 	l.j f8013f58 <__stack+0xf7b93f5c>
    3dcc:	00 20 00 05 	l.j 803de0 <__stack+0x383de4>
    3dd0:	02 00 40 64 	l.j f8013f60 <__stack+0xf7b93f64>
    3dd4:	04 0a 00 05 	l.jal 283de8 <__ram_length+0x203de8>
    3dd8:	02 00 40 64 	l.j f8013f68 <__stack+0xf7b93f6c>
    3ddc:	08 1e 00 05 	.word 0x081e0005
    3de0:	02 00 40 64 	l.j f8013f70 <__stack+0xf7b93f74>
    3de4:	0c 15 00 05 	l.bnf 543df8 <__stack+0xc3dfc>
    3de8:	02 00 40 64 	l.j f8013f78 <__stack+0xf7b93f7c>
    3dec:	3c 15 00 05 	.word 0x3c150005
    3df0:	02 00 40 64 	l.j f8013f80 <__stack+0xf7b93f84>
    3df4:	44 03 6e 01 	l.jr r13
    3df8:	00 05 02 00 	l.j 1445f8 <__ram_length+0xc45f8>
    3dfc:	40 64 48 26 	.word 0x40644826
    3e00:	00 05 02 00 	l.j 144600 <__ram_length+0xc4600>
    3e04:	40 64 4c 03 	.word 0x40644c03
    3e08:	6e 01 00 05 	.word 0x6e010005
    3e0c:	02 00 40 64 	l.j f8013f9c <__stack+0xf7b93fa0>
    3e10:	50 28 00 05 	.word 0x50280005
    3e14:	02 00 40 64 	l.j f8013fa4 <__stack+0xf7b93fa8>
    3e18:	54 03 72 01 	.word 0x54037201
    3e1c:	00 05 02 00 	l.j 14461c <__ram_length+0xc461c>
    3e20:	40 64 58 22 	.word 0x40645822
    3e24:	00 05 02 00 	l.j 144624 <__ram_length+0xc4624>
    3e28:	40 64 5c 16 	.word 0x40645c16
    3e2c:	00 05 02 00 	l.j 14462c <__ram_length+0xc462c>
    3e30:	40 64 8c 16 	.word 0x40648c16
    3e34:	00 05 02 00 	l.j 144634 <__ram_length+0xc4634>
    3e38:	40 64 90 03 	.word 0x40649003
    3e3c:	70 01 00 05 	l.cust1 
    3e40:	02 00 40 64 	l.j f8013fd0 <__stack+0xf7b93fd4>
    3e44:	94 24 00 05 	l.lhz r1,0x5(r4)
    3e48:	02 00 40 64 	l.j f8013fd8 <__stack+0xf7b93fdc>
    3e4c:	98 1c 00 05 	l.lhs r0,0x5(r28)
    3e50:	02 00 40 64 	l.j f8013fe0 <__stack+0xf7b93fe4>
    3e54:	9c 0c 00 05 	l.addi r0,r12,0x5
    3e58:	02 00 40 64 	l.j f8013fe8 <__stack+0xf7b93fec>
    3e5c:	a0 16 00 05 	l.addic r0,r22,0x5
    3e60:	02 00 40 64 	l.j f8013ff0 <__stack+0xf7b93ff4>
    3e64:	a8 15 00 05 	l.ori r0,r21,0x5
    3e68:	02 00 40 64 	l.j f8013ff8 <__stack+0xf7b93ffc>
    3e6c:	d8 15 00 05 	l.sb 0x5(r21),r0
    3e70:	02 00 40 64 	l.j f8014000 <__stack+0xf7b94004>
    3e74:	dc 03 6e 01 	l.sh 0x601(r3),r13
    3e78:	00 05 02 00 	l.j 144678 <__ram_length+0xc4678>
    3e7c:	40 64 e0 26 	.word 0x4064e026
    3e80:	00 05 02 00 	l.j 144680 <__ram_length+0xc4680>
    3e84:	40 64 e4 03 	.word 0x4064e403
    3e88:	6e 01 00 05 	.word 0x6e010005
    3e8c:	02 00 40 64 	l.j f801401c <__stack+0xf7b94020>
    3e90:	e8 26 00 05 	.word 0xe8260005
    3e94:	02 00 40 64 	l.j f8014024 <__stack+0xf7b94028>
    3e98:	ec 16 00 05 	.word 0xec160005
    3e9c:	02 00 40 64 	l.j f801402c <__stack+0xf7b94030>
    3ea0:	f4 16 00 05 	l.cust6 
    3ea4:	02 00 40 64 	l.j f8014034 <__stack+0xf7b94038>
    3ea8:	fc 16 00 05 	l.cust8 
    3eac:	02 00 40 65 	l.j f8014040 <__stack+0xf7b94044>
    3eb0:	08 16 00 05 	.word 0x08160005
    3eb4:	02 00 40 65 	l.j f8014048 <__stack+0xf7b9404c>
    3eb8:	14 16 00 05 	.word 0x14160005
    3ebc:	02 00 40 65 	l.j f8014050 <__stack+0xf7b94054>
    3ec0:	28 15 00 05 	.word 0x28150005
    3ec4:	02 00 40 65 	l.j f8014058 <__stack+0xf7b9405c>
    3ec8:	2c 16 00 05 	.word 0x2c160005
    3ecc:	02 00 40 65 	l.j f8014060 <__stack+0xf7b94064>
    3ed0:	3c 16 00 05 	.word 0x3c160005
    3ed4:	02 00 40 65 	l.j f8014068 <__stack+0xf7b9406c>
    3ed8:	60 03 68 01 	.word 0x60036801
    3edc:	00 05 02 00 	l.j 1446dc <__ram_length+0xc46dc>
    3ee0:	40 65 64 1a 	.word 0x4065641a
    3ee4:	00 05 02 00 	l.j 1446e4 <__ram_length+0xc46e4>
    3ee8:	40 65 68 18 	.word 0x40656818
    3eec:	00 05 02 00 	l.j 1446ec <__ram_length+0xc46ec>
    3ef0:	40 65 70 2e 	.word 0x4065702e
    3ef4:	00 05 02 00 	l.j 1446f4 <__ram_length+0xc46f4>
    3ef8:	40 65 a0 15 	.word 0x4065a015
    3efc:	00 05 02 00 	l.j 1446fc <__ram_length+0xc46fc>
    3f00:	40 65 a4 15 	.word 0x4065a415
    3f04:	00 05 02 00 	l.j 144704 <__ram_length+0xc4704>
    3f08:	40 65 a8 13 	.word 0x4065a813
    3f0c:	00 05 02 00 	l.j 14470c <__ram_length+0xc470c>
    3f10:	40 65 ac 18 	.word 0x4065ac18
    3f14:	00 05 02 00 	l.j 144714 <__ram_length+0xc4714>
    3f18:	40 65 b0 10 	.word 0x4065b010
    3f1c:	00 05 02 00 	l.j 14471c <__ram_length+0xc471c>
    3f20:	40 65 b4 15 	.word 0x4065b415
    3f24:	00 05 02 00 	l.j 144724 <__ram_length+0xc4724>
    3f28:	40 65 b8 13 	.word 0x4065b813
    3f2c:	00 05 02 00 	l.j 14472c <__ram_length+0xc472c>
    3f30:	40 65 bc 15 	.word 0x4065bc15
    3f34:	00 05 02 00 	l.j 144734 <__ram_length+0xc4734>
    3f38:	40 65 c0 17 	.word 0x4065c017
    3f3c:	00 05 02 00 	l.j 14473c <__ram_length+0xc473c>
    3f40:	40 65 c4 11 	.word 0x4065c411
    3f44:	00 05 02 00 	l.j 144744 <__ram_length+0xc4744>
    3f48:	40 65 c8 15 	.word 0x4065c815
    3f4c:	00 05 02 00 	l.j 14474c <__ram_length+0xc474c>
    3f50:	40 65 f8 15 	.word 0x4065f815
    3f54:	00 05 02 00 	l.j 144754 <__ram_length+0xc4754>
    3f58:	40 65 fc 11 	.word 0x4065fc11
    3f5c:	00 05 02 00 	l.j 14475c <__ram_length+0xc475c>
    3f60:	40 66 00 17 	.word 0x40660017
    3f64:	00 05 02 00 	l.j 144764 <__ram_length+0xc4764>
    3f68:	40 66 04 15 	.word 0x40660415
    3f6c:	00 05 02 00 	l.j 14476c <__ram_length+0xc476c>
    3f70:	40 66 08 13 	.word 0x40660813
    3f74:	00 05 02 00 	l.j 144774 <__ram_length+0xc4774>
    3f78:	40 66 0c 15 	.word 0x40660c15
    3f7c:	00 05 02 00 	l.j 14477c <__ram_length+0xc477c>
    3f80:	40 66 10 11 	.word 0x40661011
    3f84:	00 05 02 00 	l.j 144784 <__ram_length+0xc4784>
    3f88:	40 66 14 17 	.word 0x40661417
    3f8c:	00 05 02 00 	l.j 14478c <__ram_length+0xc478c>
    3f90:	40 66 18 13 	.word 0x40661813
    3f94:	00 05 02 00 	l.j 144794 <__ram_length+0xc4794>
    3f98:	40 66 1c 0e 	.word 0x40661c0e
    3f9c:	00 05 02 00 	l.j 14479c <__ram_length+0xc479c>
    3fa0:	40 66 28 23 	.word 0x40662823
    3fa4:	00 05 02 00 	l.j 1447a4 <__ram_length+0xc47a4>
    3fa8:	40 66 58 16 	.word 0x40665816
    3fac:	00 05 02 00 	l.j 1447ac <__ram_length+0xc47ac>
    3fb0:	40 66 5c 22 	.word 0x40665c22
    3fb4:	00 05 02 00 	l.j 1447b4 <__ram_length+0xc47b4>
    3fb8:	40 66 60 03 	.word 0x40666003
    3fbc:	72 01 00 05 	l.cust1 
    3fc0:	02 00 40 66 	l.j f8014158 <__stack+0xf7b9415c>
    3fc4:	64 15 00 05 	.word 0x64150005
    3fc8:	02 00 40 66 	l.j f8014160 <__stack+0xf7b94164>
    3fcc:	68 13 00 05 	.word 0x68130005
    3fd0:	02 00 40 66 	l.j f8014168 <__stack+0xf7b9416c>
    3fd4:	6c 15 00 05 	.word 0x6c150005
    3fd8:	02 00 40 66 	l.j f8014170 <__stack+0xf7b94174>
    3fdc:	70 15 00 05 	l.cust1 
    3fe0:	02 00 40 66 	l.j f8014178 <__stack+0xf7b9417c>
    3fe4:	a0 15 00 05 	l.addic r0,r21,0x5
    3fe8:	02 00 40 66 	l.j f8014180 <__stack+0xf7b94184>
    3fec:	a4 19 00 05 	l.andi r0,r25,0x5
    3ff0:	02 00 40 66 	l.j f8014188 <__stack+0xf7b9418c>
    3ff4:	a8 0f 00 05 	l.ori r0,r15,0x5
    3ff8:	02 00 40 66 	l.j f8014190 <__stack+0xf7b94194>
    3ffc:	ac 15 00 05 	l.xori r0,r21,0x5
    4000:	02 00 40 66 	l.j f8014198 <__stack+0xf7b9419c>
    4004:	b4 16 00 05 	l.mfspr r0,r22,0x5
    4008:	02 00 40 66 	l.j f80141a0 <__stack+0xf7b941a4>
    400c:	e4 16 00 05 	l.sfeq r22,r0
    4010:	02 00 40 66 	l.j f80141a8 <__stack+0xf7b941ac>
    4014:	ec 15 00 05 	.word 0xec150005
    4018:	02 00 40 66 	l.j f80141b0 <__stack+0xf7b941b4>
    401c:	f0 13 00 05 	l.cust5 r0,r19,r0,0x0,0x5
    4020:	02 00 40 66 	l.j f80141b8 <__stack+0xf7b941bc>
    4024:	f4 15 00 05 	l.cust6 
    4028:	02 00 40 66 	l.j f80141c0 <__stack+0xf7b941c4>
    402c:	f8 15 00 05 	l.cust7 
    4030:	02 00 40 67 	l.j f80141cc <__stack+0xf7b941d0>
    4034:	28 15 00 05 	.word 0x28150005
    4038:	02 00 40 67 	l.j f80141d4 <__stack+0xf7b941d8>
    403c:	2c 17 00 05 	.word 0x2c170005
    4040:	02 00 40 67 	l.j f80141dc <__stack+0xf7b941e0>
    4044:	30 11 00 05 	.word 0x30110005
    4048:	02 00 40 67 	l.j f80141e4 <__stack+0xf7b941e8>
    404c:	34 15 00 05 	.word 0x34150005
    4050:	02 00 40 67 	l.j f80141ec <__stack+0xf7b941f0>
    4054:	38 16 00 05 	.word 0x38160005
    4058:	02 00 40 67 	l.j f80141f4 <__stack+0xf7b941f8>
    405c:	3c 12 00 05 	.word 0x3c120005
    4060:	02 00 40 67 	l.j f80141fc <__stack+0xf7b94200>
    4064:	40 16 00 05 	.word 0x40160005
    4068:	02 00 40 67 	l.j f8014204 <__stack+0xf7b94208>
    406c:	48 0f 00 05 	l.jalr r0
    4070:	02 00 40 67 	l.j f801420c <__stack+0xf7b94210>
    4074:	50 19 00 05 	.word 0x50190005
    4078:	02 00 40 67 	l.j f8014214 <__stack+0xf7b94218>
    407c:	64 11 00 05 	.word 0x64110005
    4080:	02 00 40 67 	l.j f801421c <__stack+0xf7b94220>
    4084:	6c 17 00 05 	.word 0x6c170005
    4088:	02 00 40 67 	l.j f8014224 <__stack+0xf7b94228>
    408c:	80 0a 00 05 	l.ld r0,0x5(r10)
    4090:	02 00 40 67 	l.j f801422c <__stack+0xf7b94230>
    4094:	84 1c 00 05 	l.lwz r0,0x5(r28)
    4098:	02 00 40 67 	l.j f8014234 <__stack+0xf7b94238>
    409c:	8c 16 00 05 	l.lbz r0,0x5(r22)
    40a0:	02 00 40 67 	l.j f801423c <__stack+0xf7b94240>
    40a4:	a0 16 00 05 	l.addic r0,r22,0x5
    40a8:	02 00 40 67 	l.j f8014244 <__stack+0xf7b94248>
    40ac:	a8 18 00 05 	l.ori r0,r24,0x5
    40b0:	02 00 40 67 	l.j f801424c <__stack+0xf7b94250>
    40b4:	b4 b6 00 05 	l.mfspr r5,r22,0x5
    40b8:	02 00 40 67 	l.j f8014254 <__stack+0xf7b94258>
    40bc:	c4 16 00 05 	.word 0xc4160005
    40c0:	02 00 40 67 	l.j f801425c <__stack+0xf7b94260>
    40c4:	cc 03 df 7e 	.word 0xcc03df7e
    40c8:	01 00 05 02 	l.j 40054d0 <__stack+0x3b854d4>
    40cc:	00 40 67 d8 	l.j 101e02c <__stack+0xb9e030>
    40d0:	16 00 05 02 	.word 0x16000502
    40d4:	00 40 67 e0 	l.j 101e054 <__stack+0xb9e058>
    40d8:	18 00 05 02 	l.movhi r0,0x502
    40dc:	00 40 67 e4 	l.j 101e06c <__stack+0xb9e070>
    40e0:	03 80 7f 01 	l.j fe023ce4 <__stack+0xfdba3ce8>
    40e4:	00 05 02 00 	l.j 1448e4 <__ram_length+0xc48e4>
    40e8:	40 67 ec 03 	.word 0x4067ec03
    40ec:	9d 02 01 00 	l.addi r8,r2,0x100
    40f0:	05 02 00 40 	l.jal 40841f0 <__stack+0x3c041f4>
    40f4:	67 f4 17 00 	.word 0x67f41700
    40f8:	05 02 00 40 	l.jal 40841f8 <__stack+0x3c041fc>
    40fc:	67 f8 13 00 	.word 0x67f81300
    4100:	05 02 00 40 	l.jal 4084200 <__stack+0x3c04204>
    4104:	68 04 10 00 	.word 0x68041000
    4108:	05 02 00 40 	l.jal 4084208 <__stack+0x3c0420c>
    410c:	68 0c 1d 00 	.word 0x680c1d00
    4110:	05 02 00 40 	l.jal 4084210 <__stack+0x3c04214>
    4114:	68 14 15 00 	.word 0x68141500
    4118:	05 02 00 40 	l.jal 4084218 <__stack+0x3c0421c>
    411c:	68 18 13 00 	.word 0x68181300
    4120:	05 02 00 40 	l.jal 4084220 <__stack+0x3c04224>
    4124:	68 1c 16 00 	.word 0x681c1600
    4128:	05 02 00 40 	l.jal 4084228 <__stack+0x3c0422c>
    412c:	68 20 12 00 	.word 0x68201200
    4130:	05 02 00 40 	l.jal 4084230 <__stack+0x3c04234>
    4134:	68 2c 15 00 	.word 0x682c1500
    4138:	05 02 00 40 	l.jal 4084238 <__stack+0x3c0423c>
    413c:	68 3c 0a 00 	.word 0x683c0a00
    4140:	05 02 00 40 	l.jal 4084240 <__stack+0x3c04244>
    4144:	68 48 03 f9 	.word 0x684803f9
    4148:	7e 01 00 05 	l.cust4 
    414c:	02 00 40 68 	l.j f80142ec <__stack+0xf7b942f0>
    4150:	50 17 00 05 	.word 0x50170005
    4154:	02 00 40 68 	l.j f80142f4 <__stack+0xf7b942f8>
    4158:	54 15 00 05 	.word 0x54150005
    415c:	02 00 40 68 	l.j f80142fc <__stack+0xf7b94300>
    4160:	58 13 00 05 	.word 0x58130005
    4164:	02 00 40 68 	l.j f8014304 <__stack+0xf7b94308>
    4168:	5c 15 00 05 	.word 0x5c150005
    416c:	02 00 40 68 	l.j f801430c <__stack+0xf7b94310>
    4170:	64 15 00 05 	.word 0x64150005
    4174:	02 00 40 68 	l.j f8014314 <__stack+0xf7b94318>
    4178:	68 15 00 05 	.word 0x68150005
    417c:	02 00 40 68 	l.j f801431c <__stack+0xf7b94320>
    4180:	6c 13 00 05 	.word 0x6c130005
    4184:	02 00 40 68 	l.j f8014324 <__stack+0xf7b94328>
    4188:	70 15 00 05 	l.cust1 
    418c:	02 00 40 68 	l.j f801432c <__stack+0xf7b94330>
    4190:	7c 16 00 05 	l.cust4 
    4194:	02 00 40 68 	l.j f8014334 <__stack+0xf7b94338>
    4198:	84 15 00 05 	l.lwz r0,0x5(r21)
    419c:	02 00 40 68 	l.j f801433c <__stack+0xf7b94340>
    41a0:	8c 15 00 05 	l.lbz r0,0x5(r21)
    41a4:	02 00 40 68 	l.j f8014344 <__stack+0xf7b94348>
    41a8:	94 15 00 05 	l.lhz r0,0x5(r21)
    41ac:	02 00 40 68 	l.j f801434c <__stack+0xf7b94350>
    41b0:	98 13 00 05 	l.lhs r0,0x5(r19)
    41b4:	02 00 40 68 	l.j f8014354 <__stack+0xf7b94358>
    41b8:	9c 15 00 05 	l.addi r0,r21,0x5
    41bc:	02 00 40 68 	l.j f801435c <__stack+0xf7b94360>
    41c0:	a0 16 00 05 	l.addic r0,r22,0x5
    41c4:	02 00 40 68 	l.j f8014364 <__stack+0xf7b94368>
    41c8:	ac 16 00 05 	l.xori r0,r22,0x5
    41cc:	02 00 40 68 	l.j f801436c <__stack+0xf7b94370>
    41d0:	bc 16 00 05 	l.sfeqi r22,0x5
    41d4:	02 00 40 68 	l.j f8014374 <__stack+0xf7b94378>
    41d8:	ec 16 00 05 	.word 0xec160005
    41dc:	02 00 40 68 	l.j f801437c <__stack+0xf7b94380>
    41e0:	f4 15 00 05 	l.cust6 
    41e4:	02 00 40 68 	l.j f8014384 <__stack+0xf7b94388>
    41e8:	f8 13 00 05 	l.cust7 
    41ec:	02 00 40 68 	l.j f801438c <__stack+0xf7b94390>
    41f0:	fc 15 00 05 	l.cust8 
    41f4:	02 00 40 69 	l.j f8014398 <__stack+0xf7b9439c>
    41f8:	00 15 00 05 	l.j 54420c <__stack+0xc4210>
    41fc:	02 00 40 69 	l.j f80143a0 <__stack+0xf7b943a4>
    4200:	30 15 00 05 	.word 0x30150005
    4204:	02 00 40 69 	l.j f80143a8 <__stack+0xf7b943ac>
    4208:	34 19 00 05 	.word 0x34190005
    420c:	02 00 40 69 	l.j f80143b0 <__stack+0xf7b943b4>
    4210:	38 0f 00 05 	.word 0x380f0005
    4214:	02 00 40 69 	l.j f80143b8 <__stack+0xf7b943bc>
    4218:	3c 15 00 05 	.word 0x3c150005
    421c:	02 00 40 69 	l.j f80143c0 <__stack+0xf7b943c4>
    4220:	44 16 00 05 	l.jr r0
    4224:	02 00 40 69 	l.j f80143c8 <__stack+0xf7b943cc>
    4228:	74 16 00 05 	l.cust2 
    422c:	02 00 40 69 	l.j f80143d0 <__stack+0xf7b943d4>
    4230:	7c 15 00 05 	l.cust4 
    4234:	02 00 40 69 	l.j f80143d8 <__stack+0xf7b943dc>
    4238:	80 13 00 05 	l.ld r0,0x5(r19)
    423c:	02 00 40 69 	l.j f80143e0 <__stack+0xf7b943e4>
    4240:	84 15 00 05 	l.lwz r0,0x5(r21)
    4244:	02 00 40 69 	l.j f80143e8 <__stack+0xf7b943ec>
    4248:	88 13 00 05 	l.lws r0,0x5(r19)
    424c:	02 00 40 69 	l.j f80143f0 <__stack+0xf7b943f4>
    4250:	8c 16 00 05 	l.lbz r0,0x5(r22)
    4254:	02 00 40 69 	l.j f80143f8 <__stack+0xf7b943fc>
    4258:	bc 16 00 05 	l.sfeqi r22,0x5
    425c:	02 00 40 69 	l.j f8014400 <__stack+0xf7b94404>
    4260:	c0 13 00 05 	l.mtspr r19,r0,0x5
    4264:	02 00 40 69 	l.j f8014408 <__stack+0xf7b9440c>
    4268:	c4 1e 00 05 	.word 0xc41e0005
    426c:	02 00 40 69 	l.j f8014410 <__stack+0xf7b94414>
    4270:	c8 0a 00 05 	lf.ftoi.s r0,r10
    4274:	02 00 40 69 	l.j f8014418 <__stack+0xf7b9441c>
    4278:	cc 15 00 05 	.word 0xcc150005
    427c:	02 00 40 69 	l.j f8014420 <__stack+0xf7b94424>
    4280:	d0 18 00 05 	l.sd 0x5(r24),r0
    4284:	02 00 40 69 	l.j f8014428 <__stack+0xf7b9442c>
    4288:	d4 10 00 05 	l.sw 0x5(r16),r0
    428c:	02 00 40 69 	l.j f8014430 <__stack+0xf7b94434>
    4290:	d8 17 00 05 	l.sb 0x5(r23),r0
    4294:	02 00 40 69 	l.j f8014438 <__stack+0xf7b9443c>
    4298:	dc 13 00 05 	l.sh 0x5(r19),r0
    429c:	02 00 40 69 	l.j f8014440 <__stack+0xf7b94444>
    42a0:	e0 1b 00 05 	l.xor r0,r27,r0
    42a4:	02 00 40 69 	l.j f8014448 <__stack+0xf7b9444c>
    42a8:	e4 17 00 05 	l.sfeq r23,r0
    42ac:	02 00 40 6a 	l.j f8014454 <__stack+0xf7b94458>
    42b0:	14 15 00 05 	.word 0x14150005
    42b4:	02 00 40 6a 	l.j f801445c <__stack+0xf7b94460>
    42b8:	18 17 00 05 	.word 0x18170005
    42bc:	02 00 40 6a 	l.j f8014464 <__stack+0xf7b94468>
    42c0:	1c 11 00 05 	.word 0x1c110005
    42c4:	02 00 40 6a 	l.j f801446c <__stack+0xf7b94470>
    42c8:	28 15 00 05 	.word 0x28150005
    42cc:	02 00 40 6a 	l.j f8014474 <__stack+0xf7b94478>
    42d0:	2c 15 00 05 	.word 0x2c150005
    42d4:	02 00 40 6a 	l.j f801447c <__stack+0xf7b94480>
    42d8:	38 15 00 05 	.word 0x38150005
    42dc:	02 00 40 6a 	l.j f8014484 <__stack+0xf7b94488>
    42e0:	44 15 00 05 	l.jr r0
    42e4:	02 00 40 6a 	l.j f801448c <__stack+0xf7b94490>
    42e8:	48 15 00 05 	l.jalr r0
    42ec:	02 00 40 6a 	l.j f8014494 <__stack+0xf7b94498>
    42f0:	54 15 00 05 	.word 0x54150005
    42f4:	02 00 40 6a 	l.j f801449c <__stack+0xf7b944a0>
    42f8:	84 15 00 05 	l.lwz r0,0x5(r21)
    42fc:	02 00 40 6a 	l.j f80144a4 <__stack+0xf7b944a8>
    4300:	90 15 00 05 	l.lbs r0,0x5(r21)
    4304:	02 00 40 6a 	l.j f80144ac <__stack+0xf7b944b0>
    4308:	94 15 00 05 	l.lhz r0,0x5(r21)
    430c:	02 00 40 6a 	l.j f80144b4 <__stack+0xf7b944b8>
    4310:	a0 15 00 05 	l.addic r0,r21,0x5
    4314:	02 00 40 6a 	l.j f80144bc <__stack+0xf7b944c0>
    4318:	ac 15 00 05 	l.xori r0,r21,0x5
    431c:	02 00 40 6a 	l.j f80144c4 <__stack+0xf7b944c8>
    4320:	b0 15 00 05 	l.muli r0,r21,0x5
    4324:	02 00 40 6a 	l.j f80144cc <__stack+0xf7b944d0>
    4328:	bc 16 00 05 	l.sfeqi r22,0x5
    432c:	02 00 40 6a 	l.j f80144d4 <__stack+0xf7b944d8>
    4330:	c0 49 00 05 	l.mtspr r9,r0,0x1005
    4334:	02 00 40 6a 	l.j f80144dc <__stack+0xf7b944e0>
    4338:	c4 03 4b 01 	l.mac r3,r9
    433c:	00 05 02 00 	l.j 144b3c <__ram_length+0xc4b3c>
    4340:	40 6a e4 1b 	.word 0x406ae41b
    4344:	00 05 02 00 	l.j 144b44 <__ram_length+0xc4b44>
    4348:	40 6b 14 15 	.word 0x406b1415
    434c:	00 05 02 00 	l.j 144b4c <__ram_length+0xc4b4c>
    4350:	40 6b 20 16 	.word 0x406b2016
    4354:	00 05 02 00 	l.j 144b54 <__ram_length+0xc4b54>
    4358:	40 6b 24 12 	.word 0x406b2412
    435c:	00 05 02 00 	l.j 144b5c <__ram_length+0xc4b5c>
    4360:	40 6b 28 15 	.word 0x406b2815
    4364:	00 05 02 00 	l.j 144b64 <__ram_length+0xc4b64>
    4368:	40 6b 2c 15 	.word 0x406b2c15
    436c:	00 05 02 00 	l.j 144b6c <__ram_length+0xc4b6c>
    4370:	40 6b 38 15 	.word 0x406b3815
    4374:	00 05 02 00 	l.j 144b74 <__ram_length+0xc4b74>
    4378:	40 6b 3c 3e 	.word 0x406b3c3e
    437c:	00 05 02 00 	l.j 144b7c <__ram_length+0xc4b7c>
    4380:	40 6b 40 03 	.word 0x406b4003
    4384:	56 01 00 05 	.word 0x56010005
    4388:	02 00 40 6b 	l.j f8014534 <__stack+0xf7b94538>
    438c:	48 16 00 05 	l.jalr r0
    4390:	02 00 40 6b 	l.j f801453c <__stack+0xf7b94540>
    4394:	4c 12 00 05 	l.maci r18,0x5
    4398:	02 00 40 6b 	l.j f8014544 <__stack+0xf7b94548>
    439c:	50 15 00 05 	.word 0x50150005
    43a0:	02 00 40 6b 	l.j f801454c <__stack+0xf7b94550>
    43a4:	54 15 00 05 	.word 0x54150005
    43a8:	02 00 40 6b 	l.j f8014554 <__stack+0xf7b94558>
    43ac:	60 3c 00 05 	.word 0x603c0005
    43b0:	02 00 40 6b 	l.j f801455c <__stack+0xf7b94560>
    43b4:	64 03 59 01 	.word 0x64035901
    43b8:	00 05 02 00 	l.j 144bb8 <__ram_length+0xc4bb8>
    43bc:	40 6b 94 15 	.word 0x406b9415
    43c0:	00 05 02 00 	l.j 144bc0 <__ram_length+0xc4bc0>
    43c4:	40 6b a0 16 	.word 0x406ba016
    43c8:	00 05 02 00 	l.j 144bc8 <__ram_length+0xc4bc8>
    43cc:	40 6b a4 12 	.word 0x406ba412
    43d0:	00 05 02 00 	l.j 144bd0 <__ram_length+0xc4bd0>
    43d4:	40 6b a8 15 	.word 0x406ba815
    43d8:	00 05 02 00 	l.j 144bd8 <__ram_length+0xc4bd8>
    43dc:	40 6b ac 15 	.word 0x406bac15
    43e0:	00 05 02 00 	l.j 144be0 <__ram_length+0xc4be0>
    43e4:	40 6b b8 15 	.word 0x406bb815
    43e8:	00 05 02 00 	l.j 144be8 <__ram_length+0xc4be8>
    43ec:	40 6b bc 37 	.word 0x406bbc37
    43f0:	00 05 02 00 	l.j 144bf0 <__ram_length+0xc4bf0>
    43f4:	40 6b c0 03 	.word 0x406bc003
    43f8:	5d 01 00 05 	.word 0x5d010005
    43fc:	02 00 40 6b 	l.j f80145a8 <__stack+0xf7b945ac>
    4400:	c8 16 00 05 	lf.ftoi.s r0,r22
    4404:	02 00 40 6b 	l.j f80145b0 <__stack+0xf7b945b4>
    4408:	cc 12 00 05 	.word 0xcc120005
    440c:	02 00 40 6b 	l.j f80145b8 <__stack+0xf7b945bc>
    4410:	d0 15 00 05 	l.sd 0x5(r21),r0
    4414:	02 00 40 6b 	l.j f80145c0 <__stack+0xf7b945c4>
    4418:	d4 15 00 05 	l.sw 0x5(r21),r0
    441c:	02 00 40 6b 	l.j f80145c8 <__stack+0xf7b945cc>
    4420:	e0 16 00 05 	l.xor r0,r22,r0
    4424:	02 00 40 6b 	l.j f80145d0 <__stack+0xf7b945d4>
    4428:	f4 1b 00 05 	l.cust6 
    442c:	02 00 40 6c 	l.j f80145dc <__stack+0xf7b945e0>
    4430:	04 03 45 01 	l.jal d5834 <__ram_length+0x55834>
    4434:	00 05 02 00 	l.j 144c34 <__ram_length+0xc4c34>
    4438:	40 6c 0c 4f 	.word 0x406c0c4f
    443c:	00 05 02 00 	l.j 144c3c <__ram_length+0xc4c3c>
    4440:	40 6c 20 03 	.word 0x406c2003
    4444:	47 01 00 05 	l.jr r0
    4448:	02 00 40 6c 	l.j f80145f8 <__stack+0xf7b945fc>
    444c:	28 4d 00 05 	.word 0x284d0005
    4450:	02 00 40 6c 	l.j f8014600 <__stack+0xf7b94604>
    4454:	3c 03 40 01 	.word 0x3c034001
    4458:	00 05 02 00 	l.j 144c58 <__ram_length+0xc4c58>
    445c:	40 6c 40 1c 	.word 0x406c401c
    4460:	00 05 02 00 	l.j 144c60 <__ram_length+0xc4c60>
    4464:	40 6c 48 4c 	.word 0x406c484c
    4468:	00 05 02 00 	l.j 144c68 <__ram_length+0xc4c68>
    446c:	40 6c 5c 16 	.word 0x406c5c16
    4470:	00 05 02 00 	l.j 144c70 <__ram_length+0xc4c70>
    4474:	40 6c 68 18 	.word 0x406c6818
    4478:	00 05 02 00 	l.j 144c78 <__ram_length+0xc4c78>
    447c:	40 6c 74 4f 	.word 0x406c744f
    4480:	00 05 02 00 	l.j 144c80 <__ram_length+0xc4c80>
    4484:	40 6c 88 19 	.word 0x406c8819
    4488:	00 05 02 00 	l.j 144c88 <__ram_length+0xc4c88>
    448c:	40 6c 90 03 	.word 0x406c9003
    4490:	43 01 00 05 	.word 0x43010005
    4494:	02 00 40 6c 	l.j f8014644 <__stack+0xf7b94648>
    4498:	9c 16 00 05 	l.addi r0,r22,0x5
    449c:	02 00 40 6c 	l.j f801464c <__stack+0xf7b94650>
    44a0:	a4 18 00 05 	l.andi r0,r24,0x5
    44a4:	02 00 40 6c 	l.j f8014654 <__stack+0xf7b94658>
    44a8:	a8 03 9d 7f 	l.ori r0,r3,0x9d7f
    44ac:	01 00 05 02 	l.j 40058b4 <__stack+0x3b858b8>
    44b0:	00 40 6c b0 	l.j 101f770 <__stack+0xb9f774>
    44b4:	79 00 05 02 	l.cust3 
    44b8:	00 40 6c b4 	l.j 101f788 <__stack+0xb9f78c>
    44bc:	50 00 05 02 	.word 0x50000502
    44c0:	00 40 6c bc 	l.j 101f7b0 <__stack+0xb9f7b4>
    44c4:	03 75 01 00 	l.j fdd448c4 <__stack+0xfd8c48c8>
    44c8:	05 02 00 40 	l.jal 40845c8 <__stack+0x3c045cc>
    44cc:	6c cc 1f 00 	.word 0x6ccc1f00
    44d0:	05 02 00 40 	l.jal 40845d0 <__stack+0x3c045d4>
    44d4:	6c d4 0c 00 	.word 0x6cd40c00
    44d8:	05 02 00 40 	l.jal 40845d8 <__stack+0x3c045dc>
    44dc:	6c d8 15 00 	.word 0x6cd81500
    44e0:	05 02 00 40 	l.jal 40845e0 <__stack+0x3c045e4>
    44e4:	6c e4 1b 00 	.word 0x6ce41b00
    44e8:	05 02 00 40 	l.jal 40845e8 <__stack+0x3c045ec>
    44ec:	6c ec 12 00 	.word 0x6cec1200
    44f0:	05 02 00 40 	l.jal 40845f0 <__stack+0x3c045f4>
    44f4:	6c f0 16 00 	.word 0x6cf01600
    44f8:	05 02 00 40 	l.jal 40845f8 <__stack+0x3c045fc>
    44fc:	6d 00 16 00 	.word 0x6d001600
    4500:	05 02 00 40 	l.jal 4084600 <__stack+0x3c04604>
    4504:	6d 10 15 00 	.word 0x6d101500
    4508:	05 02 00 40 	l.jal 4084608 <__stack+0x3c0460c>
    450c:	6d 20 03 5a 	.word 0x6d20035a
    4510:	01 00 05 02 	l.j 4005918 <__stack+0x3b8591c>
    4514:	00 40 6d 34 	l.j 101f9e4 <__stack+0xb9f9e8>
    4518:	3f 00 05 02 	.word 0x3f000502
    451c:	00 40 6d 68 	l.j 101fabc <__stack+0xb9fac0>
    4520:	03 85 7d 01 	l.j fe163924 <__stack+0xfdce3928>
    4524:	00 05 02 00 	l.j 144d24 <__ram_length+0xc4d24>
    4528:	40 6d 68 1c 	.word 0x406d681c
    452c:	00 05 02 00 	l.j 144d2c <__ram_length+0xc4d2c>
    4530:	40 6d 6c 0c 	.word 0x406d6c0c
    4534:	00 05 02 00 	l.j 144d34 <__ram_length+0xc4d34>
    4538:	40 6d 70 1c 	.word 0x406d701c
    453c:	00 05 02 00 	l.j 144d3c <__ram_length+0xc4d3c>
    4540:	40 6d 74 0c 	.word 0x406d740c
    4544:	00 05 02 00 	l.j 144d44 <__ram_length+0xc4d44>
    4548:	40 6d 78 1c 	.word 0x406d781c
    454c:	00 05 02 00 	l.j 144d4c <__ram_length+0xc4d4c>
    4550:	40 6d 7c 15 	.word 0x406d7c15
    4554:	00 05 02 00 	l.j 144d54 <__ram_length+0xc4d54>
    4558:	40 6d 80 31 	.word 0x406d8031
    455c:	00 05 02 00 	l.j 144d5c <__ram_length+0xc4d5c>
    4560:	40 6d 84 03 	.word 0x406d8403
    4564:	63 01 00 05 	.word 0x63010005
    4568:	02 00 40 6d 	l.j f801471c <__stack+0xf7b94720>
    456c:	88 13 00 05 	l.lws r0,0x5(r19)
    4570:	02 00 40 6d 	l.j f8014724 <__stack+0xf7b94728>
    4574:	8c 15 00 05 	l.lbz r0,0x5(r21)
    4578:	02 00 40 6d 	l.j f801472c <__stack+0xf7b94730>
    457c:	94 15 00 05 	l.lhz r0,0x5(r21)
    4580:	02 00 40 6d 	l.j f8014734 <__stack+0xf7b94738>
    4584:	98 15 00 05 	l.lhs r0,0x5(r21)
    4588:	02 00 40 6d 	l.j f801473c <__stack+0xf7b94740>
    458c:	9c 13 00 05 	l.addi r0,r19,0x5
    4590:	02 00 40 6d 	l.j f8014744 <__stack+0xf7b94748>
    4594:	a0 15 00 05 	l.addic r0,r21,0x5
    4598:	02 00 40 6d 	l.j f801474c <__stack+0xf7b94750>
    459c:	ac 16 00 05 	l.xori r0,r22,0x5
    45a0:	02 00 40 6d 	l.j f8014754 <__stack+0xf7b94758>
    45a4:	bc 16 00 05 	l.sfeqi r22,0x5
    45a8:	02 00 40 6d 	l.j f801475c <__stack+0xf7b94760>
    45ac:	c4 15 00 05 	.word 0xc4150005
    45b0:	02 00 40 6d 	l.j f8014764 <__stack+0xf7b94768>
    45b4:	cc 15 00 05 	.word 0xcc150005
    45b8:	02 00 40 6d 	l.j f801476c <__stack+0xf7b94770>
    45bc:	d4 15 00 05 	l.sw 0x5(r21),r0
    45c0:	02 00 40 6d 	l.j f8014774 <__stack+0xf7b94778>
    45c4:	d8 13 00 05 	l.sb 0x5(r19),r0
    45c8:	02 00 40 6d 	l.j f801477c <__stack+0xf7b94780>
    45cc:	dc 15 00 05 	l.sh 0x5(r21),r0
    45d0:	02 00 40 6d 	l.j f8014784 <__stack+0xf7b94788>
    45d4:	e4 16 00 05 	l.sfeq r22,r0
    45d8:	02 00 40 6d 	l.j f801478c <__stack+0xf7b94790>
    45dc:	f4 17 00 05 	l.cust6 
    45e0:	02 00 40 6d 	l.j f8014794 <__stack+0xf7b94798>
    45e4:	f8 16 00 05 	l.cust7 
    45e8:	02 00 40 6e 	l.j f80147a0 <__stack+0xf7b947a4>
    45ec:	00 16 00 05 	l.j 584600 <__stack+0x104604>
    45f0:	02 00 40 6e 	l.j f80147a8 <__stack+0xf7b947ac>
    45f4:	08 15 00 05 	.word 0x08150005
    45f8:	02 00 40 6e 	l.j f80147b0 <__stack+0xf7b947b4>
    45fc:	0c 13 00 05 	l.bnf 4c4610 <__stack+0x44614>
    4600:	02 00 40 6e 	l.j f80147b8 <__stack+0xf7b947bc>
    4604:	10 15 00 05 	l.bf 544618 <__stack+0xc461c>
    4608:	02 00 40 6e 	l.j f80147c0 <__stack+0xf7b947c4>
    460c:	18 15 00 05 	.word 0x18150005
    4610:	02 00 40 6e 	l.j f80147c8 <__stack+0xf7b947cc>
    4614:	48 16 00 05 	l.jalr r0
    4618:	02 00 40 6e 	l.j f80147d0 <__stack+0xf7b947d4>
    461c:	50 18 00 05 	.word 0x50180005
    4620:	02 00 40 6e 	l.j f80147d8 <__stack+0xf7b947dc>
    4624:	54 10 00 05 	.word 0x54100005
    4628:	02 00 40 6e 	l.j f80147e0 <__stack+0xf7b947e4>
    462c:	5c 21 00 05 	.word 0x5c210005
    4630:	02 00 40 6e 	l.j f80147e8 <__stack+0xf7b947ec>
    4634:	64 03 6d 01 	.word 0x64036d01
    4638:	00 05 02 00 	l.j 144e38 <__ram_length+0xc4e38>
    463c:	40 6e 70 21 	.word 0x406e7021
    4640:	00 05 02 00 	l.j 144e40 <__ram_length+0xc4e40>
    4644:	40 6e 74 15 	.word 0x406e7415
    4648:	00 05 02 00 	l.j 144e48 <__ram_length+0xc4e48>
    464c:	40 6e 7c 15 	.word 0x406e7c15
    4650:	00 05 02 00 	l.j 144e50 <__ram_length+0xc4e50>
    4654:	40 6e 84 15 	.word 0x406e8415
    4658:	00 05 02 00 	l.j 144e58 <__ram_length+0xc4e58>
    465c:	40 6e 88 13 	.word 0x406e8813
    4660:	00 05 02 00 	l.j 144e60 <__ram_length+0xc4e60>
    4664:	40 6e 90 18 	.word 0x406e9018
    4668:	00 05 02 00 	l.j 144e68 <__ram_length+0xc4e68>
    466c:	40 6e 9c 04 	.word 0x406e9c04
    4670:	0d 03 bb 09 	l.bnf 40f3294 <__stack+0x3c73298>
    4674:	01 00 05 02 	l.j 4005a7c <__stack+0x3b85a80>
    4678:	00 40 6e bc 	l.j 1020168 <__stack+0xba016c>
    467c:	19 00 05 02 	l.movhi r8,0x502
    4680:	00 40 6e c0 	l.j 1020180 <__stack+0xba0184>
    4684:	0f 00 05 02 	l.bnf fc005a8c <__stack+0xfbb85a90>
    4688:	00 40 6e c4 	l.j 1020198 <__stack+0xba019c>
    468c:	01 00 05 02 	l.j 4005a94 <__stack+0x3b85a98>
    4690:	00 40 6e c8 	l.j 10201b0 <__stack+0xba01b4>
    4694:	19 00 05 02 	l.movhi r8,0x502
    4698:	00 40 6e e0 	l.j 1020218 <__stack+0xba021c>
    469c:	16 00 05 02 	.word 0x16000502
    46a0:	00 40 6e ec 	l.j 1020250 <__stack+0xba0254>
    46a4:	15 00 05 02 	l.nop 0x502
    46a8:	00 40 6e f4 	l.j 1020278 <__stack+0xba027c>
    46ac:	18 00 05 02 	l.movhi r0,0x502
    46b0:	00 40 6f 04 	l.j 10202c0 <__stack+0xba02c4>
    46b4:	15 00 05 02 	l.nop 0x502
    46b8:	00 40 6f 08 	l.j 10202d8 <__stack+0xba02dc>
    46bc:	13 00 05 02 	l.bf fc005ac4 <__stack+0xfbb85ac8>
    46c0:	00 40 6f 0c 	l.j 10202f0 <__stack+0xba02f4>
    46c4:	15 00 05 02 	l.nop 0x502
    46c8:	00 40 6f 1c 	l.j 1020338 <__stack+0xba033c>
    46cc:	15 00 05 02 	l.nop 0x502
    46d0:	00 40 6f 24 	l.j 1020360 <__stack+0xba0364>
    46d4:	16 00 05 02 	.word 0x16000502
    46d8:	00 40 6f 90 	l.j 1020518 <__stack+0xba051c>
    46dc:	16 00 05 02 	.word 0x16000502
    46e0:	00 40 6f 9c 	l.j 1020550 <__stack+0xba0554>
    46e4:	15 00 05 02 	l.nop 0x502
    46e8:	00 40 6f d8 	l.j 1020648 <__stack+0xba064c>
    46ec:	15 00 05 02 	l.nop 0x502
    46f0:	00 40 6f ec 	l.j 10206a0 <__stack+0xba06a4>
    46f4:	15 00 05 02 	l.nop 0x502
    46f8:	00 40 70 00 	l.j 10206f8 <__stack+0xba06fc>
    46fc:	15 00 05 02 	l.nop 0x502
    4700:	00 40 70 08 	l.j 1020720 <__stack+0xba0724>
    4704:	18 00 05 02 	l.movhi r0,0x502
    4708:	00 40 70 28 	l.j 10207a8 <__stack+0xba07ac>
    470c:	16 00 05 02 	.word 0x16000502
    4710:	00 40 70 2c 	l.j 10207c0 <__stack+0xba07c4>
    4714:	12 00 05 02 	l.bf f8005b1c <__stack+0xf7b85b20>
    4718:	00 40 70 30 	l.j 10207d8 <__stack+0xba07dc>
    471c:	16 00 05 02 	.word 0x16000502
    4720:	00 40 70 34 	l.j 10207f0 <__stack+0xba07f4>
    4724:	12 00 05 02 	l.bf f8005b2c <__stack+0xf7b85b30>
    4728:	00 40 70 38 	l.j 1020808 <__stack+0xba080c>
    472c:	16 00 05 02 	.word 0x16000502
    4730:	00 40 70 50 	l.j 1020870 <__stack+0xba0874>
    4734:	16 00 05 02 	.word 0x16000502
    4738:	00 40 70 5c 	l.j 10208a8 <__stack+0xba08ac>
    473c:	15 00 05 02 	l.nop 0x502
    4740:	00 40 70 60 	l.j 10208c0 <__stack+0xba08c4>
    4744:	1a 00 05 02 	l.movhi r16,0x502
    4748:	00 40 70 88 	l.j 1020968 <__stack+0xba096c>
    474c:	03 b4 7e 01 	l.j fed23f50 <__stack+0xfe8a3f54>
    4750:	00 05 02 00 	l.j 144f50 <__ram_length+0xc4f50>
    4754:	40 70 bc 26 	.word 0x4070bc26
    4758:	00 05 02 00 	l.j 144f58 <__ram_length+0xc4f58>
    475c:	40 70 c8 17 	.word 0x4070c817
    4760:	00 05 02 00 	l.j 144f60 <__ram_length+0xc4f60>
    4764:	40 70 d4 15 	.word 0x4070d415
    4768:	00 05 02 00 	l.j 144f68 <__ram_length+0xc4f68>
    476c:	40 70 d8 13 	.word 0x4070d813
    4770:	00 05 02 00 	l.j 144f70 <__ram_length+0xc4f70>
    4774:	40 70 f0 15 	.word 0x4070f015
    4778:	00 05 02 00 	l.j 144f78 <__ram_length+0xc4f78>
    477c:	40 70 f4 13 	.word 0x4070f413
    4780:	00 05 02 00 	l.j 144f80 <__ram_length+0xc4f80>
    4784:	40 70 fc 19 	.word 0x4070fc19
    4788:	00 05 02 00 	l.j 144f88 <__ram_length+0xc4f88>
    478c:	40 71 08 15 	.word 0x40710815
    4790:	00 05 02 00 	l.j 144f90 <__ram_length+0xc4f90>
    4794:	40 71 14 15 	.word 0x40711415
    4798:	00 05 02 00 	l.j 144f98 <__ram_length+0xc4f98>
    479c:	40 71 2c 01 	.word 0x40712c01
    47a0:	00 05 02 00 	l.j 144fa0 <__ram_length+0xc4fa0>
    47a4:	40 71 3c 01 	.word 0x40713c01
    47a8:	00 05 02 00 	l.j 144fa8 <__ram_length+0xc4fa8>
    47ac:	40 71 4c 89 	.word 0x40714c89
    47b0:	00 05 02 00 	l.j 144fb0 <__ram_length+0xc4fb0>
    47b4:	40 71 50 1b 	.word 0x4071501b
    47b8:	00 05 02 00 	l.j 144fb8 <__ram_length+0xc4fb8>
    47bc:	40 71 54 03 	.word 0x40715403
    47c0:	fe 7e 01 00 	l.cust8 
    47c4:	05 02 00 40 	l.jal 40848c4 <__stack+0x3c048c8>
    47c8:	71 58 8f 00 	l.cust1 
    47cc:	05 02 00 40 	l.jal 40848cc <__stack+0x3c048d0>
    47d0:	71 5c 1b 00 	l.cust1 
    47d4:	05 02 00 40 	l.jal 40848d4 <__stack+0x3c048d8>
    47d8:	71 60 03 89 	l.cust1 
    47dc:	7f 01 00 05 	l.cust4 
    47e0:	02 00 40 71 	l.j f80149a4 <__stack+0xf7b949a8>
    47e4:	68 16 00 05 	.word 0x68160005
    47e8:	02 00 40 71 	l.j f80149ac <__stack+0xf7b949b0>
    47ec:	74 16 00 05 	l.cust2 
    47f0:	02 00 40 71 	l.j f80149b4 <__stack+0xf7b949b8>
    47f4:	88 15 00 05 	l.lws r0,0x5(r21)
    47f8:	02 00 40 71 	l.j f80149bc <__stack+0xf7b949c0>
    47fc:	8c 13 00 05 	l.lbz r0,0x5(r19)
    4800:	02 00 40 71 	l.j f80149c4 <__stack+0xf7b949c8>
    4804:	94 18 00 05 	l.lhz r0,0x5(r24)
    4808:	02 00 40 71 	l.j f80149cc <__stack+0xf7b949d0>
    480c:	98 17 00 05 	l.lhs r0,0x5(r23)
    4810:	02 00 40 71 	l.j f80149d4 <__stack+0xf7b949d8>
    4814:	ac 16 00 05 	l.xori r0,r22,0x5
    4818:	02 00 40 71 	l.j f80149dc <__stack+0xf7b949e0>
    481c:	b8 1a 00 05 	l.slli r0,r26,0x5
    4820:	02 00 40 71 	l.j f80149e4 <__stack+0xf7b949e8>
    4824:	bc 17 00 05 	l.sfeqi r23,0x5
    4828:	02 00 40 71 	l.j f80149ec <__stack+0xf7b949f0>
    482c:	c0 16 00 05 	l.mtspr r22,r0,0x5
    4830:	02 00 40 71 	l.j f80149f4 <__stack+0xf7b949f8>
    4834:	c4 03 75 01 	l.mac r3,r14
    4838:	00 05 02 00 	l.j 145038 <__ram_length+0xc5038>
    483c:	40 71 d4 1a 	.word 0x4071d41a
    4840:	00 05 02 00 	l.j 145040 <__ram_length+0xc5040>
    4844:	40 71 d8 17 	.word 0x4071d817
    4848:	00 05 02 00 	l.j 145048 <__ram_length+0xc5048>
    484c:	40 71 dc 11 	.word 0x4071dc11
    4850:	00 05 02 00 	l.j 145050 <__ram_length+0xc5050>
    4854:	40 71 e4 17 	.word 0x4071e417
    4858:	00 05 02 00 	l.j 145058 <__ram_length+0xc5058>
    485c:	40 71 f4 16 	.word 0x4071f416
    4860:	00 05 02 00 	l.j 145060 <__ram_length+0xc5060>
    4864:	40 72 10 16 	.word 0x40721016
    4868:	00 05 02 00 	l.j 145068 <__ram_length+0xc5068>
    486c:	40 72 1c 15 	.word 0x40721c15
    4870:	00 05 02 00 	l.j 145070 <__ram_length+0xc5070>
    4874:	40 72 24 17 	.word 0x40722417
    4878:	00 05 02 00 	l.j 145078 <__ram_length+0xc5078>
    487c:	40 72 28 17 	.word 0x40722817
    4880:	00 05 02 00 	l.j 145080 <__ram_length+0xc5080>
    4884:	40 72 44 03 	.word 0x40724403
    4888:	bd 7f 01 00 	l.sfgesi r31,0x100
    488c:	05 02 00 40 	l.jal 408498c <__stack+0x3c04990>
    4890:	72 5c 5b 00 	l.cust1 
    4894:	05 02 00 40 	l.jal 4084994 <__stack+0x3c04998>
    4898:	72 68 01 00 	l.cust1 
    489c:	05 02 00 40 	l.jal 408499c <__stack+0x3c049a0>
    48a0:	72 7c 01 00 	l.cust1 
    48a4:	05 02 00 40 	l.jal 40849a4 <__stack+0x3c049a8>
    48a8:	72 94 16 00 	l.cust1 
    48ac:	05 02 00 40 	l.jal 40849ac <__stack+0x3c049b0>
    48b0:	72 a4 01 00 	l.cust1 
    48b4:	05 02 00 40 	l.jal 40849b4 <__stack+0x3c049b8>
    48b8:	72 a8 16 00 	l.cust1 
    48bc:	05 02 00 40 	l.jal 40849bc <__stack+0x3c049c0>
    48c0:	72 ac 12 00 	l.cust1 
    48c4:	05 02 00 40 	l.jal 40849c4 <__stack+0x3c049c8>
    48c8:	72 b0 16 00 	l.cust1 
    48cc:	05 02 00 40 	l.jal 40849cc <__stack+0x3c049d0>
    48d0:	72 bc 17 00 	l.cust1 
    48d4:	05 02 00 40 	l.jal 40849d4 <__stack+0x3c049d8>
    48d8:	72 d4 16 00 	l.cust1 
    48dc:	05 02 00 40 	l.jal 40849dc <__stack+0x3c049e0>
    48e0:	72 f0 16 00 	l.cust1 
    48e4:	05 02 00 40 	l.jal 40849e4 <__stack+0x3c049e8>
    48e8:	73 04 17 00 	l.cust1 
    48ec:	05 02 00 40 	l.jal 40849ec <__stack+0x3c049f0>
    48f0:	73 2c 1e 00 	l.cust1 
    48f4:	05 02 00 40 	l.jal 40849f4 <__stack+0x3c049f8>
    48f8:	73 30 0a 00 	l.cust1 
    48fc:	05 02 00 40 	l.jal 40849fc <__stack+0x3c04a00>
    4900:	73 34 1e 00 	l.cust1 
    4904:	05 02 00 40 	l.jal 4084a04 <__stack+0x3c04a08>
    4908:	73 3c 0c 00 	l.cust1 
    490c:	05 02 00 40 	l.jal 4084a0c <__stack+0x3c04a10>
    4910:	73 48 15 00 	l.cust1 
    4914:	05 02 00 40 	l.jal 4084a14 <__stack+0x3c04a18>
    4918:	73 50 1b 00 	l.cust1 
    491c:	05 02 00 40 	l.jal 4084a1c <__stack+0x3c04a20>
    4920:	73 80 16 00 	l.cust1 
    4924:	05 02 00 40 	l.jal 4084a24 <__stack+0x3c04a28>
    4928:	73 90 15 00 	l.cust1 
    492c:	05 02 00 40 	l.jal 4084a2c <__stack+0x3c04a30>
    4930:	73 98 0f 00 	l.cust1 
    4934:	05 02 00 40 	l.jal 4084a34 <__stack+0x3c04a38>
    4938:	73 9c 01 00 	l.cust1 
    493c:	05 02 00 40 	l.jal 4084a3c <__stack+0x3c04a40>
    4940:	73 b4 04 08 	l.cust1 
    4944:	03 b3 74 01 	l.j fece1948 <__stack+0xfe86194c>
    4948:	00 05 02 00 	l.j 145148 <__ram_length+0xc5148>
    494c:	40 73 bc 23 	.word 0x4073bc23
    4950:	00 05 02 00 	l.j 145150 <__ram_length+0xc5150>
    4954:	40 73 c4 13 	.word 0x4073c413
    4958:	00 05 02 00 	l.j 145158 <__ram_length+0xc5158>
    495c:	40 73 d0 04 	.word 0x4073d004
    4960:	0d 03 ca 0b 	l.bnf 40f718c <__stack+0x3c77190>
    4964:	01 00 05 02 	l.j 4005d6c <__stack+0x3b85d70>
    4968:	00 40 73 e0 	l.j 10218e8 <__stack+0xba18ec>
    496c:	15 00 05 02 	l.nop 0x502
    4970:	00 40 73 e4 	l.j 1021900 <__stack+0xba1904>
    4974:	15 00 05 02 	l.nop 0x502
    4978:	00 40 73 e8 	l.j 1021918 <__stack+0xba191c>
    497c:	13 00 05 02 	l.bf fc005d84 <__stack+0xfbb85d88>
    4980:	00 40 73 ec 	l.j 1021930 <__stack+0xba1934>
    4984:	20 00 05 02 	l.sys 0x502
    4988:	00 40 73 f0 	l.j 1021948 <__stack+0xba194c>
    498c:	03 75 01 00 	l.j fdd44d8c <__stack+0xfd8c4d90>
    4990:	05 02 00 40 	l.jal 4084a90 <__stack+0x3c04a94>
    4994:	73 f4 16 00 	l.cust1 
    4998:	05 02 00 40 	l.jal 4084a98 <__stack+0x3c04a9c>
    499c:	73 f8 15 00 	l.cust1 
    49a0:	05 02 00 40 	l.jal 4084aa0 <__stack+0x3c04aa4>
    49a4:	73 fc 1c 00 	l.cust1 
    49a8:	05 02 00 40 	l.jal 4084aa8 <__stack+0x3c04aac>
    49ac:	74 04 0a 00 	l.cust2 
    49b0:	05 02 00 40 	l.jal 4084ab0 <__stack+0x3c04ab4>
    49b4:	74 08 1e 00 	l.cust2 
    49b8:	05 02 00 40 	l.jal 4084ab8 <__stack+0x3c04abc>
    49bc:	74 0c 0a 00 	l.cust2 
    49c0:	05 02 00 40 	l.jal 4084ac0 <__stack+0x3c04ac4>
    49c4:	74 10 1e 00 	l.cust2 
    49c8:	05 02 00 40 	l.jal 4084ac8 <__stack+0x3c04acc>
    49cc:	74 14 15 00 	l.cust2 
    49d0:	05 02 00 40 	l.jal 4084ad0 <__stack+0x3c04ad4>
    49d4:	74 18 0c 00 	l.cust2 
    49d8:	05 02 00 40 	l.jal 4084ad8 <__stack+0x3c04adc>
    49dc:	74 1c 1c 00 	l.cust2 
    49e0:	05 02 00 40 	l.jal 4084ae0 <__stack+0x3c04ae4>
    49e4:	74 30 01 00 	l.cust2 
    49e8:	05 02 00 40 	l.jal 4084ae8 <__stack+0x3c04aec>
    49ec:	74 40 01 00 	l.cust2 
    49f0:	05 02 00 40 	l.jal 4084af0 <__stack+0x3c04af4>
    49f4:	74 44 15 00 	l.cust2 
    49f8:	05 02 00 40 	l.jal 4084af8 <__stack+0x3c04afc>
    49fc:	74 70 17 00 	l.cust2 
    4a00:	05 02 00 40 	l.jal 4084b00 <__stack+0x3c04b04>
    4a04:	74 74 11 00 	l.cust2 
    4a08:	05 02 00 40 	l.jal 4084b08 <__stack+0x3c04b0c>
    4a0c:	74 78 17 00 	l.cust2 
    4a10:	05 02 00 40 	l.jal 4084b10 <__stack+0x3c04b14>
    4a14:	74 90 16 00 	l.cust2 
    4a18:	05 02 00 40 	l.jal 4084b18 <__stack+0x3c04b1c>
    4a1c:	74 9c 15 00 	l.cust2 
    4a20:	05 02 00 40 	l.jal 4084b20 <__stack+0x3c04b24>
    4a24:	74 a4 19 00 	l.cust2 
    4a28:	05 02 00 40 	l.jal 4084b28 <__stack+0x3c04b2c>
    4a2c:	74 a8 12 00 	l.cust2 
    4a30:	05 02 00 40 	l.jal 4084b30 <__stack+0x3c04b34>
    4a34:	74 ac 15 00 	l.cust2 
    4a38:	05 02 00 40 	l.jal 4084b38 <__stack+0x3c04b3c>
    4a3c:	74 b0 15 00 	l.cust2 
    4a40:	05 02 00 40 	l.jal 4084b40 <__stack+0x3c04b44>
    4a44:	74 b4 15 00 	l.cust2 
    4a48:	05 02 00 40 	l.jal 4084b48 <__stack+0x3c04b4c>
    4a4c:	74 b8 15 00 	l.cust2 
    4a50:	05 02 00 40 	l.jal 4084b50 <__stack+0x3c04b54>
    4a54:	74 c0 18 00 	l.cust2 
    4a58:	05 02 00 40 	l.jal 4084b58 <__stack+0x3c04b5c>
    4a5c:	74 c4 03 bc 	l.cust2 
    4a60:	7f 01 00 05 	l.cust4 
    4a64:	02 00 40 74 	l.j f8014c34 <__stack+0xf7b94c38>
    4a68:	d0 5b 00 05 	l.sd 0x1005(r27),r0
    4a6c:	02 00 40 74 	l.j f8014c3c <__stack+0xf7b94c40>
    4a70:	d4 13 00 05 	l.sw 0x5(r19),r0
    4a74:	02 00 40 74 	l.j f8014c44 <__stack+0xf7b94c48>
    4a78:	d8 03 ab 7f 	l.sb 0x37f(r3),r21
    4a7c:	01 00 05 02 	l.j 4005e84 <__stack+0x3b85e88>
    4a80:	00 40 74 e8 	l.j 1021e20 <__stack+0xba1e24>
    4a84:	6d 00 05 02 	.word 0x6d000502
    4a88:	00 40 74 f0 	l.j 1021e48 <__stack+0xba1e4c>
    4a8c:	03 94 7f 01 	l.j fe524690 <__stack+0xfe0a4694>
    4a90:	00 05 02 00 	l.j 145290 <__ram_length+0xc5290>
    4a94:	40 74 fc 84 	.word 0x4074fc84
    4a98:	00 05 02 00 	l.j 145298 <__ram_length+0xc5298>
    4a9c:	40 75 08 01 	.word 0x40750801
    4aa0:	00 05 02 00 	l.j 1452a0 <__ram_length+0xc52a0>
    4aa4:	40 75 18 16 	.word 0x40751816
    4aa8:	00 05 02 00 	l.j 1452a8 <__ram_length+0xc52a8>
    4aac:	40 75 20 16 	.word 0x40752016
    4ab0:	00 05 02 00 	l.j 1452b0 <__ram_length+0xc52b0>
    4ab4:	40 75 30 01 	.word 0x40753001
    4ab8:	00 05 02 00 	l.j 1452b8 <__ram_length+0xc52b8>
    4abc:	40 75 44 01 	.word 0x40754401
    4ac0:	00 05 02 00 	l.j 1452c0 <__ram_length+0xc52c0>
    4ac4:	40 75 6c 17 	.word 0x40756c17
    4ac8:	00 05 02 00 	l.j 1452c8 <__ram_length+0xc52c8>
    4acc:	40 75 80 18 	.word 0x40758018
    4ad0:	00 05 02 00 	l.j 1452d0 <__ram_length+0xc52d0>
    4ad4:	40 75 88 16 	.word 0x40758816
    4ad8:	00 05 02 00 	l.j 1452d8 <__ram_length+0xc52d8>
    4adc:	40 75 98 15 	.word 0x40759815
    4ae0:	00 05 02 00 	l.j 1452e0 <__ram_length+0xc52e0>
    4ae4:	40 75 9c 17 	.word 0x40759c17
    4ae8:	00 05 02 00 	l.j 1452e8 <__ram_length+0xc52e8>
    4aec:	40 75 d0 03 	.word 0x4075d003
    4af0:	c0 78 01 00 	l.mtspr r24,r0,0x1900
    4af4:	05 02 00 40 	l.jal 4084bf4 <__stack+0x3c04bf8>
    4af8:	75 d4 30 00 	l.cust2 
    4afc:	05 02 00 40 	l.jal 4084bfc <__stack+0x3c04c00>
    4b00:	75 d8 03 64 	l.cust2 
    4b04:	01 00 05 02 	l.j 4005f0c <__stack+0x3b85f10>
    4b08:	00 40 76 04 	l.j 1022318 <__stack+0xba231c>
    4b0c:	30 00 05 02 	.word 0x30000502
    4b10:	00 40 76 08 	l.j 1022330 <__stack+0xba2334>
    4b14:	03 64 01 00 	l.j fd904f14 <__stack+0xfd484f18>
    4b18:	05 02 00 40 	l.jal 4084c18 <__stack+0x3c04c1c>
    4b1c:	76 0c 30 00 	l.cust2 
    4b20:	05 02 00 40 	l.jal 4084c20 <__stack+0x3c04c24>
    4b24:	76 10 03 64 	l.cust2 
    4b28:	01 00 05 02 	l.j 4005f30 <__stack+0x3b85f34>
    4b2c:	00 40 76 14 	l.j 102237c <__stack+0xba2380>
    4b30:	30 00 05 02 	.word 0x30000502
    4b34:	00 40 76 1c 	l.j 10223a4 <__stack+0xba23a8>
    4b38:	03 64 01 00 	l.j fd904f38 <__stack+0xfd484f3c>
    4b3c:	05 02 00 40 	l.jal 4084c3c <__stack+0x3c04c40>
    4b40:	76 20 32 00 	l.cust2 
    4b44:	05 02 00 40 	l.jal 4084c44 <__stack+0x3c04c48>
    4b48:	76 2c 16 00 	l.cust2 
    4b4c:	05 02 00 40 	l.jal 4084c4c <__stack+0x3c04c50>
    4b50:	76 30 15 00 	l.cust2 
    4b54:	05 02 00 40 	l.jal 4084c54 <__stack+0x3c04c58>
    4b58:	76 34 16 00 	l.cust2 
    4b5c:	05 02 00 40 	l.jal 4084c5c <__stack+0x3c04c60>
    4b60:	76 38 12 00 	l.cust2 
    4b64:	05 02 00 40 	l.jal 4084c64 <__stack+0x3c04c68>
    4b68:	76 3c 16 00 	l.cust2 
    4b6c:	05 02 00 40 	l.jal 4084c6c <__stack+0x3c04c70>
    4b70:	76 40 12 00 	l.cust2 
    4b74:	05 02 00 40 	l.jal 4084c74 <__stack+0x3c04c78>
    4b78:	76 44 16 00 	l.cust2 
    4b7c:	05 02 00 40 	l.jal 4084c7c <__stack+0x3c04c80>
    4b80:	76 80 03 6a 	l.cust2 
    4b84:	01 00 05 02 	l.j 4005f8c <__stack+0x3b85f90>
    4b88:	00 40 76 84 	l.j 1022598 <__stack+0xba259c>
    4b8c:	13 00 05 02 	l.bf fc005f94 <__stack+0xfbb85f98>
    4b90:	00 40 76 8c 	l.j 10225c0 <__stack+0xba25c4>
    4b94:	2f 00 05 02 	.word 0x2f000502
    4b98:	00 40 76 9c 	l.j 1022608 <__stack+0xba260c>
    4b9c:	17 00 05 02 	.word 0x17000502
    4ba0:	00 40 76 a8 	l.j 1022640 <__stack+0xba2644>
    4ba4:	16 00 05 02 	.word 0x16000502
    4ba8:	00 40 76 c4 	l.j 10226b8 <__stack+0xba26bc>
    4bac:	16 00 05 02 	.word 0x16000502
    4bb0:	00 40 76 c8 	l.j 10226d0 <__stack+0xba26d4>
    4bb4:	15 00 05 02 	l.nop 0x502
    4bb8:	00 40 76 d4 	l.j 1022708 <__stack+0xba270c>
    4bbc:	17 00 05 02 	.word 0x17000502
    4bc0:	00 40 76 dc 	l.j 1022730 <__stack+0xba2734>
    4bc4:	16 00 05 02 	.word 0x16000502
    4bc8:	00 40 76 e4 	l.j 1022758 <__stack+0xba275c>
    4bcc:	16 00 05 02 	.word 0x16000502
    4bd0:	00 40 76 fc 	l.j 10227c0 <__stack+0xba27c4>
    4bd4:	16 00 05 02 	.word 0x16000502
    4bd8:	00 40 77 00 	l.j 10227d8 <__stack+0xba27dc>
    4bdc:	15 00 05 02 	l.nop 0x502
    4be0:	00 40 77 0c 	l.j 1022810 <__stack+0xba2814>
    4be4:	17 00 05 02 	.word 0x17000502
    4be8:	00 40 77 14 	l.j 1022838 <__stack+0xba283c>
    4bec:	16 00 05 02 	.word 0x16000502
    4bf0:	00 40 77 34 	l.j 10228c0 <__stack+0xba28c4>
    4bf4:	17 00 05 02 	.word 0x17000502
    4bf8:	00 40 77 38 	l.j 10228d8 <__stack+0xba28dc>
    4bfc:	13 00 05 02 	l.bf fc006004 <__stack+0xfbb86008>
    4c00:	00 40 77 3c 	l.j 10228f0 <__stack+0xba28f4>
    4c04:	15 00 05 02 	l.nop 0x502
    4c08:	00 40 77 44 	l.j 1022918 <__stack+0xba291c>
    4c0c:	17 00 05 02 	.word 0x17000502
    4c10:	00 40 77 4c 	l.j 1022940 <__stack+0xba2944>
    4c14:	13 00 05 02 	l.bf fc00601c <__stack+0xfbb86020>
    4c18:	00 40 77 58 	l.j 1022978 <__stack+0xba297c>
    4c1c:	03 e7 03 01 	l.j ff9c5820 <__stack+0xff545824>
    4c20:	00 05 02 00 	l.j 145420 <__ram_length+0xc5420>
    4c24:	40 77 60 03 	.word 0x40776003
    4c28:	9c 7c 01 00 	l.addi r3,r28,0x100
    4c2c:	05 02 00 40 	l.jal 4084d2c <__stack+0x3c04d30>
    4c30:	77 68 16 00 	l.cust2 
    4c34:	05 02 00 40 	l.jal 4084d34 <__stack+0x3c04d38>
    4c38:	77 80 17 00 	l.cust2 
    4c3c:	05 02 00 40 	l.jal 4084d3c <__stack+0x3c04d40>
    4c40:	77 84 13 00 	l.cust2 
    4c44:	05 02 00 40 	l.jal 4084d44 <__stack+0x3c04d48>
    4c48:	77 8c 19 00 	l.cust2 
    4c4c:	05 02 00 40 	l.jal 4084d4c <__stack+0x3c04d50>
    4c50:	77 90 15 00 	l.cust2 
    4c54:	05 02 00 40 	l.jal 4084d54 <__stack+0x3c04d58>
    4c58:	77 94 13 00 	l.cust2 
    4c5c:	05 02 00 40 	l.jal 4084d5c <__stack+0x3c04d60>
    4c60:	77 98 15 00 	l.cust2 
    4c64:	05 02 00 40 	l.jal 4084d64 <__stack+0x3c04d68>
    4c68:	77 9c 17 00 	l.cust2 
    4c6c:	05 02 00 40 	l.jal 4084d6c <__stack+0x3c04d70>
    4c70:	77 b4 17 00 	l.cust2 
    4c74:	05 02 00 40 	l.jal 4084d74 <__stack+0x3c04d78>
    4c78:	77 e0 19 00 	l.cust2 
    4c7c:	05 02 00 40 	l.jal 4084d7c <__stack+0x3c04d80>
    4c80:	77 e8 15 00 	l.cust2 
    4c84:	05 02 00 40 	l.jal 4084d84 <__stack+0x3c04d88>
    4c88:	77 f4 15 00 	l.cust2 
    4c8c:	05 02 00 40 	l.jal 4084d8c <__stack+0x3c04d90>
    4c90:	78 0c 01 00 	l.cust3 
    4c94:	05 02 00 40 	l.jal 4084d94 <__stack+0x3c04d98>
    4c98:	78 1c 01 00 	l.cust3 
    4c9c:	05 02 00 40 	l.jal 4084d9c <__stack+0x3c04da0>
    4ca0:	78 24 03 af 	l.cust3 
    4ca4:	7f 01 00 05 	l.cust4 
    4ca8:	02 00 40 78 	l.j f8014e88 <__stack+0xf7b94e8c>
    4cac:	28 65 00 05 	.word 0x28650005
    4cb0:	02 00 40 78 	l.j f8014e90 <__stack+0xf7b94e94>
    4cb4:	2c 03 af 7f 	.word 0x2c03af7f
    4cb8:	01 00 05 02 	l.j 40060c0 <__stack+0x3b860c4>
    4cbc:	00 40 78 30 	l.j 1022d7c <__stack+0xba2d80>
    4cc0:	af 00 05 02 	l.xori r24,r0,0x502
    4cc4:	00 40 78 34 	l.j 1022d94 <__stack+0xba2d98>
    4cc8:	03 fa 01 01 	l.j ffe850cc <__stack+0xffa050d0>
    4ccc:	00 05 02 00 	l.j 1454cc <__ram_length+0xc54cc>
    4cd0:	40 78 3c 03 	.word 0x40783c03
    4cd4:	da 7d 01 00 	l.sb 0xffff9900(r29),r0
    4cd8:	05 02 00 40 	l.jal 4084dd8 <__stack+0x3c04ddc>
    4cdc:	78 40 03 62 	l.cust3 
    4ce0:	01 00 05 02 	l.j 40060e8 <__stack+0x3b860ec>
    4ce4:	00 40 78 44 	l.j 1022df4 <__stack+0xba2df8>
    4ce8:	03 af 7f 01 	l.j febe48ec <__stack+0xfe7648f0>
    4cec:	00 05 02 00 	l.j 1454ec <__ram_length+0xc54ec>
    4cf0:	40 78 5c 03 	.word 0x40785c03
    4cf4:	95 03 01 00 	l.lhz r8,0x100(r3)
    4cf8:	05 02 00 40 	l.jal 4084df8 <__stack+0x3c04dfc>
    4cfc:	78 64 03 86 	l.cust3 
    4d00:	7e 01 00 05 	l.cust4 
    4d04:	02 00 40 78 	l.j f8014ee4 <__stack+0xf7b94ee8>
    4d08:	68 03 54 01 	.word 0x68035401
    4d0c:	00 05 02 00 	l.j 14550c <__ram_length+0xc550c>
    4d10:	40 78 6c 03 	.word 0x40786c03
    4d14:	67 01 00 05 	.word 0x67010005
    4d18:	02 00 40 78 	l.j f8014ef8 <__stack+0xf7b94efc>
    4d1c:	80 16 00 05 	l.ld r0,0x5(r22)
    4d20:	02 00 40 78 	l.j f8014f00 <__stack+0xf7b94f04>
    4d24:	90 16 00 05 	l.lbs r0,0x5(r22)
    4d28:	02 00 40 78 	l.j f8014f08 <__stack+0xf7b94f0c>
    4d2c:	94 15 00 05 	l.lhz r0,0x5(r21)
    4d30:	02 00 40 78 	l.j f8014f10 <__stack+0xf7b94f14>
    4d34:	98 13 00 05 	l.lhs r0,0x5(r19)
    4d38:	02 00 40 78 	l.j f8014f18 <__stack+0xf7b94f1c>
    4d3c:	a4 15 00 05 	l.andi r0,r21,0x5
    4d40:	02 00 40 78 	l.j f8014f20 <__stack+0xf7b94f24>
    4d44:	a8 13 00 05 	l.ori r0,r19,0x5
    4d48:	02 00 40 78 	l.j f8014f28 <__stack+0xf7b94f2c>
    4d4c:	b0 03 99 7f 	l.muli r0,r3,0xffff997f
    4d50:	01 00 05 02 	l.j 4006158 <__stack+0x3b8615c>
    4d54:	00 40 78 bc 	l.j 1023044 <__stack+0xba3048>
    4d58:	7f 00 05 02 	l.cust4 
    4d5c:	00 40 78 cc 	l.j 102308c <__stack+0xba3090>
    4d60:	16 00 05 02 	.word 0x16000502
    4d64:	00 40 78 e0 	l.j 10230e4 <__stack+0xba30e8>
    4d68:	15 00 05 02 	l.nop 0x502
    4d6c:	00 40 78 f4 	l.j 102313c <__stack+0xba3140>
    4d70:	15 00 05 02 	l.nop 0x502
    4d74:	00 40 79 20 	l.j 10231f4 <__stack+0xba31f8>
    4d78:	0e 00 05 02 	l.bnf f8006180 <__stack+0xf7b86184>
    4d7c:	00 40 79 24 	l.j 102320c <__stack+0xba3210>
    4d80:	1a 00 05 02 	l.movhi r16,0x502
    4d84:	00 40 79 28 	l.j 1023224 <__stack+0xba3228>
    4d88:	0e 00 05 02 	l.bnf f8006190 <__stack+0xf7b86194>
    4d8c:	00 40 79 2c 	l.j 102323c <__stack+0xba3240>
    4d90:	1a 00 05 02 	l.movhi r16,0x502
    4d94:	00 40 79 30 	l.j 1023254 <__stack+0xba3258>
    4d98:	0e 00 05 02 	l.bnf f80061a0 <__stack+0xf7b861a4>
    4d9c:	00 40 79 3c 	l.j 102328c <__stack+0xba3290>
    4da0:	23 00 05 02 	.word 0x23000502
    4da4:	00 40 79 44 	l.j 10232b4 <__stack+0xba32b8>
    4da8:	12 00 05 02 	l.bf f80061b0 <__stack+0xf7b861b4>
    4dac:	00 40 79 48 	l.j 10232cc <__stack+0xba32d0>
    4db0:	16 00 05 02 	.word 0x16000502
    4db4:	00 40 79 64 	l.j 1023344 <__stack+0xba3348>
    4db8:	16 00 05 02 	.word 0x16000502
    4dbc:	00 40 79 74 	l.j 102338c <__stack+0xba3390>
    4dc0:	16 00 05 02 	.word 0x16000502
    4dc4:	00 40 79 84 	l.j 10233d4 <__stack+0xba33d8>
    4dc8:	17 00 05 02 	.word 0x17000502
    4dcc:	00 40 79 88 	l.j 10233ec <__stack+0xba33f0>
    4dd0:	17 00 05 02 	.word 0x17000502
    4dd4:	00 40 79 94 	l.j 1023424 <__stack+0xba3428>
    4dd8:	17 00 05 02 	.word 0x17000502
    4ddc:	00 40 79 c4 	l.j 10234ec <__stack+0xba34f0>
    4de0:	01 00 05 02 	l.j 40061e8 <__stack+0x3b861ec>
    4de4:	00 40 79 cc 	l.j 1023514 <__stack+0xba3518>
    4de8:	1a 00 05 02 	l.movhi r16,0x502
    4dec:	00 40 79 dc 	l.j 102355c <__stack+0xba3560>
    4df0:	03 75 01 00 	l.j fdd451f0 <__stack+0xfd8c51f4>
    4df4:	05 02 00 40 	l.jal 4084ef4 <__stack+0x3c04ef8>
    4df8:	79 e0 21 00 	l.cust3 
    4dfc:	05 02 00 40 	l.jal 4084efc <__stack+0x3c04f00>
    4e00:	79 e4 03 73 	l.cust3 
    4e04:	01 00 05 02 	l.j 400620c <__stack+0x3b86210>
    4e08:	00 40 79 e8 	l.j 10235a8 <__stack+0xba35ac>
    4e0c:	21 00 05 02 	l.trap 0x502
    4e10:	00 40 79 ec 	l.j 10235c0 <__stack+0xba35c4>
    4e14:	03 73 01 00 	l.j fdcc5214 <__stack+0xfd845218>
    4e18:	05 02 00 40 	l.jal 4084f18 <__stack+0x3c04f1c>
    4e1c:	79 f0 2f 00 	l.cust3 
    4e20:	05 02 00 40 	l.jal 4084f20 <__stack+0x3c04f24>
    4e24:	79 f4 03 65 	l.cust3 
    4e28:	01 00 05 02 	l.j 4006230 <__stack+0x3b86234>
    4e2c:	00 40 79 fc 	l.j 102361c <__stack+0xba3620>
    4e30:	21 00 05 02 	l.trap 0x502
    4e34:	00 40 7a 08 	l.j 1023654 <__stack+0xba3658>
    4e38:	15 00 05 02 	l.nop 0x502
    4e3c:	00 40 7a 10 	l.j 102367c <__stack+0xba3680>
    4e40:	15 00 05 02 	l.nop 0x502
    4e44:	00 40 7a 18 	l.j 10236a4 <__stack+0xba36a8>
    4e48:	15 00 05 02 	l.nop 0x502
    4e4c:	00 40 7a 20 	l.j 10236cc <__stack+0xba36d0>
    4e50:	15 00 05 02 	l.nop 0x502
    4e54:	00 40 7a 28 	l.j 10236f4 <__stack+0xba36f8>
    4e58:	15 00 05 02 	l.nop 0x502
    4e5c:	00 40 7a 30 	l.j 102371c <__stack+0xba3720>
    4e60:	15 00 05 02 	l.nop 0x502
    4e64:	00 40 7a 38 	l.j 1023744 <__stack+0xba3748>
    4e68:	15 00 05 02 	l.nop 0x502
    4e6c:	00 40 7a 40 	l.j 102376c <__stack+0xba3770>
    4e70:	15 00 05 02 	l.nop 0x502
    4e74:	00 40 7a 48 	l.j 1023794 <__stack+0xba3798>
    4e78:	15 00 05 02 	l.nop 0x502
    4e7c:	00 40 7a 50 	l.j 10237bc <__stack+0xba37c0>
    4e80:	15 00 05 02 	l.nop 0x502
    4e84:	00 40 7a 58 	l.j 10237e4 <__stack+0xba37e8>
    4e88:	15 00 05 02 	l.nop 0x502
    4e8c:	00 40 7a 64 	l.j 102381c <__stack+0xba3820>
    4e90:	15 00 05 02 	l.nop 0x502
    4e94:	00 40 7a 68 	l.j 1023834 <__stack+0xba3838>
    4e98:	16 00 05 02 	.word 0x16000502
    4e9c:	00 40 7a 70 	l.j 102385c <__stack+0xba3860>
    4ea0:	15 00 05 02 	l.nop 0x502
    4ea4:	00 40 7a 7c 	l.j 1023894 <__stack+0xba3898>
    4ea8:	03 63 01 00 	l.j fd8c52a8 <__stack+0xfd4452ac>
    4eac:	05 02 00 40 	l.jal 4084fac <__stack+0x3c04fb0>
    4eb0:	7a 80 31 00 	l.cust3 
    4eb4:	05 02 00 40 	l.jal 4084fb4 <__stack+0x3c04fb8>
    4eb8:	7a 8c 03 63 	l.cust3 
    4ebc:	01 00 05 02 	l.j 40062c4 <__stack+0x3b862c8>
    4ec0:	00 40 7a 90 	l.j 1023900 <__stack+0xba3904>
    4ec4:	34 00 05 02 	.word 0x34000502
    4ec8:	00 40 7a a8 	l.j 1023968 <__stack+0xba396c>
    4ecc:	1b 00 05 02 	l.movhi r24,0x502
    4ed0:	00 40 7a b4 	l.j 10239a0 <__stack+0xba39a4>
    4ed4:	01 00 05 02 	l.j 40062dc <__stack+0x3b862e0>
    4ed8:	00 40 7a d0 	l.j 1023a18 <__stack+0xba3a1c>
    4edc:	16 00 05 02 	.word 0x16000502
    4ee0:	00 40 7a e0 	l.j 1023a60 <__stack+0xba3a64>
    4ee4:	01 00 05 02 	l.j 40062ec <__stack+0x3b862f0>
    4ee8:	00 40 7b 18 	l.j 1023b48 <__stack+0xba3b4c>
    4eec:	16 00 05 02 	.word 0x16000502
    4ef0:	00 40 7b 24 	l.j 1023b80 <__stack+0xba3b84>
    4ef4:	16 00 05 02 	.word 0x16000502
    4ef8:	00 40 7b 3c 	l.j 1023be8 <__stack+0xba3bec>
    4efc:	16 00 05 02 	.word 0x16000502
    4f00:	00 40 7b 58 	l.j 1023c60 <__stack+0xba3c64>
    4f04:	15 00 05 02 	l.nop 0x502
    4f08:	00 40 7b 64 	l.j 1023c98 <__stack+0xba3c9c>
    4f0c:	15 00 05 02 	l.nop 0x502
    4f10:	00 40 7b 68 	l.j 1023cb0 <__stack+0xba3cb4>
    4f14:	13 00 05 02 	l.bf fc00631c <__stack+0xfbb86320>
    4f18:	00 40 7b 74 	l.j 1023ce8 <__stack+0xba3cec>
    4f1c:	15 00 05 02 	l.nop 0x502
    4f20:	00 40 7b 78 	l.j 1023d00 <__stack+0xba3d04>
    4f24:	13 00 05 02 	l.bf fc00632c <__stack+0xfbb86330>
    4f28:	00 40 7b 7c 	l.j 1023d18 <__stack+0xba3d1c>
    4f2c:	15 00 05 02 	l.nop 0x502
    4f30:	00 40 7b 8c 	l.j 1023d60 <__stack+0xba3d64>
    4f34:	15 00 05 02 	l.nop 0x502
    4f38:	00 40 7b a0 	l.j 1023db8 <__stack+0xba3dbc>
    4f3c:	15 00 05 02 	l.nop 0x502
    4f40:	00 40 7b b4 	l.j 1023e10 <__stack+0xba3e14>
    4f44:	16 00 05 02 	.word 0x16000502
    4f48:	00 40 7b c8 	l.j 1023e68 <__stack+0xba3e6c>
    4f4c:	18 00 05 02 	l.movhi r0,0x502
    4f50:	00 40 7c 20 	l.j 1023fd0 <__stack+0xba3fd4>
    4f54:	16 00 05 02 	.word 0x16000502
    4f58:	00 40 7c 30 	l.j 1024018 <__stack+0xba401c>
    4f5c:	16 00 05 02 	.word 0x16000502
    4f60:	00 40 7c 34 	l.j 1024030 <__stack+0xba4034>
    4f64:	13 00 05 02 	l.bf fc00636c <__stack+0xfbb86370>
    4f68:	00 40 7c 38 	l.j 1024048 <__stack+0xba404c>
    4f6c:	15 00 05 02 	l.nop 0x502
    4f70:	00 40 7c 4c 	l.j 10240a0 <__stack+0xba40a4>
    4f74:	15 00 05 02 	l.nop 0x502
    4f78:	00 40 7c 60 	l.j 10240f8 <__stack+0xba40fc>
    4f7c:	15 00 05 02 	l.nop 0x502
    4f80:	00 40 7c 74 	l.j 1024150 <__stack+0xba4154>
    4f84:	18 00 05 02 	l.movhi r0,0x502
    4f88:	00 40 7c 78 	l.j 1024168 <__stack+0xba416c>
    4f8c:	03 be 7e 01 	l.j fefa4790 <__stack+0xfeb24794>
    4f90:	00 05 02 00 	l.j 145790 <__ram_length+0xc5790>
    4f94:	40 7c 7c d6 	.word 0x407c7cd6
    4f98:	00 05 02 00 	l.j 145798 <__ram_length+0xc5798>
    4f9c:	40 7c 80 03 	.word 0x407c8003
    4fa0:	be 7e 01 00 	.word 0xbe7e0100
    4fa4:	05 02 00 40 	l.jal 40850a4 <__stack+0x3c050a8>
    4fa8:	7c 84 d6 00 	l.cust4 
    4fac:	05 02 00 40 	l.jal 40850ac <__stack+0x3c050b0>
    4fb0:	7c a0 03 be 	l.cust4 
    4fb4:	7e 01 00 05 	l.cust4 
    4fb8:	02 00 40 7c 	l.j f80151a8 <__stack+0xf7b951ac>
    4fbc:	a4 d6 00 05 	l.andi r6,r22,0x5
    4fc0:	02 00 40 7c 	l.j f80151b0 <__stack+0xf7b951b4>
    4fc4:	b0 16 00 05 	l.muli r0,r22,0x5
    4fc8:	02 00 40 7d 	l.j f80151bc <__stack+0xf7b951c0>
    4fcc:	10 12 00 05 	l.bf 484fe0 <__stack+0x4fe4>
    4fd0:	02 00 40 7d 	l.j f80151c4 <__stack+0xf7b951c8>
    4fd4:	14 19 00 05 	.word 0x14190005
    4fd8:	02 00 40 7d 	l.j f80151cc <__stack+0xf7b951d0>
    4fdc:	18 0f 00 05 	.word 0x180f0005
    4fe0:	02 00 40 7d 	l.j f80151d4 <__stack+0xf7b951d8>
    4fe4:	1c 1a 00 05 	.word 0x1c1a0005
    4fe8:	02 00 40 7d 	l.j f80151dc <__stack+0xf7b951e0>
    4fec:	20 0e 00 05 	.word 0x200e0005
    4ff0:	02 00 40 7d 	l.j f80151e4 <__stack+0xf7b951e8>
    4ff4:	24 01 00 05 	l.rfe 
    4ff8:	02 00 40 7d 	l.j f80151ec <__stack+0xf7b951f0>
    4ffc:	38 20 00 05 	.word 0x38200005
    5000:	02 00 40 7d 	l.j f80151f4 <__stack+0xf7b951f8>
    5004:	40 16 00 05 	.word 0x40160005
    5008:	02 00 40 7d 	l.j f80151fc <__stack+0xf7b95200>
    500c:	58 01 00 05 	.word 0x58010005
    5010:	02 00 40 7d 	l.j f8015204 <__stack+0xf7b95208>
    5014:	64 01 00 05 	.word 0x64010005
    5018:	02 00 40 7d 	l.j f801520c <__stack+0xf7b95210>
    501c:	80 17 00 05 	l.ld r0,0x5(r23)
    5020:	02 00 40 7d 	l.j f8015214 <__stack+0xf7b95218>
    5024:	b8 16 00 05 	l.slli r0,r22,0x5
    5028:	02 00 40 7d 	l.j f801521c <__stack+0xf7b95220>
    502c:	bc 12 00 05 	l.sfeqi r18,0x5
    5030:	02 00 40 7d 	l.j f8015224 <__stack+0xf7b95228>
    5034:	cc 16 00 05 	.word 0xcc160005
    5038:	02 00 40 7d 	l.j f801522c <__stack+0xf7b95230>
    503c:	d4 15 00 05 	l.sw 0x5(r21),r0
    5040:	02 00 40 7d 	l.j f8015234 <__stack+0xf7b95238>
    5044:	d8 13 00 05 	l.sb 0x5(r19),r0
    5048:	02 00 40 7d 	l.j f801523c <__stack+0xf7b95240>
    504c:	dc 15 00 05 	l.sh 0x5(r21),r0
    5050:	02 00 40 7d 	l.j f8015244 <__stack+0xf7b95248>
    5054:	e4 16 00 05 	l.sfeq r22,r0
    5058:	02 00 40 7d 	l.j f801524c <__stack+0xf7b95250>
    505c:	e8 12 00 05 	.word 0xe8120005
    5060:	02 00 40 7d 	l.j f8015254 <__stack+0xf7b95258>
    5064:	ec 16 00 05 	.word 0xec160005
    5068:	02 00 40 7e 	l.j f8015260 <__stack+0xf7b95264>
    506c:	00 15 00 05 	l.j 545080 <__stack+0xc5084>
    5070:	02 00 40 7e 	l.j f8015268 <__stack+0xf7b9526c>
    5074:	04 15 00 05 	l.jal 545088 <__stack+0xc508c>
    5078:	02 00 40 7e 	l.j f8015270 <__stack+0xf7b95274>
    507c:	08 13 00 05 	.word 0x08130005
    5080:	02 00 40 7e 	l.j f8015278 <__stack+0xf7b9527c>
    5084:	0c 15 00 05 	l.bnf 545098 <__stack+0xc509c>
    5088:	02 00 40 7e 	l.j f8015280 <__stack+0xf7b95284>
    508c:	10 18 00 05 	l.bf 6050a0 <__stack+0x1850a4>
    5090:	02 00 40 7e 	l.j f8015288 <__stack+0xf7b9528c>
    5094:	14 0f 00 05 	.word 0x140f0005
    5098:	02 00 40 7e 	l.j f8015290 <__stack+0xf7b95294>
    509c:	18 15 00 05 	.word 0x18150005
    50a0:	02 00 40 7e 	l.j f8015298 <__stack+0xf7b9529c>
    50a4:	28 15 00 05 	.word 0x28150005
    50a8:	02 00 40 7e 	l.j f80152a0 <__stack+0xf7b952a4>
    50ac:	3c 15 00 05 	.word 0x3c150005
    50b0:	02 00 40 7e 	l.j f80152a8 <__stack+0xf7b952ac>
    50b4:	44 19 00 05 	l.jr r0
    50b8:	02 00 40 7e 	l.j f80152b0 <__stack+0xf7b952b4>
    50bc:	4c 16 00 05 	l.maci r22,0x5
    50c0:	02 00 40 7e 	l.j f80152b8 <__stack+0xf7b952bc>
    50c4:	a0 16 00 05 	l.addic r0,r22,0x5
    50c8:	02 00 40 7e 	l.j f80152c0 <__stack+0xf7b952c4>
    50cc:	b4 16 00 05 	l.mfspr r0,r22,0x5
    50d0:	02 00 40 7e 	l.j f80152c8 <__stack+0xf7b952cc>
    50d4:	d0 15 00 05 	l.sd 0x5(r21),r0
    50d8:	02 00 40 7e 	l.j f80152d0 <__stack+0xf7b952d4>
    50dc:	dc 15 00 05 	l.sh 0x5(r21),r0
    50e0:	02 00 40 7e 	l.j f80152d8 <__stack+0xf7b952dc>
    50e4:	e0 13 00 05 	l.xor r0,r19,r0
    50e8:	02 00 40 7e 	l.j f80152e0 <__stack+0xf7b952e4>
    50ec:	ec 15 00 05 	.word 0xec150005
    50f0:	02 00 40 7e 	l.j f80152e8 <__stack+0xf7b952ec>
    50f4:	f0 13 00 05 	l.cust5 r0,r19,r0,0x0,0x5
    50f8:	02 00 40 7e 	l.j f80152f0 <__stack+0xf7b952f4>
    50fc:	f8 15 00 05 	l.cust7 
    5100:	02 00 40 7f 	l.j f80152fc <__stack+0xf7b95300>
    5104:	08 15 00 05 	.word 0x08150005
    5108:	02 00 40 7f 	l.j f8015304 <__stack+0xf7b95308>
    510c:	1c 15 00 05 	.word 0x1c150005
    5110:	02 00 40 7f 	l.j f801530c <__stack+0xf7b95310>
    5114:	30 16 00 05 	.word 0x30160005
    5118:	02 00 40 7f 	l.j f8015314 <__stack+0xf7b95318>
    511c:	44 18 00 05 	l.jr r0
    5120:	02 00 40 7f 	l.j f801531c <__stack+0xf7b95320>
    5124:	9c 16 00 05 	l.addi r0,r22,0x5
    5128:	02 00 40 7f 	l.j f8015324 <__stack+0xf7b95328>
    512c:	ac 16 00 05 	l.xori r0,r22,0x5
    5130:	02 00 40 7f 	l.j f801532c <__stack+0xf7b95330>
    5134:	b0 13 00 05 	l.muli r0,r19,0x5
    5138:	02 00 40 7f 	l.j f8015334 <__stack+0xf7b95338>
    513c:	b4 15 00 05 	l.mfspr r0,r21,0x5
    5140:	02 00 40 7f 	l.j f801533c <__stack+0xf7b95340>
    5144:	b8 13 00 05 	l.slli r0,r19,0x5
    5148:	02 00 40 7f 	l.j f8015344 <__stack+0xf7b95348>
    514c:	bc 15 00 05 	l.sfeqi r21,0x5
    5150:	02 00 40 7f 	l.j f801534c <__stack+0xf7b95350>
    5154:	cc 15 00 05 	.word 0xcc150005
    5158:	02 00 40 7f 	l.j f8015354 <__stack+0xf7b95358>
    515c:	e0 15 00 05 	l.xor r0,r21,r0
    5160:	02 00 40 7f 	l.j f801535c <__stack+0xf7b95360>
    5164:	f4 18 00 05 	l.cust6 
    5168:	02 00 40 7f 	l.j f8015364 <__stack+0xf7b95368>
    516c:	f8 03 85 7e 	l.cust7 
    5170:	01 00 05 02 	l.j 4006578 <__stack+0x3b8657c>
    5174:	00 40 7f fc 	l.j 1025164 <__stack+0xba5168>
    5178:	03 fb 01 01 	l.j ffec557c <__stack+0xffa45580>
    517c:	00 05 02 00 	l.j 14597c <__ram_length+0xc597c>
    5180:	40 80 00 03 	.word 0x40800003
    5184:	85 7e 01 00 	l.lwz r11,0x100(r30)
    5188:	05 02 00 40 	l.jal 4085288 <__stack+0x3c0528c>
    518c:	80 04 03 fb 	l.ld r0,0x3fb(r4)
    5190:	01 01 00 05 	l.j 40451a4 <__stack+0x3bc51a8>
    5194:	02 00 40 80 	l.j f8015394 <__stack+0xf7b95398>
    5198:	20 03 85 7e 	.word 0x2003857e
    519c:	01 00 05 02 	l.j 40065a4 <__stack+0x3b865a8>
    51a0:	00 40 80 24 	l.j 1025230 <__stack+0xba5234>
    51a4:	03 fb 01 01 	l.j ffec55a8 <__stack+0xffa455ac>
    51a8:	00 05 02 00 	l.j 1459a8 <__ram_length+0xc59a8>
    51ac:	40 80 30 16 	.word 0x40803016
    51b0:	00 05 02 00 	l.j 1459b0 <__ram_length+0xc59b0>
    51b4:	40 80 90 12 	.word 0x40809012
    51b8:	00 05 02 00 	l.j 1459b8 <__ram_length+0xc59b8>
    51bc:	40 80 94 19 	.word 0x40809419
    51c0:	00 05 02 00 	l.j 1459c0 <__ram_length+0xc59c0>
    51c4:	40 80 98 0f 	.word 0x4080980f
    51c8:	00 05 02 00 	l.j 1459c8 <__ram_length+0xc59c8>
    51cc:	40 80 9c 1a 	.word 0x40809c1a
    51d0:	00 05 02 00 	l.j 1459d0 <__ram_length+0xc59d0>
    51d4:	40 80 a0 0e 	.word 0x4080a00e
    51d8:	00 05 02 00 	l.j 1459d8 <__ram_length+0xc59d8>
    51dc:	40 80 a4 01 	.word 0x4080a401
    51e0:	00 05 02 00 	l.j 1459e0 <__ram_length+0xc59e0>
    51e4:	40 80 b8 21 	.word 0x4080b821
    51e8:	00 05 02 00 	l.j 1459e8 <__ram_length+0xc59e8>
    51ec:	40 80 c0 16 	.word 0x4080c016
    51f0:	00 05 02 00 	l.j 1459f0 <__ram_length+0xc59f0>
    51f4:	40 80 cc 16 	.word 0x4080cc16
    51f8:	00 05 02 00 	l.j 1459f8 <__ram_length+0xc59f8>
    51fc:	40 81 20 17 	.word 0x40812017
    5200:	00 05 02 00 	l.j 145a00 <__ram_length+0xc5a00>
    5204:	40 81 48 15 	.word 0x40814815
    5208:	00 05 02 00 	l.j 145a08 <__ram_length+0xc5a08>
    520c:	40 81 4c 15 	.word 0x40814c15
    5210:	00 05 02 00 	l.j 145a10 <__ram_length+0xc5a10>
    5214:	40 81 50 13 	.word 0x40815013
    5218:	00 05 02 00 	l.j 145a18 <__ram_length+0xc5a18>
    521c:	40 81 60 15 	.word 0x40816015
    5220:	00 05 02 00 	l.j 145a20 <__ram_length+0xc5a20>
    5224:	40 81 64 13 	.word 0x40816413
    5228:	00 05 02 00 	l.j 145a28 <__ram_length+0xc5a28>
    522c:	40 81 68 15 	.word 0x40816815
    5230:	00 05 02 00 	l.j 145a30 <__ram_length+0xc5a30>
    5234:	40 81 78 15 	.word 0x40817815
    5238:	00 05 02 00 	l.j 145a38 <__ram_length+0xc5a38>
    523c:	40 81 8c 15 	.word 0x40818c15
    5240:	00 05 02 00 	l.j 145a40 <__ram_length+0xc5a40>
    5244:	40 81 a8 19 	.word 0x4081a819
    5248:	00 05 02 00 	l.j 145a48 <__ram_length+0xc5a48>
    524c:	40 81 ac 13 	.word 0x4081ac13
    5250:	00 05 02 00 	l.j 145a50 <__ram_length+0xc5a50>
    5254:	40 81 b0 15 	.word 0x4081b015
    5258:	00 05 02 00 	l.j 145a58 <__ram_length+0xc5a58>
    525c:	40 81 b4 13 	.word 0x4081b413
    5260:	00 05 02 00 	l.j 145a60 <__ram_length+0xc5a60>
    5264:	40 81 b8 15 	.word 0x4081b815
    5268:	00 05 02 00 	l.j 145a68 <__ram_length+0xc5a68>
    526c:	40 81 bc 13 	.word 0x4081bc13
    5270:	00 05 02 00 	l.j 145a70 <__ram_length+0xc5a70>
    5274:	40 81 c8 17 	.word 0x4081c817
    5278:	00 05 02 00 	l.j 145a78 <__ram_length+0xc5a78>
    527c:	40 81 d4 1a 	.word 0x4081d41a
    5280:	00 05 02 00 	l.j 145a80 <__ram_length+0xc5a80>
    5284:	40 82 2c 15 	.word 0x40822c15
    5288:	00 05 02 00 	l.j 145a88 <__ram_length+0xc5a88>
    528c:	40 82 80 c6 	.word 0x408280c6
    5290:	00 05 02 00 	l.j 145a90 <__ram_length+0xc5a90>
    5294:	40 82 88 03 	.word 0x40828803
    5298:	d8 7e 01 00 	l.sb 0x1900(r30),r0
    529c:	05 02 00 40 	l.jal 408539c <__stack+0x3c053a0>
    52a0:	82 90 16 00 	l.ld r20,0x1600(r16)
    52a4:	05 02 00 40 	l.jal 40853a4 <__stack+0x3c053a8>
    52a8:	82 9c 16 00 	l.ld r20,0x1600(r28)
    52ac:	05 02 00 40 	l.jal 40853ac <__stack+0x3c053b0>
    52b0:	82 f0 17 00 	l.ld r23,0x1700(r16)
    52b4:	05 02 00 40 	l.jal 40853b4 <__stack+0x3c053b8>
    52b8:	83 08 17 00 	l.ld r24,0x1700(r8)
    52bc:	05 02 00 40 	l.jal 40853bc <__stack+0x3c053c0>
    52c0:	83 10 16 00 	l.ld r24,0x1600(r16)
    52c4:	05 02 00 40 	l.jal 40853c4 <__stack+0x3c053c8>
    52c8:	83 38 15 00 	l.ld r25,0x1500(r24)
    52cc:	05 02 00 40 	l.jal 40853cc <__stack+0x3c053d0>
    52d0:	83 40 15 00 	l.ld r26,0x1500(r0)
    52d4:	05 02 00 40 	l.jal 40853d4 <__stack+0x3c053d8>
    52d8:	83 44 13 00 	l.ld r26,0x1300(r4)
    52dc:	05 02 00 40 	l.jal 40853dc <__stack+0x3c053e0>
    52e0:	83 50 15 00 	l.ld r26,0x1500(r16)
    52e4:	05 02 00 40 	l.jal 40853e4 <__stack+0x3c053e8>
    52e8:	83 54 13 00 	l.ld r26,0x1300(r20)
    52ec:	05 02 00 40 	l.jal 40853ec <__stack+0x3c053f0>
    52f0:	83 5c 15 00 	l.ld r26,0x1500(r28)
    52f4:	05 02 00 40 	l.jal 40853f4 <__stack+0x3c053f8>
    52f8:	83 6c 15 00 	l.ld r27,0x1500(r12)
    52fc:	05 02 00 40 	l.jal 40853fc <__stack+0x3c05400>
    5300:	83 80 15 00 	l.ld r28,0x1500(r0)
    5304:	05 02 00 40 	l.jal 4085404 <__stack+0x3c05408>
    5308:	83 98 19 00 	l.ld r28,0x1900(r24)
    530c:	05 02 00 40 	l.jal 408540c <__stack+0x3c05410>
    5310:	83 9c 13 00 	l.ld r28,0x1300(r28)
    5314:	05 02 00 40 	l.jal 4085414 <__stack+0x3c05418>
    5318:	83 a0 15 00 	l.ld r29,0x1500(r0)
    531c:	05 02 00 40 	l.jal 408541c <__stack+0x3c05420>
    5320:	83 a4 13 00 	l.ld r29,0x1300(r4)
    5324:	05 02 00 40 	l.jal 4085424 <__stack+0x3c05428>
    5328:	83 a8 15 00 	l.ld r29,0x1500(r8)
    532c:	05 02 00 40 	l.jal 408542c <__stack+0x3c05430>
    5330:	83 ac 13 00 	l.ld r29,0x1300(r12)
    5334:	05 02 00 40 	l.jal 4085434 <__stack+0x3c05438>
    5338:	83 b8 17 00 	l.ld r29,0x1700(r24)
    533c:	05 02 00 40 	l.jal 408543c <__stack+0x3c05440>
    5340:	83 bc 03 6f 	l.ld r29,0x36f(r28)
    5344:	01 00 05 02 	l.j 400674c <__stack+0x3b86750>
    5348:	00 40 83 c4 	l.j 1026258 <__stack+0xba625c>
    534c:	2b 00 05 02 	.word 0x2b000502
    5350:	00 40 84 1c 	l.j 10263c0 <__stack+0xba63c4>
    5354:	15 00 05 02 	l.nop 0x502
    5358:	00 40 84 6c 	l.j 1026508 <__stack+0xba650c>
    535c:	16 00 05 02 	.word 0x16000502
    5360:	00 40 84 80 	l.j 1026560 <__stack+0xba6564>
    5364:	16 00 05 02 	.word 0x16000502
    5368:	00 40 84 84 	l.j 1026578 <__stack+0xba657c>
    536c:	13 00 05 02 	l.bf fc006774 <__stack+0xfbb86778>
    5370:	00 40 84 88 	l.j 1026590 <__stack+0xba6594>
    5374:	15 00 05 02 	l.nop 0x502
    5378:	00 40 84 9c 	l.j 10265e8 <__stack+0xba65ec>
    537c:	15 00 05 02 	l.nop 0x502
    5380:	00 40 84 b0 	l.j 1026640 <__stack+0xba6644>
    5384:	15 00 05 02 	l.nop 0x502
    5388:	00 40 84 c0 	l.j 1026688 <__stack+0xba668c>
    538c:	98 00 05 02 	l.lhs r0,0x502(r0)
    5390:	00 40 84 c8 	l.j 10266b0 <__stack+0xba66b4>
    5394:	03 80 7f 01 	l.j fe024f98 <__stack+0xfdba4f9c>
    5398:	00 05 02 00 	l.j 145b98 <__ram_length+0xc5b98>
    539c:	40 84 d0 16 	.word 0x4084d016
    53a0:	00 05 02 00 	l.j 145ba0 <__ram_length+0xc5ba0>
    53a4:	40 85 24 16 	.word 0x40852416
    53a8:	00 05 02 00 	l.j 145ba8 <__ram_length+0xc5ba8>
    53ac:	40 85 2c 16 	.word 0x40852c16
    53b0:	00 05 02 00 	l.j 145bb0 <__ram_length+0xc5bb0>
    53b4:	40 85 4c 15 	.word 0x40854c15
    53b8:	00 05 02 00 	l.j 145bb8 <__ram_length+0xc5bb8>
    53bc:	40 85 50 15 	.word 0x40855015
    53c0:	00 05 02 00 	l.j 145bc0 <__ram_length+0xc5bc0>
    53c4:	40 85 54 13 	.word 0x40855413
    53c8:	00 05 02 00 	l.j 145bc8 <__ram_length+0xc5bc8>
    53cc:	40 85 68 15 	.word 0x40856815
    53d0:	00 05 02 00 	l.j 145bd0 <__ram_length+0xc5bd0>
    53d4:	40 85 6c 13 	.word 0x40856c13
    53d8:	00 05 02 00 	l.j 145bd8 <__ram_length+0xc5bd8>
    53dc:	40 85 74 15 	.word 0x40857415
    53e0:	00 05 02 00 	l.j 145be0 <__ram_length+0xc5be0>
    53e4:	40 85 84 15 	.word 0x40858415
    53e8:	00 05 02 00 	l.j 145be8 <__ram_length+0xc5be8>
    53ec:	40 85 98 15 	.word 0x40859815
    53f0:	00 05 02 00 	l.j 145bf0 <__ram_length+0xc5bf0>
    53f4:	40 85 c4 16 	.word 0x4085c416
    53f8:	00 05 02 00 	l.j 145bf8 <__ram_length+0xc5bf8>
    53fc:	40 85 d4 15 	.word 0x4085d415
    5400:	00 05 02 00 	l.j 145c00 <__ram_length+0xc5c00>
    5404:	40 85 e0 18 	.word 0x4085e018
    5408:	00 05 02 00 	l.j 145c08 <__ram_length+0xc5c08>
    540c:	40 86 38 16 	.word 0x40863816
    5410:	00 05 02 00 	l.j 145c10 <__ram_length+0xc5c10>
    5414:	40 86 44 16 	.word 0x40864416
    5418:	00 05 02 00 	l.j 145c18 <__ram_length+0xc5c18>
    541c:	40 86 48 13 	.word 0x40864813
    5420:	00 05 02 00 	l.j 145c20 <__ram_length+0xc5c20>
    5424:	40 86 4c 15 	.word 0x40864c15
    5428:	00 05 02 00 	l.j 145c28 <__ram_length+0xc5c28>
    542c:	40 86 50 13 	.word 0x40865013
    5430:	00 05 02 00 	l.j 145c30 <__ram_length+0xc5c30>
    5434:	40 86 54 15 	.word 0x40865415
    5438:	00 05 02 00 	l.j 145c38 <__ram_length+0xc5c38>
    543c:	40 86 64 15 	.word 0x40866415
    5440:	00 05 02 00 	l.j 145c40 <__ram_length+0xc5c40>
    5444:	40 86 78 15 	.word 0x40867815
    5448:	00 05 02 00 	l.j 145c48 <__ram_length+0xc5c48>
    544c:	40 86 8c 18 	.word 0x40868c18
    5450:	00 05 02 00 	l.j 145c50 <__ram_length+0xc5c50>
    5454:	40 86 90 03 	.word 0x40869003
    5458:	92 7d 01 00 	l.lbs r19,0x100(r29)
    545c:	05 02 00 40 	l.jal 408555c <__stack+0x3c05560>
    5460:	86 94 03 ee 	l.lwz r20,0x3ee(r20)
    5464:	02 01 00 05 	l.j f8045478 <__stack+0xf7bc547c>
    5468:	02 00 40 86 	l.j f8015680 <__stack+0xf7b95684>
    546c:	98 03 92 7d 	l.lhs r0,0xffff927d(r3)
    5470:	01 00 05 02 	l.j 4006878 <__stack+0x3b8687c>
    5474:	00 40 86 a0 	l.j 1026ef4 <__stack+0xba6ef8>
    5478:	03 ee 02 01 	l.j ffb85c7c <__stack+0xff705c80>
    547c:	00 05 02 00 	l.j 145c7c <__ram_length+0xc5c7c>
    5480:	40 86 ac 03 	.word 0x4086ac03
    5484:	92 7d 01 00 	l.lbs r19,0x100(r29)
    5488:	05 02 00 40 	l.jal 4085588 <__stack+0x3c0558c>
    548c:	86 b0 03 ee 	l.lwz r21,0x3ee(r16)
    5490:	02 01 00 05 	l.j f80454a4 <__stack+0xf7bc54a8>
    5494:	02 00 40 86 	l.j f80156ac <__stack+0xf7b956b0>
    5498:	bc 16 00 05 	l.sfeqi r22,0x5
    549c:	02 00 40 87 	l.j f80156b8 <__stack+0xf7b956bc>
    54a0:	1c 12 00 05 	.word 0x1c120005
    54a4:	02 00 40 87 	l.j f80156c0 <__stack+0xf7b956c4>
    54a8:	20 19 00 05 	.word 0x20190005
    54ac:	02 00 40 87 	l.j f80156c8 <__stack+0xf7b956cc>
    54b0:	24 0f 00 05 	l.rfe 
    54b4:	02 00 40 87 	l.j f80156d0 <__stack+0xf7b956d4>
    54b8:	28 1a 00 05 	.word 0x281a0005
    54bc:	02 00 40 87 	l.j f80156d8 <__stack+0xf7b956dc>
    54c0:	2c 0e 00 05 	.word 0x2c0e0005
    54c4:	02 00 40 87 	l.j f80156e0 <__stack+0xf7b956e4>
    54c8:	30 01 00 05 	.word 0x30010005
    54cc:	02 00 40 87 	l.j f80156e8 <__stack+0xf7b956ec>
    54d0:	44 21 00 05 	l.jr r0
    54d4:	02 00 40 87 	l.j f80156f0 <__stack+0xf7b956f4>
    54d8:	4c 16 00 05 	l.maci r22,0x5
    54dc:	02 00 40 87 	l.j f80156f8 <__stack+0xf7b956fc>
    54e0:	a0 16 00 05 	l.addic r0,r22,0x5
    54e4:	02 00 40 87 	l.j f8015700 <__stack+0xf7b95704>
    54e8:	ac 16 00 05 	l.xori r0,r22,0x5
    54ec:	02 00 40 87 	l.j f8015708 <__stack+0xf7b9570c>
    54f0:	cc 15 00 05 	.word 0xcc150005
    54f4:	02 00 40 87 	l.j f8015710 <__stack+0xf7b95714>
    54f8:	d0 15 00 05 	l.sd 0x5(r21),r0
    54fc:	02 00 40 87 	l.j f8015718 <__stack+0xf7b9571c>
    5500:	d4 13 00 05 	l.sw 0x5(r19),r0
    5504:	02 00 40 87 	l.j f8015720 <__stack+0xf7b95724>
    5508:	e8 15 00 05 	.word 0xe8150005
    550c:	02 00 40 87 	l.j f8015728 <__stack+0xf7b9572c>
    5510:	ec 13 00 05 	.word 0xec130005
    5514:	02 00 40 87 	l.j f8015730 <__stack+0xf7b95734>
    5518:	f4 15 00 05 	l.cust6 
    551c:	02 00 40 88 	l.j f801573c <__stack+0xf7b95740>
    5520:	04 15 00 05 	l.jal 545534 <__stack+0xc5538>
    5524:	02 00 40 88 	l.j f8015744 <__stack+0xf7b95748>
    5528:	18 15 00 05 	.word 0x18150005
    552c:	02 00 40 88 	l.j f801574c <__stack+0xf7b95750>
    5530:	44 16 00 05 	l.jr r0
    5534:	02 00 40 88 	l.j f8015754 <__stack+0xf7b95758>
    5538:	54 15 00 05 	.word 0x54150005
    553c:	02 00 40 88 	l.j f801575c <__stack+0xf7b95760>
    5540:	60 18 00 05 	.word 0x60180005
    5544:	02 00 40 88 	l.j f8015764 <__stack+0xf7b95768>
    5548:	b4 16 00 05 	l.mfspr r0,r22,0x5
    554c:	02 00 40 88 	l.j f801576c <__stack+0xf7b95770>
    5550:	cc 16 00 05 	.word 0xcc160005
    5554:	02 00 40 88 	l.j f8015774 <__stack+0xf7b95778>
    5558:	d0 13 00 05 	l.sd 0x5(r19),r0
    555c:	02 00 40 88 	l.j f801577c <__stack+0xf7b95780>
    5560:	d4 15 00 05 	l.sw 0x5(r21),r0
    5564:	02 00 40 88 	l.j f8015784 <__stack+0xf7b95788>
    5568:	d8 13 00 05 	l.sb 0x5(r19),r0
    556c:	02 00 40 88 	l.j f801578c <__stack+0xf7b95790>
    5570:	dc 15 00 05 	l.sh 0x5(r21),r0
    5574:	02 00 40 88 	l.j f8015794 <__stack+0xf7b95798>
    5578:	ec 15 00 05 	.word 0xec150005
    557c:	02 00 40 89 	l.j f80157a0 <__stack+0xf7b957a4>
    5580:	00 15 00 05 	l.j 545594 <__stack+0xc5598>
    5584:	02 00 40 89 	l.j f80157a8 <__stack+0xf7b957ac>
    5588:	14 17 00 05 	.word 0x14170005
    558c:	02 00 40 89 	l.j f80157b0 <__stack+0xf7b957b4>
    5590:	18 03 eb 7c 	.word 0x1803eb7c
    5594:	01 00 05 02 	l.j 400699c <__stack+0x3b869a0>
    5598:	00 40 89 1c 	l.j 1027a08 <__stack+0xba7a0c>
    559c:	03 95 03 01 	l.j fe5461a0 <__stack+0xfe0c61a4>
    55a0:	00 05 02 00 	l.j 145da0 <__ram_length+0xc5da0>
    55a4:	40 89 20 03 	.word 0x40892003
    55a8:	eb 7c 01 00 	.word 0xeb7c0100
    55ac:	05 02 00 40 	l.jal 40856ac <__stack+0x3c056b0>
    55b0:	89 28 03 95 	l.lws r9,0x395(r8)
    55b4:	03 01 00 05 	l.j fc0455c8 <__stack+0xfbbc55cc>
    55b8:	02 00 40 89 	l.j f80157dc <__stack+0xf7b957e0>
    55bc:	34 03 eb 7c 	.word 0x3403eb7c
    55c0:	01 00 05 02 	l.j 40069c8 <__stack+0x3b869cc>
    55c4:	00 40 89 38 	l.j 1027aa4 <__stack+0xba7aa8>
    55c8:	03 95 03 01 	l.j fe5461cc <__stack+0xfe0c61d0>
    55cc:	00 05 02 00 	l.j 145dcc <__ram_length+0xc5dcc>
    55d0:	40 89 44 16 	.word 0x40894416
    55d4:	00 05 02 00 	l.j 145dd4 <__ram_length+0xc5dd4>
    55d8:	40 89 a4 12 	.word 0x4089a412
    55dc:	00 05 02 00 	l.j 145ddc <__ram_length+0xc5ddc>
    55e0:	40 89 a8 19 	.word 0x4089a819
    55e4:	00 05 02 00 	l.j 145de4 <__ram_length+0xc5de4>
    55e8:	40 89 ac 0f 	.word 0x4089ac0f
    55ec:	00 05 02 00 	l.j 145dec <__ram_length+0xc5dec>
    55f0:	40 89 b0 1a 	.word 0x4089b01a
    55f4:	00 05 02 00 	l.j 145df4 <__ram_length+0xc5df4>
    55f8:	40 89 b4 0e 	.word 0x4089b40e
    55fc:	00 05 02 00 	l.j 145dfc <__ram_length+0xc5dfc>
    5600:	40 89 b8 01 	.word 0x4089b801
    5604:	00 05 02 00 	l.j 145e04 <__ram_length+0xc5e04>
    5608:	40 89 cc 21 	.word 0x4089cc21
    560c:	00 05 02 00 	l.j 145e0c <__ram_length+0xc5e0c>
    5610:	40 8a 10 03 	.word 0x408a1003
    5614:	82 7e 01 00 	l.ld r19,0x100(r30)
    5618:	05 02 00 40 	l.jal 4085718 <__stack+0x3c0571c>
    561c:	8a 14 03 80 	l.lws r16,0x380(r20)
    5620:	02 01 00 05 	l.j f8045634 <__stack+0xf7bc5638>
    5624:	02 00 40 8a 	l.j f801584c <__stack+0xf7b95850>
    5628:	24 15 00 05 	l.rfe 
    562c:	02 00 40 8a 	l.j f8015854 <__stack+0xf7b95858>
    5630:	48 16 00 05 	l.jalr r0
    5634:	02 00 40 8a 	l.j f801585c <__stack+0xf7b95860>
    5638:	50 13 00 05 	.word 0x50130005
    563c:	02 00 40 8a 	l.j f8015864 <__stack+0xf7b95868>
    5640:	60 15 00 05 	.word 0x60150005
    5644:	02 00 40 8a 	l.j f801586c <__stack+0xf7b95870>
    5648:	84 01 00 05 	l.lwz r0,0x5(r1)
    564c:	02 00 40 8a 	l.j f8015874 <__stack+0xf7b95878>
    5650:	8c 01 00 05 	l.lbz r0,0x5(r1)
    5654:	02 00 40 8a 	l.j f801587c <__stack+0xf7b95880>
    5658:	94 16 00 05 	l.lhz r0,0x5(r22)
    565c:	02 00 40 8a 	l.j f8015884 <__stack+0xf7b95888>
    5660:	f4 16 00 05 	l.cust6 
    5664:	02 00 40 8b 	l.j f8015890 <__stack+0xf7b95894>
    5668:	00 16 00 05 	l.j 58567c <__stack+0x105680>
    566c:	02 00 40 8b 	l.j f8015898 <__stack+0xf7b9589c>
    5670:	0c 16 00 05 	l.bnf 585684 <__stack+0x105688>
    5674:	02 00 40 8b 	l.j f80158a0 <__stack+0xf7b958a4>
    5678:	2c 15 00 05 	.word 0x2c150005
    567c:	02 00 40 8b 	l.j f80158a8 <__stack+0xf7b958ac>
    5680:	30 15 00 05 	.word 0x30150005
    5684:	02 00 40 8b 	l.j f80158b0 <__stack+0xf7b958b4>
    5688:	34 13 00 05 	.word 0x34130005
    568c:	02 00 40 8b 	l.j f80158b8 <__stack+0xf7b958bc>
    5690:	48 15 00 05 	l.jalr r0
    5694:	02 00 40 8b 	l.j f80158c0 <__stack+0xf7b958c4>
    5698:	4c 13 00 05 	l.maci r19,0x5
    569c:	02 00 40 8b 	l.j f80158c8 <__stack+0xf7b958cc>
    56a0:	50 15 00 05 	.word 0x50150005
    56a4:	02 00 40 8b 	l.j f80158d0 <__stack+0xf7b958d4>
    56a8:	60 15 00 05 	.word 0x60150005
    56ac:	02 00 40 8b 	l.j f80158d8 <__stack+0xf7b958dc>
    56b0:	74 15 00 05 	l.cust2 
    56b4:	02 00 40 8b 	l.j f80158e0 <__stack+0xf7b958e4>
    56b8:	88 16 00 05 	l.lws r0,0x5(r22)
    56bc:	02 00 40 8b 	l.j f80158e8 <__stack+0xf7b958ec>
    56c0:	98 15 00 05 	l.lhs r0,0x5(r21)
    56c4:	02 00 40 8b 	l.j f80158f0 <__stack+0xf7b958f4>
    56c8:	a4 18 00 05 	l.andi r0,r24,0x5
    56cc:	02 00 40 8b 	l.j f80158f8 <__stack+0xf7b958fc>
    56d0:	fc 16 00 05 	l.cust8 
    56d4:	02 00 40 8c 	l.j f8015904 <__stack+0xf7b95908>
    56d8:	08 16 00 05 	.word 0x08160005
    56dc:	02 00 40 8c 	l.j f801590c <__stack+0xf7b95910>
    56e0:	0c 13 00 05 	l.bnf 4c56f4 <__stack+0x456f8>
    56e4:	02 00 40 8c 	l.j f8015914 <__stack+0xf7b95918>
    56e8:	10 15 00 05 	l.bf 5456fc <__stack+0xc5700>
    56ec:	02 00 40 8c 	l.j f801591c <__stack+0xf7b95920>
    56f0:	14 13 00 05 	.word 0x14130005
    56f4:	02 00 40 8c 	l.j f8015924 <__stack+0xf7b95928>
    56f8:	18 15 00 05 	.word 0x18150005
    56fc:	02 00 40 8c 	l.j f801592c <__stack+0xf7b95930>
    5700:	28 15 00 05 	.word 0x28150005
    5704:	02 00 40 8c 	l.j f8015934 <__stack+0xf7b95938>
    5708:	3c 15 00 05 	.word 0x3c150005
    570c:	02 00 40 8c 	l.j f801593c <__stack+0xf7b95940>
    5710:	50 18 00 05 	.word 0x50180005
    5714:	02 00 40 8c 	l.j f8015944 <__stack+0xf7b95948>
    5718:	54 03 bc 7c 	.word 0x5403bc7c
    571c:	01 00 05 02 	l.j 4006b24 <__stack+0x3b86b28>
    5720:	00 40 8c 58 	l.j 1028880 <__stack+0xba8884>
    5724:	03 c4 03 01 	l.j ff106328 <__stack+0xfec8632c>
    5728:	00 05 02 00 	l.j 145f28 <__ram_length+0xc5f28>
    572c:	40 8c 5c 03 	.word 0x408c5c03
    5730:	bc 7c 01 00 	l.sfgeui r28,0x100
    5734:	05 02 00 40 	l.jal 4085834 <__stack+0x3c05838>
    5738:	8c 64 03 c4 	l.lbz r3,0x3c4(r4)
    573c:	03 01 00 05 	l.j fc045750 <__stack+0xfbbc5754>
    5740:	02 00 40 8c 	l.j f8015970 <__stack+0xf7b95974>
    5744:	70 03 bc 7c 	l.cust1 
    5748:	01 00 05 02 	l.j 4006b50 <__stack+0x3b86b54>
    574c:	00 40 8c 74 	l.j 102891c <__stack+0xba8920>
    5750:	03 c4 03 01 	l.j ff106354 <__stack+0xfec86358>
    5754:	00 05 02 00 	l.j 145f54 <__ram_length+0xc5f54>
    5758:	40 8c 80 16 	.word 0x408c8016
    575c:	00 05 02 00 	l.j 145f5c <__ram_length+0xc5f5c>
    5760:	40 8c e0 12 	.word 0x408ce012
    5764:	00 05 02 00 	l.j 145f64 <__ram_length+0xc5f64>
    5768:	40 8c e4 19 	.word 0x408ce419
    576c:	00 05 02 00 	l.j 145f6c <__ram_length+0xc5f6c>
    5770:	40 8c e8 0f 	.word 0x408ce80f
    5774:	00 05 02 00 	l.j 145f74 <__ram_length+0xc5f74>
    5778:	40 8c ec 1a 	.word 0x408cec1a
    577c:	00 05 02 00 	l.j 145f7c <__ram_length+0xc5f7c>
    5780:	40 8c f0 0e 	.word 0x408cf00e
    5784:	00 05 02 00 	l.j 145f84 <__ram_length+0xc5f84>
    5788:	40 8c f4 01 	.word 0x408cf401
    578c:	00 05 02 00 	l.j 145f8c <__ram_length+0xc5f8c>
    5790:	40 8d 0c 23 	.word 0x408d0c23
    5794:	00 05 02 00 	l.j 145f94 <__ram_length+0xc5f94>
    5798:	40 8d 20 03 	.word 0x408d2003
    579c:	ac 7d 01 00 	l.xori r3,r29,0x100
    57a0:	05 02 00 40 	l.jal 40858a0 <__stack+0x3c058a4>
    57a4:	8d 24 13 00 	l.lbz r9,0x1300(r4)
    57a8:	05 02 00 40 	l.jal 40858a8 <__stack+0x3c058ac>
    57ac:	8d 28 31 00 	l.lbz r9,0x3100(r8)
    57b0:	05 02 00 40 	l.jal 40858b0 <__stack+0x3c058b4>
    57b4:	8d 2c 03 48 	l.lbz r9,0x348(r12)
    57b8:	01 00 05 02 	l.j 4006bc0 <__stack+0x3b86bc4>
    57bc:	00 40 8d 3c 	l.j 1028cac <__stack+0xba8cb0>
    57c0:	01 00 05 02 	l.j 4006bc8 <__stack+0x3b86bcc>
    57c4:	00 40 8d 50 	l.j 1028d04 <__stack+0xba8d08>
    57c8:	03 f4 02 01 	l.j ffd05fcc <__stack+0xff885fd0>
    57cc:	00 05 02 00 	l.j 145fcc <__ram_length+0xc5fcc>
    57d0:	40 8d 6c 01 	.word 0x408d6c01
    57d4:	00 05 02 00 	l.j 145fd4 <__ram_length+0xc5fd4>
    57d8:	40 8d 84 16 	.word 0x408d8416
    57dc:	00 05 02 00 	l.j 145fdc <__ram_length+0xc5fdc>
    57e0:	40 8d 8c 16 	.word 0x408d8c16
    57e4:	00 05 02 00 	l.j 145fe4 <__ram_length+0xc5fe4>
    57e8:	40 8d a4 01 	.word 0x408da401
    57ec:	00 05 02 00 	l.j 145fec <__ram_length+0xc5fec>
    57f0:	40 8d b8 01 	.word 0x408db801
    57f4:	00 05 02 00 	l.j 145ff4 <__ram_length+0xc5ff4>
    57f8:	40 8d e0 17 	.word 0x408de017
    57fc:	00 05 02 00 	l.j 145ffc <__ram_length+0xc5ffc>
    5800:	40 8d fc 18 	.word 0x408dfc18
    5804:	00 05 02 00 	l.j 146004 <__ram_length+0xc6004>
    5808:	40 8e 04 15 	.word 0x408e0415
    580c:	00 05 02 00 	l.j 14600c <__ram_length+0xc600c>
    5810:	40 8e 10 16 	.word 0x408e1016
    5814:	00 05 02 00 	l.j 146014 <__ram_length+0xc6014>
    5818:	40 8e 1c 16 	.word 0x408e1c16
    581c:	00 05 02 00 	l.j 14601c <__ram_length+0xc601c>
    5820:	40 8e 30 03 	.word 0x408e3003
    5824:	99 7c 01 00 	l.lhs r11,0x100(r28)
    5828:	05 02 00 40 	l.jal 4085928 <__stack+0x3c0592c>
    582c:	8e 34 03 e8 	l.lbz r17,0x3e8(r20)
    5830:	03 01 00 05 	l.j fc045844 <__stack+0xfbbc5848>
    5834:	02 00 40 8e 	l.j f8015a6c <__stack+0xf7b95a70>
    5838:	3c 17 00 05 	.word 0x3c170005
    583c:	02 00 40 8e 	l.j f8015a74 <__stack+0xf7b95a78>
    5840:	40 13 00 05 	.word 0x40130005
    5844:	02 00 40 8e 	l.j f8015a7c <__stack+0xf7b95a80>
    5848:	44 15 00 05 	l.jr r0
    584c:	02 00 40 8e 	l.j f8015a84 <__stack+0xf7b95a88>
    5850:	48 15 00 05 	l.jalr r0
    5854:	02 00 40 8e 	l.j f8015a8c <__stack+0xf7b95a90>
    5858:	54 10 00 05 	.word 0x54100005
    585c:	02 00 40 8e 	l.j f8015a94 <__stack+0xf7b95a98>
    5860:	60 03 98 7c 	.word 0x6003987c
    5864:	01 00 05 02 	l.j 4006c6c <__stack+0x3b86c70>
    5868:	00 40 8e 74 	l.j 1029238 <__stack+0xba923c>
    586c:	01 00 05 02 	l.j 4006c74 <__stack+0x3b86c78>
    5870:	00 40 8e 78 	l.j 1029250 <__stack+0xba9254>
    5874:	03 f1 03 01 	l.j ffc46478 <__stack+0xff7c647c>
    5878:	00 05 02 00 	l.j 146078 <__ram_length+0xc6078>
    587c:	40 8e 7c 03 	.word 0x408e7c03
    5880:	8f 7c 01 00 	l.lbz r27,0x100(r28)
    5884:	05 02 00 40 	l.jal 4085984 <__stack+0x3c05988>
    5888:	8e 84 03 f1 	l.lbz r20,0x3f1(r4)
    588c:	03 01 00 05 	l.j fc0458a0 <__stack+0xfbbc58a4>
    5890:	02 00 40 8e 	l.j f8015ac8 <__stack+0xf7b95acc>
    5894:	b0 15 00 05 	l.muli r0,r21,0x5
    5898:	02 00 40 8e 	l.j f8015ad0 <__stack+0xf7b95ad4>
    589c:	f0 11 00 05 	l.cust5 r0,r17,r0,0x0,0x5
    58a0:	02 00 40 8e 	l.j f8015ad8 <__stack+0xf7b95adc>
    58a4:	fc 50 00 05 	l.cust8 
    58a8:	02 00 40 8f 	l.j f8015ae4 <__stack+0xf7b95ae8>
    58ac:	04 03 4a 01 	l.jal d80b0 <__ram_length+0x580b0>
    58b0:	00 05 02 00 	l.j 1460b0 <__ram_length+0xc60b0>
    58b4:	40 8f 0c 03 	.word 0x408f0c03
    58b8:	8b 7c 01 00 	l.lws r27,0x100(r28)
    58bc:	05 02 00 40 	l.jal 40859bc <__stack+0x3c059c0>
    58c0:	8f 10 03 f7 	l.lbz r24,0x3f7(r16)
    58c4:	03 01 00 05 	l.j fc0458d8 <__stack+0xfbbc58dc>
    58c8:	02 00 40 8f 	l.j f8015b04 <__stack+0xf7b95b08>
    58cc:	18 18 00 05 	l.movhi r0,0x5
    58d0:	02 00 40 8f 	l.j f8015b0c <__stack+0xf7b95b10>
    58d4:	1c 03 85 7c 	.word 0x1c03857c
    58d8:	01 00 05 02 	l.j 4006ce0 <__stack+0x3b86ce4>
    58dc:	00 40 8f 20 	l.j 102955c <__stack+0xba9560>
    58e0:	03 f7 03 01 	l.j ffdc64e4 <__stack+0xff9464e8>
    58e4:	00 05 02 00 	l.j 1460e4 <__ram_length+0xc60e4>
    58e8:	40 8f 28 15 	.word 0x408f2815
    58ec:	00 05 02 00 	l.j 1460ec <__ram_length+0xc60ec>
    58f0:	40 8f 30 17 	.word 0x408f3017
    58f4:	00 05 02 00 	l.j 1460f4 <__ram_length+0xc60f4>
    58f8:	40 8f 34 13 	.word 0x408f3413
    58fc:	00 05 02 00 	l.j 1460fc <__ram_length+0xc60fc>
    5900:	40 8f 38 15 	.word 0x408f3815
    5904:	00 05 02 00 	l.j 146104 <__ram_length+0xc6104>
    5908:	40 8f 3c 15 	.word 0x408f3c15
    590c:	00 05 02 00 	l.j 14610c <__ram_length+0xc610c>
    5910:	40 8f 4c 10 	.word 0x408f4c10
    5914:	00 05 02 00 	l.j 146114 <__ram_length+0xc6114>
    5918:	40 8f 58 03 	.word 0x408f5803
    591c:	88 7c 01 00 	l.lws r3,0x100(r28)
    5920:	05 02 00 40 	l.jal 4085a20 <__stack+0x3c05a24>
    5924:	8f 6c 03 81 	l.lbz r27,0x381(r12)
    5928:	04 01 00 05 	l.jal 4593c <__rom_size+0x2b5f0>
    592c:	02 00 40 8f 	l.j f8015b68 <__stack+0xf7b95b6c>
    5930:	70 03 ff 7b 	l.cust1 
    5934:	01 00 05 02 	l.j 4006d3c <__stack+0x3b86d40>
    5938:	00 40 8f 74 	l.j 1029708 <__stack+0xba970c>
    593c:	03 81 04 01 	l.j fe046940 <__stack+0xfdbc6944>
    5940:	00 05 02 00 	l.j 146140 <__ram_length+0xc6140>
    5944:	40 8f 78 03 	.word 0x408f7803
    5948:	ff 7b 01 00 	l.cust8 
    594c:	05 02 00 40 	l.jal 4085a4c <__stack+0x3c05a50>
    5950:	8f 7c 03 81 	l.lbz r27,0x381(r28)
    5954:	04 01 00 05 	l.jal 45968 <__rom_size+0x2b61c>
    5958:	02 00 40 8f 	l.j f8015b94 <__stack+0xf7b95b98>
    595c:	a8 15 00 05 	l.ori r0,r21,0x5
    5960:	02 00 40 8f 	l.j f8015b9c <__stack+0xf7b95ba0>
    5964:	e8 11 00 05 	.word 0xe8110005
    5968:	02 00 40 8f 	l.j f8015ba4 <__stack+0xf7b95ba8>
    596c:	f4 19 00 05 	l.cust6 
    5970:	02 00 40 90 	l.j f8015bb0 <__stack+0xf7b95bb4>
    5974:	08 15 00 05 	.word 0x08150005
    5978:	02 00 40 90 	l.j f8015bb8 <__stack+0xf7b95bbc>
    597c:	14 15 00 05 	.word 0x14150005
    5980:	02 00 40 90 	l.j f8015bc0 <__stack+0xf7b95bc4>
    5984:	20 16 00 05 	.word 0x20160005
    5988:	02 00 40 90 	l.j f8015bc8 <__stack+0xf7b95bcc>
    598c:	68 16 00 05 	.word 0x68160005
    5990:	02 00 40 90 	l.j f8015bd0 <__stack+0xf7b95bd4>
    5994:	94 17 00 05 	l.lhz r0,0x5(r23)
    5998:	02 00 40 90 	l.j f8015bd8 <__stack+0xf7b95bdc>
    599c:	a4 16 00 05 	l.andi r0,r22,0x5
    59a0:	02 00 40 90 	l.j f8015be0 <__stack+0xf7b95be4>
    59a4:	b4 16 00 05 	l.mfspr r0,r22,0x5
    59a8:	02 00 40 90 	l.j f8015be8 <__stack+0xf7b95bec>
    59ac:	c4 16 00 05 	.word 0xc4160005
    59b0:	02 00 40 91 	l.j f8015bf4 <__stack+0xf7b95bf8>
    59b4:	10 17 00 05 	l.bf 5c59c8 <__stack+0x1459cc>
    59b8:	02 00 40 91 	l.j f8015bfc <__stack+0xf7b95c00>
    59bc:	20 29 00 05 	.word 0x20290005
    59c0:	02 00 40 91 	l.j f8015c04 <__stack+0xf7b95c08>
    59c4:	28 03 d5 7b 	lv.xor r0,r3,r26
    59c8:	01 00 05 02 	l.j 4006dd0 <__stack+0x3b86dd4>
    59cc:	00 40 91 38 	l.j 1029eac <__stack+0xba9eb0>
    59d0:	03 9a 04 01 	l.j fe6869d4 <__stack+0xfe2069d8>
    59d4:	00 05 02 00 	l.j 1461d4 <__ram_length+0xc61d4>
    59d8:	40 91 40 03 	.word 0x40914003
    59dc:	e6 7b 01 00 	.word 0xe67b0100
    59e0:	05 02 00 40 	l.jal 4085ae0 <__stack+0x3c05ae4>
    59e4:	91 44 03 9a 	l.lbs r10,0x39a(r4)
    59e8:	04 01 00 05 	l.jal 459fc <__rom_size+0x2b6b0>
    59ec:	02 00 40 91 	l.j f8015c30 <__stack+0xf7b95c34>
    59f0:	70 15 00 05 	l.cust1 
    59f4:	02 00 40 91 	l.j f8015c38 <__stack+0xf7b95c3c>
    59f8:	ac 11 00 05 	l.xori r0,r17,0x5
    59fc:	02 00 40 91 	l.j f8015c40 <__stack+0xf7b95c44>
    5a00:	b8 19 00 05 	l.slli r0,r25,0x5
    5a04:	02 00 40 91 	l.j f8015c48 <__stack+0xf7b95c4c>
    5a08:	bc 15 00 05 	l.sfeqi r21,0x5
    5a0c:	02 00 40 91 	l.j f8015c50 <__stack+0xf7b95c54>
    5a10:	c0 13 00 05 	l.mtspr r19,r0,0x5
    5a14:	02 00 40 91 	l.j f8015c58 <__stack+0xf7b95c5c>
    5a18:	c4 16 00 05 	.word 0xc4160005
    5a1c:	02 00 40 91 	l.j f8015c60 <__stack+0xf7b95c64>
    5a20:	c8 12 00 05 	lf.ftoi.s r0,r18
    5a24:	02 00 40 91 	l.j f8015c68 <__stack+0xf7b95c6c>
    5a28:	cc 15 00 05 	.word 0xcc150005
    5a2c:	02 00 40 91 	l.j f8015c70 <__stack+0xf7b95c74>
    5a30:	d8 15 00 05 	l.sb 0x5(r21),r0
    5a34:	02 00 40 91 	l.j f8015c78 <__stack+0xf7b95c7c>
    5a38:	dc 20 00 05 	l.sh 0x805(r0),r0
    5a3c:	02 00 40 92 	l.j f8015c84 <__stack+0xf7b95c88>
    5a40:	14 04 10 03 	.word 0x14041003
    5a44:	fe 77 01 00 	l.cust8 
    5a48:	05 02 00 40 	l.jal 4085b48 <__stack+0x3c05b4c>
    5a4c:	92 1c 19 00 	l.lbs r16,0x1900(r28)
    5a50:	05 02 00 40 	l.jal 4085b50 <__stack+0x3c05b54>
    5a54:	92 20 0f 00 	l.lbs r17,0xf00(r0)
    5a58:	05 02 00 40 	l.jal 4085b58 <__stack+0x3c05b5c>
    5a5c:	92 30 19 00 	l.lbs r17,0x1900(r16)
    5a60:	05 02 00 40 	l.jal 4085b60 <__stack+0x3c05b64>
    5a64:	92 34 0f 00 	l.lbs r17,0xf00(r20)
    5a68:	05 02 00 40 	l.jal 4085b68 <__stack+0x3c05b6c>
    5a6c:	92 38 01 00 	l.lbs r17,0x100(r24)
    5a70:	05 02 00 40 	l.jal 4085b70 <__stack+0x3c05b74>
    5a74:	92 3c 19 00 	l.lbs r17,0x1900(r28)
    5a78:	05 02 00 40 	l.jal 4085b78 <__stack+0x3c05b7c>
    5a7c:	92 44 0f 00 	l.lbs r18,0xf00(r4)
    5a80:	05 02 00 40 	l.jal 4085b80 <__stack+0x3c05b84>
    5a84:	92 48 19 00 	l.lbs r18,0x1900(r8)
    5a88:	05 02 00 40 	l.jal 4085b88 <__stack+0x3c05b8c>
    5a8c:	92 5c 16 00 	l.lbs r18,0x1600(r28)
    5a90:	05 02 00 40 	l.jal 4085b90 <__stack+0x3c05b94>
    5a94:	92 64 15 00 	l.lbs r19,0x1500(r4)
    5a98:	05 02 00 40 	l.jal 4085b98 <__stack+0x3c05b9c>
    5a9c:	92 74 17 00 	l.lbs r19,0x1700(r20)
    5aa0:	05 02 00 40 	l.jal 4085ba0 <__stack+0x3c05ba4>
    5aa4:	92 80 15 00 	l.lbs r20,0x1500(r0)
    5aa8:	05 02 00 40 	l.jal 4085ba8 <__stack+0x3c05bac>
    5aac:	92 8c 15 00 	l.lbs r20,0x1500(r12)
    5ab0:	05 02 00 40 	l.jal 4085bb0 <__stack+0x3c05bb4>
    5ab4:	92 90 17 00 	l.lbs r20,0x1700(r16)
    5ab8:	05 02 00 40 	l.jal 4085bb8 <__stack+0x3c05bbc>
    5abc:	92 94 11 00 	l.lbs r20,0x1100(r20)
    5ac0:	05 02 00 40 	l.jal 4085bc0 <__stack+0x3c05bc4>
    5ac4:	92 9c 15 00 	l.lbs r20,0x1500(r28)
    5ac8:	05 02 00 40 	l.jal 4085bc8 <__stack+0x3c05bcc>
    5acc:	92 a8 16 00 	l.lbs r21,0x1600(r8)
    5ad0:	05 02 00 40 	l.jal 4085bd0 <__stack+0x3c05bd4>
    5ad4:	92 b4 17 00 	l.lbs r21,0x1700(r20)
    5ad8:	05 02 00 40 	l.jal 4085bd8 <__stack+0x3c05bdc>
    5adc:	92 d0 04 0d 	l.lbs r22,0x40d(r16)
    5ae0:	03 97 02 01 	l.j fe5c62e4 <__stack+0xfe1462e8>
    5ae4:	00 05 02 00 	l.j 1462e4 <__ram_length+0xc62e4>
    5ae8:	40 92 d4 26 	.word 0x4092d426
    5aec:	00 05 02 00 	l.j 1462ec <__ram_length+0xc62ec>
    5af0:	40 92 d8 03 	.word 0x4092d803
    5af4:	6e 01 00 05 	.word 0x6e010005
    5af8:	02 00 40 93 	l.j f8015d44 <__stack+0xf7b95d48>
    5afc:	00 26 00 05 	l.j 985b10 <__stack+0x505b14>
    5b00:	02 00 40 93 	l.j f8015d4c <__stack+0xf7b95d50>
    5b04:	04 03 6e 01 	l.jal e1308 <__ram_length+0x61308>
    5b08:	00 05 02 00 	l.j 146308 <__ram_length+0xc6308>
    5b0c:	40 93 08 26 	.word 0x40930826
    5b10:	00 05 02 00 	l.j 146310 <__ram_length+0xc6310>
    5b14:	40 93 0c 15 	.word 0x40930c15
    5b18:	00 05 02 00 	l.j 146318 <__ram_length+0xc6318>
    5b1c:	40 93 10 03 	.word 0x40931003
    5b20:	6d 01 00 05 	.word 0x6d010005
    5b24:	02 00 40 93 	l.j f8015d70 <__stack+0xf7b95d74>
    5b28:	14 27 00 05 	.word 0x14270005
    5b2c:	02 00 40 93 	l.j f8015d78 <__stack+0xf7b95d7c>
    5b30:	1c 15 00 05 	.word 0x1c150005
    5b34:	02 00 40 93 	l.j f8015d80 <__stack+0xf7b95d84>
    5b38:	34 01 00 05 	.word 0x34010005
    5b3c:	02 00 40 93 	l.j f8015d88 <__stack+0xf7b95d8c>
    5b40:	44 01 00 05 	l.jr r0
    5b44:	02 00 40 93 	l.j f8015d90 <__stack+0xf7b95d94>
    5b48:	50 3f 00 05 	.word 0x503f0005
    5b4c:	02 00 40 93 	l.j f8015d98 <__stack+0xf7b95d9c>
    5b50:	54 1b 00 05 	.word 0x541b0005
    5b54:	02 00 40 93 	l.j f8015da0 <__stack+0xf7b95da4>
    5b58:	58 03 4e 01 	.word 0x58034e01
    5b5c:	00 05 02 00 	l.j 14635c <__ram_length+0xc635c>
    5b60:	40 93 5c 03 	.word 0x40935c03
    5b64:	70 01 00 05 	l.cust1 
    5b68:	02 00 40 93 	l.j f8015db4 <__stack+0xf7b95db8>
    5b6c:	60 4f 00 05 	.word 0x604f0005
    5b70:	02 00 40 93 	l.j f8015dbc <__stack+0xf7b95dc0>
    5b74:	64 1b 00 05 	.word 0x641b0005
    5b78:	02 00 40 93 	l.j f8015dc4 <__stack+0xf7b95dc8>
    5b7c:	68 03 53 01 	.word 0x68035301
    5b80:	00 05 02 00 	l.j 146380 <__ram_length+0xc6380>
    5b84:	40 93 70 16 	.word 0x40937016
    5b88:	00 05 02 00 	l.j 146388 <__ram_length+0xc6388>
    5b8c:	40 93 7c 16 	.word 0x40937c16
    5b90:	00 05 02 00 	l.j 146390 <__ram_length+0xc6390>
    5b94:	40 93 94 15 	.word 0x40939415
    5b98:	00 05 02 00 	l.j 146398 <__ram_length+0xc6398>
    5b9c:	40 93 98 13 	.word 0x40939813
    5ba0:	00 05 02 00 	l.j 1463a0 <__ram_length+0xc63a0>
    5ba4:	40 93 a0 18 	.word 0x4093a018
    5ba8:	00 05 02 00 	l.j 1463a8 <__ram_length+0xc63a8>
    5bac:	40 93 a4 17 	.word 0x4093a417
    5bb0:	00 05 02 00 	l.j 1463b0 <__ram_length+0xc63b0>
    5bb4:	40 93 bc 16 	.word 0x4093bc16
    5bb8:	00 05 02 00 	l.j 1463b8 <__ram_length+0xc63b8>
    5bbc:	40 93 d0 16 	.word 0x4093d016
    5bc0:	00 05 02 00 	l.j 1463c0 <__ram_length+0xc63c0>
    5bc4:	40 93 e8 16 	.word 0x4093e816
    5bc8:	00 05 02 00 	l.j 1463c8 <__ram_length+0xc63c8>
    5bcc:	40 93 f8 15 	.word 0x4093f815
    5bd0:	00 05 02 00 	l.j 1463d0 <__ram_length+0xc63d0>
    5bd4:	40 94 00 16 	.word 0x40940016
    5bd8:	00 05 02 00 	l.j 1463d8 <__ram_length+0xc63d8>
    5bdc:	40 94 30 17 	.word 0x40943017
    5be0:	00 05 02 00 	l.j 1463e0 <__ram_length+0xc63e0>
    5be4:	40 94 5c 01 	.word 0x40945c01
    5be8:	00 05 02 00 	l.j 1463e8 <__ram_length+0xc63e8>
    5bec:	40 94 74 01 	.word 0x40947401
    5bf0:	00 05 02 00 	l.j 1463f0 <__ram_length+0xc63f0>
    5bf4:	40 94 78 17 	.word 0x40947817
    5bf8:	00 05 02 00 	l.j 1463f8 <__ram_length+0xc63f8>
    5bfc:	40 94 7c 11 	.word 0x40947c11
    5c00:	00 05 02 00 	l.j 146400 <__ram_length+0xc6400>
    5c04:	40 94 80 16 	.word 0x40948016
    5c08:	00 05 02 00 	l.j 146408 <__ram_length+0xc6408>
    5c0c:	40 94 84 16 	.word 0x40948416
    5c10:	00 05 02 00 	l.j 146410 <__ram_length+0xc6410>
    5c14:	40 94 88 17 	.word 0x40948817
    5c18:	00 05 02 00 	l.j 146418 <__ram_length+0xc6418>
    5c1c:	40 94 8c 10 	.word 0x40948c10
    5c20:	00 05 02 00 	l.j 146420 <__ram_length+0xc6420>
    5c24:	40 94 90 15 	.word 0x40949015
    5c28:	00 05 02 00 	l.j 146428 <__ram_length+0xc6428>
    5c2c:	40 94 94 15 	.word 0x40949415
    5c30:	00 05 02 00 	l.j 146430 <__ram_length+0xc6430>
    5c34:	40 94 98 16 	.word 0x40949816
    5c38:	00 05 02 00 	l.j 146438 <__ram_length+0xc6438>
    5c3c:	40 94 a4 16 	.word 0x4094a416
    5c40:	00 05 02 00 	l.j 146440 <__ram_length+0xc6440>
    5c44:	40 94 ac 03 	.word 0x4094ac03
    5c48:	60 01 00 05 	.word 0x60010005
    5c4c:	02 00 40 94 	l.j f8015e9c <__stack+0xf7b95ea0>
    5c50:	b0 01 00 05 	l.muli r0,r1,0x5
    5c54:	02 00 40 94 	l.j f8015ea4 <__stack+0xf7b95ea8>
    5c58:	bc 3a 00 05 	l.sfnei r26,0x5
    5c5c:	02 00 40 94 	l.j f8015eac <__stack+0xf7b95eb0>
    5c60:	cc 16 00 05 	.word 0xcc160005
    5c64:	02 00 40 94 	l.j f8015eb4 <__stack+0xf7b95eb8>
    5c68:	d4 16 00 05 	l.sw 0x5(r22),r0
    5c6c:	02 00 40 94 	l.j f8015ebc <__stack+0xf7b95ec0>
    5c70:	e4 01 00 05 	l.sfeq r1,r0
    5c74:	02 00 40 94 	l.j f8015ec4 <__stack+0xf7b95ec8>
    5c78:	f8 01 00 05 	l.cust7 
    5c7c:	02 00 40 95 	l.j f8015ed0 <__stack+0xf7b95ed4>
    5c80:	20 17 00 05 	.word 0x20170005
    5c84:	02 00 40 95 	l.j f8015ed8 <__stack+0xf7b95edc>
    5c88:	34 18 00 05 	.word 0x34180005
    5c8c:	02 00 40 95 	l.j f8015ee0 <__stack+0xf7b95ee4>
    5c90:	3c 16 00 05 	.word 0x3c160005
    5c94:	02 00 40 95 	l.j f8015ee8 <__stack+0xf7b95eec>
    5c98:	50 04 08 03 	.word 0x50040803
    5c9c:	9d 7c 01 00 	l.addi r11,r28,0x100
    5ca0:	05 02 00 40 	l.jal 4085da0 <__stack+0x3c05da4>
    5ca4:	95 58 15 00 	l.lhz r10,0x1500(r24)
    5ca8:	05 02 00 40 	l.jal 4085da8 <__stack+0x3c05dac>
    5cac:	95 60 13 00 	l.lhz r11,0x1300(r0)
    5cb0:	05 02 00 40 	l.jal 4085db0 <__stack+0x3c05db4>
    5cb4:	95 6c 04 0d 	l.lhz r11,0x40d(r12)
    5cb8:	03 e5 03 01 	l.j ff9468bc <__stack+0xff4c68c0>
    5cbc:	00 05 02 00 	l.j 1464bc <__ram_length+0xc64bc>
    5cc0:	40 95 70 17 	.word 0x40957017
    5cc4:	00 05 02 00 	l.j 1464c4 <__ram_length+0xc64c4>
    5cc8:	40 95 a4 04 	.word 0x4095a404
    5ccc:	16 03 d4 7c 	.word 0x1603d47c
    5cd0:	01 00 05 02 	l.j 40070d8 <__stack+0x3b870dc>
    5cd4:	00 40 95 b4 	l.j 102b3a4 <__stack+0xbab3a8>
    5cd8:	18 00 05 02 	l.movhi r0,0x502
    5cdc:	00 40 95 c0 	l.j 102b3dc <__stack+0xbab3e0>
    5ce0:	16 00 05 02 	.word 0x16000502
    5ce4:	00 40 95 c8 	l.j 102b404 <__stack+0xbab408>
    5ce8:	15 00 05 02 	l.nop 0x502
    5cec:	00 40 95 d0 	l.j 102b42c <__stack+0xbab430>
    5cf0:	15 00 05 02 	l.nop 0x502
    5cf4:	00 40 95 d8 	l.j 102b454 <__stack+0xbab458>
    5cf8:	18 00 05 02 	l.movhi r0,0x502
    5cfc:	00 40 95 e8 	l.j 102b49c <__stack+0xbab4a0>
    5d00:	04 0d b8 00 	l.jal 373d00 <__ram_length+0x2f3d00>
    5d04:	05 02 00 40 	l.jal 4085e04 <__stack+0x3c05e08>
    5d08:	95 ec 17 00 	l.lhz r15,0x1700(r12)
    5d0c:	05 02 00 40 	l.jal 4085e0c <__stack+0x3c05e10>
    5d10:	95 f8 16 00 	l.lhz r15,0x1600(r24)
    5d14:	05 02 00 40 	l.jal 4085e14 <__stack+0x3c05e18>
    5d18:	95 fc 0f 00 	l.lhz r15,0xf00(r28)
    5d1c:	05 02 00 40 	l.jal 4085e1c <__stack+0x3c05e20>
    5d20:	96 0c 17 00 	l.lhz r16,0x1700(r12)
    5d24:	05 02 00 40 	l.jal 4085e24 <__stack+0x3c05e28>
    5d28:	96 10 11 00 	l.lhz r16,0x1100(r16)
    5d2c:	05 02 00 40 	l.jal 4085e2c <__stack+0x3c05e30>
    5d30:	96 14 19 00 	l.lhz r16,0x1900(r20)
    5d34:	05 02 00 40 	l.jal 4085e34 <__stack+0x3c05e38>
    5d38:	96 2c 17 00 	l.lhz r17,0x1700(r12)
    5d3c:	05 02 00 40 	l.jal 4085e3c <__stack+0x3c05e40>
    5d40:	96 38 18 00 	l.lhz r17,0x1800(r24)
    5d44:	05 02 00 40 	l.jal 4085e44 <__stack+0x3c05e48>
    5d48:	96 3c 10 00 	l.lhz r17,0x1000(r28)
    5d4c:	05 02 00 40 	l.jal 4085e4c <__stack+0x3c05e50>
    5d50:	96 40 15 00 	l.lhz r18,0x1500(r0)
    5d54:	05 02 00 40 	l.jal 4085e54 <__stack+0x3c05e58>
    5d58:	96 4c 17 00 	l.lhz r18,0x1700(r12)
    5d5c:	05 02 00 40 	l.jal 4085e5c <__stack+0x3c05e60>
    5d60:	96 50 11 00 	l.lhz r18,0x1100(r16)
    5d64:	05 02 00 40 	l.jal 4085e64 <__stack+0x3c05e68>
    5d68:	96 54 17 00 	l.lhz r18,0x1700(r20)
    5d6c:	05 02 00 40 	l.jal 4085e6c <__stack+0x3c05e70>
    5d70:	96 70 15 00 	l.lhz r19,0x1500(r16)
    5d74:	05 02 00 40 	l.jal 4085e74 <__stack+0x3c05e78>
    5d78:	96 74 15 00 	l.lhz r19,0x1500(r20)
    5d7c:	05 02 00 40 	l.jal 4085e7c <__stack+0x3c05e80>
    5d80:	96 94 15 00 	l.lhz r20,0x1500(r20)
    5d84:	05 02 00 40 	l.jal 4085e84 <__stack+0x3c05e88>
    5d88:	96 9c 16 00 	l.lhz r20,0x1600(r28)
    5d8c:	05 02 00 40 	l.jal 4085e8c <__stack+0x3c05e90>
    5d90:	96 b4 17 00 	l.lhz r21,0x1700(r20)
    5d94:	05 02 00 40 	l.jal 4085e94 <__stack+0x3c05e98>
    5d98:	96 b8 15 00 	l.lhz r21,0x1500(r24)
    5d9c:	05 02 00 40 	l.jal 4085e9c <__stack+0x3c05ea0>
    5da0:	96 bc 13 00 	l.lhz r21,0x1300(r28)
    5da4:	05 02 00 40 	l.jal 4085ea4 <__stack+0x3c05ea8>
    5da8:	96 c0 15 00 	l.lhz r22,0x1500(r0)
    5dac:	05 02 00 40 	l.jal 4085eac <__stack+0x3c05eb0>
    5db0:	96 d0 15 00 	l.lhz r22,0x1500(r16)
    5db4:	05 02 00 40 	l.jal 4085eb4 <__stack+0x3c05eb8>
    5db8:	96 e4 15 00 	l.lhz r23,0x1500(r4)
    5dbc:	05 02 00 40 	l.jal 4085ebc <__stack+0x3c05ec0>
    5dc0:	96 f8 15 00 	l.lhz r23,0x1500(r24)
    5dc4:	05 02 00 40 	l.jal 4085ec4 <__stack+0x3c05ec8>
    5dc8:	97 0c 16 00 	l.lhz r24,0x1600(r12)
    5dcc:	05 02 00 40 	l.jal 4085ecc <__stack+0x3c05ed0>
    5dd0:	97 38 1f 00 	l.lhz r25,0x1f00(r24)
    5dd4:	05 02 00 40 	l.jal 4085ed4 <__stack+0x3c05ed8>
    5dd8:	97 40 0c 00 	l.lhz r26,0xc00(r0)
    5ddc:	05 02 00 40 	l.jal 4085edc <__stack+0x3c05ee0>
    5de0:	97 48 15 00 	l.lhz r26,0x1500(r8)
    5de4:	05 02 00 40 	l.jal 4085ee4 <__stack+0x3c05ee8>
    5de8:	97 50 15 00 	l.lhz r26,0x1500(r16)
    5dec:	05 02 00 40 	l.jal 4085eec <__stack+0x3c05ef0>
    5df0:	97 58 15 00 	l.lhz r26,0x1500(r24)
    5df4:	05 02 00 40 	l.jal 4085ef4 <__stack+0x3c05ef8>
    5df8:	97 60 15 00 	l.lhz r27,0x1500(r0)
    5dfc:	05 02 00 40 	l.jal 4085efc <__stack+0x3c05f00>
    5e00:	97 68 18 00 	l.lhz r27,0x1800(r8)
    5e04:	05 02 00 40 	l.jal 4085f04 <__stack+0x3c05f08>
    5e08:	97 6c 15 00 	l.lhz r27,0x1500(r12)
    5e0c:	05 02 00 40 	l.jal 4085f0c <__stack+0x3c05f10>
    5e10:	97 70 13 00 	l.lhz r27,0x1300(r16)
    5e14:	05 02 00 40 	l.jal 4085f14 <__stack+0x3c05f18>
    5e18:	97 74 15 00 	l.lhz r27,0x1500(r20)
    5e1c:	05 02 00 40 	l.jal 4085f1c <__stack+0x3c05f20>
    5e20:	97 78 13 00 	l.lhz r27,0x1300(r24)
    5e24:	05 02 00 40 	l.jal 4085f24 <__stack+0x3c05f28>
    5e28:	97 84 15 00 	l.lhz r28,0x1500(r4)
    5e2c:	05 02 00 40 	l.jal 4085f2c <__stack+0x3c05f30>
    5e30:	97 8c 15 00 	l.lhz r28,0x1500(r12)
    5e34:	05 02 00 40 	l.jal 4085f34 <__stack+0x3c05f38>
    5e38:	97 94 01 00 	l.lhz r28,0x100(r20)
    5e3c:	05 02 00 40 	l.jal 4085f3c <__stack+0x3c05f40>
    5e40:	97 bc 01 00 	l.lhz r29,0x100(r28)
    5e44:	05 02 00 40 	l.jal 4085f44 <__stack+0x3c05f48>
    5e48:	97 c8 01 00 	l.lhz r30,0x100(r8)
    5e4c:	05 02 00 40 	l.jal 4085f4c <__stack+0x3c05f50>
    5e50:	97 cc 16 00 	l.lhz r30,0x1600(r12)
    5e54:	05 02 00 40 	l.jal 4085f54 <__stack+0x3c05f58>
    5e58:	97 d0 12 00 	l.lhz r30,0x1200(r16)
    5e5c:	05 02 00 40 	l.jal 4085f5c <__stack+0x3c05f60>
    5e60:	97 d4 16 00 	l.lhz r30,0x1600(r20)
    5e64:	05 02 00 40 	l.jal 4085f64 <__stack+0x3c05f68>
    5e68:	97 d8 12 00 	l.lhz r30,0x1200(r24)
    5e6c:	05 02 00 40 	l.jal 4085f6c <__stack+0x3c05f70>
    5e70:	97 dc 16 00 	l.lhz r30,0x1600(r28)
    5e74:	05 02 00 40 	l.jal 4085f74 <__stack+0x3c05f78>
    5e78:	97 e4 16 00 	l.lhz r31,0x1600(r4)
    5e7c:	05 02 00 40 	l.jal 4085f7c <__stack+0x3c05f80>
    5e80:	97 f0 16 00 	l.lhz r31,0x1600(r16)
    5e84:	05 02 00 40 	l.jal 4085f84 <__stack+0x3c05f88>
    5e88:	98 00 15 00 	l.lhs r0,0x1500(r0)
    5e8c:	05 02 00 40 	l.jal 4085f8c <__stack+0x3c05f90>
    5e90:	98 04 11 00 	l.lhs r0,0x1100(r4)
    5e94:	05 02 00 40 	l.jal 4085f94 <__stack+0x3c05f98>
    5e98:	98 08 17 00 	l.lhs r0,0x1700(r8)
    5e9c:	05 02 00 40 	l.jal 4085f9c <__stack+0x3c05fa0>
    5ea0:	98 20 15 00 	l.lhs r1,0x1500(r0)
    5ea4:	05 02 00 40 	l.jal 4085fa4 <__stack+0x3c05fa8>
    5ea8:	98 30 10 00 	l.lhs r1,0x1000(r16)
    5eac:	05 02 00 40 	l.jal 4085fac <__stack+0x3c05fb0>
    5eb0:	98 40 1b 00 	l.lhs r2,0x1b00(r0)
    5eb4:	05 02 00 40 	l.jal 4085fb4 <__stack+0x3c05fb8>
    5eb8:	98 64 16 00 	l.lhs r3,0x1600(r4)
    5ebc:	05 02 00 40 	l.jal 4085fbc <__stack+0x3c05fc0>
    5ec0:	98 70 17 00 	l.lhs r3,0x1700(r16)
    5ec4:	05 02 00 40 	l.jal 4085fc4 <__stack+0x3c05fc8>
    5ec8:	98 7c 19 00 	l.lhs r3,0x1900(r28)
    5ecc:	05 02 00 40 	l.jal 4085fcc <__stack+0x3c05fd0>
    5ed0:	98 a0 15 00 	l.lhs r5,0x1500(r0)
    5ed4:	05 02 00 40 	l.jal 4085fd4 <__stack+0x3c05fd8>
    5ed8:	98 b0 16 00 	l.lhs r5,0x1600(r16)
    5edc:	05 02 00 40 	l.jal 4085fdc <__stack+0x3c05fe0>
    5ee0:	98 d0 15 00 	l.lhs r6,0x1500(r16)
    5ee4:	05 02 00 40 	l.jal 4085fe4 <__stack+0x3c05fe8>
    5ee8:	98 dc 16 00 	l.lhs r6,0x1600(r28)
    5eec:	05 02 00 40 	l.jal 4085fec <__stack+0x3c05ff0>
    5ef0:	98 fc 15 00 	l.lhs r7,0x1500(r28)
    5ef4:	05 02 00 40 	l.jal 4085ff4 <__stack+0x3c05ff8>
    5ef8:	99 24 24 00 	l.lhs r9,0x2400(r4)
    5efc:	05 02 00 40 	l.jal 4085ffc <__stack+0x3c06000>
    5f00:	99 2c 03 70 	l.lhs r9,0x370(r12)
    5f04:	01 00 05 02 	l.j 400730c <__stack+0x3b87310>
    5f08:	00 40 99 3c 	l.j 102c3f8 <__stack+0xbac3fc>
    5f0c:	21 00 05 02 	l.trap 0x502
    5f10:	00 40 99 44 	l.j 102c420 <__stack+0xbac424>
    5f14:	0a 00 05 02 	.word 0x0a000502
    5f18:	00 40 99 50 	l.j 102c458 <__stack+0xbac45c>
    5f1c:	17 00 05 02 	.word 0x17000502
    5f20:	00 40 99 5c 	l.j 102c490 <__stack+0xbac494>
    5f24:	17 00 05 02 	.word 0x17000502
    5f28:	00 40 99 68 	l.j 102c4c8 <__stack+0xbac4cc>
    5f2c:	17 00 05 02 	.word 0x17000502
    5f30:	00 40 99 74 	l.j 102c500 <__stack+0xbac504>
    5f34:	15 00 05 02 	l.nop 0x502
    5f38:	00 40 99 78 	l.j 102c518 <__stack+0xbac51c>
    5f3c:	15 00 05 02 	l.nop 0x502
    5f40:	00 40 99 80 	l.j 102c540 <__stack+0xbac544>
    5f44:	16 00 05 02 	.word 0x16000502
    5f48:	00 40 99 90 	l.j 102c588 <__stack+0xbac58c>
    5f4c:	17 00 05 02 	.word 0x17000502
    5f50:	00 40 99 94 	l.j 102c5a0 <__stack+0xbac5a4>
    5f54:	16 00 05 02 	.word 0x16000502
    5f58:	00 40 99 98 	l.j 102c5b8 <__stack+0xbac5bc>
    5f5c:	12 00 05 02 	l.bf f8007364 <__stack+0xf7b87368>
    5f60:	00 40 99 a4 	l.j 102c5f0 <__stack+0xbac5f4>
    5f64:	16 00 05 02 	.word 0x16000502
    5f68:	00 40 99 bc 	l.j 102c658 <__stack+0xbac65c>
    5f6c:	16 00 05 02 	.word 0x16000502
    5f70:	00 40 99 c8 	l.j 102c690 <__stack+0xbac694>
    5f74:	15 00 05 02 	l.nop 0x502
    5f78:	00 40 99 d0 	l.j 102c6b8 <__stack+0xbac6bc>
    5f7c:	17 00 05 02 	.word 0x17000502
    5f80:	00 40 99 e8 	l.j 102c720 <__stack+0xbac724>
    5f84:	01 00 05 02 	l.j 400738c <__stack+0x3b87390>
    5f88:	00 40 99 f8 	l.j 102c768 <__stack+0xbac76c>
    5f8c:	1b 00 05 02 	l.movhi r24,0x502
    5f90:	00 40 9a 10 	l.j 102c7d0 <__stack+0xbac7d4>
    5f94:	18 00 05 02 	l.movhi r0,0x502
    5f98:	00 40 9a 14 	l.j 102c7e8 <__stack+0xbac7ec>
    5f9c:	15 00 05 02 	l.nop 0x502
    5fa0:	00 40 9a 18 	l.j 102c800 <__stack+0xbac804>
    5fa4:	13 00 05 02 	l.bf fc0073ac <__stack+0xfbb873b0>
    5fa8:	00 40 9a 2c 	l.j 102c858 <__stack+0xbac85c>
    5fac:	01 00 05 02 	l.j 40073b4 <__stack+0x3b873b8>
    5fb0:	00 40 9a 3c 	l.j 102c8a0 <__stack+0xbac8a4>
    5fb4:	18 00 05 02 	l.movhi r0,0x502
    5fb8:	00 40 9a 4c 	l.j 102c8e8 <__stack+0xbac8ec>
    5fbc:	17 00 05 02 	.word 0x17000502
    5fc0:	00 40 9a 64 	l.j 102c950 <__stack+0xbac954>
    5fc4:	16 00 05 02 	.word 0x16000502
    5fc8:	00 40 9a 84 	l.j 102c9d8 <__stack+0xbac9dc>
    5fcc:	17 00 05 02 	.word 0x17000502
    5fd0:	00 40 9a 90 	l.j 102ca10 <__stack+0xbaca14>
    5fd4:	15 00 05 02 	l.nop 0x502
    5fd8:	00 40 9a 94 	l.j 102ca28 <__stack+0xbaca2c>
    5fdc:	13 00 05 02 	l.bf fc0073e4 <__stack+0xfbb873e8>
    5fe0:	00 40 9a 98 	l.j 102ca40 <__stack+0xbaca44>
    5fe4:	15 00 05 02 	l.nop 0x502
    5fe8:	00 40 9a 9c 	l.j 102ca58 <__stack+0xbaca5c>
    5fec:	17 00 05 02 	.word 0x17000502
    5ff0:	00 40 9a a0 	l.j 102ca70 <__stack+0xbaca74>
    5ff4:	11 00 05 02 	l.bf 40073fc <__stack+0x3b87400>
    5ff8:	00 40 9a a4 	l.j 102ca88 <__stack+0xbaca8c>
    5ffc:	19 00 05 02 	l.movhi r8,0x502
    6000:	00 40 9a a8 	l.j 102caa0 <__stack+0xbacaa4>
    6004:	0f 00 05 02 	l.bnf fc00740c <__stack+0xfbb87410>
    6008:	00 40 9a ac 	l.j 102cab8 <__stack+0xbacabc>
    600c:	15 00 05 02 	l.nop 0x502
    6010:	00 40 9a b8 	l.j 102caf0 <__stack+0xbacaf4>
    6014:	18 00 05 02 	l.movhi r0,0x502
    6018:	00 40 9a bc 	l.j 102cb08 <__stack+0xbacb0c>
    601c:	10 00 05 02 	l.bf 7424 <__rom_size-0x12f28>
    6020:	00 40 9a c0 	l.j 102cb20 <__stack+0xbacb24>
    6024:	15 00 05 02 	l.nop 0x502
    6028:	00 40 9a c4 	l.j 102cb38 <__stack+0xbacb3c>
    602c:	16 00 05 02 	.word 0x16000502
    6030:	00 40 9a c8 	l.j 102cb50 <__stack+0xbacb54>
    6034:	12 00 05 02 	l.bf f800743c <__stack+0xf7b87440>
    6038:	00 40 9a d0 	l.j 102cb78 <__stack+0xbacb7c>
    603c:	15 00 05 02 	l.nop 0x502
    6040:	00 40 9a f8 	l.j 102cc20 <__stack+0xbacc24>
    6044:	15 00 05 02 	l.nop 0x502
    6048:	00 40 9b 04 	l.j 102cc58 <__stack+0xbacc5c>
    604c:	15 00 05 02 	l.nop 0x502
    6050:	00 40 9b 2c 	l.j 102cd00 <__stack+0xbacd04>
    6054:	15 00 05 02 	l.nop 0x502
    6058:	00 40 9b 40 	l.j 102cd58 <__stack+0xbacd5c>
    605c:	15 00 05 02 	l.nop 0x502
    6060:	00 40 9b 44 	l.j 102cd70 <__stack+0xbacd74>
    6064:	13 00 05 02 	l.bf fc00746c <__stack+0xfbb87470>
    6068:	00 40 9b 48 	l.j 102cd88 <__stack+0xbacd8c>
    606c:	15 00 05 02 	l.nop 0x502
    6070:	00 40 9b 6c 	l.j 102ce20 <__stack+0xbace24>
    6074:	15 00 05 02 	l.nop 0x502
    6078:	00 40 9b 70 	l.j 102ce38 <__stack+0xbace3c>
    607c:	13 00 05 02 	l.bf fc007484 <__stack+0xfbb87488>
    6080:	00 40 9b 80 	l.j 102ce80 <__stack+0xbace84>
    6084:	15 00 05 02 	l.nop 0x502
    6088:	00 40 9b 98 	l.j 102cee8 <__stack+0xbaceec>
    608c:	19 00 05 02 	l.movhi r8,0x502
    6090:	00 40 9b a4 	l.j 102cf20 <__stack+0xbacf24>
    6094:	18 00 05 02 	l.movhi r0,0x502
    6098:	00 40 9b a8 	l.j 102cf38 <__stack+0xbacf3c>
    609c:	10 00 05 02 	l.bf 74a4 <__rom_size-0x12ea8>
    60a0:	00 40 9b b8 	l.j 102cf80 <__stack+0xbacf84>
    60a4:	19 00 05 02 	l.movhi r8,0x502
    60a8:	00 40 9b bc 	l.j 102cf98 <__stack+0xbacf9c>
    60ac:	0f 00 05 02 	l.bnf fc0074b4 <__stack+0xfbb874b8>
    60b0:	00 40 9b c0 	l.j 102cfb0 <__stack+0xbacfb4>
    60b4:	15 00 05 02 	l.nop 0x502
    60b8:	00 40 9b d4 	l.j 102d008 <__stack+0xbad00c>
    60bc:	19 00 05 02 	l.movhi r8,0x502
    60c0:	00 40 9b d8 	l.j 102d020 <__stack+0xbad024>
    60c4:	0f 00 05 02 	l.bnf fc0074cc <__stack+0xfbb874d0>
    60c8:	00 40 9b dc 	l.j 102d038 <__stack+0xbad03c>
    60cc:	17 00 05 02 	.word 0x17000502
    60d0:	00 40 9c 04 	l.j 102d0e0 <__stack+0xbad0e4>
    60d4:	15 00 05 02 	l.nop 0x502
    60d8:	00 40 9c 1c 	l.j 102d148 <__stack+0xbad14c>
    60dc:	15 00 05 02 	l.nop 0x502
    60e0:	00 40 9c 20 	l.j 102d160 <__stack+0xbad164>
    60e4:	17 00 05 02 	.word 0x17000502
    60e8:	00 40 9c 34 	l.j 102d1b8 <__stack+0xbad1bc>
    60ec:	18 00 05 02 	l.movhi r0,0x502
    60f0:	00 40 9c 38 	l.j 102d1d0 <__stack+0xbad1d4>
    60f4:	10 00 05 02 	l.bf 74fc <__rom_size-0x12e50>
    60f8:	00 40 9c 3c 	l.j 102d1e8 <__stack+0xbad1ec>
    60fc:	15 00 05 02 	l.nop 0x502
    6100:	00 40 9c 40 	l.j 102d200 <__stack+0xbad204>
    6104:	1d 00 05 02 	.word 0x1d000502
    6108:	00 40 9c 44 	l.j 102d218 <__stack+0xbad21c>
    610c:	0b 00 05 02 	.word 0x0b000502
    6110:	00 40 9c 4c 	l.j 102d240 <__stack+0xbad244>
    6114:	17 00 05 02 	.word 0x17000502
    6118:	00 40 9c 58 	l.j 102d278 <__stack+0xbad27c>
    611c:	17 00 05 02 	.word 0x17000502
    6120:	00 40 9c 68 	l.j 102d2c0 <__stack+0xbad2c4>
    6124:	17 00 05 02 	.word 0x17000502
    6128:	00 40 9c 74 	l.j 102d2f8 <__stack+0xbad2fc>
    612c:	19 00 05 02 	l.movhi r8,0x502
    6130:	00 40 9c 94 	l.j 102d380 <__stack+0xbad384>
    6134:	15 00 05 02 	l.nop 0x502
    6138:	00 40 9c a4 	l.j 102d3c8 <__stack+0xbad3cc>
    613c:	15 00 05 02 	l.nop 0x502
    6140:	00 40 9c a8 	l.j 102d3e0 <__stack+0xbad3e4>
    6144:	13 00 05 02 	l.bf fc00754c <__stack+0xfbb87550>
    6148:	00 40 9c b4 	l.j 102d418 <__stack+0xbad41c>
    614c:	15 00 05 02 	l.nop 0x502
    6150:	00 40 9c c0 	l.j 102d450 <__stack+0xbad454>
    6154:	15 00 05 02 	l.nop 0x502
    6158:	00 40 9c c4 	l.j 102d468 <__stack+0xbad46c>
    615c:	13 00 05 02 	l.bf fc007564 <__stack+0xfbb87568>
    6160:	00 40 9c d0 	l.j 102d4a0 <__stack+0xbad4a4>
    6164:	15 00 05 02 	l.nop 0x502
    6168:	00 40 9c dc 	l.j 102d4d8 <__stack+0xbad4dc>
    616c:	15 00 05 02 	l.nop 0x502
    6170:	00 40 9c e0 	l.j 102d4f0 <__stack+0xbad4f4>
    6174:	13 00 05 02 	l.bf fc00757c <__stack+0xfbb87580>
    6178:	00 40 9c ec 	l.j 102d528 <__stack+0xbad52c>
    617c:	15 00 05 02 	l.nop 0x502
    6180:	00 40 9c f8 	l.j 102d560 <__stack+0xbad564>
    6184:	15 00 05 02 	l.nop 0x502
    6188:	00 40 9c fc 	l.j 102d578 <__stack+0xbad57c>
    618c:	13 00 05 02 	l.bf fc007594 <__stack+0xfbb87598>
    6190:	00 40 9d 08 	l.j 102d5b0 <__stack+0xbad5b4>
    6194:	15 00 05 02 	l.nop 0x502
    6198:	00 40 9d 14 	l.j 102d5e8 <__stack+0xbad5ec>
    619c:	15 00 05 02 	l.nop 0x502
    61a0:	00 40 9d 18 	l.j 102d600 <__stack+0xbad604>
    61a4:	13 00 05 02 	l.bf fc0075ac <__stack+0xfbb875b0>
    61a8:	00 40 9d 24 	l.j 102d638 <__stack+0xbad63c>
    61ac:	15 00 05 02 	l.nop 0x502
    61b0:	00 40 9d 3c 	l.j 102d6a0 <__stack+0xbad6a4>
    61b4:	15 00 05 02 	l.nop 0x502
    61b8:	00 40 9d 54 	l.j 102d708 <__stack+0xbad70c>
    61bc:	16 00 05 02 	.word 0x16000502
    61c0:	00 40 9d 58 	l.j 102d720 <__stack+0xbad724>
    61c4:	17 00 05 02 	.word 0x17000502
    61c8:	00 40 9d 78 	l.j 102d7a8 <__stack+0xbad7ac>
    61cc:	04 15 03 f2 	l.jal 547194 <__stack+0xc7198>
    61d0:	7c 01 00 05 	l.cust4 
    61d4:	02 00 40 9d 	l.j f8016448 <__stack+0xf7b9644c>
    61d8:	a8 19 00 05 	l.ori r0,r25,0x5
    61dc:	02 00 40 9d 	l.j f8016450 <__stack+0xf7b96454>
    61e0:	ac 0f 00 05 	l.xori r0,r15,0x5
    61e4:	02 00 40 9d 	l.j f8016458 <__stack+0xf7b9645c>
    61e8:	b0 19 00 05 	l.muli r0,r25,0x5
    61ec:	02 00 40 9d 	l.j f8016460 <__stack+0xf7b96464>
    61f0:	bc 15 00 05 	l.sfeqi r21,0x5
    61f4:	02 00 40 9d 	l.j f8016468 <__stack+0xf7b9646c>
    61f8:	d0 16 00 05 	l.sd 0x5(r22),r0
    61fc:	02 00 40 9d 	l.j f8016470 <__stack+0xf7b96474>
    6200:	dc 15 00 05 	l.sh 0x5(r21),r0
    6204:	02 00 40 9d 	l.j f8016478 <__stack+0xf7b9647c>
    6208:	f8 16 00 05 	l.cust7 
    620c:	02 00 40 9d 	l.j f8016480 <__stack+0xf7b96484>
    6210:	fc 15 00 05 	l.cust8 
    6214:	02 00 40 9e 	l.j f801648c <__stack+0xf7b96490>
    6218:	08 20 00 05 	.word 0x08200005
    621c:	02 00 40 9e 	l.j f8016494 <__stack+0xf7b96498>
    6220:	10 0d 00 05 	l.bf 346234 <__ram_length+0x2c6234>
    6224:	02 00 40 9e 	l.j f801649c <__stack+0xf7b964a0>
    6228:	28 16 00 05 	.word 0x28160005
    622c:	02 00 40 9e 	l.j f80164a4 <__stack+0xf7b964a8>
    6230:	34 10 00 05 	.word 0x34100005
    6234:	02 00 40 9e 	l.j f80164ac <__stack+0xf7b964b0>
    6238:	40 1a 00 05 	.word 0x401a0005
    623c:	02 00 40 9e 	l.j f80164b4 <__stack+0xf7b964b8>
    6240:	4c 17 00 05 	l.maci r23,0x5
    6244:	02 00 40 9e 	l.j f80164bc <__stack+0xf7b964c0>
    6248:	58 17 00 05 	.word 0x58170005
    624c:	02 00 40 9e 	l.j f80164c4 <__stack+0xf7b964c8>
    6250:	5c 15 00 05 	.word 0x5c150005
    6254:	02 00 40 9e 	l.j f80164cc <__stack+0xf7b964d0>
    6258:	60 13 00 05 	.word 0x60130005
    625c:	02 00 40 9e 	l.j f80164d4 <__stack+0xf7b964d8>
    6260:	68 15 00 05 	.word 0x68150005
    6264:	02 00 40 9e 	l.j f80164dc <__stack+0xf7b964e0>
    6268:	70 24 00 05 	l.cust1 
    626c:	02 00 40 9e 	l.j f80164e4 <__stack+0xf7b964e8>
    6270:	8c 19 00 05 	l.lbz r0,0x5(r25)
    6274:	02 00 40 9e 	l.j f80164ec <__stack+0xf7b964f0>
    6278:	90 15 00 05 	l.lbs r0,0x5(r21)
    627c:	02 00 40 9e 	l.j f80164f4 <__stack+0xf7b964f8>
    6280:	94 13 00 05 	l.lhz r0,0x5(r19)
    6284:	02 00 40 9e 	l.j f80164fc <__stack+0xf7b96500>
    6288:	98 15 00 05 	l.lhs r0,0x5(r21)
    628c:	02 00 40 9e 	l.j f8016504 <__stack+0xf7b96508>
    6290:	9c 13 00 05 	l.addi r0,r19,0x5
    6294:	02 00 40 9e 	l.j f801650c <__stack+0xf7b96510>
    6298:	a0 18 00 05 	l.addic r0,r24,0x5
    629c:	02 00 40 9e 	l.j f8016514 <__stack+0xf7b96518>
    62a0:	a4 10 00 05 	l.andi r0,r16,0x5
    62a4:	02 00 40 9e 	l.j f801651c <__stack+0xf7b96520>
    62a8:	a8 1a 00 05 	l.ori r0,r26,0x5
    62ac:	02 00 40 9e 	l.j f8016524 <__stack+0xf7b96528>
    62b0:	ac 0e 00 05 	l.xori r0,r14,0x5
    62b4:	02 00 40 9e 	l.j f801652c <__stack+0xf7b96530>
    62b8:	b0 23 00 05 	l.muli r1,r3,0x5
    62bc:	02 00 40 9e 	l.j f8016534 <__stack+0xf7b96538>
    62c0:	b4 16 00 05 	l.mfspr r0,r22,0x5
    62c4:	02 00 40 9e 	l.j f801653c <__stack+0xf7b96540>
    62c8:	b8 03 70 01 	l.slli r0,r3,0x1
    62cc:	00 05 02 00 	l.j 146acc <__ram_length+0xc6acc>
    62d0:	40 9e c0 16 	.word 0x409ec016
    62d4:	00 05 02 00 	l.j 146ad4 <__ram_length+0xc6ad4>
    62d8:	40 9e c4 20 	.word 0x409ec420
    62dc:	00 05 02 00 	l.j 146adc <__ram_length+0xc6adc>
    62e0:	40 9e c8 03 	.word 0x409ec803
    62e4:	74 01 00 05 	l.cust2 
    62e8:	02 00 40 9e 	l.j f8016560 <__stack+0xf7b96564>
    62ec:	d4 15 00 05 	l.sw 0x5(r21),r0
    62f0:	02 00 40 9e 	l.j f8016568 <__stack+0xf7b9656c>
    62f4:	d8 1f 00 05 	l.sb 0x5(r31),r0
    62f8:	02 00 40 9e 	l.j f8016570 <__stack+0xf7b96574>
    62fc:	dc 17 00 05 	l.sh 0x5(r23),r0
    6300:	02 00 40 9e 	l.j f8016578 <__stack+0xf7b9657c>
    6304:	e0 03 72 01 	.word 0xe0037201
    6308:	00 05 02 00 	l.j 146b08 <__ram_length+0xc6b08>
    630c:	40 9e e8 15 	.word 0x409ee815
    6310:	00 05 02 00 	l.j 146b10 <__ram_length+0xc6b10>
    6314:	40 9e f8 01 	.word 0x409ef801
    6318:	00 05 02 00 	l.j 146b18 <__ram_length+0xc6b18>
    631c:	40 9f 00 15 	.word 0x409f0015
    6320:	00 05 02 00 	l.j 146b20 <__ram_length+0xc6b20>
    6324:	40 9f 18 1d 	.word 0x409f181d
    6328:	00 05 02 00 	l.j 146b28 <__ram_length+0xc6b28>
    632c:	40 9f 1c 16 	.word 0x409f1c16
    6330:	00 05 02 00 	l.j 146b30 <__ram_length+0xc6b30>
    6334:	40 9f 20 12 	.word 0x409f2012
    6338:	00 05 02 00 	l.j 146b38 <__ram_length+0xc6b38>
    633c:	40 9f 24 16 	.word 0x409f2416
    6340:	00 05 02 00 	l.j 146b40 <__ram_length+0xc6b40>
    6344:	40 9f 28 15 	.word 0x409f2815
    6348:	00 05 02 00 	l.j 146b48 <__ram_length+0xc6b48>
    634c:	40 9f e0 11 	.word 0x409fe011
    6350:	00 05 02 00 	l.j 146b50 <__ram_length+0xc6b50>
    6354:	40 9f e4 17 	.word 0x409fe417
    6358:	00 05 02 00 	l.j 146b58 <__ram_length+0xc6b58>
    635c:	40 9f ec 15 	.word 0x409fec15
    6360:	00 05 02 00 	l.j 146b60 <__ram_length+0xc6b60>
    6364:	40 9f f0 03 	.word 0x409ff003
    6368:	bb 7f 01 00 	l.slli r27,r31,0x0
    636c:	05 02 00 40 	l.jal 408646c <__stack+0x3c06470>
    6370:	9f f4 59 00 	l.addi r31,r20,0x5900
    6374:	05 02 00 40 	l.jal 4086474 <__stack+0x3c06478>
    6378:	a0 00 15 00 	l.addic r0,r0,0x1500
    637c:	05 02 00 40 	l.jal 408647c <__stack+0x3c06480>
    6380:	a0 0c 15 00 	l.addic r0,r12,0x1500
    6384:	05 02 00 40 	l.jal 4086484 <__stack+0x3c06488>
    6388:	a0 b8 13 00 	l.addic r5,r24,0x1300
    638c:	05 02 00 40 	l.jal 408648c <__stack+0x3c06490>
    6390:	a0 bc 15 00 	l.addic r5,r28,0x1500
    6394:	05 02 00 40 	l.jal 4086494 <__stack+0x3c06498>
    6398:	a0 c4 16 00 	l.addic r6,r4,0x1600
    639c:	05 02 00 40 	l.jal 408649c <__stack+0x3c064a0>
    63a0:	a0 c8 12 00 	l.addic r6,r8,0x1200
    63a4:	05 02 00 40 	l.jal 40864a4 <__stack+0x3c064a8>
    63a8:	a0 cc 15 00 	l.addic r6,r12,0x1500
    63ac:	05 02 00 40 	l.jal 40864ac <__stack+0x3c064b0>
    63b0:	a0 d0 13 00 	l.addic r6,r16,0x1300
    63b4:	05 02 00 40 	l.jal 40864b4 <__stack+0x3c064b8>
    63b8:	a0 d8 15 00 	l.addic r6,r24,0x1500
    63bc:	05 02 00 40 	l.jal 40864bc <__stack+0x3c064c0>
    63c0:	a0 e0 15 00 	l.addic r7,r0,0x1500
    63c4:	05 02 00 40 	l.jal 40864c4 <__stack+0x3c064c8>
    63c8:	a0 e4 16 00 	l.addic r7,r4,0x1600
    63cc:	05 02 00 40 	l.jal 40864cc <__stack+0x3c064d0>
    63d0:	a0 e8 12 00 	l.addic r7,r8,0x1200
    63d4:	05 02 00 40 	l.jal 40864d4 <__stack+0x3c064d8>
    63d8:	a0 ec 15 00 	l.addic r7,r12,0x1500
    63dc:	05 02 00 40 	l.jal 40864dc <__stack+0x3c064e0>
    63e0:	a1 b0 03 b6 	l.addic r13,r16,0x3b6
    63e4:	7f 01 00 05 	l.cust4 
    63e8:	02 00 40 a1 	l.j f801666c <__stack+0xf7b96670>
    63ec:	b4 5e 00 05 	l.mfspr r2,r30,0x5
    63f0:	02 00 40 a1 	l.j f8016674 <__stack+0xf7b96678>
    63f4:	b8 16 00 05 	l.slli r0,r22,0x5
    63f8:	02 00 40 a1 	l.j f801667c <__stack+0xf7b96680>
    63fc:	c0 1a 00 05 	l.mtspr r26,r0,0x5
    6400:	02 00 40 a1 	l.j f8016684 <__stack+0xf7b96688>
    6404:	c4 0e 00 05 	.word 0xc40e0005
    6408:	02 00 40 a1 	l.j f801668c <__stack+0xf7b96690>
    640c:	c8 15 00 05 	lf.ftoi.s r0,r21
    6410:	02 00 40 a1 	l.j f8016694 <__stack+0xf7b96698>
    6414:	d0 19 00 05 	l.sd 0x5(r25),r0
    6418:	02 00 40 a1 	l.j f801669c <__stack+0xf7b966a0>
    641c:	d4 0f 00 05 	l.sw 0x5(r15),r0
    6420:	02 00 40 a1 	l.j f80166a4 <__stack+0xf7b966a8>
    6424:	d8 15 00 05 	l.sb 0x5(r21),r0
    6428:	02 00 40 a3 	l.j f80166b4 <__stack+0xf7b966b8>
    642c:	58 15 00 05 	.word 0x58150005
    6430:	02 00 40 a3 	l.j f80166bc <__stack+0xf7b966c0>
    6434:	64 15 00 05 	.word 0x64150005
    6438:	02 00 40 a3 	l.j f80166c4 <__stack+0xf7b966c8>
    643c:	6c 16 00 05 	.word 0x6c160005
    6440:	02 00 40 a3 	l.j f80166cc <__stack+0xf7b966d0>
    6444:	70 12 00 05 	l.cust1 
    6448:	02 00 40 a3 	l.j f80166d4 <__stack+0xf7b966d8>
    644c:	74 15 00 05 	l.cust2 
    6450:	02 00 40 a4 	l.j f80166e0 <__stack+0xf7b966e4>
    6454:	f4 15 00 05 	l.cust6 
    6458:	02 00 40 a4 	l.j f80166e8 <__stack+0xf7b966ec>
    645c:	f8 19 00 05 	l.cust7 
    6460:	02 00 40 a4 	l.j f80166f0 <__stack+0xf7b966f4>
    6464:	fc 0f 00 05 	l.cust8 
    6468:	02 00 40 a5 	l.j f80166fc <__stack+0xf7b96700>
    646c:	04 19 00 05 	l.jal 646480 <__stack+0x1c6484>
    6470:	02 00 40 a5 	l.j f8016704 <__stack+0xf7b96708>
    6474:	14 03 a9 7f 	.word 0x1403a97f
    6478:	01 00 05 02 	l.j 4007880 <__stack+0x3b87884>
    647c:	00 40 a5 18 	l.j 102f8dc <__stack+0xbaf8e0>
    6480:	6c 00 05 02 	.word 0x6c000502
    6484:	00 40 a5 1c 	l.j 102f8f4 <__stack+0xbaf8f8>
    6488:	03 73 01 00 	l.j fdcc6888 <__stack+0xfd84688c>
    648c:	05 02 00 40 	l.jal 408658c <__stack+0x3c06590>
    6490:	a5 2c 23 00 	l.andi r9,r12,0x2300
    6494:	05 02 00 40 	l.jal 4086594 <__stack+0x3c06598>
    6498:	a5 30 03 5c 	l.andi r9,r16,0x35c
    649c:	01 00 05 02 	l.j 40078a4 <__stack+0x3b878a8>
    64a0:	00 40 a5 38 	l.j 102f980 <__stack+0xbaf984>
    64a4:	01 00 05 02 	l.j 40078ac <__stack+0x3b878b0>
    64a8:	00 40 a5 44 	l.j 102f9b8 <__stack+0xbaf9bc>
    64ac:	3a 00 05 02 	.word 0x3a000502
    64b0:	00 40 a5 4c 	l.j 102f9e0 <__stack+0xbaf9e4>
    64b4:	15 00 05 02 	l.nop 0x502
    64b8:	00 40 a5 54 	l.j 102fa08 <__stack+0xbafa0c>
    64bc:	3d 00 05 02 	.word 0x3d000502
    64c0:	00 40 a5 6c 	l.j 102fa70 <__stack+0xbafa74>
    64c4:	15 00 05 02 	l.nop 0x502
    64c8:	00 40 a5 78 	l.j 102faa8 <__stack+0xbafaac>
    64cc:	16 00 05 02 	.word 0x16000502
    64d0:	00 40 a5 7c 	l.j 102fac0 <__stack+0xbafac4>
    64d4:	17 00 05 02 	.word 0x17000502
    64d8:	00 40 a5 b0 	l.j 102fb98 <__stack+0xbafb9c>
    64dc:	04 0c fd 00 	l.jal 3458dc <__ram_length+0x2c58dc>
    64e0:	05 02 00 40 	l.jal 40865e0 <__stack+0x3c065e4>
    64e4:	a5 c0 1c 00 	l.andi r14,r0,0x1c00
    64e8:	05 02 00 40 	l.jal 40865e8 <__stack+0x3c065ec>
    64ec:	a5 c8 15 00 	l.andi r14,r8,0x1500
    64f0:	05 02 00 40 	l.jal 40865f0 <__stack+0x3c065f4>
    64f4:	a5 d4 16 00 	l.andi r14,r20,0x1600
    64f8:	05 02 00 40 	l.jal 40865f8 <__stack+0x3c065fc>
    64fc:	a5 dc 15 00 	l.andi r14,r28,0x1500
    6500:	05 02 00 40 	l.jal 4086600 <__stack+0x3c06604>
    6504:	a5 f0 17 00 	l.andi r15,r16,0x1700
    6508:	05 02 00 40 	l.jal 4086608 <__stack+0x3c0660c>
    650c:	a5 f4 11 00 	l.andi r15,r20,0x1100
    6510:	05 02 00 40 	l.jal 4086610 <__stack+0x3c06614>
    6514:	a6 00 17 00 	l.andi r16,r0,0x1700
    6518:	05 02 00 40 	l.jal 4086618 <__stack+0x3c0661c>
    651c:	a6 0c 11 00 	l.andi r16,r12,0x1100
    6520:	05 02 00 40 	l.jal 4086620 <__stack+0x3c06624>
    6524:	a6 14 17 00 	l.andi r16,r20,0x1700
    6528:	05 02 00 40 	l.jal 4086628 <__stack+0x3c0662c>
    652c:	a6 18 17 00 	l.andi r16,r24,0x1700
    6530:	05 02 00 40 	l.jal 4086630 <__stack+0x3c06634>
    6534:	a6 1c 18 00 	l.andi r16,r28,0x1800
    6538:	05 02 00 40 	l.jal 4086638 <__stack+0x3c0663c>
    653c:	a6 20 16 00 	l.andi r17,r0,0x1600
    6540:	05 02 00 40 	l.jal 4086640 <__stack+0x3c06644>
    6544:	a6 24 0b 00 	l.andi r17,r4,0xb00
    6548:	05 02 00 40 	l.jal 4086648 <__stack+0x3c0664c>
    654c:	a6 2c 15 00 	l.andi r17,r12,0x1500
    6550:	05 02 00 40 	l.jal 4086650 <__stack+0x3c06654>
    6554:	a6 30 13 00 	l.andi r17,r16,0x1300
    6558:	05 02 00 40 	l.jal 4086658 <__stack+0x3c0665c>
    655c:	a6 6c 03 70 	l.andi r19,r12,0x370
    6560:	01 00 05 02 	l.j 4007968 <__stack+0x3b8796c>
    6564:	00 40 a6 74 	l.j 102ff34 <__stack+0xbaff38>
    6568:	25 00 05 02 	l.rfe 
    656c:	00 40 a6 7c 	l.j 102ff5c <__stack+0xbaff60>
    6570:	15 00 05 02 	l.nop 0x502
    6574:	00 40 a6 90 	l.j 102ffb4 <__stack+0xbaffb8>
    6578:	15 00 05 02 	l.nop 0x502
    657c:	00 40 a6 94 	l.j 102ffcc <__stack+0xbaffd0>
    6580:	13 00 05 02 	l.bf fc007988 <__stack+0xfbb8798c>
    6584:	00 40 a6 a8 	l.j 1030024 <__stack+0xbb0028>
    6588:	15 00 05 02 	l.nop 0x502
    658c:	00 40 a6 b0 	l.j 103004c <__stack+0xbb0050>
    6590:	15 00 05 02 	l.nop 0x502
    6594:	00 40 a6 b8 	l.j 1030074 <__stack+0xbb0078>
    6598:	16 00 05 02 	.word 0x16000502
    659c:	00 40 a6 d8 	l.j 10300fc <__stack+0xbb0100>
    65a0:	0f 00 05 02 	l.bnf fc0079a8 <__stack+0xfbb879ac>
    65a4:	00 40 a6 dc 	l.j 1030114 <__stack+0xbb0118>
    65a8:	19 00 05 02 	l.movhi r8,0x502
    65ac:	00 40 a6 e0 	l.j 103012c <__stack+0xbb0130>
    65b0:	15 00 05 02 	l.nop 0x502
    65b4:	00 40 a7 a0 	l.j 1030434 <__stack+0xbb0438>
    65b8:	0e 00 05 02 	l.bnf f80079c0 <__stack+0xf7b879c4>
    65bc:	00 40 a7 a4 	l.j 103044c <__stack+0xbb0450>
    65c0:	01 00 05 02 	l.j 40079c8 <__stack+0x3b879cc>
    65c4:	00 40 a7 b0 	l.j 1030484 <__stack+0xbb0488>
    65c8:	1c 00 05 02 	.word 0x1c000502
    65cc:	00 40 a8 78 	l.j 10307ac <__stack+0xbb07b0>
    65d0:	0a 00 05 02 	.word 0x0a000502
    65d4:	00 40 a8 94 	l.j 1030824 <__stack+0xbb0828>
    65d8:	23 00 05 02 	.word 0x23000502
    65dc:	00 40 a8 a8 	l.j 103087c <__stack+0xbb0880>
    65e0:	04 18 03 9a 	l.jal 607448 <__stack+0x18744c>
    65e4:	7d 01 00 05 	l.cust4 
    65e8:	02 00 40 a8 	l.j f8016888 <__stack+0xf7b9688c>
    65ec:	b4 01 00 05 	l.mfspr r0,r1,0x5
    65f0:	02 00 40 a8 	l.j f8016890 <__stack+0xf7b96894>
    65f4:	b8 17 00 05 	l.slli r0,r23,0x5
    65f8:	02 00 40 a8 	l.j f8016898 <__stack+0xf7b9689c>
    65fc:	d0 15 00 05 	l.sd 0x5(r21),r0
    6600:	02 00 40 a8 	l.j f80168a0 <__stack+0xf7b968a4>
    6604:	dc 15 00 05 	l.sh 0x5(r21),r0
    6608:	02 00 40 a8 	l.j f80168a8 <__stack+0xf7b968ac>
    660c:	e8 18 00 05 	.word 0xe8180005
    6610:	02 00 40 a8 	l.j f80168b0 <__stack+0xf7b968b4>
    6614:	f0 15 00 05 	l.cust5 r0,r21,r0,0x0,0x5
    6618:	02 00 40 a8 	l.j f80168b8 <__stack+0xf7b968bc>
    661c:	f4 13 00 05 	l.cust6 
    6620:	02 00 40 a8 	l.j f80168c0 <__stack+0xf7b968c4>
    6624:	fc 01 00 05 	l.cust8 
    6628:	02 00 40 a9 	l.j f80168cc <__stack+0xf7b968d0>
    662c:	0c 15 00 05 	l.bnf 546640 <__stack+0xc6644>
    6630:	02 00 40 a9 	l.j f80168d4 <__stack+0xf7b968d8>
    6634:	10 15 00 05 	l.bf 546648 <__stack+0xc664c>
    6638:	02 00 40 a9 	l.j f80168dc <__stack+0xf7b968e0>
    663c:	18 01 00 05 	.word 0x18010005
    6640:	02 00 40 a9 	l.j f80168e4 <__stack+0xf7b968e8>
    6644:	28 15 00 05 	.word 0x28150005
    6648:	02 00 40 a9 	l.j f80168ec <__stack+0xf7b968f0>
    664c:	2c 15 00 05 	.word 0x2c150005
    6650:	02 00 40 a9 	l.j f80168f4 <__stack+0xf7b968f8>
    6654:	34 04 12 03 	.word 0x34041203
    6658:	9f 05 01 00 	l.addi r24,r5,0x100
    665c:	05 02 00 40 	l.jal 408675c <__stack+0x3c06760>
    6660:	a9 34 18 00 	l.ori r9,r20,0x1800
    6664:	05 02 00 40 	l.jal 4086764 <__stack+0x3c06768>
    6668:	a9 40 10 00 	l.ori r10,r0,0x1000
    666c:	05 02 00 40 	l.jal 408676c <__stack+0x3c06770>
    6670:	a9 44 1a 00 	l.ori r10,r4,0x1a00
    6674:	05 02 00 40 	l.jal 4086774 <__stack+0x3c06778>
    6678:	a9 4c 12 00 	l.ori r10,r12,0x1200
    667c:	05 02 00 40 	l.jal 408677c <__stack+0x3c06780>
    6680:	a9 50 16 00 	l.ori r10,r16,0x1600
    6684:	05 02 00 40 	l.jal 4086784 <__stack+0x3c06788>
    6688:	a9 54 1a 00 	l.ori r10,r20,0x1a00
    668c:	05 02 00 40 	l.jal 408678c <__stack+0x3c06790>
    6690:	a9 58 0e 00 	l.ori r10,r24,0xe00
    6694:	05 02 00 40 	l.jal 4086794 <__stack+0x3c06798>
    6698:	a9 5c 16 00 	l.ori r10,r28,0x1600
    669c:	05 02 00 40 	l.jal 408679c <__stack+0x3c067a0>
    66a0:	a9 60 0c 00 	l.ori r11,r0,0xc00
    66a4:	05 02 00 40 	l.jal 40867a4 <__stack+0x3c067a8>
    66a8:	a9 64 1c 00 	l.ori r11,r4,0x1c00
    66ac:	05 02 00 40 	l.jal 40867ac <__stack+0x3c067b0>
    66b0:	a9 6c 15 00 	l.ori r11,r12,0x1500
    66b4:	05 02 00 40 	l.jal 40867b4 <__stack+0x3c067b8>
    66b8:	a9 74 15 00 	l.ori r11,r20,0x1500
    66bc:	05 02 00 40 	l.jal 40867bc <__stack+0x3c067c0>
    66c0:	a9 78 15 00 	l.ori r11,r24,0x1500
    66c4:	05 02 00 40 	l.jal 40867c4 <__stack+0x3c067c8>
    66c8:	a9 80 15 00 	l.ori r12,r0,0x1500
    66cc:	05 02 00 40 	l.jal 40867cc <__stack+0x3c067d0>
    66d0:	a9 88 15 00 	l.ori r12,r8,0x1500
    66d4:	05 02 00 40 	l.jal 40867d4 <__stack+0x3c067d8>
    66d8:	a9 8c 17 00 	l.ori r12,r12,0x1700
    66dc:	05 02 00 40 	l.jal 40867dc <__stack+0x3c067e0>
    66e0:	a9 98 04 0f 	l.ori r12,r24,0x40f
    66e4:	03 c2 7c 01 	l.j ff0a56e8 <__stack+0xfec256ec>
    66e8:	00 05 02 00 	l.j 146ee8 <__ram_length+0xc6ee8>
    66ec:	40 a9 c4 22 	.word 0x40a9c422
    66f0:	00 05 02 00 	l.j 146ef0 <__ram_length+0xc6ef0>
    66f4:	40 a9 c8 01 	.word 0x40a9c801
    66f8:	00 05 02 00 	l.j 146ef8 <__ram_length+0xc6ef8>
    66fc:	40 a9 d4 17 	.word 0x40a9d417
    6700:	00 05 02 00 	l.j 146f00 <__ram_length+0xc6f00>
    6704:	40 a9 e0 15 	.word 0x40a9e015
    6708:	00 05 02 00 	l.j 146f08 <__ram_length+0xc6f08>
    670c:	40 a9 e4 13 	.word 0x40a9e413
    6710:	00 05 02 00 	l.j 146f10 <__ram_length+0xc6f10>
    6714:	40 a9 e8 15 	.word 0x40a9e815
    6718:	00 05 02 00 	l.j 146f18 <__ram_length+0xc6f18>
    671c:	40 a9 ec 16 	.word 0x40a9ec16
    6720:	00 05 02 00 	l.j 146f20 <__ram_length+0xc6f20>
    6724:	40 a9 f0 12 	.word 0x40a9f012
    6728:	00 05 02 00 	l.j 146f28 <__ram_length+0xc6f28>
    672c:	40 a9 f8 15 	.word 0x40a9f815
    6730:	00 05 02 00 	l.j 146f30 <__ram_length+0xc6f30>
    6734:	40 aa 04 15 	.word 0x40aa0415
    6738:	00 05 02 00 	l.j 146f38 <__ram_length+0xc6f38>
    673c:	40 aa 0c 15 	.word 0x40aa0c15
    6740:	00 05 02 00 	l.j 146f40 <__ram_length+0xc6f40>
    6744:	40 aa 14 15 	.word 0x40aa1415
    6748:	00 05 02 00 	l.j 146f48 <__ram_length+0xc6f48>
    674c:	40 aa 1c 15 	.word 0x40aa1c15
    6750:	00 05 02 00 	l.j 146f50 <__ram_length+0xc6f50>
    6754:	40 aa 20 03 	.word 0x40aa2003
    6758:	69 01 00 05 	.word 0x69010005
    675c:	02 00 40 aa 	l.j f8016a04 <__stack+0xf7b96a08>
    6760:	24 2b 00 05 	l.rfe 
    6764:	02 00 40 aa 	l.j f8016a0c <__stack+0xf7b96a10>
    6768:	2c 03 69 01 	.word 0x2c036901
    676c:	00 05 02 00 	l.j 146f6c <__ram_length+0xc6f6c>
    6770:	40 aa 30 2e 	.word 0x40aa302e
    6774:	00 05 02 00 	l.j 146f74 <__ram_length+0xc6f74>
    6778:	40 aa 34 15 	.word 0x40aa3415
    677c:	00 05 02 00 	l.j 146f7c <__ram_length+0xc6f7c>
    6780:	40 aa 38 13 	.word 0x40aa3813
    6784:	00 05 02 00 	l.j 146f84 <__ram_length+0xc6f84>
    6788:	40 aa 40 15 	.word 0x40aa4015
    678c:	00 05 02 00 	l.j 146f8c <__ram_length+0xc6f8c>
    6790:	40 aa 50 11 	.word 0x40aa5011
    6794:	00 05 02 00 	l.j 146f94 <__ram_length+0xc6f94>
    6798:	40 aa 5c 19 	.word 0x40aa5c19
    679c:	00 05 02 00 	l.j 146f9c <__ram_length+0xc6f9c>
    67a0:	40 aa 6c 1f 	.word 0x40aa6c1f
    67a4:	00 05 02 00 	l.j 146fa4 <__ram_length+0xc6fa4>
    67a8:	40 aa 80 16 	.word 0x40aa8016
    67ac:	00 05 02 00 	l.j 146fac <__ram_length+0xc6fac>
    67b0:	40 aa 8c 15 	.word 0x40aa8c15
    67b4:	00 05 02 00 	l.j 146fb4 <__ram_length+0xc6fb4>
    67b8:	40 aa a8 03 	.word 0x40aaa803
    67bc:	74 01 00 05 	l.cust2 
    67c0:	02 00 40 aa 	l.j f8016a68 <__stack+0xf7b96a6c>
    67c4:	ac 23 00 05 	l.xori r1,r3,0x5
    67c8:	02 00 40 aa 	l.j f8016a70 <__stack+0xf7b96a74>
    67cc:	b8 16 00 05 	l.slli r0,r22,0x5
    67d0:	02 00 40 aa 	l.j f8016a78 <__stack+0xf7b96a7c>
    67d4:	bc 03 50 01 	l.sfeqi r3,0x5001
    67d8:	00 05 02 00 	l.j 146fd8 <__ram_length+0xc6fd8>
    67dc:	40 aa c0 44 	.word 0x40aac044
    67e0:	00 05 02 00 	l.j 146fe0 <__ram_length+0xc6fe0>
    67e4:	40 aa c8 03 	.word 0x40aac803
    67e8:	bd 7e 01 00 	l.sfgesi r30,0x100
    67ec:	05 02 00 40 	l.jal 40868ec <__stack+0x3c068f0>
    67f0:	ab 00 a7 00 	l.ori r24,r0,0xa700
    67f4:	05 02 00 40 	l.jal 40868f4 <__stack+0x3c068f8>
    67f8:	ab 04 03 ed 	l.ori r24,r4,0x3ed
    67fc:	7e 01 00 05 	l.cust4 
    6800:	02 00 40 ab 	l.j f8016aac <__stack+0xf7b96ab0>
    6804:	0c 04 08 03 	l.bnf 108810 <__ram_length+0x88810>
    6808:	e6 7e 01 00 	.word 0xe67e0100
    680c:	05 02 00 40 	l.jal 408690c <__stack+0x3c06910>
    6810:	ab 14 13 00 	l.ori r24,r20,0x1300
    6814:	05 02 00 40 	l.jal 4086914 <__stack+0x3c06918>
    6818:	ab 20 04 0f 	l.ori r25,r0,0x40f
    681c:	b3 00 05 02 	l.muli r24,r0,0x502
    6820:	00 40 ab 5c 	l.j 1031590 <__stack+0xbb1594>
    6824:	18 00 05 02 	l.movhi r0,0x502
    6828:	00 40 ab 64 	l.j 10315b8 <__stack+0xbb15bc>
    682c:	15 00 05 02 	l.nop 0x502
    6830:	00 40 ab 68 	l.j 10315d0 <__stack+0xbb15d4>
    6834:	15 00 05 02 	l.nop 0x502
    6838:	00 40 ab 88 	l.j 1031658 <__stack+0xbb165c>
    683c:	16 00 05 02 	.word 0x16000502
    6840:	00 40 ab 8c 	l.j 1031670 <__stack+0xbb1674>
    6844:	12 00 05 02 	l.bf f8007c4c <__stack+0xf7b87c50>
    6848:	00 40 ab 90 	l.j 1031688 <__stack+0xbb168c>
    684c:	15 00 05 02 	l.nop 0x502
    6850:	00 40 ab 94 	l.j 10316a0 <__stack+0xbb16a4>
    6854:	13 00 05 02 	l.bf fc007c5c <__stack+0xfbb87c60>
    6858:	00 40 ab 98 	l.j 10316b8 <__stack+0xbb16bc>
    685c:	18 00 05 02 	l.movhi r0,0x502
    6860:	00 40 ab 9c 	l.j 10316d0 <__stack+0xbb16d4>
    6864:	11 00 05 02 	l.bf 4007c6c <__stack+0x3b87c70>
    6868:	00 40 ab a0 	l.j 10316e8 <__stack+0xbb16ec>
    686c:	15 00 05 02 	l.nop 0x502
    6870:	00 40 ab a4 	l.j 1031700 <__stack+0xbb1704>
    6874:	16 00 05 02 	.word 0x16000502
    6878:	00 40 ab b4 	l.j 1031748 <__stack+0xbb174c>
    687c:	15 00 05 02 	l.nop 0x502
    6880:	00 40 ab c8 	l.j 10317a0 <__stack+0xbb17a4>
    6884:	17 00 05 02 	.word 0x17000502
    6888:	00 40 ab dc 	l.j 10317f8 <__stack+0xbb17fc>
    688c:	16 00 05 02 	.word 0x16000502
    6890:	00 40 ab ec 	l.j 1031840 <__stack+0xbb1844>
    6894:	16 00 05 02 	.word 0x16000502
    6898:	00 40 ac 00 	l.j 1031898 <__stack+0xbb189c>
    689c:	18 00 05 02 	l.movhi r0,0x502
    68a0:	00 40 ac 14 	l.j 10318f0 <__stack+0xbb18f4>
    68a4:	16 00 05 02 	.word 0x16000502
    68a8:	00 40 ac 38 	l.j 1031988 <__stack+0xbb198c>
    68ac:	8b 00 05 02 	l.lws r24,0x502(r0)
    68b0:	00 40 ac 4c 	l.j 10319e0 <__stack+0xbb19e4>
    68b4:	03 8c 7f 01 	l.j fe3264b8 <__stack+0xfdea64bc>
    68b8:	00 05 02 00 	l.j 1470b8 <__ram_length+0xc70b8>
    68bc:	40 ac 54 13 	.word 0x40ac5413
    68c0:	00 05 02 00 	l.j 1470c0 <__ram_length+0xc70c0>
    68c4:	40 ac 6c 3c 	.word 0x40ac6c3c
    68c8:	00 05 02 00 	l.j 1470c8 <__ram_length+0xc70c8>
    68cc:	40 ac 74 03 	.word 0x40ac7403
    68d0:	5d 01 00 05 	.word 0x5d010005
    68d4:	02 00 40 ac 	l.j f8016b84 <__stack+0xf7b96b88>
    68d8:	88 1e 00 05 	l.lws r0,0x5(r30)
    68dc:	02 00 40 ac 	l.j f8016b8c <__stack+0xf7b96b90>
    68e0:	94 16 00 05 	l.lhz r0,0x5(r22)
    68e4:	02 00 40 ac 	l.j f8016b94 <__stack+0xf7b96b98>
    68e8:	98 16 00 05 	l.lhs r0,0x5(r22)
    68ec:	02 00 40 ac 	l.j f8016b9c <__stack+0xf7b96ba0>
    68f0:	9c 12 00 05 	l.addi r0,r18,0x5
    68f4:	02 00 40 ac 	l.j f8016ba4 <__stack+0xf7b96ba8>
    68f8:	a0 15 00 05 	l.addic r0,r21,0x5
    68fc:	02 00 40 ac 	l.j f8016bac <__stack+0xf7b96bb0>
    6900:	a4 13 00 05 	l.andi r0,r19,0x5
    6904:	02 00 40 ac 	l.j f8016bb4 <__stack+0xf7b96bb8>
    6908:	a8 18 00 05 	l.ori r0,r24,0x5
    690c:	02 00 40 ac 	l.j f8016bbc <__stack+0xf7b96bc0>
    6910:	ac 0f 00 05 	l.xori r0,r15,0x5
    6914:	02 00 40 ac 	l.j f8016bc4 <__stack+0xf7b96bc8>
    6918:	b0 16 00 05 	l.muli r0,r22,0x5
    691c:	02 00 40 ac 	l.j f8016bcc <__stack+0xf7b96bd0>
    6920:	b4 15 00 05 	l.mfspr r0,r21,0x5
    6924:	02 00 40 ac 	l.j f8016bd4 <__stack+0xf7b96bd8>
    6928:	b8 16 00 05 	l.slli r0,r22,0x5
    692c:	02 00 40 ac 	l.j f8016bdc <__stack+0xf7b96be0>
    6930:	cc 15 00 05 	.word 0xcc150005
    6934:	02 00 40 ac 	l.j f8016be4 <__stack+0xf7b96be8>
    6938:	d8 15 00 05 	l.sb 0x5(r21),r0
    693c:	02 00 40 ac 	l.j f8016bec <__stack+0xf7b96bf0>
    6940:	dc 13 00 05 	l.sh 0x5(r19),r0
    6944:	02 00 40 ac 	l.j f8016bf4 <__stack+0xf7b96bf8>
    6948:	e0 15 00 05 	l.xor r0,r21,r0
    694c:	02 00 40 ac 	l.j f8016bfc <__stack+0xf7b96c00>
    6950:	e4 13 00 05 	l.sfeq r19,r0
    6954:	02 00 40 ac 	l.j f8016c04 <__stack+0xf7b96c08>
    6958:	e8 15 00 05 	.word 0xe8150005
    695c:	02 00 40 ac 	l.j f8016c0c <__stack+0xf7b96c10>
    6960:	f4 17 00 05 	l.cust6 
    6964:	02 00 40 ad 	l.j f8016c18 <__stack+0xf7b96c1c>
    6968:	08 16 00 05 	.word 0x08160005
    696c:	02 00 40 ad 	l.j f8016c20 <__stack+0xf7b96c24>
    6970:	18 15 00 05 	.word 0x18150005
    6974:	02 00 40 ad 	l.j f8016c28 <__stack+0xf7b96c2c>
    6978:	2c 1f 00 05 	.word 0x2c1f0005
    697c:	02 00 40 ad 	l.j f8016c30 <__stack+0xf7b96c34>
    6980:	34 0c 00 05 	.word 0x340c0005
    6984:	02 00 40 ad 	l.j f8016c38 <__stack+0xf7b96c3c>
    6988:	44 15 00 05 	l.jr r0
    698c:	02 00 40 ad 	l.j f8016c40 <__stack+0xf7b96c44>
    6990:	58 1b 00 05 	.word 0x581b0005
    6994:	02 00 40 ad 	l.j f8016c48 <__stack+0xf7b96c4c>
    6998:	5c 13 00 05 	.word 0x5c130005
    699c:	02 00 40 ad 	l.j f8016c50 <__stack+0xf7b96c54>
    69a0:	60 15 00 05 	.word 0x60150005
    69a4:	02 00 40 ad 	l.j f8016c58 <__stack+0xf7b96c5c>
    69a8:	64 15 00 05 	.word 0x64150005
    69ac:	02 00 40 ad 	l.j f8016c60 <__stack+0xf7b96c64>
    69b0:	78 17 00 05 	l.cust3 
    69b4:	02 00 40 ad 	l.j f8016c68 <__stack+0xf7b96c6c>
    69b8:	7c 11 00 05 	l.cust4 
    69bc:	02 00 40 ad 	l.j f8016c70 <__stack+0xf7b96c74>
    69c0:	80 92 00 05 	l.ld r4,0x5(r18)
    69c4:	02 00 40 ad 	l.j f8016c78 <__stack+0xf7b96c7c>
    69c8:	84 03 82 7f 	l.lwz r0,0xffff827f(r3)
    69cc:	01 00 05 02 	l.j 4007dd4 <__stack+0x3b87dd8>
    69d0:	00 40 ad 88 	l.j 1031ff0 <__stack+0xbb1ff4>
    69d4:	92 00 05 02 	l.lbs r16,0x502(r0)
    69d8:	00 40 ad 8c 	l.j 1032008 <__stack+0xbb200c>
    69dc:	03 82 7f 01 	l.j fe0a65e0 <__stack+0xfdc265e4>
    69e0:	00 05 02 00 	l.j 1471e0 <__ram_length+0xc71e0>
    69e4:	40 ad 90 92 	.word 0x40ad9092
    69e8:	00 05 02 00 	l.j 1471e8 <__ram_length+0xc71e8>
    69ec:	40 ad 94 03 	.word 0x40ad9403
    69f0:	82 7f 01 00 	l.ld r19,0x100(r31)
    69f4:	05 02 00 40 	l.jal 4086af4 <__stack+0x3c06af8>
    69f8:	ad 98 15 00 	l.xori r12,r24,0x1500
    69fc:	05 02 00 40 	l.jal 4086afc <__stack+0x3c06b00>
    6a00:	ad 9c 15 00 	l.xori r12,r28,0x1500
    6a04:	05 02 00 40 	l.jal 4086b04 <__stack+0x3c06b08>
    6a08:	ad a0 12 00 	l.xori r13,r0,0x1200
    6a0c:	05 02 00 40 	l.jal 4086b0c <__stack+0x3c06b10>
    6a10:	ad a4 18 00 	l.xori r13,r4,0x1800
    6a14:	05 02 00 40 	l.jal 4086b14 <__stack+0x3c06b18>
    6a18:	ad a8 8e 00 	l.xori r13,r8,0xffff8e00
    6a1c:	05 02 00 40 	l.jal 4086b1c <__stack+0x3c06b20>
    6a20:	ad ac 03 83 	l.xori r13,r12,0x383
    6a24:	7f 01 00 05 	l.cust4 
    6a28:	02 00 40 ad 	l.j f8016cdc <__stack+0xf7b96ce0>
    6a2c:	b0 91 00 05 	l.muli r4,r17,0x5
    6a30:	02 00 40 ad 	l.j f8016ce4 <__stack+0xf7b96ce8>
    6a34:	b8 03 84 7f 	l.srli r0,r3,0x3f
    6a38:	01 00 05 02 	l.j 4007e40 <__stack+0x3b87e44>
    6a3c:	00 40 ad bc 	l.j 103212c <__stack+0xbb2130>
    6a40:	90 00 05 02 	l.lbs r0,0x502(r0)
    6a44:	00 40 ad c4 	l.j 1032154 <__stack+0xbb2158>
    6a48:	15 00 05 02 	l.nop 0x502
    6a4c:	00 40 ad d0 	l.j 103218c <__stack+0xbb2190>
    6a50:	15 00 05 02 	l.nop 0x502
    6a54:	00 40 ad d8 	l.j 10321b4 <__stack+0xbb21b8>
    6a58:	15 00 05 02 	l.nop 0x502
    6a5c:	00 40 ad dc 	l.j 10321cc <__stack+0xbb21d0>
    6a60:	13 00 05 02 	l.bf fc007e68 <__stack+0xfbb87e6c>
    6a64:	00 40 ad e0 	l.j 10321e4 <__stack+0xbb21e8>
    6a68:	15 00 05 02 	l.nop 0x502
    6a6c:	00 40 ad e4 	l.j 10321fc <__stack+0xbb2200>
    6a70:	15 00 05 02 	l.nop 0x502
    6a74:	00 40 ad e8 	l.j 1032214 <__stack+0xbb2218>
    6a78:	13 00 05 02 	l.bf fc007e80 <__stack+0xfbb87e84>
    6a7c:	00 40 ad f0 	l.j 103223c <__stack+0xbb2240>
    6a80:	15 00 05 02 	l.nop 0x502
    6a84:	00 40 ad f8 	l.j 1032264 <__stack+0xbb2268>
    6a88:	15 00 05 02 	l.nop 0x502
    6a8c:	00 40 ae 00 	l.j 103228c <__stack+0xbb2290>
    6a90:	15 00 05 02 	l.nop 0x502
    6a94:	00 40 ae 08 	l.j 10322b4 <__stack+0xbb22b8>
    6a98:	15 00 05 02 	l.nop 0x502
    6a9c:	00 40 ae 10 	l.j 10322dc <__stack+0xbb22e0>
    6aa0:	15 00 05 02 	l.nop 0x502
    6aa4:	00 40 ae 1c 	l.j 1032314 <__stack+0xbb2318>
    6aa8:	17 00 05 02 	.word 0x17000502
    6aac:	00 40 ae 2c 	l.j 103235c <__stack+0xbb2360>
    6ab0:	15 00 05 02 	l.nop 0x502
    6ab4:	00 40 ae 3c 	l.j 10323a4 <__stack+0xbb23a8>
    6ab8:	11 00 05 02 	l.bf 4007ec0 <__stack+0x3b87ec4>
    6abc:	00 40 ae 40 	l.j 10323bc <__stack+0xbb23c0>
    6ac0:	17 00 05 02 	.word 0x17000502
    6ac4:	00 40 ae 44 	l.j 10323d4 <__stack+0xbb23d8>
    6ac8:	11 00 05 02 	l.bf 4007ed0 <__stack+0x3b87ed4>
    6acc:	00 40 ae 4c 	l.j 10323fc <__stack+0xbb2400>
    6ad0:	19 00 05 02 	l.movhi r8,0x502
    6ad4:	00 40 ae 5c 	l.j 1032444 <__stack+0xbb2448>
    6ad8:	15 00 05 02 	l.nop 0x502
    6adc:	00 40 ae 64 	l.j 103246c <__stack+0xbb2470>
    6ae0:	16 00 05 02 	.word 0x16000502
    6ae4:	00 40 ae 70 	l.j 10324a4 <__stack+0xbb24a8>
    6ae8:	16 00 05 02 	.word 0x16000502
    6aec:	00 40 ae 74 	l.j 10324bc <__stack+0xbb24c0>
    6af0:	15 00 05 02 	l.nop 0x502
    6af4:	00 40 ae 78 	l.j 10324d4 <__stack+0xbb24d8>
    6af8:	13 00 05 02 	l.bf fc007f00 <__stack+0xfbb87f04>
    6afc:	00 40 ae 84 	l.j 103250c <__stack+0xbb2510>
    6b00:	15 00 05 02 	l.nop 0x502
    6b04:	00 40 ae 90 	l.j 1032544 <__stack+0xbb2548>
    6b08:	16 00 05 02 	.word 0x16000502
    6b0c:	00 40 ae a8 	l.j 10325ac <__stack+0xbb25b0>
    6b10:	13 00 05 02 	l.bf fc007f18 <__stack+0xfbb87f1c>
    6b14:	00 40 ae b4 	l.j 10325e4 <__stack+0xbb25e8>
    6b18:	16 00 05 02 	.word 0x16000502
    6b1c:	00 40 ae c4 	l.j 103262c <__stack+0xbb2630>
    6b20:	15 00 05 02 	l.nop 0x502
    6b24:	00 40 ae ec 	l.j 10326d4 <__stack+0xbb26d8>
    6b28:	17 00 05 02 	.word 0x17000502
    6b2c:	00 40 ae f4 	l.j 10326fc <__stack+0xbb2700>
    6b30:	19 00 05 02 	l.movhi r8,0x502
    6b34:	00 40 ae f8 	l.j 1032714 <__stack+0xbb2718>
    6b38:	16 00 05 02 	.word 0x16000502
    6b3c:	00 40 ae fc 	l.j 103272c <__stack+0xbb2730>
    6b40:	11 00 05 02 	l.bf 4007f48 <__stack+0x3b87f4c>
    6b44:	00 40 af 00 	l.j 1032744 <__stack+0xbb2748>
    6b48:	15 00 05 02 	l.nop 0x502
    6b4c:	00 40 af 08 	l.j 103276c <__stack+0xbb2770>
    6b50:	13 00 05 02 	l.bf fc007f58 <__stack+0xfbb87f5c>
    6b54:	00 40 af 0c 	l.j 1032784 <__stack+0xbb2788>
    6b58:	15 00 05 02 	l.nop 0x502
    6b5c:	00 40 af 10 	l.j 103279c <__stack+0xbb27a0>
    6b60:	15 00 05 02 	l.nop 0x502
    6b64:	00 40 af 14 	l.j 10327b4 <__stack+0xbb27b8>
    6b68:	16 00 05 02 	.word 0x16000502
    6b6c:	00 40 af 20 	l.j 10327ec <__stack+0xbb27f0>
    6b70:	15 00 05 02 	l.nop 0x502
    6b74:	00 40 af 24 	l.j 1032804 <__stack+0xbb2808>
    6b78:	16 00 05 02 	.word 0x16000502
    6b7c:	00 40 af 60 	l.j 10328fc <__stack+0xbb2900>
    6b80:	03 ea 7e 01 	l.j ffaa6384 <__stack+0xff626388>
    6b84:	00 05 02 00 	l.j 147384 <__ram_length+0xc7384>
    6b88:	40 af 94 af 	.word 0x40af94af
    6b8c:	00 05 02 00 	l.j 14738c <__ram_length+0xc738c>
    6b90:	40 af d8 15 	.word 0x40afd815
    6b94:	00 05 02 00 	l.j 147394 <__ram_length+0xc7394>
    6b98:	40 b0 2c 15 	.word 0x40b02c15
    6b9c:	00 05 02 00 	l.j 14739c <__ram_length+0xc739c>
    6ba0:	40 b0 54 15 	.word 0x40b05415
    6ba4:	00 05 02 00 	l.j 1473a4 <__ram_length+0xc73a4>
    6ba8:	40 b0 6c 03 	.word 0x40b06c03
    6bac:	b0 7d 01 00 	l.muli r3,r29,0x100
    6bb0:	05 02 00 40 	l.jal 4086cb0 <__stack+0x3c06cb4>
    6bb4:	b0 70 03 ed 	l.muli r3,r16,0x3ed
    6bb8:	02 01 00 05 	l.j f8046bcc <__stack+0xf7bc6bd0>
    6bbc:	02 00 40 b0 	l.j f8016e7c <__stack+0xf7b96e80>
    6bc0:	74 03 6c 01 	l.cust2 
    6bc4:	00 05 02 00 	l.j 1473c4 <__ram_length+0xc73c4>
    6bc8:	40 b0 78 03 	.word 0x40b07803
    6bcc:	a7 7d 01 00 	l.andi r27,r29,0x100
    6bd0:	05 02 00 40 	l.jal 4086cd0 <__stack+0x3c06cd4>
    6bd4:	b0 7c 03 ee 	l.muli r3,r28,0x3ee
    6bd8:	02 01 00 05 	l.j f8046bec <__stack+0xf7bc6bf0>
    6bdc:	02 00 40 b0 	l.j f8016e9c <__stack+0xf7b96ea0>
    6be0:	80 03 67 01 	l.ld r0,0x6701(r3)
    6be4:	00 05 02 00 	l.j 1473e4 <__ram_length+0xc73e4>
    6be8:	40 b0 8c 16 	.word 0x40b08c16
    6bec:	00 05 02 00 	l.j 1473ec <__ram_length+0xc73ec>
    6bf0:	40 b0 b0 17 	.word 0x40b0b017
    6bf4:	00 05 02 00 	l.j 1473f4 <__ram_length+0xc73f4>
    6bf8:	40 b0 b4 15 	.word 0x40b0b415
    6bfc:	00 05 02 00 	l.j 1473fc <__ram_length+0xc73fc>
    6c00:	40 b0 b8 13 	.word 0x40b0b813
    6c04:	00 05 02 00 	l.j 147404 <__ram_length+0xc7404>
    6c08:	40 b0 bc 15 	.word 0x40b0bc15
    6c0c:	00 05 02 00 	l.j 14740c <__ram_length+0xc740c>
    6c10:	40 b0 c8 17 	.word 0x40b0c817
    6c14:	00 05 02 00 	l.j 147414 <__ram_length+0xc7414>
    6c18:	40 b0 cc 13 	.word 0x40b0cc13
    6c1c:	00 05 02 00 	l.j 14741c <__ram_length+0xc741c>
    6c20:	40 b0 d0 15 	.word 0x40b0d015
    6c24:	00 05 02 00 	l.j 147424 <__ram_length+0xc7424>
    6c28:	40 b0 d8 18 	.word 0x40b0d818
    6c2c:	00 05 02 00 	l.j 14742c <__ram_length+0xc742c>
    6c30:	40 b0 dc 17 	.word 0x40b0dc17
    6c34:	00 05 02 00 	l.j 147434 <__ram_length+0xc7434>
    6c38:	40 b1 08 16 	.word 0x40b10816
    6c3c:	00 05 02 00 	l.j 14743c <__ram_length+0xc743c>
    6c40:	40 b1 3c 03 	.word 0x40b13c03
    6c44:	99 7d 01 00 	l.lhs r11,0x100(r29)
    6c48:	05 02 00 40 	l.jal 4086d48 <__stack+0x3c06d4c>
    6c4c:	b1 54 03 f0 	l.muli r10,r20,0x3f0
    6c50:	01 01 00 05 	l.j 4046c64 <__stack+0x3bc6c68>
    6c54:	02 00 40 b1 	l.j f8016f18 <__stack+0xf7b96f1c>
    6c58:	58 03 93 7e 	.word 0x5803937e
    6c5c:	01 00 05 02 	l.j 4008064 <__stack+0x3b88068>
    6c60:	00 40 b1 5c 	l.j 10331d0 <__stack+0xbb31d4>
    6c64:	13 00 05 02 	l.bf fc00806c <__stack+0xfbb88070>
    6c68:	00 40 b1 60 	l.j 10331e8 <__stack+0xbb31ec>
    6c6c:	15 00 05 02 	l.nop 0x502
    6c70:	00 40 b1 64 	l.j 1033200 <__stack+0xbb3204>
    6c74:	13 00 05 02 	l.bf fc00807c <__stack+0xfbb88080>
    6c78:	00 40 b1 68 	l.j 1033218 <__stack+0xbb321c>
    6c7c:	15 00 05 02 	l.nop 0x502
    6c80:	00 40 b1 6c 	l.j 1033230 <__stack+0xbb3234>
    6c84:	13 00 05 02 	l.bf fc00808c <__stack+0xfbb88090>
    6c88:	00 40 b1 78 	l.j 1033268 <__stack+0xbb326c>
    6c8c:	18 00 05 02 	l.movhi r0,0x502
    6c90:	00 40 b1 88 	l.j 10332b0 <__stack+0xbb32b4>
    6c94:	42 00 05 02 	.word 0x42000502
    6c98:	00 40 b1 90 	l.j 10332d8 <__stack+0xbb32dc>
    6c9c:	03 57 01 00 	l.j fd5c709c <__stack+0xfd1470a0>
    6ca0:	05 02 00 40 	l.jal 4086da0 <__stack+0x3c06da4>
    6ca4:	b1 9c 17 00 	l.muli r12,r28,0x1700
    6ca8:	05 02 00 40 	l.jal 4086da8 <__stack+0x3c06dac>
    6cac:	b1 a0 12 00 	l.muli r13,r0,0x1200
    6cb0:	05 02 00 40 	l.jal 4086db0 <__stack+0x3c06db4>
    6cb4:	b1 a4 16 00 	l.muli r13,r4,0x1600
    6cb8:	05 02 00 40 	l.jal 4086db8 <__stack+0x3c06dbc>
    6cbc:	b1 a8 15 00 	l.muli r13,r8,0x1500
    6cc0:	05 02 00 40 	l.jal 4086dc0 <__stack+0x3c06dc4>
    6cc4:	b1 ac 17 00 	l.muli r13,r12,0x1700
    6cc8:	05 02 00 40 	l.jal 4086dc8 <__stack+0x3c06dcc>
    6ccc:	b1 b0 11 00 	l.muli r13,r16,0x1100
    6cd0:	05 02 00 40 	l.jal 4086dd0 <__stack+0x3c06dd4>
    6cd4:	b1 b4 15 00 	l.muli r13,r20,0x1500
    6cd8:	05 02 00 40 	l.jal 4086dd8 <__stack+0x3c06ddc>
    6cdc:	b1 b8 10 00 	l.muli r13,r24,0x1000
    6ce0:	05 02 00 40 	l.jal 4086de0 <__stack+0x3c06de4>
    6ce4:	b1 bc 18 00 	l.muli r13,r28,0x1800
    6ce8:	05 02 00 40 	l.jal 4086de8 <__stack+0x3c06dec>
    6cec:	b1 c0 15 00 	l.muli r14,r0,0x1500
    6cf0:	05 02 00 40 	l.jal 4086df0 <__stack+0x3c06df4>
    6cf4:	b1 c4 0f 00 	l.muli r14,r4,0xf00
    6cf8:	05 02 00 40 	l.jal 4086df8 <__stack+0x3c06dfc>
    6cfc:	b1 c8 19 00 	l.muli r14,r8,0x1900
    6d00:	05 02 00 40 	l.jal 4086e00 <__stack+0x3c06e04>
    6d04:	b1 cc 15 00 	l.muli r14,r12,0x1500
    6d08:	05 02 00 40 	l.jal 4086e08 <__stack+0x3c06e0c>
    6d0c:	b1 d0 16 00 	l.muli r14,r16,0x1600
    6d10:	05 02 00 40 	l.jal 4086e10 <__stack+0x3c06e14>
    6d14:	b1 d4 15 00 	l.muli r14,r20,0x1500
    6d18:	05 02 00 40 	l.jal 4086e18 <__stack+0x3c06e1c>
    6d1c:	b1 d8 15 00 	l.muli r14,r24,0x1500
    6d20:	05 02 00 40 	l.jal 4086e20 <__stack+0x3c06e24>
    6d24:	b1 dc 15 00 	l.muli r14,r28,0x1500
    6d28:	05 02 00 40 	l.jal 4086e28 <__stack+0x3c06e2c>
    6d2c:	b1 e0 15 00 	l.muli r15,r0,0x1500
    6d30:	05 02 00 40 	l.jal 4086e30 <__stack+0x3c06e34>
    6d34:	b1 e4 15 00 	l.muli r15,r4,0x1500
    6d38:	05 02 00 40 	l.jal 4086e38 <__stack+0x3c06e3c>
    6d3c:	b1 e8 15 00 	l.muli r15,r8,0x1500
    6d40:	05 02 00 40 	l.jal 4086e40 <__stack+0x3c06e44>
    6d44:	b1 ec 15 00 	l.muli r15,r12,0x1500
    6d48:	05 02 00 40 	l.jal 4086e48 <__stack+0x3c06e4c>
    6d4c:	b1 f0 15 00 	l.muli r15,r16,0x1500
    6d50:	05 02 00 40 	l.jal 4086e50 <__stack+0x3c06e54>
    6d54:	b1 f4 0b 00 	l.muli r15,r20,0xb00
    6d58:	05 02 00 40 	l.jal 4086e58 <__stack+0x3c06e5c>
    6d5c:	b1 f8 1d 00 	l.muli r15,r24,0x1d00
    6d60:	05 02 00 40 	l.jal 4086e60 <__stack+0x3c06e64>
    6d64:	b2 04 1b 00 	l.muli r16,r4,0x1b00
    6d68:	05 02 00 40 	l.jal 4086e68 <__stack+0x3c06e6c>
    6d6c:	b2 08 0d 00 	l.muli r16,r8,0xd00
    6d70:	05 02 00 40 	l.jal 4086e70 <__stack+0x3c06e74>
    6d74:	b2 0c 1b 00 	l.muli r16,r12,0x1b00
    6d78:	05 02 00 40 	l.jal 4086e78 <__stack+0x3c06e7c>
    6d7c:	b2 10 0d 00 	l.muli r16,r16,0xd00
    6d80:	05 02 00 40 	l.jal 4086e80 <__stack+0x3c06e84>
    6d84:	b2 14 17 00 	l.muli r16,r20,0x1700
    6d88:	05 02 00 40 	l.jal 4086e88 <__stack+0x3c06e8c>
    6d8c:	b2 18 11 00 	l.muli r16,r24,0x1100
    6d90:	05 02 00 40 	l.jal 4086e90 <__stack+0x3c06e94>
    6d94:	b2 1c 15 00 	l.muli r16,r28,0x1500
    6d98:	05 02 00 40 	l.jal 4086e98 <__stack+0x3c06e9c>
    6d9c:	b2 20 13 00 	l.muli r17,r0,0x1300
    6da0:	05 02 00 40 	l.jal 4086ea0 <__stack+0x3c06ea4>
    6da4:	b2 24 16 00 	l.muli r17,r4,0x1600
    6da8:	05 02 00 40 	l.jal 4086ea8 <__stack+0x3c06eac>
    6dac:	b2 28 12 00 	l.muli r17,r8,0x1200
    6db0:	05 02 00 40 	l.jal 4086eb0 <__stack+0x3c06eb4>
    6db4:	b2 2c 18 00 	l.muli r17,r12,0x1800
    6db8:	05 02 00 40 	l.jal 4086eb8 <__stack+0x3c06ebc>
    6dbc:	b2 30 15 00 	l.muli r17,r16,0x1500
    6dc0:	05 02 00 40 	l.jal 4086ec0 <__stack+0x3c06ec4>
    6dc4:	b2 34 15 00 	l.muli r17,r20,0x1500
    6dc8:	05 02 00 40 	l.jal 4086ec8 <__stack+0x3c06ecc>
    6dcc:	b2 38 19 00 	l.muli r17,r24,0x1900
    6dd0:	05 02 00 40 	l.jal 4086ed0 <__stack+0x3c06ed4>
    6dd4:	b2 3c 0a 00 	l.muli r17,r28,0xa00
    6dd8:	05 02 00 40 	l.jal 4086ed8 <__stack+0x3c06edc>
    6ddc:	b2 40 15 00 	l.muli r18,r0,0x1500
    6de0:	05 02 00 40 	l.jal 4086ee0 <__stack+0x3c06ee4>
    6de4:	b2 44 1d 00 	l.muli r18,r4,0x1d00
    6de8:	05 02 00 40 	l.jal 4086ee8 <__stack+0x3c06eec>
    6dec:	b2 48 11 00 	l.muli r18,r8,0x1100
    6df0:	05 02 00 40 	l.jal 4086ef0 <__stack+0x3c06ef4>
    6df4:	b2 4c 15 00 	l.muli r18,r12,0x1500
    6df8:	05 02 00 40 	l.jal 4086ef8 <__stack+0x3c06efc>
    6dfc:	b2 50 17 00 	l.muli r18,r16,0x1700
    6e00:	05 02 00 40 	l.jal 4086f00 <__stack+0x3c06f04>
    6e04:	b2 58 17 00 	l.muli r18,r24,0x1700
    6e08:	05 02 00 40 	l.jal 4086f08 <__stack+0x3c06f0c>
    6e0c:	b2 60 11 00 	l.muli r19,r0,0x1100
    6e10:	05 02 00 40 	l.jal 4086f10 <__stack+0x3c06f14>
    6e14:	b2 64 15 00 	l.muli r19,r4,0x1500
    6e18:	05 02 00 40 	l.jal 4086f18 <__stack+0x3c06f1c>
    6e1c:	b2 68 15 00 	l.muli r19,r8,0x1500
    6e20:	05 02 00 40 	l.jal 4086f20 <__stack+0x3c06f24>
    6e24:	b2 6c 15 00 	l.muli r19,r12,0x1500
    6e28:	05 02 00 40 	l.jal 4086f28 <__stack+0x3c06f2c>
    6e2c:	b2 74 15 00 	l.muli r19,r20,0x1500
    6e30:	05 02 00 40 	l.jal 4086f30 <__stack+0x3c06f34>
    6e34:	b2 84 34 00 	l.muli r20,r4,0x3400
    6e38:	05 02 00 40 	l.jal 4086f38 <__stack+0x3c06f3c>
    6e3c:	b2 8c 03 68 	l.muli r20,r12,0x368
    6e40:	01 00 05 02 	l.j 4008248 <__stack+0x3b8824c>
    6e44:	00 40 b2 94 	l.j 1033894 <__stack+0xbb3898>
    6e48:	17 00 05 02 	.word 0x17000502
    6e4c:	00 40 b2 98 	l.j 10338ac <__stack+0xbb38b0>
    6e50:	12 00 05 02 	l.bf f8008258 <__stack+0xf7b8825c>
    6e54:	00 40 b2 9c 	l.j 10338c4 <__stack+0xbb38c8>
    6e58:	16 00 05 02 	.word 0x16000502
    6e5c:	00 40 b2 a0 	l.j 10338dc <__stack+0xbb38e0>
    6e60:	12 00 05 02 	l.bf f8008268 <__stack+0xf7b8826c>
    6e64:	00 40 b2 a4 	l.j 10338f4 <__stack+0xbb38f8>
    6e68:	17 00 05 02 	.word 0x17000502
    6e6c:	00 40 b2 a8 	l.j 103390c <__stack+0xbb3910>
    6e70:	17 00 05 02 	.word 0x17000502
    6e74:	00 40 b2 ac 	l.j 1033924 <__stack+0xbb3928>
    6e78:	0e 00 05 02 	l.bnf f8008280 <__stack+0xf7b88284>
    6e7c:	00 40 b2 b0 	l.j 103393c <__stack+0xbb3940>
    6e80:	17 00 05 02 	.word 0x17000502
    6e84:	00 40 b2 b4 	l.j 1033954 <__stack+0xbb3958>
    6e88:	18 00 05 02 	l.movhi r0,0x502
    6e8c:	00 40 b2 b8 	l.j 103396c <__stack+0xbb3970>
    6e90:	11 00 05 02 	l.bf 4008298 <__stack+0x3b8829c>
    6e94:	00 40 b2 bc 	l.j 1033984 <__stack+0xbb3988>
    6e98:	16 00 05 02 	.word 0x16000502
    6e9c:	00 40 b2 c0 	l.j 103399c <__stack+0xbb39a0>
    6ea0:	12 00 05 02 	l.bf f80082a8 <__stack+0xf7b882ac>
    6ea4:	00 40 b2 c4 	l.j 10339b4 <__stack+0xbb39b8>
    6ea8:	17 00 05 02 	.word 0x17000502
    6eac:	00 40 b2 d4 	l.j 10339fc <__stack+0xbb3a00>
    6eb0:	17 00 05 02 	.word 0x17000502
    6eb4:	00 40 b2 d8 	l.j 1033a14 <__stack+0xbb3a18>
    6eb8:	12 00 05 02 	l.bf f80082c0 <__stack+0xf7b882c4>
    6ebc:	00 40 b2 dc 	l.j 1033a2c <__stack+0xbb3a30>
    6ec0:	16 00 05 02 	.word 0x16000502
    6ec4:	00 40 b2 e0 	l.j 1033a44 <__stack+0xbb3a48>
    6ec8:	15 00 05 02 	l.nop 0x502
    6ecc:	00 40 b2 e4 	l.j 1033a5c <__stack+0xbb3a60>
    6ed0:	15 00 05 02 	l.nop 0x502
    6ed4:	00 40 b2 e8 	l.j 1033a74 <__stack+0xbb3a78>
    6ed8:	13 00 05 02 	l.bf fc0082e0 <__stack+0xfbb882e4>
    6edc:	00 40 b2 ec 	l.j 1033a8c <__stack+0xbb3a90>
    6ee0:	11 00 05 02 	l.bf 40082e8 <__stack+0x3b882ec>
    6ee4:	00 40 b2 f0 	l.j 1033aa4 <__stack+0xbb3aa8>
    6ee8:	18 00 05 02 	l.movhi r0,0x502
    6eec:	00 40 b2 fc 	l.j 1033adc <__stack+0xbb3ae0>
    6ef0:	1c 00 05 02 	.word 0x1c000502
    6ef4:	00 40 b3 00 	l.j 1033af4 <__stack+0xbb3af8>
    6ef8:	0c 00 05 02 	l.bnf 8300 <__rom_size-0x1204c>
    6efc:	00 40 b3 04 	l.j 1033b0c <__stack+0xbb3b10>
    6f00:	1c 00 05 02 	.word 0x1c000502
    6f04:	00 40 b3 08 	l.j 1033b24 <__stack+0xbb3b28>
    6f08:	0c 00 05 02 	l.bnf 8310 <__rom_size-0x1203c>
    6f0c:	00 40 b3 0c 	l.j 1033b3c <__stack+0xbb3b40>
    6f10:	15 00 05 02 	l.nop 0x502
    6f14:	00 40 b3 10 	l.j 1033b54 <__stack+0xbb3b58>
    6f18:	13 00 05 02 	l.bf fc008320 <__stack+0xfbb88324>
    6f1c:	00 40 b3 14 	l.j 1033b6c <__stack+0xbb3b70>
    6f20:	18 00 05 02 	l.movhi r0,0x502
    6f24:	00 40 b3 18 	l.j 1033b84 <__stack+0xbb3b88>
    6f28:	10 00 05 02 	l.bf 8330 <__rom_size-0x1201c>
    6f2c:	00 40 b3 20 	l.j 1033bac <__stack+0xbb3bb0>
    6f30:	16 00 05 02 	.word 0x16000502
    6f34:	00 40 b3 24 	l.j 1033bc4 <__stack+0xbb3bc8>
    6f38:	17 00 05 02 	.word 0x17000502
    6f3c:	00 40 b3 28 	l.j 1033bdc <__stack+0xbb3be0>
    6f40:	11 00 05 02 	l.bf 4008348 <__stack+0x3b8834c>
    6f44:	00 40 b3 2c 	l.j 1033bf4 <__stack+0xbb3bf8>
    6f48:	15 00 05 02 	l.nop 0x502
    6f4c:	00 40 b3 30 	l.j 1033c0c <__stack+0xbb3c10>
    6f50:	16 00 05 02 	.word 0x16000502
    6f54:	00 40 b3 34 	l.j 1033c24 <__stack+0xbb3c28>
    6f58:	12 00 05 02 	l.bf f8008360 <__stack+0xf7b88364>
    6f5c:	00 40 b3 38 	l.j 1033c3c <__stack+0xbb3c40>
    6f60:	1a 00 05 02 	l.movhi r16,0x502
    6f64:	00 40 b3 3c 	l.j 1033c54 <__stack+0xbb3c58>
    6f68:	12 00 05 02 	l.bf f8008370 <__stack+0xf7b88374>
    6f6c:	00 40 b3 40 	l.j 1033c6c <__stack+0xbb3c70>
    6f70:	12 00 05 02 	l.bf f8008378 <__stack+0xf7b8837c>
    6f74:	00 40 b3 44 	l.j 1033c84 <__stack+0xbb3c88>
    6f78:	16 00 05 02 	.word 0x16000502
    6f7c:	00 40 b3 48 	l.j 1033c9c <__stack+0xbb3ca0>
    6f80:	13 00 05 02 	l.bf fc008388 <__stack+0xfbb8838c>
    6f84:	00 40 b3 4c 	l.j 1033cb4 <__stack+0xbb3cb8>
    6f88:	17 00 05 02 	.word 0x17000502
    6f8c:	00 40 b3 50 	l.j 1033ccc <__stack+0xbb3cd0>
    6f90:	11 00 05 02 	l.bf 4008398 <__stack+0x3b8839c>
    6f94:	00 40 b3 54 	l.j 1033ce4 <__stack+0xbb3ce8>
    6f98:	15 00 05 02 	l.nop 0x502
    6f9c:	00 40 b3 58 	l.j 1033cfc <__stack+0xbb3d00>
    6fa0:	15 00 05 02 	l.nop 0x502
    6fa4:	00 40 b3 5c 	l.j 1033d14 <__stack+0xbb3d18>
    6fa8:	15 00 05 02 	l.nop 0x502
    6fac:	00 40 b3 60 	l.j 1033d2c <__stack+0xbb3d30>
    6fb0:	16 00 05 02 	.word 0x16000502
    6fb4:	00 40 b3 6c 	l.j 1033d64 <__stack+0xbb3d68>
    6fb8:	03 9f 02 01 	l.j fe7c77bc <__stack+0xfe3477c0>
    6fbc:	00 05 02 00 	l.j 1477bc <__ram_length+0xc77bc>
    6fc0:	40 b3 94 15 	.word 0x40b39415
    6fc4:	00 05 02 00 	l.j 1477c4 <__ram_length+0xc77c4>
    6fc8:	40 b3 9c 15 	.word 0x40b39c15
    6fcc:	00 05 02 00 	l.j 1477cc <__ram_length+0xc77cc>
    6fd0:	40 b3 a8 15 	.word 0x40b3a815
    6fd4:	00 05 02 00 	l.j 1477d4 <__ram_length+0xc77d4>
    6fd8:	40 b3 ac 13 	.word 0x40b3ac13
    6fdc:	00 05 02 00 	l.j 1477dc <__ram_length+0xc77dc>
    6fe0:	40 b3 b0 15 	.word 0x40b3b015
    6fe4:	00 05 02 00 	l.j 1477e4 <__ram_length+0xc77e4>
    6fe8:	40 b3 b4 16 	.word 0x40b3b416
    6fec:	00 05 02 00 	l.j 1477ec <__ram_length+0xc77ec>
    6ff0:	40 b3 b8 12 	.word 0x40b3b812
    6ff4:	00 05 02 00 	l.j 1477f4 <__ram_length+0xc77f4>
    6ff8:	40 b3 bc 15 	.word 0x40b3bc15
    6ffc:	00 05 02 00 	l.j 1477fc <__ram_length+0xc77fc>
    7000:	40 b3 c8 15 	.word 0x40b3c815
    7004:	00 05 02 00 	l.j 147804 <__ram_length+0xc7804>
    7008:	40 b3 d0 15 	.word 0x40b3d015
    700c:	00 05 02 00 	l.j 14780c <__ram_length+0xc780c>
    7010:	40 b3 d8 15 	.word 0x40b3d815
    7014:	00 05 02 00 	l.j 147814 <__ram_length+0xc7814>
    7018:	40 b3 e0 15 	.word 0x40b3e015
    701c:	00 05 02 00 	l.j 14781c <__ram_length+0xc781c>
    7020:	40 b3 e8 17 	.word 0x40b3e817
    7024:	00 05 02 00 	l.j 147824 <__ram_length+0xc7824>
    7028:	40 b3 ec 12 	.word 0x40b3ec12
    702c:	00 05 02 00 	l.j 14782c <__ram_length+0xc782c>
    7030:	40 b3 f0 16 	.word 0x40b3f016
    7034:	00 05 02 00 	l.j 147834 <__ram_length+0xc7834>
    7038:	40 b3 fc 12 	.word 0x40b3fc12
    703c:	00 05 02 00 	l.j 14783c <__ram_length+0xc783c>
    7040:	40 b4 00 16 	.word 0x40b40016
    7044:	00 05 02 00 	l.j 147844 <__ram_length+0xc7844>
    7048:	40 b4 04 12 	.word 0x40b40412
    704c:	00 05 02 00 	l.j 14784c <__ram_length+0xc784c>
    7050:	40 b4 10 18 	.word 0x40b41018
    7054:	00 05 02 00 	l.j 147854 <__ram_length+0xc7854>
    7058:	40 b4 18 15 	.word 0x40b41815
    705c:	00 05 02 00 	l.j 14785c <__ram_length+0xc785c>
    7060:	40 b4 1c 13 	.word 0x40b41c13
    7064:	00 05 02 00 	l.j 147864 <__ram_length+0xc7864>
    7068:	40 b4 24 15 	.word 0x40b42415
    706c:	00 05 02 00 	l.j 14786c <__ram_length+0xc786c>
    7070:	40 b4 38 27 	.word 0x40b43827
    7074:	00 05 02 00 	l.j 147874 <__ram_length+0xc7874>
    7078:	40 b4 40 03 	.word 0x40b44003
    707c:	71 01 00 05 	l.cust1 
    7080:	02 00 40 b4 	l.j f8017350 <__stack+0xf7b97354>
    7084:	48 15 00 05 	l.jalr r0
    7088:	02 00 40 b4 	l.j f8017358 <__stack+0xf7b9735c>
    708c:	70 16 00 05 	l.cust1 
    7090:	02 00 40 b4 	l.j f8017360 <__stack+0xf7b97364>
    7094:	88 16 00 05 	l.lws r0,0x5(r22)
    7098:	02 00 40 b4 	l.j f8017368 <__stack+0xf7b9736c>
    709c:	90 16 00 05 	l.lbs r0,0x5(r22)
    70a0:	02 00 40 b4 	l.j f8017370 <__stack+0xf7b97374>
    70a4:	b8 17 00 05 	l.slli r0,r23,0x5
    70a8:	02 00 40 b4 	l.j f8017378 <__stack+0xf7b9737c>
    70ac:	c8 15 00 05 	lf.ftoi.s r0,r21
    70b0:	02 00 40 b4 	l.j f8017380 <__stack+0xf7b97384>
    70b4:	d8 18 00 05 	l.sb 0x5(r24),r0
    70b8:	02 00 40 b4 	l.j f8017388 <__stack+0xf7b9738c>
    70bc:	e0 03 46 01 	.word 0xe0034601
    70c0:	00 05 02 00 	l.j 1478c0 <__ram_length+0xc78c0>
    70c4:	40 b4 ec 17 	.word 0x40b4ec17
    70c8:	00 05 02 00 	l.j 1478c8 <__ram_length+0xc78c8>
    70cc:	40 b4 f4 54 	.word 0x40b4f454
    70d0:	00 05 02 00 	l.j 1478d0 <__ram_length+0xc78d0>
    70d4:	40 b5 00 03 	.word 0x40b50003
    70d8:	9d 7e 01 00 	l.addi r11,r30,0x100
    70dc:	05 02 00 40 	l.jal 40871dc <__stack+0x3c071e0>
    70e0:	b5 1c f9 00 	l.mfspr r8,r28,0xf900
    70e4:	05 02 00 40 	l.jal 40871e4 <__stack+0x3c071e8>
    70e8:	b5 20 03 9b 	l.mfspr r9,r0,0x39b
    70ec:	7e 01 00 05 	l.cust4 
    70f0:	02 00 40 b5 	l.j f80173c4 <__stack+0xf7b973c8>
    70f4:	24 f9 00 05 	l.rfe 
    70f8:	02 00 40 b5 	l.j f80173cc <__stack+0xf7b973d0>
    70fc:	28 13 00 05 	.word 0x28130005
    7100:	02 00 40 b5 	l.j f80173d4 <__stack+0xf7b973d8>
    7104:	2c 15 00 05 	.word 0x2c150005
    7108:	02 00 40 b5 	l.j f80173dc <__stack+0xf7b973e0>
    710c:	60 28 00 05 	.word 0x60280005
    7110:	02 00 40 b5 	l.j f80173e4 <__stack+0xf7b973e8>
    7114:	68 03 70 01 	.word 0x68037001
    7118:	00 05 02 00 	l.j 147918 <__ram_length+0xc7918>
    711c:	40 b5 74 16 	.word 0x40b57416
    7120:	00 05 02 00 	l.j 147920 <__ram_length+0xc7920>
    7124:	40 b5 98 17 	.word 0x40b59817
    7128:	00 05 02 00 	l.j 147928 <__ram_length+0xc7928>
    712c:	40 b5 9c 15 	.word 0x40b59c15
    7130:	00 05 02 00 	l.j 147930 <__ram_length+0xc7930>
    7134:	40 b5 a0 13 	.word 0x40b5a013
    7138:	00 05 02 00 	l.j 147938 <__ram_length+0xc7938>
    713c:	40 b5 a4 15 	.word 0x40b5a415
    7140:	00 05 02 00 	l.j 147940 <__ram_length+0xc7940>
    7144:	40 b5 b0 17 	.word 0x40b5b017
    7148:	00 05 02 00 	l.j 147948 <__ram_length+0xc7948>
    714c:	40 b5 b4 13 	.word 0x40b5b413
    7150:	00 05 02 00 	l.j 147950 <__ram_length+0xc7950>
    7154:	40 b5 b8 15 	.word 0x40b5b815
    7158:	00 05 02 00 	l.j 147958 <__ram_length+0xc7958>
    715c:	40 b5 c0 18 	.word 0x40b5c018
    7160:	00 05 02 00 	l.j 147960 <__ram_length+0xc7960>
    7164:	40 b5 c4 17 	.word 0x40b5c417
    7168:	00 05 02 00 	l.j 147968 <__ram_length+0xc7968>
    716c:	40 b5 e0 16 	.word 0x40b5e016
    7170:	00 05 02 00 	l.j 147970 <__ram_length+0xc7970>
    7174:	40 b5 f8 15 	.word 0x40b5f815
    7178:	00 05 02 00 	l.j 147978 <__ram_length+0xc7978>
    717c:	40 b6 00 15 	.word 0x40b60015
    7180:	00 05 02 00 	l.j 147980 <__ram_length+0xc7980>
    7184:	40 b6 10 03 	.word 0x40b61003
    7188:	69 01 00 05 	.word 0x69010005
    718c:	02 00 40 b6 	l.j f8017464 <__stack+0xf7b97468>
    7190:	1c 17 00 05 	.word 0x1c170005
    7194:	02 00 40 b6 	l.j f801746c <__stack+0xf7b97470>
    7198:	24 30 00 05 	l.rfe 
    719c:	02 00 40 b6 	l.j f8017474 <__stack+0xf7b97478>
    71a0:	2c 16 00 05 	.word 0x2c160005
    71a4:	02 00 40 b6 	l.j f801747c <__stack+0xf7b97480>
    71a8:	48 03 b7 7e 	l.jalr r22
    71ac:	01 00 05 02 	l.j 40085b4 <__stack+0x3b885b8>
    71b0:	00 40 b6 4c 	l.j 1034ae0 <__stack+0xbb4ae4>
    71b4:	dd 00 05 02 	l.sh 0x4502(r0),r0
    71b8:	00 40 b6 54 	l.j 1034b08 <__stack+0xbb4b0c>
    71bc:	16 00 05 02 	.word 0x16000502
    71c0:	00 40 b6 60 	l.j 1034b40 <__stack+0xbb4b44>
    71c4:	15 00 05 02 	l.nop 0x502
    71c8:	00 40 b6 6c 	l.j 1034b78 <__stack+0xbb4b7c>
    71cc:	16 00 05 02 	.word 0x16000502
    71d0:	00 40 b6 84 	l.j 1034be0 <__stack+0xbb4be4>
    71d4:	13 00 05 02 	l.bf fc0085dc <__stack+0xfbb885e0>
    71d8:	00 40 b6 90 	l.j 1034c18 <__stack+0xbb4c1c>
    71dc:	16 00 05 02 	.word 0x16000502
    71e0:	00 40 b6 a8 	l.j 1034c80 <__stack+0xbb4c84>
    71e4:	18 00 05 02 	l.movhi r0,0x502
    71e8:	00 40 b6 b0 	l.j 1034ca8 <__stack+0xbb4cac>
    71ec:	17 00 05 02 	.word 0x17000502
    71f0:	00 40 b6 bc 	l.j 1034ce0 <__stack+0xbb4ce4>
    71f4:	17 00 05 02 	.word 0x17000502
    71f8:	00 40 b6 c4 	l.j 1034d08 <__stack+0xbb4d0c>
    71fc:	16 00 05 02 	.word 0x16000502
    7200:	00 40 b6 c8 	l.j 1034d20 <__stack+0xbb4d24>
    7204:	11 00 05 02 	l.bf 400860c <__stack+0x3b88610>
    7208:	00 40 b6 cc 	l.j 1034d38 <__stack+0xbb4d3c>
    720c:	15 00 05 02 	l.nop 0x502
    7210:	00 40 b6 d0 	l.j 1034d50 <__stack+0xbb4d54>
    7214:	13 00 05 02 	l.bf fc00861c <__stack+0xfbb88620>
    7218:	00 40 b6 d4 	l.j 1034d68 <__stack+0xbb4d6c>
    721c:	18 00 05 02 	l.movhi r0,0x502
    7220:	00 40 b6 d8 	l.j 1034d80 <__stack+0xbb4d84>
    7224:	11 00 05 02 	l.bf 400862c <__stack+0x3b88630>
    7228:	00 40 b6 dc 	l.j 1034d98 <__stack+0xbb4d9c>
    722c:	17 00 05 02 	.word 0x17000502
    7230:	00 40 b6 e4 	l.j 1034dc0 <__stack+0xbb4dc4>
    7234:	15 00 05 02 	l.nop 0x502
    7238:	00 40 b6 e8 	l.j 1034dd8 <__stack+0xbb4ddc>
    723c:	16 00 05 02 	.word 0x16000502
    7240:	00 40 b7 24 	l.j 1034ed0 <__stack+0xbb4ed4>
    7244:	03 e3 7d 01 	l.j ff8e6648 <__stack+0xff46664c>
    7248:	00 05 02 00 	l.j 147a48 <__ram_length+0xc7a48>
    724c:	40 b7 58 03 	.word 0x40b75803
    7250:	a2 02 01 00 	l.addic r16,r2,0x100
    7254:	05 02 00 40 	l.jal 4087354 <__stack+0x3c07358>
    7258:	b7 94 15 00 	l.mfspr r28,r20,0x1500
    725c:	05 02 00 40 	l.jal 408735c <__stack+0x3c07360>
    7260:	b7 bc 15 00 	l.mfspr r29,r28,0x1500
    7264:	05 02 00 40 	l.jal 4087364 <__stack+0x3c07368>
    7268:	b7 d4 39 00 	l.mfspr r30,r20,0x3900
    726c:	05 02 00 40 	l.jal 408736c <__stack+0x3c07370>
    7270:	b7 dc 03 61 	l.mfspr r30,r28,0x361
    7274:	01 00 05 02 	l.j 400867c <__stack+0x3b88680>
    7278:	00 40 b7 f4 	l.j 1035248 <__stack+0xbb524c>
    727c:	17 00 05 02 	.word 0x17000502
    7280:	00 40 b8 0c 	l.j 10352b0 <__stack+0xbb52b4>
    7284:	11 00 05 02 	l.bf 400868c <__stack+0x3b88690>
    7288:	00 40 b8 20 	l.j 1035308 <__stack+0xbb530c>
    728c:	1a 00 05 02 	l.movhi r16,0x502
    7290:	00 40 b8 2c 	l.j 1035340 <__stack+0xbb5344>
    7294:	16 00 05 02 	.word 0x16000502
    7298:	00 40 b8 54 	l.j 10353e8 <__stack+0xbb53ec>
    729c:	16 00 05 02 	.word 0x16000502
    72a0:	00 40 b8 64 	l.j 1035430 <__stack+0xbb5434>
    72a4:	1c 00 05 02 	.word 0x1c000502
    72a8:	00 40 b8 70 	l.j 1035468 <__stack+0xbb546c>
    72ac:	10 00 05 02 	l.bf 86b4 <__rom_size-0x11c98>
    72b0:	00 40 b8 78 	l.j 1035490 <__stack+0xbb5494>
    72b4:	16 00 05 02 	.word 0x16000502
    72b8:	00 40 b8 9c 	l.j 1035528 <__stack+0xbb552c>
    72bc:	17 00 05 02 	.word 0x17000502
    72c0:	00 40 b8 a0 	l.j 1035540 <__stack+0xbb5544>
    72c4:	15 00 05 02 	l.nop 0x502
    72c8:	00 40 b8 a4 	l.j 1035558 <__stack+0xbb555c>
    72cc:	13 00 05 02 	l.bf fc0086d4 <__stack+0xfbb886d8>
    72d0:	00 40 b8 a8 	l.j 1035570 <__stack+0xbb5574>
    72d4:	15 00 05 02 	l.nop 0x502
    72d8:	00 40 b8 b4 	l.j 10355a8 <__stack+0xbb55ac>
    72dc:	17 00 05 02 	.word 0x17000502
    72e0:	00 40 b8 b8 	l.j 10355c0 <__stack+0xbb55c4>
    72e4:	13 00 05 02 	l.bf fc0086ec <__stack+0xfbb886f0>
    72e8:	00 40 b8 bc 	l.j 10355d8 <__stack+0xbb55dc>
    72ec:	15 00 05 02 	l.nop 0x502
    72f0:	00 40 b8 c4 	l.j 1035600 <__stack+0xbb5604>
    72f4:	18 00 05 02 	l.movhi r0,0x502
    72f8:	00 40 b8 c8 	l.j 1035618 <__stack+0xbb561c>
    72fc:	16 00 05 02 	.word 0x16000502
    7300:	00 40 b8 d8 	l.j 1035660 <__stack+0xbb5664>
    7304:	03 6f 01 00 	l.j fdbc7704 <__stack+0xfd747708>
    7308:	05 02 00 40 	l.jal 4087408 <__stack+0x3c0740c>
    730c:	b8 e8 27 00 	l.slli r7,r8,0x0
    7310:	05 02 00 40 	l.jal 4087410 <__stack+0x3c07414>
    7314:	b9 08 03 5f 	l.srli r8,r8,0x1f
    7318:	01 00 05 02 	l.j 4008720 <__stack+0x3b88724>
    731c:	00 40 b9 14 	l.j 103576c <__stack+0xbb5770>
    7320:	03 93 02 01 	l.j fe4c7b24 <__stack+0xfe047b28>
    7324:	00 05 02 00 	l.j 147b24 <__ram_length+0xc7b24>
    7328:	40 b9 1c 03 	.word 0x40b91c03
    732c:	c5 7b 01 00 	.word 0xc57b0100
    7330:	05 02 00 40 	l.jal 4087430 <__stack+0x3c07434>
    7334:	b9 3c 03 d5 	l.rori r9,r28,0x15
    7338:	02 01 00 05 	l.j f804734c <__stack+0xf7bc7350>
    733c:	02 00 40 b9 	l.j f8017620 <__stack+0xf7b97624>
    7340:	40 03 ab 7d 	.word 0x4003ab7d
    7344:	01 00 05 02 	l.j 400874c <__stack+0x3b88750>
    7348:	00 40 b9 44 	l.j 1035858 <__stack+0xbb585c>
    734c:	03 d5 02 01 	l.j ff547b50 <__stack+0xff0c7b54>
    7350:	00 05 02 00 	l.j 147b50 <__ram_length+0xc7b50>
    7354:	40 b9 48 13 	.word 0x40b94813
    7358:	00 05 02 00 	l.j 147b58 <__ram_length+0xc7b58>
    735c:	40 b9 4c 15 	.word 0x40b94c15
    7360:	00 05 02 00 	l.j 147b60 <__ram_length+0xc7b60>
    7364:	40 b9 80 35 	.word 0x40b98035
    7368:	00 05 02 00 	l.j 147b68 <__ram_length+0xc7b68>
    736c:	40 b9 8c 03 	.word 0x40b98c03
    7370:	62 01 00 05 	.word 0x62010005
    7374:	02 00 40 b9 	l.j f8017658 <__stack+0xf7b9765c>
    7378:	a4 17 00 05 	l.andi r0,r23,0x5
    737c:	02 00 40 b9 	l.j f8017660 <__stack+0xf7b97664>
    7380:	bc 11 00 05 	l.sfeqi r17,0x5
    7384:	02 00 40 b9 	l.j f8017668 <__stack+0xf7b9766c>
    7388:	d0 1a 00 05 	l.sd 0x5(r26),r0
    738c:	02 00 40 b9 	l.j f8017670 <__stack+0xf7b97674>
    7390:	dc 15 00 05 	l.sh 0x5(r21),r0
    7394:	02 00 40 b9 	l.j f8017678 <__stack+0xf7b9767c>
    7398:	f8 19 00 05 	l.cust7 
    739c:	02 00 40 ba 	l.j f8017684 <__stack+0xf7b97688>
    73a0:	00 16 00 05 	l.j 5873b4 <__stack+0x1073b8>
    73a4:	02 00 40 ba 	l.j f801768c <__stack+0xf7b97690>
    73a8:	24 17 00 05 	l.rfe 
    73ac:	02 00 40 ba 	l.j f8017694 <__stack+0xf7b97698>
    73b0:	28 15 00 05 	.word 0x28150005
    73b4:	02 00 40 ba 	l.j f801769c <__stack+0xf7b976a0>
    73b8:	2c 13 00 05 	.word 0x2c130005
    73bc:	02 00 40 ba 	l.j f80176a4 <__stack+0xf7b976a8>
    73c0:	30 15 00 05 	.word 0x30150005
    73c4:	02 00 40 ba 	l.j f80176ac <__stack+0xf7b976b0>
    73c8:	3c 17 00 05 	.word 0x3c170005
    73cc:	02 00 40 ba 	l.j f80176b4 <__stack+0xf7b976b8>
    73d0:	40 13 00 05 	.word 0x40130005
    73d4:	02 00 40 ba 	l.j f80176bc <__stack+0xf7b976c0>
    73d8:	44 15 00 05 	l.jr r0
    73dc:	02 00 40 ba 	l.j f80176c4 <__stack+0xf7b976c8>
    73e0:	4c 18 00 05 	l.maci r24,0x5
    73e4:	02 00 40 ba 	l.j f80176cc <__stack+0xf7b976d0>
    73e8:	50 17 00 05 	.word 0x50170005
    73ec:	02 00 40 ba 	l.j f80176d4 <__stack+0xf7b976d8>
    73f0:	60 03 6e 01 	.word 0x60036e01
    73f4:	00 05 02 00 	l.j 147bf4 <__ram_length+0xc7bf4>
    73f8:	40 ba 6c 28 	.word 0x40ba6c28
    73fc:	00 05 02 00 	l.j 147bfc <__ram_length+0xc7bfc>
    7400:	40 ba 70 03 	.word 0x40ba7003
    7404:	6c 01 00 05 	.word 0x6c010005
    7408:	02 00 40 ba 	l.j f80176f0 <__stack+0xf7b976f4>
    740c:	74 28 00 05 	l.cust2 
    7410:	02 00 40 ba 	l.j f80176f8 <__stack+0xf7b976fc>
    7414:	94 03 60 01 	l.lhz r0,0x6001(r3)
    7418:	00 05 02 00 	l.j 147c18 <__ram_length+0xc7c18>
    741c:	40 ba a8 3c 	.word 0x40baa83c
    7420:	00 05 02 00 	l.j 147c20 <__ram_length+0xc7c20>
    7424:	40 ba b0 16 	.word 0x40bab016
    7428:	00 05 02 00 	l.j 147c28 <__ram_length+0xc7c28>
    742c:	40 ba bc 17 	.word 0x40babc17
    7430:	00 05 02 00 	l.j 147c30 <__ram_length+0xc7c30>
    7434:	40 ba c0 13 	.word 0x40bac013
    7438:	00 05 02 00 	l.j 147c38 <__ram_length+0xc7c38>
    743c:	40 ba c4 15 	.word 0x40bac415
    7440:	00 05 02 00 	l.j 147c40 <__ram_length+0xc7c40>
    7444:	40 ba cc 16 	.word 0x40bacc16
    7448:	00 05 02 00 	l.j 147c48 <__ram_length+0xc7c48>
    744c:	40 ba d0 11 	.word 0x40bad011
    7450:	00 05 02 00 	l.j 147c50 <__ram_length+0xc7c50>
    7454:	40 ba d4 18 	.word 0x40bad418
    7458:	00 05 02 00 	l.j 147c58 <__ram_length+0xc7c58>
    745c:	40 ba e0 15 	.word 0x40bae015
    7460:	00 05 02 00 	l.j 147c60 <__ram_length+0xc7c60>
    7464:	40 ba e4 03 	.word 0x40bae403
    7468:	f9 7c 01 00 	l.cust7 
    746c:	05 02 00 40 	l.jal 408756c <__stack+0x3c07570>
    7470:	bb 14 03 8a 	l.srai r24,r20,0xa
    7474:	03 01 00 05 	l.j fc047488 <__stack+0xfbbc748c>
    7478:	02 00 40 bb 	l.j f8017764 <__stack+0xf7b97768>
    747c:	18 03 f6 7c 	.word 0x1803f67c
    7480:	01 00 05 02 	l.j 4008888 <__stack+0x3b8888c>
    7484:	00 40 bb 24 	l.j 1036114 <__stack+0xbb6118>
    7488:	03 8a 03 01 	l.j fe28808c <__stack+0xfde08090>
    748c:	00 05 02 00 	l.j 147c8c <__ram_length+0xc7c8c>
    7490:	40 bb 58 16 	.word 0x40bb5816
    7494:	00 05 02 00 	l.j 147c94 <__ram_length+0xc7c94>
    7498:	40 bb 78 16 	.word 0x40bb7816
    749c:	00 05 02 00 	l.j 147c9c <__ram_length+0xc7c9c>
    74a0:	40 bb 88 15 	.word 0x40bb8815
    74a4:	00 05 02 00 	l.j 147ca4 <__ram_length+0xc7ca4>
    74a8:	40 bb 98 2d 	.word 0x40bb982d
    74ac:	00 05 02 00 	l.j 147cac <__ram_length+0xc7cac>
    74b0:	40 bb 9c 1d 	.word 0x40bb9c1d
    74b4:	00 05 02 00 	l.j 147cb4 <__ram_length+0xc7cb4>
    74b8:	40 bb a0 0b 	.word 0x40bba00b
    74bc:	00 05 02 00 	l.j 147cbc <__ram_length+0xc7cbc>
    74c0:	40 bb a4 15 	.word 0x40bba415
    74c4:	00 05 02 00 	l.j 147cc4 <__ram_length+0xc7cc4>
    74c8:	40 bb a8 03 	.word 0x40bba803
    74cc:	6a 01 00 05 	.word 0x6a010005
    74d0:	02 00 40 bb 	l.j f80177bc <__stack+0xf7b977c0>
    74d4:	c0 17 00 05 	l.mtspr r23,r0,0x5
    74d8:	02 00 40 bb 	l.j f80177c4 <__stack+0xf7b977c8>
    74dc:	c8 16 00 05 	lf.ftoi.s r0,r22
    74e0:	02 00 40 bb 	l.j f80177cc <__stack+0xf7b977d0>
    74e4:	ec 17 00 05 	.word 0xec170005
    74e8:	02 00 40 bb 	l.j f80177d4 <__stack+0xf7b977d8>
    74ec:	f0 15 00 05 	l.cust5 r0,r21,r0,0x0,0x5
    74f0:	02 00 40 bb 	l.j f80177dc <__stack+0xf7b977e0>
    74f4:	f4 13 00 05 	l.cust6 
    74f8:	02 00 40 bb 	l.j f80177e4 <__stack+0xf7b977e8>
    74fc:	f8 15 00 05 	l.cust7 
    7500:	02 00 40 bc 	l.j f80177f0 <__stack+0xf7b977f4>
    7504:	04 17 00 05 	l.jal 5c7518 <__stack+0x14751c>
    7508:	02 00 40 bc 	l.j f80177f8 <__stack+0xf7b977fc>
    750c:	08 13 00 05 	.word 0x08130005
    7510:	02 00 40 bc 	l.j f8017800 <__stack+0xf7b97804>
    7514:	0c 15 00 05 	l.bnf 547528 <__stack+0xc752c>
    7518:	02 00 40 bc 	l.j f8017808 <__stack+0xf7b9780c>
    751c:	14 18 00 05 	.word 0x14180005
    7520:	02 00 40 bc 	l.j f8017810 <__stack+0xf7b97814>
    7524:	18 17 00 05 	.word 0x18170005
    7528:	02 00 40 bc 	l.j f8017818 <__stack+0xf7b9781c>
    752c:	40 16 00 05 	.word 0x40160005
    7530:	02 00 40 bc 	l.j f8017820 <__stack+0xf7b97824>
    7534:	44 15 00 05 	l.jr r0
    7538:	02 00 40 bc 	l.j f8017828 <__stack+0xf7b9782c>
    753c:	48 13 00 05 	l.jalr r0
    7540:	02 00 40 bc 	l.j f8017830 <__stack+0xf7b97834>
    7544:	4c 15 00 05 	l.maci r21,0x5
    7548:	02 00 40 bc 	l.j f8017838 <__stack+0xf7b9783c>
    754c:	50 15 00 05 	.word 0x50150005
    7550:	02 00 40 bc 	l.j f8017840 <__stack+0xf7b97844>
    7554:	54 13 00 05 	.word 0x54130005
    7558:	02 00 40 bc 	l.j f8017848 <__stack+0xf7b9784c>
    755c:	58 15 00 05 	.word 0x58150005
    7560:	02 00 40 bc 	l.j f8017850 <__stack+0xf7b97854>
    7564:	60 15 00 05 	.word 0x60150005
    7568:	02 00 40 bc 	l.j f8017858 <__stack+0xf7b9785c>
    756c:	68 15 00 05 	.word 0x68150005
    7570:	02 00 40 bc 	l.j f8017860 <__stack+0xf7b97864>
    7574:	70 15 00 05 	l.cust1 
    7578:	02 00 40 bc 	l.j f8017868 <__stack+0xf7b9786c>
    757c:	78 15 00 05 	l.cust3 
    7580:	02 00 40 bc 	l.j f8017870 <__stack+0xf7b97874>
    7584:	88 16 00 05 	l.lws r0,0x5(r22)
    7588:	02 00 40 bc 	l.j f8017878 <__stack+0xf7b9787c>
    758c:	98 13 00 05 	l.lhs r0,0x5(r19)
    7590:	02 00 40 bc 	l.j f8017880 <__stack+0xf7b97884>
    7594:	9c 15 00 05 	l.addi r0,r21,0x5
    7598:	02 00 40 bc 	l.j f8017888 <__stack+0xf7b9788c>
    759c:	a0 13 00 05 	l.addic r0,r19,0x5
    75a0:	02 00 40 bc 	l.j f8017890 <__stack+0xf7b97894>
    75a4:	b0 16 00 05 	l.muli r0,r22,0x5
    75a8:	02 00 40 bc 	l.j f8017898 <__stack+0xf7b9789c>
    75ac:	b4 16 00 05 	l.mfspr r0,r22,0x5
    75b0:	02 00 40 bc 	l.j f80178a0 <__stack+0xf7b978a4>
    75b4:	b8 12 00 05 	l.slli r0,r18,0x5
    75b8:	02 00 40 bc 	l.j f80178a8 <__stack+0xf7b978ac>
    75bc:	bc 16 00 05 	l.sfeqi r22,0x5
    75c0:	02 00 40 bc 	l.j f80178b0 <__stack+0xf7b978b4>
    75c4:	c0 12 00 05 	l.mtspr r18,r0,0x5
    75c8:	02 00 40 bc 	l.j f80178b8 <__stack+0xf7b978bc>
    75cc:	c4 18 00 05 	.word 0xc4180005
    75d0:	02 00 40 bc 	l.j f80178c0 <__stack+0xf7b978c4>
    75d4:	d0 17 00 05 	l.sd 0x5(r23),r0
    75d8:	02 00 40 bc 	l.j f80178c8 <__stack+0xf7b978cc>
    75dc:	dc 16 00 05 	l.sh 0x5(r22),r0
    75e0:	02 00 40 bd 	l.j f80178d4 <__stack+0xf7b978d8>
    75e4:	18 18 00 05 	l.movhi r0,0x5
    75e8:	02 00 40 bd 	l.j f80178dc <__stack+0xf7b978e0>
    75ec:	50 16 00 05 	.word 0x50160005
    75f0:	02 00 40 bd 	l.j f80178e4 <__stack+0xf7b978e8>
    75f4:	6c 15 00 05 	.word 0x6c150005
    75f8:	02 00 40 bd 	l.j f80178ec <__stack+0xf7b978f0>
    75fc:	7c 1f 00 05 	l.cust4 
    7600:	02 00 40 bd 	l.j f80178f4 <__stack+0xf7b978f8>
    7604:	84 12 00 05 	l.lwz r0,0x5(r18)
    7608:	02 00 40 bd 	l.j f80178fc <__stack+0xf7b97900>
    760c:	90 15 00 05 	l.lbs r0,0x5(r21)
    7610:	02 00 40 bd 	l.j f8017904 <__stack+0xf7b97908>
    7614:	a0 15 00 05 	l.addic r0,r21,0x5
    7618:	02 00 40 bd 	l.j f801790c <__stack+0xf7b97910>
    761c:	a4 03 45 01 	l.andi r0,r3,0x4501
    7620:	00 05 02 00 	l.j 147e20 <__ram_length+0xc7e20>
    7624:	40 bd b0 be 	.word 0x40bdb0be
    7628:	00 05 02 00 	l.j 147e28 <__ram_length+0xc7e28>
    762c:	40 bd b8 03 	.word 0x40bdb803
    7630:	96 7f 01 00 	l.lhz r19,0x100(r31)
    7634:	05 02 00 40 	l.jal 4087734 <__stack+0x3c07738>
    7638:	bd c0 16 00 	.word 0xbdc01600
    763c:	05 02 00 40 	l.jal 408773c <__stack+0x3c07740>
    7640:	bd cc 17 00 	.word 0xbdcc1700
    7644:	05 02 00 40 	l.jal 4087744 <__stack+0x3c07748>
    7648:	bd d0 13 00 	.word 0xbdd01300
    764c:	05 02 00 40 	l.jal 408774c <__stack+0x3c07750>
    7650:	bd d4 15 00 	.word 0xbdd41500
    7654:	05 02 00 40 	l.jal 4087754 <__stack+0x3c07758>
    7658:	bd dc 16 00 	.word 0xbddc1600
    765c:	05 02 00 40 	l.jal 408775c <__stack+0x3c07760>
    7660:	bd e0 11 00 	.word 0xbde01100
    7664:	05 02 00 40 	l.jal 4087764 <__stack+0x3c07768>
    7668:	bd e4 18 00 	.word 0xbde41800
    766c:	05 02 00 40 	l.jal 408776c <__stack+0x3c07770>
    7670:	bd f0 15 00 	.word 0xbdf01500
    7674:	05 02 00 40 	l.jal 4087774 <__stack+0x3c07778>
    7678:	bd f4 03 a6 	.word 0xbdf403a6
    767c:	7c 01 00 05 	l.cust4 
    7680:	02 00 40 be 	l.j f8017978 <__stack+0xf7b9797c>
    7684:	24 03 dd 03 	l.rfe 
    7688:	01 00 05 02 	l.j 4008a90 <__stack+0x3b88a94>
    768c:	00 40 be 28 	l.j 1036f2c <__stack+0xbb6f30>
    7690:	03 a3 7c 01 	l.j fe8e6694 <__stack+0xfe466698>
    7694:	00 05 02 00 	l.j 147e94 <__ram_length+0xc7e94>
    7698:	40 be 34 03 	.word 0x40be3403
    769c:	dd 03 01 00 	l.sh 0x4100(r3),r0
    76a0:	05 02 00 40 	l.jal 40877a0 <__stack+0x3c077a4>
    76a4:	be 68 16 00 	.word 0xbe681600
    76a8:	05 02 00 40 	l.jal 40877a8 <__stack+0x3c077ac>
    76ac:	be 88 16 00 	.word 0xbe881600
    76b0:	05 02 00 40 	l.jal 40877b0 <__stack+0x3c077b4>
    76b4:	be 98 15 00 	.word 0xbe981500
    76b8:	05 02 00 40 	l.jal 40877b8 <__stack+0x3c077bc>
    76bc:	be a8 33 00 	.word 0xbea83300
    76c0:	05 02 00 40 	l.jal 40877c0 <__stack+0x3c077c4>
    76c4:	be ac 15 00 	.word 0xbeac1500
    76c8:	05 02 00 40 	l.jal 40877c8 <__stack+0x3c077cc>
    76cc:	be b0 03 65 	.word 0xbeb00365
    76d0:	01 00 05 02 	l.j 4008ad8 <__stack+0x3b88adc>
    76d4:	00 40 be f0 	l.j 1037294 <__stack+0xbb7298>
    76d8:	19 00 05 02 	l.movhi r8,0x502
    76dc:	00 40 bf 08 	l.j 10372fc <__stack+0xbb7300>
    76e0:	17 00 05 02 	.word 0x17000502
    76e4:	00 40 bf 10 	l.j 1037324 <__stack+0xbb7328>
    76e8:	16 00 05 02 	.word 0x16000502
    76ec:	00 40 bf 34 	l.j 10373bc <__stack+0xbb73c0>
    76f0:	17 00 05 02 	.word 0x17000502
    76f4:	00 40 bf 38 	l.j 10373d4 <__stack+0xbb73d8>
    76f8:	15 00 05 02 	l.nop 0x502
    76fc:	00 40 bf 3c 	l.j 10373ec <__stack+0xbb73f0>
    7700:	13 00 05 02 	l.bf fc008b08 <__stack+0xfbb88b0c>
    7704:	00 40 bf 40 	l.j 1037404 <__stack+0xbb7408>
    7708:	15 00 05 02 	l.nop 0x502
    770c:	00 40 bf 4c 	l.j 103743c <__stack+0xbb7440>
    7710:	17 00 05 02 	.word 0x17000502
    7714:	00 40 bf 50 	l.j 1037454 <__stack+0xbb7458>
    7718:	13 00 05 02 	l.bf fc008b20 <__stack+0xfbb88b24>
    771c:	00 40 bf 54 	l.j 103746c <__stack+0xbb7470>
    7720:	15 00 05 02 	l.nop 0x502
    7724:	00 40 bf 5c 	l.j 1037494 <__stack+0xbb7498>
    7728:	18 00 05 02 	l.movhi r0,0x502
    772c:	00 40 bf 60 	l.j 10374ac <__stack+0xbb74b0>
    7730:	19 00 05 02 	l.movhi r8,0x502
    7734:	00 40 bf 6c 	l.j 10374e4 <__stack+0xbb74e8>
    7738:	15 00 05 02 	l.nop 0x502
    773c:	00 40 bf 70 	l.j 10374fc <__stack+0xbb7500>
    7740:	13 00 05 02 	l.bf fc008b48 <__stack+0xfbb88b4c>
    7744:	00 40 bf 74 	l.j 1037514 <__stack+0xbb7518>
    7748:	15 00 05 02 	l.nop 0x502
    774c:	00 40 bf 78 	l.j 103752c <__stack+0xbb7530>
    7750:	16 00 05 02 	.word 0x16000502
    7754:	00 40 bf 7c 	l.j 1037544 <__stack+0xbb7548>
    7758:	12 00 05 02 	l.bf f8008b60 <__stack+0xf7b88b64>
    775c:	00 40 bf 80 	l.j 103755c <__stack+0xbb7560>
    7760:	15 00 05 02 	l.nop 0x502
    7764:	00 40 bf 8c 	l.j 1037594 <__stack+0xbb7598>
    7768:	15 00 05 02 	l.nop 0x502
    776c:	00 40 bf 94 	l.j 10375bc <__stack+0xbb75c0>
    7770:	15 00 05 02 	l.nop 0x502
    7774:	00 40 bf 9c 	l.j 10375e4 <__stack+0xbb75e8>
    7778:	15 00 05 02 	l.nop 0x502
    777c:	00 40 bf a4 	l.j 103760c <__stack+0xbb7610>
    7780:	15 00 05 02 	l.nop 0x502
    7784:	00 40 bf b4 	l.j 1037654 <__stack+0xbb7658>
    7788:	16 00 05 02 	.word 0x16000502
    778c:	00 40 bf b8 	l.j 103766c <__stack+0xbb7670>
    7790:	13 00 05 02 	l.bf fc008b98 <__stack+0xfbb88b9c>
    7794:	00 40 bf bc 	l.j 1037684 <__stack+0xbb7688>
    7798:	15 00 05 02 	l.nop 0x502
    779c:	00 40 bf c0 	l.j 103769c <__stack+0xbb76a0>
    77a0:	13 00 05 02 	l.bf fc008ba8 <__stack+0xfbb88bac>
    77a4:	00 40 bf c4 	l.j 10376b4 <__stack+0xbb76b8>
    77a8:	15 00 05 02 	l.nop 0x502
    77ac:	00 40 bf d0 	l.j 10376ec <__stack+0xbb76f0>
    77b0:	13 00 05 02 	l.bf fc008bb8 <__stack+0xfbb88bbc>
    77b4:	00 40 bf dc 	l.j 1037724 <__stack+0xbb7728>
    77b8:	16 00 05 02 	.word 0x16000502
    77bc:	00 40 bf ec 	l.j 103776c <__stack+0xbb7770>
    77c0:	15 00 05 02 	l.nop 0x502
    77c4:	00 40 c0 28 	l.j 1037864 <__stack+0xbb7868>
    77c8:	18 00 05 02 	l.movhi r0,0x502
    77cc:	00 40 c0 5c 	l.j 103793c <__stack+0xbb7940>
    77d0:	16 00 05 02 	.word 0x16000502
    77d4:	00 40 c0 78 	l.j 10379b4 <__stack+0xbb79b8>
    77d8:	15 00 05 02 	l.nop 0x502
    77dc:	00 40 c0 88 	l.j 10379fc <__stack+0xbb7a00>
    77e0:	20 00 05 02 	l.sys 0x502
    77e4:	00 40 c0 90 	l.j 1037a24 <__stack+0xbb7a28>
    77e8:	11 00 05 02 	l.bf 4008bf0 <__stack+0x3b88bf4>
    77ec:	00 40 c0 9c 	l.j 1037a5c <__stack+0xbb7a60>
    77f0:	15 00 05 02 	l.nop 0x502
    77f4:	00 40 c0 dc 	l.j 1037b64 <__stack+0xbb7b68>
    77f8:	15 00 05 02 	l.nop 0x502
    77fc:	00 40 c0 ec 	l.j 1037bac <__stack+0xbb7bb0>
    7800:	15 00 05 02 	l.nop 0x502
    7804:	00 40 c0 f0 	l.j 1037bc4 <__stack+0xbb7bc8>
    7808:	17 00 05 02 	.word 0x17000502
    780c:	00 40 c0 f4 	l.j 1037bdc <__stack+0xbb7be0>
    7810:	15 00 05 02 	l.nop 0x502
    7814:	00 40 c0 f8 	l.j 1037bf4 <__stack+0xbb7bf8>
    7818:	13 00 05 02 	l.bf fc008c20 <__stack+0xfbb88c24>
    781c:	00 40 c0 fc 	l.j 1037c0c <__stack+0xbb7c10>
    7820:	15 00 05 02 	l.nop 0x502
    7824:	00 40 c1 00 	l.j 1037c24 <__stack+0xbb7c28>
    7828:	03 48 01 00 	l.j fd207c28 <__stack+0xfcd87c2c>
    782c:	05 02 00 40 	l.jal 408792c <__stack+0x3c07930>
    7830:	c1 0c 4e 00 	l.mtspr r12,r9,0x4600
    7834:	05 02 00 40 	l.jal 4087934 <__stack+0x3c07938>
    7838:	c1 10 03 46 	l.mtspr r16,r0,0x4346
    783c:	01 00 05 02 	l.j 4008c44 <__stack+0x3b88c48>
    7840:	00 40 c1 14 	l.j 1037c90 <__stack+0xbb7c94>
    7844:	4e 00 05 02 	l.maci r0,0x502
    7848:	00 40 c1 18 	l.j 1037ca8 <__stack+0xbb7cac>
    784c:	03 46 01 00 	l.j fd187c4c <__stack+0xfcd07c50>
    7850:	05 02 00 40 	l.jal 4087950 <__stack+0x3c07954>
    7854:	c1 1c 4e 00 	l.mtspr r28,r9,0x4600
    7858:	05 02 00 40 	l.jal 4087958 <__stack+0x3c0795c>
    785c:	c1 3c 16 00 	l.mtspr r28,r2,0x4e00
    7860:	05 02 00 40 	l.jal 4087960 <__stack+0x3c07964>
    7864:	c1 48 15 00 	l.mtspr r8,r2,0x5500
    7868:	05 02 00 40 	l.jal 4087968 <__stack+0x3c0796c>
    786c:	c1 50 03 40 	l.mtspr r16,r0,0x5340
    7870:	01 00 05 02 	l.j 4008c78 <__stack+0x3b88c7c>
    7874:	00 40 c1 58 	l.j 1037dd4 <__stack+0xbb7dd8>
    7878:	5d 00 05 02 	.word 0x5d000502
    787c:	00 40 c1 5c 	l.j 1037dec <__stack+0xbb7df0>
    7880:	12 00 05 02 	l.bf f8008c88 <__stack+0xf7b88c8c>
    7884:	00 40 c1 68 	l.j 1037e24 <__stack+0xbb7e28>
    7888:	16 00 05 02 	.word 0x16000502
    788c:	00 40 c1 74 	l.j 1037e5c <__stack+0xbb7e60>
    7890:	16 00 05 02 	.word 0x16000502
    7894:	00 40 c1 8c 	l.j 1037ec4 <__stack+0xbb7ec8>
    7898:	13 00 05 02 	l.bf fc008ca0 <__stack+0xfbb88ca4>
    789c:	00 40 c1 98 	l.j 1037efc <__stack+0xbb7f00>
    78a0:	16 00 05 02 	.word 0x16000502
    78a4:	00 40 c1 a8 	l.j 1037f44 <__stack+0xbb7f48>
    78a8:	15 00 05 02 	l.nop 0x502
    78ac:	00 40 c1 c4 	l.j 1037fbc <__stack+0xbb7fc0>
    78b0:	15 00 05 02 	l.nop 0x502
    78b4:	00 40 c1 d0 	l.j 1037ff4 <__stack+0xbb7ff8>
    78b8:	1a 00 05 02 	l.movhi r16,0x502
    78bc:	00 40 c2 04 	l.j 10380cc <__stack+0xbb80d0>
    78c0:	04 18 03 9a 	l.jal 608728 <__stack+0x18872c>
    78c4:	7a 01 00 05 	l.cust3 
    78c8:	02 00 40 c2 	l.j f8017bd0 <__stack+0xf7b97bd4>
    78cc:	04 19 00 05 	l.jal 6478e0 <__stack+0x1c78e4>
    78d0:	02 00 40 c2 	l.j f8017bd8 <__stack+0xf7b97bdc>
    78d4:	08 0f 00 05 	.word 0x080f0005
    78d8:	02 00 40 c2 	l.j f8017be0 <__stack+0xf7b97be4>
    78dc:	14 19 00 05 	.word 0x14190005
    78e0:	02 00 40 c2 	l.j f8017be8 <__stack+0xf7b97bec>
    78e4:	24 16 00 05 	l.rfe 
    78e8:	02 00 40 c2 	l.j f8017bf0 <__stack+0xf7b97bf4>
    78ec:	28 12 00 05 	.word 0x28120005
    78f0:	02 00 40 c2 	l.j f8017bf8 <__stack+0xf7b97bfc>
    78f4:	2c 0f 00 05 	.word 0x2c0f0005
    78f8:	02 00 40 c2 	l.j f8017c00 <__stack+0xf7b97c04>
    78fc:	30 19 00 05 	.word 0x30190005
    7900:	02 00 40 c2 	l.j f8017c08 <__stack+0xf7b97c0c>
    7904:	40 15 00 05 	.word 0x40150005
    7908:	02 00 40 c2 	l.j f8017c10 <__stack+0xf7b97c14>
    790c:	48 15 00 05 	l.jalr r0
    7910:	02 00 40 c2 	l.j f8017c18 <__stack+0xf7b97c1c>
    7914:	4c 13 00 05 	l.maci r19,0x5
    7918:	02 00 40 c2 	l.j f8017c20 <__stack+0xf7b97c24>
    791c:	50 15 00 05 	.word 0x50150005
    7920:	02 00 40 c2 	l.j f8017c28 <__stack+0xf7b97c2c>
    7924:	58 15 00 05 	.word 0x58150005
    7928:	02 00 40 c2 	l.j f8017c30 <__stack+0xf7b97c34>
    792c:	5c 13 00 05 	.word 0x5c130005
    7930:	02 00 40 c2 	l.j f8017c38 <__stack+0xf7b97c3c>
    7934:	60 15 00 05 	.word 0x60150005
    7938:	02 00 40 c2 	l.j f8017c40 <__stack+0xf7b97c44>
    793c:	64 15 00 05 	.word 0x64150005
    7940:	02 00 40 c2 	l.j f8017c48 <__stack+0xf7b97c4c>
    7944:	68 13 00 05 	.word 0x68130005
    7948:	02 00 40 c2 	l.j f8017c50 <__stack+0xf7b97c54>
    794c:	6c 15 00 05 	.word 0x6c150005
    7950:	02 00 40 c2 	l.j f8017c58 <__stack+0xf7b97c5c>
    7954:	70 15 00 05 	l.cust1 
    7958:	02 00 40 c2 	l.j f8017c60 <__stack+0xf7b97c64>
    795c:	7c 15 00 05 	l.cust4 
    7960:	02 00 40 c2 	l.j f8017c68 <__stack+0xf7b97c6c>
    7964:	88 15 00 05 	l.lws r0,0x5(r21)
    7968:	02 00 40 c2 	l.j f8017c70 <__stack+0xf7b97c74>
    796c:	94 15 00 05 	l.lhz r0,0x5(r21)
    7970:	02 00 40 c2 	l.j f8017c78 <__stack+0xf7b97c7c>
    7974:	9c 04 17 03 	l.addi r0,r4,0x1703
    7978:	e1 04 01 00 	.word 0xe1040100
    797c:	05 02 00 40 	l.jal 4087a7c <__stack+0x3c07a80>
    7980:	c2 b0 16 00 	l.mtspr r16,r2,0xae00
    7984:	05 02 00 40 	l.jal 4087a84 <__stack+0x3c07a88>
    7988:	c2 c0 18 00 	l.mtspr r0,r3,0xb000
    798c:	05 02 00 40 	l.jal 4087a8c <__stack+0x3c07a90>
    7990:	c2 d4 15 00 	l.mtspr r20,r2,0xb500
    7994:	05 02 00 40 	l.jal 4087a94 <__stack+0x3c07a98>
    7998:	c2 dc 04 18 	l.mtspr r28,r0,0xb418
    799c:	03 9b 7b 01 	l.j fe6e65a0 <__stack+0xfe2665a4>
    79a0:	00 05 02 00 	l.j 1481a0 <__ram_length+0xc81a0>
    79a4:	40 c2 e4 04 	.word 0x40c2e404
    79a8:	17 03 e8 04 	.word 0x1703e804
    79ac:	01 00 05 02 	l.j 4008db4 <__stack+0x3b88db8>
    79b0:	00 40 c2 f4 	l.j 1038580 <__stack+0xbb8584>
    79b4:	18 00 05 02 	l.movhi r0,0x502
    79b8:	00 40 c3 0c 	l.j 10385e8 <__stack+0xbb85ec>
    79bc:	15 00 05 02 	l.nop 0x502
    79c0:	00 40 c3 14 	l.j 1038610 <__stack+0xbb8614>
    79c4:	04 18 03 93 	l.jal 608810 <__stack+0x188814>
    79c8:	7b 01 00 05 	l.cust3 
    79cc:	02 00 40 c3 	l.j f8017cd8 <__stack+0xf7b97cdc>
    79d0:	20 04 17 03 	.word 0x20041703
    79d4:	d0 04 01 00 	l.sd 0x100(r4),r0
    79d8:	05 02 00 40 	l.jal 4087ad8 <__stack+0x3c07adc>
    79dc:	c3 28 15 00 	l.mtspr r8,r2,0xcd00
    79e0:	05 02 00 40 	l.jal 4087ae0 <__stack+0x3c07ae4>
    79e4:	c3 2c 13 00 	l.mtspr r12,r2,0xcb00
    79e8:	05 02 00 40 	l.jal 4087ae8 <__stack+0x3c07aec>
    79ec:	c3 30 15 00 	l.mtspr r16,r2,0xcd00
    79f0:	05 02 00 40 	l.jal 4087af0 <__stack+0x3c07af4>
    79f4:	c3 3c 15 00 	l.mtspr r28,r2,0xcd00
    79f8:	05 02 00 40 	l.jal 4087af8 <__stack+0x3c07afc>
    79fc:	c3 74 15 00 	l.mtspr r20,r2,0xdd00
    7a00:	05 02 00 40 	l.jal 4087b00 <__stack+0x3c07b04>
    7a04:	c3 7c 04 18 	l.mtspr r28,r0,0xdc18
    7a08:	03 b2 7b 01 	l.j feca660c <__stack+0xfe826610>
    7a0c:	00 05 02 00 	l.j 14820c <__ram_length+0xc820c>
    7a10:	40 c3 90 04 	.word 0x40c39004
    7a14:	13 24 00 05 	l.bf fc907a28 <__stack+0xfc487a2c>
    7a18:	02 00 40 c3 	l.j f8017d24 <__stack+0xf7b97d28>
    7a1c:	90 17 00 05 	l.lbs r0,0x5(r23)
    7a20:	02 00 40 c3 	l.j f8017d2c <__stack+0xf7b97d30>
    7a24:	94 11 00 05 	l.lhz r0,0x5(r17)
    7a28:	02 00 40 c3 	l.j f8017d34 <__stack+0xf7b97d38>
    7a2c:	98 17 00 05 	l.lhs r0,0x5(r23)
    7a30:	02 00 40 c3 	l.j f8017d3c <__stack+0xf7b97d40>
    7a34:	9c 11 00 05 	l.addi r0,r17,0x5
    7a38:	02 00 40 c3 	l.j f8017d44 <__stack+0xf7b97d48>
    7a3c:	a0 17 00 05 	l.addic r0,r23,0x5
    7a40:	02 00 40 c3 	l.j f8017d4c <__stack+0xf7b97d50>
    7a44:	b4 15 00 05 	l.mfspr r0,r21,0x5
    7a48:	02 00 40 c3 	l.j f8017d54 <__stack+0xf7b97d58>
    7a4c:	b8 13 00 05 	l.slli r0,r19,0x5
    7a50:	02 00 40 c3 	l.j f8017d5c <__stack+0xf7b97d60>
    7a54:	bc 15 00 05 	l.sfeqi r21,0x5
    7a58:	02 00 40 c3 	l.j f8017d64 <__stack+0xf7b97d68>
    7a5c:	c0 13 00 05 	l.mtspr r19,r0,0x5
    7a60:	02 00 40 c3 	l.j f8017d6c <__stack+0xf7b97d70>
    7a64:	c4 15 00 05 	.word 0xc4150005
    7a68:	02 00 40 c3 	l.j f8017d74 <__stack+0xf7b97d78>
    7a6c:	d8 15 00 05 	l.sb 0x5(r21),r0
    7a70:	02 00 40 c3 	l.j f8017d7c <__stack+0xf7b97d80>
    7a74:	dc 13 00 05 	l.sh 0x5(r19),r0
    7a78:	02 00 40 c3 	l.j f8017d84 <__stack+0xf7b97d88>
    7a7c:	e0 15 00 05 	l.xor r0,r21,r0
    7a80:	02 00 40 c3 	l.j f8017d8c <__stack+0xf7b97d90>
    7a84:	e4 13 00 05 	l.sfeq r19,r0
    7a88:	02 00 40 c3 	l.j f8017d94 <__stack+0xf7b97d98>
    7a8c:	e8 15 00 05 	.word 0xe8150005
    7a90:	02 00 40 c3 	l.j f8017d9c <__stack+0xf7b97da0>
    7a94:	fc 15 00 05 	l.cust8 
    7a98:	02 00 40 c4 	l.j f8017da8 <__stack+0xf7b97dac>
    7a9c:	08 10 00 05 	.word 0x08100005
    7aa0:	02 00 40 c4 	l.j f8017db0 <__stack+0xf7b97db4>
    7aa4:	0c 18 00 05 	l.bnf 607ab8 <__stack+0x187abc>
    7aa8:	02 00 40 c4 	l.j f8017db8 <__stack+0xf7b97dbc>
    7aac:	10 18 00 05 	l.bf 607ac0 <__stack+0x187ac4>
    7ab0:	02 00 40 c4 	l.j f8017dc0 <__stack+0xf7b97dc4>
    7ab4:	1c 18 00 05 	.word 0x1c180005
    7ab8:	02 00 40 c4 	l.j f8017dc8 <__stack+0xf7b97dcc>
    7abc:	20 16 00 05 	.word 0x20160005
    7ac0:	02 00 40 c4 	l.j f8017dd0 <__stack+0xf7b97dd4>
    7ac4:	24 12 00 05 	l.rfe 
    7ac8:	02 00 40 c4 	l.j f8017dd8 <__stack+0xf7b97ddc>
    7acc:	28 16 00 05 	.word 0x28160005
    7ad0:	02 00 40 c4 	l.j f8017de0 <__stack+0xf7b97de4>
    7ad4:	2c 12 00 05 	.word 0x2c120005
    7ad8:	02 00 40 c4 	l.j f8017de8 <__stack+0xf7b97dec>
    7adc:	30 16 00 05 	.word 0x30160005
    7ae0:	02 00 40 c4 	l.j f8017df0 <__stack+0xf7b97df4>
    7ae4:	40 15 00 05 	.word 0x40150005
    7ae8:	02 00 40 c4 	l.j f8017df8 <__stack+0xf7b97dfc>
    7aec:	58 15 00 05 	.word 0x58150005
    7af0:	02 00 40 c4 	l.j f8017e00 <__stack+0xf7b97e04>
    7af4:	5c 13 00 05 	.word 0x5c130005
    7af8:	02 00 40 c4 	l.j f8017e08 <__stack+0xf7b97e0c>
    7afc:	60 15 00 05 	.word 0x60150005
    7b00:	02 00 40 c4 	l.j f8017e10 <__stack+0xf7b97e14>
    7b04:	70 01 00 05 	l.cust1 
    7b08:	02 00 40 c4 	l.j f8017e18 <__stack+0xf7b97e1c>
    7b0c:	78 15 00 05 	l.cust3 
    7b10:	02 00 40 c4 	l.j f8017e20 <__stack+0xf7b97e24>
    7b14:	88 10 00 05 	l.lws r0,0x5(r16)
    7b18:	02 00 40 c4 	l.j f8017e28 <__stack+0xf7b97e2c>
    7b1c:	8c 1a 00 05 	l.lbz r0,0x5(r26)
    7b20:	02 00 40 c4 	l.j f8017e30 <__stack+0xf7b97e34>
    7b24:	94 16 00 05 	l.lhz r0,0x5(r22)
    7b28:	02 00 40 c4 	l.j f8017e38 <__stack+0xf7b97e3c>
    7b2c:	a8 18 00 05 	l.ori r0,r24,0x5
    7b30:	02 00 40 c4 	l.j f8017e40 <__stack+0xf7b97e44>
    7b34:	b8 17 00 05 	l.slli r0,r23,0x5
    7b38:	02 00 40 c4 	l.j f8017e48 <__stack+0xf7b97e4c>
    7b3c:	c0 15 00 05 	l.mtspr r21,r0,0x5
    7b40:	02 00 40 c4 	l.j f8017e50 <__stack+0xf7b97e54>
    7b44:	c8 13 00 05 	lf.ftoi.s r0,r19
    7b48:	02 00 40 c4 	l.j f8017e58 <__stack+0xf7b97e5c>
    7b4c:	d8 18 00 05 	l.sb 0x5(r24),r0
    7b50:	02 00 40 c4 	l.j f8017e60 <__stack+0xf7b97e64>
    7b54:	e8 18 00 05 	.word 0xe8180005
    7b58:	02 00 40 c4 	l.j f8017e68 <__stack+0xf7b97e6c>
    7b5c:	e8 15 00 05 	.word 0xe8150005
    7b60:	02 00 40 c4 	l.j f8017e70 <__stack+0xf7b97e74>
    7b64:	ec 13 00 05 	.word 0xec130005
    7b68:	02 00 40 c4 	l.j f8017e78 <__stack+0xf7b97e7c>
    7b6c:	f0 15 00 05 	l.cust5 r0,r21,r0,0x0,0x5
    7b70:	02 00 40 c4 	l.j f8017e80 <__stack+0xf7b97e84>
    7b74:	f8 13 00 05 	l.cust7 
    7b78:	02 00 40 c4 	l.j f8017e88 <__stack+0xf7b97e8c>
    7b7c:	fc 15 00 05 	l.cust8 
    7b80:	02 00 40 c5 	l.j f8017e94 <__stack+0xf7b97e98>
    7b84:	00 15 00 05 	l.j 547b98 <__stack+0xc7b9c>
    7b88:	02 00 40 c5 	l.j f8017e9c <__stack+0xf7b97ea0>
    7b8c:	04 12 00 05 	l.jal 487ba0 <__stack+0x7ba4>
    7b90:	02 00 40 c5 	l.j f8017ea4 <__stack+0xf7b97ea8>
    7b94:	08 16 00 05 	.word 0x08160005
    7b98:	02 00 40 c5 	l.j f8017eac <__stack+0xf7b97eb0>
    7b9c:	10 15 00 05 	l.bf 547bb0 <__stack+0xc7bb4>
    7ba0:	02 00 40 c5 	l.j f8017eb4 <__stack+0xf7b97eb8>
    7ba4:	14 15 00 05 	.word 0x14150005
    7ba8:	02 00 40 c5 	l.j f8017ebc <__stack+0xf7b97ec0>
    7bac:	18 13 00 05 	.word 0x18130005
    7bb0:	02 00 40 c5 	l.j f8017ec4 <__stack+0xf7b97ec8>
    7bb4:	1c 15 00 05 	.word 0x1c150005
    7bb8:	02 00 40 c5 	l.j f8017ecc <__stack+0xf7b97ed0>
    7bbc:	20 13 00 05 	.word 0x20130005
    7bc0:	02 00 40 c5 	l.j f8017ed4 <__stack+0xf7b97ed8>
    7bc4:	28 c1 00 05 	.word 0x28c10005
    7bc8:	02 00 40 c5 	l.j f8017edc <__stack+0xf7b97ee0>
    7bcc:	2c 1b 00 05 	.word 0x2c1b0005
    7bd0:	02 00 40 c5 	l.j f8017ee4 <__stack+0xf7b97ee8>
    7bd4:	30 0d 00 05 	.word 0x300d0005
    7bd8:	02 00 40 c5 	l.j f8017eec <__stack+0xf7b97ef0>
    7bdc:	3c 1b 00 05 	.word 0x3c1b0005
    7be0:	02 00 40 c5 	l.j f8017ef4 <__stack+0xf7b97ef8>
    7be4:	40 11 00 05 	.word 0x40110005
    7be8:	02 00 40 c5 	l.j f8017efc <__stack+0xf7b97f00>
    7bec:	48 17 00 05 	l.jalr r0
    7bf0:	02 00 40 c5 	l.j f8017f04 <__stack+0xf7b97f08>
    7bf4:	58 03 fb 7e 	.word 0x5803fb7e
    7bf8:	01 00 05 02 	l.j 4009000 <__stack+0x3b89004>
    7bfc:	00 40 c5 70 	l.j 10391bc <__stack+0xbb91c0>
    7c00:	15 00 05 02 	l.nop 0x502
    7c04:	00 40 c5 7c 	l.j 10391f4 <__stack+0xbb91f8>
    7c08:	15 00 05 02 	l.nop 0x502
    7c0c:	00 40 c5 9c 	l.j 103927c <__stack+0xbb9280>
    7c10:	20 00 05 02 	l.sys 0x502
    7c14:	00 40 c5 a4 	l.j 10392a4 <__stack+0xbb92a8>
    7c18:	0a 00 05 02 	.word 0x0a000502
    7c1c:	00 40 c5 b0 	l.j 10392dc <__stack+0xbb92e0>
    7c20:	16 00 05 02 	.word 0x16000502
    7c24:	00 40 c5 cc 	l.j 1039354 <__stack+0xbb9358>
    7c28:	15 00 05 02 	l.nop 0x502
    7c2c:	00 40 c5 f0 	l.j 10393ec <__stack+0xbb93f0>
    7c30:	15 00 05 02 	l.nop 0x502
    7c34:	00 40 c6 08 	l.j 1039454 <__stack+0xbb9458>
    7c38:	38 00 05 02 	.word 0x38000502
    7c3c:	00 40 c6 34 	l.j 103950c <__stack+0xbb9510>
    7c40:	2b 00 05 02 	.word 0x2b000502
    7c44:	00 40 c6 3c 	l.j 1039534 <__stack+0xbb9538>
    7c48:	03 69 01 00 	l.j fda48048 <__stack+0xfd5c804c>
    7c4c:	05 02 00 40 	l.jal 4087d4c <__stack+0x3c07d50>
    7c50:	c6 54 17 00 	.word 0xc6541700
    7c54:	05 02 00 40 	l.jal 4087d54 <__stack+0x3c07d58>
    7c58:	c6 5c 03 5f 	.word 0xc65c035f
    7c5c:	01 00 05 02 	l.j 4009064 <__stack+0x3b89068>
    7c60:	00 40 c6 68 	l.j 1039600 <__stack+0xbb9604>
    7c64:	15 00 05 02 	l.nop 0x502
    7c68:	00 40 c6 70 	l.j 1039628 <__stack+0xbb962c>
    7c6c:	15 00 05 02 	l.nop 0x502
    7c70:	00 40 c6 78 	l.j 1039650 <__stack+0xbb9654>
    7c74:	15 00 05 02 	l.nop 0x502
    7c78:	00 40 c6 80 	l.j 1039678 <__stack+0xbb967c>
    7c7c:	1f 00 05 02 	.word 0x1f000502
    7c80:	00 40 c6 88 	l.j 10396a0 <__stack+0xbb96a4>
    7c84:	0e 00 05 02 	l.bnf f800908c <__stack+0xf7b89090>
    7c88:	00 40 c6 98 	l.j 10396e8 <__stack+0xbb96ec>
    7c8c:	15 00 05 02 	l.nop 0x502
    7c90:	00 40 c6 a4 	l.j 1039720 <__stack+0xbb9724>
    7c94:	ab 00 05 02 	l.ori r24,r0,0x502
    7c98:	00 40 c6 ac 	l.j 1039748 <__stack+0xbb974c>
    7c9c:	03 ec 7e 01 	l.j ffb274a0 <__stack+0xff6a74a4>
    7ca0:	00 05 02 00 	l.j 1484a0 <__ram_length+0xc84a0>
    7ca4:	40 c6 bc 15 	.word 0x40c6bc15
    7ca8:	00 05 02 00 	l.j 1484a8 <__ram_length+0xc84a8>
    7cac:	40 c6 c4 15 	.word 0x40c6c415
    7cb0:	00 05 02 00 	l.j 1484b0 <__ram_length+0xc84b0>
    7cb4:	40 c6 e0 27 	.word 0x40c6e027
    7cb8:	00 05 02 00 	l.j 1484b8 <__ram_length+0xc84b8>
    7cbc:	40 c7 14 03 	.word 0x40c71403
    7cc0:	ba 7f 01 00 	l.slli r19,r31,0x0
    7cc4:	05 02 00 40 	l.jal 4087dc4 <__stack+0x3c07dc8>
    7cc8:	c7 24 16 00 	.word 0xc7241600
    7ccc:	05 02 00 40 	l.jal 4087dcc <__stack+0x3c07dd0>
    7cd0:	c7 30 15 00 	.word 0xc7301500
    7cd4:	05 02 00 40 	l.jal 4087dd4 <__stack+0x3c07dd8>
    7cd8:	c7 3c 15 00 	.word 0xc73c1500
    7cdc:	05 02 00 40 	l.jal 4087ddc <__stack+0x3c07de0>
    7ce0:	c7 48 15 00 	.word 0xc7481500
    7ce4:	05 02 00 40 	l.jal 4087de4 <__stack+0x3c07de8>
    7ce8:	c7 54 15 00 	.word 0xc7541500
    7cec:	05 02 00 40 	l.jal 4087dec <__stack+0x3c07df0>
    7cf0:	c7 60 15 00 	.word 0xc7601500
    7cf4:	05 02 00 40 	l.jal 4087df4 <__stack+0x3c07df8>
    7cf8:	c7 6c 15 00 	.word 0xc76c1500
    7cfc:	05 02 00 40 	l.jal 4087dfc <__stack+0x3c07e00>
    7d00:	c7 78 15 00 	.word 0xc7781500
    7d04:	05 02 00 40 	l.jal 4087e04 <__stack+0x3c07e08>
    7d08:	c7 84 15 00 	.word 0xc7841500
    7d0c:	05 02 00 40 	l.jal 4087e0c <__stack+0x3c07e10>
    7d10:	c7 90 15 00 	.word 0xc7901500
    7d14:	05 02 00 40 	l.jal 4087e14 <__stack+0x3c07e18>
    7d18:	c7 9c 15 00 	.word 0xc79c1500
    7d1c:	05 02 00 40 	l.jal 4087e1c <__stack+0x3c07e20>
    7d20:	c7 a8 15 00 	.word 0xc7a81500
    7d24:	05 02 00 40 	l.jal 4087e24 <__stack+0x3c07e28>
    7d28:	c7 b4 35 00 	.word 0xc7b43500
    7d2c:	05 02 00 40 	l.jal 4087e2c <__stack+0x3c07e30>
    7d30:	c7 bc 32 00 	.word 0xc7bc3200
    7d34:	05 02 00 40 	l.jal 4087e34 <__stack+0x3c07e38>
    7d38:	c7 f0 15 00 	.word 0xc7f01500
    7d3c:	05 02 00 40 	l.jal 4087e3c <__stack+0x3c07e40>
    7d40:	c7 fc 8c 00 	.word 0xc7fc8c00
    7d44:	05 02 00 40 	l.jal 4087e44 <__stack+0x3c07e48>
    7d48:	c8 04 03 8d 	.word 0xc804038d
    7d4c:	7f 01 00 05 	l.cust4 
    7d50:	02 00 40 c8 	l.j f8018070 <__stack+0xf7b98074>
    7d54:	38 15 00 05 	.word 0x38150005
    7d58:	02 00 40 c8 	l.j f8018078 <__stack+0xf7b9807c>
    7d5c:	44 15 00 05 	l.jr r0
    7d60:	02 00 40 c8 	l.j f8018080 <__stack+0xf7b98084>
    7d64:	48 13 00 05 	l.jalr r0
    7d68:	02 00 40 c8 	l.j f8018088 <__stack+0xf7b9808c>
    7d6c:	7c 15 00 05 	l.cust4 
    7d70:	02 00 40 c8 	l.j f8018090 <__stack+0xf7b98094>
    7d74:	88 15 00 05 	l.lws r0,0x5(r21)
    7d78:	02 00 40 c8 	l.j f8018098 <__stack+0xf7b9809c>
    7d7c:	98 19 00 05 	l.lhs r0,0x5(r25)
    7d80:	02 00 40 c8 	l.j f80180a0 <__stack+0xf7b980a4>
    7d84:	a4 16 00 05 	l.andi r0,r22,0x5
    7d88:	02 00 40 c8 	l.j f80180a8 <__stack+0xf7b980ac>
    7d8c:	b8 15 00 05 	l.slli r0,r21,0x5
    7d90:	02 00 40 c8 	l.j f80180b0 <__stack+0xf7b980b4>
    7d94:	c4 15 00 05 	.word 0xc4150005
    7d98:	02 00 40 c8 	l.j f80180b8 <__stack+0xf7b980bc>
    7d9c:	d4 15 00 05 	l.sw 0x5(r21),r0
    7da0:	02 00 40 c8 	l.j f80180c0 <__stack+0xf7b980c4>
    7da4:	e8 15 00 05 	.word 0xe8150005
    7da8:	02 00 40 c8 	l.j f80180c8 <__stack+0xf7b980cc>
    7dac:	f0 15 00 05 	l.cust5 r0,r21,r0,0x0,0x5
    7db0:	02 00 40 c8 	l.j f80180d0 <__stack+0xf7b980d4>
    7db4:	fc 35 00 05 	l.cust8 
    7db8:	02 00 40 c9 	l.j f80180dc <__stack+0xf7b980e0>
    7dbc:	04 03 61 01 	l.jal e01c0 <__ram_length+0x601c0>
    7dc0:	00 05 02 00 	l.j 1485c0 <__ram_length+0xc85c0>
    7dc4:	40 c9 0c 16 	.word 0x40c90c16
    7dc8:	00 05 02 00 	l.j 1485c8 <__ram_length+0xc85c8>
    7dcc:	40 c9 20 15 	.word 0x40c92015
    7dd0:	00 05 02 00 	l.j 1485d0 <__ram_length+0xc85d0>
    7dd4:	40 c9 28 15 	.word 0x40c92815
    7dd8:	00 05 02 00 	l.j 1485d8 <__ram_length+0xc85d8>
    7ddc:	40 c9 30 16 	.word 0x40c93016
    7de0:	00 05 02 00 	l.j 1485e0 <__ram_length+0xc85e0>
    7de4:	40 c9 34 12 	.word 0x40c93412
    7de8:	00 05 02 00 	l.j 1485e8 <__ram_length+0xc85e8>
    7dec:	40 c9 38 16 	.word 0x40c93816
    7df0:	00 05 02 00 	l.j 1485f0 <__ram_length+0xc85f0>
    7df4:	40 c9 3c 12 	.word 0x40c93c12
    7df8:	00 05 02 00 	l.j 1485f8 <__ram_length+0xc85f8>
    7dfc:	40 c9 40 15 	.word 0x40c94015
    7e00:	00 05 02 00 	l.j 148600 <__ram_length+0xc8600>
    7e04:	40 c9 44 15 	.word 0x40c94415
    7e08:	00 05 02 00 	l.j 148608 <__ram_length+0xc8608>
    7e0c:	40 c9 48 13 	.word 0x40c94813
    7e10:	00 05 02 00 	l.j 148610 <__ram_length+0xc8610>
    7e14:	40 c9 4c 15 	.word 0x40c94c15
    7e18:	00 05 02 00 	l.j 148618 <__ram_length+0xc8618>
    7e1c:	40 c9 60 15 	.word 0x40c96015
    7e20:	00 05 02 00 	l.j 148620 <__ram_length+0xc8620>
    7e24:	40 c9 6c 38 	.word 0x40c96c38
    7e28:	00 05 02 00 	l.j 148628 <__ram_length+0xc8628>
    7e2c:	40 c9 74 03 	.word 0x40c97403
    7e30:	62 01 00 05 	.word 0x62010005
    7e34:	02 00 40 c9 	l.j f8018158 <__stack+0xf7b9815c>
    7e38:	84 16 00 05 	l.lwz r0,0x5(r22)
    7e3c:	02 00 40 c9 	l.j f8018160 <__stack+0xf7b98164>
    7e40:	98 15 00 05 	l.lhs r0,0x5(r21)
    7e44:	02 00 40 c9 	l.j f8018168 <__stack+0xf7b9816c>
    7e48:	a4 15 00 05 	l.andi r0,r21,0x5
    7e4c:	02 00 40 c9 	l.j f8018170 <__stack+0xf7b98174>
    7e50:	b4 15 00 05 	l.mfspr r0,r21,0x5
    7e54:	02 00 40 c9 	l.j f8018178 <__stack+0xf7b9817c>
    7e58:	c8 15 00 05 	lf.ftoi.s r0,r21
    7e5c:	02 00 40 c9 	l.j f8018180 <__stack+0xf7b98184>
    7e60:	d0 15 00 05 	l.sd 0x5(r21),r0
    7e64:	02 00 40 c9 	l.j f8018188 <__stack+0xf7b9818c>
    7e68:	dc 15 00 05 	l.sh 0x5(r21),r0
    7e6c:	02 00 40 c9 	l.j f8018190 <__stack+0xf7b98194>
    7e70:	e0 13 00 05 	l.xor r0,r19,r0
    7e74:	02 00 40 c9 	l.j f8018198 <__stack+0xf7b9819c>
    7e78:	e4 15 00 05 	l.sfeq r21,r0
    7e7c:	02 00 40 c9 	l.j f80181a0 <__stack+0xf7b981a4>
    7e80:	e8 15 00 05 	.word 0xe8150005
    7e84:	02 00 40 c9 	l.j f80181a8 <__stack+0xf7b981ac>
    7e88:	ec 13 00 05 	.word 0xec130005
    7e8c:	02 00 40 c9 	l.j f80181b0 <__stack+0xf7b981b4>
    7e90:	f0 16 00 05 	l.cust5 r0,r22,r0,0x0,0x5
    7e94:	02 00 40 c9 	l.j f80181b8 <__stack+0xf7b981bc>
    7e98:	f4 12 00 05 	l.cust6 
    7e9c:	02 00 40 c9 	l.j f80181c0 <__stack+0xf7b981c4>
    7ea0:	f8 17 00 05 	l.cust7 
    7ea4:	02 00 40 c9 	l.j f80181c8 <__stack+0xf7b981cc>
    7ea8:	fc 12 00 05 	l.cust8 
    7eac:	02 00 40 ca 	l.j f80181d4 <__stack+0xf7b981d8>
    7eb0:	00 17 00 05 	l.j 5c7ec4 <__stack+0x147ec8>
    7eb4:	02 00 40 ca 	l.j f80181dc <__stack+0xf7b981e0>
    7eb8:	04 11 00 05 	l.jal 447ecc <_stack+0x2620c>
    7ebc:	02 00 40 ca 	l.j f80181e4 <__stack+0xf7b981e8>
    7ec0:	08 15 00 05 	.word 0x08150005
    7ec4:	02 00 40 ca 	l.j f80181ec <__stack+0xf7b981f0>
    7ec8:	0c 15 00 05 	l.bnf 547edc <__stack+0xc7ee0>
    7ecc:	02 00 40 ca 	l.j f80181f4 <__stack+0xf7b981f8>
    7ed0:	54 15 00 05 	.word 0x54150005
    7ed4:	02 00 40 cb 	l.j f8018200 <__stack+0xf7b98204>
    7ed8:	2c 15 00 05 	.word 0x2c150005
    7edc:	02 00 40 cb 	l.j f8018208 <__stack+0xf7b9820c>
    7ee0:	ec 16 00 05 	.word 0xec160005
    7ee4:	02 00 40 cb 	l.j f8018210 <__stack+0xf7b98214>
    7ee8:	f0 12 00 05 	l.cust5 r0,r18,r0,0x0,0x5
    7eec:	02 00 40 cb 	l.j f8018218 <__stack+0xf7b9821c>
    7ef0:	f4 16 00 05 	l.cust6 
    7ef4:	02 00 40 cb 	l.j f8018220 <__stack+0xf7b98224>
    7ef8:	f8 13 00 05 	l.cust7 
    7efc:	02 00 40 cb 	l.j f8018228 <__stack+0xf7b9822c>
    7f00:	fc 15 00 05 	l.cust8 
    7f04:	02 00 40 cc 	l.j f8018234 <__stack+0xf7b98238>
    7f08:	00 15 00 05 	l.j 547f1c <__stack+0xc7f20>
    7f0c:	02 00 40 cc 	l.j f801823c <__stack+0xf7b98240>
    7f10:	08 15 00 05 	.word 0x08150005
    7f14:	02 00 40 cc 	l.j f8018244 <__stack+0xf7b98248>
    7f18:	0c 15 00 05 	l.bnf 547f2c <__stack+0xc7f30>
    7f1c:	02 00 40 cc 	l.j f801824c <__stack+0xf7b98250>
    7f20:	18 15 00 05 	.word 0x18150005
    7f24:	02 00 40 cc 	l.j f8018254 <__stack+0xf7b98258>
    7f28:	20 16 00 05 	.word 0x20160005
    7f2c:	02 00 40 cc 	l.j f801825c <__stack+0xf7b98260>
    7f30:	28 15 00 05 	.word 0x28150005
    7f34:	02 00 40 cc 	l.j f8018264 <__stack+0xf7b98268>
    7f38:	34 19 00 05 	.word 0x34190005
    7f3c:	02 00 40 cc 	l.j f801826c <__stack+0xf7b98270>
    7f40:	50 4e 00 05 	.word 0x504e0005
    7f44:	02 00 40 cc 	l.j f8018274 <__stack+0xf7b98278>
    7f48:	58 03 48 01 	.word 0x58034801
    7f4c:	00 05 02 00 	l.j 14874c <__ram_length+0xc874c>
    7f50:	40 cc 60 15 	.word 0x40cc6015
    7f54:	00 05 02 00 	l.j 148754 <__ram_length+0xc8754>
    7f58:	40 cc 6c 26 	.word 0x40cc6c26
    7f5c:	00 05 02 00 	l.j 14875c <__ram_length+0xc875c>
    7f60:	40 cc 84 16 	.word 0x40cc8416
    7f64:	00 05 02 00 	l.j 148764 <__ram_length+0xc8764>
    7f68:	40 cc 88 13 	.word 0x40cc8813
    7f6c:	00 05 02 00 	l.j 14876c <__ram_length+0xc876c>
    7f70:	40 cc 8c 15 	.word 0x40cc8c15
    7f74:	00 05 02 00 	l.j 148774 <__ram_length+0xc8774>
    7f78:	40 cc 90 13 	.word 0x40cc9013
    7f7c:	00 05 02 00 	l.j 14877c <__ram_length+0xc877c>
    7f80:	40 cc 94 15 	.word 0x40cc9415
    7f84:	00 05 02 00 	l.j 148784 <__ram_length+0xc8784>
    7f88:	40 cc c0 16 	.word 0x40ccc016
    7f8c:	00 05 02 00 	l.j 14878c <__ram_length+0xc878c>
    7f90:	40 cc d0 01 	.word 0x40ccd001
    7f94:	00 05 02 00 	l.j 148794 <__ram_length+0xc8794>
    7f98:	40 cc d8 15 	.word 0x40ccd815
    7f9c:	00 05 02 00 	l.j 14879c <__ram_length+0xc879c>
    7fa0:	40 cc e0 17 	.word 0x40cce017
    7fa4:	00 05 02 00 	l.j 1487a4 <__ram_length+0xc87a4>
    7fa8:	40 cc f0 01 	.word 0x40ccf001
    7fac:	00 05 02 00 	l.j 1487ac <__ram_length+0xc87ac>
    7fb0:	40 cc f8 15 	.word 0x40ccf815
    7fb4:	00 05 02 00 	l.j 1487b4 <__ram_length+0xc87b4>
    7fb8:	40 cd 04 17 	.word 0x40cd0417
    7fbc:	00 05 02 00 	l.j 1487bc <__ram_length+0xc87bc>
    7fc0:	40 cd 14 01 	.word 0x40cd1401
    7fc4:	00 05 02 00 	l.j 1487c4 <__ram_length+0xc87c4>
    7fc8:	40 cd 1c 15 	.word 0x40cd1c15
    7fcc:	00 05 02 00 	l.j 1487cc <__ram_length+0xc87cc>
    7fd0:	40 cd 28 17 	.word 0x40cd2817
    7fd4:	00 05 02 00 	l.j 1487d4 <__ram_length+0xc87d4>
    7fd8:	40 cd 5c 22 	.word 0x40cd5c22
    7fdc:	00 05 02 00 	l.j 1487dc <__ram_length+0xc87dc>
    7fe0:	40 cd 64 0a 	.word 0x40cd640a
    7fe4:	00 05 02 00 	l.j 1487e4 <__ram_length+0xc87e4>
    7fe8:	40 cd 94 15 	.word 0x40cd9415
    7fec:	00 05 02 00 	l.j 1487ec <__ram_length+0xc87ec>
    7ff0:	40 cd a4 15 	.word 0x40cda415
    7ff4:	00 05 02 00 	l.j 1487f4 <__ram_length+0xc87f4>
    7ff8:	40 cd c0 15 	.word 0x40cdc015
    7ffc:	00 05 02 00 	l.j 1487fc <__ram_length+0xc87fc>
    8000:	40 cd cc 15 	.word 0x40cdcc15
    8004:	00 05 02 00 	l.j 148804 <__ram_length+0xc8804>
    8008:	40 cd e4 15 	.word 0x40cde415
    800c:	00 05 02 00 	l.j 14880c <__ram_length+0xc880c>
    8010:	40 cd f0 17 	.word 0x40cdf017
    8014:	00 05 02 00 	l.j 148814 <__ram_length+0xc8814>
    8018:	40 cd f8 15 	.word 0x40cdf815
    801c:	00 05 02 00 	l.j 14881c <__ram_length+0xc881c>
    8020:	40 ce 04 15 	.word 0x40ce0415
    8024:	00 05 02 00 	l.j 148824 <__ram_length+0xc8824>
    8028:	40 ce 18 15 	.word 0x40ce1815
    802c:	00 05 02 00 	l.j 14882c <__ram_length+0xc882c>
    8030:	40 ce 24 17 	.word 0x40ce2417
    8034:	00 05 02 00 	l.j 148834 <__ram_length+0xc8834>
    8038:	40 ce 2c 17 	.word 0x40ce2c17
    803c:	00 05 02 00 	l.j 14883c <__ram_length+0xc883c>
    8040:	40 ce 44 04 	.word 0x40ce4404
    8044:	02 03 93 7d 	l.j f80ece38 <__stack+0xf7c6ce3c>
    8048:	01 00 05 02 	l.j 4009450 <__stack+0x3b89454>
    804c:	00 40 ce 58 	l.j 103b9ac <__stack+0xbbb9b0>
    8050:	04 19 03 6e 	l.jal 648e08 <__stack+0x1c8e0c>
    8054:	01 00 05 02 	l.j 400945c <__stack+0x3b89460>
    8058:	00 40 ce 68 	l.j 103b9f8 <__stack+0xbbb9fc>
    805c:	04 1a 01 00 	l.jal 68845c <__stack+0x208460>
    8060:	05 02 00 40 	l.jal 4088160 <__stack+0x3c08164>
    8064:	ce 70 16 00 	.word 0xce701600
    8068:	05 02 00 40 	l.jal 4088168 <__stack+0x3c0816c>
    806c:	ce 84 04 02 	.word 0xce840402
    8070:	2c 00 05 02 	.word 0x2c000502
    8074:	00 40 ce 94 	l.j 103bac4 <__stack+0xbbbac8>
    8078:	04 19 03 66 	l.jal 648e10 <__stack+0x1c8e14>
    807c:	01 00 05 02 	l.j 4009484 <__stack+0x3b89488>
    8080:	00 40 ce a8 	l.j 103bb20 <__stack+0xbbbb24>
    8084:	04 1b 18 00 	l.jal 6ce084 <__stack+0x24e088>
    8088:	05 02 00 40 	l.jal 4088188 <__stack+0x3c0818c>
    808c:	ce b0 04 02 	.word 0xceb00402
    8090:	2a 00 05 02 	.word 0x2a000502
    8094:	00 40 ce b4 	l.j 103bb64 <__stack+0xbbbb68>
    8098:	04 1b 03 6b 	l.jal 6c8e44 <__stack+0x248e48>
    809c:	01 00 05 02 	l.j 40094a4 <__stack+0x3b894a8>
    80a0:	00 40 ce bc 	l.j 103bb90 <__stack+0xbbbb94>
    80a4:	15 00 05 02 	l.nop 0x502
    80a8:	00 40 ce c8 	l.j 103bbc8 <__stack+0xbbbbcc>
    80ac:	13 00 05 02 	l.bf fc0094b4 <__stack+0xfbb894b8>
    80b0:	00 40 ce cc 	l.j 103bbe0 <__stack+0xbbbbe4>
    80b4:	13 00 05 02 	l.bf fc0094bc <__stack+0xfbb894c0>
    80b8:	00 40 ce d8 	l.j 103bc18 <__stack+0xbbbc1c>
    80bc:	19 00 05 02 	l.movhi r8,0x502
    80c0:	00 40 ce dc 	l.j 103bc30 <__stack+0xbbbc34>
    80c4:	17 00 05 02 	.word 0x17000502
    80c8:	00 40 ce f0 	l.j 103bc88 <__stack+0xbbbc8c>
    80cc:	04 0c 8b 00 	l.jal 32accc <__ram_length+0x2aaccc>
    80d0:	05 02 00 40 	l.jal 40881d0 <__stack+0x3c081d4>
    80d4:	ce f0 17 00 	.word 0xcef01700
    80d8:	05 02 00 40 	l.jal 40881d8 <__stack+0x3c081dc>
    80dc:	ce fc 11 00 	.word 0xcefc1100
    80e0:	05 02 00 40 	l.jal 40881e0 <__stack+0x3c081e4>
    80e4:	cf 00 17 00 	.word 0xcf001700
    80e8:	05 02 00 40 	l.jal 40881e8 <__stack+0x3c081ec>
    80ec:	cf 14 11 00 	.word 0xcf141100
    80f0:	05 02 00 40 	l.jal 40881f0 <__stack+0x3c081f4>
    80f4:	cf 18 17 00 	.word 0xcf181700
    80f8:	05 02 00 40 	l.jal 40881f8 <__stack+0x3c081fc>
    80fc:	cf 20 16 00 	.word 0xcf201600
    8100:	05 02 00 40 	l.jal 4088200 <__stack+0x3c08204>
    8104:	cf 24 12 00 	.word 0xcf241200
    8108:	05 02 00 40 	l.jal 4088208 <__stack+0x3c0820c>
    810c:	cf 44 15 00 	.word 0xcf441500
    8110:	05 02 00 40 	l.jal 4088210 <__stack+0x3c08214>
    8114:	cf 48 15 00 	.word 0xcf481500
    8118:	05 02 00 40 	l.jal 4088218 <__stack+0x3c0821c>
    811c:	cf 4c 13 00 	.word 0xcf4c1300
    8120:	05 02 00 40 	l.jal 4088220 <__stack+0x3c08224>
    8124:	cf 50 15 00 	.word 0xcf501500
    8128:	05 02 00 40 	l.jal 4088228 <__stack+0x3c0822c>
    812c:	cf 5c 13 00 	.word 0xcf5c1300
    8130:	05 02 00 40 	l.jal 4088230 <__stack+0x3c08234>
    8134:	cf 60 15 00 	.word 0xcf601500
    8138:	05 02 00 40 	l.jal 4088238 <__stack+0x3c0823c>
    813c:	d0 24 13 00 	l.sd 0xb00(r4),r2
    8140:	05 02 00 40 	l.jal 4088240 <__stack+0x3c08244>
    8144:	d0 30 18 00 	l.sd 0x800(r16),r3
    8148:	05 02 00 40 	l.jal 4088248 <__stack+0x3c0824c>
    814c:	d1 00 15 00 	l.sd 0x4500(r0),r2
    8150:	05 02 00 40 	l.jal 4088250 <__stack+0x3c08254>
    8154:	d1 0c 04 15 	l.sd 0x4415(r12),r0
    8158:	ed 00 05 02 	.word 0xed000502
    815c:	00 40 d1 0c 	l.j 103c58c <__stack+0xbbc590>
    8160:	1a 00 05 02 	l.movhi r16,0x502
    8164:	00 40 d1 14 	l.j 103c5b4 <__stack+0xbbc5b8>
    8168:	0e 00 05 02 	l.bnf f8009570 <__stack+0xf7b89574>
    816c:	00 40 d1 18 	l.j 103c5cc <__stack+0xbbc5d0>
    8170:	1a 00 05 02 	l.movhi r16,0x502
    8174:	00 40 d1 1c 	l.j 103c5e4 <__stack+0xbbc5e8>
    8178:	0e 00 05 02 	l.bnf f8009580 <__stack+0xf7b89584>
    817c:	00 40 d1 20 	l.j 103c5fc <__stack+0xbbc600>
    8180:	1a 00 05 02 	l.movhi r16,0x502
    8184:	00 40 d1 28 	l.j 103c624 <__stack+0xbbc628>
    8188:	1b 00 05 02 	l.movhi r24,0x502
    818c:	00 40 d1 2c 	l.j 103c63c <__stack+0xbbc640>
    8190:	0f 00 05 02 	l.bnf fc009598 <__stack+0xfbb8959c>
    8194:	00 40 d1 30 	l.j 103c654 <__stack+0xbbc658>
    8198:	19 00 05 02 	l.movhi r8,0x502
    819c:	00 40 d1 3c 	l.j 103c68c <__stack+0xbbc690>
    81a0:	17 00 05 02 	.word 0x17000502
    81a4:	00 40 d1 40 	l.j 103c6a4 <__stack+0xbbc6a8>
    81a8:	21 00 05 02 	l.trap 0x502
    81ac:	00 40 d1 4c 	l.j 103c6dc <__stack+0xbbc6e0>
    81b0:	03 73 01 00 	l.j fdcc85b0 <__stack+0xfd8485b4>
    81b4:	05 02 00 40 	l.jal 40882b4 <__stack+0x3c082b8>
    81b8:	d1 64 21 00 	l.sd 0x5900(r4),r4
    81bc:	05 02 00 40 	l.jal 40882bc <__stack+0x3c082c0>
    81c0:	d1 68 03 73 	l.sd 0x5b73(r8),r0
    81c4:	01 00 05 02 	l.j 40095cc <__stack+0x3b895d0>
    81c8:	00 40 d1 6c 	l.j 103c778 <__stack+0xbbc77c>
    81cc:	21 00 05 02 	l.trap 0x502
    81d0:	00 40 d1 80 	l.j 103c7d0 <__stack+0xbbc7d4>
    81d4:	16 00 05 02 	.word 0x16000502
    81d8:	00 40 d1 8c 	l.j 103c808 <__stack+0xbbc80c>
    81dc:	15 00 05 02 	l.nop 0x502
    81e0:	00 40 d1 a0 	l.j 103c860 <__stack+0xbbc864>
    81e4:	15 00 05 02 	l.nop 0x502
    81e8:	00 40 d1 b0 	l.j 103c8a8 <__stack+0xbbc8ac>
    81ec:	16 00 05 02 	.word 0x16000502
    81f0:	00 40 d1 c4 	l.j 103c900 <__stack+0xbbc904>
    81f4:	16 00 05 02 	.word 0x16000502
    81f8:	00 40 d1 c8 	l.j 103c918 <__stack+0xbbc91c>
    81fc:	17 00 05 02 	.word 0x17000502
    8200:	00 40 d1 e8 	l.j 103c9a0 <__stack+0xbbc9a4>
    8204:	17 00 05 02 	.word 0x17000502
    8208:	00 40 d1 f8 	l.j 103c9e8 <__stack+0xbbc9ec>
    820c:	18 00 05 02 	l.movhi r0,0x502
    8210:	00 40 d2 18 	l.j 103ca70 <__stack+0xbbca74>
    8214:	03 66 01 00 	l.j fd988614 <__stack+0xfd508618>
    8218:	05 02 00 40 	l.jal 4088318 <__stack+0x3c0831c>
    821c:	d2 1c 30 00 	l.sd 0xffff8000(r28),r6
    8220:	05 02 00 40 	l.jal 4088320 <__stack+0x3c08324>
    8224:	d2 3c 18 00 	l.sd 0xffff8800(r28),r3
    8228:	05 02 00 40 	l.jal 4088328 <__stack+0x3c0832c>
    822c:	d2 48 17 00 	l.sd 0xffff9700(r8),r2
    8230:	05 02 00 40 	l.jal 4088330 <__stack+0x3c08334>
    8234:	d2 54 1b 00 	l.sd 0xffff9300(r20),r3
    8238:	05 02 00 40 	l.jal 4088338 <__stack+0x3c0833c>
    823c:	d2 5c 10 00 	l.sd 0xffff9000(r28),r2
    8240:	05 02 00 40 	l.jal 4088340 <__stack+0x3c08344>
    8244:	d2 74 18 00 	l.sd 0xffff9800(r20),r3
    8248:	05 02 00 40 	l.jal 4088348 <__stack+0x3c0834c>
    824c:	d2 78 04 08 	l.sd 0xffff9c08(r24),r0
    8250:	03 dd 7c 01 	l.j ff767254 <__stack+0xff2e7258>
    8254:	00 05 02 00 	l.j 148a54 <__ram_length+0xc8a54>
    8258:	40 d2 7c 04 	.word 0x40d27c04
    825c:	15 03 a3 03 	l.nop 0xa303
    8260:	01 00 05 02 	l.j 4009668 <__stack+0x3b8966c>
    8264:	00 40 d2 88 	l.j 103cc84 <__stack+0xbbcc88>
    8268:	16 00 05 02 	.word 0x16000502
    826c:	00 40 d2 94 	l.j 103ccbc <__stack+0xbbccc0>
    8270:	04 08 03 e9 	l.jal 209214 <__ram_length+0x189214>
    8274:	7c 01 00 05 	l.cust4 
    8278:	02 00 40 d2 	l.j f80185c0 <__stack+0xf7b985c4>
    827c:	9c 15 00 05 	l.addi r0,r21,0x5
    8280:	02 00 40 d2 	l.j f80185c8 <__stack+0xf7b985cc>
    8284:	a8 13 00 05 	l.ori r0,r19,0x5
    8288:	02 00 40 d2 	l.j f80185d0 <__stack+0xf7b985d4>
    828c:	bc 04 15 03 	l.sfeqi r4,0x1503
    8290:	9b 03 01 00 	l.lhs r24,0x100(r3)
    8294:	05 02 00 40 	l.jal 4088394 <__stack+0x3c08398>
    8298:	d2 d4 15 00 	l.sd 0xffffb500(r20),r2
    829c:	05 02 00 40 	l.jal 408839c <__stack+0x3c083a0>
    82a0:	d2 ec 15 00 	l.sd 0xffffbd00(r12),r2
    82a4:	05 02 00 40 	l.jal 40883a4 <__stack+0x3c083a8>
    82a8:	d2 f4 15 00 	l.sd 0xffffbd00(r20),r2
    82ac:	05 02 00 40 	l.jal 40883ac <__stack+0x3c083b0>
    82b0:	d2 f8 17 00 	l.sd 0xffffbf00(r24),r2
    82b4:	05 02 00 40 	l.jal 40883b4 <__stack+0x3c083b8>
    82b8:	d2 fc 18 00 	l.sd 0xffffb800(r28),r3
    82bc:	05 02 00 40 	l.jal 40883bc <__stack+0x3c083c0>
    82c0:	d3 00 0d 00 	l.sd 0xffffc500(r0),r1
    82c4:	05 02 00 40 	l.jal 40883c4 <__stack+0x3c083c8>
    82c8:	d3 04 13 00 	l.sd 0xffffc300(r4),r2
    82cc:	05 02 00 40 	l.jal 40883cc <__stack+0x3c083d0>
    82d0:	d3 08 16 00 	l.sd 0xffffc600(r8),r2
    82d4:	05 02 00 40 	l.jal 40883d4 <__stack+0x3c083d8>
    82d8:	d3 0c 15 00 	l.sd 0xffffc500(r12),r2
    82dc:	05 02 00 40 	l.jal 40883dc <__stack+0x3c083e0>
    82e0:	d3 10 15 00 	l.sd 0xffffc500(r16),r2
    82e4:	05 02 00 40 	l.jal 40883e4 <__stack+0x3c083e8>
    82e8:	d3 14 15 00 	l.sd 0xffffc500(r20),r2
    82ec:	05 02 00 40 	l.jal 40883ec <__stack+0x3c083f0>
    82f0:	d3 18 15 00 	l.sd 0xffffc500(r24),r2
    82f4:	05 02 00 40 	l.jal 40883f4 <__stack+0x3c083f8>
    82f8:	d3 1c 15 00 	l.sd 0xffffc500(r28),r2
    82fc:	05 02 00 40 	l.jal 40883fc <__stack+0x3c08400>
    8300:	d3 20 15 00 	l.sd 0xffffcd00(r0),r2
    8304:	05 02 00 40 	l.jal 4088404 <__stack+0x3c08408>
    8308:	d3 34 15 00 	l.sd 0xffffcd00(r20),r2
    830c:	05 02 00 40 	l.jal 408840c <__stack+0x3c08410>
    8310:	d3 38 15 00 	l.sd 0xffffcd00(r24),r2
    8314:	05 02 00 40 	l.jal 4088414 <__stack+0x3c08418>
    8318:	d3 3c 13 00 	l.sd 0xffffcb00(r28),r2
    831c:	05 02 00 40 	l.jal 408841c <__stack+0x3c08420>
    8320:	d3 40 15 00 	l.sd 0xffffd500(r0),r2
    8324:	05 02 00 40 	l.jal 4088424 <__stack+0x3c08428>
    8328:	d3 50 15 00 	l.sd 0xffffd500(r16),r2
    832c:	05 02 00 40 	l.jal 408842c <__stack+0x3c08430>
    8330:	d3 54 15 00 	l.sd 0xffffd500(r20),r2
    8334:	05 02 00 40 	l.jal 4088434 <__stack+0x3c08438>
    8338:	d3 58 17 00 	l.sd 0xffffd700(r24),r2
    833c:	05 02 00 40 	l.jal 408843c <__stack+0x3c08440>
    8340:	d3 5c 10 00 	l.sd 0xffffd000(r28),r2
    8344:	05 02 00 40 	l.jal 4088444 <__stack+0x3c08448>
    8348:	d3 60 15 00 	l.sd 0xffffdd00(r0),r2
    834c:	05 02 00 40 	l.jal 408844c <__stack+0x3c08450>
    8350:	d3 64 17 00 	l.sd 0xffffdf00(r4),r2
    8354:	05 02 00 40 	l.jal 4088454 <__stack+0x3c08458>
    8358:	d3 6c 17 00 	l.sd 0xffffdf00(r12),r2
    835c:	05 02 00 40 	l.jal 408845c <__stack+0x3c08460>
    8360:	d3 74 15 00 	l.sd 0xffffdd00(r20),r2
    8364:	05 02 00 40 	l.jal 4088464 <__stack+0x3c08468>
    8368:	d3 80 15 00 	l.sd 0xffffe500(r0),r2
    836c:	05 02 00 40 	l.jal 408846c <__stack+0x3c08470>
    8370:	d3 94 16 00 	l.sd 0xffffe600(r20),r2
    8374:	05 02 00 40 	l.jal 4088474 <__stack+0x3c08478>
    8378:	d3 9c 15 00 	l.sd 0xffffe500(r28),r2
    837c:	05 02 00 40 	l.jal 408847c <__stack+0x3c08480>
    8380:	d3 b0 22 00 	l.sd 0xffffea00(r16),r4
    8384:	05 02 00 40 	l.jal 4088484 <__stack+0x3c08488>
    8388:	d3 c0 16 00 	l.sd 0xfffff600(r0),r2
    838c:	05 02 00 40 	l.jal 408848c <__stack+0x3c08490>
    8390:	d3 cc 2b 00 	l.sd 0xfffff300(r12),r5
    8394:	05 02 00 40 	l.jal 4088494 <__stack+0x3c08498>
    8398:	d3 d4 15 00 	l.sd 0xfffff500(r20),r2
    839c:	05 02 00 40 	l.jal 408849c <__stack+0x3c084a0>
    83a0:	d3 e0 19 00 	l.sd 0xfffff900(r0),r3
    83a4:	05 02 00 40 	l.jal 40884a4 <__stack+0x3c084a8>
    83a8:	d3 f4 16 00 	l.sd 0xfffffe00(r20),r2
    83ac:	05 02 00 40 	l.jal 40884ac <__stack+0x3c084b0>
    83b0:	d4 18 1a 00 	l.sw 0x200(r24),r3
    83b4:	05 02 00 40 	l.jal 40884b4 <__stack+0x3c084b8>
    83b8:	d4 20 11 00 	l.sw 0x900(r0),r2
    83bc:	05 02 00 40 	l.jal 40884bc <__stack+0x3c084c0>
    83c0:	d4 44 17 00 	l.sw 0x1700(r4),r2
    83c4:	05 02 00 40 	l.jal 40884c4 <__stack+0x3c084c8>
    83c8:	d4 68 1d 00 	l.sw 0x1d00(r8),r3
    83cc:	05 02 00 40 	l.jal 40884cc <__stack+0x3c084d0>
    83d0:	d4 70 0e 00 	l.sw 0x1e00(r16),r1
    83d4:	05 02 00 40 	l.jal 40884d4 <__stack+0x3c084d8>
    83d8:	d4 84 1a 00 	l.sw 0x2200(r4),r3
    83dc:	05 02 00 40 	l.jal 40884dc <__stack+0x3c084e0>
    83e0:	d4 8c 11 00 	l.sw 0x2100(r12),r2
    83e4:	05 02 00 40 	l.jal 40884e4 <__stack+0x3c084e8>
    83e8:	d4 a8 17 00 	l.sw 0x2f00(r8),r2
    83ec:	05 02 00 40 	l.jal 40884ec <__stack+0x3c084f0>
    83f0:	d4 ac 15 00 	l.sw 0x2d00(r12),r2
    83f4:	05 02 00 40 	l.jal 40884f4 <__stack+0x3c084f8>
    83f8:	d4 b0 13 00 	l.sw 0x2b00(r16),r2
    83fc:	05 02 00 40 	l.jal 40884fc <__stack+0x3c08500>
    8400:	d4 bc 15 00 	l.sw 0x2d00(r28),r2
    8404:	05 02 00 40 	l.jal 4088504 <__stack+0x3c08508>
    8408:	d4 e8 15 00 	l.sw 0x3d00(r8),r2
    840c:	05 02 00 40 	l.jal 408850c <__stack+0x3c08510>
    8410:	d4 f4 15 00 	l.sw 0x3d00(r20),r2
    8414:	05 02 00 40 	l.jal 4088514 <__stack+0x3c08518>
    8418:	d5 28 15 00 	l.sw 0x4d00(r8),r2
    841c:	05 02 00 40 	l.jal 408851c <__stack+0x3c08520>
    8420:	d5 34 15 00 	l.sw 0x4d00(r20),r2
    8424:	05 02 00 40 	l.jal 4088524 <__stack+0x3c08528>
    8428:	d5 50 15 00 	l.sw 0x5500(r16),r2
    842c:	05 02 00 40 	l.jal 408852c <__stack+0x3c08530>
    8430:	d5 5c 16 00 	l.sw 0x5600(r28),r2
    8434:	05 02 00 40 	l.jal 4088534 <__stack+0x3c08538>
    8438:	d5 70 16 00 	l.sw 0x5e00(r16),r2
    843c:	05 02 00 40 	l.jal 408853c <__stack+0x3c08540>
    8440:	d5 98 1a 00 	l.sw 0x6200(r24),r3
    8444:	05 02 00 40 	l.jal 4088544 <__stack+0x3c08548>
    8448:	d5 a0 11 00 	l.sw 0x6900(r0),r2
    844c:	05 02 00 40 	l.jal 408854c <__stack+0x3c08550>
    8450:	d5 c4 17 00 	l.sw 0x7700(r4),r2
    8454:	05 02 00 40 	l.jal 4088554 <__stack+0x3c08558>
    8458:	d5 e8 1d 00 	l.sw 0x7d00(r8),r3
    845c:	05 02 00 40 	l.jal 408855c <__stack+0x3c08560>
    8460:	d5 f0 0e 00 	l.sw 0x7e00(r16),r1
    8464:	05 02 00 40 	l.jal 4088564 <__stack+0x3c08568>
    8468:	d6 04 1a 00 	l.sw 0xffff8200(r4),r3
    846c:	05 02 00 40 	l.jal 408856c <__stack+0x3c08570>
    8470:	d6 0c 11 00 	l.sw 0xffff8100(r12),r2
    8474:	05 02 00 40 	l.jal 4088574 <__stack+0x3c08578>
    8478:	d6 28 17 00 	l.sw 0xffff8f00(r8),r2
    847c:	05 02 00 40 	l.jal 408857c <__stack+0x3c08580>
    8480:	d6 2c 15 00 	l.sw 0xffff8d00(r12),r2
    8484:	05 02 00 40 	l.jal 4088584 <__stack+0x3c08588>
    8488:	d6 30 13 00 	l.sw 0xffff8b00(r16),r2
    848c:	05 02 00 40 	l.jal 408858c <__stack+0x3c08590>
    8490:	d6 3c 15 00 	l.sw 0xffff8d00(r28),r2
    8494:	05 02 00 40 	l.jal 4088594 <__stack+0x3c08598>
    8498:	d6 68 15 00 	l.sw 0xffff9d00(r8),r2
    849c:	05 02 00 40 	l.jal 408859c <__stack+0x3c085a0>
    84a0:	d6 74 15 00 	l.sw 0xffff9d00(r20),r2
    84a4:	05 02 00 40 	l.jal 40885a4 <__stack+0x3c085a8>
    84a8:	d6 a8 15 00 	l.sw 0xffffad00(r8),r2
    84ac:	05 02 00 40 	l.jal 40885ac <__stack+0x3c085b0>
    84b0:	d6 b4 15 00 	l.sw 0xffffad00(r20),r2
    84b4:	05 02 00 40 	l.jal 40885b4 <__stack+0x3c085b8>
    84b8:	d6 d0 15 00 	l.sw 0xffffb500(r16),r2
    84bc:	05 02 00 40 	l.jal 40885bc <__stack+0x3c085c0>
    84c0:	d6 dc 17 00 	l.sw 0xffffb700(r28),r2
    84c4:	05 02 00 40 	l.jal 40885c4 <__stack+0x3c085c8>
    84c8:	d6 f4 03 d2 	l.sw 0xffffbbd2(r20),r0
    84cc:	7e 01 00 05 	l.cust4 
    84d0:	02 00 40 d7 	l.j f801882c <__stack+0xf7b98830>
    84d4:	00 c2 00 05 	l.j 30884e8 <__stack+0x2c084ec>
    84d8:	02 00 40 d7 	l.j f8018834 <__stack+0xf7b98838>
    84dc:	18 03 d2 7e 	.word 0x1803d27e
    84e0:	01 00 05 02 	l.j 40098e8 <__stack+0x3b898ec>
    84e4:	00 40 d7 24 	l.j 103e174 <__stack+0xbbe178>
    84e8:	c2 00 05 02 	l.mtspr r0,r0,0x8502
    84ec:	00 40 d7 2c 	l.j 103e19c <__stack+0xbbe1a0>
    84f0:	16 00 05 02 	.word 0x16000502
    84f4:	00 40 d7 68 	l.j 103e294 <__stack+0xbbe298>
    84f8:	15 00 05 02 	l.nop 0x502
    84fc:	00 40 d7 6c 	l.j 103e2ac <__stack+0xbbe2b0>
    8500:	15 00 05 02 	l.nop 0x502
    8504:	00 40 d7 70 	l.j 103e2c4 <__stack+0xbbe2c8>
    8508:	13 00 05 02 	l.bf fc009910 <__stack+0xfbb89914>
    850c:	00 40 d7 7c 	l.j 103e2fc <__stack+0xbbe300>
    8510:	15 00 05 02 	l.nop 0x502
    8514:	00 40 d7 b0 	l.j 103e3d4 <__stack+0xbbe3d8>
    8518:	15 00 05 02 	l.nop 0x502
    851c:	00 40 d7 bc 	l.j 103e40c <__stack+0xbbe410>
    8520:	15 00 05 02 	l.nop 0x502
    8524:	00 40 d7 ec 	l.j 103e4d4 <__stack+0xbbe4d8>
    8528:	15 00 05 02 	l.nop 0x502
    852c:	00 40 d7 f8 	l.j 103e50c <__stack+0xbbe510>
    8530:	15 00 05 02 	l.nop 0x502
    8534:	00 40 d8 2c 	l.j 103e5e4 <__stack+0xbbe5e8>
    8538:	15 00 05 02 	l.nop 0x502
    853c:	00 40 d8 38 	l.j 103e61c <__stack+0xbbe620>
    8540:	17 00 05 02 	.word 0x17000502
    8544:	00 40 d8 58 	l.j 103e6a4 <__stack+0xbbe6a8>
    8548:	15 00 05 02 	l.nop 0x502
    854c:	00 40 d8 64 	l.j 103e6dc <__stack+0xbbe6e0>
    8550:	15 00 05 02 	l.nop 0x502
    8554:	00 40 d8 98 	l.j 103e7b4 <__stack+0xbbe7b8>
    8558:	15 00 05 02 	l.nop 0x502
    855c:	00 40 d8 9c 	l.j 103e7cc <__stack+0xbbe7d0>
    8560:	18 00 05 02 	l.movhi r0,0x502
    8564:	00 40 d8 a0 	l.j 103e7e4 <__stack+0xbbe7e8>
    8568:	10 00 05 02 	l.bf 9970 <__rom_size-0x109dc>
    856c:	00 40 d8 ac 	l.j 103e81c <__stack+0xbbe820>
    8570:	16 00 05 02 	.word 0x16000502
    8574:	00 40 d8 b8 	l.j 103e854 <__stack+0xbbe858>
    8578:	16 00 05 02 	.word 0x16000502
    857c:	00 40 d8 ec 	l.j 103e92c <__stack+0xbbe930>
    8580:	15 00 05 02 	l.nop 0x502
    8584:	00 40 d8 f0 	l.j 103e944 <__stack+0xbbe948>
    8588:	15 00 05 02 	l.nop 0x502
    858c:	00 40 d8 f4 	l.j 103e95c <__stack+0xbbe960>
    8590:	13 00 05 02 	l.bf fc009998 <__stack+0xfbb8999c>
    8594:	00 40 d9 00 	l.j 103e994 <__stack+0xbbe998>
    8598:	15 00 05 02 	l.nop 0x502
    859c:	00 40 d9 4c 	l.j 103eacc <__stack+0xbbead0>
    85a0:	15 00 05 02 	l.nop 0x502
    85a4:	00 40 d9 50 	l.j 103eae4 <__stack+0xbbeae8>
    85a8:	15 00 05 02 	l.nop 0x502
    85ac:	00 40 d9 54 	l.j 103eafc <__stack+0xbbeb00>
    85b0:	13 00 05 02 	l.bf fc0099b8 <__stack+0xfbb899bc>
    85b4:	00 40 d9 60 	l.j 103eb34 <__stack+0xbbeb38>
    85b8:	15 00 05 02 	l.nop 0x502
    85bc:	00 40 d9 ac 	l.j 103ec6c <__stack+0xbbec70>
    85c0:	15 00 05 02 	l.nop 0x502
    85c4:	00 40 d9 b0 	l.j 103ec84 <__stack+0xbbec88>
    85c8:	24 00 05 02 	l.rfe 
    85cc:	00 40 d9 b4 	l.j 103ec9c <__stack+0xbbeca0>
    85d0:	03 70 01 00 	l.j fdc089d0 <__stack+0xfd7889d4>
    85d4:	05 02 00 40 	l.jal 40886d4 <__stack+0x3c086d8>
    85d8:	d9 c0 22 00 	l.sb 0x7200(r0),r4
    85dc:	05 02 00 40 	l.jal 40886dc <__stack+0x3c086e0>
    85e0:	d9 cc 16 00 	l.sb 0x7600(r12),r2
    85e4:	05 02 00 40 	l.jal 40886e4 <__stack+0x3c086e8>
    85e8:	d9 d4 15 00 	l.sb 0x7500(r20),r2
    85ec:	05 02 00 40 	l.jal 40886ec <__stack+0x3c086f0>
    85f0:	d9 dc 17 00 	l.sb 0x7700(r28),r2
    85f4:	05 02 00 40 	l.jal 40886f4 <__stack+0x3c086f8>
    85f8:	d9 ec 15 00 	l.sb 0x7d00(r12),r2
    85fc:	05 02 00 40 	l.jal 40886fc <__stack+0x3c08700>
    8600:	d9 f4 15 00 	l.sb 0x7d00(r20),r2
    8604:	05 02 00 40 	l.jal 4088704 <__stack+0x3c08708>
    8608:	da 00 17 00 	l.sb 0xffff8700(r0),r2
    860c:	05 02 00 40 	l.jal 408870c <__stack+0x3c08710>
    8610:	da 0c 03 b7 	l.sb 0xffff83b7(r12),r0
    8614:	7d 01 00 05 	l.cust4 
    8618:	02 00 40 da 	l.j f8018980 <__stack+0xf7b98984>
    861c:	2c 16 00 05 	.word 0x2c160005
    8620:	02 00 40 da 	l.j f8018988 <__stack+0xf7b9898c>
    8624:	34 15 00 05 	.word 0x34150005
    8628:	02 00 40 da 	l.j f8018990 <__stack+0xf7b98994>
    862c:	38 13 00 05 	.word 0x38130005
    8630:	02 00 40 da 	l.j f8018998 <__stack+0xf7b9899c>
    8634:	3c 16 00 05 	.word 0x3c160005
    8638:	02 00 40 da 	l.j f80189a0 <__stack+0xf7b989a4>
    863c:	40 12 00 05 	.word 0x40120005
    8640:	02 00 40 da 	l.j f80189a8 <__stack+0xf7b989ac>
    8644:	44 17 00 05 	l.jr r0
    8648:	02 00 40 da 	l.j f80189b0 <__stack+0xf7b989b4>
    864c:	48 11 00 05 	l.jalr r0
    8650:	02 00 40 da 	l.j f80189b8 <__stack+0xf7b989bc>
    8654:	4c 15 00 05 	l.maci r21,0x5
    8658:	02 00 40 da 	l.j f80189c0 <__stack+0xf7b989c4>
    865c:	54 15 00 05 	.word 0x54150005
    8660:	02 00 40 da 	l.j f80189c8 <__stack+0xf7b989cc>
    8664:	60 15 00 05 	.word 0x60150005
    8668:	02 00 40 da 	l.j f80189d0 <__stack+0xf7b989d4>
    866c:	68 15 00 05 	.word 0x68150005
    8670:	02 00 40 da 	l.j f80189d8 <__stack+0xf7b989dc>
    8674:	80 15 00 05 	l.ld r0,0x5(r21)
    8678:	02 00 40 da 	l.j f80189e0 <__stack+0xf7b989e4>
    867c:	a0 17 00 05 	l.addic r0,r23,0x5
    8680:	02 00 40 da 	l.j f80189e8 <__stack+0xf7b989ec>
    8684:	b8 15 00 05 	l.slli r0,r21,0x5
    8688:	02 00 40 da 	l.j f80189f0 <__stack+0xf7b989f4>
    868c:	bc 15 00 05 	l.sfeqi r21,0x5
    8690:	02 00 40 da 	l.j f80189f8 <__stack+0xf7b989fc>
    8694:	e8 11 00 05 	.word 0xe8110005
    8698:	02 00 40 da 	l.j f8018a00 <__stack+0xf7b98a04>
    869c:	f8 10 00 05 	l.cust7 
    86a0:	02 00 40 db 	l.j f8018a0c <__stack+0xf7b98a10>
    86a4:	0c 3e 00 05 	l.bnf f886b8 <__stack+0xb086bc>
    86a8:	02 00 40 db 	l.j f8018a14 <__stack+0xf7b98a18>
    86ac:	10 10 00 05 	l.bf 4086c0 <ScanDirectory+0x10f0>
    86b0:	02 00 40 db 	l.j f8018a1c <__stack+0xf7b98a20>
    86b4:	18 18 00 05 	l.movhi r0,0x5
    86b8:	02 00 40 db 	l.j f8018a24 <__stack+0xf7b98a28>
    86bc:	1c 15 00 05 	.word 0x1c150005
    86c0:	02 00 40 db 	l.j f8018a2c <__stack+0xf7b98a30>
    86c4:	20 13 00 05 	.word 0x20130005
    86c8:	02 00 40 db 	l.j f8018a34 <__stack+0xf7b98a38>
    86cc:	24 16 00 05 	l.rfe 
    86d0:	02 00 40 db 	l.j f8018a3c <__stack+0xf7b98a40>
    86d4:	28 13 00 05 	.word 0x28130005
    86d8:	02 00 40 db 	l.j f8018a44 <__stack+0xf7b98a48>
    86dc:	2c 16 00 05 	.word 0x2c160005
    86e0:	02 00 40 db 	l.j f8018a4c <__stack+0xf7b98a50>
    86e4:	30 13 00 05 	.word 0x30130005
    86e8:	02 00 40 db 	l.j f8018a54 <__stack+0xf7b98a58>
    86ec:	34 15 00 05 	.word 0x34150005
    86f0:	02 00 40 db 	l.j f8018a5c <__stack+0xf7b98a60>
    86f4:	38 15 00 05 	.word 0x38150005
    86f8:	02 00 40 db 	l.j f8018a64 <__stack+0xf7b98a68>
    86fc:	3c 15 00 05 	.word 0x3c150005
    8700:	02 00 40 db 	l.j f8018a6c <__stack+0xf7b98a70>
    8704:	40 15 00 05 	.word 0x40150005
    8708:	02 00 40 db 	l.j f8018a74 <__stack+0xf7b98a78>
    870c:	44 15 00 05 	l.jr r0
    8710:	02 00 40 db 	l.j f8018a7c <__stack+0xf7b98a80>
    8714:	48 16 00 05 	l.jalr r0
    8718:	02 00 40 db 	l.j f8018a84 <__stack+0xf7b98a88>
    871c:	4c 12 00 05 	l.maci r18,0x5
    8720:	02 00 40 db 	l.j f8018a8c <__stack+0xf7b98a90>
    8724:	50 15 00 05 	.word 0x50150005
    8728:	02 00 40 db 	l.j f8018a94 <__stack+0xf7b98a98>
    872c:	54 15 00 05 	.word 0x54150005
    8730:	02 00 40 db 	l.j f8018a9c <__stack+0xf7b98aa0>
    8734:	58 15 00 05 	.word 0x58150005
    8738:	02 00 40 db 	l.j f8018aa4 <__stack+0xf7b98aa8>
    873c:	5c 15 00 05 	.word 0x5c150005
    8740:	02 00 40 db 	l.j f8018aac <__stack+0xf7b98ab0>
    8744:	68 15 00 05 	.word 0x68150005
    8748:	02 00 40 db 	l.j f8018ab4 <__stack+0xf7b98ab8>
    874c:	6c 13 00 05 	.word 0x6c130005
    8750:	02 00 40 db 	l.j f8018abc <__stack+0xf7b98ac0>
    8754:	84 15 00 05 	l.lwz r0,0x5(r21)
    8758:	02 00 40 db 	l.j f8018ac4 <__stack+0xf7b98ac8>
    875c:	a0 03 84 7f 	l.addic r0,r3,0xffff847f
    8760:	01 00 05 02 	l.j 4009b68 <__stack+0x3b89b6c>
    8764:	00 40 db a4 	l.j 103f5f4 <__stack+0xbbf5f8>
    8768:	90 00 05 02 	l.lbs r0,0x502(r0)
    876c:	00 40 db a8 	l.j 103f60c <__stack+0xbbf610>
    8770:	15 00 05 02 	l.nop 0x502
    8774:	00 40 db ac 	l.j 103f624 <__stack+0xbbf628>
    8778:	15 00 05 02 	l.nop 0x502
    877c:	00 40 db b0 	l.j 103f63c <__stack+0xbbf640>
    8780:	03 82 7f 01 	l.j fe0a8384 <__stack+0xfdc28388>
    8784:	00 05 02 00 	l.j 148f84 <__ram_length+0xc8f84>
    8788:	40 db bc 15 	.word 0x40dbbc15
    878c:	00 05 02 00 	l.j 148f8c <__ram_length+0xc8f8c>
    8790:	40 db f0 15 	.word 0x40dbf015
    8794:	00 05 02 00 	l.j 148f94 <__ram_length+0xc8f94>
    8798:	40 dc 24 15 	.word 0x40dc2415
    879c:	00 05 02 00 	l.j 148f9c <__ram_length+0xc8f9c>
    87a0:	40 dc 5c 15 	.word 0x40dc5c15
    87a4:	00 05 02 00 	l.j 148fa4 <__ram_length+0xc8fa4>
    87a8:	40 dc 70 15 	.word 0x40dc7015
    87ac:	00 05 02 00 	l.j 148fac <__ram_length+0xc8fac>
    87b0:	40 dc 84 15 	.word 0x40dc8415
    87b4:	00 05 02 00 	l.j 148fb4 <__ram_length+0xc8fb4>
    87b8:	40 dc 98 15 	.word 0x40dc9815
    87bc:	00 05 02 00 	l.j 148fbc <__ram_length+0xc8fbc>
    87c0:	40 dc ac 15 	.word 0x40dcac15
    87c4:	00 05 02 00 	l.j 148fc4 <__ram_length+0xc8fc4>
    87c8:	40 dc c0 15 	.word 0x40dcc015
    87cc:	00 05 02 00 	l.j 148fcc <__ram_length+0xc8fcc>
    87d0:	40 dc d4 15 	.word 0x40dcd415
    87d4:	00 05 02 00 	l.j 148fd4 <__ram_length+0xc8fd4>
    87d8:	40 dc e8 15 	.word 0x40dce815
    87dc:	00 05 02 00 	l.j 148fdc <__ram_length+0xc8fdc>
    87e0:	40 dc fc 15 	.word 0x40dcfc15
    87e4:	00 05 02 00 	l.j 148fe4 <__ram_length+0xc8fe4>
    87e8:	40 dd 10 15 	.word 0x40dd1015
    87ec:	00 05 02 00 	l.j 148fec <__ram_length+0xc8fec>
    87f0:	40 dd 24 15 	.word 0x40dd2415
    87f4:	00 05 02 00 	l.j 148ff4 <__ram_length+0xc8ff4>
    87f8:	40 dd 38 15 	.word 0x40dd3815
    87fc:	00 05 02 00 	l.j 148ffc <__ram_length+0xc8ffc>
    8800:	40 dd 4c 15 	.word 0x40dd4c15
    8804:	00 05 02 00 	l.j 149004 <__ram_length+0xc9004>
    8808:	40 dd 60 15 	.word 0x40dd6015
    880c:	00 05 02 00 	l.j 14900c <__ram_length+0xc900c>
    8810:	40 dd 74 15 	.word 0x40dd7415
    8814:	00 05 02 00 	l.j 149014 <__ram_length+0xc9014>
    8818:	40 dd 88 15 	.word 0x40dd8815
    881c:	00 05 02 00 	l.j 14901c <__ram_length+0xc901c>
    8820:	40 dd 9c 15 	.word 0x40dd9c15
    8824:	00 05 02 00 	l.j 149024 <__ram_length+0xc9024>
    8828:	40 dd b0 15 	.word 0x40ddb015
    882c:	00 05 02 00 	l.j 14902c <__ram_length+0xc902c>
    8830:	40 dd c4 15 	.word 0x40ddc415
    8834:	00 05 02 00 	l.j 149034 <__ram_length+0xc9034>
    8838:	40 dd e4 15 	.word 0x40dde415
    883c:	00 05 02 00 	l.j 14903c <__ram_length+0xc903c>
    8840:	40 de 1c 15 	.word 0x40de1c15
    8844:	00 05 02 00 	l.j 149044 <__ram_length+0xc9044>
    8848:	40 de 3c 15 	.word 0x40de3c15
    884c:	00 05 02 00 	l.j 14904c <__ram_length+0xc904c>
    8850:	40 de 50 15 	.word 0x40de5015
    8854:	00 05 02 00 	l.j 149054 <__ram_length+0xc9054>
    8858:	40 de 70 15 	.word 0x40de7015
    885c:	00 05 02 00 	l.j 14905c <__ram_length+0xc905c>
    8860:	40 de 90 15 	.word 0x40de9015
    8864:	00 05 02 00 	l.j 149064 <__ram_length+0xc9064>
    8868:	40 de c8 15 	.word 0x40dec815
    886c:	00 05 02 00 	l.j 14906c <__ram_length+0xc906c>
    8870:	40 de e8 15 	.word 0x40dee815
    8874:	00 05 02 00 	l.j 149074 <__ram_length+0xc9074>
    8878:	40 df 08 15 	.word 0x40df0815
    887c:	00 05 02 00 	l.j 14907c <__ram_length+0xc907c>
    8880:	40 df 40 15 	.word 0x40df4015
    8884:	00 05 02 00 	l.j 149084 <__ram_length+0xc9084>
    8888:	40 df 78 15 	.word 0x40df7815
    888c:	00 05 02 00 	l.j 14908c <__ram_length+0xc908c>
    8890:	40 df b0 03 	.word 0x40dfb003
    8894:	ed 02 01 00 	.word 0xed020100
    8898:	05 02 00 40 	l.jal 4088998 <__stack+0x3c0899c>
    889c:	df b4 15 00 	l.sh 0xffffed00(r20),r2
    88a0:	05 02 00 40 	l.jal 40889a0 <__stack+0x3c089a4>
    88a4:	df b8 13 00 	l.sh 0xffffeb00(r24),r2
    88a8:	05 02 00 40 	l.jal 40889a8 <__stack+0x3c089ac>
    88ac:	df c4 15 00 	l.sh 0xfffff500(r4),r2
    88b0:	05 02 00 40 	l.jal 40889b0 <__stack+0x3c089b4>
    88b4:	df e0 16 00 	l.sh 0xfffffe00(r0),r2
    88b8:	05 02 00 40 	l.jal 40889b8 <__stack+0x3c089bc>
    88bc:	df e8 15 00 	l.sh 0xfffffd00(r8),r2
    88c0:	05 02 00 40 	l.jal 40889c0 <__stack+0x3c089c4>
    88c4:	df ec 13 00 	l.sh 0xfffffb00(r12),r2
    88c8:	05 02 00 40 	l.jal 40889c8 <__stack+0x3c089cc>
    88cc:	df f0 15 00 	l.sh 0xfffffd00(r16),r2
    88d0:	05 02 00 40 	l.jal 40889d0 <__stack+0x3c089d4>
    88d4:	df f4 18 00 	l.sh 0xfffff800(r20),r3
    88d8:	05 02 00 40 	l.jal 40889d8 <__stack+0x3c089dc>
    88dc:	df f8 10 00 	l.sh 0xfffff800(r24),r2
    88e0:	05 02 00 40 	l.jal 40889e0 <__stack+0x3c089e4>
    88e4:	e0 00 15 00 	.word 0xe0001500
    88e8:	05 02 00 40 	l.jal 40889e8 <__stack+0x3c089ec>
    88ec:	e0 14 15 00 	.word 0xe0141500
    88f0:	05 02 00 40 	l.jal 40889f0 <__stack+0x3c089f4>
    88f4:	e0 1c 15 00 	.word 0xe01c1500
    88f8:	05 02 00 40 	l.jal 40889f8 <__stack+0x3c089fc>
    88fc:	e0 24 15 00 	.word 0xe0241500
    8900:	05 02 00 40 	l.jal 4088a00 <__stack+0x3c08a04>
    8904:	e0 e0 15 00 	.word 0xe0e01500
    8908:	05 02 00 40 	l.jal 4088a08 <__stack+0x3c08a0c>
    890c:	e0 e4 13 00 	.word 0xe0e41300
    8910:	05 02 00 40 	l.jal 4088a10 <__stack+0x3c08a14>
    8914:	e0 e8 15 00 	.word 0xe0e81500
    8918:	05 02 00 40 	l.jal 4088a18 <__stack+0x3c08a1c>
    891c:	e0 fc 16 00 	.word 0xe0fc1600
    8920:	05 02 00 40 	l.jal 4088a20 <__stack+0x3c08a24>
    8924:	e1 10 15 00 	.word 0xe1101500
    8928:	05 02 00 40 	l.jal 4088a28 <__stack+0x3c08a2c>
    892c:	e1 28 15 00 	.word 0xe1281500
    8930:	05 02 00 40 	l.jal 4088a30 <__stack+0x3c08a34>
    8934:	e1 30 16 00 	.word 0xe1301600
    8938:	05 02 00 40 	l.jal 4088a38 <__stack+0x3c08a3c>
    893c:	e1 3c 15 00 	.word 0xe13c1500
    8940:	05 02 00 40 	l.jal 4088a40 <__stack+0x3c08a44>
    8944:	e1 44 13 00 	.word 0xe1441300
    8948:	05 02 00 40 	l.jal 4088a48 <__stack+0x3c08a4c>
    894c:	e1 48 15 00 	.word 0xe1481500
    8950:	05 02 00 40 	l.jal 4088a50 <__stack+0x3c08a54>
    8954:	e1 4c 18 00 	l.add r10,r12,r3
    8958:	05 02 00 40 	l.jal 4088a58 <__stack+0x3c08a5c>
    895c:	e1 50 10 00 	l.add r10,r16,r2
    8960:	05 02 00 40 	l.jal 4088a60 <__stack+0x3c08a64>
    8964:	e1 54 15 00 	.word 0xe1541500
    8968:	05 02 00 40 	l.jal 4088a68 <__stack+0x3c08a6c>
    896c:	e1 64 15 00 	.word 0xe1641500
    8970:	05 02 00 40 	l.jal 4088a70 <__stack+0x3c08a74>
    8974:	e1 6c 15 00 	.word 0xe16c1500
    8978:	05 02 00 40 	l.jal 4088a78 <__stack+0x3c08a7c>
    897c:	e1 74 15 00 	.word 0xe1741500
    8980:	05 02 00 40 	l.jal 4088a80 <__stack+0x3c08a84>
    8984:	e2 34 15 00 	.word 0xe2341500
    8988:	05 02 00 40 	l.jal 4088a88 <__stack+0x3c08a8c>
    898c:	e2 38 15 00 	.word 0xe2381500
    8990:	05 02 00 40 	l.jal 4088a90 <__stack+0x3c08a94>
    8994:	e2 40 15 00 	.word 0xe2401500
    8998:	05 02 00 40 	l.jal 4088a98 <__stack+0x3c08a9c>
    899c:	e2 48 15 00 	.word 0xe2481500
    89a0:	05 02 00 40 	l.jal 4088aa0 <__stack+0x3c08aa4>
    89a4:	e2 54 1a 00 	.word 0xe2541a00
    89a8:	05 02 00 40 	l.jal 4088aa8 <__stack+0x3c08aac>
    89ac:	e2 5c 16 00 	.word 0xe25c1600
    89b0:	05 02 00 40 	l.jal 4088ab0 <__stack+0x3c08ab4>
    89b4:	e2 68 15 00 	.word 0xe2681500
    89b8:	05 02 00 40 	l.jal 4088ab8 <__stack+0x3c08abc>
    89bc:	e2 70 13 00 	.word 0xe2701300
    89c0:	05 02 00 40 	l.jal 4088ac0 <__stack+0x3c08ac4>
    89c4:	e2 74 15 00 	.word 0xe2741500
    89c8:	05 02 00 40 	l.jal 4088ac8 <__stack+0x3c08acc>
    89cc:	e2 78 18 00 	l.add r19,r24,r3
    89d0:	05 02 00 40 	l.jal 4088ad0 <__stack+0x3c08ad4>
    89d4:	e2 7c 10 00 	l.add r19,r28,r2
    89d8:	05 02 00 40 	l.jal 4088ad8 <__stack+0x3c08adc>
    89dc:	e2 80 15 00 	.word 0xe2801500
    89e0:	05 02 00 40 	l.jal 4088ae0 <__stack+0x3c08ae4>
    89e4:	e2 90 15 00 	.word 0xe2901500
    89e8:	05 02 00 40 	l.jal 4088ae8 <__stack+0x3c08aec>
    89ec:	e2 98 15 00 	.word 0xe2981500
    89f0:	05 02 00 40 	l.jal 4088af0 <__stack+0x3c08af4>
    89f4:	e2 a0 15 00 	.word 0xe2a01500
    89f8:	05 02 00 40 	l.jal 4088af8 <__stack+0x3c08afc>
    89fc:	e3 60 15 00 	.word 0xe3601500
    8a00:	05 02 00 40 	l.jal 4088b00 <__stack+0x3c08b04>
    8a04:	e3 64 15 00 	.word 0xe3641500
    8a08:	05 02 00 40 	l.jal 4088b08 <__stack+0x3c08b0c>
    8a0c:	e3 6c 15 00 	.word 0xe36c1500
    8a10:	05 02 00 40 	l.jal 4088b10 <__stack+0x3c08b14>
    8a14:	e3 70 15 00 	.word 0xe3701500
    8a18:	05 02 00 40 	l.jal 4088b18 <__stack+0x3c08b1c>
    8a1c:	e3 78 15 00 	.word 0xe3781500
    8a20:	05 02 00 40 	l.jal 4088b20 <__stack+0x3c08b24>
    8a24:	e3 7c 03 c8 	.word 0xe37c03c8
    8a28:	7e 01 00 05 	l.cust4 
    8a2c:	02 00 40 e3 	l.j f8018db8 <__stack+0xf7b98dbc>
    8a30:	80 cd 00 05 	l.ld r6,0x5(r13)
    8a34:	02 00 40 e4 	l.j f8018dc4 <__stack+0xf7b98dc8>
    8a38:	40 03 c7 7e 	.word 0x4003c77e
    8a3c:	01 00 05 02 	l.j 4009e44 <__stack+0x3b89e48>
    8a40:	00 40 e4 64 	l.j 1041bd0 <__stack+0xbc1bd4>
    8a44:	04 17 03 de 	l.jal 5c99bc <__stack+0x1499c0>
    8a48:	7d 01 00 05 	l.cust4 
    8a4c:	02 00 40 e4 	l.j f8018ddc <__stack+0xf7b98de0>
    8a50:	94 1e 00 05 	l.lhz r0,0x5(r30)
    8a54:	02 00 40 e4 	l.j f8018de4 <__stack+0xf7b98de8>
    8a58:	9c 01 00 05 	l.addi r0,r1,0x5
    8a5c:	02 00 40 e4 	l.j f8018dec <__stack+0xf7b98df0>
    8a60:	a8 16 00 05 	l.ori r0,r22,0x5
    8a64:	02 00 40 e4 	l.j f8018df4 <__stack+0xf7b98df8>
    8a68:	b8 15 00 05 	l.slli r0,r21,0x5
    8a6c:	02 00 40 e4 	l.j f8018dfc <__stack+0xf7b98e00>
    8a70:	c8 15 00 05 	lf.ftoi.s r0,r21
    8a74:	02 00 40 e4 	l.j f8018e04 <__stack+0xf7b98e08>
    8a78:	d4 1b 00 05 	l.sw 0x5(r27),r0
    8a7c:	02 00 40 e4 	l.j f8018e0c <__stack+0xf7b98e10>
    8a80:	ec 18 00 05 	.word 0xec180005
    8a84:	02 00 40 e4 	l.j f8018e14 <__stack+0xf7b98e18>
    8a88:	f0 15 00 05 	l.cust5 r0,r21,r0,0x0,0x5
    8a8c:	02 00 40 e4 	l.j f8018e1c <__stack+0xf7b98e20>
    8a90:	f4 13 00 05 	l.cust6 
    8a94:	02 00 40 e4 	l.j f8018e24 <__stack+0xf7b98e28>
    8a98:	f8 15 00 05 	l.cust7 
    8a9c:	02 00 40 e4 	l.j f8018e2c <__stack+0xf7b98e30>
    8aa0:	fc 11 00 05 	l.cust8 
    8aa4:	02 00 40 e5 	l.j f8018e38 <__stack+0xf7b98e3c>
    8aa8:	00 16 00 05 	l.j 588abc <__stack+0x108ac0>
    8aac:	02 00 40 e5 	l.j f8018e40 <__stack+0xf7b98e44>
    8ab0:	04 15 00 05 	l.jal 548ac4 <__stack+0xc8ac8>
    8ab4:	02 00 40 e5 	l.j f8018e48 <__stack+0xf7b98e4c>
    8ab8:	08 13 00 05 	.word 0x08130005
    8abc:	02 00 40 e5 	l.j f8018e50 <__stack+0xf7b98e54>
    8ac0:	0c 15 00 05 	l.bnf 548ad4 <__stack+0xc8ad8>
    8ac4:	02 00 40 e5 	l.j f8018e58 <__stack+0xf7b98e5c>
    8ac8:	10 13 00 05 	l.bf 4c8adc <__stack+0x48ae0>
    8acc:	02 00 40 e5 	l.j f8018e60 <__stack+0xf7b98e64>
    8ad0:	14 15 00 05 	.word 0x14150005
    8ad4:	02 00 40 e5 	l.j f8018e68 <__stack+0xf7b98e6c>
    8ad8:	18 15 00 05 	.word 0x18150005
    8adc:	02 00 40 e5 	l.j f8018e70 <__stack+0xf7b98e74>
    8ae0:	1c 15 00 05 	.word 0x1c150005
    8ae4:	02 00 40 e5 	l.j f8018e78 <__stack+0xf7b98e7c>
    8ae8:	20 13 00 05 	.word 0x20130005
    8aec:	02 00 40 e5 	l.j f8018e80 <__stack+0xf7b98e84>
    8af0:	24 11 00 05 	l.rfe 
    8af4:	02 00 40 e5 	l.j f8018e88 <__stack+0xf7b98e8c>
    8af8:	2c 1d 00 05 	.word 0x2c1d0005
    8afc:	02 00 40 e5 	l.j f8018e90 <__stack+0xf7b98e94>
    8b00:	30 15 00 05 	.word 0x30150005
    8b04:	02 00 40 e5 	l.j f8018e98 <__stack+0xf7b98e9c>
    8b08:	34 13 00 05 	.word 0x34130005
    8b0c:	02 00 40 e5 	l.j f8018ea0 <__stack+0xf7b98ea4>
    8b10:	38 15 00 05 	.word 0x38150005
    8b14:	02 00 40 e5 	l.j f8018ea8 <__stack+0xf7b98eac>
    8b18:	3c 12 00 05 	.word 0x3c120005
    8b1c:	02 00 40 e5 	l.j f8018eb0 <__stack+0xf7b98eb4>
    8b20:	40 16 00 05 	.word 0x40160005
    8b24:	02 00 40 e5 	l.j f8018eb8 <__stack+0xf7b98ebc>
    8b28:	50 17 00 05 	.word 0x50170005
    8b2c:	02 00 40 e5 	l.j f8018ec0 <__stack+0xf7b98ec4>
    8b30:	5c 15 00 05 	.word 0x5c150005
    8b34:	02 00 40 e5 	l.j f8018ec8 <__stack+0xf7b98ecc>
    8b38:	64 13 00 05 	.word 0x64130005
    8b3c:	02 00 40 e5 	l.j f8018ed0 <__stack+0xf7b98ed4>
    8b40:	68 15 00 05 	.word 0x68150005
    8b44:	02 00 40 e5 	l.j f8018ed8 <__stack+0xf7b98edc>
    8b48:	6c 24 00 05 	.word 0x6c240005
    8b4c:	02 00 40 e5 	l.j f8018ee0 <__stack+0xf7b98ee4>
    8b50:	70 03 70 01 	l.cust1 
    8b54:	00 05 02 00 	l.j 149354 <__ram_length+0xc9354>
    8b58:	40 e5 74 15 	.word 0x40e57415
    8b5c:	00 05 02 00 	l.j 14935c <__ram_length+0xc935c>
    8b60:	40 e5 78 23 	.word 0x40e57823
    8b64:	00 05 02 00 	l.j 149364 <__ram_length+0xc9364>
    8b68:	40 e5 7c 03 	.word 0x40e57c03
    8b6c:	71 01 00 05 	l.cust1 
    8b70:	02 00 40 e5 	l.j f8018f04 <__stack+0xf7b98f08>
    8b74:	80 15 00 05 	l.ld r0,0x5(r21)
    8b78:	02 00 40 e5 	l.j f8018f0c <__stack+0xf7b98f10>
    8b7c:	84 24 00 05 	l.lwz r1,0x5(r4)
    8b80:	02 00 40 e5 	l.j f8018f14 <__stack+0xf7b98f18>
    8b84:	88 03 70 01 	l.lws r0,0x7001(r3)
    8b88:	00 05 02 00 	l.j 149388 <__ram_length+0xc9388>
    8b8c:	40 e5 8c 15 	.word 0x40e58c15
    8b90:	00 05 02 00 	l.j 149390 <__ram_length+0xc9390>
    8b94:	40 e5 90 23 	.word 0x40e59023
    8b98:	00 05 02 00 	l.j 149398 <__ram_length+0xc9398>
    8b9c:	40 e5 94 03 	.word 0x40e59403
    8ba0:	71 01 00 05 	l.cust1 
    8ba4:	02 00 40 e5 	l.j f8018f38 <__stack+0xf7b98f3c>
    8ba8:	98 15 00 05 	l.lhs r0,0x5(r21)
    8bac:	02 00 40 e5 	l.j f8018f40 <__stack+0xf7b98f44>
    8bb0:	9c 03 e4 7e 	l.addi r0,r3,0xffffe47e
    8bb4:	01 00 05 02 	l.j 4009fbc <__stack+0x3b89fc0>
    8bb8:	00 40 e5 a0 	l.j 1042238 <__stack+0xbc223c>
    8bbc:	b0 00 05 02 	l.muli r0,r0,0x502
    8bc0:	00 40 e5 a4 	l.j 1042250 <__stack+0xbc2254>
    8bc4:	15 00 05 02 	l.nop 0x502
    8bc8:	00 40 e5 a8 	l.j 1042268 <__stack+0xbc226c>
    8bcc:	03 f1 7e 01 	l.j ffc683d0 <__stack+0xff7e83d4>
    8bd0:	00 05 02 00 	l.j 1493d0 <__ram_length+0xc93d0>
    8bd4:	40 e5 ac a3 	.word 0x40e5aca3
    8bd8:	00 05 02 00 	l.j 1493d8 <__ram_length+0xc93d8>
    8bdc:	40 e5 b0 15 	.word 0x40e5b015
    8be0:	00 05 02 00 	l.j 1493e0 <__ram_length+0xc93e0>
    8be4:	40 e5 b4 03 	.word 0x40e5b403
    8be8:	f7 7e 01 00 	l.cust6 
    8bec:	05 02 00 40 	l.jal 4088cec <__stack+0x3c08cf0>
    8bf0:	e5 b8 9d 00 	l.sfles r24,r19
    8bf4:	05 02 00 40 	l.jal 4088cf4 <__stack+0x3c08cf8>
    8bf8:	e5 bc 4c 00 	l.sfles r28,r9
    8bfc:	05 02 00 40 	l.jal 4088cfc <__stack+0x3c08d00>
    8c00:	e5 c0 03 52 	.word 0xe5c00352
    8c04:	01 00 05 02 	l.j 400a00c <__stack+0x3b8a010>
    8c08:	00 40 e5 d4 	l.j 1042358 <__stack+0xbc235c>
    8c0c:	19 00 05 02 	l.movhi r8,0x502
    8c10:	00 40 e5 d8 	l.j 1042370 <__stack+0xbc2374>
    8c14:	11 00 05 02 	l.bf 400a01c <__stack+0x3b8a020>
    8c18:	00 40 e5 dc 	l.j 1042388 <__stack+0xbc238c>
    8c1c:	17 00 05 02 	.word 0x17000502
    8c20:	00 40 e5 e4 	l.j 10423b0 <__stack+0xbc23b4>
    8c24:	15 00 05 02 	l.nop 0x502
    8c28:	00 40 e5 e8 	l.j 10423c8 <__stack+0xbc23cc>
    8c2c:	13 00 05 02 	l.bf fc00a034 <__stack+0xfbb8a038>
    8c30:	00 40 e5 ec 	l.j 10423e0 <__stack+0xbc23e4>
    8c34:	15 00 05 02 	l.nop 0x502
    8c38:	00 40 e5 f0 	l.j 10423f8 <__stack+0xbc23fc>
    8c3c:	15 00 05 02 	l.nop 0x502
    8c40:	00 40 e5 f4 	l.j 1042410 <__stack+0xbc2414>
    8c44:	13 00 05 02 	l.bf fc00a04c <__stack+0xfbb8a050>
    8c48:	00 40 e5 f8 	l.j 1042428 <__stack+0xbc242c>
    8c4c:	15 00 05 02 	l.nop 0x502
    8c50:	00 40 e5 fc 	l.j 1042440 <__stack+0xbc2444>
    8c54:	15 00 05 02 	l.nop 0x502
    8c58:	00 40 e6 00 	l.j 1042458 <__stack+0xbc245c>
    8c5c:	13 00 05 02 	l.bf fc00a064 <__stack+0xfbb8a068>
    8c60:	00 40 e6 04 	l.j 1042470 <__stack+0xbc2474>
    8c64:	15 00 05 02 	l.nop 0x502
    8c68:	00 40 e6 08 	l.j 1042488 <__stack+0xbc248c>
    8c6c:	15 00 05 02 	l.nop 0x502
    8c70:	00 40 e6 0c 	l.j 10424a0 <__stack+0xbc24a4>
    8c74:	13 00 05 02 	l.bf fc00a07c <__stack+0xfbb8a080>
    8c78:	00 40 e6 14 	l.j 10424c8 <__stack+0xbc24cc>
    8c7c:	15 00 05 02 	l.nop 0x502
    8c80:	00 40 e6 18 	l.j 10424e0 <__stack+0xbc24e4>
    8c84:	15 00 05 02 	l.nop 0x502
    8c88:	00 40 e6 1c 	l.j 10424f8 <__stack+0xbc24fc>
    8c8c:	12 00 05 02 	l.bf f800a094 <__stack+0xf7b8a098>
    8c90:	00 40 e6 20 	l.j 1042510 <__stack+0xbc2514>
    8c94:	18 00 05 02 	l.movhi r0,0x502
    8c98:	00 40 e6 24 	l.j 1042528 <__stack+0xbc252c>
    8c9c:	12 00 05 02 	l.bf f800a0a4 <__stack+0xf7b8a0a8>
    8ca0:	00 40 e6 28 	l.j 1042540 <__stack+0xbc2544>
    8ca4:	16 00 05 02 	.word 0x16000502
    8ca8:	00 40 e6 34 	l.j 1042578 <__stack+0xbc257c>
    8cac:	15 00 05 02 	l.nop 0x502
    8cb0:	00 40 e6 3c 	l.j 10425a0 <__stack+0xbc25a4>
    8cb4:	17 00 05 02 	.word 0x17000502
    8cb8:	00 40 e6 60 	l.j 1042638 <__stack+0xbc263c>
    8cbc:	01 00 05 02 	l.j 400a0c4 <__stack+0x3b8a0c8>
    8cc0:	00 40 e6 6c 	l.j 1042670 <__stack+0xbc2674>
    8cc4:	15 00 05 02 	l.nop 0x502
    8cc8:	00 40 e6 70 	l.j 1042688 <__stack+0xbc268c>
    8ccc:	22 00 05 02 	.word 0x22000502
    8cd0:	00 40 e6 80 	l.j 10426d0 <__stack+0xbc26d4>
    8cd4:	17 00 05 02 	.word 0x17000502
    8cd8:	00 40 e6 8c 	l.j 1042708 <__stack+0xbc270c>
    8cdc:	03 b6 7e 01 	l.j feda84e0 <__stack+0xfe9284e4>
    8ce0:	00 05 02 00 	l.j 1494e0 <__ram_length+0xc94e0>
    8ce4:	40 e6 90 1a 	.word 0x40e6901a
    8ce8:	00 05 02 00 	l.j 1494e8 <__ram_length+0xc94e8>
    8cec:	40 e6 94 0e 	.word 0x40e6940e
    8cf0:	00 05 02 00 	l.j 1494f0 <__ram_length+0xc94f0>
    8cf4:	40 e6 98 15 	.word 0x40e69815
    8cf8:	00 05 02 00 	l.j 1494f8 <__ram_length+0xc94f8>
    8cfc:	40 e6 9c 1a 	.word 0x40e69c1a
    8d00:	00 05 02 00 	l.j 149500 <__ram_length+0xc9500>
    8d04:	40 e6 a0 0e 	.word 0x40e6a00e
    8d08:	00 05 02 00 	l.j 149508 <__ram_length+0xc9508>
    8d0c:	40 e6 a4 15 	.word 0x40e6a415
    8d10:	00 05 02 00 	l.j 149510 <__ram_length+0xc9510>
    8d14:	40 e6 a8 21 	.word 0x40e6a821
    8d18:	00 05 02 00 	l.j 149518 <__ram_length+0xc9518>
    8d1c:	40 e6 ac 03 	.word 0x40e6ac03
    8d20:	73 01 00 05 	l.cust1 
    8d24:	02 00 40 e6 	l.j f80190bc <__stack+0xf7b990c0>
    8d28:	b0 15 00 05 	l.muli r0,r21,0x5
    8d2c:	02 00 40 e6 	l.j f80190c4 <__stack+0xf7b990c8>
    8d30:	b4 23 00 05 	l.mfspr r1,r3,0x5
    8d34:	02 00 40 e6 	l.j f80190cc <__stack+0xf7b990d0>
    8d38:	b8 03 71 01 	l.slli r0,r3,0x1
    8d3c:	00 05 02 00 	l.j 14953c <__ram_length+0xc953c>
    8d40:	40 e6 bc 17 	.word 0x40e6bc17
    8d44:	00 05 02 00 	l.j 149544 <__ram_length+0xc9544>
    8d48:	40 e6 c0 1d 	.word 0x40e6c01d
    8d4c:	00 05 02 00 	l.j 14954c <__ram_length+0xc954c>
    8d50:	40 e6 c4 0b 	.word 0x40e6c40b
    8d54:	00 05 02 00 	l.j 149554 <__ram_length+0xc9554>
    8d58:	40 e6 c8 15 	.word 0x40e6c815
    8d5c:	00 05 02 00 	l.j 14955c <__ram_length+0xc955c>
    8d60:	40 e6 cc 1f 	.word 0x40e6cc1f
    8d64:	00 05 02 00 	l.j 149564 <__ram_length+0xc9564>
    8d68:	40 e6 d0 03 	.word 0x40e6d003
    8d6c:	75 01 00 05 	l.cust2 
    8d70:	02 00 40 e6 	l.j f8019108 <__stack+0xf7b9910c>
    8d74:	d4 15 00 05 	l.sw 0x5(r21),r0
    8d78:	02 00 40 e6 	l.j f8019110 <__stack+0xf7b99114>
    8d7c:	d8 29 00 05 	l.sb 0x805(r9),r0
    8d80:	02 00 40 e6 	l.j f8019118 <__stack+0xf7b9911c>
    8d84:	dc 03 6b 01 	l.sh 0x301(r3),r13
    8d88:	00 05 02 00 	l.j 149588 <__ram_length+0xc9588>
    8d8c:	40 e6 e0 15 	.word 0x40e6e015
    8d90:	00 05 02 00 	l.j 149590 <__ram_length+0xc9590>
    8d94:	40 e6 e4 20 	.word 0x40e6e420
    8d98:	00 05 02 00 	l.j 149598 <__ram_length+0xc9598>
    8d9c:	40 e6 e8 03 	.word 0x40e6e803
    8da0:	74 01 00 05 	l.cust2 
    8da4:	02 00 40 e6 	l.j f801913c <__stack+0xf7b99140>
    8da8:	ec 19 00 05 	.word 0xec190005
    8dac:	02 00 40 e6 	l.j f8019144 <__stack+0xf7b99148>
    8db0:	f0 1b 00 05 	l.cust5 r0,r27,r0,0x0,0x5
    8db4:	02 00 40 e6 	l.j f801914c <__stack+0xf7b99150>
    8db8:	f4 0d 00 05 	l.cust6 
    8dbc:	02 00 40 e6 	l.j f8019154 <__stack+0xf7b99158>
    8dc0:	f8 17 00 05 	l.cust7 
    8dc4:	02 00 40 e6 	l.j f801915c <__stack+0xf7b99160>
    8dc8:	fc 18 00 05 	l.cust8 
    8dcc:	02 00 40 e7 	l.j f8019168 <__stack+0xf7b9916c>
    8dd0:	00 10 00 05 	l.j 408de4 <ScanDirectory+0x1814>
    8dd4:	02 00 40 e7 	l.j f8019170 <__stack+0xf7b99174>
    8dd8:	04 17 00 05 	l.jal 5c8dec <__stack+0x148df0>
    8ddc:	02 00 40 e7 	l.j f8019178 <__stack+0xf7b9917c>
    8de0:	08 1e 00 05 	.word 0x081e0005
    8de4:	02 00 40 e7 	l.j f8019180 <__stack+0xf7b99184>
    8de8:	0c 0a 00 05 	l.bnf 288dfc <__ram_length+0x208dfc>
    8dec:	02 00 40 e7 	l.j f8019188 <__stack+0xf7b9918c>
    8df0:	10 17 00 05 	l.bf 5c8e04 <__stack+0x148e08>
    8df4:	02 00 40 e7 	l.j f8019190 <__stack+0xf7b99194>
    8df8:	14 20 00 05 	.word 0x14200005
    8dfc:	02 00 40 e7 	l.j f8019198 <__stack+0xf7b9919c>
    8e00:	18 03 74 01 	.word 0x18037401
    8e04:	00 05 02 00 	l.j 149604 <__ram_length+0xc9604>
    8e08:	40 e7 1c 19 	.word 0x40e71c19
    8e0c:	00 05 02 00 	l.j 14960c <__ram_length+0xc960c>
    8e10:	40 e7 20 1c 	.word 0x40e7201c
    8e14:	00 05 02 00 	l.j 149614 <__ram_length+0xc9614>
    8e18:	40 e7 24 0c 	.word 0x40e7240c
    8e1c:	00 05 02 00 	l.j 14961c <__ram_length+0xc961c>
    8e20:	40 e7 28 17 	.word 0x40e72817
    8e24:	00 05 02 00 	l.j 149624 <__ram_length+0xc9624>
    8e28:	40 e7 2c 15 	.word 0x40e72c15
    8e2c:	00 05 02 00 	l.j 14962c <__ram_length+0xc962c>
    8e30:	40 e7 30 13 	.word 0x40e73013
    8e34:	00 05 02 00 	l.j 149634 <__ram_length+0xc9634>
    8e38:	40 e7 34 17 	.word 0x40e73417
    8e3c:	00 05 02 00 	l.j 14963c <__ram_length+0xc963c>
    8e40:	40 e7 38 13 	.word 0x40e73813
    8e44:	00 05 02 00 	l.j 149644 <__ram_length+0xc9644>
    8e48:	40 e7 3c 15 	.word 0x40e73c15
    8e4c:	00 05 02 00 	l.j 14964c <__ram_length+0xc964c>
    8e50:	40 e7 40 17 	.word 0x40e74017
    8e54:	00 05 02 00 	l.j 149654 <__ram_length+0xc9654>
    8e58:	40 e7 4c 19 	.word 0x40e74c19
    8e5c:	00 05 02 00 	l.j 14965c <__ram_length+0xc965c>
    8e60:	40 e7 64 13 	.word 0x40e76413
    8e64:	00 05 02 00 	l.j 149664 <__ram_length+0xc9664>
    8e68:	40 e7 70 18 	.word 0x40e77018
    8e6c:	00 05 02 00 	l.j 14966c <__ram_length+0xc966c>
    8e70:	40 e7 74 19 	.word 0x40e77419
    8e74:	00 05 02 00 	l.j 149674 <__ram_length+0xc9674>
    8e78:	40 e7 78 0f 	.word 0x40e7780f
    8e7c:	00 05 02 00 	l.j 14967c <__ram_length+0xc967c>
    8e80:	40 e7 7c 15 	.word 0x40e77c15
    8e84:	00 05 02 00 	l.j 149684 <__ram_length+0xc9684>
    8e88:	40 e7 80 19 	.word 0x40e78019
    8e8c:	00 05 02 00 	l.j 14968c <__ram_length+0xc968c>
    8e90:	40 e7 84 0f 	.word 0x40e7840f
    8e94:	00 05 02 00 	l.j 149694 <__ram_length+0xc9694>
    8e98:	40 e7 88 15 	.word 0x40e78815
    8e9c:	00 05 02 00 	l.j 14969c <__ram_length+0xc969c>
    8ea0:	40 e7 8c 19 	.word 0x40e78c19
    8ea4:	00 05 02 00 	l.j 1496a4 <__ram_length+0xc96a4>
    8ea8:	40 e7 90 0f 	.word 0x40e7900f
    8eac:	00 05 02 00 	l.j 1496ac <__ram_length+0xc96ac>
    8eb0:	40 e7 94 15 	.word 0x40e79415
    8eb4:	00 05 02 00 	l.j 1496b4 <__ram_length+0xc96b4>
    8eb8:	40 e7 98 1d 	.word 0x40e7981d
    8ebc:	00 05 02 00 	l.j 1496bc <__ram_length+0xc96bc>
    8ec0:	40 e7 9c 0b 	.word 0x40e79c0b
    8ec4:	00 05 02 00 	l.j 1496c4 <__ram_length+0xc96c4>
    8ec8:	40 e7 a0 15 	.word 0x40e7a015
    8ecc:	00 05 02 00 	l.j 1496cc <__ram_length+0xc96cc>
    8ed0:	40 e7 a4 1a 	.word 0x40e7a41a
    8ed4:	00 05 02 00 	l.j 1496d4 <__ram_length+0xc96d4>
    8ed8:	40 e7 a8 0e 	.word 0x40e7a80e
    8edc:	00 05 02 00 	l.j 1496dc <__ram_length+0xc96dc>
    8ee0:	40 e7 ac 15 	.word 0x40e7ac15
    8ee4:	00 05 02 00 	l.j 1496e4 <__ram_length+0xc96e4>
    8ee8:	40 e7 b4 15 	.word 0x40e7b415
    8eec:	00 05 02 00 	l.j 1496ec <__ram_length+0xc96ec>
    8ef0:	40 e7 bc 15 	.word 0x40e7bc15
    8ef4:	00 05 02 00 	l.j 1496f4 <__ram_length+0xc96f4>
    8ef8:	40 e7 c0 18 	.word 0x40e7c018
    8efc:	00 05 02 00 	l.j 1496fc <__ram_length+0xc96fc>
    8f00:	40 e7 c4 10 	.word 0x40e7c410
    8f04:	00 05 02 00 	l.j 149704 <__ram_length+0xc9704>
    8f08:	40 e7 c8 1c 	.word 0x40e7c81c
    8f0c:	00 05 02 00 	l.j 14970c <__ram_length+0xc970c>
    8f10:	40 e7 d4 18 	.word 0x40e7d418
    8f14:	00 05 02 00 	l.j 149714 <__ram_length+0xc9714>
    8f18:	40 e7 d8 15 	.word 0x40e7d815
    8f1c:	00 05 02 00 	l.j 14971c <__ram_length+0xc971c>
    8f20:	40 e7 e4 15 	.word 0x40e7e415
    8f24:	00 05 02 00 	l.j 149724 <__ram_length+0xc9724>
    8f28:	40 e7 e8 15 	.word 0x40e7e815
    8f2c:	00 05 02 00 	l.j 14972c <__ram_length+0xc972c>
    8f30:	40 e7 ec 12 	.word 0x40e7ec12
    8f34:	00 05 02 00 	l.j 149734 <__ram_length+0xc9734>
    8f38:	40 e7 f0 16 	.word 0x40e7f016
    8f3c:	00 05 02 00 	l.j 14973c <__ram_length+0xc973c>
    8f40:	40 e7 f8 15 	.word 0x40e7f815
    8f44:	00 05 02 00 	l.j 149744 <__ram_length+0xc9744>
    8f48:	40 e7 fc 15 	.word 0x40e7fc15
    8f4c:	00 05 02 00 	l.j 14974c <__ram_length+0xc974c>
    8f50:	40 e8 00 12 	.word 0x40e80012
    8f54:	00 05 02 00 	l.j 149754 <__ram_length+0xc9754>
    8f58:	40 e8 04 16 	.word 0x40e80416
    8f5c:	00 05 02 00 	l.j 14975c <__ram_length+0xc975c>
    8f60:	40 e8 0c 15 	.word 0x40e80c15
    8f64:	00 05 02 00 	l.j 149764 <__ram_length+0xc9764>
    8f68:	40 e8 10 15 	.word 0x40e81015
    8f6c:	00 05 02 00 	l.j 14976c <__ram_length+0xc976c>
    8f70:	40 e8 14 12 	.word 0x40e81412
    8f74:	00 05 02 00 	l.j 149774 <__ram_length+0xc9774>
    8f78:	40 e8 18 40 	.word 0x40e81840
    8f7c:	00 05 02 00 	l.j 14977c <__ram_length+0xc977c>
    8f80:	40 e8 1c 03 	.word 0x40e81c03
    8f84:	56 01 00 05 	.word 0x56010005
    8f88:	02 00 40 e8 	l.j f8019328 <__stack+0xf7b9932c>
    8f8c:	28 0b 00 05 	.word 0x280b0005
    8f90:	02 00 40 e8 	l.j f8019330 <__stack+0xf7b99334>
    8f94:	3c 21 00 05 	.word 0x3c210005
    8f98:	02 00 40 e8 	l.j f8019338 <__stack+0xf7b9933c>
    8f9c:	40 19 00 05 	.word 0x40190005
    8fa0:	02 00 40 e8 	l.j f8019340 <__stack+0xf7b99344>
    8fa4:	44 0f 00 05 	l.jr r0
    8fa8:	02 00 40 e8 	l.j f8019348 <__stack+0xf7b9934c>
    8fac:	48 15 00 05 	l.jalr r0
    8fb0:	02 00 40 e8 	l.j f8019350 <__stack+0xf7b99354>
    8fb4:	4c 18 00 05 	l.maci r24,0x5
    8fb8:	02 00 40 e8 	l.j f8019358 <__stack+0xf7b9935c>
    8fbc:	50 10 00 05 	.word 0x50100005
    8fc0:	02 00 40 e8 	l.j f8019360 <__stack+0xf7b99364>
    8fc4:	54 15 00 05 	.word 0x54150005
    8fc8:	02 00 40 e8 	l.j f8019368 <__stack+0xf7b9936c>
    8fcc:	58 17 00 05 	.word 0x58170005
    8fd0:	02 00 40 e8 	l.j f8019370 <__stack+0xf7b99374>
    8fd4:	5c 11 00 05 	.word 0x5c110005
    8fd8:	02 00 40 e8 	l.j f8019378 <__stack+0xf7b9937c>
    8fdc:	60 15 00 05 	.word 0x60150005
    8fe0:	02 00 40 e8 	l.j f8019380 <__stack+0xf7b99384>
    8fe4:	64 17 00 05 	.word 0x64170005
    8fe8:	02 00 40 e8 	l.j f8019388 <__stack+0xf7b9938c>
    8fec:	68 11 00 05 	.word 0x68110005
    8ff0:	02 00 40 e8 	l.j f8019390 <__stack+0xf7b99394>
    8ff4:	6c 15 00 05 	.word 0x6c150005
    8ff8:	02 00 40 e8 	l.j f8019398 <__stack+0xf7b9939c>
    8ffc:	70 16 00 05 	l.cust1 
    9000:	02 00 40 e8 	l.j f80193a0 <__stack+0xf7b993a4>
    9004:	74 12 00 05 	l.cust2 
    9008:	02 00 40 e8 	l.j f80193a8 <__stack+0xf7b993ac>
    900c:	78 17 00 05 	l.cust3 
    9010:	02 00 40 e8 	l.j f80193b0 <__stack+0xf7b993b4>
    9014:	7c 11 00 05 	l.cust4 
    9018:	02 00 40 e8 	l.j f80193b8 <__stack+0xf7b993bc>
    901c:	80 17 00 05 	l.ld r0,0x5(r23)
    9020:	02 00 40 e8 	l.j f80193c0 <__stack+0xf7b993c4>
    9024:	84 11 00 05 	l.lwz r0,0x5(r17)
    9028:	02 00 40 e8 	l.j f80193c8 <__stack+0xf7b993cc>
    902c:	8c 15 00 05 	l.lbz r0,0x5(r21)
    9030:	02 00 40 e8 	l.j f80193d0 <__stack+0xf7b993d4>
    9034:	94 15 00 05 	l.lhz r0,0x5(r21)
    9038:	02 00 40 e8 	l.j f80193d8 <__stack+0xf7b993dc>
    903c:	9c 15 00 05 	l.addi r0,r21,0x5
    9040:	02 00 40 e8 	l.j f80193e0 <__stack+0xf7b993e4>
    9044:	a4 18 00 05 	l.andi r0,r24,0x5
    9048:	02 00 40 e8 	l.j f80193e8 <__stack+0xf7b993ec>
    904c:	b0 16 00 05 	l.muli r0,r22,0x5
    9050:	02 00 40 e8 	l.j f80193f0 <__stack+0xf7b993f4>
    9054:	c8 13 00 05 	lf.ftoi.s r0,r19
    9058:	02 00 40 e8 	l.j f80193f8 <__stack+0xf7b993fc>
    905c:	e8 1b 00 05 	.word 0xe81b0005
    9060:	02 00 40 e8 	l.j f8019400 <__stack+0xf7b99404>
    9064:	fc 13 00 05 	l.cust8 
    9068:	02 00 40 e9 	l.j f801940c <__stack+0xf7b99410>
    906c:	10 87 00 05 	l.bf 21c9080 <__stack+0x1d49084>
    9070:	02 00 40 e9 	l.j f8019414 <__stack+0xf7b99418>
    9074:	18 03 99 7f 	.word 0x1803997f
    9078:	01 00 05 02 	l.j 400a480 <__stack+0x3b8a484>
    907c:	00 40 e9 20 	l.j 10434fc <__stack+0xbc3500>
    9080:	15 00 05 02 	l.nop 0x502
    9084:	00 40 e9 28 	l.j 1043524 <__stack+0xbc3528>
    9088:	13 00 05 02 	l.bf fc00a490 <__stack+0xfbb8a494>
    908c:	00 40 e9 40 	l.j 104358c <__stack+0xbc3590>
    9090:	81 00 05 02 	l.ld r8,0x502(r0)
    9094:	00 40 e9 44 	l.j 10435a4 <__stack+0xbc35a8>
    9098:	17 00 05 02 	.word 0x17000502
    909c:	00 40 e9 54 	l.j 10435ec <__stack+0xbc35f0>
    90a0:	18 00 05 02 	l.movhi r0,0x502
    90a4:	00 40 e9 60 	l.j 1043624 <__stack+0xbc3628>
    90a8:	17 00 05 02 	.word 0x17000502
    90ac:	00 40 e9 64 	l.j 104363c <__stack+0xbc3640>
    90b0:	15 00 05 02 	l.nop 0x502
    90b4:	00 40 e9 70 	l.j 1043674 <__stack+0xbc3678>
    90b8:	16 00 05 02 	.word 0x16000502
    90bc:	00 40 e9 7c 	l.j 10436ac <__stack+0xbc36b0>
    90c0:	1e 00 05 02 	.word 0x1e000502
    90c4:	00 40 e9 84 	l.j 10436d4 <__stack+0xbc36d8>
    90c8:	10 00 05 02 	l.bf a4d0 <__rom_size-0xfe7c>
    90cc:	00 40 e9 88 	l.j 10436ec <__stack+0xbc36f0>
    90d0:	13 00 05 02 	l.bf fc00a4d8 <__stack+0xfbb8a4dc>
    90d4:	00 40 e9 8c 	l.j 1043704 <__stack+0xbc3708>
    90d8:	13 00 05 02 	l.bf fc00a4e0 <__stack+0xfbb8a4e4>
    90dc:	00 40 e9 90 	l.j 104371c <__stack+0xbc3720>
    90e0:	15 00 05 02 	l.nop 0x502
    90e4:	00 40 e9 9c 	l.j 1043754 <__stack+0xbc3758>
    90e8:	15 00 05 02 	l.nop 0x502
    90ec:	00 40 e9 ac 	l.j 104379c <__stack+0xbc37a0>
    90f0:	18 00 05 02 	l.movhi r0,0x502
    90f4:	00 40 e9 b0 	l.j 10437b4 <__stack+0xbc37b8>
    90f8:	15 00 05 02 	l.nop 0x502
    90fc:	00 40 e9 bc 	l.j 10437ec <__stack+0xbc37f0>
    9100:	1d 00 05 02 	.word 0x1d000502
    9104:	00 40 e9 f0 	l.j 10438c4 <__stack+0xbc38c8>
    9108:	04 0f 03 cc 	l.jal 3ca038 <__ram_length+0x34a038>
    910c:	05 01 00 05 	l.jal 4049120 <__stack+0x3bc9124>
    9110:	02 00 40 e9 	l.j f80194b4 <__stack+0xf7b994b8>
    9114:	f0 18 00 05 	l.cust5 r0,r24,r0,0x0,0x5
    9118:	02 00 40 e9 	l.j f80194bc <__stack+0xf7b994c0>
    911c:	f8 10 00 05 	l.cust7 
    9120:	02 00 40 ea 	l.j f80194c8 <__stack+0xf7b994cc>
    9124:	04 18 00 05 	l.jal 609138 <__stack+0x18913c>
    9128:	02 00 40 ea 	l.j f80194d0 <__stack+0xf7b994d4>
    912c:	08 10 00 05 	.word 0x08100005
    9130:	02 00 40 ea 	l.j f80194d8 <__stack+0xf7b994dc>
    9134:	0c 18 00 05 	l.bnf 609148 <__stack+0x18914c>
    9138:	02 00 40 ea 	l.j f80194e0 <__stack+0xf7b994e4>
    913c:	24 1a 00 05 	l.rfe 
    9140:	02 00 40 ea 	l.j f80194e8 <__stack+0xf7b994ec>
    9144:	28 11 00 05 	.word 0x28110005
    9148:	02 00 40 ea 	l.j f80194f0 <__stack+0xf7b994f4>
    914c:	2c 15 00 05 	.word 0x2c150005
    9150:	02 00 40 ea 	l.j f80194f8 <__stack+0xf7b994fc>
    9154:	30 13 00 05 	.word 0x30130005
    9158:	02 00 40 ea 	l.j f8019500 <__stack+0xf7b99504>
    915c:	38 17 00 05 	.word 0x38170005
    9160:	02 00 40 ea 	l.j f8019508 <__stack+0xf7b9950c>
    9164:	4c 15 00 05 	l.maci r21,0x5
    9168:	02 00 40 ea 	l.j f8019510 <__stack+0xf7b99514>
    916c:	60 15 00 05 	.word 0x60150005
    9170:	02 00 40 ea 	l.j f8019518 <__stack+0xf7b9951c>
    9174:	a4 15 00 05 	l.andi r0,r21,0x5
    9178:	02 00 40 ea 	l.j f8019520 <__stack+0xf7b99524>
    917c:	ac 15 00 05 	l.xori r0,r21,0x5
    9180:	02 00 40 ea 	l.j f8019528 <__stack+0xf7b9952c>
    9184:	c0 16 00 05 	l.mtspr r22,r0,0x5
    9188:	02 00 40 ea 	l.j f8019530 <__stack+0xf7b99534>
    918c:	cc 16 00 05 	.word 0xcc160005
    9190:	02 00 40 ea 	l.j f8019538 <__stack+0xf7b9953c>
    9194:	f8 0a 00 05 	l.cust7 
    9198:	02 00 40 eb 	l.j f8019544 <__stack+0xf7b99548>
    919c:	08 21 00 05 	.word 0x08210005
    91a0:	02 00 40 eb 	l.j f801954c <__stack+0xf7b99550>
    91a4:	10 19 00 05 	l.bf 6491b8 <__stack+0x1c91bc>
    91a8:	02 00 40 eb 	l.j f8019554 <__stack+0xf7b99558>
    91ac:	18 0d 00 05 	.word 0x180d0005
    91b0:	02 00 40 eb 	l.j f801955c <__stack+0xf7b99560>
    91b4:	1c 1b 00 05 	.word 0x1c1b0005
    91b8:	02 00 40 eb 	l.j f8019564 <__stack+0xf7b99568>
    91bc:	34 04 12 03 	.word 0x34041203
    91c0:	f8 7a 01 00 	l.cust7 
    91c4:	05 02 00 40 	l.jal 40892c4 <__stack+0x3c092c8>
    91c8:	eb 34 1d 00 	.word 0xeb341d00
    91cc:	05 02 00 40 	l.jal 40892cc <__stack+0x3c092d0>
    91d0:	eb 38 0b 00 	.word 0xeb380b00
    91d4:	05 02 00 40 	l.jal 40892d4 <__stack+0x3c092d8>
    91d8:	eb 3c 1d 00 	.word 0xeb3c1d00
    91dc:	05 02 00 40 	l.jal 40892dc <__stack+0x3c092e0>
    91e0:	eb 40 0b 00 	.word 0xeb400b00
    91e4:	05 02 00 40 	l.jal 40892e4 <__stack+0x3c092e8>
    91e8:	eb 48 1d 00 	.word 0xeb481d00
    91ec:	05 02 00 40 	l.jal 40892ec <__stack+0x3c092f0>
    91f0:	eb 4c 0b 00 	.word 0xeb4c0b00
    91f4:	05 02 00 40 	l.jal 40892f4 <__stack+0x3c092f8>
    91f8:	eb 50 1d 00 	.word 0xeb501d00
    91fc:	05 02 00 40 	l.jal 40892fc <__stack+0x3c09300>
    9200:	eb 54 18 00 	.word 0xeb541800
    9204:	05 02 00 40 	l.jal 4089304 <__stack+0x3c09308>
    9208:	eb 5c 03 73 	.word 0xeb5c0373
    920c:	01 00 05 02 	l.j 400a614 <__stack+0x3b8a618>
    9210:	00 40 eb 60 	l.j 1043f90 <__stack+0xbc3f94>
    9214:	21 00 05 02 	l.trap 0x502
    9218:	00 40 eb 64 	l.j 1043fa8 <__stack+0xbc3fac>
    921c:	1a 00 05 02 	l.movhi r16,0x502
    9220:	00 40 eb 68 	l.j 1043fc0 <__stack+0xbc3fc4>
    9224:	0e 00 05 02 	l.bnf f800a62c <__stack+0xf7b8a630>
    9228:	00 40 eb 6c 	l.j 1043fd8 <__stack+0xbc3fdc>
    922c:	15 00 05 02 	l.nop 0x502
    9230:	00 40 eb 70 	l.j 1043ff0 <__stack+0xbc3ff4>
    9234:	18 00 05 02 	l.movhi r0,0x502
    9238:	00 40 eb 74 	l.j 1044008 <__stack+0xbc400c>
    923c:	10 00 05 02 	l.bf a644 <__rom_size-0xfd08>
    9240:	00 40 eb 9c 	l.j 10440b0 <__stack+0xbc40b4>
    9244:	18 00 05 02 	l.movhi r0,0x502
    9248:	00 40 eb a4 	l.j 10440d8 <__stack+0xbc40dc>
    924c:	12 00 05 02 	l.bf f800a654 <__stack+0xf7b8a658>
    9250:	00 40 eb b8 	l.j 1044130 <__stack+0xbc4134>
    9254:	22 00 05 02 	.word 0x22000502
    9258:	00 40 eb bc 	l.j 1044148 <__stack+0xbc414c>
    925c:	0f 00 05 02 	l.bnf fc00a664 <__stack+0xfbb8a668>
    9260:	00 40 eb c0 	l.j 1044160 <__stack+0xbc4164>
    9264:	19 00 05 02 	l.movhi r8,0x502
    9268:	00 40 eb c4 	l.j 1044178 <__stack+0xbc417c>
    926c:	0f 00 05 02 	l.bnf fc00a674 <__stack+0xfbb8a678>
    9270:	00 40 eb c8 	l.j 1044190 <__stack+0xbc4194>
    9274:	19 00 05 02 	l.movhi r8,0x502
    9278:	00 40 eb d0 	l.j 10441b8 <__stack+0xbc41bc>
    927c:	0f 00 05 02 	l.bnf fc00a684 <__stack+0xfbb8a688>
    9280:	00 40 eb d4 	l.j 10441d0 <__stack+0xbc41d4>
    9284:	19 00 05 02 	l.movhi r8,0x502
    9288:	00 40 eb d8 	l.j 10441e8 <__stack+0xbc41ec>
    928c:	0f 00 05 02 	l.bnf fc00a694 <__stack+0xfbb8a698>
    9290:	00 40 eb dc 	l.j 1044200 <__stack+0xbc4204>
    9294:	19 00 05 02 	l.movhi r8,0x502
    9298:	00 40 eb e0 	l.j 1044218 <__stack+0xbc421c>
    929c:	15 00 05 02 	l.nop 0x502
    92a0:	00 40 eb e4 	l.j 1044230 <__stack+0xbc4234>
    92a4:	16 00 05 02 	.word 0x16000502
    92a8:	00 40 eb e8 	l.j 1044248 <__stack+0xbc424c>
    92ac:	15 00 05 02 	l.nop 0x502
    92b0:	00 40 eb ec 	l.j 1044260 <__stack+0xbc4264>
    92b4:	15 00 05 02 	l.nop 0x502
    92b8:	00 40 eb f0 	l.j 1044278 <__stack+0xbc427c>
    92bc:	15 00 05 02 	l.nop 0x502
    92c0:	00 40 eb f4 	l.j 1044290 <__stack+0xbc4294>
    92c4:	15 00 05 02 	l.nop 0x502
    92c8:	00 40 eb f8 	l.j 10442a8 <__stack+0xbc42ac>
    92cc:	15 00 05 02 	l.nop 0x502
    92d0:	00 40 eb fc 	l.j 10442c0 <__stack+0xbc42c4>
    92d4:	15 00 05 02 	l.nop 0x502
    92d8:	00 40 ec 00 	l.j 10442d8 <__stack+0xbc42dc>
    92dc:	03 59 01 00 	l.j fd6496dc <__stack+0xfd1c96e0>
    92e0:	05 02 00 40 	l.jal 40893e0 <__stack+0x3c093e4>
    92e4:	ec 04 25 00 	.word 0xec042500
    92e8:	05 02 00 40 	l.jal 40893e8 <__stack+0x3c093ec>
    92ec:	ec 08 17 00 	.word 0xec081700
    92f0:	05 02 00 40 	l.jal 40893f0 <__stack+0x3c093f4>
    92f4:	ec 0c 1f 00 	.word 0xec0c1f00
    92f8:	05 02 00 40 	l.jal 40893f8 <__stack+0x3c093fc>
    92fc:	ec 14 11 00 	.word 0xec141100
    9300:	05 02 00 40 	l.jal 4089400 <__stack+0x3c09404>
    9304:	ec 20 17 00 	.word 0xec201700
    9308:	05 02 00 40 	l.jal 4089408 <__stack+0x3c0940c>
    930c:	ec 28 15 00 	.word 0xec281500
    9310:	05 02 00 40 	l.jal 4089410 <__stack+0x3c09414>
    9314:	ec 30 15 00 	.word 0xec301500
    9318:	05 02 00 40 	l.jal 4089418 <__stack+0x3c0941c>
    931c:	ec 58 15 00 	.word 0xec581500
    9320:	05 02 00 40 	l.jal 4089420 <__stack+0x3c09424>
    9324:	ec 80 15 00 	.word 0xec801500
    9328:	05 02 00 40 	l.jal 4089428 <__stack+0x3c0942c>
    932c:	ec a8 15 00 	.word 0xeca81500
    9330:	05 02 00 40 	l.jal 4089430 <__stack+0x3c09434>
    9334:	ec d0 15 00 	.word 0xecd01500
    9338:	05 02 00 40 	l.jal 4089438 <__stack+0x3c0943c>
    933c:	ec f8 15 00 	.word 0xecf81500
    9340:	05 02 00 40 	l.jal 4089440 <__stack+0x3c09444>
    9344:	ed 20 15 00 	.word 0xed201500
    9348:	05 02 00 40 	l.jal 4089448 <__stack+0x3c0944c>
    934c:	ed 48 15 00 	.word 0xed481500
    9350:	05 02 00 40 	l.jal 4089450 <__stack+0x3c09454>
    9354:	ed 70 15 00 	.word 0xed701500
    9358:	05 02 00 40 	l.jal 4089458 <__stack+0x3c0945c>
    935c:	ed 78 15 00 	.word 0xed781500
    9360:	05 02 00 40 	l.jal 4089460 <__stack+0x3c09464>
    9364:	ed 80 15 00 	.word 0xed801500
    9368:	05 02 00 40 	l.jal 4089468 <__stack+0x3c0946c>
    936c:	ed 88 15 00 	.word 0xed881500
    9370:	05 02 00 40 	l.jal 4089470 <__stack+0x3c09474>
    9374:	ed 90 15 00 	.word 0xed901500
    9378:	05 02 00 40 	l.jal 4089478 <__stack+0x3c0947c>
    937c:	ed 98 16 00 	.word 0xed981600
    9380:	05 02 00 40 	l.jal 4089480 <__stack+0x3c09484>
    9384:	ed a4 16 00 	.word 0xeda41600
    9388:	05 02 00 40 	l.jal 4089488 <__stack+0x3c0948c>
    938c:	ed b0 15 00 	.word 0xedb01500
    9390:	05 02 00 40 	l.jal 4089490 <__stack+0x3c09494>
    9394:	ed c0 17 00 	.word 0xedc01700
    9398:	05 02 00 40 	l.jal 4089498 <__stack+0x3c0949c>
    939c:	ed c8 13 00 	.word 0xedc81300
    93a0:	05 02 00 40 	l.jal 40894a0 <__stack+0x3c094a4>
    93a4:	ed cc 15 00 	.word 0xedcc1500
    93a8:	05 02 00 40 	l.jal 40894a8 <__stack+0x3c094ac>
    93ac:	ed d0 15 00 	.word 0xedd01500
    93b0:	05 02 00 40 	l.jal 40894b0 <__stack+0x3c094b4>
    93b4:	ed d4 12 00 	.word 0xedd41200
    93b8:	05 02 00 40 	l.jal 40894b8 <__stack+0x3c094bc>
    93bc:	ed dc 16 00 	.word 0xeddc1600
    93c0:	05 02 00 40 	l.jal 40894c0 <__stack+0x3c094c4>
    93c4:	ed e4 03 64 	.word 0xede40364
    93c8:	01 00 05 02 	l.j 400a7d0 <__stack+0x3b8a7d4>
    93cc:	00 40 ed f0 	l.j 1044b8c <__stack+0xbc4b90>
    93d0:	33 00 05 02 	.word 0x33000502
    93d4:	00 40 ed fc 	l.j 1044bc4 <__stack+0xbc4bc8>
    93d8:	13 00 05 02 	l.bf fc00a7e0 <__stack+0xfbb8a7e4>
    93dc:	00 40 ee 00 	l.j 1044bdc <__stack+0xbc4be0>
    93e0:	15 00 05 02 	l.nop 0x502
    93e4:	00 40 ee 0c 	l.j 1044c14 <__stack+0xbc4c18>
    93e8:	13 00 05 02 	l.bf fc00a7f0 <__stack+0xfbb8a7f4>
    93ec:	00 40 ee 14 	l.j 1044c3c <__stack+0xbc4c40>
    93f0:	15 00 05 02 	l.nop 0x502
    93f4:	00 40 ee 1c 	l.j 1044c64 <__stack+0xbc4c68>
    93f8:	13 00 05 02 	l.bf fc00a800 <__stack+0xfbb8a804>
    93fc:	00 40 ee 28 	l.j 1044c9c <__stack+0xbc4ca0>
    9400:	3b 00 05 02 	.word 0x3b000502
    9404:	00 40 ee 34 	l.j 1044cd4 <__stack+0xbc4cd8>
    9408:	17 00 05 02 	.word 0x17000502
    940c:	00 40 ee 44 	l.j 1044d1c <__stack+0xbc4d20>
    9410:	03 ee 03 01 	l.j ffb8a014 <__stack+0xff70a018>
    9414:	00 05 02 00 	l.j 149c14 <__ram_length+0xc9c14>
    9418:	40 ee 68 01 	.word 0x40ee6801
    941c:	00 05 02 00 	l.j 149c1c <__ram_length+0xc9c1c>
    9420:	40 ee 74 1c 	.word 0x40ee741c
    9424:	00 05 02 00 	l.j 149c24 <__ram_length+0xc9c24>
    9428:	40 ee 80 15 	.word 0x40ee8015
    942c:	00 05 02 00 	l.j 149c2c <__ram_length+0xc9c2c>
    9430:	40 ee 84 16 	.word 0x40ee8416
    9434:	00 05 02 00 	l.j 149c34 <__ram_length+0xc9c34>
    9438:	40 ee 90 01 	.word 0x40ee9001
    943c:	00 05 02 00 	l.j 149c3c <__ram_length+0xc9c3c>
    9440:	40 ee b8 16 	.word 0x40eeb816
    9444:	00 05 02 00 	l.j 149c44 <__ram_length+0xc9c44>
    9448:	40 ee c0 16 	.word 0x40eec016
    944c:	00 05 02 00 	l.j 149c4c <__ram_length+0xc9c4c>
    9450:	40 ee c4 12 	.word 0x40eec412
    9454:	00 05 02 00 	l.j 149c54 <__ram_length+0xc9c54>
    9458:	40 ee c8 16 	.word 0x40eec816
    945c:	00 05 02 00 	l.j 149c5c <__ram_length+0xc9c5c>
    9460:	40 ee d8 04 	.word 0x40eed804
    9464:	08 03 97 78 	.word 0x08039778
    9468:	01 00 05 02 	l.j 400a870 <__stack+0x3b8a874>
    946c:	00 40 ee e4 	l.j 1044ffc <__stack+0xbc5000>
    9470:	23 00 05 02 	.word 0x23000502
    9474:	00 40 ee ec 	l.j 1045024 <__stack+0xbc5028>
    9478:	13 00 05 02 	l.bf fc00a880 <__stack+0xfbb8a884>
    947c:	00 40 ef 00 	l.j 104507c <__stack+0xbc5080>
    9480:	04 12 03 de 	l.jal 48a3f8 <__stack+0xa3fc>
    9484:	07 01 00 05 	l.jal fc049498 <__stack+0xfbbc949c>
    9488:	02 00 40 ef 	l.j f8019844 <__stack+0xf7b99848>
    948c:	0c 15 00 05 	l.bnf 5494a0 <__stack+0xc94a4>
    9490:	02 00 40 ef 	l.j f801984c <__stack+0xf7b99850>
    9494:	18 16 00 05 	l.movhi r0,0x5
    9498:	02 00 40 ef 	l.j f8019854 <__stack+0xf7b99858>
    949c:	24 16 00 05 	l.rfe 
    94a0:	02 00 40 ef 	l.j f801985c <__stack+0xf7b99860>
    94a4:	34 15 00 05 	.word 0x34150005
    94a8:	02 00 40 ef 	l.j f8019864 <__stack+0xf7b99868>
    94ac:	40 16 00 05 	.word 0x40160005
    94b0:	02 00 40 ef 	l.j f801986c <__stack+0xf7b99870>
    94b4:	50 16 00 05 	.word 0x50160005
    94b8:	02 00 40 ef 	l.j f8019874 <__stack+0xf7b99878>
    94bc:	64 19 00 05 	.word 0x64190005
    94c0:	02 00 40 ef 	l.j f801987c <__stack+0xf7b99880>
    94c4:	70 15 00 05 	l.cust1 
    94c8:	02 00 40 ef 	l.j f8019884 <__stack+0xf7b99888>
    94cc:	80 16 00 05 	l.ld r0,0x5(r22)
    94d0:	02 00 40 ef 	l.j f801988c <__stack+0xf7b99890>
    94d4:	90 15 00 05 	l.lbs r0,0x5(r21)
    94d8:	02 00 40 ef 	l.j f8019894 <__stack+0xf7b99898>
    94dc:	a8 03 dd 7c 	l.ori r0,r3,0xdd7c
    94e0:	01 00 05 02 	l.j 400a8e8 <__stack+0x3b8a8ec>
    94e4:	00 40 ef ac 	l.j 1045394 <__stack+0xbc5398>
    94e8:	03 a5 03 01 	l.j fe94a0ec <__stack+0xfe4ca0f0>
    94ec:	00 05 02 00 	l.j 149cec <__ram_length+0xc9cec>
    94f0:	40 ef b0 03 	.word 0x40efb003
    94f4:	db 7c 01 00 	l.sb 0xffffd900(r28),r0
    94f8:	05 02 00 40 	l.jal 40895f8 <__stack+0x3c095fc>
    94fc:	ef b8 1b 00 	.word 0xefb81b00
    9500:	05 02 00 40 	l.jal 4089600 <__stack+0x3c09604>
    9504:	ef bc 0d 00 	.word 0xefbc0d00
    9508:	05 02 00 40 	l.jal 4089608 <__stack+0x3c0960c>
    950c:	ef c0 1b 00 	.word 0xefc01b00
    9510:	05 02 00 40 	l.jal 4089610 <__stack+0x3c09614>
    9514:	ef c4 03 9e 	.word 0xefc4039e
    9518:	03 01 00 05 	l.j fc04952c <__stack+0xfbbc9530>
    951c:	02 00 40 ef 	l.j f80198d8 <__stack+0xf7b998dc>
    9520:	c8 03 e2 7c 	.word 0xc803e27c
    9524:	01 00 05 02 	l.j 400a92c <__stack+0x3b8a930>
    9528:	00 40 ef cc 	l.j 1045458 <__stack+0xbc545c>
    952c:	03 9e 03 01 	l.j fe78a130 <__stack+0xfe30a134>
    9530:	00 05 02 00 	l.j 149d30 <__ram_length+0xc9d30>
    9534:	40 ef d0 03 	.word 0x40efd003
    9538:	e2 7c 01 00 	.word 0xe27c0100
    953c:	05 02 00 40 	l.jal 408963c <__stack+0x3c09640>
    9540:	ef d4 15 00 	.word 0xefd41500
    9544:	05 02 00 40 	l.jal 4089644 <__stack+0x3c09648>
    9548:	ef d8 03 9d 	.word 0xefd8039d
    954c:	03 01 00 05 	l.j fc049560 <__stack+0xfbbc9564>
    9550:	02 00 40 ef 	l.j f801990c <__stack+0xf7b99910>
    9554:	dc 03 e3 7c 	l.sh 0x37c(r3),r28
    9558:	01 00 05 02 	l.j 400a960 <__stack+0x3b8a964>
    955c:	00 40 ef e0 	l.j 10454dc <__stack+0xbc54e0>
    9560:	16 00 05 02 	.word 0x16000502
    9564:	00 40 ef e4 	l.j 10454f4 <__stack+0xbc54f8>
    9568:	12 00 05 02 	l.bf f800a970 <__stack+0xf7b8a974>
    956c:	00 40 ef ec 	l.j 104551c <__stack+0xbc5520>
    9570:	16 00 05 02 	.word 0x16000502
    9574:	00 40 ef f0 	l.j 1045534 <__stack+0xbc5538>
    9578:	12 00 05 02 	l.bf f800a980 <__stack+0xf7b8a984>
    957c:	00 40 f0 0c 	l.j 10455ac <__stack+0xbc55b0>
    9580:	16 00 05 02 	.word 0x16000502
    9584:	00 40 f0 14 	l.j 10455d4 <__stack+0xbc55d8>
    9588:	15 00 05 02 	l.nop 0x502
    958c:	00 40 f0 18 	l.j 10455ec <__stack+0xbc55f0>
    9590:	19 00 05 02 	l.movhi r8,0x502
    9594:	00 40 f0 1c 	l.j 1045604 <__stack+0xbc5608>
    9598:	11 00 05 02 	l.bf 400a9a0 <__stack+0x3b8a9a4>
    959c:	00 40 f0 30 	l.j 104565c <__stack+0xbc5660>
    95a0:	17 00 05 02 	.word 0x17000502
    95a4:	00 40 f0 48 	l.j 10456c4 <__stack+0xbc56c8>
    95a8:	18 00 05 02 	l.movhi r0,0x502
    95ac:	00 40 f0 4c 	l.j 10456dc <__stack+0xbc56e0>
    95b0:	16 00 05 02 	.word 0x16000502
    95b4:	00 40 f0 54 	l.j 1045704 <__stack+0xbc5708>
    95b8:	12 00 05 02 	l.bf f800a9c0 <__stack+0xf7b8a9c4>
    95bc:	00 40 f0 58 	l.j 104571c <__stack+0xbc5720>
    95c0:	16 00 05 02 	.word 0x16000502
    95c4:	00 40 f0 5c 	l.j 1045734 <__stack+0xbc5738>
    95c8:	12 00 05 02 	l.bf f800a9d0 <__stack+0xf7b8a9d4>
    95cc:	00 40 f0 60 	l.j 104574c <__stack+0xbc5750>
    95d0:	16 00 05 02 	.word 0x16000502
    95d4:	00 40 f0 80 	l.j 10457d4 <__stack+0xbc57d8>
    95d8:	12 00 05 02 	l.bf f800a9e0 <__stack+0xf7b8a9e4>
    95dc:	00 40 f0 88 	l.j 10457fc <__stack+0xbc5800>
    95e0:	1d 00 05 02 	.word 0x1d000502
    95e4:	00 40 f0 94 	l.j 1045834 <__stack+0xbc5838>
    95e8:	17 00 05 02 	.word 0x17000502
    95ec:	00 40 f0 98 	l.j 104584c <__stack+0xbc5850>
    95f0:	11 00 05 02 	l.bf 400a9f8 <__stack+0x3b8a9fc>
    95f4:	00 40 f0 a0 	l.j 1045874 <__stack+0xbc5878>
    95f8:	17 00 05 02 	.word 0x17000502
    95fc:	00 40 f0 ac 	l.j 10458ac <__stack+0xbc58b0>
    9600:	16 00 05 02 	.word 0x16000502
    9604:	00 40 f0 b0 	l.j 10458c4 <__stack+0xbc58c8>
    9608:	12 00 05 02 	l.bf f800aa10 <__stack+0xf7b8aa14>
    960c:	00 40 f0 b4 	l.j 10458dc <__stack+0xbc58e0>
    9610:	16 00 05 02 	.word 0x16000502
    9614:	00 40 f0 bc 	l.j 1045904 <__stack+0xbc5908>
    9618:	17 00 05 02 	.word 0x17000502
    961c:	00 40 f0 c0 	l.j 104591c <__stack+0xbc5920>
    9620:	13 00 05 02 	l.bf fc00aa28 <__stack+0xfbb8aa2c>
    9624:	00 40 f0 c4 	l.j 1045934 <__stack+0xbc5938>
    9628:	15 00 05 02 	l.nop 0x502
    962c:	00 40 f0 c8 	l.j 104594c <__stack+0xbc5950>
    9630:	13 00 05 02 	l.bf fc00aa38 <__stack+0xfbb8aa3c>
    9634:	00 40 f0 cc 	l.j 1045964 <__stack+0xbc5968>
    9638:	15 00 05 02 	l.nop 0x502
    963c:	00 40 f0 e0 	l.j 10459bc <__stack+0xbc59c0>
    9640:	03 d8 02 01 	l.j ff609e44 <__stack+0xff189e48>
    9644:	00 05 02 00 	l.j 149e44 <__ram_length+0xc9e44>
    9648:	40 f0 e4 03 	.word 0x40f0e403
    964c:	aa 7d 01 00 	l.ori r19,r29,0x100
    9650:	05 02 00 40 	l.jal 4089750 <__stack+0x3c09754>
    9654:	f0 f8 13 00 	l.cust5 r7,r24,r2,0x18,0x0
    9658:	05 02 00 40 	l.jal 4089758 <__stack+0x3c0975c>
    965c:	f1 08 13 00 	l.cust5 r8,r8,r2,0x18,0x0
    9660:	05 02 00 40 	l.jal 4089760 <__stack+0x3c09764>
    9664:	f1 14 1b 00 	l.cust5 r8,r20,r3,0x18,0x0
    9668:	05 02 00 40 	l.jal 4089768 <__stack+0x3c0976c>
    966c:	f1 28 1d 00 	l.cust5 r9,r8,r3,0x28,0x0
    9670:	05 02 00 40 	l.jal 4089770 <__stack+0x3c09774>
    9674:	f1 2c 0c 00 	l.cust5 r9,r12,r1,0x20,0x0
    9678:	05 02 00 40 	l.jal 4089778 <__stack+0x3c0977c>
    967c:	f1 3c 15 00 	l.cust5 r9,r28,r2,0x28,0x0
    9680:	05 02 00 40 	l.jal 4089780 <__stack+0x3c09784>
    9684:	f1 4c 15 00 	l.cust5 r10,r12,r2,0x28,0x0
    9688:	05 02 00 40 	l.jal 4089788 <__stack+0x3c0978c>
    968c:	f1 5c 15 00 	l.cust5 r10,r28,r2,0x28,0x0
    9690:	05 02 00 40 	l.jal 4089790 <__stack+0x3c09794>
    9694:	f1 6c 15 00 	l.cust5 r11,r12,r2,0x28,0x0
    9698:	05 02 00 40 	l.jal 4089798 <__stack+0x3c0979c>
    969c:	f1 7c 15 00 	l.cust5 r11,r28,r2,0x28,0x0
    96a0:	05 02 00 40 	l.jal 40897a0 <__stack+0x3c097a4>
    96a4:	f1 90 15 00 	l.cust5 r12,r16,r2,0x28,0x0
    96a8:	05 02 00 40 	l.jal 40897a8 <__stack+0x3c097ac>
    96ac:	f1 9c 15 00 	l.cust5 r12,r28,r2,0x28,0x0
    96b0:	05 02 00 40 	l.jal 40897b0 <__stack+0x3c097b4>
    96b4:	f1 a4 13 00 	l.cust5 r13,r4,r2,0x18,0x0
    96b8:	05 02 00 40 	l.jal 40897b8 <__stack+0x3c097bc>
    96bc:	f1 a8 15 00 	l.cust5 r13,r8,r2,0x28,0x0
    96c0:	05 02 00 40 	l.jal 40897c0 <__stack+0x3c097c4>
    96c4:	f1 b0 0a 00 	l.cust5 r13,r16,r1,0x10,0x0
    96c8:	05 02 00 40 	l.jal 40897c8 <__stack+0x3c097cc>
    96cc:	f1 b8 17 00 	l.cust5 r13,r24,r2,0x38,0x0
    96d0:	05 02 00 40 	l.jal 40897d0 <__stack+0x3c097d4>
    96d4:	f1 c0 11 00 	l.cust5 r14,r0,r2,0x8,0x0
    96d8:	05 02 00 40 	l.jal 40897d8 <__stack+0x3c097dc>
    96dc:	f1 cc 22 00 	l.cust5 r14,r12,r4,0x10,0x0
    96e0:	05 02 00 40 	l.jal 40897e0 <__stack+0x3c097e4>
    96e4:	f1 d8 16 00 	l.cust5 r14,r24,r2,0x30,0x0
    96e8:	05 02 00 40 	l.jal 40897e8 <__stack+0x3c097ec>
    96ec:	f1 e8 16 00 	l.cust5 r15,r8,r2,0x30,0x0
    96f0:	05 02 00 40 	l.jal 40897f0 <__stack+0x3c097f4>
    96f4:	f2 08 13 00 	l.cust5 r16,r8,r2,0x18,0x0
    96f8:	05 02 00 40 	l.jal 40897f8 <__stack+0x3c097fc>
    96fc:	f2 14 18 00 	l.cust5 r16,r20,r3,0x0,0x0
    9700:	05 02 00 40 	l.jal 4089800 <__stack+0x3c09804>
    9704:	f2 24 03 eb 	l.cust5 r17,r4,r0,0x1f,0xb
    9708:	02 01 00 05 	l.j f804971c <__stack+0xf7bc9720>
    970c:	02 00 40 f2 	l.j f8019ad4 <__stack+0xf7b99ad8>
    9710:	48 04 18 03 	l.jalr r3
    9714:	eb 78 01 00 	.word 0xeb780100
    9718:	05 02 00 40 	l.jal 4089818 <__stack+0x3c0981c>
    971c:	f2 4c 1b 00 	l.cust5 r18,r12,r3,0x18,0x0
    9720:	05 02 00 40 	l.jal 4089820 <__stack+0x3c09824>
    9724:	f2 58 0d 00 	l.cust5 r18,r24,r1,0x28,0x0
    9728:	05 02 00 40 	l.jal 4089828 <__stack+0x3c0982c>
    972c:	f2 80 1b 00 	l.cust5 r20,r0,r3,0x18,0x0
    9730:	05 02 00 40 	l.jal 4089830 <__stack+0x3c09834>
    9734:	f2 84 17 00 	l.cust5 r20,r4,r2,0x38,0x0
    9738:	05 02 00 40 	l.jal 4089838 <__stack+0x3c0983c>
    973c:	f2 88 0a 00 	l.cust5 r20,r8,r1,0x10,0x0
    9740:	05 02 00 40 	l.jal 4089840 <__stack+0x3c09844>
    9744:	f2 8c 1e 00 	l.cust5 r20,r12,r3,0x30,0x0
    9748:	05 02 00 40 	l.jal 4089848 <__stack+0x3c0984c>
    974c:	f2 94 15 00 	l.cust5 r20,r20,r2,0x28,0x0
    9750:	05 02 00 40 	l.jal 4089850 <__stack+0x3c09854>
    9754:	f2 98 01 00 	l.cust5 r20,r24,r0,0x8,0x0
    9758:	05 02 00 40 	l.jal 4089858 <__stack+0x3c0985c>
    975c:	f2 ac 15 00 	l.cust5 r21,r12,r2,0x28,0x0
    9760:	05 02 00 40 	l.jal 4089860 <__stack+0x3c09864>
    9764:	f2 c0 17 00 	l.cust5 r22,r0,r2,0x38,0x0
    9768:	05 02 00 40 	l.jal 4089868 <__stack+0x3c0986c>
    976c:	f2 cc 16 00 	l.cust5 r22,r12,r2,0x30,0x0
    9770:	05 02 00 40 	l.jal 4089870 <__stack+0x3c09874>
    9774:	f2 d4 13 00 	l.cust5 r22,r20,r2,0x18,0x0
    9778:	05 02 00 40 	l.jal 4089878 <__stack+0x3c0987c>
    977c:	f2 d8 16 00 	l.cust5 r22,r24,r2,0x30,0x0
    9780:	05 02 00 40 	l.jal 4089880 <__stack+0x3c09884>
    9784:	f2 e0 13 00 	l.cust5 r23,r0,r2,0x18,0x0
    9788:	05 02 00 40 	l.jal 4089888 <__stack+0x3c0988c>
    978c:	f2 e4 15 00 	l.cust5 r23,r4,r2,0x28,0x0
    9790:	05 02 00 40 	l.jal 4089890 <__stack+0x3c09894>
    9794:	f2 e8 18 00 	l.cust5 r23,r8,r3,0x0,0x0
    9798:	05 02 00 40 	l.jal 4089898 <__stack+0x3c0989c>
    979c:	f2 ec 10 00 	l.cust5 r23,r12,r2,0x0,0x0
    97a0:	05 02 00 40 	l.jal 40898a0 <__stack+0x3c098a4>
    97a4:	f2 f0 16 00 	l.cust5 r23,r16,r2,0x30,0x0
    97a8:	05 02 00 40 	l.jal 40898a8 <__stack+0x3c098ac>
    97ac:	f2 fc 15 00 	l.cust5 r23,r28,r2,0x28,0x0
    97b0:	05 02 00 40 	l.jal 40898b0 <__stack+0x3c098b4>
    97b4:	f3 04 15 00 	l.cust5 r24,r4,r2,0x28,0x0
    97b8:	05 02 00 40 	l.jal 40898b8 <__stack+0x3c098bc>
    97bc:	f3 c4 15 00 	l.cust5 r30,r4,r2,0x28,0x0
    97c0:	05 02 00 40 	l.jal 40898c0 <__stack+0x3c098c4>
    97c4:	f3 c8 15 00 	l.cust5 r30,r8,r2,0x28,0x0
    97c8:	05 02 00 40 	l.jal 40898c8 <__stack+0x3c098cc>
    97cc:	f3 cc 15 00 	l.cust5 r30,r12,r2,0x28,0x0
    97d0:	05 02 00 40 	l.jal 40898d0 <__stack+0x3c098d4>
    97d4:	f3 d0 13 00 	l.cust5 r30,r16,r2,0x18,0x0
    97d8:	05 02 00 40 	l.jal 40898d8 <__stack+0x3c098dc>
    97dc:	f3 d4 15 00 	l.cust5 r30,r20,r2,0x28,0x0
    97e0:	05 02 00 40 	l.jal 40898e0 <__stack+0x3c098e4>
    97e4:	f3 e0 15 00 	l.cust5 r31,r0,r2,0x28,0x0
    97e8:	05 02 00 40 	l.jal 40898e8 <__stack+0x3c098ec>
    97ec:	f3 e8 15 00 	l.cust5 r31,r8,r2,0x28,0x0
    97f0:	05 02 00 40 	l.jal 40898f0 <__stack+0x3c098f4>
    97f4:	f3 ec 15 00 	l.cust5 r31,r12,r2,0x28,0x0
    97f8:	05 02 00 40 	l.jal 40898f8 <__stack+0x3c098fc>
    97fc:	f4 ac 17 00 	l.cust6 
    9800:	05 02 00 40 	l.jal 4089900 <__stack+0x3c09904>
    9804:	f4 c0 01 00 	l.cust6 
    9808:	05 02 00 40 	l.jal 4089908 <__stack+0x3c0990c>
    980c:	f4 c8 15 00 	l.cust6 
    9810:	05 02 00 40 	l.jal 4089910 <__stack+0x3c09914>
    9814:	f4 d4 17 00 	l.cust6 
    9818:	05 02 00 40 	l.jal 4089918 <__stack+0x3c0991c>
    981c:	f4 e8 01 00 	l.cust6 
    9820:	05 02 00 40 	l.jal 4089920 <__stack+0x3c09924>
    9824:	f4 f0 15 00 	l.cust6 
    9828:	05 02 00 40 	l.jal 4089928 <__stack+0x3c0992c>
    982c:	f4 fc 15 00 	l.cust6 
    9830:	05 02 00 40 	l.jal 4089930 <__stack+0x3c09934>
    9834:	f5 00 04 0c 	l.cust6 
    9838:	03 5d 01 00 	l.j fd749c38 <__stack+0xfd2c9c3c>
    983c:	05 02 00 40 	l.jal 408993c <__stack+0x3c09940>
    9840:	f5 08 04 18 	l.cust6 
    9844:	37 00 05 02 	.word 0x37000502
    9848:	00 40 f5 0c 	l.j 1046c78 <__stack+0xbc6c7c>
    984c:	04 0c 03 5e 	l.jal 30a5c4 <__ram_length+0x28a5c4>
    9850:	01 00 05 02 	l.j 400ac58 <__stack+0x3b8ac5c>
    9854:	00 40 f5 10 	l.j 1046c94 <__stack+0xbc6c98>
    9858:	04 18 36 00 	l.jal 617058 <__stack+0x19705c>
    985c:	05 02 00 40 	l.jal 408995c <__stack+0x3c09960>
    9860:	f5 18 04 0c 	l.cust6 
    9864:	03 5d 01 00 	l.j fd749c64 <__stack+0xfd2c9c68>
    9868:	05 02 00 40 	l.jal 4089968 <__stack+0x3c0996c>
    986c:	f5 1c 15 00 	l.cust6 
    9870:	05 02 00 40 	l.jal 4089970 <__stack+0x3c09974>
    9874:	f5 20 16 00 	l.cust6 
    9878:	05 02 00 40 	l.jal 4089978 <__stack+0x3c0997c>
    987c:	f5 24 12 00 	l.cust6 
    9880:	05 02 00 40 	l.jal 4089980 <__stack+0x3c09984>
    9884:	f5 28 15 00 	l.cust6 
    9888:	05 02 00 40 	l.jal 4089988 <__stack+0x3c0998c>
    988c:	f5 34 16 00 	l.cust6 
    9890:	05 02 00 40 	l.jal 4089990 <__stack+0x3c09994>
    9894:	f5 38 13 00 	l.cust6 
    9898:	05 02 00 40 	l.jal 4089998 <__stack+0x3c0999c>
    989c:	f5 3c 04 18 	l.cust6 
    98a0:	48 00 05 02 	l.jalr r0
    98a4:	00 40 f5 40 	l.j 1046da4 <__stack+0xbc6da8>
    98a8:	04 0c 03 4d 	l.jal 30a5dc <__ram_length+0x28a5dc>
    98ac:	01 00 05 02 	l.j 400acb4 <__stack+0x3b8acb8>
    98b0:	00 40 f6 00 	l.j 10470b0 <__stack+0xbc70b4>
    98b4:	03 fe 01 01 	l.j fff89cb8 <__stack+0xffb09cbc>
    98b8:	00 05 02 00 	l.j 14a0b8 <__ram_length+0xca0b8>
    98bc:	40 f6 08 15 	.word 0x40f60815
    98c0:	00 05 02 00 	l.j 14a0c0 <__ram_length+0xca0c0>
    98c4:	40 f6 10 15 	.word 0x40f61015
    98c8:	00 05 02 00 	l.j 14a0c8 <__ram_length+0xca0c8>
    98cc:	40 f6 18 15 	.word 0x40f61815
    98d0:	00 05 02 00 	l.j 14a0d0 <__ram_length+0xca0d0>
    98d4:	40 f6 20 03 	.word 0x40f62003
    98d8:	95 7f 01 00 	l.lhz r11,0x100(r31)
    98dc:	05 02 00 40 	l.jal 40899dc <__stack+0x3c099e0>
    98e0:	f6 38 15 00 	l.cust6 
    98e4:	05 02 00 40 	l.jal 40899e4 <__stack+0x3c099e8>
    98e8:	f6 3c 13 00 	l.cust6 
    98ec:	05 02 00 40 	l.jal 40899ec <__stack+0x3c099f0>
    98f0:	f6 40 19 00 	l.cust6 
    98f4:	05 02 00 40 	l.jal 40899f4 <__stack+0x3c099f8>
    98f8:	f6 44 0f 00 	l.cust6 
    98fc:	05 02 00 40 	l.jal 40899fc <__stack+0x3c09a00>
    9900:	f6 4c 1f 00 	l.cust6 
    9904:	05 02 00 40 	l.jal 4089a04 <__stack+0x3c09a08>
    9908:	f6 50 03 75 	l.cust6 
    990c:	01 00 05 02 	l.j 400ad14 <__stack+0x3b8ad18>
    9910:	00 40 f6 58 	l.j 1047270 <__stack+0xbc7274>
    9914:	21 00 05 02 	l.trap 0x502
    9918:	00 40 f6 5c 	l.j 1047288 <__stack+0xbc728c>
    991c:	03 73 01 00 	l.j fdcc9d1c <__stack+0xfd849d20>
    9920:	05 02 00 40 	l.jal 4089a20 <__stack+0x3c09a24>
    9924:	f6 70 15 00 	l.cust6 
    9928:	05 02 00 40 	l.jal 4089a28 <__stack+0x3c09a2c>
    992c:	f7 40 15 00 	l.cust6 
    9930:	05 02 00 40 	l.jal 4089a30 <__stack+0x3c09a34>
    9934:	f8 04 17 00 	l.cust7 
    9938:	05 02 00 40 	l.jal 4089a38 <__stack+0x3c09a3c>
    993c:	f8 38 15 00 	l.cust7 
    9940:	05 02 00 40 	l.jal 4089a40 <__stack+0x3c09a44>
    9944:	f9 0c 15 00 	l.cust7 
    9948:	05 02 00 40 	l.jal 4089a48 <__stack+0x3c09a4c>
    994c:	f9 d0 18 00 	l.cust7 
    9950:	05 02 00 40 	l.jal 4089a50 <__stack+0x3c09a54>
    9954:	f9 fc 15 00 	l.cust7 
    9958:	05 02 00 40 	l.jal 4089a58 <__stack+0x3c09a5c>
    995c:	fb a4 15 00 	l.cust7 
    9960:	05 02 00 40 	l.jal 4089a60 <__stack+0x3c09a64>
    9964:	fc 80 2b 00 	l.cust8 
    9968:	05 02 00 40 	l.jal 4089a68 <__stack+0x3c09a6c>
    996c:	fc 84 03 69 	l.cust8 
    9970:	01 00 05 02 	l.j 400ad78 <__stack+0x3b8ad7c>
    9974:	00 40 fd 4c 	l.j 1048ea4 <__stack+0xbc8ea8>
    9978:	15 00 05 02 	l.nop 0x502
    997c:	00 40 fe 10 	l.j 10491bc <__stack+0xbc91c0>
    9980:	1f 00 05 02 	.word 0x1f000502
    9984:	00 40 fe 40 	l.j 1049284 <__stack+0xbc9288>
    9988:	19 00 05 02 	l.movhi r8,0x502
    998c:	00 40 ff 18 	l.j 10495ec <__stack+0xbc95f0>
    9990:	15 00 05 02 	l.nop 0x502
    9994:	00 40 ff f0 	l.j 1049954 <__stack+0xbc9958>
    9998:	15 00 05 02 	l.nop 0x502
    999c:	00 41 00 c4 	l.j 1049cac <__stack+0xbc9cb0>
    99a0:	15 00 05 02 	l.nop 0x502
    99a4:	00 41 01 98 	l.j 104a004 <__stack+0xbca008>
    99a8:	15 00 05 02 	l.nop 0x502
    99ac:	00 41 02 70 	l.j 104a36c <__stack+0xbca370>
    99b0:	15 00 05 02 	l.nop 0x502
    99b4:	00 41 03 40 	l.j 104a6b4 <__stack+0xbca6b8>
    99b8:	15 00 05 02 	l.nop 0x502
    99bc:	00 41 04 14 	l.j 104aa0c <__stack+0xbcaa10>
    99c0:	15 00 05 02 	l.nop 0x502
    99c4:	00 41 04 20 	l.j 104aa44 <__stack+0xbcaa48>
    99c8:	1c 00 05 02 	.word 0x1c000502
    99cc:	00 41 04 24 	l.j 104aa5c <__stack+0xbcaa60>
    99d0:	0c 00 05 02 	l.bnf add8 <__rom_size-0xf574>
    99d4:	00 41 04 e8 	l.j 104ad74 <__stack+0xbcad78>
    99d8:	15 00 05 02 	l.nop 0x502
    99dc:	00 41 05 ac 	l.j 104b08c <__stack+0xbcb090>
    99e0:	1a 00 05 02 	l.movhi r16,0x502
    99e4:	00 41 05 e0 	l.j 104b164 <__stack+0xbcb168>
    99e8:	15 00 05 02 	l.nop 0x502
    99ec:	00 41 07 80 	l.j 104b7ec <__stack+0xbcb7f0>
    99f0:	15 00 05 02 	l.nop 0x502
    99f4:	00 41 09 24 	l.j 104be84 <__stack+0xbcbe88>
    99f8:	15 00 05 02 	l.nop 0x502
    99fc:	00 41 09 e8 	l.j 104c19c <__stack+0xbcc1a0>
    9a00:	1c 00 05 02 	.word 0x1c000502
    9a04:	00 41 0a 14 	l.j 104c254 <__stack+0xbcc258>
    9a08:	15 00 05 02 	l.nop 0x502
    9a0c:	00 41 0a e8 	l.j 104c5ac <__stack+0xbcc5b0>
    9a10:	15 00 05 02 	l.nop 0x502
    9a14:	00 41 0b b8 	l.j 104c8f4 <__stack+0xbcc8f8>
    9a18:	15 00 05 02 	l.nop 0x502
    9a1c:	00 41 0c 88 	l.j 104cc3c <__stack+0xbccc40>
    9a20:	15 00 05 02 	l.nop 0x502
    9a24:	00 41 0d 58 	l.j 104cf84 <__stack+0xbccf88>
    9a28:	15 00 05 02 	l.nop 0x502
    9a2c:	00 41 0e 28 	l.j 104d2cc <__stack+0xbcd2d0>
    9a30:	15 00 05 02 	l.nop 0x502
    9a34:	00 41 0e f8 	l.j 104d614 <__stack+0xbcd618>
    9a38:	15 00 05 02 	l.nop 0x502
    9a3c:	00 41 0f bc 	l.j 104d92c <__stack+0xbcd930>
    9a40:	1a 00 05 02 	l.movhi r16,0x502
    9a44:	00 41 0f e8 	l.j 104d9e4 <__stack+0xbcd9e8>
    9a48:	15 00 05 02 	l.nop 0x502
    9a4c:	00 41 10 bc 	l.j 104dd3c <__stack+0xbcdd40>
    9a50:	15 00 05 02 	l.nop 0x502
    9a54:	00 41 11 8c 	l.j 104e084 <__stack+0xbce088>
    9a58:	15 00 05 02 	l.nop 0x502
    9a5c:	00 41 12 5c 	l.j 104e3cc <__stack+0xbce3d0>
    9a60:	15 00 05 02 	l.nop 0x502
    9a64:	00 41 13 2c 	l.j 104e714 <__stack+0xbce718>
    9a68:	15 00 05 02 	l.nop 0x502
    9a6c:	00 41 13 f0 	l.j 104ea2c <__stack+0xbcea30>
    9a70:	18 00 05 02 	l.movhi r0,0x502
    9a74:	00 41 14 20 	l.j 104eaf4 <__stack+0xbceaf8>
    9a78:	15 00 05 02 	l.nop 0x502
    9a7c:	00 41 14 f0 	l.j 104ee3c <__stack+0xbcee40>
    9a80:	15 00 05 02 	l.nop 0x502
    9a84:	00 41 15 c0 	l.j 104f184 <__stack+0xbcf188>
    9a88:	15 00 05 02 	l.nop 0x502
    9a8c:	00 41 16 84 	l.j 104f49c <__stack+0xbcf4a0>
    9a90:	1a 00 05 02 	l.movhi r16,0x502
    9a94:	00 41 16 b0 	l.j 104f554 <__stack+0xbcf558>
    9a98:	15 00 05 02 	l.nop 0x502
    9a9c:	00 41 17 80 	l.j 104f89c <__stack+0xbcf8a0>
    9aa0:	15 00 05 02 	l.nop 0x502
    9aa4:	00 41 18 58 	l.j 104fc04 <__stack+0xbcfc08>
    9aa8:	15 00 05 02 	l.nop 0x502
    9aac:	00 41 19 28 	l.j 104ff4c <__stack+0xbcff50>
    9ab0:	15 00 05 02 	l.nop 0x502
    9ab4:	00 41 19 f8 	l.j 1050294 <__stack+0xbd0298>
    9ab8:	15 00 05 02 	l.nop 0x502
    9abc:	00 41 1a bc 	l.j 10505ac <__stack+0xbd05b0>
    9ac0:	17 00 05 02 	.word 0x17000502
    9ac4:	00 41 1a ec 	l.j 1050674 <__stack+0xbd0678>
    9ac8:	15 00 05 02 	l.nop 0x502
    9acc:	00 41 1b bc 	l.j 10509bc <__stack+0xbd09c0>
    9ad0:	15 00 05 02 	l.nop 0x502
    9ad4:	00 41 1c 80 	l.j 1050cd4 <__stack+0xbd0cd8>
    9ad8:	04 18 03 ad 	l.jal 60a98c <__stack+0x18a990>
    9adc:	7e 01 00 05 	l.cust4 
    9ae0:	02 00 41 1c 	l.j f8019f50 <__stack+0xf7b99f54>
    9ae4:	8c 15 00 05 	l.lbz r0,0x5(r21)
    9ae8:	02 00 41 1c 	l.j f8019f58 <__stack+0xf7b99f5c>
    9aec:	98 15 00 05 	l.lhs r0,0x5(r21)
    9af0:	02 00 41 1c 	l.j f8019f60 <__stack+0xf7b99f64>
    9af4:	a4 15 00 05 	l.andi r0,r21,0x5
    9af8:	02 00 41 1c 	l.j f8019f68 <__stack+0xf7b99f6c>
    9afc:	b0 15 00 05 	l.muli r0,r21,0x5
    9b00:	02 00 41 1c 	l.j f8019f70 <__stack+0xf7b99f74>
    9b04:	bc 15 00 05 	l.sfeqi r21,0x5
    9b08:	02 00 41 1c 	l.j f8019f78 <__stack+0xf7b99f7c>
    9b0c:	c8 18 00 05 	lf.ftoi.s r0,r24
    9b10:	02 00 41 1c 	l.j f8019f80 <__stack+0xf7b99f84>
    9b14:	e8 15 00 05 	.word 0xe8150005
    9b18:	02 00 41 1c 	l.j f8019f88 <__stack+0xf7b99f8c>
    9b1c:	f4 15 00 05 	l.cust6 
    9b20:	02 00 41 1d 	l.j f8019f94 <__stack+0xf7b99f98>
    9b24:	00 15 00 05 	l.j 549b38 <__stack+0xc9b3c>
    9b28:	02 00 41 1d 	l.j f8019f9c <__stack+0xf7b99fa0>
    9b2c:	20 15 00 05 	.word 0x20150005
    9b30:	02 00 41 1d 	l.j f8019fa4 <__stack+0xf7b99fa8>
    9b34:	58 15 00 05 	.word 0x58150005
    9b38:	02 00 41 1d 	l.j f8019fac <__stack+0xf7b99fb0>
    9b3c:	64 16 00 05 	.word 0x64160005
    9b40:	02 00 41 1d 	l.j f8019fb4 <__stack+0xf7b99fb8>
    9b44:	6c 01 00 05 	.word 0x6c010005
    9b48:	02 00 41 1d 	l.j f8019fbc <__stack+0xf7b99fc0>
    9b4c:	7c 17 00 05 	l.cust4 
    9b50:	02 00 41 1d 	l.j f8019fc4 <__stack+0xf7b99fc8>
    9b54:	88 19 00 05 	l.lws r0,0x5(r25)
    9b58:	02 00 41 1d 	l.j f8019fcc <__stack+0xf7b99fd0>
    9b5c:	8c 0f 00 05 	l.lbz r0,0x5(r15)
    9b60:	02 00 41 1d 	l.j f8019fd4 <__stack+0xf7b99fd8>
    9b64:	90 15 00 05 	l.lbs r0,0x5(r21)
    9b68:	02 00 41 1d 	l.j f8019fdc <__stack+0xf7b99fe0>
    9b6c:	94 15 00 05 	l.lhz r0,0x5(r21)
    9b70:	02 00 41 1d 	l.j f8019fe4 <__stack+0xf7b99fe8>
    9b74:	98 15 00 05 	l.lhs r0,0x5(r21)
    9b78:	02 00 41 1d 	l.j f8019fec <__stack+0xf7b99ff0>
    9b7c:	9c 16 00 05 	l.addi r0,r22,0x5
    9b80:	02 00 41 1d 	l.j f8019ff4 <__stack+0xf7b99ff8>
    9b84:	a8 15 00 05 	l.ori r0,r21,0x5
    9b88:	02 00 41 1d 	l.j f8019ffc <__stack+0xf7b9a000>
    9b8c:	b0 15 00 05 	l.muli r0,r21,0x5
    9b90:	02 00 41 1d 	l.j f801a004 <__stack+0xf7b9a008>
    9b94:	b4 13 00 05 	l.mfspr r0,r19,0x5
    9b98:	02 00 41 1d 	l.j f801a00c <__stack+0xf7b9a010>
    9b9c:	b8 15 00 05 	l.slli r0,r21,0x5
    9ba0:	02 00 41 1d 	l.j f801a014 <__stack+0xf7b9a018>
    9ba4:	c0 16 00 05 	l.mtspr r22,r0,0x5
    9ba8:	02 00 41 1d 	l.j f801a01c <__stack+0xf7b9a020>
    9bac:	c8 16 00 05 	lf.ftoi.s r0,r22
    9bb0:	02 00 41 1d 	l.j f801a024 <__stack+0xf7b9a028>
    9bb4:	d0 18 00 05 	l.sd 0x5(r24),r0
    9bb8:	02 00 41 1d 	l.j f801a02c <__stack+0xf7b9a030>
    9bbc:	d8 04 10 19 	l.sb 0x19(r4),r2
    9bc0:	00 05 02 00 	l.j 14a3c0 <__ram_length+0xca3c0>
    9bc4:	41 1d e0 20 	.word 0x411de020
    9bc8:	00 05 02 00 	l.j 14a3c8 <__ram_length+0xca3c8>
    9bcc:	41 1e 28 3d 	.word 0x411e283d
    9bd0:	00 05 02 00 	l.j 14a3d0 <__ram_length+0xca3d0>
    9bd4:	41 1e 30 03 	.word 0x411e3003
    9bd8:	57 01 00 05 	.word 0x57010005
    9bdc:	02 00 41 1e 	l.j f801a054 <__stack+0xf7b9a058>
    9be0:	4c 30 00 05 	l.maci r16,0x5
    9be4:	02 00 41 1e 	l.j f801a05c <__stack+0xf7b9a060>
    9be8:	54 03 64 01 	.word 0x54036401
    9bec:	00 05 02 00 	l.j 14a3ec <__ram_length+0xca3ec>
    9bf0:	41 1e 80 12 	.word 0x411e8012
    9bf4:	00 05 02 00 	l.j 14a3f4 <__ram_length+0xca3f4>
    9bf8:	41 1e 88 16 	.word 0x411e8816
    9bfc:	00 05 02 00 	l.j 14a3fc <__ram_length+0xca3fc>
    9c00:	41 1e a0 4a 	.word 0x411ea04a
    9c04:	00 05 02 00 	l.j 14a404 <__ram_length+0xca404>
    9c08:	41 1e a8 03 	.word 0x411ea803
    9c0c:	48 01 00 05 	l.jalr r0
    9c10:	02 00 41 1e 	l.j f801a088 <__stack+0xf7b9a08c>
    9c14:	ac 5b 00 05 	l.xori r2,r27,0x5
    9c18:	02 00 41 1e 	l.j f801a090 <__stack+0xf7b9a094>
    9c1c:	b0 03 b8 7f 	l.muli r0,r3,0xffffb87f
    9c20:	01 00 05 02 	l.j 400b028 <__stack+0x3b8b02c>
    9c24:	00 41 1e b4 	l.j 10516f4 <__stack+0xbd16f8>
    9c28:	12 00 05 02 	l.bf f800b030 <__stack+0xf7b8b034>
    9c2c:	00 41 1e b8 	l.j 105170c <__stack+0xbd1710>
    9c30:	15 00 05 02 	l.nop 0x502
    9c34:	00 41 1e bc 	l.j 1051724 <__stack+0xbd1728>
    9c38:	0f 00 05 02 	l.bnf fc00b040 <__stack+0xfbb8b044>
    9c3c:	00 41 1e c4 	l.j 105174c <__stack+0xbd1750>
    9c40:	20 00 05 02 	l.sys 0x502
    9c44:	00 41 1e d4 	l.j 1051794 <__stack+0xbd1798>
    9c48:	17 00 05 02 	.word 0x17000502
    9c4c:	00 41 1e e8 	l.j 10517ec <__stack+0xbd17f0>
    9c50:	17 00 05 02 	.word 0x17000502
    9c54:	00 41 1e fc 	l.j 1051844 <__stack+0xbd1848>
    9c58:	17 00 05 02 	.word 0x17000502
    9c5c:	00 41 1f 10 	l.j 105189c <__stack+0xbd18a0>
    9c60:	17 00 05 02 	.word 0x17000502
    9c64:	00 41 1f 40 	l.j 1051964 <__stack+0xbd1968>
    9c68:	16 00 05 02 	.word 0x16000502
    9c6c:	00 41 1f 50 	l.j 10519ac <__stack+0xbd19b0>
    9c70:	15 00 05 02 	l.nop 0x502
    9c74:	00 41 1f 58 	l.j 10519d4 <__stack+0xbd19d8>
    9c78:	15 00 05 02 	l.nop 0x502
    9c7c:	00 41 1f 70 	l.j 1051a3c <__stack+0xbd1a40>
    9c80:	15 00 05 02 	l.nop 0x502
    9c84:	00 41 1f 78 	l.j 1051a64 <__stack+0xbd1a68>
    9c88:	15 00 05 02 	l.nop 0x502
    9c8c:	00 41 1f a0 	l.j 1051b0c <__stack+0xbd1b10>
    9c90:	15 00 05 02 	l.nop 0x502
    9c94:	00 41 1f ac 	l.j 1051b44 <__stack+0xbd1b48>
    9c98:	1a 00 05 02 	l.movhi r16,0x502
    9c9c:	00 41 1f d8 	l.j 1051bfc <__stack+0xbd1c00>
    9ca0:	16 00 05 02 	.word 0x16000502
    9ca4:	00 41 1f ec 	l.j 1051c54 <__stack+0xbd1c58>
    9ca8:	15 00 05 02 	l.nop 0x502
    9cac:	00 41 1f f4 	l.j 1051c7c <__stack+0xbd1c80>
    9cb0:	15 00 05 02 	l.nop 0x502
    9cb4:	00 41 20 08 	l.j 1051cd4 <__stack+0xbd1cd8>
    9cb8:	15 00 05 02 	l.nop 0x502
    9cbc:	00 41 20 18 	l.j 1051d1c <__stack+0xbd1d20>
    9cc0:	03 5d 01 00 	l.j fd74a0c0 <__stack+0xfd2ca0c4>
    9cc4:	05 02 00 41 	l.jal 4089dc8 <__stack+0x3c09dcc>
    9cc8:	20 1c 13 00 	.word 0x201c1300
    9ccc:	05 02 00 41 	l.jal 4089dd0 <__stack+0x3c09dd4>
    9cd0:	20 24 39 00 	.word 0x20243900
    9cd4:	05 02 00 41 	l.jal 4089dd8 <__stack+0x3c09ddc>
    9cd8:	20 4c 15 00 	.word 0x204c1500
    9cdc:	05 02 00 41 	l.jal 4089de0 <__stack+0x3c09de4>
    9ce0:	20 58 1a 00 	.word 0x20581a00
    9ce4:	05 02 00 41 	l.jal 4089de8 <__stack+0x3c09dec>
    9ce8:	20 84 16 00 	.word 0x20841600
    9cec:	05 02 00 41 	l.jal 4089df0 <__stack+0x3c09df4>
    9cf0:	20 bc 16 00 	.word 0x20bc1600
    9cf4:	05 02 00 41 	l.jal 4089df8 <__stack+0x3c09dfc>
    9cf8:	20 c0 04 12 	.word 0x20c00412
    9cfc:	03 8f 05 01 	l.j fe3cb100 <__stack+0xfdf4b104>
    9d00:	00 05 02 00 	l.j 14a500 <__ram_length+0xca500>
    9d04:	41 20 c4 04 	.word 0x4120c404
    9d08:	10 03 f1 7a 	l.bf 1062f0 <__ram_length+0x862f0>
    9d0c:	01 00 05 02 	l.j 400b114 <__stack+0x3b8b118>
    9d10:	00 41 20 c8 	l.j 1052030 <__stack+0xbd2034>
    9d14:	04 12 03 91 	l.jal 48ab58 <__stack+0xab5c>
    9d18:	05 01 00 05 	l.jal 4049d2c <__stack+0x3bc9d30>
    9d1c:	02 00 41 20 	l.j f801a19c <__stack+0xf7b9a1a0>
    9d20:	cc 04 10 03 	.word 0xcc041003
    9d24:	ef 7a 01 00 	.word 0xef7a0100
    9d28:	05 02 00 41 	l.jal 4089e2c <__stack+0x3c09e30>
    9d2c:	20 d4 18 00 	.word 0x20d41800
    9d30:	05 02 00 41 	l.jal 4089e34 <__stack+0x3c09e38>
    9d34:	20 d8 11 00 	.word 0x20d81100
    9d38:	05 02 00 41 	l.jal 4089e3c <__stack+0x3c09e40>
    9d3c:	20 dc 17 00 	.word 0x20dc1700
    9d40:	05 02 00 41 	l.jal 4089e44 <__stack+0x3c09e48>
    9d44:	20 e0 11 00 	.word 0x20e01100
    9d48:	05 02 00 41 	l.jal 4089e4c <__stack+0x3c09e50>
    9d4c:	20 e4 04 12 	.word 0x20e40412
    9d50:	03 8e 05 01 	l.j fe38b154 <__stack+0xfdf0b158>
    9d54:	00 05 02 00 	l.j 14a554 <__ram_length+0xca554>
    9d58:	41 20 ec 16 	.word 0x4120ec16
    9d5c:	00 05 02 00 	l.j 14a55c <__ram_length+0xca55c>
    9d60:	41 20 f8 15 	.word 0x4120f815
    9d64:	00 05 02 00 	l.j 14a564 <__ram_length+0xca564>
    9d68:	41 20 fc 04 	.word 0x4120fc04
    9d6c:	10 03 f2 7a 	l.bf 106754 <__ram_length+0x86754>
    9d70:	01 00 05 02 	l.j 400b178 <__stack+0x3b8b17c>
    9d74:	00 41 21 00 	l.j 1052174 <__stack+0xbd2178>
    9d78:	04 12 03 8e 	l.jal 48abb0 <__stack+0xabb4>
    9d7c:	05 01 00 05 	l.jal 4049d90 <__stack+0x3bc9d94>
    9d80:	02 00 41 21 	l.j f801a204 <__stack+0xf7b9a208>
    9d84:	08 15 00 05 	.word 0x08150005
    9d88:	02 00 41 21 	l.j f801a20c <__stack+0xf7b9a210>
    9d8c:	0c 04 10 03 	l.bnf 10dd98 <__ram_length+0x8dd98>
    9d90:	f1 7a 01 00 	l.cust5 r11,r26,r0,0x8,0x0
    9d94:	05 02 00 41 	l.jal 4089e98 <__stack+0x3c09e9c>
    9d98:	21 10 04 12 	.word 0x21100412
    9d9c:	03 8f 05 01 	l.j fe3cb1a0 <__stack+0xfdf4b1a4>
    9da0:	00 05 02 00 	l.j 14a5a0 <__ram_length+0xca5a0>
    9da4:	41 21 14 04 	.word 0x41211404
    9da8:	10 03 f1 7a 	l.bf 106390 <__ram_length+0x86390>
    9dac:	01 00 05 02 	l.j 400b1b4 <__stack+0x3b8b1b8>
    9db0:	00 41 21 28 	l.j 1052250 <__stack+0xbd2254>
    9db4:	19 00 05 02 	l.movhi r8,0x502
    9db8:	00 41 21 54 	l.j 1052308 <__stack+0xbd230c>
    9dbc:	17 00 05 02 	.word 0x17000502
    9dc0:	00 41 21 58 	l.j 1052320 <__stack+0xbd2324>
    9dc4:	13 00 05 02 	l.bf fc00b1cc <__stack+0xfbb8b1d0>
    9dc8:	00 41 21 68 	l.j 1052368 <__stack+0xbd236c>
    9dcc:	15 00 05 02 	l.nop 0x502
    9dd0:	00 41 21 70 	l.j 1052390 <__stack+0xbd2394>
    9dd4:	15 00 05 02 	l.nop 0x502
    9dd8:	00 41 21 74 	l.j 10523a8 <__stack+0xbd23ac>
    9ddc:	13 00 05 02 	l.bf fc00b1e4 <__stack+0xfbb8b1e8>
    9de0:	00 41 21 78 	l.j 10523c0 <__stack+0xbd23c4>
    9de4:	15 00 05 02 	l.nop 0x502
    9de8:	00 41 21 88 	l.j 1052408 <__stack+0xbd240c>
    9dec:	1a 00 05 02 	l.movhi r16,0x502
    9df0:	00 41 21 a8 	l.j 1052490 <__stack+0xbd2494>
    9df4:	03 be 7f 01 	l.j fefa99f8 <__stack+0xfeb299fc>
    9df8:	00 05 02 00 	l.j 14a5f8 <__ram_length+0xca5f8>
    9dfc:	41 21 ac 5e 	.word 0x4121ac5e
    9e00:	00 05 02 00 	l.j 14a600 <__ram_length+0xca600>
    9e04:	41 21 b0 03 	.word 0x4121b003
    9e08:	b5 7f 01 00 	l.mfspr r11,r31,0x100
    9e0c:	05 02 00 41 	l.jal 4089f10 <__stack+0x3c09f14>
    9e10:	21 b4 12 00 	.word 0x21b41200
    9e14:	05 02 00 41 	l.jal 4089f18 <__stack+0x3c09f1c>
    9e18:	21 b8 15 00 	.word 0x21b81500
    9e1c:	05 02 00 41 	l.jal 4089f20 <__stack+0x3c09f24>
    9e20:	21 bc 0f 00 	.word 0x21bc0f00
    9e24:	05 02 00 41 	l.jal 4089f28 <__stack+0x3c09f2c>
    9e28:	21 c0 15 00 	.word 0x21c01500
    9e2c:	05 02 00 41 	l.jal 4089f30 <__stack+0x3c09f34>
    9e30:	21 c4 16 00 	.word 0x21c41600
    9e34:	05 02 00 41 	l.jal 4089f38 <__stack+0x3c09f3c>
    9e38:	21 cc 65 00 	.word 0x21cc6500
    9e3c:	05 02 00 41 	l.jal 4089f40 <__stack+0x3c09f44>
    9e40:	21 d0 03 b2 	.word 0x21d003b2
    9e44:	7f 01 00 05 	l.cust4 
    9e48:	02 00 41 21 	l.j f801a2cc <__stack+0xf7b9a2d0>
    9e4c:	d4 12 00 05 	l.sw 0x5(r18),r0
    9e50:	02 00 41 21 	l.j f801a2d4 <__stack+0xf7b9a2d8>
    9e54:	d8 15 00 05 	l.sb 0x5(r21),r0
    9e58:	02 00 41 21 	l.j f801a2dc <__stack+0xf7b9a2e0>
    9e5c:	dc 0f 00 05 	l.sh 0x5(r15),r0
    9e60:	02 00 41 21 	l.j f801a2e4 <__stack+0xf7b9a2e8>
    9e64:	e0 15 00 05 	l.xor r0,r21,r0
    9e68:	02 00 41 21 	l.j f801a2ec <__stack+0xf7b9a2f0>
    9e6c:	e8 6a 00 05 	.word 0xe86a0005
    9e70:	02 00 41 21 	l.j f801a2f4 <__stack+0xf7b9a2f8>
    9e74:	ec 03 af 7f 	.word 0xec03af7f
    9e78:	01 00 05 02 	l.j 400b280 <__stack+0x3b8b284>
    9e7c:	00 41 21 f4 	l.j 105264c <__stack+0xbd2650>
    9e80:	15 00 05 02 	l.nop 0x502
    9e84:	00 41 21 f8 	l.j 1052664 <__stack+0xbd2668>
    9e88:	67 00 05 02 	.word 0x67000502
    9e8c:	00 41 21 fc 	l.j 105267c <__stack+0xbd2680>
    9e90:	03 ac 7f 01 	l.j feb29a94 <__stack+0xfe6a9a98>
    9e94:	00 05 02 00 	l.j 14a694 <__ram_length+0xca694>
    9e98:	41 22 00 12 	.word 0x41220012
    9e9c:	00 05 02 00 	l.j 14a69c <__ram_length+0xca69c>
    9ea0:	41 22 08 3f 	.word 0x4122083f
    9ea4:	00 05 02 00 	l.j 14a6a4 <__ram_length+0xca6a4>
    9ea8:	41 22 0c 03 	.word 0x41220c03
    9eac:	55 01 00 05 	.word 0x55010005
    9eb0:	02 00 41 22 	l.j f801a338 <__stack+0xf7b9a33c>
    9eb4:	10 15 00 05 	l.bf 549ec8 <__stack+0xc9ecc>
    9eb8:	02 00 41 22 	l.j f801a340 <__stack+0xf7b9a344>
    9ebc:	14 0f 00 05 	.word 0x140f0005
    9ec0:	02 00 41 22 	l.j f801a348 <__stack+0xf7b9a34c>
    9ec4:	18 15 00 05 	.word 0x18150005
    9ec8:	02 00 41 22 	l.j f801a350 <__stack+0xf7b9a354>
    9ecc:	1c 16 00 05 	.word 0x1c160005
    9ed0:	02 00 41 22 	l.j f801a358 <__stack+0xf7b9a35c>
    9ed4:	20 13 00 05 	.word 0x20130005
    9ed8:	02 00 41 22 	l.j f801a360 <__stack+0xf7b9a364>
    9edc:	28 18 00 05 	.word 0x28180005
    9ee0:	02 00 41 22 	l.j f801a368 <__stack+0xf7b9a36c>
    9ee4:	2c 12 00 05 	.word 0x2c120005
    9ee8:	02 00 41 22 	l.j f801a370 <__stack+0xf7b9a374>
    9eec:	30 15 00 05 	.word 0x30150005
    9ef0:	02 00 41 22 	l.j f801a378 <__stack+0xf7b9a37c>
    9ef4:	34 0f 00 05 	.word 0x340f0005
    9ef8:	02 00 41 22 	l.j f801a380 <__stack+0xf7b9a384>
    9efc:	3c 1a 00 05 	.word 0x3c1a0005
    9f00:	02 00 41 22 	l.j f801a388 <__stack+0xf7b9a38c>
    9f04:	40 12 00 05 	.word 0x40120005
    9f08:	02 00 41 22 	l.j f801a390 <__stack+0xf7b9a394>
    9f0c:	44 15 00 05 	l.jr r0
    9f10:	02 00 41 22 	l.j f801a398 <__stack+0xf7b9a39c>
    9f14:	48 59 00 05 	l.jalr r0
    9f18:	02 00 41 22 	l.j f801a3a0 <__stack+0xf7b9a3a4>
    9f1c:	4c 03 b7 7f 	l.maci r3,0xffffb77f
    9f20:	01 00 05 02 	l.j 400b328 <__stack+0x3b8b32c>
    9f24:	00 41 22 50 	l.j 1052864 <__stack+0xbd2868>
    9f28:	16 00 05 02 	.word 0x16000502
    9f2c:	00 41 22 54 	l.j 105287c <__stack+0xbd2880>
    9f30:	13 00 05 02 	l.bf fc00b338 <__stack+0xfbb8b33c>
    9f34:	00 41 22 58 	l.j 1052894 <__stack+0xbd2898>
    9f38:	70 00 05 02 	l.cust1 
    9f3c:	00 41 22 80 	l.j 105293c <__stack+0xbd2940>
    9f40:	16 00 05 02 	.word 0x16000502
    9f44:	00 41 22 98 	l.j 10529a4 <__stack+0xbd29a8>
    9f48:	15 00 05 02 	l.nop 0x502
    9f4c:	00 41 22 e4 	l.j 1052adc <__stack+0xbd2ae0>
    9f50:	15 00 05 02 	l.nop 0x502
    9f54:	00 41 22 f4 	l.j 1052b24 <__stack+0xbd2b28>
    9f58:	15 00 05 02 	l.nop 0x502
    9f5c:	00 41 23 08 	l.j 1052b7c <__stack+0xbd2b80>
    9f60:	17 00 05 02 	.word 0x17000502
    9f64:	00 41 23 20 	l.j 1052be4 <__stack+0xbd2be8>
    9f68:	16 00 05 02 	.word 0x16000502
    9f6c:	00 41 23 34 	l.j 1052c3c <__stack+0xbd2c40>
    9f70:	16 00 05 02 	.word 0x16000502
    9f74:	00 41 23 50 	l.j 1052cb4 <__stack+0xbd2cb8>
    9f78:	16 00 05 02 	.word 0x16000502
    9f7c:	00 41 23 5c 	l.j 1052cec <__stack+0xbd2cf0>
    9f80:	15 00 05 02 	l.nop 0x502
    9f84:	00 41 23 60 	l.j 1052d04 <__stack+0xbd2d08>
    9f88:	13 00 05 02 	l.bf fc00b390 <__stack+0xfbb8b394>
    9f8c:	00 41 23 64 	l.j 1052d1c <__stack+0xbd2d20>
    9f90:	15 00 05 02 	l.nop 0x502
    9f94:	00 41 23 70 	l.j 1052d54 <__stack+0xbd2d58>
    9f98:	13 00 05 02 	l.bf fc00b3a0 <__stack+0xfbb8b3a4>
    9f9c:	00 41 23 74 	l.j 1052d6c <__stack+0xbd2d70>
    9fa0:	15 00 05 02 	l.nop 0x502
    9fa4:	00 41 23 80 	l.j 1052da4 <__stack+0xbd2da8>
    9fa8:	15 00 05 02 	l.nop 0x502
    9fac:	00 41 23 98 	l.j 1052e0c <__stack+0xbd2e10>
    9fb0:	17 00 05 02 	.word 0x17000502
    9fb4:	00 41 23 a8 	l.j 1052e54 <__stack+0xbd2e58>
    9fb8:	16 00 05 02 	.word 0x16000502
    9fbc:	00 41 23 b0 	l.j 1052e7c <__stack+0xbd2e80>
    9fc0:	15 00 05 02 	l.nop 0x502
    9fc4:	00 41 23 c4 	l.j 1052ed4 <__stack+0xbd2ed8>
    9fc8:	17 00 05 02 	.word 0x17000502
    9fcc:	00 41 23 d4 	l.j 1052f1c <__stack+0xbd2f20>
    9fd0:	1b 00 05 02 	l.movhi r24,0x502
    9fd4:	00 41 23 ec 	l.j 1052f84 <__stack+0xbd2f88>
    9fd8:	16 00 05 02 	.word 0x16000502
    9fdc:	00 41 24 1c 	l.j 105304c <__stack+0xbd3050>
    9fe0:	18 00 05 02 	l.movhi r0,0x502
    9fe4:	00 41 24 2c 	l.j 1053094 <__stack+0xbd3098>
    9fe8:	10 00 05 02 	l.bf b3f0 <__rom_size-0xef5c>
    9fec:	00 41 24 30 	l.j 10530ac <__stack+0xbd30b0>
    9ff0:	18 00 05 02 	l.movhi r0,0x502
    9ff4:	00 41 24 4c 	l.j 1053124 <__stack+0xbd3128>
    9ff8:	15 00 05 02 	l.nop 0x502
    9ffc:	00 41 24 64 	l.j 105318c <__stack+0xbd3190>
    a000:	17 00 05 02 	.word 0x17000502
    a004:	00 41 24 a8 	l.j 10532a4 <__stack+0xbd32a8>
    a008:	18 00 05 02 	l.movhi r0,0x502
    a00c:	00 41 24 ac 	l.j 10532bc <__stack+0xbd32c0>
    a010:	10 00 05 02 	l.bf b418 <__rom_size-0xef34>
    a014:	00 41 24 b4 	l.j 10532e4 <__stack+0xbd32e8>
    a018:	18 00 05 02 	l.movhi r0,0x502
    a01c:	00 41 24 bc 	l.j 105330c <__stack+0xbd3310>
    a020:	10 00 05 02 	l.bf b428 <__rom_size-0xef24>
    a024:	00 41 24 c0 	l.j 1053324 <__stack+0xbd3328>
    a028:	18 00 05 02 	l.movhi r0,0x502
    a02c:	00 41 24 dc 	l.j 105339c <__stack+0xbd33a0>
    a030:	15 00 05 02 	l.nop 0x502
    a034:	00 41 24 f4 	l.j 1053404 <__stack+0xbd3408>
    a038:	19 00 05 02 	l.movhi r8,0x502
    a03c:	00 41 25 24 	l.j 10534cc <__stack+0xbd34d0>
    a040:	1a 00 05 02 	l.movhi r16,0x502
    a044:	00 41 25 34 	l.j 1053514 <__stack+0xbd3518>
    a048:	15 00 05 02 	l.nop 0x502
    a04c:	00 41 25 40 	l.j 105354c <__stack+0xbd3550>
    a050:	15 00 05 02 	l.nop 0x502
    a054:	00 41 25 58 	l.j 10535b4 <__stack+0xbd35b8>
    a058:	17 00 05 02 	.word 0x17000502
    a05c:	00 41 25 60 	l.j 10535dc <__stack+0xbd35e0>
    a060:	18 00 05 02 	l.movhi r0,0x502
    a064:	00 41 25 68 	l.j 1053604 <__stack+0xbd3608>
    a068:	13 00 05 02 	l.bf fc00b470 <__stack+0xfbb8b474>
    a06c:	00 41 25 70 	l.j 105362c <__stack+0xbd3630>
    a070:	15 00 05 02 	l.nop 0x502
    a074:	00 41 25 80 	l.j 1053674 <__stack+0xbd3678>
    a078:	18 00 05 02 	l.movhi r0,0x502
    a07c:	00 41 25 98 	l.j 10536dc <__stack+0xbd36e0>
    a080:	03 89 7e 01 	l.j fe269884 <__stack+0xfdde9888>
    a084:	00 05 02 00 	l.j 14a884 <__ram_length+0xca884>
    a088:	41 25 9c 03 	.word 0x41259c03
    a08c:	f7 01 01 00 	l.cust6 
    a090:	05 02 00 41 	l.jal 408a194 <__stack+0x3c0a198>
    a094:	25 a0 03 89 	l.rfe 
    a098:	7e 01 00 05 	l.cust4 
    a09c:	02 00 41 25 	l.j f801a530 <__stack+0xf7b9a534>
    a0a0:	ac 15 00 05 	l.xori r0,r21,0x5
    a0a4:	02 00 41 25 	l.j f801a538 <__stack+0xf7b9a53c>
    a0a8:	b0 13 00 05 	l.muli r0,r19,0x5
    a0ac:	02 00 41 25 	l.j f801a540 <__stack+0xf7b9a544>
    a0b0:	b4 16 00 05 	l.mfspr r0,r22,0x5
    a0b4:	02 00 41 25 	l.j f801a548 <__stack+0xf7b9a54c>
    a0b8:	b8 13 00 05 	l.slli r0,r19,0x5
    a0bc:	02 00 41 25 	l.j f801a550 <__stack+0xf7b9a554>
    a0c0:	c8 15 00 05 	lf.ftoi.s r0,r21
    a0c4:	02 00 41 25 	l.j f801a558 <__stack+0xf7b9a55c>
    a0c8:	cc 13 00 05 	.word 0xcc130005
    a0cc:	02 00 41 25 	l.j f801a560 <__stack+0xf7b9a564>
    a0d0:	d0 15 00 05 	l.sd 0x5(r21),r0
    a0d4:	02 00 41 25 	l.j f801a568 <__stack+0xf7b9a56c>
    a0d8:	ec 10 00 05 	.word 0xec100005
    a0dc:	02 00 41 25 	l.j f801a570 <__stack+0xf7b9a574>
    a0e0:	f8 03 fb 01 	l.cust7 
    a0e4:	01 00 05 02 	l.j 400b4ec <__stack+0x3b8b4f0>
    a0e8:	00 41 26 00 	l.j 10538e8 <__stack+0xbd38ec>
    a0ec:	16 00 05 02 	.word 0x16000502
    a0f0:	00 41 26 08 	l.j 1053910 <__stack+0xbd3914>
    a0f4:	15 00 05 02 	l.nop 0x502
    a0f8:	00 41 26 0c 	l.j 1053928 <__stack+0xbd392c>
    a0fc:	13 00 05 02 	l.bf fc00b504 <__stack+0xfbb8b508>
    a100:	00 41 26 10 	l.j 1053940 <__stack+0xbd3944>
    a104:	15 00 05 02 	l.nop 0x502
    a108:	00 41 26 14 	l.j 1053958 <__stack+0xbd395c>
    a10c:	04 12 03 bb 	l.jal 48aff8 <__stack+0xaffc>
    a110:	02 01 00 05 	l.j f804a124 <__stack+0xf7bca128>
    a114:	02 00 41 26 	l.j f801a5ac <__stack+0xf7b9a5b0>
    a118:	18 04 10 03 	l.movhi r0,0x1003
    a11c:	c5 7d 01 00 	.word 0xc57d0100
    a120:	05 02 00 41 	l.jal 408a224 <__stack+0x3c0a228>
    a124:	26 1c 04 12 	l.rfe 
    a128:	03 c0 02 01 	l.j ff00a92c <__stack+0xfeb8a930>
    a12c:	00 05 02 00 	l.j 14a92c <__ram_length+0xca92c>
    a130:	41 26 20 04 	.word 0x41262004
    a134:	10 03 c0 7d 	l.bf fa328 <__ram_length+0x7a328>
    a138:	01 00 05 02 	l.j 400b540 <__stack+0x3b8b544>
    a13c:	00 41 26 24 	l.j 10539cc <__stack+0xbd39d0>
    a140:	04 12 03 bb 	l.jal 48b02c <__stack+0xb030>
    a144:	02 01 00 05 	l.j f804a158 <__stack+0xf7bca15c>
    a148:	02 00 41 26 	l.j f801a5e0 <__stack+0xf7b9a5e4>
    a14c:	2c 18 00 05 	.word 0x2c180005
    a150:	02 00 41 26 	l.j f801a5e8 <__stack+0xf7b9a5ec>
    a154:	3c 15 00 05 	.word 0x3c150005
    a158:	02 00 41 26 	l.j f801a5f0 <__stack+0xf7b9a5f4>
    a15c:	60 17 00 05 	.word 0x60170005
    a160:	02 00 41 26 	l.j f801a5f8 <__stack+0xf7b9a5fc>
    a164:	64 15 00 05 	.word 0x64150005
    a168:	02 00 41 26 	l.j f801a600 <__stack+0xf7b9a604>
    a16c:	68 13 00 05 	.word 0x68130005
    a170:	02 00 41 26 	l.j f801a608 <__stack+0xf7b9a60c>
    a174:	6c 15 00 05 	.word 0x6c150005
    a178:	02 00 41 26 	l.j f801a610 <__stack+0xf7b9a614>
    a17c:	70 13 00 05 	l.cust1 
    a180:	02 00 41 26 	l.j f801a618 <__stack+0xf7b9a61c>
    a184:	74 15 00 05 	l.cust2 
    a188:	02 00 41 26 	l.j f801a620 <__stack+0xf7b9a624>
    a18c:	78 13 00 05 	l.cust3 
    a190:	02 00 41 26 	l.j f801a628 <__stack+0xf7b9a62c>
    a194:	84 18 00 05 	l.lwz r0,0x5(r24)
    a198:	02 00 41 26 	l.j f801a630 <__stack+0xf7b9a634>
    a19c:	90 04 10 03 	l.lbs r0,0x1003(r4)
    a1a0:	bb 7d 01 00 	l.slli r27,r29,0x0
    a1a4:	05 02 00 41 	l.jal 408a2a8 <__stack+0x3c0a2ac>
    a1a8:	26 94 04 12 	l.rfe 
    a1ac:	03 c5 02 01 	l.j ff14a9b0 <__stack+0xfecca9b4>
    a1b0:	00 05 02 00 	l.j 14a9b0 <__ram_length+0xca9b0>
    a1b4:	41 26 98 04 	.word 0x41269804
    a1b8:	10 03 bb 7d 	l.bf f8fac <__ram_length+0x78fac>
    a1bc:	01 00 05 02 	l.j 400b5c4 <__stack+0x3b8b5c8>
    a1c0:	00 41 26 a8 	l.j 1053c60 <__stack+0xbd3c64>
    a1c4:	1c 00 05 02 	.word 0x1c000502
    a1c8:	00 41 26 b4 	l.j 1053c98 <__stack+0xbd3c9c>
    a1cc:	15 00 05 02 	l.nop 0x502
    a1d0:	00 41 26 b8 	l.j 1053cb0 <__stack+0xbd3cb4>
    a1d4:	13 00 05 02 	l.bf fc00b5dc <__stack+0xfbb8b5e0>
    a1d8:	00 41 26 bc 	l.j 1053cc8 <__stack+0xbd3ccc>
    a1dc:	15 00 05 02 	l.nop 0x502
    a1e0:	00 41 26 cc 	l.j 1053d10 <__stack+0xbd3d14>
    a1e4:	15 00 05 02 	l.nop 0x502
    a1e8:	00 41 26 dc 	l.j 1053d58 <__stack+0xbd3d5c>
    a1ec:	1c 00 05 02 	.word 0x1c000502
    a1f0:	00 41 26 e0 	l.j 1053d70 <__stack+0xbd3d74>
    a1f4:	31 00 05 02 	.word 0x31000502
    a1f8:	00 41 26 e4 	l.j 1053d88 <__stack+0xbd3d8c>
    a1fc:	03 5b 01 00 	l.j fd6ca5fc <__stack+0xfd24a600>
    a200:	05 02 00 41 	l.jal 408a304 <__stack+0x3c0a308>
    a204:	26 f4 1c 00 	l.rfe 
    a208:	05 02 00 41 	l.jal 408a30c <__stack+0x3c0a310>
    a20c:	26 f8 31 00 	l.rfe 
    a210:	05 02 00 41 	l.jal 408a314 <__stack+0x3c0a318>
    a214:	27 00 03 63 	l.rfe 
    a218:	01 00 05 02 	l.j 400b620 <__stack+0x3b8b624>
    a21c:	00 41 27 14 	l.j 1053e6c <__stack+0xbd3e70>
    a220:	15 00 05 02 	l.nop 0x502
    a224:	00 41 27 2c 	l.j 1053ed4 <__stack+0xbd3ed8>
    a228:	17 00 05 02 	.word 0x17000502
    a22c:	00 41 27 40 	l.j 1053f2c <__stack+0xbd3f30>
    a230:	16 00 05 02 	.word 0x16000502
    a234:	00 41 27 44 	l.j 1053f44 <__stack+0xbd3f48>
    a238:	13 00 05 02 	l.bf fc00b640 <__stack+0xfbb8b644>
    a23c:	00 41 27 48 	l.j 1053f5c <__stack+0xbd3f60>
    a240:	15 00 05 02 	l.nop 0x502
    a244:	00 41 27 4c 	l.j 1053f74 <__stack+0xbd3f78>
    a248:	13 00 05 02 	l.bf fc00b650 <__stack+0xfbb8b654>
    a24c:	00 41 27 50 	l.j 1053f8c <__stack+0xbd3f90>
    a250:	15 00 05 02 	l.nop 0x502
    a254:	00 41 27 60 	l.j 1053fd4 <__stack+0xbd3fd8>
    a258:	16 00 05 02 	.word 0x16000502
    a25c:	00 41 27 70 	l.j 105401c <__stack+0xbd4020>
    a260:	16 00 05 02 	.word 0x16000502
    a264:	00 41 27 84 	l.j 1054074 <__stack+0xbd4078>
    a268:	16 00 05 02 	.word 0x16000502
    a26c:	00 41 27 ac 	l.j 105411c <__stack+0xbd4120>
    a270:	15 00 05 02 	l.nop 0x502
    a274:	00 41 27 c0 	l.j 1054174 <__stack+0xbd4178>
    a278:	15 00 05 02 	l.nop 0x502
    a27c:	00 41 27 d4 	l.j 10541cc <__stack+0xbd41d0>
    a280:	16 00 05 02 	.word 0x16000502
    a284:	00 41 27 e8 	l.j 1054224 <__stack+0xbd4228>
    a288:	18 00 05 02 	l.movhi r0,0x502
    a28c:	00 41 27 f0 	l.j 105424c <__stack+0xbd4250>
    a290:	17 00 05 02 	.word 0x17000502
    a294:	00 41 28 00 	l.j 1054294 <__stack+0xbd4298>
    a298:	16 00 05 02 	.word 0x16000502
    a29c:	00 41 28 10 	l.j 10542dc <__stack+0xbd42e0>
    a2a0:	18 00 05 02 	l.movhi r0,0x502
    a2a4:	00 41 28 18 	l.j 1054304 <__stack+0xbd4308>
    a2a8:	13 00 05 02 	l.bf fc00b6b0 <__stack+0xfbb8b6b4>
    a2ac:	00 41 28 2c 	l.j 105435c <__stack+0xbd4360>
    a2b0:	15 00 05 02 	l.nop 0x502
    a2b4:	00 41 28 78 	l.j 1054494 <__stack+0xbd4498>
    a2b8:	03 61 01 00 	l.j fd84a6b8 <__stack+0xfd3ca6bc>
    a2bc:	05 02 00 41 	l.jal 408a3c0 <__stack+0x3c0a3c4>
    a2c0:	28 84 36 00 	.word 0x28843600
    a2c4:	05 02 00 41 	l.jal 408a3c8 <__stack+0x3c0a3cc>
    a2c8:	28 b4 15 00 	.word 0x28b41500
    a2cc:	05 02 00 41 	l.jal 408a3d0 <__stack+0x3c0a3d4>
    a2d0:	28 b8 13 00 	.word 0x28b81300
    a2d4:	05 02 00 41 	l.jal 408a3d8 <__stack+0x3c0a3dc>
    a2d8:	28 c8 15 00 	.word 0x28c81500
    a2dc:	05 02 00 41 	l.jal 408a3e0 <__stack+0x3c0a3e4>
    a2e0:	28 ec 15 00 	.word 0x28ec1500
    a2e4:	05 02 00 41 	l.jal 408a3e8 <__stack+0x3c0a3ec>
    a2e8:	29 10 15 00 	.word 0x29101500
    a2ec:	05 02 00 41 	l.jal 408a3f0 <__stack+0x3c0a3f4>
    a2f0:	29 28 15 00 	.word 0x29281500
    a2f4:	05 02 00 41 	l.jal 408a3f8 <__stack+0x3c0a3fc>
    a2f8:	29 48 16 00 	.word 0x29481600
    a2fc:	05 02 00 41 	l.jal 408a400 <__stack+0x3c0a404>
    a300:	29 50 15 00 	.word 0x29501500
    a304:	05 02 00 41 	l.jal 408a408 <__stack+0x3c0a40c>
    a308:	29 54 13 00 	.word 0x29541300
    a30c:	05 02 00 41 	l.jal 408a410 <__stack+0x3c0a414>
    a310:	29 58 15 00 	.word 0x29581500
    a314:	05 02 00 41 	l.jal 408a418 <__stack+0x3c0a41c>
    a318:	29 68 18 00 	.word 0x29681800
    a31c:	05 02 00 41 	l.jal 408a420 <__stack+0x3c0a424>
    a320:	29 74 15 00 	.word 0x29741500
    a324:	05 02 00 41 	l.jal 408a428 <__stack+0x3c0a42c>
    a328:	29 88 15 00 	.word 0x29881500
    a32c:	05 02 00 41 	l.jal 408a430 <__stack+0x3c0a434>
    a330:	29 a8 16 00 	.word 0x29a81600
    a334:	05 02 00 41 	l.jal 408a438 <__stack+0x3c0a43c>
    a338:	29 ac 16 00 	.word 0x29ac1600
    a33c:	05 02 00 41 	l.jal 408a440 <__stack+0x3c0a444>
    a340:	29 b0 12 00 	.word 0x29b01200
    a344:	05 02 00 41 	l.jal 408a448 <__stack+0x3c0a44c>
    a348:	29 b4 16 00 	.word 0x29b41600
    a34c:	05 02 00 41 	l.jal 408a450 <__stack+0x3c0a454>
    a350:	29 b8 12 00 	.word 0x29b81200
    a354:	05 02 00 41 	l.jal 408a458 <__stack+0x3c0a45c>
    a358:	29 bc 15 00 	.word 0x29bc1500
    a35c:	05 02 00 41 	l.jal 408a460 <__stack+0x3c0a464>
    a360:	29 c4 15 00 	.word 0x29c41500
    a364:	05 02 00 41 	l.jal 408a468 <__stack+0x3c0a46c>
    a368:	29 d0 16 00 	.word 0x29d01600
    a36c:	05 02 00 41 	l.jal 408a470 <__stack+0x3c0a474>
    a370:	29 f0 16 00 	.word 0x29f01600
    a374:	05 02 00 41 	l.jal 408a478 <__stack+0x3c0a47c>
    a378:	29 f4 15 00 	.word 0x29f41500
    a37c:	05 02 00 41 	l.jal 408a480 <__stack+0x3c0a484>
    a380:	29 f8 13 00 	.word 0x29f81300
    a384:	05 02 00 41 	l.jal 408a488 <__stack+0x3c0a48c>
    a388:	2a 00 15 00 	.word 0x2a001500
    a38c:	05 02 00 41 	l.jal 408a490 <__stack+0x3c0a494>
    a390:	2a 08 15 00 	.word 0x2a081500
    a394:	05 02 00 41 	l.jal 408a498 <__stack+0x3c0a49c>
    a398:	2a 18 16 00 	.word 0x2a181600
    a39c:	05 02 00 41 	l.jal 408a4a0 <__stack+0x3c0a4a4>
    a3a0:	2a 20 16 00 	.word 0x2a201600
    a3a4:	05 02 00 41 	l.jal 408a4a8 <__stack+0x3c0a4ac>
    a3a8:	2a 38 16 00 	.word 0x2a381600
    a3ac:	05 02 00 41 	l.jal 408a4b0 <__stack+0x3c0a4b4>
    a3b0:	2a 60 17 00 	.word 0x2a601700
    a3b4:	05 02 00 41 	l.jal 408a4b8 <__stack+0x3c0a4bc>
    a3b8:	2a 6c 13 00 	.word 0x2a6c1300
    a3bc:	05 02 00 41 	l.jal 408a4c0 <__stack+0x3c0a4c4>
    a3c0:	2a 70 15 00 	.word 0x2a701500
    a3c4:	05 02 00 41 	l.jal 408a4c8 <__stack+0x3c0a4cc>
    a3c8:	2a 78 19 00 	.word 0x2a781900
    a3cc:	05 02 00 41 	l.jal 408a4d0 <__stack+0x3c0a4d4>
    a3d0:	2a 7c 13 00 	.word 0x2a7c1300
    a3d4:	05 02 00 41 	l.jal 408a4d8 <__stack+0x3c0a4dc>
    a3d8:	2a 80 15 00 	.word 0x2a801500
    a3dc:	05 02 00 41 	l.jal 408a4e0 <__stack+0x3c0a4e4>
    a3e0:	2a 9c 17 00 	.word 0x2a9c1700
    a3e4:	05 02 00 41 	l.jal 408a4e8 <__stack+0x3c0a4ec>
    a3e8:	2a a4 16 00 	.word 0x2aa41600
    a3ec:	05 02 00 41 	l.jal 408a4f0 <__stack+0x3c0a4f4>
    a3f0:	2a b4 15 00 	.word 0x2ab41500
    a3f4:	05 02 00 41 	l.jal 408a4f8 <__stack+0x3c0a4fc>
    a3f8:	2a b8 13 00 	.word 0x2ab81300
    a3fc:	05 02 00 41 	l.jal 408a500 <__stack+0x3c0a504>
    a400:	2a bc 15 00 	.word 0x2abc1500
    a404:	05 02 00 41 	l.jal 408a508 <__stack+0x3c0a50c>
    a408:	2a c4 15 00 	.word 0x2ac41500
    a40c:	05 02 00 41 	l.jal 408a510 <__stack+0x3c0a514>
    a410:	2a d4 16 00 	.word 0x2ad41600
    a414:	05 02 00 41 	l.jal 408a518 <__stack+0x3c0a51c>
    a418:	2a dc 16 00 	.word 0x2adc1600
    a41c:	05 02 00 41 	l.jal 408a520 <__stack+0x3c0a524>
    a420:	2a f4 15 00 	.word 0x2af41500
    a424:	05 02 00 41 	l.jal 408a528 <__stack+0x3c0a52c>
    a428:	2b 0c 15 00 	.word 0x2b0c1500
    a42c:	05 02 00 41 	l.jal 408a530 <__stack+0x3c0a534>
    a430:	2b 18 15 00 	.word 0x2b181500
    a434:	05 02 00 41 	l.jal 408a538 <__stack+0x3c0a53c>
    a438:	2b 1c 13 00 	.word 0x2b1c1300
    a43c:	05 02 00 41 	l.jal 408a540 <__stack+0x3c0a544>
    a440:	2b 20 15 00 	.word 0x2b201500
    a444:	05 02 00 41 	l.jal 408a548 <__stack+0x3c0a54c>
    a448:	2b 28 16 00 	.word 0x2b281600
    a44c:	05 02 00 41 	l.jal 408a550 <__stack+0x3c0a554>
    a450:	2b 30 15 00 	.word 0x2b301500
    a454:	05 02 00 41 	l.jal 408a558 <__stack+0x3c0a55c>
    a458:	2b 40 16 00 	.word 0x2b401600
    a45c:	05 02 00 41 	l.jal 408a560 <__stack+0x3c0a564>
    a460:	2b 48 16 00 	.word 0x2b481600
    a464:	05 02 00 41 	l.jal 408a568 <__stack+0x3c0a56c>
    a468:	2b 54 15 00 	.word 0x2b541500
    a46c:	05 02 00 41 	l.jal 408a570 <__stack+0x3c0a574>
    a470:	2b 70 13 00 	.word 0x2b701300
    a474:	05 02 00 41 	l.jal 408a578 <__stack+0x3c0a57c>
    a478:	2b 74 15 00 	.word 0x2b741500
    a47c:	05 02 00 41 	l.jal 408a580 <__stack+0x3c0a584>
    a480:	2b 78 13 00 	.word 0x2b781300
    a484:	05 02 00 41 	l.jal 408a588 <__stack+0x3c0a58c>
    a488:	2b 84 17 00 	.word 0x2b841700
    a48c:	05 02 00 41 	l.jal 408a590 <__stack+0x3c0a594>
    a490:	2b 98 16 00 	.word 0x2b981600
    a494:	05 02 00 41 	l.jal 408a598 <__stack+0x3c0a59c>
    a498:	2b a0 16 00 	.word 0x2ba01600
    a49c:	05 02 00 41 	l.jal 408a5a0 <__stack+0x3c0a5a4>
    a4a0:	2b ac 15 00 	.word 0x2bac1500
    a4a4:	05 02 00 41 	l.jal 408a5a8 <__stack+0x3c0a5ac>
    a4a8:	2b bc 1a 00 	.word 0x2bbc1a00
    a4ac:	05 02 00 41 	l.jal 408a5b0 <__stack+0x3c0a5b4>
    a4b0:	2b d4 03 96 	.word 0x2bd40396
    a4b4:	0f 01 00 05 	l.bnf fc04a4c8 <__stack+0xfbbca4cc>
    a4b8:	02 00 41 2b 	l.j f801a964 <__stack+0xf7b9a968>
    a4bc:	d8 03 ea 70 	l.sb 0x270(r3),r29
    a4c0:	01 00 05 02 	l.j 400b8c8 <__stack+0x3b8b8cc>
    a4c4:	00 41 2b dc 	l.j 1055434 <__stack+0xbd5438>
    a4c8:	03 96 0f 01 	l.j fe58e0cc <__stack+0xfe10e0d0>
    a4cc:	00 05 02 00 	l.j 14accc <__ram_length+0xcaccc>
    a4d0:	41 2b e0 03 	.word 0x412be003
    a4d4:	ea 70 01 00 	.word 0xea700100
    a4d8:	05 02 00 41 	l.jal 408a5dc <__stack+0x3c0a5e0>
    a4dc:	2b e4 03 96 	.word 0x2be40396
    a4e0:	0f 01 00 05 	l.bnf fc04a4f4 <__stack+0xfbbca4f8>
    a4e4:	02 00 41 2b 	l.j f801a990 <__stack+0xf7b9a994>
    a4e8:	f4 15 00 05 	l.cust6 
    a4ec:	02 00 41 2c 	l.j f801a99c <__stack+0xf7b9a9a0>
    a4f0:	00 16 00 05 	l.j 58a504 <__stack+0x10a508>
    a4f4:	02 00 41 2c 	l.j f801a9a4 <__stack+0xf7b9a9a8>
    a4f8:	04 15 00 05 	l.jal 54a50c <__stack+0xca510>
    a4fc:	02 00 41 2c 	l.j f801a9ac <__stack+0xf7b9a9b0>
    a500:	08 13 00 05 	.word 0x08130005
    a504:	02 00 41 2c 	l.j f801a9b4 <__stack+0xf7b9a9b8>
    a508:	14 17 00 05 	.word 0x14170005
    a50c:	02 00 41 2c 	l.j f801a9bc <__stack+0xf7b9a9c0>
    a510:	28 17 00 05 	.word 0x28170005
    a514:	02 00 41 2c 	l.j f801a9c4 <__stack+0xf7b9a9c8>
    a518:	2c 11 00 05 	.word 0x2c110005
    a51c:	02 00 41 2c 	l.j f801a9cc <__stack+0xf7b9a9d0>
    a520:	40 19 00 05 	.word 0x40190005
    a524:	02 00 41 2c 	l.j f801a9d4 <__stack+0xf7b9a9d8>
    a528:	4c 15 00 05 	l.maci r21,0x5
    a52c:	02 00 41 2c 	l.j f801a9dc <__stack+0xf7b9a9e0>
    a530:	50 13 00 05 	.word 0x50130005
    a534:	02 00 41 2c 	l.j f801a9e4 <__stack+0xf7b9a9e8>
    a538:	58 16 00 05 	.word 0x58160005
    a53c:	02 00 41 2c 	l.j f801a9ec <__stack+0xf7b9a9f0>
    a540:	5c 13 00 05 	.word 0x5c130005
    a544:	02 00 41 2c 	l.j f801a9f4 <__stack+0xf7b9a9f8>
    a548:	60 15 00 05 	.word 0x60150005
    a54c:	02 00 41 2c 	l.j f801a9fc <__stack+0xf7b9aa00>
    a550:	6c 13 00 05 	.word 0x6c130005
    a554:	02 00 41 2c 	l.j f801aa04 <__stack+0xf7b9aa08>
    a558:	78 11 00 05 	l.cust3 
    a55c:	02 00 41 2c 	l.j f801aa0c <__stack+0xf7b9aa10>
    a560:	90 1c 00 05 	l.lbs r0,0x5(r28)
    a564:	02 00 41 2c 	l.j f801aa14 <__stack+0xf7b9aa18>
    a568:	a0 15 00 05 	l.addic r0,r21,0x5
    a56c:	02 00 41 2c 	l.j f801aa1c <__stack+0xf7b9aa20>
    a570:	c0 03 5a 01 	l.mtspr r3,r11,0x201
    a574:	00 05 02 00 	l.j 14ad74 <__ram_length+0xcad74>
    a578:	41 2c cc 15 	.word 0x412ccc15
    a57c:	00 05 02 00 	l.j 14ad7c <__ram_length+0xcad7c>
    a580:	41 2c d0 11 	.word 0x412cd011
    a584:	00 05 02 00 	l.j 14ad84 <__ram_length+0xcad84>
    a588:	41 2c fc 1b 	.word 0x412cfc1b
    a58c:	00 05 02 00 	l.j 14ad8c <__ram_length+0xcad8c>
    a590:	41 2d 08 13 	.word 0x412d0813
    a594:	00 05 02 00 	l.j 14ad94 <__ram_length+0xcad94>
    a598:	41 2d 14 3d 	.word 0x412d143d
    a59c:	00 05 02 00 	l.j 14ad9c <__ram_length+0xcad9c>
    a5a0:	41 2d 1c 10 	.word 0x412d1c10
    a5a4:	00 05 02 00 	l.j 14ada4 <__ram_length+0xcada4>
    a5a8:	41 2d 48 15 	.word 0x412d4815
    a5ac:	00 05 02 00 	l.j 14adac <__ram_length+0xcadac>
    a5b0:	41 2d 4c 04 	.word 0x412d4c04
    a5b4:	18 03 d7 6d 	.word 0x1803d76d
    a5b8:	01 00 05 02 	l.j 400b9c0 <__stack+0x3b8b9c4>
    a5bc:	00 41 2d 54 	l.j 1055b0c <__stack+0xbd5b10>
    a5c0:	04 08 03 a2 	l.jal 20b448 <__ram_length+0x18b448>
    a5c4:	7f 01 00 05 	l.cust4 
    a5c8:	02 00 41 2d 	l.j f801aa7c <__stack+0xf7b9aa80>
    a5cc:	5c 13 00 05 	.word 0x5c130005
    a5d0:	02 00 41 2d 	l.j f801aa84 <__stack+0xf7b9aa88>
    a5d4:	68 04 10 03 	.word 0x68041003
    a5d8:	8b 13 01 00 	l.lws r24,0x100(r19)
    a5dc:	05 02 00 41 	l.jal 408a6e0 <__stack+0x3c0a6e4>
    a5e0:	2d 80 16 00 	.word 0x2d801600
    a5e4:	05 02 00 41 	l.jal 408a6e8 <__stack+0x3c0a6ec>
    a5e8:	2d 8c 15 00 	.word 0x2d8c1500
    a5ec:	05 02 00 41 	l.jal 408a6f0 <__stack+0x3c0a6f4>
    a5f0:	2d 90 13 00 	.word 0x2d901300
    a5f4:	05 02 00 41 	l.jal 408a6f8 <__stack+0x3c0a6fc>
    a5f8:	2d 9c 15 00 	.word 0x2d9c1500
    a5fc:	05 02 00 41 	l.jal 408a700 <__stack+0x3c0a704>
    a600:	2d a0 13 00 	.word 0x2da01300
    a604:	05 02 00 41 	l.jal 408a708 <__stack+0x3c0a70c>
    a608:	2d a4 15 00 	.word 0x2da41500
    a60c:	05 02 00 41 	l.jal 408a710 <__stack+0x3c0a714>
    a610:	2d b4 18 00 	.word 0x2db41800
    a614:	05 02 00 41 	l.jal 408a718 <__stack+0x3c0a71c>
    a618:	2d cc 15 00 	.word 0x2dcc1500
    a61c:	05 02 00 41 	l.jal 408a720 <__stack+0x3c0a724>
    a620:	2d d0 13 00 	.word 0x2dd01300
    a624:	05 02 00 41 	l.jal 408a728 <__stack+0x3c0a72c>
    a628:	2d d4 15 00 	.word 0x2dd41500
    a62c:	05 02 00 41 	l.jal 408a730 <__stack+0x3c0a734>
    a630:	2d d8 13 00 	.word 0x2dd81300
    a634:	05 02 00 41 	l.jal 408a738 <__stack+0x3c0a73c>
    a638:	2d dc 15 00 	.word 0x2ddc1500
    a63c:	05 02 00 41 	l.jal 408a740 <__stack+0x3c0a744>
    a640:	2d f0 15 00 	.word 0x2df01500
    a644:	05 02 00 41 	l.jal 408a748 <__stack+0x3c0a74c>
    a648:	2d f8 16 00 	.word 0x2df81600
    a64c:	05 02 00 41 	l.jal 408a750 <__stack+0x3c0a754>
    a650:	2e 08 15 00 	.word 0x2e081500
    a654:	05 02 00 41 	l.jal 408a758 <__stack+0x3c0a75c>
    a658:	2e 0c 13 00 	.word 0x2e0c1300
    a65c:	05 02 00 41 	l.jal 408a760 <__stack+0x3c0a764>
    a660:	2e 10 17 00 	.word 0x2e101700
    a664:	05 02 00 41 	l.jal 408a768 <__stack+0x3c0a76c>
    a668:	2e 14 11 00 	.word 0x2e141100
    a66c:	05 02 00 41 	l.jal 408a770 <__stack+0x3c0a774>
    a670:	2e 20 15 00 	.word 0x2e201500
    a674:	05 02 00 41 	l.jal 408a778 <__stack+0x3c0a77c>
    a678:	2e 24 19 00 	.word 0x2e241900
    a67c:	05 02 00 41 	l.jal 408a780 <__stack+0x3c0a784>
    a680:	2e 28 0f 00 	.word 0x2e280f00
    a684:	05 02 00 41 	l.jal 408a788 <__stack+0x3c0a78c>
    a688:	2e 2c 15 00 	.word 0x2e2c1500
    a68c:	05 02 00 41 	l.jal 408a790 <__stack+0x3c0a794>
    a690:	2e 30 15 00 	.word 0x2e301500
    a694:	05 02 00 41 	l.jal 408a798 <__stack+0x3c0a79c>
    a698:	2e 34 17 00 	.word 0x2e341700
    a69c:	05 02 00 41 	l.jal 408a7a0 <__stack+0x3c0a7a4>
    a6a0:	2e 48 15 00 	.word 0x2e481500
    a6a4:	05 02 00 41 	l.jal 408a7a8 <__stack+0x3c0a7ac>
    a6a8:	2e 5c 16 00 	.word 0x2e5c1600
    a6ac:	05 02 00 41 	l.jal 408a7b0 <__stack+0x3c0a7b4>
    a6b0:	2e 70 16 00 	.word 0x2e701600
    a6b4:	05 02 00 41 	l.jal 408a7b8 <__stack+0x3c0a7bc>
    a6b8:	2e 88 15 00 	.word 0x2e881500
    a6bc:	05 02 00 41 	l.jal 408a7c0 <__stack+0x3c0a7c4>
    a6c0:	2e a4 15 00 	.word 0x2ea41500
    a6c4:	05 02 00 41 	l.jal 408a7c8 <__stack+0x3c0a7cc>
    a6c8:	2e d0 15 00 	.word 0x2ed01500
    a6cc:	05 02 00 41 	l.jal 408a7d0 <__stack+0x3c0a7d4>
    a6d0:	2e e8 03 b9 	.word 0x2ee803b9
    a6d4:	70 01 00 05 	l.cust1 
    a6d8:	02 00 41 2e 	l.j f801ab90 <__stack+0xf7b9ab94>
    a6dc:	f0 16 00 05 	l.cust5 r0,r22,r0,0x0,0x5
    a6e0:	02 00 41 2e 	l.j f801ab98 <__stack+0xf7b9ab9c>
    a6e4:	f4 12 00 05 	l.cust6 
    a6e8:	02 00 41 2e 	l.j f801aba0 <__stack+0xf7b9aba4>
    a6ec:	f8 15 00 05 	l.cust7 
    a6f0:	02 00 41 2e 	l.j f801aba8 <__stack+0xf7b9abac>
    a6f4:	fc 15 00 05 	l.cust8 
    a6f8:	02 00 41 2f 	l.j f801abb4 <__stack+0xf7b9abb8>
    a6fc:	00 13 00 05 	l.j 4ca710 <__stack+0x4a714>
    a700:	02 00 41 2f 	l.j f801abbc <__stack+0xf7b9abc0>
    a704:	04 15 00 05 	l.jal 54a718 <__stack+0xca71c>
    a708:	02 00 41 2f 	l.j f801abc4 <__stack+0xf7b9abc8>
    a70c:	08 13 00 05 	.word 0x08130005
    a710:	02 00 41 2f 	l.j f801abcc <__stack+0xf7b9abd0>
    a714:	14 15 00 05 	.word 0x14150005
    a718:	02 00 41 2f 	l.j f801abd4 <__stack+0xf7b9abd8>
    a71c:	20 15 00 05 	.word 0x20150005
    a720:	02 00 41 2f 	l.j f801abdc <__stack+0xf7b9abe0>
    a724:	2c 1c 00 05 	.word 0x2c1c0005
    a728:	02 00 41 2f 	l.j f801abe4 <__stack+0xf7b9abe8>
    a72c:	3c 16 00 05 	.word 0x3c160005
    a730:	02 00 41 2f 	l.j f801abec <__stack+0xf7b9abf0>
    a734:	40 12 00 05 	.word 0x40120005
    a738:	02 00 41 2f 	l.j f801abf4 <__stack+0xf7b9abf8>
    a73c:	44 15 00 05 	l.jr r0
    a740:	02 00 41 2f 	l.j f801abfc <__stack+0xf7b9ac00>
    a744:	54 15 00 05 	.word 0x54150005
    a748:	02 00 41 2f 	l.j f801ac04 <__stack+0xf7b9ac08>
    a74c:	58 15 00 05 	.word 0x58150005
    a750:	02 00 41 2f 	l.j f801ac0c <__stack+0xf7b9ac10>
    a754:	5c 13 00 05 	.word 0x5c130005
    a758:	02 00 41 2f 	l.j f801ac14 <__stack+0xf7b9ac18>
    a75c:	68 15 00 05 	.word 0x68150005
    a760:	02 00 41 2f 	l.j f801ac1c <__stack+0xf7b9ac20>
    a764:	88 15 00 05 	l.lws r0,0x5(r21)
    a768:	02 00 41 2f 	l.j f801ac24 <__stack+0xf7b9ac28>
    a76c:	a8 15 00 05 	l.ori r0,r21,0x5
    a770:	02 00 41 2f 	l.j f801ac2c <__stack+0xf7b9ac30>
    a774:	c8 15 00 05 	lf.ftoi.s r0,r21
    a778:	02 00 41 2f 	l.j f801ac34 <__stack+0xf7b9ac38>
    a77c:	e0 15 00 05 	l.xor r0,r21,r0
    a780:	02 00 41 30 	l.j f801ac40 <__stack+0xf7b9ac44>
    a784:	00 15 00 05 	l.j 54a798 <__stack+0xca79c>
    a788:	02 00 41 30 	l.j f801ac48 <__stack+0xf7b9ac4c>
    a78c:	20 15 00 05 	.word 0x20150005
    a790:	02 00 41 30 	l.j f801ac50 <__stack+0xf7b9ac54>
    a794:	44 15 00 05 	l.jr r0
    a798:	02 00 41 30 	l.j f801ac58 <__stack+0xf7b9ac5c>
    a79c:	64 16 00 05 	.word 0x64160005
    a7a0:	02 00 41 30 	l.j f801ac60 <__stack+0xf7b9ac64>
    a7a4:	6c 15 00 05 	.word 0x6c150005
    a7a8:	02 00 41 30 	l.j f801ac68 <__stack+0xf7b9ac6c>
    a7ac:	70 13 00 05 	l.cust1 
    a7b0:	02 00 41 30 	l.j f801ac70 <__stack+0xf7b9ac74>
    a7b4:	74 15 00 05 	l.cust2 
    a7b8:	02 00 41 30 	l.j f801ac78 <__stack+0xf7b9ac7c>
    a7bc:	84 19 00 05 	l.lwz r0,0x5(r25)
    a7c0:	02 00 41 30 	l.j f801ac80 <__stack+0xf7b9ac84>
    a7c4:	90 15 00 05 	l.lbs r0,0x5(r21)
    a7c8:	02 00 41 30 	l.j f801ac88 <__stack+0xf7b9ac8c>
    a7cc:	a4 15 00 05 	l.andi r0,r21,0x5
    a7d0:	02 00 41 30 	l.j f801ac90 <__stack+0xf7b9ac94>
    a7d4:	ac 16 00 05 	l.xori r0,r22,0x5
    a7d8:	02 00 41 30 	l.j f801ac98 <__stack+0xf7b9ac9c>
    a7dc:	c4 17 00 05 	.word 0xc4170005
    a7e0:	02 00 41 30 	l.j f801aca0 <__stack+0xf7b9aca4>
    a7e4:	d0 13 00 05 	l.sd 0x5(r19),r0
    a7e8:	02 00 41 30 	l.j f801aca8 <__stack+0xf7b9acac>
    a7ec:	d4 15 00 05 	l.sw 0x5(r21),r0
    a7f0:	02 00 41 30 	l.j f801acb0 <__stack+0xf7b9acb4>
    a7f4:	dc 16 00 05 	l.sh 0x5(r22),r0
    a7f8:	02 00 41 30 	l.j f801acb8 <__stack+0xf7b9acbc>
    a7fc:	e4 17 00 05 	l.sfeq r23,r0
    a800:	02 00 41 30 	l.j f801acc0 <__stack+0xf7b9acc4>
    a804:	f0 13 00 05 	l.cust5 r0,r19,r0,0x0,0x5
    a808:	02 00 41 30 	l.j f801acc8 <__stack+0xf7b9accc>
    a80c:	f4 15 00 05 	l.cust6 
    a810:	02 00 41 30 	l.j f801acd0 <__stack+0xf7b9acd4>
    a814:	fc 16 00 05 	l.cust8 
    a818:	02 00 41 31 	l.j f801acdc <__stack+0xf7b9ace0>
    a81c:	04 17 00 05 	l.jal 5ca830 <__stack+0x14a834>
    a820:	02 00 41 31 	l.j f801ace4 <__stack+0xf7b9ace8>
    a824:	0c 15 00 05 	l.bnf 54a838 <__stack+0xca83c>
    a828:	02 00 41 31 	l.j f801acec <__stack+0xf7b9acf0>
    a82c:	14 17 00 05 	.word 0x14170005
    a830:	02 00 41 31 	l.j f801acf4 <__stack+0xf7b9acf8>
    a834:	1c 16 00 05 	.word 0x1c160005
    a838:	02 00 41 31 	l.j f801acfc <__stack+0xf7b9ad00>
    a83c:	28 15 00 05 	.word 0x28150005
    a840:	02 00 41 31 	l.j f801ad04 <__stack+0xf7b9ad08>
    a844:	2c 13 00 05 	.word 0x2c130005
    a848:	02 00 41 31 	l.j f801ad0c <__stack+0xf7b9ad10>
    a84c:	34 17 00 05 	.word 0x34170005
    a850:	02 00 41 31 	l.j f801ad14 <__stack+0xf7b9ad18>
    a854:	3c 16 00 05 	.word 0x3c160005
    a858:	02 00 41 31 	l.j f801ad1c <__stack+0xf7b9ad20>
    a85c:	48 15 00 05 	l.jalr r0
    a860:	02 00 41 31 	l.j f801ad24 <__stack+0xf7b9ad28>
    a864:	4c 13 00 05 	l.maci r19,0x5
    a868:	02 00 41 31 	l.j f801ad2c <__stack+0xf7b9ad30>
    a86c:	54 17 00 05 	.word 0x54170005
    a870:	02 00 41 31 	l.j f801ad34 <__stack+0xf7b9ad38>
    a874:	5c 16 00 05 	.word 0x5c160005
    a878:	02 00 41 31 	l.j f801ad3c <__stack+0xf7b9ad40>
    a87c:	68 15 00 05 	.word 0x68150005
    a880:	02 00 41 31 	l.j f801ad44 <__stack+0xf7b9ad48>
    a884:	6c 13 00 05 	.word 0x6c130005
    a888:	02 00 41 31 	l.j f801ad4c <__stack+0xf7b9ad50>
    a88c:	74 17 00 05 	l.cust2 
    a890:	02 00 41 31 	l.j f801ad54 <__stack+0xf7b9ad58>
    a894:	7c 15 00 05 	l.cust4 
    a898:	02 00 41 31 	l.j f801ad5c <__stack+0xf7b9ad60>
    a89c:	8c 16 00 05 	l.lbz r0,0x5(r22)
    a8a0:	02 00 41 31 	l.j f801ad64 <__stack+0xf7b9ad68>
    a8a4:	94 16 00 05 	l.lhz r0,0x5(r22)
    a8a8:	02 00 41 31 	l.j f801ad6c <__stack+0xf7b9ad70>
    a8ac:	a4 15 00 05 	l.andi r0,r21,0x5
    a8b0:	02 00 41 31 	l.j f801ad74 <__stack+0xf7b9ad78>
    a8b4:	b4 16 00 05 	l.mfspr r0,r22,0x5
    a8b8:	02 00 41 31 	l.j f801ad7c <__stack+0xf7b9ad80>
    a8bc:	bc 16 00 05 	l.sfeqi r22,0x5
    a8c0:	02 00 41 31 	l.j f801ad84 <__stack+0xf7b9ad88>
    a8c4:	c8 15 00 05 	lf.ftoi.s r0,r21
    a8c8:	02 00 41 31 	l.j f801ad8c <__stack+0xf7b9ad90>
    a8cc:	d8 19 00 05 	l.sb 0x5(r25),r0
    a8d0:	02 00 41 31 	l.j f801ad94 <__stack+0xf7b9ad98>
    a8d4:	e8 16 00 05 	.word 0xe8160005
    a8d8:	02 00 41 31 	l.j f801ad9c <__stack+0xf7b9ada0>
    a8dc:	ec 12 00 05 	.word 0xec120005
    a8e0:	02 00 41 31 	l.j f801ada4 <__stack+0xf7b9ada8>
    a8e4:	f0 15 00 05 	l.cust5 r0,r21,r0,0x0,0x5
    a8e8:	02 00 41 32 	l.j f801adb0 <__stack+0xf7b9adb4>
    a8ec:	00 15 00 05 	l.j 54a900 <__stack+0xca904>
    a8f0:	02 00 41 32 	l.j f801adb8 <__stack+0xf7b9adbc>
    a8f4:	04 15 00 05 	l.jal 54a908 <__stack+0xca90c>
    a8f8:	02 00 41 32 	l.j f801adc0 <__stack+0xf7b9adc4>
    a8fc:	08 13 00 05 	.word 0x08130005
    a900:	02 00 41 32 	l.j f801adc8 <__stack+0xf7b9adcc>
    a904:	14 15 00 05 	.word 0x14150005
    a908:	02 00 41 32 	l.j f801add0 <__stack+0xf7b9add4>
    a90c:	34 15 00 05 	.word 0x34150005
    a910:	02 00 41 32 	l.j f801add8 <__stack+0xf7b9addc>
    a914:	4c 15 00 05 	l.maci r21,0x5
    a918:	02 00 41 32 	l.j f801ade0 <__stack+0xf7b9ade4>
    a91c:	6c 16 00 05 	.word 0x6c160005
    a920:	02 00 41 32 	l.j f801ade8 <__stack+0xf7b9adec>
    a924:	84 15 00 05 	l.lwz r0,0x5(r21)
    a928:	02 00 41 32 	l.j f801adf0 <__stack+0xf7b9adf4>
    a92c:	a8 15 00 05 	l.ori r0,r21,0x5
    a930:	02 00 41 32 	l.j f801adf8 <__stack+0xf7b9adfc>
    a934:	c0 15 00 05 	l.mtspr r21,r0,0x5
    a938:	02 00 41 32 	l.j f801ae00 <__stack+0xf7b9ae04>
    a93c:	d8 15 00 05 	l.sb 0x5(r21),r0
    a940:	02 00 41 32 	l.j f801ae08 <__stack+0xf7b9ae0c>
    a944:	f8 16 00 05 	l.cust7 
    a948:	02 00 41 33 	l.j f801ae14 <__stack+0xf7b9ae18>
    a94c:	00 15 00 05 	l.j 54a960 <__stack+0xca964>
    a950:	02 00 41 33 	l.j f801ae1c <__stack+0xf7b9ae20>
    a954:	04 13 00 05 	l.jal 4ca968 <__stack+0x4a96c>
    a958:	02 00 41 33 	l.j f801ae24 <__stack+0xf7b9ae28>
    a95c:	08 15 00 05 	.word 0x08150005
    a960:	02 00 41 33 	l.j f801ae2c <__stack+0xf7b9ae30>
    a964:	18 19 00 05 	.word 0x18190005
    a968:	02 00 41 33 	l.j f801ae34 <__stack+0xf7b9ae38>
    a96c:	24 15 00 05 	l.rfe 
    a970:	02 00 41 33 	l.j f801ae3c <__stack+0xf7b9ae40>
    a974:	40 15 00 05 	.word 0x40150005
    a978:	02 00 41 33 	l.j f801ae44 <__stack+0xf7b9ae48>
    a97c:	48 15 00 05 	l.jalr r0
    a980:	02 00 41 33 	l.j f801ae4c <__stack+0xf7b9ae50>
    a984:	6c 15 00 05 	.word 0x6c150005
    a988:	02 00 41 33 	l.j f801ae54 <__stack+0xf7b9ae58>
    a98c:	74 16 00 05 	l.cust2 
    a990:	02 00 41 33 	l.j f801ae5c <__stack+0xf7b9ae60>
    a994:	8c 16 00 05 	l.lbz r0,0x5(r22)
    a998:	02 00 41 33 	l.j f801ae64 <__stack+0xf7b9ae68>
    a99c:	90 15 00 05 	l.lbs r0,0x5(r21)
    a9a0:	02 00 41 33 	l.j f801ae6c <__stack+0xf7b9ae70>
    a9a4:	9c 16 00 05 	l.addi r0,r22,0x5
    a9a8:	02 00 41 33 	l.j f801ae74 <__stack+0xf7b9ae78>
    a9ac:	b4 17 00 05 	l.mfspr r0,r23,0x5
    a9b0:	02 00 41 33 	l.j f801ae7c <__stack+0xf7b9ae80>
    a9b4:	b8 13 00 05 	l.slli r0,r19,0x5
    a9b8:	02 00 41 33 	l.j f801ae84 <__stack+0xf7b9ae88>
    a9bc:	bc 15 00 05 	l.sfeqi r21,0x5
    a9c0:	02 00 41 33 	l.j f801ae8c <__stack+0xf7b9ae90>
    a9c4:	c8 16 00 05 	lf.ftoi.s r0,r22
    a9c8:	02 00 41 33 	l.j f801ae94 <__stack+0xf7b9ae98>
    a9cc:	e0 17 00 05 	l.xor r0,r23,r0
    a9d0:	02 00 41 33 	l.j f801ae9c <__stack+0xf7b9aea0>
    a9d4:	e4 13 00 05 	l.sfeq r19,r0
    a9d8:	02 00 41 33 	l.j f801aea4 <__stack+0xf7b9aea8>
    a9dc:	e8 15 00 05 	.word 0xe8150005
    a9e0:	02 00 41 33 	l.j f801aeac <__stack+0xf7b9aeb0>
    a9e4:	f4 16 00 05 	l.cust6 
    a9e8:	02 00 41 34 	l.j f801aeb8 <__stack+0xf7b9aebc>
    a9ec:	0c 16 00 05 	l.bnf 58aa00 <__stack+0x10aa04>
    a9f0:	02 00 41 34 	l.j f801aec0 <__stack+0xf7b9aec4>
    a9f4:	1c 1a 00 05 	.word 0x1c1a0005
    a9f8:	02 00 41 34 	l.j f801aec8 <__stack+0xf7b9aecc>
    a9fc:	28 15 00 05 	.word 0x28150005
    aa00:	02 00 41 34 	l.j f801aed0 <__stack+0xf7b9aed4>
    aa04:	2c 13 00 05 	.word 0x2c130005
    aa08:	02 00 41 34 	l.j f801aed8 <__stack+0xf7b9aedc>
    aa0c:	30 15 00 05 	.word 0x30150005
    aa10:	02 00 41 34 	l.j f801aee0 <__stack+0xf7b9aee4>
    aa14:	38 04 12 03 	.word 0x38041203
    aa18:	81 7c 01 00 	l.ld r11,0x100(r28)
    aa1c:	05 02 00 41 	l.jal 408ab20 <__stack+0x3c0ab24>
    aa20:	34 3c 04 10 	.word 0x343c0410
    aa24:	03 ff 03 01 	l.j fffcb628 <__stack+0xffb4b62c>
    aa28:	00 05 02 00 	l.j 14b228 <__ram_length+0xcb228>
    aa2c:	41 34 40 15 	.word 0x41344015
    aa30:	00 05 02 00 	l.j 14b230 <__ram_length+0xcb230>
    aa34:	41 34 4c 15 	.word 0x41344c15
    aa38:	00 05 02 00 	l.j 14b238 <__ram_length+0xcb238>
    aa3c:	41 34 58 15 	.word 0x41345815
    aa40:	00 05 02 00 	l.j 14b240 <__ram_length+0xcb240>
    aa44:	41 34 68 15 	.word 0x41346815
    aa48:	00 05 02 00 	l.j 14b248 <__ram_length+0xcb248>
    aa4c:	41 34 6c 1e 	.word 0x41346c1e
    aa50:	00 05 02 00 	l.j 14b250 <__ram_length+0xcb250>
    aa54:	41 34 70 0a 	.word 0x4134700a
    aa58:	00 05 02 00 	l.j 14b258 <__ram_length+0xcb258>
    aa5c:	41 34 78 15 	.word 0x41347815
    aa60:	00 05 02 00 	l.j 14b260 <__ram_length+0xcb260>
    aa64:	41 34 84 15 	.word 0x41348415
    aa68:	00 05 02 00 	l.j 14b268 <__ram_length+0xcb268>
    aa6c:	41 34 90 15 	.word 0x41349015
    aa70:	00 05 02 00 	l.j 14b270 <__ram_length+0xcb270>
    aa74:	41 34 9c 19 	.word 0x41349c19
    aa78:	00 05 02 00 	l.j 14b278 <__ram_length+0xcb278>
    aa7c:	41 34 b4 15 	.word 0x4134b415
    aa80:	00 05 02 00 	l.j 14b280 <__ram_length+0xcb280>
    aa84:	41 34 cc 15 	.word 0x4134cc15
    aa88:	00 05 02 00 	l.j 14b288 <__ram_length+0xcb288>
    aa8c:	41 34 f4 04 	.word 0x4134f404
    aa90:	12 03 f1 7b 	l.bf f810707c <__stack+0xf7c87080>
    aa94:	01 00 05 02 	l.j 400be9c <__stack+0x3b8bea0>
    aa98:	00 41 35 0c 	l.j 1057ec8 <__stack+0xbd7ecc>
    aa9c:	15 00 05 02 	l.nop 0x502
    aaa0:	00 41 35 24 	l.j 1057f30 <__stack+0xbd7f34>
    aaa4:	15 00 05 02 	l.nop 0x502
    aaa8:	00 41 35 30 	l.j 1057f68 <__stack+0xbd7f6c>
    aaac:	15 00 05 02 	l.nop 0x502
    aab0:	00 41 35 34 	l.j 1057f80 <__stack+0xbd7f84>
    aab4:	13 00 05 02 	l.bf fc00bebc <__stack+0xfbb8bec0>
    aab8:	00 41 35 38 	l.j 1057f98 <__stack+0xbd7f9c>
    aabc:	10 00 05 02 	l.bf bec4 <__rom_size-0xe488>
    aac0:	00 41 35 3c 	l.j 1057fb0 <__stack+0xbd7fb4>
    aac4:	18 00 05 02 	l.movhi r0,0x502
    aac8:	00 41 35 40 	l.j 1057fc8 <__stack+0xbd7fcc>
    aacc:	15 00 05 02 	l.nop 0x502
    aad0:	00 41 35 44 	l.j 1057fe0 <__stack+0xbd7fe4>
    aad4:	0f 00 05 02 	l.bnf fc00bedc <__stack+0xfbb8bee0>
    aad8:	00 41 35 48 	l.j 1057ff8 <__stack+0xbd7ffc>
    aadc:	19 00 05 02 	l.movhi r8,0x502
    aae0:	00 41 35 4c 	l.j 1058010 <__stack+0xbd8014>
    aae4:	0f 00 05 02 	l.bnf fc00beec <__stack+0xfbb8bef0>
    aae8:	00 41 35 58 	l.j 1058048 <__stack+0xbd804c>
    aaec:	04 10 03 94 	l.jal 40b93c <HandleHDD.clone.1+0xfa4>
    aaf0:	04 01 00 05 	l.jal 4ab04 <__rom_size+0x307b8>
    aaf4:	02 00 41 35 	l.j f801afc8 <__stack+0xf7b9afcc>
    aaf8:	60 16 00 05 	.word 0x60160005
    aafc:	02 00 41 35 	l.j f801afd0 <__stack+0xf7b9afd4>
    ab00:	68 15 00 05 	.word 0x68150005
    ab04:	02 00 41 35 	l.j f801afd8 <__stack+0xf7b9afdc>
    ab08:	6c 13 00 05 	.word 0x6c130005
    ab0c:	02 00 41 35 	l.j f801afe0 <__stack+0xf7b9afe4>
    ab10:	70 15 00 05 	l.cust1 
    ab14:	02 00 41 35 	l.j f801afe8 <__stack+0xf7b9afec>
    ab18:	80 04 12 03 	l.ld r0,0x1203(r4)
    ab1c:	c3 7b 01 00 	l.mtspr r27,r0,0xd900
    ab20:	05 02 00 41 	l.jal 408ac24 <__stack+0x3c0ac28>
    ab24:	35 84 12 00 	.word 0x35841200
    ab28:	05 02 00 41 	l.jal 408ac2c <__stack+0x3c0ac30>
    ab2c:	35 88 16 00 	.word 0x35881600
    ab30:	05 02 00 41 	l.jal 408ac34 <__stack+0x3c0ac38>
    ab34:	35 8c 12 00 	.word 0x358c1200
    ab38:	05 02 00 41 	l.jal 408ac3c <__stack+0x3c0ac40>
    ab3c:	35 98 12 00 	.word 0x35981200
    ab40:	05 02 00 41 	l.jal 408ac44 <__stack+0x3c0ac48>
    ab44:	35 b0 04 10 	.word 0x35b00410
    ab48:	03 96 02 01 	l.j fe58b34c <__stack+0xfe10b350>
    ab4c:	00 05 02 00 	l.j 14b34c <__ram_length+0xcb34c>
    ab50:	41 35 b4 04 	.word 0x4135b404
    ab54:	18 03 97 7e 	.word 0x1803977e
    ab58:	01 00 05 02 	l.j 400bf60 <__stack+0x3b8bf64>
    ab5c:	00 41 35 cc 	l.j 105828c <__stack+0xbd8290>
    ab60:	04 12 2a 00 	l.jal 495360 <__stack+0x15364>
    ab64:	05 02 00 41 	l.jal 408ac68 <__stack+0x3c0ac6c>
    ab68:	35 d0 03 bd 	.word 0x35d003bd
    ab6c:	7f 01 00 05 	l.cust4 
    ab70:	02 00 41 35 	l.j f801b044 <__stack+0xf7b9b048>
    ab74:	d4 59 00 05 	l.sw 0x1005(r25),r0
    ab78:	02 00 41 35 	l.j f801b04c <__stack+0xf7b9b050>
    ab7c:	d8 03 bb 7f 	l.sb 0x37f(r3),r23
    ab80:	01 00 05 02 	l.j 400bf88 <__stack+0x3b8bf8c>
    ab84:	00 41 35 e4 	l.j 1058314 <__stack+0xbd8318>
    ab88:	24 00 05 02 	l.rfe 
    ab8c:	00 41 35 e8 	l.j 105832c <__stack+0xbd8330>
    ab90:	42 00 05 02 	.word 0x42000502
    ab94:	00 41 35 f8 	l.j 1058374 <__stack+0xbd8378>
    ab98:	15 00 05 02 	l.nop 0x502
    ab9c:	00 41 36 08 	l.j 10583bc <__stack+0xbd83c0>
    aba0:	15 00 05 02 	l.nop 0x502
    aba4:	00 41 36 20 	l.j 1058424 <__stack+0xbd8428>
    aba8:	15 00 05 02 	l.nop 0x502
    abac:	00 41 36 28 	l.j 105844c <__stack+0xbd8450>
    abb0:	17 00 05 02 	.word 0x17000502
    abb4:	00 41 36 40 	l.j 10584b4 <__stack+0xbd84b8>
    abb8:	15 00 05 02 	l.nop 0x502
    abbc:	00 41 36 4c 	l.j 10584ec <__stack+0xbd84f0>
    abc0:	15 00 05 02 	l.nop 0x502
    abc4:	00 41 36 50 	l.j 1058504 <__stack+0xbd8508>
    abc8:	13 00 05 02 	l.bf fc00bfd0 <__stack+0xfbb8bfd4>
    abcc:	00 41 36 58 	l.j 105852c <__stack+0xbd8530>
    abd0:	15 00 05 02 	l.nop 0x502
    abd4:	00 41 36 5c 	l.j 1058544 <__stack+0xbd8548>
    abd8:	16 00 05 02 	.word 0x16000502
    abdc:	00 41 36 68 	l.j 105857c <__stack+0xbd8580>
    abe0:	03 48 01 00 	l.j fd20afe0 <__stack+0xfcd8afe4>
    abe4:	05 02 00 41 	l.jal 408ace8 <__stack+0x3c0acec>
    abe8:	36 6c 4c 00 	.word 0x366c4c00
    abec:	05 02 00 41 	l.jal 408acf0 <__stack+0x3c0acf4>
    abf0:	36 70 03 74 	.word 0x36700374
    abf4:	01 00 05 02 	l.j 400bffc <__stack+0x3b8c000>
    abf8:	00 41 36 74 	l.j 10585c8 <__stack+0xbd85cc>
    abfc:	03 54 01 00 	l.j fd50affc <__stack+0xfd08b000>
    ac00:	05 02 00 41 	l.jal 408ad04 <__stack+0x3c0ad08>
    ac04:	36 8c 40 00 	.word 0x368c4000
    ac08:	05 02 00 41 	l.jal 408ad0c <__stack+0x3c0ad10>
    ac0c:	36 90 03 54 	.word 0x36900354
    ac10:	01 00 05 02 	l.j 400c018 <__stack+0x3b8c01c>
    ac14:	00 41 36 ac 	l.j 10586c4 <__stack+0xbd86c8>
    ac18:	40 00 05 02 	.word 0x40000502
    ac1c:	00 41 36 b0 	l.j 10586dc <__stack+0xbd86e0>
    ac20:	03 54 01 00 	l.j fd50b020 <__stack+0xfd08b024>
    ac24:	05 02 00 41 	l.jal 408ad28 <__stack+0x3c0ad2c>
    ac28:	36 bc 40 00 	.word 0x36bc4000
    ac2c:	05 02 00 41 	l.jal 408ad30 <__stack+0x3c0ad34>
    ac30:	36 c4 04 10 	.word 0x36c40410
    ac34:	03 8a 04 01 	l.j fe28bc38 <__stack+0xfde0bc3c>
    ac38:	00 05 02 00 	l.j 14b438 <__ram_length+0xcb438>
    ac3c:	41 36 d0 15 	.word 0x4136d015
    ac40:	00 05 02 00 	l.j 14b440 <__ram_length+0xcb440>
    ac44:	41 36 dc 15 	.word 0x4136dc15
    ac48:	00 05 02 00 	l.j 14b448 <__ram_length+0xcb448>
    ac4c:	41 36 e8 15 	.word 0x4136e815
    ac50:	00 05 02 00 	l.j 14b450 <__ram_length+0xcb450>
    ac54:	41 36 f4 15 	.word 0x4136f415
    ac58:	00 05 02 00 	l.j 14b458 <__ram_length+0xcb458>
    ac5c:	41 37 00 15 	.word 0x41370015
    ac60:	00 05 02 00 	l.j 14b460 <__ram_length+0xcb460>
    ac64:	41 37 0c 15 	.word 0x41370c15
    ac68:	00 05 02 00 	l.j 14b468 <__ram_length+0xcb468>
    ac6c:	41 37 28 15 	.word 0x41372815
    ac70:	00 05 02 00 	l.j 14b470 <__ram_length+0xcb470>
    ac74:	41 37 38 16 	.word 0x41373816
    ac78:	00 05 02 00 	l.j 14b478 <__ram_length+0xcb478>
    ac7c:	41 37 40 15 	.word 0x41374015
    ac80:	00 05 02 00 	l.j 14b480 <__ram_length+0xcb480>
    ac84:	41 37 44 13 	.word 0x41374413
    ac88:	00 05 02 00 	l.j 14b488 <__ram_length+0xcb488>
    ac8c:	41 37 48 15 	.word 0x41374815
    ac90:	00 05 02 00 	l.j 14b490 <__ram_length+0xcb490>
    ac94:	41 37 58 19 	.word 0x41375819
    ac98:	00 05 02 00 	l.j 14b498 <__ram_length+0xcb498>
    ac9c:	41 37 68 15 	.word 0x41376815
    aca0:	00 05 02 00 	l.j 14b4a0 <__ram_length+0xcb4a0>
    aca4:	41 37 80 16 	.word 0x41378016
    aca8:	00 05 02 00 	l.j 14b4a8 <__ram_length+0xcb4a8>
    acac:	41 37 8c 15 	.word 0x41378c15
    acb0:	00 05 02 00 	l.j 14b4b0 <__ram_length+0xcb4b0>
    acb4:	41 37 b4 15 	.word 0x4137b415
    acb8:	00 05 02 00 	l.j 14b4b8 <__ram_length+0xcb4b8>
    acbc:	41 37 e0 15 	.word 0x4137e015
    acc0:	00 05 02 00 	l.j 14b4c0 <__ram_length+0xcb4c0>
    acc4:	41 38 0c 15 	.word 0x41380c15
    acc8:	00 05 02 00 	l.j 14b4c8 <__ram_length+0xcb4c8>
    accc:	41 38 38 15 	.word 0x41383815
    acd0:	00 05 02 00 	l.j 14b4d0 <__ram_length+0xcb4d0>
    acd4:	41 38 68 16 	.word 0x41386816
    acd8:	00 05 02 00 	l.j 14b4d8 <__ram_length+0xcb4d8>
    acdc:	41 38 7c 15 	.word 0x41387c15
    ace0:	00 05 02 00 	l.j 14b4e0 <__ram_length+0xcb4e0>
    ace4:	41 38 80 13 	.word 0x41388013
    ace8:	00 05 02 00 	l.j 14b4e8 <__ram_length+0xcb4e8>
    acec:	41 38 84 15 	.word 0x41388415
    acf0:	00 05 02 00 	l.j 14b4f0 <__ram_length+0xcb4f0>
    acf4:	41 38 94 16 	.word 0x41389416
    acf8:	00 05 02 00 	l.j 14b4f8 <__ram_length+0xcb4f8>
    acfc:	41 38 b0 15 	.word 0x4138b015
    ad00:	00 05 02 00 	l.j 14b500 <__ram_length+0xcb500>
    ad04:	41 38 e0 15 	.word 0x4138e015
    ad08:	00 05 02 00 	l.j 14b508 <__ram_length+0xcb508>
    ad0c:	41 39 10 15 	.word 0x41391015
    ad10:	00 05 02 00 	l.j 14b510 <__ram_length+0xcb510>
    ad14:	41 39 40 15 	.word 0x41394015
    ad18:	00 05 02 00 	l.j 14b518 <__ram_length+0xcb518>
    ad1c:	41 39 74 15 	.word 0x41397415
    ad20:	00 05 02 00 	l.j 14b520 <__ram_length+0xcb520>
    ad24:	41 39 a4 15 	.word 0x4139a415
    ad28:	00 05 02 00 	l.j 14b528 <__ram_length+0xcb528>
    ad2c:	41 39 bc 15 	.word 0x4139bc15
    ad30:	00 05 02 00 	l.j 14b530 <__ram_length+0xcb530>
    ad34:	41 39 d8 16 	.word 0x4139d816
    ad38:	00 05 02 00 	l.j 14b538 <__ram_length+0xcb538>
    ad3c:	41 39 e4 19 	.word 0x4139e419
    ad40:	00 05 02 00 	l.j 14b540 <__ram_length+0xcb540>
    ad44:	41 39 f0 17 	.word 0x4139f017
    ad48:	00 05 02 00 	l.j 14b548 <__ram_length+0xcb548>
    ad4c:	41 3a 08 15 	.word 0x413a0815
    ad50:	00 05 02 00 	l.j 14b550 <__ram_length+0xcb550>
    ad54:	41 3a 0c 15 	.word 0x413a0c15
    ad58:	00 05 02 00 	l.j 14b558 <__ram_length+0xcb558>
    ad5c:	41 3a 20 16 	.word 0x413a2016
    ad60:	00 05 02 00 	l.j 14b560 <__ram_length+0xcb560>
    ad64:	41 3a 28 16 	.word 0x413a2816
    ad68:	00 05 02 00 	l.j 14b568 <__ram_length+0xcb568>
    ad6c:	41 3a 44 16 	.word 0x413a4416
    ad70:	00 05 02 00 	l.j 14b570 <__ram_length+0xcb570>
    ad74:	41 3a 4c 15 	.word 0x413a4c15
    ad78:	00 05 02 00 	l.j 14b578 <__ram_length+0xcb578>
    ad7c:	41 3a 54 15 	.word 0x413a5415
    ad80:	00 05 02 00 	l.j 14b580 <__ram_length+0xcb580>
    ad84:	41 3a 5c 16 	.word 0x413a5c16
    ad88:	00 05 02 00 	l.j 14b588 <__ram_length+0xcb588>
    ad8c:	41 3a 64 18 	.word 0x413a6418
    ad90:	00 05 02 00 	l.j 14b590 <__ram_length+0xcb590>
    ad94:	41 3a 68 15 	.word 0x413a6815
    ad98:	00 05 02 00 	l.j 14b598 <__ram_length+0xcb598>
    ad9c:	41 3a 6c 13 	.word 0x413a6c13
    ada0:	00 05 02 00 	l.j 14b5a0 <__ram_length+0xcb5a0>
    ada4:	41 3a 70 18 	.word 0x413a7018
    ada8:	00 05 02 00 	l.j 14b5a8 <__ram_length+0xcb5a8>
    adac:	41 3a 7c 16 	.word 0x413a7c16
    adb0:	00 05 02 00 	l.j 14b5b0 <__ram_length+0xcb5b0>
    adb4:	41 3a 84 15 	.word 0x413a8415
    adb8:	00 05 02 00 	l.j 14b5b8 <__ram_length+0xcb5b8>
    adbc:	41 3a 88 13 	.word 0x413a8813
    adc0:	00 05 02 00 	l.j 14b5c0 <__ram_length+0xcb5c0>
    adc4:	41 3a 8c 15 	.word 0x413a8c15
    adc8:	00 05 02 00 	l.j 14b5c8 <__ram_length+0xcb5c8>
    adcc:	41 3a 9c 1c 	.word 0x413a9c1c
    add0:	00 05 02 00 	l.j 14b5d0 <__ram_length+0xcb5d0>
    add4:	41 3a a8 15 	.word 0x413aa815
    add8:	00 05 02 00 	l.j 14b5d8 <__ram_length+0xcb5d8>
    addc:	41 3a ac 13 	.word 0x413aac13
    ade0:	00 05 02 00 	l.j 14b5e0 <__ram_length+0xcb5e0>
    ade4:	41 3a b0 15 	.word 0x413ab015
    ade8:	00 05 02 00 	l.j 14b5e8 <__ram_length+0xcb5e8>
    adec:	41 3a b4 03 	.word 0x413ab403
    adf0:	c6 0c 01 00 	.word 0xc60c0100
    adf4:	05 02 00 41 	l.jal 408aef8 <__stack+0x3c0aefc>
    adf8:	3a b8 03 ba 	.word 0x3ab803ba
    adfc:	73 01 00 05 	l.cust1 
    ae00:	02 00 41 3a 	l.j f801b2e8 <__stack+0xf7b9b2ec>
    ae04:	c4 03 c6 0c 	.word 0xc403c60c
    ae08:	01 00 05 02 	l.j 400c210 <__stack+0x3b8c214>
    ae0c:	00 41 3a c8 	l.j 105992c <__stack+0xbd9930>
    ae10:	16 00 05 02 	.word 0x16000502
    ae14:	00 41 3a cc 	l.j 1059944 <__stack+0xbd9948>
    ae18:	12 00 05 02 	l.bf f800c220 <__stack+0xf7b8c224>
    ae1c:	00 41 3a d0 	l.j 105995c <__stack+0xbd9960>
    ae20:	35 00 05 02 	.word 0x35000502
    ae24:	00 41 3a d4 	l.j 1059974 <__stack+0xbd9978>
    ae28:	03 61 01 00 	l.j fd84b228 <__stack+0xfd3cb22c>
    ae2c:	05 02 00 41 	l.jal 408af30 <__stack+0x3c0af34>
    ae30:	3a e4 33 00 	.word 0x3ae43300
    ae34:	05 02 00 41 	l.jal 408af38 <__stack+0x3c0af3c>
    ae38:	3a e8 03 af 	.word 0x3ae803af
    ae3c:	7f 01 00 05 	l.cust4 
    ae40:	02 00 41 3a 	l.j f801b328 <__stack+0xf7b9b32c>
    ae44:	f0 04 08 03 	l.cust5 r0,r4,r1,0x0,0x3
    ae48:	a6 6e 01 00 	l.andi r19,r14,0x100
    ae4c:	05 02 00 41 	l.jal 408af50 <__stack+0x3c0af54>
    ae50:	3a f8 13 00 	.word 0x3af81300
    ae54:	05 02 00 41 	l.jal 408af58 <__stack+0x3c0af5c>
    ae58:	3b 0c 04 10 	.word 0x3b0c0410
    ae5c:	03 92 12 01 	l.j fe48f660 <__stack+0xfe00f664>
    ae60:	00 05 02 00 	l.j 14b660 <__ram_length+0xcb660>
    ae64:	41 3b 24 04 	.word 0x413b2404
    ae68:	18 03 cd 6e 	.word 0x1803cd6e
    ae6c:	01 00 05 02 	l.j 400c274 <__stack+0x3b8c278>
    ae70:	00 41 3b 28 	l.j 1059b10 <__stack+0xbd9b14>
    ae74:	04 10 03 b7 	l.jal 40bd50 <HandleHDD.clone.1+0x13b8>
    ae78:	11 01 00 05 	l.bf 404ae8c <__stack+0x3bcae90>
    ae7c:	02 00 41 3b 	l.j f801b368 <__stack+0xf7b9b36c>
    ae80:	2c 04 18 03 	.word 0x2c041803
    ae84:	c9 6e 01 00 	lf.add.s r11,r14,r0
    ae88:	05 02 00 41 	l.jal 408af8c <__stack+0x3c0af90>
    ae8c:	3b 30 04 10 	.word 0x3b300410
    ae90:	03 b7 11 01 	l.j fedcf294 <__stack+0xfe94f298>
    ae94:	00 05 02 00 	l.j 14b694 <__ram_length+0xcb694>
    ae98:	41 3b 34 04 	.word 0x413b3404
    ae9c:	18 03 c9 6e 	.word 0x1803c96e
    aea0:	01 00 05 02 	l.j 400c2a8 <__stack+0x3b8c2ac>
    aea4:	00 41 3b 38 	l.j 1059b84 <__stack+0xbd9b88>
    aea8:	04 10 03 b5 	l.jal 40bd7c <HandleHDD.clone.1+0x13e4>
    aeac:	11 01 00 05 	l.bf 404aec0 <__stack+0x3bcaec4>
    aeb0:	02 00 41 3b 	l.j f801b39c <__stack+0xf7b9b3a0>
    aeb4:	3c 15 00 05 	.word 0x3c150005
    aeb8:	02 00 41 3b 	l.j f801b3a4 <__stack+0xf7b9b3a8>
    aebc:	58 17 00 05 	.word 0x58170005
    aec0:	02 00 41 3b 	l.j f801b3ac <__stack+0xf7b9b3b0>
    aec4:	68 16 00 05 	.word 0x68160005
    aec8:	02 00 41 3b 	l.j f801b3b4 <__stack+0xf7b9b3b8>
    aecc:	70 17 00 05 	l.cust1 
    aed0:	02 00 41 3b 	l.j f801b3bc <__stack+0xf7b9b3c0>
    aed4:	80 12 00 05 	l.ld r0,0x5(r18)
    aed8:	02 00 41 3b 	l.j f801b3c4 <__stack+0xf7b9b3c8>
    aedc:	84 16 00 05 	l.lwz r0,0x5(r22)
    aee0:	02 00 41 3b 	l.j f801b3cc <__stack+0xf7b9b3d0>
    aee4:	94 16 00 05 	l.lhz r0,0x5(r22)
    aee8:	02 00 41 3b 	l.j f801b3d4 <__stack+0xf7b9b3d8>
    aeec:	a0 15 00 05 	l.addic r0,r21,0x5
    aef0:	02 00 41 3b 	l.j f801b3dc <__stack+0xf7b9b3e0>
    aef4:	b4 15 00 05 	l.mfspr r0,r21,0x5
    aef8:	02 00 41 3b 	l.j f801b3e4 <__stack+0xf7b9b3e8>
    aefc:	b8 03 a5 7f 	l.srli r0,r3,0x3f
    af00:	01 00 05 02 	l.j 400c308 <__stack+0x3b8c30c>
    af04:	00 41 3b c4 	l.j 1059e14 <__stack+0xbd9e18>
    af08:	04 18 03 99 	l.jal 60bd6c <__stack+0x18bd70>
    af0c:	6f 01 00 05 	.word 0x6f010005
    af10:	02 00 41 3b 	l.j f801b3fc <__stack+0xf7b9b400>
    af14:	d0 04 10 03 	l.sd 0x3(r4),r2
    af18:	fc 10 01 00 	l.cust8 
    af1c:	05 02 00 41 	l.jal 408b020 <__stack+0x3c0b024>
    af20:	3b d4 04 18 	.word 0x3bd40418
    af24:	03 84 6f 01 	l.j fe126b28 <__stack+0xfdca6b2c>
    af28:	00 05 02 00 	l.j 14b728 <__ram_length+0xcb728>
    af2c:	41 3b d8 04 	.word 0x413bd804
    af30:	10 03 fd 10 	l.bf 10a370 <__ram_length+0x8a370>
    af34:	01 00 05 02 	l.j 400c33c <__stack+0x3b8c340>
    af38:	00 41 3b dc 	l.j 1059ea8 <__stack+0xbd9eac>
    af3c:	04 18 03 83 	l.jal 60bd48 <__stack+0x18bd4c>
    af40:	6f 01 00 05 	.word 0x6f010005
    af44:	02 00 41 3b 	l.j f801b430 <__stack+0xf7b9b434>
    af48:	e0 04 10 03 	l.and r0,r4,r2
    af4c:	e7 10 01 00 	.word 0xe7100100
    af50:	05 02 00 41 	l.jal 408b054 <__stack+0x3c0b058>
    af54:	3b e4 04 18 	.word 0x3be40418
    af58:	03 99 6f 01 	l.j fe666b5c <__stack+0xfe1e6b60>
    af5c:	00 05 02 00 	l.j 14b75c <__ram_length+0xcb75c>
    af60:	41 3b f8 04 	.word 0x413bf804
    af64:	10 03 ec 10 	l.bf 105fa4 <__ram_length+0x85fa4>
    af68:	01 00 05 02 	l.j 400c370 <__stack+0x3b8c374>
    af6c:	00 41 3c 00 	l.j 1059f6c <__stack+0xbd9f70>
    af70:	19 00 05 02 	l.movhi r8,0x502
    af74:	00 41 3c 14 	l.j 1059fc4 <__stack+0xbd9fc8>
    af78:	13 00 05 02 	l.bf fc00c380 <__stack+0xfbb8c384>
    af7c:	00 41 3c 18 	l.j 1059fdc <__stack+0xbd9fe0>
    af80:	12 00 05 02 	l.bf f800c388 <__stack+0xf7b8c38c>
    af84:	00 41 3c 34 	l.j 105a054 <__stack+0xbda058>
    af88:	1f 00 05 02 	.word 0x1f000502
    af8c:	00 41 3c 3c 	l.j 105a07c <__stack+0xbda080>
    af90:	15 00 05 02 	l.nop 0x502
    af94:	00 41 3c 50 	l.j 105a0d4 <__stack+0xbda0d8>
    af98:	18 00 05 02 	l.movhi r0,0x502
    af9c:	00 41 3c 58 	l.j 105a0fc <__stack+0xbda100>
    afa0:	15 00 05 02 	l.nop 0x502
    afa4:	00 41 3c 64 	l.j 105a134 <__stack+0xbda138>
    afa8:	16 00 05 02 	.word 0x16000502
    afac:	00 41 3c 6c 	l.j 105a15c <__stack+0xbda160>
    afb0:	15 00 05 02 	l.nop 0x502
    afb4:	00 41 3c 80 	l.j 105a1b4 <__stack+0xbda1b8>
    afb8:	0f 00 05 02 	l.bnf fc00c3c0 <__stack+0xfbb8c3c4>
    afbc:	00 41 3c 84 	l.j 105a1cc <__stack+0xbda1d0>
    afc0:	04 18 03 83 	l.jal 60bdcc <__stack+0x18bdd0>
    afc4:	6f 01 00 05 	.word 0x6f010005
    afc8:	02 00 41 3c 	l.j f801b4b8 <__stack+0xf7b9b4bc>
    afcc:	88 04 10 03 	l.lws r0,0x1003(r4)
    afd0:	82 11 01 00 	l.ld r16,0x100(r17)
    afd4:	05 02 00 41 	l.jal 408b0d8 <__stack+0x3c0b0dc>
    afd8:	3c 90 19 00 	.word 0x3c901900
    afdc:	05 02 00 41 	l.jal 408b0e0 <__stack+0x3c0b0e4>
    afe0:	3c 98 15 00 	.word 0x3c981500
    afe4:	05 02 00 41 	l.jal 408b0e8 <__stack+0x3c0b0ec>
    afe8:	3c b0 17 00 	.word 0x3cb01700
    afec:	05 02 00 41 	l.jal 408b0f0 <__stack+0x3c0b0f4>
    aff0:	3c b4 11 00 	.word 0x3cb41100
    aff4:	05 02 00 41 	l.jal 408b0f8 <__stack+0x3c0b0fc>
    aff8:	3c b8 17 00 	.word 0x3cb81700
    affc:	05 02 00 41 	l.jal 408b100 <__stack+0x3c0b104>
    b000:	3c bc 15 00 	.word 0x3cbc1500
    b004:	05 02 00 41 	l.jal 408b108 <__stack+0x3c0b10c>
    b008:	3c c8 15 00 	.word 0x3cc81500
    b00c:	05 02 00 41 	l.jal 408b110 <__stack+0x3c0b114>
    b010:	3c d4 16 00 	.word 0x3cd41600
    b014:	05 02 00 41 	l.jal 408b118 <__stack+0x3c0b11c>
    b018:	3c dc 15 00 	.word 0x3cdc1500
    b01c:	05 02 00 41 	l.jal 408b120 <__stack+0x3c0b124>
    b020:	3c f0 15 00 	.word 0x3cf01500
    b024:	05 02 00 41 	l.jal 408b128 <__stack+0x3c0b12c>
    b028:	3c f8 03 6b 	.word 0x3cf8036b
    b02c:	01 00 05 02 	l.j 400c434 <__stack+0x3b8c438>
    b030:	00 41 3c fc 	l.j 105a420 <__stack+0xbda424>
    b034:	29 00 05 02 	.word 0x29000502
    b038:	00 41 3d 08 	l.j 105a458 <__stack+0xbda45c>
    b03c:	04 18 03 ef 	l.jal 60bff8 <__stack+0x18bffc>
    b040:	6e 01 00 05 	.word 0x6e010005
    b044:	02 00 41 3d 	l.j f801b538 <__stack+0xf7b9b53c>
    b048:	0c 04 10 03 	l.bnf 10f054 <__ram_length+0x8f054>
    b04c:	e9 10 01 00 	.word 0xe9100100
    b050:	05 02 00 41 	l.jal 408b154 <__stack+0x3c0b158>
    b054:	3d 24 67 00 	.word 0x3d246700
    b058:	05 02 00 41 	l.jal 408b15c <__stack+0x3c0b160>
    b05c:	3d 28 25 00 	.word 0x3d282500
    b060:	05 02 00 41 	l.jal 408b164 <__stack+0x3c0b168>
    b064:	3d 4c 16 00 	.word 0x3d4c1600
    b068:	05 02 00 41 	l.jal 408b16c <__stack+0x3c0b170>
    b06c:	3d 60 15 00 	.word 0x3d601500
    b070:	05 02 00 41 	l.jal 408b174 <__stack+0x3c0b178>
    b074:	3d 74 17 00 	.word 0x3d741700
    b078:	05 02 00 41 	l.jal 408b17c <__stack+0x3c0b180>
    b07c:	3d 90 18 00 	.word 0x3d901800
    b080:	05 02 00 41 	l.jal 408b184 <__stack+0x3c0b188>
    b084:	3d ac 15 00 	.word 0x3dac1500
    b088:	05 02 00 41 	l.jal 408b18c <__stack+0x3c0b190>
    b08c:	3d d4 17 00 	.word 0x3dd41700
    b090:	05 02 00 41 	l.jal 408b194 <__stack+0x3c0b198>
    b094:	3d d8 17 00 	.word 0x3dd81700
    b098:	05 02 00 41 	l.jal 408b19c <__stack+0x3c0b1a0>
    b09c:	3d e8 16 00 	.word 0x3de81600
    b0a0:	05 02 00 41 	l.jal 408b1a4 <__stack+0x3c0b1a8>
    b0a4:	3d fc 16 00 	.word 0x3dfc1600
    b0a8:	05 02 00 41 	l.jal 408b1ac <__stack+0x3c0b1b0>
    b0ac:	3e 08 15 00 	.word 0x3e081500
    b0b0:	05 02 00 41 	l.jal 408b1b4 <__stack+0x3c0b1b8>
    b0b4:	3e 0c 13 00 	.word 0x3e0c1300
    b0b8:	05 02 00 41 	l.jal 408b1bc <__stack+0x3c0b1c0>
    b0bc:	3e 10 15 00 	.word 0x3e101500
    b0c0:	05 02 00 41 	l.jal 408b1c4 <__stack+0x3c0b1c8>
    b0c4:	3e 14 13 00 	.word 0x3e141300
    b0c8:	05 02 00 41 	l.jal 408b1cc <__stack+0x3c0b1d0>
    b0cc:	3e 1c 15 00 	.word 0x3e1c1500
    b0d0:	05 02 00 41 	l.jal 408b1d4 <__stack+0x3c0b1d8>
    b0d4:	3e 40 18 00 	.word 0x3e401800
    b0d8:	05 02 00 41 	l.jal 408b1dc <__stack+0x3c0b1e0>
    b0dc:	3e 64 15 00 	.word 0x3e641500
    b0e0:	05 02 00 41 	l.jal 408b1e4 <__stack+0x3c0b1e8>
    b0e4:	3e 74 18 00 	.word 0x3e741800
    b0e8:	05 02 00 41 	l.jal 408b1ec <__stack+0x3c0b1f0>
    b0ec:	3e 84 15 00 	.word 0x3e841500
    b0f0:	05 02 00 41 	l.jal 408b1f4 <__stack+0x3c0b1f8>
    b0f4:	3e 98 17 00 	.word 0x3e981700
    b0f8:	05 02 00 41 	l.jal 408b1fc <__stack+0x3c0b200>
    b0fc:	3e c0 03 40 	.word 0x3ec00340
    b100:	01 00 05 02 	l.j 400c508 <__stack+0x3b8c50c>
    b104:	00 41 3e cc 	l.j 105ac34 <__stack+0xbdac38>
    b108:	04 18 03 d0 	l.jal 60c048 <__stack+0x18c04c>
    b10c:	6e 01 00 05 	.word 0x6e010005
    b110:	02 00 41 3e 	l.j f801b608 <__stack+0xf7b9b60c>
    b114:	d0 04 10 03 	l.sd 0x3(r4),r2
    b118:	b0 11 01 00 	l.muli r0,r17,0x100
    b11c:	05 02 00 41 	l.jal 408b220 <__stack+0x3c0b224>
    b120:	3e d4 04 18 	.word 0x3ed40418
    b124:	03 d0 6e 01 	l.j ff426928 <__stack+0xfefa692c>
    b128:	00 05 02 00 	l.j 14b928 <__ram_length+0xcb928>
    b12c:	41 3e dc 04 	.word 0x413edc04
    b130:	10 03 e8 04 	l.bf 105140 <__ram_length+0x85140>
    b134:	01 00 05 02 	l.j 400c53c <__stack+0x3b8c540>
    b138:	00 41 3e f0 	l.j 105acf8 <__stack+0xbdacfc>
    b13c:	18 00 05 02 	l.movhi r0,0x502
    b140:	00 41 3e fc 	l.j 105ad30 <__stack+0xbdad34>
    b144:	03 d4 0b 01 	l.j ff50dd48 <__stack+0xff08dd4c>
    b148:	00 05 02 00 	l.j 14b948 <__ram_length+0xcb948>
    b14c:	41 3f 00 03 	.word 0x413f0003
    b150:	ac 74 01 00 	l.xori r3,r20,0x100
    b154:	05 02 00 41 	l.jal 408b258 <__stack+0x3c0b25c>
    b158:	3f 04 03 d4 	.word 0x3f0403d4
    b15c:	0b 01 00 05 	.word 0x0b010005
    b160:	02 00 41 3f 	l.j f801b65c <__stack+0xf7b9b660>
    b164:	10 18 00 05 	l.bf 60b178 <__stack+0x18b17c>
    b168:	02 00 41 3f 	l.j f801b664 <__stack+0xf7b9b668>
    b16c:	14 10 00 05 	.word 0x14100005
    b170:	02 00 41 3f 	l.j f801b66c <__stack+0xf7b9b670>
    b174:	1c 18 00 05 	.word 0x1c180005
    b178:	02 00 41 3f 	l.j f801b674 <__stack+0xf7b9b678>
    b17c:	20 10 00 05 	.word 0x20100005
    b180:	02 00 41 3f 	l.j f801b67c <__stack+0xf7b9b680>
    b184:	24 18 00 05 	l.rfe 
    b188:	02 00 41 3f 	l.j f801b684 <__stack+0xf7b9b688>
    b18c:	48 17 00 05 	l.jalr r0
    b190:	02 00 41 3f 	l.j f801b68c <__stack+0xf7b9b690>
    b194:	54 16 00 05 	.word 0x54160005
    b198:	02 00 41 3f 	l.j f801b694 <__stack+0xf7b9b698>
    b19c:	58 12 00 05 	.word 0x58120005
    b1a0:	02 00 41 3f 	l.j f801b69c <__stack+0xf7b9b6a0>
    b1a4:	5c 16 00 05 	.word 0x5c160005
    b1a8:	02 00 41 3f 	l.j f801b6a4 <__stack+0xf7b9b6a8>
    b1ac:	64 15 00 05 	.word 0x64150005
    b1b0:	02 00 41 3f 	l.j f801b6ac <__stack+0xf7b9b6b0>
    b1b4:	88 15 00 05 	l.lws r0,0x5(r21)
    b1b8:	02 00 41 3f 	l.j f801b6b4 <__stack+0xf7b9b6b8>
    b1bc:	8c 17 00 05 	l.lbz r0,0x5(r23)
    b1c0:	02 00 41 3f 	l.j f801b6bc <__stack+0xf7b9b6c0>
    b1c4:	b0 13 00 05 	l.muli r0,r19,0x5
    b1c8:	02 00 41 3f 	l.j f801b6c4 <__stack+0xf7b9b6c8>
    b1cc:	b4 18 00 05 	l.mfspr r0,r24,0x5
    b1d0:	02 00 41 3f 	l.j f801b6cc <__stack+0xf7b9b6d0>
    b1d4:	d4 03 9f 74 	l.sw 0x774(r3),r19
    b1d8:	01 00 05 02 	l.j 400c5e0 <__stack+0x3b8c5e4>
    b1dc:	00 41 3f e0 	l.j 105b15c <__stack+0xbdb160>
    b1e0:	16 00 05 02 	.word 0x16000502
    b1e4:	00 41 40 04 	l.j 105b1f4 <__stack+0xbdb1f8>
    b1e8:	15 00 05 02 	l.nop 0x502
    b1ec:	00 41 40 14 	l.j 105b23c <__stack+0xbdb240>
    b1f0:	17 00 05 02 	.word 0x17000502
    b1f4:	00 41 40 1c 	l.j 105b264 <__stack+0xbdb268>
    b1f8:	16 00 05 02 	.word 0x16000502
    b1fc:	00 41 40 34 	l.j 105b2cc <__stack+0xbdb2d0>
    b200:	16 00 05 02 	.word 0x16000502
    b204:	00 41 40 58 	l.j 105b364 <__stack+0xbdb368>
    b208:	15 00 05 02 	l.nop 0x502
    b20c:	00 41 40 a8 	l.j 105b4ac <__stack+0xbdb4b0>
    b210:	15 00 05 02 	l.nop 0x502
    b214:	00 41 40 b0 	l.j 105b4d4 <__stack+0xbdb4d8>
    b218:	13 00 05 02 	l.bf fc00c620 <__stack+0xfbb8c624>
    b21c:	00 41 40 b8 	l.j 105b4fc <__stack+0xbdb500>
    b220:	15 00 05 02 	l.nop 0x502
    b224:	00 41 40 d8 	l.j 105b584 <__stack+0xbdb588>
    b228:	15 00 05 02 	l.nop 0x502
    b22c:	00 41 40 e4 	l.j 105b5bc <__stack+0xbdb5c0>
    b230:	16 00 05 02 	.word 0x16000502
    b234:	00 41 40 f8 	l.j 105b614 <__stack+0xbdb618>
    b238:	18 00 05 02 	l.movhi r0,0x502
    b23c:	00 41 41 00 	l.j 105b63c <__stack+0xbdb640>
    b240:	16 00 05 02 	.word 0x16000502
    b244:	00 41 41 24 	l.j 105b6d4 <__stack+0xbdb6d8>
    b248:	15 00 05 02 	l.nop 0x502
    b24c:	00 41 41 34 	l.j 105b71c <__stack+0xbdb720>
    b250:	16 00 05 02 	.word 0x16000502
    b254:	00 41 41 3c 	l.j 105b744 <__stack+0xbdb748>
    b258:	16 00 05 02 	.word 0x16000502
    b25c:	00 41 41 60 	l.j 105b7dc <__stack+0xbdb7e0>
    b260:	15 00 05 02 	l.nop 0x502
    b264:	00 41 41 6c 	l.j 105b814 <__stack+0xbdb818>
    b268:	17 00 05 02 	.word 0x17000502
    b26c:	00 41 41 78 	l.j 105b84c <__stack+0xbdb850>
    b270:	16 00 05 02 	.word 0x16000502
    b274:	00 41 41 9c 	l.j 105b8e4 <__stack+0xbdb8e8>
    b278:	15 00 05 02 	l.nop 0x502
    b27c:	00 41 41 a8 	l.j 105b91c <__stack+0xbdb920>
    b280:	17 00 05 02 	.word 0x17000502
    b284:	00 41 41 b4 	l.j 105b954 <__stack+0xbdb958>
    b288:	16 00 05 02 	.word 0x16000502
    b28c:	00 41 41 d4 	l.j 105b9dc <__stack+0xbdb9e0>
    b290:	15 00 05 02 	l.nop 0x502
    b294:	00 41 41 e0 	l.j 105ba14 <__stack+0xbdba18>
    b298:	04 12 e0 00 	l.jal 4c3298 <__stack+0x4329c>
    b29c:	05 02 00 41 	l.jal 408b3a0 <__stack+0x3c0b3a4>
    b2a0:	41 f0 17 00 	.word 0x41f01700
    b2a4:	05 02 00 41 	l.jal 408b3a8 <__stack+0x3c0b3ac>
    b2a8:	42 00 04 10 	.word 0x42000410
    b2ac:	03 b4 7e 01 	l.j fed2aab0 <__stack+0xfe8aaab4>
    b2b0:	00 05 02 00 	l.j 14bab0 <__ram_length+0xcbab0>
    b2b4:	41 42 0c 16 	.word 0x41420c16
    b2b8:	00 05 02 00 	l.j 14bab8 <__ram_length+0xcbab8>
    b2bc:	41 42 20 16 	.word 0x41422016
    b2c0:	00 05 02 00 	l.j 14bac0 <__ram_length+0xcbac0>
    b2c4:	41 42 5c 16 	.word 0x41425c16
    b2c8:	00 05 02 00 	l.j 14bac8 <__ram_length+0xcbac8>
    b2cc:	41 42 68 16 	.word 0x41426816
    b2d0:	00 05 02 00 	l.j 14bad0 <__ram_length+0xcbad0>
    b2d4:	41 42 88 17 	.word 0x41428817
    b2d8:	00 05 02 00 	l.j 14bad8 <__ram_length+0xcbad8>
    b2dc:	41 42 90 1b 	.word 0x4142901b
    b2e0:	00 05 02 00 	l.j 14bae0 <__ram_length+0xcbae0>
    b2e4:	41 42 ac 22 	.word 0x4142ac22
    b2e8:	00 05 02 00 	l.j 14bae8 <__ram_length+0xcbae8>
    b2ec:	41 42 b4 0d 	.word 0x4142b40d
    b2f0:	00 05 02 00 	l.j 14baf0 <__ram_length+0xcbaf0>
    b2f4:	41 42 c0 16 	.word 0x4142c016
    b2f8:	00 05 02 00 	l.j 14baf8 <__ram_length+0xcbaf8>
    b2fc:	41 42 e0 17 	.word 0x4142e017
    b300:	00 05 02 00 	l.j 14bb00 <__ram_length+0xcbb00>
    b304:	41 42 e8 16 	.word 0x4142e816
    b308:	00 05 02 00 	l.j 14bb08 <__ram_length+0xcbb08>
    b30c:	41 43 08 15 	.word 0x41430815
    b310:	00 05 02 00 	l.j 14bb10 <__ram_length+0xcbb10>
    b314:	41 43 18 18 	.word 0x41431818
    b318:	00 05 02 00 	l.j 14bb18 <__ram_length+0xcbb18>
    b31c:	41 43 34 15 	.word 0x41433415
    b320:	00 05 02 00 	l.j 14bb20 <__ram_length+0xcbb20>
    b324:	41 43 54 15 	.word 0x41435415
    b328:	00 05 02 00 	l.j 14bb28 <__ram_length+0xcbb28>
    b32c:	41 43 68 18 	.word 0x41436818
    b330:	00 05 02 00 	l.j 14bb30 <__ram_length+0xcbb30>
    b334:	41 43 78 17 	.word 0x41437817
    b338:	00 05 02 00 	l.j 14bb38 <__ram_length+0xcbb38>
    b33c:	41 43 84 16 	.word 0x41438416
    b340:	00 05 02 00 	l.j 14bb40 <__ram_length+0xcbb40>
    b344:	41 43 c4 16 	.word 0x4143c416
    b348:	00 05 02 00 	l.j 14bb48 <__ram_length+0xcbb48>
    b34c:	41 43 f4 16 	.word 0x4143f416
    b350:	00 05 02 00 	l.j 14bb50 <__ram_length+0xcbb50>
    b354:	41 44 28 16 	.word 0x41442816
    b358:	00 05 02 00 	l.j 14bb58 <__ram_length+0xcbb58>
    b35c:	41 44 48 15 	.word 0x41444815
    b360:	00 05 02 00 	l.j 14bb60 <__ram_length+0xcbb60>
    b364:	41 44 4c 16 	.word 0x41444c16
    b368:	00 05 02 00 	l.j 14bb68 <__ram_length+0xcbb68>
    b36c:	41 44 54 17 	.word 0x41445417
    b370:	00 05 02 00 	l.j 14bb70 <__ram_length+0xcbb70>
    b374:	41 44 68 16 	.word 0x41446816
    b378:	00 05 02 00 	l.j 14bb78 <__ram_length+0xcbb78>
    b37c:	41 44 78 19 	.word 0x41447819
    b380:	00 05 02 00 	l.j 14bb80 <__ram_length+0xcbb80>
    b384:	41 44 90 16 	.word 0x41449016
    b388:	00 05 02 00 	l.j 14bb88 <__ram_length+0xcbb88>
    b38c:	41 44 94 15 	.word 0x41449415
    b390:	00 05 02 00 	l.j 14bb90 <__ram_length+0xcbb90>
    b394:	41 44 98 13 	.word 0x41449813
    b398:	00 05 02 00 	l.j 14bb98 <__ram_length+0xcbb98>
    b39c:	41 44 a0 15 	.word 0x4144a015
    b3a0:	00 05 02 00 	l.j 14bba0 <__ram_length+0xcbba0>
    b3a4:	41 44 c0 15 	.word 0x4144c015
    b3a8:	00 05 02 00 	l.j 14bba8 <__ram_length+0xcbba8>
    b3ac:	41 44 cc 15 	.word 0x4144cc15
    b3b0:	00 05 02 00 	l.j 14bbb0 <__ram_length+0xcbbb0>
    b3b4:	41 44 f0 15 	.word 0x4144f015
    b3b8:	00 05 02 00 	l.j 14bbb8 <__ram_length+0xcbbb8>
    b3bc:	41 44 f4 16 	.word 0x4144f416
    b3c0:	00 05 02 00 	l.j 14bbc0 <__ram_length+0xcbbc0>
    b3c4:	41 45 00 15 	.word 0x41450015
    b3c8:	00 05 02 00 	l.j 14bbc8 <__ram_length+0xcbbc8>
    b3cc:	41 45 04 16 	.word 0x41450416
    b3d0:	00 05 02 00 	l.j 14bbd0 <__ram_length+0xcbbd0>
    b3d4:	41 45 24 04 	.word 0x41452404
    b3d8:	08 03 ab 79 	.word 0x0803ab79
    b3dc:	01 00 05 02 	l.j 400c7e4 <__stack+0x3b8c7e8>
    b3e0:	00 41 45 30 	l.j 105c8a0 <__stack+0xbdc8a4>
    b3e4:	23 00 05 02 	.word 0x23000502
    b3e8:	00 41 45 38 	l.j 105c8c8 <__stack+0xbdc8cc>
    b3ec:	13 00 05 02 	l.bf fc00c7f4 <__stack+0xfbb8c7f8>
    b3f0:	00 41 45 4c 	l.j 105c920 <__stack+0xbdc924>
    b3f4:	04 10 03 c9 	l.jal 40c318 <HandleFpga+0x114>
    b3f8:	06 01 00 05 	l.jal f804b40c <__stack+0xf7bcb410>
    b3fc:	02 00 41 45 	l.j f801b910 <__stack+0xf7b9b914>
    b400:	60 15 00 05 	.word 0x60150005
    b404:	02 00 41 45 	l.j f801b918 <__stack+0xf7b9b91c>
    b408:	84 16 00 05 	l.lwz r0,0x5(r22)
    b40c:	02 00 41 45 	l.j f801b920 <__stack+0xf7b9b924>
    b410:	a0 15 00 05 	l.addic r0,r21,0x5
    b414:	02 00 41 45 	l.j f801b928 <__stack+0xf7b9b92c>
    b418:	a8 15 00 05 	l.ori r0,r21,0x5
    b41c:	02 00 41 45 	l.j f801b930 <__stack+0xf7b9b934>
    b420:	d8 16 00 05 	l.sb 0x5(r22),r0
    b424:	02 00 41 45 	l.j f801b938 <__stack+0xf7b9b93c>
    b428:	dc 12 00 05 	l.sh 0x5(r18),r0
    b42c:	02 00 41 45 	l.j f801b940 <__stack+0xf7b9b944>
    b430:	e0 15 00 05 	l.xor r0,r21,r0
    b434:	02 00 41 45 	l.j f801b948 <__stack+0xf7b9b94c>
    b438:	e4 17 00 05 	l.sfeq r23,r0
    b43c:	02 00 41 45 	l.j f801b950 <__stack+0xf7b9b954>
    b440:	e8 12 00 05 	.word 0xe8120005
    b444:	02 00 41 45 	l.j f801b958 <__stack+0xf7b9b95c>
    b448:	ec 16 00 05 	.word 0xec160005
    b44c:	02 00 41 46 	l.j f801b964 <__stack+0xf7b9b968>
    b450:	00 19 00 05 	l.j 64b464 <__stack+0x1cb468>
    b454:	02 00 41 46 	l.j f801b96c <__stack+0xf7b9b970>
    b458:	0c 16 00 05 	l.bnf 58b46c <__stack+0x10b470>
    b45c:	02 00 41 46 	l.j f801b974 <__stack+0xf7b9b978>
    b460:	24 1d 00 05 	l.rfe 
    b464:	02 00 41 46 	l.j f801b97c <__stack+0xf7b9b980>
    b468:	30 15 00 05 	.word 0x30150005
    b46c:	02 00 41 46 	l.j f801b984 <__stack+0xf7b9b988>
    b470:	34 13 00 05 	.word 0x34130005
    b474:	02 00 41 46 	l.j f801b98c <__stack+0xf7b9b990>
    b478:	38 16 00 05 	.word 0x38160005
    b47c:	02 00 41 46 	l.j f801b994 <__stack+0xf7b9b998>
    b480:	3c 13 00 05 	.word 0x3c130005
    b484:	02 00 41 46 	l.j f801b99c <__stack+0xf7b9b9a0>
    b488:	44 15 00 05 	l.jr r0
    b48c:	02 00 41 46 	l.j f801b9a4 <__stack+0xf7b9b9a8>
    b490:	48 13 00 05 	l.jalr r0
    b494:	02 00 41 46 	l.j f801b9ac <__stack+0xf7b9b9b0>
    b498:	50 15 00 05 	.word 0x50150005
    b49c:	02 00 41 46 	l.j f801b9b4 <__stack+0xf7b9b9b8>
    b4a0:	54 15 00 05 	.word 0x54150005
    b4a4:	02 00 41 46 	l.j f801b9bc <__stack+0xf7b9b9c0>
    b4a8:	5c 16 00 05 	.word 0x5c160005
    b4ac:	02 00 41 46 	l.j f801b9c4 <__stack+0xf7b9b9c8>
    b4b0:	60 12 00 05 	.word 0x60120005
    b4b4:	02 00 41 46 	l.j f801b9cc <__stack+0xf7b9b9d0>
    b4b8:	64 16 00 05 	.word 0x64160005
    b4bc:	02 00 41 46 	l.j f801b9d4 <__stack+0xf7b9b9d8>
    b4c0:	68 12 00 05 	.word 0x68120005
    b4c4:	02 00 41 46 	l.j f801b9dc <__stack+0xf7b9b9e0>
    b4c8:	6c 16 00 05 	.word 0x6c160005
    b4cc:	02 00 41 46 	l.j f801b9e4 <__stack+0xf7b9b9e8>
    b4d0:	80 15 00 05 	l.ld r0,0x5(r21)
    b4d4:	02 00 41 46 	l.j f801b9ec <__stack+0xf7b9b9f0>
    b4d8:	9c 15 00 05 	l.addi r0,r21,0x5
    b4dc:	02 00 41 46 	l.j f801b9f4 <__stack+0xf7b9b9f8>
    b4e0:	b4 15 00 05 	l.mfspr r0,r21,0x5
    b4e4:	02 00 41 46 	l.j f801b9fc <__stack+0xf7b9ba00>
    b4e8:	d8 15 00 05 	l.sb 0x5(r21),r0
    b4ec:	02 00 41 46 	l.j f801ba04 <__stack+0xf7b9ba08>
    b4f0:	f8 15 00 05 	l.cust7 
    b4f4:	02 00 41 47 	l.j f801ba10 <__stack+0xf7b9ba14>
    b4f8:	14 15 00 05 	.word 0x14150005
    b4fc:	02 00 41 47 	l.j f801ba18 <__stack+0xf7b9ba1c>
    b500:	2c 15 00 05 	.word 0x2c150005
    b504:	02 00 41 47 	l.j f801ba20 <__stack+0xf7b9ba24>
    b508:	44 16 00 05 	l.jr r0
    b50c:	02 00 41 47 	l.j f801ba28 <__stack+0xf7b9ba2c>
    b510:	50 19 00 05 	.word 0x50190005
    b514:	02 00 41 47 	l.j f801ba30 <__stack+0xf7b9ba34>
    b518:	74 16 00 05 	l.cust2 
    b51c:	02 00 41 47 	l.j f801ba38 <__stack+0xf7b9ba3c>
    b520:	7c 15 00 05 	l.cust4 
    b524:	02 00 41 47 	l.j f801ba40 <__stack+0xf7b9ba44>
    b528:	84 17 00 05 	l.lwz r0,0x5(r23)
    b52c:	02 00 41 47 	l.j f801ba48 <__stack+0xf7b9ba4c>
    b530:	b0 16 00 05 	l.muli r0,r22,0x5
    b534:	02 00 41 47 	l.j f801ba50 <__stack+0xf7b9ba54>
    b538:	bc 15 00 05 	l.sfeqi r21,0x5
    b53c:	02 00 41 47 	l.j f801ba58 <__stack+0xf7b9ba5c>
    b540:	c0 13 00 05 	l.mtspr r19,r0,0x5
    b544:	02 00 41 47 	l.j f801ba60 <__stack+0xf7b9ba64>
    b548:	c4 15 00 05 	.word 0xc4150005
    b54c:	02 00 41 47 	l.j f801ba68 <__stack+0xf7b9ba6c>
    b550:	d4 1c 00 05 	l.sw 0x5(r28),r0
    b554:	02 00 41 47 	l.j f801ba70 <__stack+0xf7b9ba74>
    b558:	e0 15 00 05 	l.xor r0,r21,r0
    b55c:	02 00 41 47 	l.j f801ba78 <__stack+0xf7b9ba7c>
    b560:	e4 13 00 05 	l.sfeq r19,r0
    b564:	02 00 41 47 	l.j f801ba80 <__stack+0xf7b9ba84>
    b568:	e8 16 00 05 	.word 0xe8160005
    b56c:	02 00 41 47 	l.j f801ba88 <__stack+0xf7b9ba8c>
    b570:	ec 13 00 05 	.word 0xec130005
    b574:	02 00 41 47 	l.j f801ba90 <__stack+0xf7b9ba94>
    b578:	f0 15 00 05 	l.cust5 r0,r21,r0,0x0,0x5
    b57c:	02 00 41 47 	l.j f801ba98 <__stack+0xf7b9ba9c>
    b580:	f4 13 00 05 	l.cust6 
    b584:	02 00 41 47 	l.j f801baa0 <__stack+0xf7b9baa4>
    b588:	fc 15 00 05 	l.cust8 
    b58c:	02 00 41 48 	l.j f801baac <__stack+0xf7b9bab0>
    b590:	00 15 00 05 	l.j 54b5a4 <__stack+0xcb5a8>
    b594:	02 00 41 48 	l.j f801bab4 <__stack+0xf7b9bab8>
    b598:	04 16 00 05 	l.jal 58b5ac <__stack+0x10b5b0>
    b59c:	02 00 41 48 	l.j f801babc <__stack+0xf7b9bac0>
    b5a0:	08 12 00 05 	.word 0x08120005
    b5a4:	02 00 41 48 	l.j f801bac4 <__stack+0xf7b9bac8>
    b5a8:	10 16 00 05 	l.bf 58b5bc <__stack+0x10b5c0>
    b5ac:	02 00 41 48 	l.j f801bacc <__stack+0xf7b9bad0>
    b5b0:	14 12 00 05 	.word 0x14120005
    b5b4:	02 00 41 48 	l.j f801bad4 <__stack+0xf7b9bad8>
    b5b8:	18 16 00 05 	l.movhi r0,0x5
    b5bc:	02 00 41 48 	l.j f801badc <__stack+0xf7b9bae0>
    b5c0:	2c 15 00 05 	.word 0x2c150005
    b5c4:	02 00 41 48 	l.j f801bae4 <__stack+0xf7b9bae8>
    b5c8:	48 15 00 05 	l.jalr r0
    b5cc:	02 00 41 48 	l.j f801baec <__stack+0xf7b9baf0>
    b5d0:	60 15 00 05 	.word 0x60150005
    b5d4:	02 00 41 48 	l.j f801baf4 <__stack+0xf7b9baf8>
    b5d8:	84 15 00 05 	l.lwz r0,0x5(r21)
    b5dc:	02 00 41 48 	l.j f801bafc <__stack+0xf7b9bb00>
    b5e0:	a4 15 00 05 	l.andi r0,r21,0x5
    b5e4:	02 00 41 48 	l.j f801bb04 <__stack+0xf7b9bb08>
    b5e8:	c0 15 00 05 	l.mtspr r21,r0,0x5
    b5ec:	02 00 41 48 	l.j f801bb0c <__stack+0xf7b9bb10>
    b5f0:	d8 15 00 05 	l.sb 0x5(r21),r0
    b5f4:	02 00 41 48 	l.j f801bb14 <__stack+0xf7b9bb18>
    b5f8:	f0 16 00 05 	l.cust5 r0,r22,r0,0x0,0x5
    b5fc:	02 00 41 48 	l.j f801bb1c <__stack+0xf7b9bb20>
    b600:	fc 19 00 05 	l.cust8 
    b604:	02 00 41 49 	l.j f801bb28 <__stack+0xf7b9bb2c>
    b608:	20 04 12 03 	.word 0x20041203
    b60c:	da 7e 01 00 	l.sb 0xffff9900(r30),r0
    b610:	05 02 00 41 	l.jal 408b714 <__stack+0x3c0b718>
    b614:	49 28 16 00 	l.jalr r2
    b618:	05 02 00 41 	l.jal 408b71c <__stack+0x3c0b720>
    b61c:	49 30 12 00 	l.jalr r2
    b620:	05 02 00 41 	l.jal 408b724 <__stack+0x3c0b728>
    b624:	49 34 16 00 	l.jalr r2
    b628:	05 02 00 41 	l.jal 408b72c <__stack+0x3c0b730>
    b62c:	49 3c 15 00 	l.jalr r2
    b630:	05 02 00 41 	l.jal 408b734 <__stack+0x3c0b738>
    b634:	49 48 15 00 	l.jalr r2
    b638:	05 02 00 41 	l.jal 408b73c <__stack+0x3c0b740>
    b63c:	49 50 15 00 	l.jalr r2
    b640:	05 02 00 41 	l.jal 408b744 <__stack+0x3c0b748>
    b644:	49 54 15 00 	l.jalr r2
    b648:	05 02 00 41 	l.jal 408b74c <__stack+0x3c0b750>
    b64c:	49 5c 15 00 	l.jalr r2
    b650:	05 02 00 41 	l.jal 408b754 <__stack+0x3c0b758>
    b654:	49 64 15 00 	l.jalr r2
    b658:	05 02 00 41 	l.jal 408b75c <__stack+0x3c0b760>
    b65c:	49 68 04 10 	l.jalr r0
    b660:	b7 00 05 02 	l.mfspr r24,r0,0x502
    b664:	00 41 49 94 	l.j 105dcb4 <__stack+0xbddcb8>
    b668:	16 00 05 02 	.word 0x16000502
    b66c:	00 41 49 a0 	l.j 105dcec <__stack+0xbddcf0>
    b670:	15 00 05 02 	l.nop 0x502
    b674:	00 41 49 a4 	l.j 105dd04 <__stack+0xbddd08>
    b678:	13 00 05 02 	l.bf fc00ca80 <__stack+0xfbb8ca84>
    b67c:	00 41 49 a8 	l.j 105dd1c <__stack+0xbddd20>
    b680:	15 00 05 02 	l.nop 0x502
    b684:	00 41 49 b8 	l.j 105dd64 <__stack+0xbddd68>
    b688:	6d 00 05 02 	.word 0x6d000502
    b68c:	00 41 49 c4 	l.j 105dd9c <__stack+0xbddda0>
    b690:	15 00 05 02 	l.nop 0x502
    b694:	00 41 49 c8 	l.j 105ddb4 <__stack+0xbdddb8>
    b698:	13 00 05 02 	l.bf fc00caa0 <__stack+0xfbb8caa4>
    b69c:	00 41 49 cc 	l.j 105ddcc <__stack+0xbdddd0>
    b6a0:	15 00 05 02 	l.nop 0x502
    b6a4:	00 41 49 d0 	l.j 105dde4 <__stack+0xbddde8>
    b6a8:	16 00 05 02 	.word 0x16000502
    b6ac:	00 41 49 d4 	l.j 105ddfc <__stack+0xbdde00>
    b6b0:	12 00 05 02 	l.bf f800cab8 <__stack+0xf7b8cabc>
    b6b4:	00 41 49 dc 	l.j 105de24 <__stack+0xbdde28>
    b6b8:	15 00 05 02 	l.nop 0x502
    b6bc:	00 41 49 ec 	l.j 105de6c <__stack+0xbdde70>
    b6c0:	15 00 05 02 	l.nop 0x502
    b6c4:	00 41 49 f0 	l.j 105de84 <__stack+0xbdde88>
    b6c8:	17 00 05 02 	.word 0x17000502
    b6cc:	00 41 49 f4 	l.j 105de9c <__stack+0xbddea0>
    b6d0:	11 00 05 02 	l.bf 400cad8 <__stack+0x3b8cadc>
    b6d4:	00 41 4a 00 	l.j 105ded4 <__stack+0xbdded8>
    b6d8:	16 00 05 02 	.word 0x16000502
    b6dc:	00 41 4a 18 	l.j 105df3c <__stack+0xbddf40>
    b6e0:	15 00 05 02 	l.nop 0x502
    b6e4:	00 41 4a 38 	l.j 105dfc4 <__stack+0xbddfc8>
    b6e8:	15 00 05 02 	l.nop 0x502
    b6ec:	00 41 4a 58 	l.j 105e04c <__stack+0xbde050>
    b6f0:	15 00 05 02 	l.nop 0x502
    b6f4:	00 41 4a 78 	l.j 105e0d4 <__stack+0xbde0d8>
    b6f8:	15 00 05 02 	l.nop 0x502
    b6fc:	00 41 4a 98 	l.j 105e15c <__stack+0xbde160>
    b700:	15 00 05 02 	l.nop 0x502
    b704:	00 41 4a bc 	l.j 105e1f4 <__stack+0xbde1f8>
    b708:	15 00 05 02 	l.nop 0x502
    b70c:	00 41 4a d4 	l.j 105e25c <__stack+0xbde260>
    b710:	16 00 05 02 	.word 0x16000502
    b714:	00 41 4a f4 	l.j 105e2e4 <__stack+0xbde2e8>
    b718:	16 00 05 02 	.word 0x16000502
    b71c:	00 41 4b 04 	l.j 105e32c <__stack+0xbde330>
    b720:	19 00 05 02 	l.movhi r8,0x502
    b724:	00 41 4b 10 	l.j 105e364 <__stack+0xbde368>
    b728:	37 00 05 02 	.word 0x37000502
    b72c:	00 41 4b 1c 	l.j 105e39c <__stack+0xbde3a0>
    b730:	15 00 05 02 	l.nop 0x502
    b734:	00 41 4b 20 	l.j 105e3b4 <__stack+0xbde3b8>
    b738:	13 00 05 02 	l.bf fc00cb40 <__stack+0xfbb8cb44>
    b73c:	00 41 4b 24 	l.j 105e3cc <__stack+0xbde3d0>
    b740:	15 00 05 02 	l.nop 0x502
    b744:	00 41 4b 34 	l.j 105e414 <__stack+0xbde418>
    b748:	03 62 01 00 	l.j fd88bb48 <__stack+0xfd40bb4c>
    b74c:	05 02 00 41 	l.jal 408b850 <__stack+0x3c0b854>
    b750:	4b 3c 16 00 	l.jalr r2
    b754:	05 02 00 41 	l.jal 408b858 <__stack+0x3c0b85c>
    b758:	4b 54 15 00 	l.jalr r2
    b75c:	05 02 00 41 	l.jal 408b860 <__stack+0x3c0b864>
    b760:	4b 58 15 00 	l.jalr r2
    b764:	05 02 00 41 	l.jal 408b868 <__stack+0x3c0b86c>
    b768:	4b 6c 16 00 	l.jalr r2
    b76c:	05 02 00 41 	l.jal 408b870 <__stack+0x3c0b874>
    b770:	4b 74 17 00 	l.jalr r2
    b774:	05 02 00 41 	l.jal 408b878 <__stack+0x3c0b87c>
    b778:	4b 8c 15 00 	l.jalr r2
    b77c:	05 02 00 41 	l.jal 408b880 <__stack+0x3c0b884>
    b780:	4b 90 15 00 	l.jalr r2
    b784:	05 02 00 41 	l.jal 408b888 <__stack+0x3c0b88c>
    b788:	4b a4 16 00 	l.jalr r2
    b78c:	05 02 00 41 	l.jal 408b890 <__stack+0x3c0b894>
    b790:	4b ac 16 00 	l.jalr r2
    b794:	05 02 00 41 	l.jal 408b898 <__stack+0x3c0b89c>
    b798:	4b c4 16 00 	l.jalr r2
    b79c:	05 02 00 41 	l.jal 408b8a0 <__stack+0x3c0b8a4>
    b7a0:	4b cc 04 15 	l.jalr r0
    b7a4:	03 df 7c 01 	l.j ff7ea7a8 <__stack+0xff36a7ac>
    b7a8:	00 05 02 00 	l.j 14bfa8 <__ram_length+0xcbfa8>
    b7ac:	41 4b ec 16 	.word 0x414bec16
    b7b0:	00 05 02 00 	l.j 14bfb0 <__ram_length+0xcbfb0>
    b7b4:	41 4c 00 15 	.word 0x414c0015
    b7b8:	00 05 02 00 	l.j 14bfb8 <__ram_length+0xcbfb8>
    b7bc:	41 4c 10 16 	.word 0x414c1016
    b7c0:	00 05 02 00 	l.j 14bfc0 <__ram_length+0xcbfc0>
    b7c4:	41 4c 14 15 	.word 0x414c1415
    b7c8:	00 05 02 00 	l.j 14bfc8 <__ram_length+0xcbfc8>
    b7cc:	41 4c 28 04 	.word 0x414c2804
    b7d0:	08 03 e8 7a 	.word 0x0803e87a
    b7d4:	01 00 05 02 	l.j 400cbdc <__stack+0x3b8cbe0>
    b7d8:	00 41 4c 34 	l.j 105e8a8 <__stack+0xbde8ac>
    b7dc:	23 00 05 02 	.word 0x23000502
    b7e0:	00 41 4c 3c 	l.j 105e8d0 <__stack+0xbde8d4>
    b7e4:	13 00 05 02 	l.bf fc00cbec <__stack+0xfbb8cbf0>
    b7e8:	00 41 4c 50 	l.j 105e928 <__stack+0xbde92c>
    b7ec:	04 15 03 8f 	l.jal 54c628 <__stack+0xcc62c>
    b7f0:	05 01 00 05 	l.jal 404b804 <__stack+0x3bcb808>
    b7f4:	02 00 41 4c 	l.j f801bd24 <__stack+0xf7b9bd28>
    b7f8:	68 15 00 05 	.word 0x68150005
    b7fc:	02 00 41 4c 	l.j f801bd2c <__stack+0xf7b9bd30>
    b800:	7c 04 10 03 	l.cust4 
    b804:	97 03 01 00 	l.lhz r24,0x100(r3)
    b808:	05 02 00 41 	l.jal 408b90c <__stack+0x3c0b910>
    b80c:	4c 84 04 15 	l.maci r4,0x415
    b810:	03 ee 7c 01 	l.j ffbaa814 <__stack+0xff72a818>
    b814:	00 05 02 00 	l.j 14c014 <__ram_length+0xcc014>
    b818:	41 4c 90 15 	.word 0x414c9015
    b81c:	00 05 02 00 	l.j 14c01c <__ram_length+0xcc01c>
    b820:	41 4c 9c 15 	.word 0x414c9c15
    b824:	00 05 02 00 	l.j 14c024 <__ram_length+0xcc024>
    b828:	41 4c b0 16 	.word 0x414cb016
    b82c:	00 05 02 00 	l.j 14c02c <__ram_length+0xcc02c>
    b830:	41 4c b4 13 	.word 0x414cb413
    b834:	00 05 02 00 	l.j 14c034 <__ram_length+0xcc034>
    b838:	41 4c b8 15 	.word 0x414cb815
    b83c:	00 05 02 00 	l.j 14c03c <__ram_length+0xcc03c>
    b840:	41 4c bc 15 	.word 0x414cbc15
    b844:	00 05 02 00 	l.j 14c044 <__ram_length+0xcc044>
    b848:	41 4c d4 04 	.word 0x414cd404
    b84c:	08 03 d8 7a 	.word 0x0803d87a
    b850:	01 00 05 02 	l.j 400cc58 <__stack+0x3b8cc5c>
    b854:	00 41 4c d8 	l.j 105ebb4 <__stack+0xbdebb8>
    b858:	04 15 03 aa 	l.jal 54c700 <__stack+0xcc704>
    b85c:	05 01 00 05 	l.jal 404b870 <__stack+0x3bcb874>
    b860:	02 00 41 4c 	l.j f801bd90 <__stack+0xf7b9bd94>
    b864:	e4 15 00 05 	l.sfeq r21,r0
    b868:	02 00 41 4c 	l.j f801bd98 <__stack+0xf7b9bd9c>
    b86c:	f0 04 08 03 	l.cust5 r0,r4,r1,0x0,0x3
    b870:	e3 7a 01 00 	.word 0xe37a0100
    b874:	05 02 00 41 	l.jal 408b978 <__stack+0x3c0b97c>
    b878:	4c f8 15 00 	l.maci r24,0x1500
    b87c:	05 02 00 41 	l.jal 408b980 <__stack+0x3c0b984>
    b880:	4d 04 13 00 	l.maci r4,0x1300
    b884:	05 02 00 41 	l.jal 408b988 <__stack+0x3c0b98c>
    b888:	4d 14 04 15 	l.maci r20,0x415
    b88c:	03 9f 05 01 	l.j fe7ccc90 <__stack+0xfe34cc94>
    b890:	00 05 02 00 	l.j 14c090 <__ram_length+0xcc090>
    b894:	41 4d 2c 16 	.word 0x414d2c16
    b898:	00 05 02 00 	l.j 14c098 <__ram_length+0xcc098>
    b89c:	41 4d 4c 16 	.word 0x414d4c16
    b8a0:	00 05 02 00 	l.j 14c0a0 <__ram_length+0xcc0a0>
    b8a4:	41 4d 58 18 	.word 0x414d5818
    b8a8:	00 05 02 00 	l.j 14c0a8 <__ram_length+0xcc0a8>
    b8ac:	41 4d 64 17 	.word 0x414d6417
    b8b0:	00 05 02 00 	l.j 14c0b0 <__ram_length+0xcc0b0>
    b8b4:	41 4d 74 04 	.word 0x414d7404
    b8b8:	10 03 fd 02 	l.bf 10acc0 <__ram_length+0x8acc0>
    b8bc:	01 00 05 02 	l.j 400ccc4 <__stack+0x3b8ccc8>
    b8c0:	00 41 4d 88 	l.j 105eee0 <__stack+0xbdeee4>
    b8c4:	18 00 05 02 	l.movhi r0,0x502
    b8c8:	00 41 4d 90 	l.j 105ef08 <__stack+0xbdef0c>
    b8cc:	15 00 05 02 	l.nop 0x502
    b8d0:	00 41 4d 94 	l.j 105ef20 <__stack+0xbdef24>
    b8d4:	13 00 05 02 	l.bf fc00ccdc <__stack+0xfbb8cce0>
    b8d8:	00 41 4d 98 	l.j 105ef38 <__stack+0xbdef3c>
    b8dc:	15 00 05 02 	l.nop 0x502
    b8e0:	00 41 4d a0 	l.j 105ef60 <__stack+0xbdef64>
    b8e4:	24 00 05 02 	l.rfe 
    b8e8:	00 41 4d b0 	l.j 105efa8 <__stack+0xbdefac>
    b8ec:	15 00 05 02 	l.nop 0x502
    b8f0:	00 41 4d b4 	l.j 105efc0 <__stack+0xbdefc4>
    b8f4:	13 00 05 02 	l.bf fc00ccfc <__stack+0xfbb8cd00>
    b8f8:	00 41 4d b8 	l.j 105efd8 <__stack+0xbdefdc>
    b8fc:	15 00 05 02 	l.nop 0x502
    b900:	00 41 4d bc 	l.j 105eff0 <__stack+0xbdeff4>
    b904:	15 00 05 02 	l.nop 0x502
    b908:	00 41 4d c0 	l.j 105f008 <__stack+0xbdf00c>
    b90c:	13 00 05 02 	l.bf fc00cd14 <__stack+0xfbb8cd18>
    b910:	00 41 4d c4 	l.j 105f020 <__stack+0xbdf024>
    b914:	15 00 05 02 	l.nop 0x502
    b918:	00 41 4d c8 	l.j 105f038 <__stack+0xbdf03c>
    b91c:	13 00 05 02 	l.bf fc00cd24 <__stack+0xfbb8cd28>
    b920:	00 41 4d cc 	l.j 105f050 <__stack+0xbdf054>
    b924:	15 00 05 02 	l.nop 0x502
    b928:	00 41 4d d8 	l.j 105f088 <__stack+0xbdf08c>
    b92c:	16 00 05 02 	.word 0x16000502
    b930:	00 41 4d f4 	l.j 105f100 <__stack+0xbdf104>
    b934:	15 00 05 02 	l.nop 0x502
    b938:	00 41 4e 08 	l.j 105f158 <__stack+0xbdf15c>
    b93c:	15 00 05 02 	l.nop 0x502
    b940:	00 41 4e 2c 	l.j 105f1f0 <__stack+0xbdf1f4>
    b944:	15 00 05 02 	l.nop 0x502
    b948:	00 41 4e 50 	l.j 105f288 <__stack+0xbdf28c>
    b94c:	15 00 05 02 	l.nop 0x502
    b950:	00 41 4e 64 	l.j 105f2e0 <__stack+0xbdf2e4>
    b954:	15 00 05 02 	l.nop 0x502
    b958:	00 41 4e 8c 	l.j 105f388 <__stack+0xbdf38c>
    b95c:	15 00 05 02 	l.nop 0x502
    b960:	00 41 4e ac 	l.j 105f410 <__stack+0xbdf414>
    b964:	15 00 05 02 	l.nop 0x502
    b968:	00 41 4e c0 	l.j 105f468 <__stack+0xbdf46c>
    b96c:	16 00 05 02 	.word 0x16000502
    b970:	00 41 4e e4 	l.j 105f500 <__stack+0xbdf504>
    b974:	15 00 05 02 	l.nop 0x502
    b978:	00 41 4f 08 	l.j 105f598 <__stack+0xbdf59c>
    b97c:	15 00 05 02 	l.nop 0x502
    b980:	00 41 4f 20 	l.j 105f600 <__stack+0xbdf604>
    b984:	15 00 05 02 	l.nop 0x502
    b988:	00 41 4f 38 	l.j 105f668 <__stack+0xbdf66c>
    b98c:	15 00 05 02 	l.nop 0x502
    b990:	00 41 4f 50 	l.j 105f6d0 <__stack+0xbdf6d4>
    b994:	15 00 05 02 	l.nop 0x502
    b998:	00 41 4f 70 	l.j 105f758 <__stack+0xbdf75c>
    b99c:	16 00 05 02 	.word 0x16000502
    b9a0:	00 41 4f 80 	l.j 105f7a0 <__stack+0xbdf7a4>
    b9a4:	18 00 05 02 	l.movhi r0,0x502
    b9a8:	00 41 4f a4 	l.j 105f838 <__stack+0xbdf83c>
    b9ac:	16 00 05 02 	.word 0x16000502
    b9b0:	00 41 4f a8 	l.j 105f850 <__stack+0xbdf854>
    b9b4:	15 00 05 02 	l.nop 0x502
    b9b8:	00 41 4f ac 	l.j 105f868 <__stack+0xbdf86c>
    b9bc:	13 00 05 02 	l.bf fc00cdc4 <__stack+0xfbb8cdc8>
    b9c0:	00 41 4f b0 	l.j 105f880 <__stack+0xbdf884>
    b9c4:	15 00 05 02 	l.nop 0x502
    b9c8:	00 41 4f bc 	l.j 105f8b8 <__stack+0xbdf8bc>
    b9cc:	17 00 05 02 	.word 0x17000502
    b9d0:	00 41 4f dc 	l.j 105f940 <__stack+0xbdf944>
    b9d4:	16 00 05 02 	.word 0x16000502
    b9d8:	00 41 4f e0 	l.j 105f958 <__stack+0xbdf95c>
    b9dc:	15 00 05 02 	l.nop 0x502
    b9e0:	00 41 4f e4 	l.j 105f970 <__stack+0xbdf974>
    b9e4:	13 00 05 02 	l.bf fc00cdec <__stack+0xfbb8cdf0>
    b9e8:	00 41 4f e8 	l.j 105f988 <__stack+0xbdf98c>
    b9ec:	15 00 05 02 	l.nop 0x502
    b9f0:	00 41 4f f4 	l.j 105f9c0 <__stack+0xbdf9c4>
    b9f4:	17 00 05 02 	.word 0x17000502
    b9f8:	00 41 4f fc 	l.j 105f9e8 <__stack+0xbdf9ec>
    b9fc:	16 00 05 02 	.word 0x16000502
    ba00:	00 41 50 14 	l.j 105fa50 <__stack+0xbdfa54>
    ba04:	16 00 05 02 	.word 0x16000502
    ba08:	00 41 50 24 	l.j 105fa98 <__stack+0xbdfa9c>
    ba0c:	15 00 05 02 	l.nop 0x502
    ba10:	00 41 50 34 	l.j 105fae0 <__stack+0xbdfae4>
    ba14:	15 00 05 02 	l.nop 0x502
    ba18:	00 41 50 38 	l.j 105faf8 <__stack+0xbdfafc>
    ba1c:	15 00 05 02 	l.nop 0x502
    ba20:	00 41 50 48 	l.j 105fb40 <__stack+0xbdfb44>
    ba24:	15 00 05 02 	l.nop 0x502
    ba28:	00 41 50 5c 	l.j 105fb98 <__stack+0xbdfb9c>
    ba2c:	15 00 05 02 	l.nop 0x502
    ba30:	00 41 50 64 	l.j 105fbc0 <__stack+0xbdfbc4>
    ba34:	37 00 05 02 	.word 0x37000502
    ba38:	00 41 50 6c 	l.j 105fbe8 <__stack+0xbdfbec>
    ba3c:	03 5f 01 00 	l.j fd7cbe3c <__stack+0xfd34be40>
    ba40:	05 02 00 41 	l.jal 408bb44 <__stack+0x3c0bb48>
    ba44:	50 74 16 00 	.word 0x50741600
    ba48:	05 02 00 41 	l.jal 408bb4c <__stack+0x3c0bb50>
    ba4c:	50 88 15 00 	.word 0x50881500
    ba50:	05 02 00 41 	l.jal 408bb54 <__stack+0x3c0bb58>
    ba54:	50 98 17 00 	.word 0x50981700
    ba58:	05 02 00 41 	l.jal 408bb5c <__stack+0x3c0bb60>
    ba5c:	50 a4 16 00 	.word 0x50a41600
    ba60:	05 02 00 41 	l.jal 408bb64 <__stack+0x3c0bb68>
    ba64:	50 d8 23 00 	.word 0x50d82300
    ba68:	05 02 00 41 	l.jal 408bb6c <__stack+0x3c0bb70>
    ba6c:	50 e0 03 71 	.word 0x50e00371
    ba70:	01 00 05 02 	l.j 400ce78 <__stack+0x3b8ce7c>
    ba74:	00 41 50 f4 	l.j 105fe44 <__stack+0xbdfe48>
    ba78:	1f 00 05 02 	.word 0x1f000502
    ba7c:	00 41 50 fc 	l.j 105fe6c <__stack+0xbdfe70>
    ba80:	0b 00 05 02 	.word 0x0b000502
    ba84:	00 41 51 04 	l.j 105fe94 <__stack+0xbdfe98>
    ba88:	17 00 05 02 	.word 0x17000502
    ba8c:	00 41 51 10 	l.j 105fecc <__stack+0xbdfed0>
    ba90:	17 00 05 02 	.word 0x17000502
    ba94:	00 41 51 18 	l.j 105fef4 <__stack+0xbdfef8>
    ba98:	17 00 05 02 	.word 0x17000502
    ba9c:	00 41 51 1c 	l.j 105ff0c <__stack+0xbdff10>
    baa0:	18 00 05 02 	l.movhi r0,0x502
    baa4:	00 41 51 2c 	l.j 105ff54 <__stack+0xbdff58>
    baa8:	15 00 05 02 	l.nop 0x502
    baac:	00 41 51 40 	l.j 105ffac <__stack+0xbdffb0>
    bab0:	1d 00 05 02 	.word 0x1d000502
    bab4:	00 41 51 48 	l.j 105ffd4 <__stack+0xbdffd8>
    bab8:	0d 00 05 02 	l.bnf 400cec0 <__stack+0x3b8cec4>
    babc:	00 41 51 50 	l.j 105fffc <__stack+0xbe0000>
    bac0:	16 00 05 02 	.word 0x16000502
    bac4:	00 41 51 5c 	l.j 1060034 <__stack+0xbe0038>
    bac8:	15 00 05 02 	l.nop 0x502
    bacc:	00 41 51 60 	l.j 106004c <__stack+0xbe0050>
    bad0:	13 00 05 02 	l.bf fc00ced8 <__stack+0xfbb8cedc>
    bad4:	00 41 51 64 	l.j 1060064 <__stack+0xbe0068>
    bad8:	15 00 05 02 	l.nop 0x502
    badc:	00 41 51 68 	l.j 106007c <__stack+0xbe0080>
    bae0:	18 00 05 02 	l.movhi r0,0x502
    bae4:	00 41 51 70 	l.j 10600a4 <__stack+0xbe00a8>
    bae8:	16 00 05 02 	.word 0x16000502
    baec:	00 41 51 7c 	l.j 10600dc <__stack+0xbe00e0>
    baf0:	15 00 05 02 	l.nop 0x502
    baf4:	00 41 51 80 	l.j 10600f4 <__stack+0xbe00f8>
    baf8:	13 00 05 02 	l.bf fc00cf00 <__stack+0xfbb8cf04>
    bafc:	00 41 51 84 	l.j 106010c <__stack+0xbe0110>
    bb00:	15 00 05 02 	l.nop 0x502
    bb04:	00 41 51 94 	l.j 1060154 <__stack+0xbe0158>
    bb08:	16 00 05 02 	.word 0x16000502
    bb0c:	00 41 51 9c 	l.j 106017c <__stack+0xbe0180>
    bb10:	16 00 05 02 	.word 0x16000502
    bb14:	00 41 51 ac 	l.j 10601c4 <__stack+0xbe01c8>
    bb18:	15 00 05 02 	l.nop 0x502
    bb1c:	00 41 51 bc 	l.j 106020c <__stack+0xbe0210>
    bb20:	16 00 05 02 	.word 0x16000502
    bb24:	00 41 51 c4 	l.j 1060234 <__stack+0xbe0238>
    bb28:	16 00 05 02 	.word 0x16000502
    bb2c:	00 41 51 d0 	l.j 106026c <__stack+0xbe0270>
    bb30:	15 00 05 02 	l.nop 0x502
    bb34:	00 41 51 e0 	l.j 10602b4 <__stack+0xbe02b8>
    bb38:	1c 00 05 02 	.word 0x1c000502
    bb3c:	00 41 51 f0 	l.j 10602fc <__stack+0xbe0300>
    bb40:	16 00 05 02 	.word 0x16000502
    bb44:	00 41 51 f4 	l.j 1060314 <__stack+0xbe0318>
    bb48:	12 00 05 02 	l.bf f800cf50 <__stack+0xf7b8cf54>
    bb4c:	00 41 51 f8 	l.j 106032c <__stack+0xbe0330>
    bb50:	15 00 05 02 	l.nop 0x502
    bb54:	00 41 52 04 	l.j 1060364 <__stack+0xbe0368>
    bb58:	17 00 05 02 	.word 0x17000502
    bb5c:	00 41 52 08 	l.j 106037c <__stack+0xbe0380>
    bb60:	11 00 05 02 	l.bf 400cf68 <__stack+0x3b8cf6c>
    bb64:	00 41 52 0c 	l.j 1060394 <__stack+0xbe0398>
    bb68:	15 00 05 02 	l.nop 0x502
    bb6c:	00 41 52 10 	l.j 10603ac <__stack+0xbe03b0>
    bb70:	16 00 05 02 	.word 0x16000502
    bb74:	00 41 52 14 	l.j 10603c4 <__stack+0xbe03c8>
    bb78:	12 00 05 02 	l.bf f800cf80 <__stack+0xf7b8cf84>
    bb7c:	00 41 52 18 	l.j 10603dc <__stack+0xbe03e0>
    bb80:	16 00 05 02 	.word 0x16000502
    bb84:	00 41 52 1c 	l.j 10603f4 <__stack+0xbe03f8>
    bb88:	12 00 05 02 	l.bf f800cf90 <__stack+0xf7b8cf94>
    bb8c:	00 41 52 20 	l.j 106040c <__stack+0xbe0410>
    bb90:	16 00 05 02 	.word 0x16000502
    bb94:	00 41 52 28 	l.j 1060434 <__stack+0xbe0438>
    bb98:	16 00 05 02 	.word 0x16000502
    bb9c:	00 41 52 44 	l.j 10604ac <__stack+0xbe04b0>
    bba0:	15 00 05 02 	l.nop 0x502
    bba4:	00 41 52 58 	l.j 1060504 <__stack+0xbe0508>
    bba8:	15 00 05 02 	l.nop 0x502
    bbac:	00 41 52 7c 	l.j 106059c <__stack+0xbe05a0>
    bbb0:	15 00 05 02 	l.nop 0x502
    bbb4:	00 41 52 a0 	l.j 1060634 <__stack+0xbe0638>
    bbb8:	15 00 05 02 	l.nop 0x502
    bbbc:	00 41 52 b4 	l.j 106068c <__stack+0xbe0690>
    bbc0:	15 00 05 02 	l.nop 0x502
    bbc4:	00 41 52 d0 	l.j 1060704 <__stack+0xbe0708>
    bbc8:	15 00 05 02 	l.nop 0x502
    bbcc:	00 41 52 f0 	l.j 106078c <__stack+0xbe0790>
    bbd0:	15 00 05 02 	l.nop 0x502
    bbd4:	00 41 53 04 	l.j 10607e4 <__stack+0xbe07e8>
    bbd8:	15 00 05 02 	l.nop 0x502
    bbdc:	00 41 53 24 	l.j 106086c <__stack+0xbe0870>
    bbe0:	15 00 05 02 	l.nop 0x502
    bbe4:	00 41 53 44 	l.j 10608f4 <__stack+0xbe08f8>
    bbe8:	16 00 05 02 	.word 0x16000502
    bbec:	00 41 53 5c 	l.j 106095c <__stack+0xbe0960>
    bbf0:	16 00 05 02 	.word 0x16000502
    bbf4:	00 41 53 70 	l.j 10609b4 <__stack+0xbe09b8>
    bbf8:	15 00 05 02 	l.nop 0x502
    bbfc:	00 41 53 80 	l.j 10609fc <__stack+0xbe0a00>
    bc00:	15 00 05 02 	l.nop 0x502
    bc04:	00 41 53 8c 	l.j 1060a34 <__stack+0xbe0a38>
    bc08:	16 00 05 02 	.word 0x16000502
    bc0c:	00 41 53 9c 	l.j 1060a7c <__stack+0xbe0a80>
    bc10:	15 00 05 02 	l.nop 0x502
    bc14:	00 41 53 bc 	l.j 1060b04 <__stack+0xbe0b08>
    bc18:	1a 00 05 02 	l.movhi r16,0x502
    bc1c:	00 41 53 d0 	l.j 1060b5c <__stack+0xbe0b60>
    bc20:	15 00 05 02 	l.nop 0x502
    bc24:	00 41 53 fc 	l.j 1060c14 <__stack+0xbe0c18>
    bc28:	15 00 05 02 	l.nop 0x502
    bc2c:	00 41 54 2c 	l.j 1060cdc <__stack+0xbe0ce0>
    bc30:	17 00 05 02 	.word 0x17000502
    bc34:	00 41 54 4c 	l.j 1060d64 <__stack+0xbe0d68>
    bc38:	16 00 05 02 	.word 0x16000502
    bc3c:	00 41 54 5c 	l.j 1060dac <__stack+0xbe0db0>
    bc40:	18 00 05 02 	l.movhi r0,0x502
    bc44:	00 41 54 68 	l.j 1060de4 <__stack+0xbe0de8>
    bc48:	16 00 05 02 	.word 0x16000502
    bc4c:	00 41 54 80 	l.j 1060e4c <__stack+0xbe0e50>
    bc50:	16 00 05 02 	.word 0x16000502
    bc54:	00 41 54 88 	l.j 1060e74 <__stack+0xbe0e78>
    bc58:	15 00 05 02 	l.nop 0x502
    bc5c:	00 41 54 8c 	l.j 1060e8c <__stack+0xbe0e90>
    bc60:	13 00 05 02 	l.bf fc00d068 <__stack+0xfbb8d06c>
    bc64:	00 41 54 a4 	l.j 1060ef4 <__stack+0xbe0ef8>
    bc68:	15 00 05 02 	l.nop 0x502
    bc6c:	00 41 54 b4 	l.j 1060f3c <__stack+0xbe0f40>
    bc70:	17 00 05 02 	.word 0x17000502
    bc74:	00 41 54 c0 	l.j 1060f74 <__stack+0xbe0f78>
    bc78:	16 00 05 02 	.word 0x16000502
    bc7c:	00 41 54 c8 	l.j 1060f9c <__stack+0xbe0fa0>
    bc80:	15 00 05 02 	l.nop 0x502
    bc84:	00 41 54 cc 	l.j 1060fb4 <__stack+0xbe0fb8>
    bc88:	13 00 05 02 	l.bf fc00d090 <__stack+0xfbb8d094>
    bc8c:	00 41 54 e4 	l.j 106101c <__stack+0xbe1020>
    bc90:	15 00 05 02 	l.nop 0x502
    bc94:	00 41 54 f0 	l.j 1061054 <__stack+0xbe1058>
    bc98:	15 00 05 02 	l.nop 0x502
    bc9c:	00 41 54 f8 	l.j 106107c <__stack+0xbe1080>
    bca0:	33 00 05 02 	.word 0x33000502
    bca4:	00 41 55 00 	l.j 10610a4 <__stack+0xbe10a8>
    bca8:	03 63 01 00 	l.j fd8cc0a8 <__stack+0xfd44c0ac>
    bcac:	05 02 00 41 	l.jal 408bdb0 <__stack+0x3c0bdb4>
    bcb0:	55 0c 16 00 	.word 0x550c1600
    bcb4:	05 02 00 41 	l.jal 408bdb8 <__stack+0x3c0bdbc>
    bcb8:	55 28 19 00 	.word 0x55281900
    bcbc:	05 02 00 41 	l.jal 408bdc0 <__stack+0x3c0bdc4>
    bcc0:	55 2c 0f 00 	.word 0x552c0f00
    bcc4:	05 02 00 41 	l.jal 408bdc8 <__stack+0x3c0bdcc>
    bcc8:	55 30 19 00 	.word 0x55301900
    bccc:	05 02 00 41 	l.jal 408bdd0 <__stack+0x3c0bdd4>
    bcd0:	55 40 17 00 	.word 0x55401700
    bcd4:	05 02 00 41 	l.jal 408bdd8 <__stack+0x3c0bddc>
    bcd8:	55 4c 16 00 	.word 0x554c1600
    bcdc:	05 02 00 41 	l.jal 408bde0 <__stack+0x3c0bde4>
    bce0:	55 60 25 00 	.word 0x55602500
    bce4:	05 02 00 41 	l.jal 408bde8 <__stack+0x3c0bdec>
    bce8:	55 68 03 71 	.word 0x55680371
    bcec:	01 00 05 02 	l.j 400d0f4 <__stack+0x3b8d0f8>
    bcf0:	00 41 55 74 	l.j 10612c0 <__stack+0xbe12c4>
    bcf4:	16 00 05 02 	.word 0x16000502
    bcf8:	00 41 55 a4 	l.j 1061388 <__stack+0xbe138c>
    bcfc:	15 00 05 02 	l.nop 0x502
    bd00:	00 41 55 b4 	l.j 10613d0 <__stack+0xbe13d4>
    bd04:	16 00 05 02 	.word 0x16000502
    bd08:	00 41 55 bc 	l.j 10613f8 <__stack+0xbe13fc>
    bd0c:	15 00 05 02 	l.nop 0x502
    bd10:	00 41 55 d0 	l.j 1061450 <__stack+0xbe1454>
    bd14:	16 00 05 02 	.word 0x16000502
    bd18:	00 41 55 d8 	l.j 1061478 <__stack+0xbe147c>
    bd1c:	16 00 05 02 	.word 0x16000502
    bd20:	00 41 55 e4 	l.j 10614b0 <__stack+0xbe14b4>
    bd24:	15 00 05 02 	l.nop 0x502
    bd28:	00 41 55 e8 	l.j 10614c8 <__stack+0xbe14cc>
    bd2c:	13 00 05 02 	l.bf fc00d134 <__stack+0xfbb8d138>
    bd30:	00 41 55 ec 	l.j 10614e0 <__stack+0xbe14e4>
    bd34:	15 00 05 02 	l.nop 0x502
    bd38:	00 41 55 f0 	l.j 10614f8 <__stack+0xbe14fc>
    bd3c:	18 00 05 02 	l.movhi r0,0x502
    bd40:	00 41 55 fc 	l.j 1061530 <__stack+0xbe1534>
    bd44:	16 00 05 02 	.word 0x16000502
    bd48:	00 41 56 08 	l.j 1061568 <__stack+0xbe156c>
    bd4c:	15 00 05 02 	l.nop 0x502
    bd50:	00 41 56 0c 	l.j 1061580 <__stack+0xbe1584>
    bd54:	13 00 05 02 	l.bf fc00d15c <__stack+0xfbb8d160>
    bd58:	00 41 56 10 	l.j 1061598 <__stack+0xbe159c>
    bd5c:	15 00 05 02 	l.nop 0x502
    bd60:	00 41 56 20 	l.j 10615e0 <__stack+0xbe15e4>
    bd64:	16 00 05 02 	.word 0x16000502
    bd68:	00 41 56 28 	l.j 1061608 <__stack+0xbe160c>
    bd6c:	16 00 05 02 	.word 0x16000502
    bd70:	00 41 56 38 	l.j 1061650 <__stack+0xbe1654>
    bd74:	15 00 05 02 	l.nop 0x502
    bd78:	00 41 56 48 	l.j 1061698 <__stack+0xbe169c>
    bd7c:	16 00 05 02 	.word 0x16000502
    bd80:	00 41 56 50 	l.j 10616c0 <__stack+0xbe16c4>
    bd84:	16 00 05 02 	.word 0x16000502
    bd88:	00 41 56 5c 	l.j 10616f8 <__stack+0xbe16fc>
    bd8c:	15 00 05 02 	l.nop 0x502
    bd90:	00 41 56 6c 	l.j 1061740 <__stack+0xbe1744>
    bd94:	81 00 05 02 	l.ld r8,0x502(r0)
    bd98:	00 41 56 7c 	l.j 1061788 <__stack+0xbe178c>
    bd9c:	15 00 05 02 	l.nop 0x502
    bda0:	00 41 56 80 	l.j 10617a0 <__stack+0xbe17a4>
    bda4:	13 00 05 02 	l.bf fc00d1ac <__stack+0xfbb8d1b0>
    bda8:	00 41 56 84 	l.j 10617b8 <__stack+0xbe17bc>
    bdac:	15 00 05 02 	l.nop 0x502
    bdb0:	00 41 56 88 	l.j 10617d0 <__stack+0xbe17d4>
    bdb4:	16 00 05 02 	.word 0x16000502
    bdb8:	00 41 56 8c 	l.j 10617e8 <__stack+0xbe17ec>
    bdbc:	12 00 05 02 	l.bf f800d1c4 <__stack+0xf7b8d1c8>
    bdc0:	00 41 56 98 	l.j 1061820 <__stack+0xbe1824>
    bdc4:	16 00 05 02 	.word 0x16000502
    bdc8:	00 41 56 9c 	l.j 1061838 <__stack+0xbe183c>
    bdcc:	15 00 05 02 	l.nop 0x502
    bdd0:	00 41 56 a0 	l.j 1061850 <__stack+0xbe1854>
    bdd4:	13 00 05 02 	l.bf fc00d1dc <__stack+0xfbb8d1e0>
    bdd8:	00 41 56 a4 	l.j 1061868 <__stack+0xbe186c>
    bddc:	15 00 05 02 	l.nop 0x502
    bde0:	00 41 56 b0 	l.j 10618a0 <__stack+0xbe18a4>
    bde4:	15 00 05 02 	l.nop 0x502
    bde8:	00 41 56 c8 	l.j 1061908 <__stack+0xbe190c>
    bdec:	15 00 05 02 	l.nop 0x502
    bdf0:	00 41 56 d0 	l.j 1061930 <__stack+0xbe1934>
    bdf4:	15 00 05 02 	l.nop 0x502
    bdf8:	00 41 56 d8 	l.j 1061958 <__stack+0xbe195c>
    bdfc:	15 00 05 02 	l.nop 0x502
    be00:	00 41 56 dc 	l.j 1061970 <__stack+0xbe1974>
    be04:	13 00 05 02 	l.bf fc00d20c <__stack+0xfbb8d210>
    be08:	00 41 56 ec 	l.j 10619b8 <__stack+0xbe19bc>
    be0c:	15 00 05 02 	l.nop 0x502
    be10:	00 41 57 10 	l.j 1061a50 <__stack+0xbe1a54>
    be14:	15 00 05 02 	l.nop 0x502
    be18:	00 41 57 38 	l.j 1061af8 <__stack+0xbe1afc>
    be1c:	15 00 05 02 	l.nop 0x502
    be20:	00 41 57 54 	l.j 1061b70 <__stack+0xbe1b74>
    be24:	16 00 05 02 	.word 0x16000502
    be28:	00 41 57 68 	l.j 1061bc8 <__stack+0xbe1bcc>
    be2c:	15 00 05 02 	l.nop 0x502
    be30:	00 41 57 78 	l.j 1061c10 <__stack+0xbe1c14>
    be34:	15 00 05 02 	l.nop 0x502
    be38:	00 41 57 84 	l.j 1061c48 <__stack+0xbe1c4c>
    be3c:	16 00 05 02 	.word 0x16000502
    be40:	00 41 57 a0 	l.j 1061cc0 <__stack+0xbe1cc4>
    be44:	15 00 05 02 	l.nop 0x502
    be48:	00 41 57 b4 	l.j 1061d18 <__stack+0xbe1d1c>
    be4c:	04 18 03 df 	l.jal 60cdc8 <__stack+0x18cdcc>
    be50:	75 01 00 05 	l.cust2 
    be54:	02 00 41 57 	l.j f801c3b0 <__stack+0xf7b9c3b4>
    be58:	c0 04 10 03 	l.mtspr r4,r2,0x3
    be5c:	a1 0a 01 00 	l.addic r8,r10,0x100
    be60:	05 02 00 41 	l.jal 408bf64 <__stack+0x3c0bf68>
    be64:	57 cc 16 00 	.word 0x57cc1600
    be68:	05 02 00 41 	l.jal 408bf6c <__stack+0x3c0bf70>
    be6c:	57 d0 12 00 	.word 0x57d01200
    be70:	05 02 00 41 	l.jal 408bf74 <__stack+0x3c0bf78>
    be74:	57 e0 16 00 	.word 0x57e01600
    be78:	05 02 00 41 	l.jal 408bf7c <__stack+0x3c0bf80>
    be7c:	57 f0 16 00 	.word 0x57f01600
    be80:	05 02 00 41 	l.jal 408bf84 <__stack+0x3c0bf88>
    be84:	58 00 15 00 	.word 0x58001500
    be88:	05 02 00 41 	l.jal 408bf8c <__stack+0x3c0bf90>
    be8c:	58 10 15 00 	.word 0x58101500
    be90:	05 02 00 41 	l.jal 408bf94 <__stack+0x3c0bf98>
    be94:	58 20 16 00 	.word 0x58201600
    be98:	05 02 00 41 	l.jal 408bf9c <__stack+0x3c0bfa0>
    be9c:	58 38 19 00 	.word 0x58381900
    bea0:	05 02 00 41 	l.jal 408bfa4 <__stack+0x3c0bfa8>
    bea4:	58 40 12 00 	.word 0x58401200
    bea8:	05 02 00 41 	l.jal 408bfac <__stack+0x3c0bfb0>
    beac:	58 50 16 00 	.word 0x58501600
    beb0:	05 02 00 41 	l.jal 408bfb4 <__stack+0x3c0bfb8>
    beb4:	58 70 04 18 	.word 0x58700418
    beb8:	03 d2 75 01 	l.j ff4a92bc <__stack+0xff0292c0>
    bebc:	00 05 02 00 	l.j 14c6bc <__ram_length+0xcc6bc>
    bec0:	41 58 84 04 	.word 0x41588404
    bec4:	10 03 ae 0a 	l.bf f76ec <__ram_length+0x776ec>
    bec8:	01 00 05 02 	l.j 400d2d0 <__stack+0x3b8d2d4>
    becc:	00 41 58 8c 	l.j 10620fc <__stack+0xbe2100>
    bed0:	15 00 05 02 	l.nop 0x502
    bed4:	00 41 58 98 	l.j 1062134 <__stack+0xbe2138>
    bed8:	15 00 05 02 	l.nop 0x502
    bedc:	00 41 58 9c 	l.j 106214c <__stack+0xbe2150>
    bee0:	15 00 05 02 	l.nop 0x502
    bee4:	00 41 58 a0 	l.j 1062164 <__stack+0xbe2168>
    bee8:	13 00 05 02 	l.bf fc00d2f0 <__stack+0xfbb8d2f4>
    beec:	00 41 58 a4 	l.j 106217c <__stack+0xbe2180>
    bef0:	15 00 05 02 	l.nop 0x502
    bef4:	00 41 58 a8 	l.j 1062194 <__stack+0xbe2198>
    bef8:	13 00 05 02 	l.bf fc00d300 <__stack+0xfbb8d304>
    befc:	00 41 58 b0 	l.j 10621bc <__stack+0xbe21c0>
    bf00:	15 00 05 02 	l.nop 0x502
    bf04:	00 41 58 dc 	l.j 1062274 <__stack+0xbe2278>
    bf08:	16 00 05 02 	.word 0x16000502
    bf0c:	00 41 58 f4 	l.j 10622dc <__stack+0xbe22e0>
    bf10:	15 00 05 02 	l.nop 0x502
    bf14:	00 41 59 04 	l.j 1062324 <__stack+0xbe2328>
    bf18:	15 00 05 02 	l.nop 0x502
    bf1c:	00 41 59 10 	l.j 106235c <__stack+0xbe2360>
    bf20:	16 00 05 02 	.word 0x16000502
    bf24:	00 41 59 2c 	l.j 10623d4 <__stack+0xbe23d8>
    bf28:	15 00 05 02 	l.nop 0x502
    bf2c:	00 41 59 40 	l.j 106242c <__stack+0xbe2430>
    bf30:	04 18 03 c8 	l.jal 60ce50 <__stack+0x18ce54>
    bf34:	75 01 00 05 	l.cust2 
    bf38:	02 00 41 59 	l.j f801c49c <__stack+0xf7b9c4a0>
    bf3c:	58 04 10 03 	.word 0x58041003
    bf40:	b8 0a 01 00 	l.slli r0,r10,0x0
    bf44:	05 02 00 41 	l.jal 408c048 <__stack+0x3c0c04c>
    bf48:	59 64 15 00 	.word 0x59641500
    bf4c:	05 02 00 41 	l.jal 408c050 <__stack+0x3c0c054>
    bf50:	59 68 13 00 	.word 0x59681300
    bf54:	05 02 00 41 	l.jal 408c058 <__stack+0x3c0c05c>
    bf58:	59 78 15 00 	.word 0x59781500
    bf5c:	05 02 00 41 	l.jal 408c060 <__stack+0x3c0c064>
    bf60:	59 88 16 00 	.word 0x59881600
    bf64:	05 02 00 41 	l.jal 408c068 <__stack+0x3c0c06c>
    bf68:	59 98 15 00 	.word 0x59981500
    bf6c:	05 02 00 41 	l.jal 408c070 <__stack+0x3c0c074>
    bf70:	59 a8 15 00 	.word 0x59a81500
    bf74:	05 02 00 41 	l.jal 408c078 <__stack+0x3c0c07c>
    bf78:	59 b8 16 00 	.word 0x59b81600
    bf7c:	05 02 00 41 	l.jal 408c080 <__stack+0x3c0c084>
    bf80:	59 d0 19 00 	.word 0x59d01900
    bf84:	05 02 00 41 	l.jal 408c088 <__stack+0x3c0c08c>
    bf88:	59 d8 12 00 	.word 0x59d81200
    bf8c:	05 02 00 41 	l.jal 408c090 <__stack+0x3c0c094>
    bf90:	59 e8 16 00 	.word 0x59e81600
    bf94:	05 02 00 41 	l.jal 408c098 <__stack+0x3c0c09c>
    bf98:	5a 08 04 18 	.word 0x5a080418
    bf9c:	03 bc 75 01 	l.j fef293a0 <__stack+0xfeaa93a4>
    bfa0:	00 05 02 00 	l.j 14c7a0 <__ram_length+0xcc7a0>
    bfa4:	41 5a 1c 04 	.word 0x415a1c04
    bfa8:	10 03 c4 0a 	l.bf fcfd0 <__ram_length+0x7cfd0>
    bfac:	01 00 05 02 	l.j 400d3b4 <__stack+0x3b8d3b8>
    bfb0:	00 41 5a 24 	l.j 1062840 <__stack+0xbe2844>
    bfb4:	15 00 05 02 	l.nop 0x502
    bfb8:	00 41 5a 30 	l.j 1062878 <__stack+0xbe287c>
    bfbc:	15 00 05 02 	l.nop 0x502
    bfc0:	00 41 5a 44 	l.j 10628d0 <__stack+0xbe28d4>
    bfc4:	15 00 05 02 	l.nop 0x502
    bfc8:	00 41 5a 80 	l.j 10629c8 <__stack+0xbe29cc>
    bfcc:	16 00 05 02 	.word 0x16000502
    bfd0:	00 41 5a 9c 	l.j 1062a40 <__stack+0xbe2a44>
    bfd4:	15 00 05 02 	l.nop 0x502
    bfd8:	00 41 5a c4 	l.j 1062ae8 <__stack+0xbe2aec>
    bfdc:	16 00 05 02 	.word 0x16000502
    bfe0:	00 41 5a d4 	l.j 1062b30 <__stack+0xbe2b34>
    bfe4:	19 00 05 02 	l.movhi r8,0x502
    bfe8:	00 41 5a e0 	l.j 1062b68 <__stack+0xbe2b6c>
    bfec:	16 00 05 02 	.word 0x16000502
    bff0:	00 41 5a f8 	l.j 1062bd0 <__stack+0xbe2bd4>
    bff4:	16 00 05 02 	.word 0x16000502
    bff8:	00 41 5b 10 	l.j 1062c38 <__stack+0xbe2c3c>
    bffc:	15 00 05 02 	l.nop 0x502
    c000:	00 41 5b 20 	l.j 1062c80 <__stack+0xbe2c84>
    c004:	16 00 05 02 	.word 0x16000502
    c008:	00 41 5b 28 	l.j 1062ca8 <__stack+0xbe2cac>
    c00c:	16 00 05 02 	.word 0x16000502
    c010:	00 41 5b 3c 	l.j 1062d00 <__stack+0xbe2d04>
    c014:	16 00 05 02 	.word 0x16000502
    c018:	00 41 5b 48 	l.j 1062d38 <__stack+0xbe2d3c>
    c01c:	16 00 05 02 	.word 0x16000502
    c020:	00 41 5b 50 	l.j 1062d60 <__stack+0xbe2d64>
    c024:	17 00 05 02 	.word 0x17000502
    c028:	00 41 5b 5c 	l.j 1062d98 <__stack+0xbe2d9c>
    c02c:	18 00 05 02 	l.movhi r0,0x502
    c030:	00 41 5b 60 	l.j 1062db0 <__stack+0xbe2db4>
    c034:	15 00 05 02 	l.nop 0x502
    c038:	00 41 5b 78 	l.j 1062e18 <__stack+0xbe2e1c>
    c03c:	16 00 05 02 	.word 0x16000502
    c040:	00 41 5b 8c 	l.j 1062e70 <__stack+0xbe2e74>
    c044:	16 00 05 02 	.word 0x16000502
    c048:	00 41 5b 98 	l.j 1062ea8 <__stack+0xbe2eac>
    c04c:	16 00 05 02 	.word 0x16000502
    c050:	00 41 5b a0 	l.j 1062ed0 <__stack+0xbe2ed4>
    c054:	16 00 05 02 	.word 0x16000502
    c058:	00 41 5b ac 	l.j 1062f08 <__stack+0xbe2f0c>
    c05c:	16 00 05 02 	.word 0x16000502
    c060:	00 41 5b c0 	l.j 1062f60 <__stack+0xbe2f64>
    c064:	16 00 05 02 	.word 0x16000502
    c068:	00 41 5b cc 	l.j 1062f98 <__stack+0xbe2f9c>
    c06c:	16 00 05 02 	.word 0x16000502
    c070:	00 41 5b d4 	l.j 1062fc0 <__stack+0xbe2fc4>
    c074:	17 00 05 02 	.word 0x17000502
    c078:	00 41 5b e0 	l.j 1062ff8 <__stack+0xbe2ffc>
    c07c:	18 00 05 02 	l.movhi r0,0x502
    c080:	00 41 5b e4 	l.j 1063010 <__stack+0xbe3014>
    c084:	15 00 05 02 	l.nop 0x502
    c088:	00 41 5b fc 	l.j 1063078 <__stack+0xbe307c>
    c08c:	16 00 05 02 	.word 0x16000502
    c090:	00 41 5c 10 	l.j 10630d0 <__stack+0xbe30d4>
    c094:	16 00 05 02 	.word 0x16000502
    c098:	00 41 5c 1c 	l.j 1063108 <__stack+0xbe310c>
    c09c:	16 00 05 02 	.word 0x16000502
    c0a0:	00 41 5c 30 	l.j 1063160 <__stack+0xbe3164>
    c0a4:	1c 00 05 02 	.word 0x1c000502
    c0a8:	00 41 5c 38 	l.j 1063188 <__stack+0xbe318c>
    c0ac:	0e 00 05 02 	l.bnf f800d4b4 <__stack+0xf7b8d4b8>
    c0b0:	00 41 5c 44 	l.j 10631c0 <__stack+0xbe31c4>
    c0b4:	16 00 05 02 	.word 0x16000502
    c0b8:	00 41 5c 54 	l.j 1063208 <__stack+0xbe320c>
    c0bc:	18 00 05 02 	l.movhi r0,0x502
    c0c0:	00 41 5c 60 	l.j 1063240 <__stack+0xbe3244>
    c0c4:	16 00 05 02 	.word 0x16000502
    c0c8:	00 41 5c 70 	l.j 1063288 <__stack+0xbe328c>
    c0cc:	1c 00 05 02 	.word 0x1c000502
    c0d0:	00 41 5c 88 	l.j 10632f0 <__stack+0xbe32f4>
    c0d4:	17 00 05 02 	.word 0x17000502
    c0d8:	00 41 5c 9c 	l.j 1063348 <__stack+0xbe334c>
    c0dc:	15 00 05 02 	l.nop 0x502
    c0e0:	00 41 5c b4 	l.j 10633b0 <__stack+0xbe33b4>
    c0e4:	15 00 05 02 	l.nop 0x502
    c0e8:	00 41 5c dc 	l.j 1063458 <__stack+0xbe345c>
    c0ec:	2a 00 05 02 	.word 0x2a000502
    c0f0:	00 41 5c e4 	l.j 1063480 <__stack+0xbe3484>
    c0f4:	03 6d 01 00 	l.j fdb4c4f4 <__stack+0xfd6cc4f8>
    c0f8:	05 02 00 41 	l.jal 408c1fc <__stack+0x3c0c200>
    c0fc:	5c f0 16 00 	.word 0x5cf01600
    c100:	05 02 00 41 	l.jal 408c204 <__stack+0x3c0c208>
    c104:	5c f4 12 00 	.word 0x5cf41200
    c108:	05 02 00 41 	l.jal 408c20c <__stack+0x3c0c210>
    c10c:	5c f8 15 00 	.word 0x5cf81500
    c110:	05 02 00 41 	l.jal 408c214 <__stack+0x3c0c218>
    c114:	5c fc 15 00 	.word 0x5cfc1500
    c118:	05 02 00 41 	l.jal 408c21c <__stack+0x3c0c220>
    c11c:	5d 08 17 00 	.word 0x5d081700
    c120:	05 02 00 41 	l.jal 408c224 <__stack+0x3c0c228>
    c124:	5d 10 15 00 	.word 0x5d101500
    c128:	05 02 00 41 	l.jal 408c22c <__stack+0x3c0c230>
    c12c:	5d 14 13 00 	.word 0x5d141300
    c130:	05 02 00 41 	l.jal 408c234 <__stack+0x3c0c238>
    c134:	5d 18 15 00 	.word 0x5d181500
    c138:	05 02 00 41 	l.jal 408c23c <__stack+0x3c0c240>
    c13c:	5d 1c 15 00 	.word 0x5d1c1500
    c140:	05 02 00 41 	l.jal 408c244 <__stack+0x3c0c248>
    c144:	5d 30 17 00 	.word 0x5d301700
    c148:	05 02 00 41 	l.jal 408c24c <__stack+0x3c0c250>
    c14c:	5d 38 15 00 	.word 0x5d381500
    c150:	05 02 00 41 	l.jal 408c254 <__stack+0x3c0c258>
    c154:	5d 4c 15 00 	.word 0x5d4c1500
    c158:	05 02 00 41 	l.jal 408c25c <__stack+0x3c0c260>
    c15c:	5d 58 16 00 	.word 0x5d581600
    c160:	05 02 00 41 	l.jal 408c264 <__stack+0x3c0c268>
    c164:	5d 60 15 00 	.word 0x5d601500
    c168:	05 02 00 41 	l.jal 408c26c <__stack+0x3c0c270>
    c16c:	5d 74 19 00 	.word 0x5d741900
    c170:	05 02 00 41 	l.jal 408c274 <__stack+0x3c0c278>
    c174:	5d 78 13 00 	.word 0x5d781300
    c178:	05 02 00 41 	l.jal 408c27c <__stack+0x3c0c280>
    c17c:	5d 7c 15 00 	.word 0x5d7c1500
    c180:	05 02 00 41 	l.jal 408c284 <__stack+0x3c0c288>
    c184:	5d 88 1a 00 	.word 0x5d881a00
    c188:	05 02 00 41 	l.jal 408c28c <__stack+0x3c0c290>
    c18c:	5d a0 16 00 	.word 0x5da01600
    c190:	05 02 00 41 	l.jal 408c294 <__stack+0x3c0c298>
    c194:	5d b4 15 00 	.word 0x5db41500
    c198:	05 02 00 41 	l.jal 408c29c <__stack+0x3c0c2a0>
    c19c:	5d cc 15 00 	.word 0x5dcc1500
    c1a0:	05 02 00 41 	l.jal 408c2a4 <__stack+0x3c0c2a8>
    c1a4:	5d f4 2a 00 	.word 0x5df42a00
    c1a8:	05 02 00 41 	l.jal 408c2ac <__stack+0x3c0c2b0>
    c1ac:	5d fc 03 6d 	.word 0x5dfc036d
    c1b0:	01 00 05 02 	l.j 400d5b8 <__stack+0x3b8d5bc>
    c1b4:	00 41 5e 08 	l.j 10639d4 <__stack+0xbe39d8>
    c1b8:	16 00 05 02 	.word 0x16000502
    c1bc:	00 41 5e 0c 	l.j 10639ec <__stack+0xbe39f0>
    c1c0:	12 00 05 02 	l.bf f800d5c8 <__stack+0xf7b8d5cc>
    c1c4:	00 41 5e 10 	l.j 1063a04 <__stack+0xbe3a08>
    c1c8:	15 00 05 02 	l.nop 0x502
    c1cc:	00 41 5e 14 	l.j 1063a1c <__stack+0xbe3a20>
    c1d0:	15 00 05 02 	l.nop 0x502
    c1d4:	00 41 5e 24 	l.j 1063a64 <__stack+0xbe3a68>
    c1d8:	17 00 05 02 	.word 0x17000502
    c1dc:	00 41 5e 30 	l.j 1063a9c <__stack+0xbe3aa0>
    c1e0:	15 00 05 02 	l.nop 0x502
    c1e4:	00 41 5e 34 	l.j 1063ab4 <__stack+0xbe3ab8>
    c1e8:	13 00 05 02 	l.bf fc00d5f0 <__stack+0xfbb8d5f4>
    c1ec:	00 41 5e 38 	l.j 1063acc <__stack+0xbe3ad0>
    c1f0:	15 00 05 02 	l.nop 0x502
    c1f4:	00 41 5e 3c 	l.j 1063ae4 <__stack+0xbe3ae8>
    c1f8:	15 00 05 02 	l.nop 0x502
    c1fc:	00 41 5e 50 	l.j 1063b3c <__stack+0xbe3b40>
    c200:	17 00 05 02 	.word 0x17000502
    c204:	00 41 5e 58 	l.j 1063b64 <__stack+0xbe3b68>
    c208:	15 00 05 02 	l.nop 0x502
    c20c:	00 41 5e 6c 	l.j 1063bbc <__stack+0xbe3bc0>
    c210:	15 00 05 02 	l.nop 0x502
    c214:	00 41 5e 78 	l.j 1063bf4 <__stack+0xbe3bf8>
    c218:	16 00 05 02 	.word 0x16000502
    c21c:	00 41 5e 80 	l.j 1063c1c <__stack+0xbe3c20>
    c220:	15 00 05 02 	l.nop 0x502
    c224:	00 41 5e 94 	l.j 1063c74 <__stack+0xbe3c78>
    c228:	19 00 05 02 	l.movhi r8,0x502
    c22c:	00 41 5e 98 	l.j 1063c8c <__stack+0xbe3c90>
    c230:	13 00 05 02 	l.bf fc00d638 <__stack+0xfbb8d63c>
    c234:	00 41 5e 9c 	l.j 1063ca4 <__stack+0xbe3ca8>
    c238:	15 00 05 02 	l.nop 0x502
    c23c:	00 41 5e ac 	l.j 1063cec <__stack+0xbe3cf0>
    c240:	04 1c 03 c1 	l.jal 70d144 <__stack+0x28d148>
    c244:	73 01 00 05 	l.cust1 
    c248:	02 00 41 5e 	l.j f801c7c0 <__stack+0xf7b9c7c4>
    c24c:	c0 19 00 05 	l.mtspr r25,r0,0x5
    c250:	02 00 41 5e 	l.j f801c7c8 <__stack+0xf7b9c7cc>
    c254:	d4 13 00 05 	l.sw 0x5(r19),r0
    c258:	02 00 41 5e 	l.j f801c7d0 <__stack+0xf7b9c7d4>
    c25c:	d8 13 00 05 	l.sb 0x5(r19),r0
    c260:	02 00 41 5e 	l.j f801c7d8 <__stack+0xf7b9c7dc>
    c264:	ec 04 10 03 	.word 0xec041003
    c268:	cc 0c 01 00 	.word 0xcc0c0100
    c26c:	05 02 00 41 	l.jal 408c370 <__stack+0x3c0c374>
    c270:	5e f4 0f 00 	.word 0x5ef40f00
    c274:	05 02 00 41 	l.jal 408c378 <__stack+0x3c0c37c>
    c278:	5f 00 15 00 	.word 0x5f001500
    c27c:	05 02 00 41 	l.jal 408c380 <__stack+0x3c0c384>
    c280:	5f 04 13 00 	.word 0x5f041300
    c284:	05 02 00 41 	l.jal 408c388 <__stack+0x3c0c38c>
    c288:	5f 08 15 00 	.word 0x5f081500
    c28c:	05 02 00 41 	l.jal 408c390 <__stack+0x3c0c394>
    c290:	5f 18 18 00 	.word 0x5f181800
    c294:	05 02 00 41 	l.jal 408c398 <__stack+0x3c0c39c>
    c298:	5f 20 15 00 	.word 0x5f201500
    c29c:	05 02 00 41 	l.jal 408c3a0 <__stack+0x3c0c3a4>
    c2a0:	5f 24 13 00 	.word 0x5f241300
    c2a4:	05 02 00 41 	l.jal 408c3a8 <__stack+0x3c0c3ac>
    c2a8:	5f 28 15 00 	.word 0x5f281500
    c2ac:	05 02 00 41 	l.jal 408c3b0 <__stack+0x3c0c3b4>
    c2b0:	5f 38 1b 00 	.word 0x5f381b00
    c2b4:	05 02 00 41 	l.jal 408c3b8 <__stack+0x3c0c3bc>
    c2b8:	5f 44 15 00 	.word 0x5f441500
    c2bc:	05 02 00 41 	l.jal 408c3c0 <__stack+0x3c0c3c4>
    c2c0:	5f 48 13 00 	.word 0x5f481300
    c2c4:	05 02 00 41 	l.jal 408c3c8 <__stack+0x3c0c3cc>
    c2c8:	5f 4c 15 00 	.word 0x5f4c1500
    c2cc:	05 02 00 41 	l.jal 408c3d0 <__stack+0x3c0c3d4>
    c2d0:	5f 58 15 00 	.word 0x5f581500
    c2d4:	05 02 00 41 	l.jal 408c3d8 <__stack+0x3c0c3dc>
    c2d8:	5f 68 16 00 	.word 0x5f681600
    c2dc:	05 02 00 41 	l.jal 408c3e0 <__stack+0x3c0c3e4>
    c2e0:	5f 80 15 00 	.word 0x5f801500
    c2e4:	05 02 00 41 	l.jal 408c3e8 <__stack+0x3c0c3ec>
    c2e8:	5f 98 15 00 	.word 0x5f981500
    c2ec:	05 02 00 41 	l.jal 408c3f0 <__stack+0x3c0c3f4>
    c2f0:	5f b0 15 00 	.word 0x5fb01500
    c2f4:	05 02 00 41 	l.jal 408c3f8 <__stack+0x3c0c3fc>
    c2f8:	5f cc 15 00 	.word 0x5fcc1500
    c2fc:	05 02 00 41 	l.jal 408c400 <__stack+0x3c0c404>
    c300:	5f e8 15 00 	.word 0x5fe81500
    c304:	05 02 00 41 	l.jal 408c408 <__stack+0x3c0c40c>
    c308:	60 00 15 00 	.word 0x60001500
    c30c:	05 02 00 41 	l.jal 408c410 <__stack+0x3c0c414>
    c310:	60 24 15 00 	.word 0x60241500
    c314:	05 02 00 41 	l.jal 408c418 <__stack+0x3c0c41c>
    c318:	60 44 16 00 	.word 0x60441600
    c31c:	05 02 00 41 	l.jal 408c420 <__stack+0x3c0c424>
    c320:	60 54 18 00 	.word 0x60541800
    c324:	05 02 00 41 	l.jal 408c428 <__stack+0x3c0c42c>
    c328:	60 60 16 00 	.word 0x60601600
    c32c:	05 02 00 41 	l.jal 408c430 <__stack+0x3c0c434>
    c330:	60 78 18 00 	.word 0x60781800
    c334:	05 02 00 41 	l.jal 408c438 <__stack+0x3c0c43c>
    c338:	60 9c 15 00 	.word 0x609c1500
    c33c:	05 02 00 41 	l.jal 408c440 <__stack+0x3c0c444>
    c340:	60 b4 16 00 	.word 0x60b41600
    c344:	05 02 00 41 	l.jal 408c448 <__stack+0x3c0c44c>
    c348:	60 bc 19 00 	.word 0x60bc1900
    c34c:	05 02 00 41 	l.jal 408c450 <__stack+0x3c0c454>
    c350:	60 e0 15 00 	.word 0x60e01500
    c354:	05 02 00 41 	l.jal 408c458 <__stack+0x3c0c45c>
    c358:	60 f8 16 00 	.word 0x60f81600
    c35c:	05 02 00 41 	l.jal 408c460 <__stack+0x3c0c464>
    c360:	61 00 19 00 	.word 0x61001900
    c364:	05 02 00 41 	l.jal 408c468 <__stack+0x3c0c46c>
    c368:	61 18 16 00 	.word 0x61181600
    c36c:	05 02 00 41 	l.jal 408c470 <__stack+0x3c0c474>
    c370:	61 30 04 18 	.word 0x61300418
    c374:	03 ee 73 01 	l.j ffba8f78 <__stack+0xff728f7c>
    c378:	00 05 02 00 	l.j 14cb78 <__ram_length+0xccb78>
    c37c:	41 61 3c 04 	.word 0x41613c04
    c380:	10 03 92 0c 	l.bf f0bb0 <__ram_length+0x70bb0>
    c384:	01 00 05 02 	l.j 400d78c <__stack+0x3b8d790>
    c388:	00 41 61 54 	l.j 10648d8 <__stack+0xbe48dc>
    c38c:	04 18 03 ee 	l.jal 60d344 <__stack+0x18d348>
    c390:	73 01 00 05 	l.cust1 
    c394:	02 00 41 61 	l.j f801c918 <__stack+0xf7b9c91c>
    c398:	60 04 10 03 	.word 0x60041003
    c39c:	92 0c 01 00 	l.lbs r16,0x100(r12)
    c3a0:	05 02 00 41 	l.jal 408c4a4 <__stack+0x3c0c4a8>
    c3a4:	61 68 15 00 	.word 0x61681500
    c3a8:	05 02 00 41 	l.jal 408c4ac <__stack+0x3c0c4b0>
    c3ac:	61 70 16 00 	.word 0x61701600
    c3b0:	05 02 00 41 	l.jal 408c4b4 <__stack+0x3c0c4b8>
    c3b4:	61 7c 17 00 	.word 0x617c1700
    c3b8:	05 02 00 41 	l.jal 408c4bc <__stack+0x3c0c4c0>
    c3bc:	61 84 16 00 	.word 0x61841600
    c3c0:	05 02 00 41 	l.jal 408c4c4 <__stack+0x3c0c4c8>
    c3c4:	61 9c 15 00 	.word 0x619c1500
    c3c8:	05 02 00 41 	l.jal 408c4cc <__stack+0x3c0c4d0>
    c3cc:	61 a8 15 00 	.word 0x61a81500
    c3d0:	05 02 00 41 	l.jal 408c4d4 <__stack+0x3c0c4d8>
    c3d4:	61 ac 13 00 	.word 0x61ac1300
    c3d8:	05 02 00 41 	l.jal 408c4dc <__stack+0x3c0c4e0>
    c3dc:	61 b0 15 00 	.word 0x61b01500
    c3e0:	05 02 00 41 	l.jal 408c4e4 <__stack+0x3c0c4e8>
    c3e4:	61 b4 18 00 	.word 0x61b41800
    c3e8:	05 02 00 41 	l.jal 408c4ec <__stack+0x3c0c4f0>
    c3ec:	61 c0 16 00 	.word 0x61c01600
    c3f0:	05 02 00 41 	l.jal 408c4f4 <__stack+0x3c0c4f8>
    c3f4:	61 d8 15 00 	.word 0x61d81500
    c3f8:	05 02 00 41 	l.jal 408c4fc <__stack+0x3c0c500>
    c3fc:	61 e0 15 00 	.word 0x61e01500
    c400:	05 02 00 41 	l.jal 408c504 <__stack+0x3c0c508>
    c404:	61 e4 13 00 	.word 0x61e41300
    c408:	05 02 00 41 	l.jal 408c50c <__stack+0x3c0c510>
    c40c:	61 e8 15 00 	.word 0x61e81500
    c410:	05 02 00 41 	l.jal 408c514 <__stack+0x3c0c518>
    c414:	61 f8 19 00 	.word 0x61f81900
    c418:	05 02 00 41 	l.jal 408c51c <__stack+0x3c0c520>
    c41c:	62 04 15 00 	.word 0x62041500
    c420:	05 02 00 41 	l.jal 408c524 <__stack+0x3c0c528>
    c424:	62 08 13 00 	.word 0x62081300
    c428:	05 02 00 41 	l.jal 408c52c <__stack+0x3c0c530>
    c42c:	62 0c 15 00 	.word 0x620c1500
    c430:	05 02 00 41 	l.jal 408c534 <__stack+0x3c0c538>
    c434:	62 18 15 00 	.word 0x62181500
    c438:	05 02 00 41 	l.jal 408c53c <__stack+0x3c0c540>
    c43c:	62 28 15 00 	.word 0x62281500
    c440:	05 02 00 41 	l.jal 408c544 <__stack+0x3c0c548>
    c444:	62 40 15 00 	.word 0x62401500
    c448:	05 02 00 41 	l.jal 408c54c <__stack+0x3c0c550>
    c44c:	62 5c 15 00 	.word 0x625c1500
    c450:	05 02 00 41 	l.jal 408c554 <__stack+0x3c0c558>
    c454:	62 78 15 00 	.word 0x62781500
    c458:	05 02 00 41 	l.jal 408c55c <__stack+0x3c0c560>
    c45c:	62 90 15 00 	.word 0x62901500
    c460:	05 02 00 41 	l.jal 408c564 <__stack+0x3c0c568>
    c464:	62 a8 15 00 	.word 0x62a81500
    c468:	05 02 00 41 	l.jal 408c56c <__stack+0x3c0c570>
    c46c:	62 c0 15 00 	.word 0x62c01500
    c470:	05 02 00 41 	l.jal 408c574 <__stack+0x3c0c578>
    c474:	62 d8 15 00 	.word 0x62d81500
    c478:	05 02 00 41 	l.jal 408c57c <__stack+0x3c0c580>
    c47c:	62 fc 16 00 	.word 0x62fc1600
    c480:	05 02 00 41 	l.jal 408c584 <__stack+0x3c0c588>
    c484:	63 0c 1a 00 	.word 0x630c1a00
    c488:	05 02 00 41 	l.jal 408c58c <__stack+0x3c0c590>
    c48c:	63 18 15 00 	.word 0x63181500
    c490:	05 02 00 41 	l.jal 408c594 <__stack+0x3c0c598>
    c494:	63 1c 13 00 	.word 0x631c1300
    c498:	05 02 00 41 	l.jal 408c59c <__stack+0x3c0c5a0>
    c49c:	63 20 15 00 	.word 0x63201500
    c4a0:	05 02 00 41 	l.jal 408c5a4 <__stack+0x3c0c5a8>
    c4a4:	63 24 15 00 	.word 0x63241500
    c4a8:	05 02 00 41 	l.jal 408c5ac <__stack+0x3c0c5b0>
    c4ac:	63 28 13 00 	.word 0x63281300
    c4b0:	05 02 00 41 	l.jal 408c5b4 <__stack+0x3c0c5b8>
    c4b4:	63 30 15 00 	.word 0x63301500
    c4b8:	05 02 00 41 	l.jal 408c5bc <__stack+0x3c0c5c0>
    c4bc:	63 3c 15 00 	.word 0x633c1500
    c4c0:	05 02 00 41 	l.jal 408c5c4 <__stack+0x3c0c5c8>
    c4c4:	63 54 15 00 	.word 0x63541500
    c4c8:	05 02 00 41 	l.jal 408c5cc <__stack+0x3c0c5d0>
    c4cc:	63 70 15 00 	.word 0x63701500
    c4d0:	05 02 00 41 	l.jal 408c5d4 <__stack+0x3c0c5d8>
    c4d4:	63 8c 15 00 	.word 0x638c1500
    c4d8:	05 02 00 41 	l.jal 408c5dc <__stack+0x3c0c5e0>
    c4dc:	63 a4 15 00 	.word 0x63a41500
    c4e0:	05 02 00 41 	l.jal 408c5e4 <__stack+0x3c0c5e8>
    c4e4:	63 bc 15 00 	.word 0x63bc1500
    c4e8:	05 02 00 41 	l.jal 408c5ec <__stack+0x3c0c5f0>
    c4ec:	63 d4 15 00 	.word 0x63d41500
    c4f0:	05 02 00 41 	l.jal 408c5f4 <__stack+0x3c0c5f8>
    c4f4:	63 ec 15 00 	.word 0x63ec1500
    c4f8:	05 02 00 41 	l.jal 408c5fc <__stack+0x3c0c600>
    c4fc:	64 10 16 00 	.word 0x64101600
    c500:	05 02 00 41 	l.jal 408c604 <__stack+0x3c0c608>
    c504:	64 20 19 00 	.word 0x64201900
    c508:	05 02 00 41 	l.jal 408c60c <__stack+0x3c0c610>
    c50c:	64 30 16 00 	.word 0x64301600
    c510:	05 02 00 41 	l.jal 408c614 <__stack+0x3c0c618>
    c514:	64 48 15 00 	.word 0x64481500
    c518:	05 02 00 41 	l.jal 408c61c <__stack+0x3c0c620>
    c51c:	64 58 1d 00 	.word 0x64581d00
    c520:	05 02 00 41 	l.jal 408c624 <__stack+0x3c0c628>
    c524:	64 64 18 00 	.word 0x64641800
    c528:	05 02 00 41 	l.jal 408c62c <__stack+0x3c0c630>
    c52c:	64 68 10 00 	.word 0x64681000
    c530:	05 02 00 41 	l.jal 408c634 <__stack+0x3c0c638>
    c534:	64 6c 15 00 	.word 0x646c1500
    c538:	05 02 00 41 	l.jal 408c63c <__stack+0x3c0c640>
    c53c:	64 78 1a 00 	.word 0x64781a00
    c540:	05 02 00 41 	l.jal 408c644 <__stack+0x3c0c648>
    c544:	64 7c 0e 00 	.word 0x647c0e00
    c548:	05 02 00 41 	l.jal 408c64c <__stack+0x3c0c650>
    c54c:	64 80 15 00 	.word 0x64801500
    c550:	05 02 00 41 	l.jal 408c654 <__stack+0x3c0c658>
    c554:	64 90 19 00 	.word 0x64901900
    c558:	05 02 00 41 	l.jal 408c65c <__stack+0x3c0c660>
    c55c:	64 94 0f 00 	.word 0x64940f00
    c560:	05 02 00 41 	l.jal 408c664 <__stack+0x3c0c668>
    c564:	64 98 16 00 	.word 0x64981600
    c568:	05 02 00 41 	l.jal 408c66c <__stack+0x3c0c670>
    c56c:	64 a4 15 00 	.word 0x64a41500
    c570:	05 02 00 41 	l.jal 408c674 <__stack+0x3c0c678>
    c574:	64 bc 15 00 	.word 0x64bc1500
    c578:	05 02 00 41 	l.jal 408c67c <__stack+0x3c0c680>
    c57c:	64 d0 15 00 	.word 0x64d01500
    c580:	05 02 00 41 	l.jal 408c684 <__stack+0x3c0c688>
    c584:	64 f4 15 00 	.word 0x64f41500
    c588:	05 02 00 41 	l.jal 408c68c <__stack+0x3c0c690>
    c58c:	65 18 15 00 	.word 0x65181500
    c590:	05 02 00 41 	l.jal 408c694 <__stack+0x3c0c698>
    c594:	65 2c 15 00 	.word 0x652c1500
    c598:	05 02 00 41 	l.jal 408c69c <__stack+0x3c0c6a0>
    c59c:	65 4c 15 00 	.word 0x654c1500
    c5a0:	05 02 00 41 	l.jal 408c6a4 <__stack+0x3c0c6a8>
    c5a4:	65 6c 15 00 	.word 0x656c1500
    c5a8:	05 02 00 41 	l.jal 408c6ac <__stack+0x3c0c6b0>
    c5ac:	65 80 15 00 	.word 0x65801500
    c5b0:	05 02 00 41 	l.jal 408c6b4 <__stack+0x3c0c6b8>
    c5b4:	65 a8 15 00 	.word 0x65a81500
    c5b8:	05 02 00 41 	l.jal 408c6bc <__stack+0x3c0c6c0>
    c5bc:	65 cc 15 00 	.word 0x65cc1500
    c5c0:	05 02 00 41 	l.jal 408c6c4 <__stack+0x3c0c6c8>
    c5c4:	65 e4 15 00 	.word 0x65e41500
    c5c8:	05 02 00 41 	l.jal 408c6cc <__stack+0x3c0c6d0>
    c5cc:	65 fc 15 00 	.word 0x65fc1500
    c5d0:	05 02 00 41 	l.jal 408c6d4 <__stack+0x3c0c6d8>
    c5d4:	66 14 15 00 	.word 0x66141500
    c5d8:	05 02 00 41 	l.jal 408c6dc <__stack+0x3c0c6e0>
    c5dc:	66 34 16 00 	.word 0x66341600
    c5e0:	05 02 00 41 	l.jal 408c6e4 <__stack+0x3c0c6e8>
    c5e4:	66 44 18 00 	.word 0x66441800
    c5e8:	05 02 00 41 	l.jal 408c6ec <__stack+0x3c0c6f0>
    c5ec:	66 50 16 00 	.word 0x66501600
    c5f0:	05 02 00 41 	l.jal 408c6f4 <__stack+0x3c0c6f8>
    c5f4:	66 68 16 00 	.word 0x66681600
    c5f8:	05 02 00 41 	l.jal 408c6fc <__stack+0x3c0c700>
    c5fc:	66 6c 16 00 	.word 0x666c1600
    c600:	05 02 00 41 	l.jal 408c704 <__stack+0x3c0c708>
    c604:	66 70 12 00 	.word 0x66701200
    c608:	05 02 00 41 	l.jal 408c70c <__stack+0x3c0c710>
    c60c:	66 74 16 00 	.word 0x66741600
    c610:	05 02 00 41 	l.jal 408c714 <__stack+0x3c0c718>
    c614:	66 78 12 00 	.word 0x66781200
    c618:	05 02 00 41 	l.jal 408c71c <__stack+0x3c0c720>
    c61c:	66 80 15 00 	.word 0x66801500
    c620:	05 02 00 41 	l.jal 408c724 <__stack+0x3c0c728>
    c624:	66 84 15 00 	.word 0x66841500
    c628:	05 02 00 41 	l.jal 408c72c <__stack+0x3c0c730>
    c62c:	66 88 13 00 	.word 0x66881300
    c630:	05 02 00 41 	l.jal 408c734 <__stack+0x3c0c738>
    c634:	66 8c 17 00 	.word 0x668c1700
    c638:	05 02 00 41 	l.jal 408c73c <__stack+0x3c0c740>
    c63c:	66 94 16 00 	.word 0x66941600
    c640:	05 02 00 41 	l.jal 408c744 <__stack+0x3c0c748>
    c644:	66 a0 16 00 	.word 0x66a01600
    c648:	05 02 00 41 	l.jal 408c74c <__stack+0x3c0c750>
    c64c:	66 a8 16 00 	.word 0x66a81600
    c650:	05 02 00 41 	l.jal 408c754 <__stack+0x3c0c758>
    c654:	66 ac 12 00 	.word 0x66ac1200
    c658:	05 02 00 41 	l.jal 408c75c <__stack+0x3c0c760>
    c65c:	66 b4 16 00 	.word 0x66b41600
    c660:	05 02 00 41 	l.jal 408c764 <__stack+0x3c0c768>
    c664:	66 b8 13 00 	.word 0x66b81300
    c668:	05 02 00 41 	l.jal 408c76c <__stack+0x3c0c770>
    c66c:	66 bc 15 00 	.word 0x66bc1500
    c670:	05 02 00 41 	l.jal 408c774 <__stack+0x3c0c778>
    c674:	66 c0 13 00 	.word 0x66c01300
    c678:	05 02 00 41 	l.jal 408c77c <__stack+0x3c0c780>
    c67c:	66 c4 17 00 	.word 0x66c41700
    c680:	05 02 00 41 	l.jal 408c784 <__stack+0x3c0c788>
    c684:	66 d0 27 00 	.word 0x66d02700
    c688:	05 02 00 41 	l.jal 408c78c <__stack+0x3c0c790>
    c68c:	66 d8 03 6f 	.word 0x66d8036f
    c690:	01 00 05 02 	l.j 400da98 <__stack+0x3b8da9c>
    c694:	00 41 66 e4 	l.j 1066224 <__stack+0xbe6228>
    c698:	16 00 05 02 	.word 0x16000502
    c69c:	00 41 66 f8 	l.j 106627c <__stack+0xbe6280>
    c6a0:	15 00 05 02 	l.nop 0x502
    c6a4:	00 41 67 04 	l.j 10662b4 <__stack+0xbe62b8>
    c6a8:	15 00 05 02 	l.nop 0x502
    c6ac:	00 41 67 0c 	l.j 10662dc <__stack+0xbe62e0>
    c6b0:	15 00 05 02 	l.nop 0x502
    c6b4:	00 41 67 1c 	l.j 1066324 <__stack+0xbe6328>
    c6b8:	16 00 05 02 	.word 0x16000502
    c6bc:	00 41 67 2c 	l.j 106636c <__stack+0xbe6370>
    c6c0:	17 00 05 02 	.word 0x17000502
    c6c4:	00 41 67 34 	l.j 1066394 <__stack+0xbe6398>
    c6c8:	16 00 05 02 	.word 0x16000502
    c6cc:	00 41 67 40 	l.j 10663cc <__stack+0xbe63d0>
    c6d0:	15 00 05 02 	l.nop 0x502
    c6d4:	00 41 67 44 	l.j 10663e4 <__stack+0xbe63e8>
    c6d8:	13 00 05 02 	l.bf fc00dae0 <__stack+0xfbb8dae4>
    c6dc:	00 41 67 48 	l.j 10663fc <__stack+0xbe6400>
    c6e0:	15 00 05 02 	l.nop 0x502
    c6e4:	00 41 67 4c 	l.j 1066414 <__stack+0xbe6418>
    c6e8:	18 00 05 02 	l.movhi r0,0x502
    c6ec:	00 41 67 54 	l.j 106643c <__stack+0xbe6440>
    c6f0:	16 00 05 02 	.word 0x16000502
    c6f4:	00 41 67 60 	l.j 1066474 <__stack+0xbe6478>
    c6f8:	15 00 05 02 	l.nop 0x502
    c6fc:	00 41 67 64 	l.j 106648c <__stack+0xbe6490>
    c700:	13 00 05 02 	l.bf fc00db08 <__stack+0xfbb8db0c>
    c704:	00 41 67 68 	l.j 10664a4 <__stack+0xbe64a8>
    c708:	15 00 05 02 	l.nop 0x502
    c70c:	00 41 67 78 	l.j 10664ec <__stack+0xbe64f0>
    c710:	16 00 05 02 	.word 0x16000502
    c714:	00 41 67 80 	l.j 1066514 <__stack+0xbe6518>
    c718:	16 00 05 02 	.word 0x16000502
    c71c:	00 41 67 90 	l.j 106655c <__stack+0xbe6560>
    c720:	15 00 05 02 	l.nop 0x502
    c724:	00 41 67 a0 	l.j 10665a4 <__stack+0xbe65a8>
    c728:	16 00 05 02 	.word 0x16000502
    c72c:	00 41 67 a8 	l.j 10665cc <__stack+0xbe65d0>
    c730:	16 00 05 02 	.word 0x16000502
    c734:	00 41 67 b4 	l.j 1066604 <__stack+0xbe6608>
    c738:	15 00 05 02 	l.nop 0x502
    c73c:	00 41 67 c4 	l.j 106664c <__stack+0xbe6650>
    c740:	1d 00 05 02 	.word 0x1d000502
    c744:	00 41 67 d0 	l.j 1066684 <__stack+0xbe6688>
    c748:	15 00 05 02 	l.nop 0x502
    c74c:	00 41 67 d4 	l.j 106669c <__stack+0xbe66a0>
    c750:	13 00 05 02 	l.bf fc00db58 <__stack+0xfbb8db5c>
    c754:	00 41 67 d8 	l.j 10666b4 <__stack+0xbe66b8>
    c758:	15 00 05 02 	l.nop 0x502
    c75c:	00 41 67 e4 	l.j 10666ec <__stack+0xbe66f0>
    c760:	18 00 05 02 	l.movhi r0,0x502
    c764:	00 41 67 f0 	l.j 1066724 <__stack+0xbe6728>
    c768:	15 00 05 02 	l.nop 0x502
    c76c:	00 41 67 f4 	l.j 106673c <__stack+0xbe6740>
    c770:	13 00 05 02 	l.bf fc00db78 <__stack+0xfbb8db7c>
    c774:	00 41 67 f8 	l.j 1066754 <__stack+0xbe6758>
    c778:	15 00 05 02 	l.nop 0x502
    c77c:	00 41 68 04 	l.j 106678c <__stack+0xbe6790>
    c780:	15 00 05 02 	l.nop 0x502
    c784:	00 41 68 08 	l.j 10667a4 <__stack+0xbe67a8>
    c788:	13 00 05 02 	l.bf fc00db90 <__stack+0xfbb8db94>
    c78c:	00 41 68 10 	l.j 10667cc <__stack+0xbe67d0>
    c790:	15 00 05 02 	l.nop 0x502
    c794:	00 41 68 1c 	l.j 1066804 <__stack+0xbe6808>
    c798:	15 00 05 02 	l.nop 0x502
    c79c:	00 41 68 34 	l.j 106686c <__stack+0xbe6870>
    c7a0:	15 00 05 02 	l.nop 0x502
    c7a4:	00 41 68 4c 	l.j 10668d4 <__stack+0xbe68d8>
    c7a8:	15 00 05 02 	l.nop 0x502
    c7ac:	00 41 68 64 	l.j 106693c <__stack+0xbe6940>
    c7b0:	15 00 05 02 	l.nop 0x502
    c7b4:	00 41 68 90 	l.j 10669f4 <__stack+0xbe69f8>
    c7b8:	15 00 05 02 	l.nop 0x502
    c7bc:	00 41 68 ac 	l.j 1066a6c <__stack+0xbe6a70>
    c7c0:	15 00 05 02 	l.nop 0x502
    c7c4:	00 41 68 c4 	l.j 1066ad4 <__stack+0xbe6ad8>
    c7c8:	15 00 05 02 	l.nop 0x502
    c7cc:	00 41 68 dc 	l.j 1066b3c <__stack+0xbe6b40>
    c7d0:	15 00 05 02 	l.nop 0x502
    c7d4:	00 41 68 f4 	l.j 1066ba4 <__stack+0xbe6ba8>
    c7d8:	16 00 05 02 	.word 0x16000502
    c7dc:	00 41 69 00 	l.j 1066bdc <__stack+0xbe6be0>
    c7e0:	19 00 05 02 	l.movhi r8,0x502
    c7e4:	00 41 69 0c 	l.j 1066c14 <__stack+0xbe6c18>
    c7e8:	16 00 05 02 	.word 0x16000502
    c7ec:	00 41 69 24 	l.j 1066c7c <__stack+0xbe6c80>
    c7f0:	16 00 05 02 	.word 0x16000502
    c7f4:	00 41 69 40 	l.j 1066cf4 <__stack+0xbe6cf8>
    c7f8:	15 00 05 02 	l.nop 0x502
    c7fc:	00 41 69 54 	l.j 1066d4c <__stack+0xbe6d50>
    c800:	1a 00 05 02 	l.movhi r16,0x502
    c804:	00 41 69 58 	l.j 1066d64 <__stack+0xbe6d68>
    c808:	0e 00 05 02 	l.bnf f800dc10 <__stack+0xf7b8dc14>
    c80c:	00 41 69 60 	l.j 1066d8c <__stack+0xbe6d90>
    c810:	16 00 05 02 	.word 0x16000502
    c814:	00 41 69 68 	l.j 1066db4 <__stack+0xbe6db8>
    c818:	18 00 05 02 	l.movhi r0,0x502
    c81c:	00 41 69 6c 	l.j 1066dcc <__stack+0xbe6dd0>
    c820:	15 00 05 02 	l.nop 0x502
    c824:	00 41 69 70 	l.j 1066de4 <__stack+0xbe6de8>
    c828:	15 00 05 02 	l.nop 0x502
    c82c:	00 41 69 74 	l.j 1066dfc <__stack+0xbe6e00>
    c830:	13 00 05 02 	l.bf fc00dc38 <__stack+0xfbb8dc3c>
    c834:	00 41 69 78 	l.j 1066e14 <__stack+0xbe6e18>
    c838:	15 00 05 02 	l.nop 0x502
    c83c:	00 41 69 80 	l.j 1066e3c <__stack+0xbe6e40>
    c840:	16 00 05 02 	.word 0x16000502
    c844:	00 41 69 84 	l.j 1066e54 <__stack+0xbe6e58>
    c848:	12 00 05 02 	l.bf f800dc50 <__stack+0xf7b8dc54>
    c84c:	00 41 69 88 	l.j 1066e6c <__stack+0xbe6e70>
    c850:	15 00 05 02 	l.nop 0x502
    c854:	00 41 69 90 	l.j 1066e94 <__stack+0xbe6e98>
    c858:	16 00 05 02 	.word 0x16000502
    c85c:	00 41 69 94 	l.j 1066eac <__stack+0xbe6eb0>
    c860:	13 00 05 02 	l.bf fc00dc68 <__stack+0xfbb8dc6c>
    c864:	00 41 69 98 	l.j 1066ec4 <__stack+0xbe6ec8>
    c868:	15 00 05 02 	l.nop 0x502
    c86c:	00 41 6a 58 	l.j 10671cc <__stack+0xbe71d0>
    c870:	15 00 05 02 	l.nop 0x502
    c874:	00 41 6a 64 	l.j 1067204 <__stack+0xbe7208>
    c878:	15 00 05 02 	l.nop 0x502
    c87c:	00 41 6a 68 	l.j 106721c <__stack+0xbe7220>
    c880:	15 00 05 02 	l.nop 0x502
    c884:	00 41 6a 70 	l.j 1067244 <__stack+0xbe7248>
    c888:	16 00 05 02 	.word 0x16000502
    c88c:	00 41 6a 7c 	l.j 106727c <__stack+0xbe7280>
    c890:	15 00 05 02 	l.nop 0x502
    c894:	00 41 6a 80 	l.j 1067294 <__stack+0xbe7298>
    c898:	15 00 05 02 	l.nop 0x502
    c89c:	00 41 6b 40 	l.j 106759c <__stack+0xbe75a0>
    c8a0:	15 00 05 02 	l.nop 0x502
    c8a4:	00 41 6b 44 	l.j 10675b4 <__stack+0xbe75b8>
    c8a8:	15 00 05 02 	l.nop 0x502
    c8ac:	00 41 6b 4c 	l.j 10675dc <__stack+0xbe75e0>
    c8b0:	15 00 05 02 	l.nop 0x502
    c8b4:	00 41 6b 50 	l.j 10675f4 <__stack+0xbe75f8>
    c8b8:	15 00 05 02 	l.nop 0x502
    c8bc:	00 41 6b 58 	l.j 106761c <__stack+0xbe7620>
    c8c0:	15 00 05 02 	l.nop 0x502
    c8c4:	00 41 6b 5c 	l.j 1067634 <__stack+0xbe7638>
    c8c8:	15 00 05 02 	l.nop 0x502
    c8cc:	00 41 6c 1c 	l.j 106793c <__stack+0xbe7940>
    c8d0:	18 00 05 02 	l.movhi r0,0x502
    c8d4:	00 41 6c 2c 	l.j 1067984 <__stack+0xbe7988>
    c8d8:	16 00 05 02 	.word 0x16000502
    c8dc:	00 41 6c 34 	l.j 10679ac <__stack+0xbe79b0>
    c8e0:	16 00 05 02 	.word 0x16000502
    c8e4:	00 41 6c 40 	l.j 10679e4 <__stack+0xbe79e8>
    c8e8:	15 00 05 02 	l.nop 0x502
    c8ec:	00 41 6c 44 	l.j 10679fc <__stack+0xbe7a00>
    c8f0:	13 00 05 02 	l.bf fc00dcf8 <__stack+0xfbb8dcfc>
    c8f4:	00 41 6c 48 	l.j 1067a14 <__stack+0xbe7a18>
    c8f8:	15 00 05 02 	l.nop 0x502
    c8fc:	00 41 6c 4c 	l.j 1067a2c <__stack+0xbe7a30>
    c900:	18 00 05 02 	l.movhi r0,0x502
    c904:	00 41 6c 58 	l.j 1067a64 <__stack+0xbe7a68>
    c908:	16 00 05 02 	.word 0x16000502
    c90c:	00 41 6c 60 	l.j 1067a8c <__stack+0xbe7a90>
    c910:	15 00 05 02 	l.nop 0x502
    c914:	00 41 6c 64 	l.j 1067aa4 <__stack+0xbe7aa8>
    c918:	13 00 05 02 	l.bf fc00dd20 <__stack+0xfbb8dd24>
    c91c:	00 41 6c 68 	l.j 1067abc <__stack+0xbe7ac0>
    c920:	15 00 05 02 	l.nop 0x502
    c924:	00 41 6c 78 	l.j 1067b04 <__stack+0xbe7b08>
    c928:	03 b0 02 01 	l.j fec0d12c <__stack+0xfe78d130>
    c92c:	00 05 02 00 	l.j 14d12c <__ram_length+0xcd12c>
    c930:	41 6c 84 15 	.word 0x416c8415
    c934:	00 05 02 00 	l.j 14d134 <__ram_length+0xcd134>
    c938:	41 6c 94 1d 	.word 0x416c941d
    c93c:	00 05 02 00 	l.j 14d13c <__ram_length+0xcd13c>
    c940:	41 6c a0 15 	.word 0x416ca015
    c944:	00 05 02 00 	l.j 14d144 <__ram_length+0xcd144>
    c948:	41 6c b0 15 	.word 0x416cb015
    c94c:	00 05 02 00 	l.j 14d14c <__ram_length+0xcd14c>
    c950:	41 6c cc 15 	.word 0x416ccc15
    c954:	00 05 02 00 	l.j 14d154 <__ram_length+0xcd154>
    c958:	41 6c d8 04 	.word 0x416cd804
    c95c:	18 03 a8 70 	.word 0x1803a870
    c960:	01 00 05 02 	l.j 400dd68 <__stack+0x3b8dd6c>
    c964:	00 41 6c e8 	l.j 1067d04 <__stack+0xbe7d08>
    c968:	04 10 03 f6 	l.jal 40d940 <LoadConfiguration.clone.7+0x804>
    c96c:	10 01 00 05 	l.bf 4c980 <__rom_size+0x32634>
    c970:	02 00 41 6d 	l.j f801cf24 <__stack+0xf7b9cf28>
    c974:	08 00 01 01 	.word 0x08000101
    c978:	00 00 00 19 	l.j c9dc <__rom_size-0xd970>
    c97c:	00 02 00 00 	l.j 8c97c <__ram_length+0xc97c>
    c980:	00 13 01 01 	l.j 4ccd84 <__stack+0x4cd88>
    c984:	fb 0e 0d 00 	l.cust7 
    c988:	01 01 01 01 	l.j 404cd8c <__stack+0x3bccd90>
    c98c:	00 00 00 01 	l.j c990 <__rom_size-0xd9bc>
    c990:	00 00 01 00 	l.j cd90 <__rom_size-0xd5bc>
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	00 00 00 10 	l.j 40 <__rom_size-0x1a30c>
   4:	ff ff ff ff 	l.cust8 
   8:	01 00 01 7c 	l.j 40005f8 <__stack+0x3b805fc>
   c:	23 0c 01 00 	.word 0x230c0100
  10:	09 23 09 00 	.word 0x09230900
  14:	00 00 00 0c 	l.j 44 <__rom_size-0x1a308>
  18:	00 00 00 00 	l.j 18 <__rom_size-0x1a334>
  1c:	00 40 02 80 	l.j 1000a1c <__stack+0xb80a20>
  20:	00 00 00 30 	l.j e0 <__rom_size-0x1a26c>
  24:	00 00 00 0c 	l.j 54 <__rom_size-0x1a2f8>
  28:	00 00 00 00 	l.j 28 <__rom_size-0x1a324>
  2c:	00 40 02 b0 	l.j 1000aec <__stack+0xb80af0>
  30:	00 00 00 1c 	l.j a0 <__rom_size-0x1a2ac>
  34:	00 00 00 0c 	l.j 64 <__rom_size-0x1a2e8>
  38:	00 00 00 00 	l.j 38 <__rom_size-0x1a314>
  3c:	00 40 02 cc 	l.j 1000b6c <__stack+0xb80b70>
  40:	00 00 00 28 	l.j e0 <__rom_size-0x1a26c>
  44:	00 00 00 0c 	l.j 74 <__rom_size-0x1a2d8>
  48:	00 00 00 00 	l.j 48 <__rom_size-0x1a304>
  4c:	00 40 02 f4 	l.j 1000c1c <__stack+0xb80c20>
  50:	00 00 00 20 	l.j d0 <__rom_size-0x1a27c>
  54:	00 00 00 0c 	l.j 84 <__rom_size-0x1a2c8>
  58:	00 00 00 00 	l.j 58 <__rom_size-0x1a2f4>
  5c:	00 40 03 14 	l.j 1000cac <__stack+0xb80cb0>
  60:	00 00 00 58 	l.j 1c0 <__rom_size-0x1a18c>
  64:	00 00 00 14 	l.j b4 <__rom_size-0x1a298>
  68:	00 00 00 00 	l.j 68 <__rom_size-0x1a2e4>
  6c:	00 40 03 6c 	l.j 1000e1c <__stack+0xb80e20>
  70:	00 00 00 6c 	l.j 220 <__rom_size-0x1a12c>
  74:	48 0e 04 82 	l.jalr r0
  78:	01 00 00 00 	l.j 4000078 <__stack+0x3b8007c>
  7c:	00 00 00 28 	l.j 11c <__rom_size-0x1a230>
  80:	00 00 00 00 	l.j 80 <__rom_size-0x1a2cc>
  84:	00 40 03 d8 	l.j 1000fe4 <__stack+0xb80fe8>
  88:	00 00 0b 50 	l.j 2dc8 <__rom_size-0x17584>
  8c:	74 0e 64 9e 	l.cust2 
  90:	02 9c 03 9a 	l.j fa700ef8 <__stack+0xfa280efc>
  94:	04 89 01 98 	l.jal 22406f4 <__stack+0x1dc06f8>
  98:	05 96 06 94 	l.jal 6581ae8 <__stack+0x6101aec>
  9c:	07 92 08 90 	l.jal fe4822dc <__stack+0xfe0022e0>
  a0:	09 8e 0a 82 	.word 0x098e0a82
  a4:	0b 00 00 00 	.word 0x0b000000
  a8:	00 00 00 0c 	l.j d8 <__rom_size-0x1a274>
  ac:	00 00 00 00 	l.j ac <__rom_size-0x1a2a0>
  b0:	00 40 0f 28 	l.j 1003d50 <__stack+0xb83d54>
  b4:	00 00 00 18 	l.j 114 <__rom_size-0x1a238>
  b8:	00 00 00 0c 	l.j e8 <__rom_size-0x1a264>
  bc:	00 00 00 00 	l.j bc <__rom_size-0x1a290>
  c0:	00 40 0f 40 	l.j 1003dc0 <__stack+0xb83dc4>
  c4:	00 00 00 1c 	l.j 134 <__rom_size-0x1a218>
  c8:	00 00 00 28 	l.j 168 <__rom_size-0x1a1e4>
  cc:	00 00 00 00 	l.j cc <__rom_size-0x1a280>
  d0:	00 40 0f 5c 	l.j 1003e40 <__stack+0xb83e44>
  d4:	00 00 09 90 	l.j 2714 <__rom_size-0x17c38>
  d8:	74 0e e0 06 	l.cust2 
  dc:	9e 02 9c 03 	l.addi r16,r2,0xffff9c03
  e0:	9a 04 98 05 	l.lhs r16,0xffff9805(r4)
  e4:	96 06 94 07 	l.lhz r16,0xffff9407(r6)
  e8:	92 08 90 09 	l.lbs r16,0xffff9009(r8)
  ec:	8e 0a 82 0b 	l.lbz r16,0xffff820b(r10)
  f0:	89 01 00 00 	l.lws r8,0x0(r1)
  f4:	00 00 00 24 	l.j 184 <__rom_size-0x1a1c8>
  f8:	00 00 00 00 	l.j f8 <__rom_size-0x1a254>
  fc:	00 40 18 ec 	l.j 10064ac <__stack+0xb864b0>
 100:	00 00 04 08 	l.j 1120 <__rom_size-0x1922c>
 104:	70 0e dc 06 	l.cust1 
 108:	9c 02 9a 03 	l.addi r0,r2,0xffff9a03
 10c:	98 04 96 05 	l.lhs r0,0xffff9605(r4)
 110:	94 06 92 07 	l.lhz r0,0xffff9207(r6)
 114:	90 08 8e 09 	l.lbs r0,0xffff8e09(r8)
 118:	82 0a 89 01 	l.ld r16,0xffff8901(r10)
 11c:	00 00 00 24 	l.j 1ac <__rom_size-0x1a1a0>
 120:	00 00 00 00 	l.j 120 <__rom_size-0x1a22c>
 124:	00 40 1c f4 	l.j 10074f4 <__stack+0xb874f8>
 128:	00 00 0f 08 	l.j 3d48 <__rom_size-0x16604>
 12c:	70 0e dc 06 	l.cust1 
 130:	9c 02 9a 03 	l.addi r0,r2,0xffff9a03
 134:	98 04 96 05 	l.lhs r0,0xffff9605(r4)
 138:	94 06 92 07 	l.lhz r0,0xffff9207(r6)
 13c:	90 08 8e 09 	l.lbs r0,0xffff8e09(r8)
 140:	82 0a 89 01 	l.ld r16,0xffff8901(r10)
 144:	00 00 00 14 	l.j 194 <__rom_size-0x1a1b8>
 148:	00 00 00 00 	l.j 148 <__rom_size-0x1a204>
 14c:	00 40 2b fc 	l.j 100b13c <__stack+0xb8b140>
 150:	00 00 00 3c 	l.j 240 <__rom_size-0x1a10c>
 154:	4c 82 01 54 	l.maci r2,0x154
 158:	0e 04 00 00 	l.bnf f8100158 <__stack+0xf7c8015c>
 15c:	00 00 00 18 	l.j 1bc <__rom_size-0x1a190>
 160:	00 00 00 00 	l.j 160 <__rom_size-0x1a1ec>
 164:	00 40 2c 38 	l.j 100b244 <__stack+0xb8b248>
 168:	00 00 00 54 	l.j 2b8 <__rom_size-0x1a094>
 16c:	44 82 03 5c 	l.jr r0
 170:	0e 0c 8e 02 	l.bnf f8323978 <__stack+0xf7ea397c>
 174:	89 01 00 00 	l.lws r8,0x0(r1)
 178:	00 00 00 0c 	l.j 1a8 <__rom_size-0x1a1a4>
 17c:	00 00 00 00 	l.j 17c <__rom_size-0x1a1d0>
 180:	00 40 2c 8c 	l.j 100b3b0 <__stack+0xb8b3b4>
 184:	00 00 00 40 	l.j 284 <__rom_size-0x1a0c8>
 188:	00 00 00 24 	l.j 218 <__rom_size-0x1a134>
 18c:	00 00 00 00 	l.j 18c <__rom_size-0x1a1c0>
 190:	00 40 2c cc 	l.j 100b4c0 <__stack+0xb8b4c4>
 194:	00 00 01 54 	l.j 6e4 <__rom_size-0x19c68>
 198:	68 0e 24 9a 	.word 0x680e249a
 19c:	02 98 03 96 	l.j fa600ff4 <__stack+0xfa180ff8>
 1a0:	04 94 05 92 	l.jal 25017e8 <__stack+0x20817ec>
 1a4:	06 90 07 8e 	l.jal fa401fdc <__stack+0xf9f81fe0>
 1a8:	08 82 09 89 	.word 0x08820989
 1ac:	01 00 00 00 	l.j 40001ac <__stack+0x3b801b0>
 1b0:	00 00 00 0c 	l.j 1e0 <__rom_size-0x1a16c>
 1b4:	00 00 00 00 	l.j 1b4 <__rom_size-0x1a198>
 1b8:	00 40 2e 20 	l.j 100ba38 <__stack+0xb8ba3c>
 1bc:	00 00 00 20 	l.j 23c <__rom_size-0x1a110>
 1c0:	00 00 00 14 	l.j 210 <__rom_size-0x1a13c>
 1c4:	00 00 00 00 	l.j 1c4 <__rom_size-0x1a188>
 1c8:	00 40 2e 40 	l.j 100bac8 <__stack+0xb8bacc>
 1cc:	00 00 00 68 	l.j 36c <__rom_size-0x19fe0>
 1d0:	50 82 01 54 	.word 0x50820154
 1d4:	0e 04 00 00 	l.bnf f81001d4 <__stack+0xf7c801d8>
 1d8:	00 00 00 14 	l.j 228 <__rom_size-0x1a124>
 1dc:	00 00 00 00 	l.j 1dc <__rom_size-0x1a170>
 1e0:	00 40 2e a8 	l.j 100bc80 <__stack+0xb8bc84>
 1e4:	00 00 00 d8 	l.j 544 <__rom_size-0x19e08>
 1e8:	50 82 01 58 	.word 0x50820158
 1ec:	0e 04 00 00 	l.bnf f81001ec <__stack+0xf7c801f0>
 1f0:	00 00 00 14 	l.j 240 <__rom_size-0x1a10c>
 1f4:	00 00 00 00 	l.j 1f4 <__rom_size-0x1a158>
 1f8:	00 40 2f 80 	l.j 100bff8 <__stack+0xb8bffc>
 1fc:	00 00 00 68 	l.j 39c <__rom_size-0x19fb0>
 200:	50 82 01 58 	.word 0x50820158
 204:	0e 04 00 00 	l.bnf f8100204 <__stack+0xf7c80208>
 208:	00 00 00 1c 	l.j 278 <__rom_size-0x1a0d4>
 20c:	00 00 00 00 	l.j 20c <__rom_size-0x1a140>
 210:	00 40 2f e8 	l.j 100c1b0 <__stack+0xb8c1b4>
 214:	00 00 00 b0 	l.j 4d4 <__rom_size-0x19e78>
 218:	58 90 04 89 	.word 0x58900489
 21c:	01 94 02 92 	l.j 6500c64 <__stack+0x6080c68>
 220:	03 8e 05 82 	l.j fe381828 <__stack+0xfdf0182c>
 224:	06 54 0e 18 	l.jal f9503a84 <__stack+0xf9083a88>
 228:	00 00 00 14 	l.j 278 <__rom_size-0x1a0d4>
 22c:	00 00 00 00 	l.j 22c <__rom_size-0x1a120>
 230:	00 40 30 98 	l.j 100c490 <__stack+0xb8c494>
 234:	00 00 00 a4 	l.j 4c4 <__rom_size-0x19e88>
 238:	60 0e 04 89 	.word 0x600e0489
 23c:	01 00 00 00 	l.j 400023c <__stack+0x3b80240>
 240:	00 00 00 1c 	l.j 2b0 <__rom_size-0x1a09c>
 244:	00 00 00 00 	l.j 244 <__rom_size-0x1a108>
 248:	00 40 31 3c 	l.j 100c738 <__stack+0xb8c73c>
 24c:	00 00 00 6c 	l.j 3fc <__rom_size-0x19f50>
 250:	44 82 04 50 	l.jr r0
 254:	8e 03 90 02 	l.lbz r16,0xffff9002(r3)
 258:	89 01 5c 0e 	l.lws r8,0x5c0e(r1)
 25c:	10 00 00 00 	l.bf 25c <__rom_size-0x1a0f0>
 260:	00 00 00 18 	l.j 2c0 <__rom_size-0x1a08c>
 264:	00 00 00 00 	l.j 264 <__rom_size-0x1a0e8>
 268:	00 40 31 a8 	l.j 100c908 <__stack+0xb8c90c>
 26c:	00 00 00 78 	l.j 44c <__rom_size-0x19f00>
 270:	4c 8e 02 89 	l.maci r14,0x289
 274:	01 82 03 50 	l.j 6080fb4 <__stack+0x5c00fb8>
 278:	0e 0c 00 00 	l.bnf f8300278 <__stack+0xf7e8027c>
 27c:	00 00 00 0c 	l.j 2ac <__rom_size-0x1a0a0>
 280:	00 00 00 00 	l.j 280 <__rom_size-0x1a0cc>
 284:	00 40 32 20 	l.j 100cb04 <__stack+0xb8cb08>
 288:	00 00 00 68 	l.j 428 <__rom_size-0x19f24>
 28c:	00 00 00 20 	l.j 30c <__rom_size-0x1a040>
 290:	00 00 00 00 	l.j 290 <__rom_size-0x1a0bc>
 294:	00 40 32 88 	l.j 100ccb4 <__stack+0xb8ccb8>
 298:	00 00 01 2c 	l.j 748 <__rom_size-0x19c04>
 29c:	44 90 03 48 	l.jr r0
 2a0:	82 05 4c 92 	l.ld r16,0x4c92(r5)
 2a4:	02 58 8e 04 	l.j f9623ab4 <__stack+0xf91a3ab8>
 2a8:	89 01 54 0e 	l.lws r8,0x540e(r1)
 2ac:	14 00 00 00 	.word 0x14000000
 2b0:	00 00 00 0c 	l.j 2e0 <__rom_size-0x1a06c>
 2b4:	00 00 00 00 	l.j 2b4 <__rom_size-0x1a098>
 2b8:	00 40 33 b4 	l.j 100d188 <__stack+0xb8d18c>
 2bc:	00 00 00 3c 	l.j 3ac <__rom_size-0x19fa0>
 2c0:	00 00 00 14 	l.j 310 <__rom_size-0x1a03c>
 2c4:	00 00 00 00 	l.j 2c4 <__rom_size-0x1a088>
 2c8:	00 40 33 f0 	l.j 100d288 <__stack+0xb8d28c>
 2cc:	00 00 02 0c 	l.j afc <__rom_size-0x19850>
 2d0:	50 0e 0c 82 	.word 0x500e0c82
 2d4:	01 00 00 00 	l.j 40002d4 <__stack+0x3b802d8>
 2d8:	00 00 00 24 	l.j 368 <__rom_size-0x19fe4>
 2dc:	00 00 00 00 	l.j 2dc <__rom_size-0x1a070>
 2e0:	00 40 35 fc 	l.j 100dad0 <__stack+0xb8dad4>
 2e4:	00 00 07 f4 	l.j 22b4 <__rom_size-0x18098>
 2e8:	74 0e 2c 9e 	l.cust2 
 2ec:	01 9c 02 9a 	l.j 6700d54 <__stack+0x6280d58>
 2f0:	03 98 04 96 	l.j fe601548 <__stack+0xfe18154c>
 2f4:	05 94 06 92 	l.jal 6501d3c <__stack+0x6081d40>
 2f8:	07 90 08 8e 	l.jal fe402530 <__stack+0xfdf82534>
 2fc:	09 82 0a 00 	.word 0x09820a00
 300:	00 00 00 14 	l.j 350 <__rom_size-0x19ffc>
 304:	00 00 00 00 	l.j 304 <__rom_size-0x1a048>
 308:	00 40 3d f0 	l.j 100fac8 <__stack+0xb8facc>
 30c:	00 00 00 18 	l.j 36c <__rom_size-0x19fe0>
 310:	48 0e 04 89 	l.jalr r0
 314:	01 00 00 00 	l.j 4000314 <__stack+0x3b80318>
 318:	00 00 00 0c 	l.j 348 <__rom_size-0x1a004>
 31c:	00 00 00 00 	l.j 31c <__rom_size-0x1a030>
 320:	00 40 3e 08 	l.j 100fb40 <__stack+0xb8fb44>
 324:	00 00 00 40 	l.j 424 <__rom_size-0x19f28>
 328:	00 00 00 14 	l.j 378 <__rom_size-0x19fd4>
 32c:	00 00 00 00 	l.j 32c <__rom_size-0x1a020>
 330:	00 40 3e 48 	l.j 100fc50 <__stack+0xb8fc54>
 334:	00 00 01 2c 	l.j 7e4 <__rom_size-0x19b68>
 338:	44 82 02 58 	l.jr r0
 33c:	0e 08 89 01 	l.bnf f8222740 <__stack+0xf7da2744>
 340:	00 00 00 14 	l.j 390 <__rom_size-0x19fbc>
 344:	00 00 00 00 	l.j 344 <__rom_size-0x1a008>
 348:	00 40 3f 74 	l.j 1010118 <__stack+0xb9011c>
 34c:	00 00 00 48 	l.j 46c <__rom_size-0x19ee0>
 350:	50 82 01 58 	.word 0x50820158
 354:	0e 04 00 00 	l.bnf f8100354 <__stack+0xf7c80358>
 358:	00 00 00 0c 	l.j 388 <__rom_size-0x19fc4>
 35c:	00 00 00 00 	l.j 35c <__rom_size-0x19ff0>
 360:	00 40 3f bc 	l.j 1010250 <__stack+0xb90254>
 364:	00 00 00 54 	l.j 4b4 <__rom_size-0x19e98>
 368:	00 00 00 0c 	l.j 398 <__rom_size-0x19fb4>
 36c:	00 00 00 00 	l.j 36c <__rom_size-0x19fe0>
 370:	00 40 40 10 	l.j 10103b0 <__stack+0xb903b4>
 374:	00 00 00 38 	l.j 454 <__rom_size-0x19ef8>
 378:	00 00 00 0c 	l.j 3a8 <__rom_size-0x19fa4>
 37c:	00 00 00 00 	l.j 37c <__rom_size-0x19fd0>
 380:	00 40 40 48 	l.j 10104a0 <__stack+0xb904a4>
 384:	00 00 00 3c 	l.j 474 <__rom_size-0x19ed8>
 388:	00 00 00 0c 	l.j 3b8 <__rom_size-0x19f94>
 38c:	00 00 00 00 	l.j 38c <__rom_size-0x19fc0>
 390:	00 40 40 84 	l.j 10105a0 <__stack+0xb905a4>
 394:	00 00 00 38 	l.j 474 <__rom_size-0x19ed8>
 398:	00 00 00 0c 	l.j 3c8 <__rom_size-0x19f84>
 39c:	00 00 00 00 	l.j 39c <__rom_size-0x19fb0>
 3a0:	00 40 40 bc 	l.j 1010690 <__stack+0xb90694>
 3a4:	00 00 00 44 	l.j 4b4 <__rom_size-0x19e98>
 3a8:	00 00 00 0c 	l.j 3d8 <__rom_size-0x19f74>
 3ac:	00 00 00 00 	l.j 3ac <__rom_size-0x19fa0>
 3b0:	00 40 41 00 	l.j 10107b0 <__stack+0xb907b4>
 3b4:	00 00 00 70 	l.j 574 <__rom_size-0x19dd8>
 3b8:	00 00 00 18 	l.j 418 <__rom_size-0x19f34>
 3bc:	00 00 00 00 	l.j 3bc <__rom_size-0x19f90>
 3c0:	00 40 41 70 	l.j 1010980 <__stack+0xb90984>
 3c4:	00 00 01 4c 	l.j 8f4 <__rom_size-0x19a58>
 3c8:	44 82 04 68 	l.jr r0
 3cc:	0e 10 90 02 	l.bnf f84243d4 <__stack+0xf7fa43d8>
 3d0:	89 01 8e 03 	l.lws r8,0xffff8e03(r1)
 3d4:	00 00 00 14 	l.j 424 <__rom_size-0x19f28>
 3d8:	00 00 00 00 	l.j 3d8 <__rom_size-0x19f74>
 3dc:	00 40 42 bc 	l.j 1010ecc <__stack+0xb90ed0>
 3e0:	00 00 00 40 	l.j 4e0 <__rom_size-0x19e6c>
 3e4:	50 0e 08 82 	.word 0x500e0882
 3e8:	02 89 01 00 	l.j fa2407e8 <__stack+0xf9dc07ec>
 3ec:	00 00 00 0c 	l.j 41c <__rom_size-0x19f30>
 3f0:	00 00 00 00 	l.j 3f0 <__rom_size-0x19f5c>
 3f4:	00 40 42 fc 	l.j 1010fe4 <__stack+0xb90fe8>
 3f8:	00 00 01 28 	l.j 898 <__rom_size-0x19ab4>
 3fc:	00 00 00 0c 	l.j 42c <__rom_size-0x19f20>
 400:	00 00 00 00 	l.j 400 <__rom_size-0x19f4c>
 404:	00 40 44 24 	l.j 1011494 <__stack+0xb91498>
 408:	00 00 00 60 	l.j 588 <__rom_size-0x19dc4>
 40c:	00 00 00 14 	l.j 45c <__rom_size-0x19ef0>
 410:	00 00 00 00 	l.j 410 <__rom_size-0x19f3c>
 414:	00 40 44 84 	l.j 1011624 <__stack+0xb91628>
 418:	00 00 00 28 	l.j 4b8 <__rom_size-0x19e94>
 41c:	48 0e 04 89 	l.jalr r0
 420:	01 00 00 00 	l.j 4000420 <__stack+0x3b80424>
 424:	00 00 00 1c 	l.j 494 <__rom_size-0x19eb8>
 428:	00 00 00 00 	l.j 428 <__rom_size-0x19f24>
 42c:	00 40 44 ac 	l.j 10116dc <__stack+0xb916e0>
 430:	00 00 01 94 	l.j a80 <__rom_size-0x198cc>
 434:	44 82 04 50 	l.jr r0
 438:	89 01 90 02 	l.lws r8,0xffff9002(r1)
 43c:	8e 03 50 0e 	l.lbz r16,0x500e(r3)
 440:	14 00 00 00 	.word 0x14000000
 444:	00 00 00 14 	l.j 494 <__rom_size-0x19eb8>
 448:	00 00 00 00 	l.j 448 <__rom_size-0x19f04>
 44c:	00 40 46 40 	l.j 1011d4c <__stack+0xb91d50>
 450:	00 00 00 54 	l.j 5a0 <__rom_size-0x19dac>
 454:	48 0e 08 89 	l.jalr r1
 458:	01 00 00 00 	l.j 4000458 <__stack+0x3b8045c>
 45c:	00 00 00 14 	l.j 4ac <__rom_size-0x19ea0>
 460:	00 00 00 00 	l.j 460 <__rom_size-0x19eec>
 464:	00 40 46 94 	l.j 1011eb4 <__stack+0xb91eb8>
 468:	00 00 00 68 	l.j 608 <__rom_size-0x19d44>
 46c:	50 0e 08 82 	.word 0x500e0882
 470:	02 89 01 00 	l.j fa240870 <__stack+0xf9dc0874>
 474:	00 00 00 1c 	l.j 4e4 <__rom_size-0x19e68>
 478:	00 00 00 00 	l.j 478 <__rom_size-0x19ed4>
 47c:	00 40 46 fc 	l.j 101206c <__stack+0xb92070>
 480:	00 00 01 d8 	l.j be0 <__rom_size-0x1976c>
 484:	44 82 05 60 	l.jr r0
 488:	0e 1c 90 03 	l.bnf f8724494 <__stack+0xf82a4498>
 48c:	8e 04 89 01 	l.lbz r16,0xffff8901(r4)
 490:	92 02 00 00 	l.lbs r16,0x0(r2)
 494:	00 00 00 1c 	l.j 504 <__rom_size-0x19e48>
 498:	00 00 00 00 	l.j 498 <__rom_size-0x19eb4>
 49c:	00 40 48 d4 	l.j 10127ec <__stack+0xb927f0>
 4a0:	00 00 00 88 	l.j 6c0 <__rom_size-0x19c8c>
 4a4:	44 8e 03 4c 	l.jr r0
 4a8:	82 04 50 90 	l.ld r16,0x5090(r4)
 4ac:	02 89 01 58 	l.j fa240a0c <__stack+0xf9dc0a10>
 4b0:	0e 10 00 00 	l.bnf f84004b0 <__stack+0xf7f804b4>
 4b4:	00 00 00 1c 	l.j 524 <__rom_size-0x19e28>
 4b8:	00 00 00 00 	l.j 4b8 <__rom_size-0x19e94>
 4bc:	00 40 49 5c 	l.j 1012a2c <__stack+0xb92a30>
 4c0:	00 00 03 20 	l.j 1140 <__rom_size-0x1920c>
 4c4:	44 8e 05 64 	l.jr r0
 4c8:	0e 20 94 02 	l.bnf f88254d0 <__stack+0xf83a54d4>
 4cc:	92 03 89 01 	l.lbs r16,0xffff8901(r3)
 4d0:	90 04 82 06 	l.lbs r0,0xffff8206(r4)
 4d4:	00 00 00 28 	l.j 574 <__rom_size-0x19dd8>
 4d8:	00 00 00 00 	l.j 4d8 <__rom_size-0x19e74>
 4dc:	00 40 4c 7c 	l.j 10136cc <__stack+0xb936d0>
 4e0:	00 00 01 04 	l.j 8f0 <__rom_size-0x19a5c>
 4e4:	4c 98 04 96 	l.maci r24,0x496
 4e8:	05 92 07 68 	l.jal 6482288 <__stack+0x600228c>
 4ec:	9c 02 94 06 	l.addi r0,r2,0xffff9406
 4f0:	90 08 89 01 	l.lbs r0,0xffff8901(r8)
 4f4:	9a 03 8e 09 	l.lhs r16,0xffff8e09(r3)
 4f8:	82 0a 48 0e 	l.ld r16,0x480e(r10)
 4fc:	28 00 00 00 	.word 0x28000000
 500:	00 00 00 20 	l.j 580 <__rom_size-0x19dcc>
 504:	00 00 00 00 	l.j 504 <__rom_size-0x19e48>
 508:	00 40 4d 80 	l.j 1013b08 <__stack+0xb93b0c>
 50c:	00 00 03 4c 	l.j 123c <__rom_size-0x19110>
 510:	5c 96 02 94 	.word 0x5c960294
 514:	03 90 05 8e 	l.j fe401b4c <__stack+0xfdf81b50>
 518:	06 89 01 92 	l.jal fa240b60 <__stack+0xf9dc0b64>
 51c:	04 82 07 48 	l.jal 208223c <__stack+0x1c02240>
 520:	0e 30 00 00 	l.bnf f8c00520 <__stack+0xf8780524>
 524:	00 00 00 1c 	l.j 594 <__rom_size-0x19db8>
 528:	00 00 00 00 	l.j 528 <__rom_size-0x19e24>
 52c:	00 40 50 cc 	l.j 101485c <__stack+0xb94860>
 530:	00 00 01 e8 	l.j cd0 <__rom_size-0x1967c>
 534:	44 82 05 60 	l.jr r0
 538:	0e 1c 92 02 	l.bnf f8724d40 <__stack+0xf82a4d44>
 53c:	90 03 89 01 	l.lbs r0,0xffff8901(r3)
 540:	8e 04 00 00 	l.lbz r16,0x0(r4)
 544:	00 00 00 1c 	l.j 5b4 <__rom_size-0x19d98>
 548:	00 00 00 00 	l.j 548 <__rom_size-0x19e04>
 54c:	00 40 52 b4 	l.j 101501c <__stack+0xb95020>
 550:	00 00 00 88 	l.j 770 <__rom_size-0x19bdc>
 554:	44 8e 03 4c 	l.jr r0
 558:	82 04 50 90 	l.ld r16,0x5090(r4)
 55c:	02 89 01 58 	l.j fa240abc <__stack+0xf9dc0ac0>
 560:	0e 10 00 00 	l.bnf f8400560 <__stack+0xf7f80564>
 564:	00 00 00 24 	l.j 5f4 <__rom_size-0x19d58>
 568:	00 00 00 00 	l.j 568 <__rom_size-0x19de4>
 56c:	00 40 53 3c 	l.j 101525c <__stack+0xb95260>
 570:	00 00 02 0c 	l.j da0 <__rom_size-0x195ac>
 574:	68 9c 02 9a 	.word 0x689c029a
 578:	03 98 04 96 	l.j fe6017d0 <__stack+0xfe1817d4>
 57c:	05 94 06 92 	l.jal 6501fc4 <__stack+0x6081fc8>
 580:	07 90 08 89 	l.jal fe4027a4 <__stack+0xfdf827a8>
 584:	01 8e 09 82 	l.j 6382b8c <__stack+0x5f02b90>
 588:	0a 48 0e 28 	.word 0x0a480e28
 58c:	00 00 00 1c 	l.j 5fc <__rom_size-0x19d50>
 590:	00 00 00 00 	l.j 590 <__rom_size-0x19dbc>
 594:	00 40 55 48 	l.j 1015ab4 <__stack+0xb95ab8>
 598:	00 00 01 5c 	l.j b08 <__rom_size-0x19844>
 59c:	58 92 02 90 	.word 0x58920290
 5a0:	03 8e 04 89 	l.j fe3817c4 <__stack+0xfdf017c8>
 5a4:	01 82 05 5c 	l.j 6081b14 <__stack+0x5c01b18>
 5a8:	0e 14 00 00 	l.bnf f85005a8 <__stack+0xf80805ac>
 5ac:	00 00 00 20 	l.j 62c <__rom_size-0x19d20>
 5b0:	00 00 00 00 	l.j 5b0 <__rom_size-0x19d9c>
 5b4:	00 40 56 a4 	l.j 1016044 <__stack+0xb96048>
 5b8:	00 00 01 64 	l.j b48 <__rom_size-0x19804>
 5bc:	5c 96 02 94 	.word 0x5c960294
 5c0:	03 90 05 89 	l.j fe401be4 <__stack+0xfdf81be8>
 5c4:	01 92 04 8e 	l.j 64817fc <__stack+0x6001800>
 5c8:	06 82 07 4c 	l.jal fa0822f8 <__stack+0xf9c022fc>
 5cc:	0e 1c 00 00 	l.bnf f87005cc <__stack+0xf82805d0>
 5d0:	00 00 00 18 	l.j 630 <__rom_size-0x19d1c>
 5d4:	00 00 00 00 	l.j 5d4 <__rom_size-0x19d78>
 5d8:	00 40 58 08 	l.j 10165f8 <__stack+0xb965fc>
 5dc:	00 00 01 14 	l.j a2c <__rom_size-0x19920>
 5e0:	44 82 04 5c 	l.jr r0
 5e4:	0e 10 90 02 	l.bnf f84245ec <__stack+0xf7fa45f0>
 5e8:	8e 03 89 01 	l.lbz r16,0xffff8901(r3)
 5ec:	00 00 00 1c 	l.j 65c <__rom_size-0x19cf0>
 5f0:	00 00 00 00 	l.j 5f0 <__rom_size-0x19d5c>
 5f4:	00 40 59 1c 	l.j 1016a64 <__stack+0xb96a68>
 5f8:	00 00 04 bc 	l.j 18e8 <__rom_size-0x18a64>
 5fc:	44 82 05 6c 	l.jr r0
 600:	0e 1c 92 02 	l.bnf f8724e08 <__stack+0xf82a4e0c>
 604:	90 03 8e 04 	l.lbs r0,0xffff8e04(r3)
 608:	89 01 00 00 	l.lws r8,0x0(r1)
 60c:	00 00 00 20 	l.j 68c <__rom_size-0x19cc0>
 610:	00 00 00 00 	l.j 610 <__rom_size-0x19d3c>
 614:	00 40 5d d8 	l.j 1017d74 <__stack+0xb97d78>
 618:	00 00 03 14 	l.j 1268 <__rom_size-0x190e4>
 61c:	44 82 07 48 	l.jr r0
 620:	90 05 6c 96 	l.lbs r0,0x6c96(r5)
 624:	02 94 03 92 	l.j fa50146c <__stack+0xfa081470>
 628:	04 8e 06 89 	l.jal 238204c <__stack+0x1f02050>
 62c:	01 4c 0e 34 	l.j 5303efc <__stack+0x4e83f00>
 630:	00 00 00 14 	l.j 680 <__rom_size-0x19ccc>
 634:	00 00 00 00 	l.j 634 <__rom_size-0x19d18>
 638:	00 40 60 ec 	l.j 10189e8 <__stack+0xb989ec>
 63c:	00 00 00 28 	l.j 6dc <__rom_size-0x19c70>
 640:	44 0e 04 89 	l.jr r0
 644:	01 00 00 00 	l.j 4000644 <__stack+0x3b80648>
 648:	00 00 00 14 	l.j 698 <__rom_size-0x19cb4>
 64c:	00 00 00 00 	l.j 64c <__rom_size-0x19d00>
 650:	00 40 61 14 	l.j 1018aa0 <__stack+0xb98aa4>
 654:	00 00 00 3c 	l.j 744 <__rom_size-0x19c08>
 658:	4c 0e 4c 82 	l.maci r14,0x4c82
 65c:	02 89 01 00 	l.j fa240a5c <__stack+0xf9dc0a60>
 660:	00 00 00 28 	l.j 700 <__rom_size-0x19c4c>
 664:	00 00 00 00 	l.j 664 <__rom_size-0x19ce8>
 668:	00 40 61 50 	l.j 1018ba8 <__stack+0xb98bac>
 66c:	00 00 0c 18 	l.j 36cc <__rom_size-0x16c80>
 670:	6c 9c 03 82 	.word 0x6c9c0382
 674:	0b 89 01 9e 	.word 0x0b89019e
 678:	02 9a 04 98 	l.j fa6818d8 <__stack+0xfa2018dc>
 67c:	05 96 06 94 	l.jal 65820cc <__stack+0x61020d0>
 680:	07 92 08 90 	l.jal fe4828c0 <__stack+0xfe0028c4>
 684:	09 8e 0a 6c 	.word 0x098e0a6c
 688:	0e 3c 00 00 	l.bnf f8f00688 <__stack+0xf8a8068c>
 68c:	00 00 00 14 	l.j 6dc <__rom_size-0x19c70>
 690:	00 00 00 00 	l.j 690 <__rom_size-0x19cbc>
 694:	00 40 6d 68 	l.j 101bc34 <__stack+0xb9bc38>
 698:	00 00 01 34 	l.j b68 <__rom_size-0x197e4>
 69c:	50 0e 04 82 	.word 0x500e0482
 6a0:	01 00 00 00 	l.j 40006a0 <__stack+0x3b806a4>
 6a4:	00 00 00 20 	l.j 724 <__rom_size-0x19c28>
 6a8:	00 00 00 00 	l.j 6a8 <__rom_size-0x19ca4>
 6ac:	00 40 6e 9c 	l.j 101c11c <__stack+0xb9c120>
 6b0:	00 00 01 ec 	l.j e60 <__rom_size-0x194ec>
 6b4:	68 0e 24 98 	.word 0x680e2498
 6b8:	02 96 03 94 	l.j fa581508 <__stack+0xfa10150c>
 6bc:	04 92 05 90 	l.jal 2481cfc <__stack+0x2001d00>
 6c0:	06 89 01 8e 	l.jal fa240cf8 <__stack+0xf9dc0cfc>
 6c4:	07 82 08 00 	l.jal fe0826c4 <__stack+0xfdc026c8>
 6c8:	00 00 00 28 	l.j 768 <__rom_size-0x19be4>
 6cc:	00 00 00 00 	l.j 6cc <__rom_size-0x19c80>
 6d0:	00 40 70 88 	l.j 101c8f0 <__stack+0xb9c8f4>
 6d4:	00 00 05 48 	l.j 1bf4 <__rom_size-0x18758>
 6d8:	6c 9e 02 9c 	.word 0x6c9e029c
 6dc:	03 9a 04 98 	l.j fe68193c <__stack+0xfe201940>
 6e0:	05 96 06 92 	l.jal 6582128 <__stack+0x610212c>
 6e4:	08 8e 0a 82 	.word 0x088e0a82
 6e8:	0b 89 01 94 	.word 0x0b890194
 6ec:	07 90 09 48 	l.jal fe402c0c <__stack+0xfdf82c10>
 6f0:	0e 34 00 00 	l.bnf f8d006f0 <__stack+0xf88806f4>
 6f4:	00 00 00 28 	l.j 794 <__rom_size-0x19bb8>
 6f8:	00 00 00 00 	l.j 6f8 <__rom_size-0x19c54>
 6fc:	00 40 75 d0 	l.j 101de3c <__stack+0xb9de40>
 700:	00 00 1c 44 	l.j 7810 <__rom_size-0x12b3c>
 704:	44 82 0b 6c 	l.jr r1
 708:	9c 03 9a 04 	l.addi r0,r3,0xffff9a04
 70c:	98 05 96 06 	l.lhs r0,0xffff9606(r5)
 710:	94 07 92 08 	l.lhz r0,0xffff9208(r7)
 714:	90 09 89 01 	l.lbs r0,0xffff8901(r9)
 718:	9e 02 8e 0a 	l.addi r16,r2,0xffff8e0a
 71c:	4c 0e 64 00 	l.maci r14,0x6400
 720:	00 00 00 1c 	l.j 790 <__rom_size-0x19bbc>
 724:	00 00 00 00 	l.j 724 <__rom_size-0x19c28>
 728:	00 40 92 14 	l.j 1024f78 <__stack+0xba4f7c>
 72c:	00 00 00 bc 	l.j a1c <__rom_size-0x19930>
 730:	44 82 05 60 	l.jr r0
 734:	0e 14 89 01 	l.bnf f8522b38 <__stack+0xf80a2b3c>
 738:	92 02 90 03 	l.lbs r16,0xffff9003(r2)
 73c:	8e 04 00 00 	l.lbz r16,0x0(r4)
 740:	00 00 00 28 	l.j 7e0 <__rom_size-0x19b6c>
 744:	00 00 00 00 	l.j 744 <__rom_size-0x19c08>
 748:	00 40 92 d0 	l.j 1025288 <__stack+0xba528c>
 74c:	00 00 02 d4 	l.j 129c <__rom_size-0x190b0>
 750:	44 82 0b 74 	l.jr r1
 754:	0e 34 9e 02 	l.bnf f8d27f5c <__stack+0xf88a7f60>
 758:	9c 03 9a 04 	l.addi r0,r3,0xffff9a04
 75c:	98 05 94 07 	l.lhs r0,0xffff9407(r5)
 760:	92 08 90 09 	l.lbs r16,0xffff9009(r8)
 764:	89 01 96 06 	l.lws r8,0xffff9606(r1)
 768:	8e 0a 00 00 	l.lbz r16,0x0(r10)
 76c:	00 00 00 14 	l.j 7bc <__rom_size-0x19b90>
 770:	00 00 00 00 	l.j 770 <__rom_size-0x19bdc>
 774:	00 40 95 a4 	l.j 1025e04 <__stack+0xba5e08>
 778:	00 00 00 44 	l.j 888 <__rom_size-0x19ac4>
 77c:	50 0e 08 89 	.word 0x500e0889
 780:	01 82 02 00 	l.j 6080f80 <__stack+0x5c00f84>
 784:	00 00 00 1c 	l.j 7f4 <__rom_size-0x19b58>
 788:	00 00 00 00 	l.j 788 <__rom_size-0x19bc4>
 78c:	00 40 95 e8 	l.j 1025f2c <__stack+0xba5f30>
 790:	00 00 07 90 	l.j 25d0 <__rom_size-0x17d7c>
 794:	44 82 05 68 	l.jr r0
 798:	0e 18 92 02 	l.bnf f8624fa0 <__stack+0xf81a4fa4>
 79c:	90 03 8e 04 	l.lbs r0,0xffff8e04(r3)
 7a0:	89 01 00 00 	l.lws r8,0x0(r1)
 7a4:	00 00 00 28 	l.j 844 <__rom_size-0x19b08>
 7a8:	00 00 00 00 	l.j 7a8 <__rom_size-0x19ba4>
 7ac:	00 40 9d 78 	l.j 1027d8c <__stack+0xba7d90>
 7b0:	00 00 08 38 	l.j 2890 <__rom_size-0x17abc>
 7b4:	70 0e 3c 9e 	l.cust1 
 7b8:	02 9c 03 9a 	l.j fa701620 <__stack+0xfa281624>
 7bc:	04 98 05 96 	l.jal 2601e14 <__stack+0x2181e18>
 7c0:	06 94 07 92 	l.jal fa502608 <__stack+0xfa08260c>
 7c4:	08 90 09 8e 	.word 0x0890098e
 7c8:	0a 82 0b 89 	.word 0x0a820b89
 7cc:	01 00 00 00 	l.j 40007cc <__stack+0x3b807d0>
 7d0:	00 00 00 18 	l.j 830 <__rom_size-0x19b1c>
 7d4:	00 00 00 00 	l.j 7d4 <__rom_size-0x19b78>
 7d8:	00 40 a5 b0 	l.j 1029e98 <__stack+0xba9e9c>
 7dc:	00 00 02 f8 	l.j 13bc <__rom_size-0x18f90>
 7e0:	50 0e 0c 8e 	.word 0x500e0c8e
 7e4:	02 82 03 89 	l.j fa081608 <__stack+0xf9c0160c>
 7e8:	01 00 00 00 	l.j 40007e8 <__stack+0x3b807ec>
 7ec:	00 00 00 14 	l.j 83c <__rom_size-0x19b10>
 7f0:	00 00 00 00 	l.j 7f0 <__rom_size-0x19b5c>
 7f4:	00 40 a8 a8 	l.j 102aa94 <__stack+0xbaaa98>
 7f8:	00 00 00 8c 	l.j a28 <__rom_size-0x19924>
 7fc:	4c 0e 0c 82 	l.maci r14,0xc82
 800:	02 89 01 00 	l.j fa240c00 <__stack+0xf9dc0c04>
 804:	00 00 00 14 	l.j 854 <__rom_size-0x19af8>
 808:	00 00 00 00 	l.j 808 <__rom_size-0x19b44>
 80c:	00 40 a9 34 	l.j 102acdc <__stack+0xbaace0>
 810:	00 00 00 64 	l.j 9a0 <__rom_size-0x199ac>
 814:	50 82 01 60 	.word 0x50820160
 818:	0e 04 00 00 	l.bnf f8100818 <__stack+0xf7c8081c>
 81c:	00 00 00 28 	l.j 8bc <__rom_size-0x19a90>
 820:	00 00 00 00 	l.j 820 <__rom_size-0x19b2c>
 824:	00 40 a9 98 	l.j 102ae84 <__stack+0xbaae88>
 828:	00 00 18 6c 	l.j 69d8 <__rom_size-0x13974>
 82c:	74 0e bc 04 	l.cust2 
 830:	9e 02 9c 03 	l.addi r16,r2,0xffff9c03
 834:	9a 04 98 05 	l.lhs r16,0xffff9805(r4)
 838:	96 06 94 07 	l.lhz r16,0xffff9407(r6)
 83c:	92 08 90 09 	l.lbs r16,0xffff9009(r8)
 840:	8e 0a 82 0b 	l.lbz r16,0xffff820b(r10)
 844:	89 01 00 00 	l.lws r8,0x0(r1)
 848:	00 00 00 18 	l.j 8a8 <__rom_size-0x19aa4>
 84c:	00 00 00 00 	l.j 84c <__rom_size-0x19b00>
 850:	00 40 c2 04 	l.j 1031060 <__stack+0xbb1064>
 854:	00 00 01 8c 	l.j e84 <__rom_size-0x194c8>
 858:	50 8e 02 82 	.word 0x508e0282
 85c:	03 89 01 5c 	l.j fe240dcc <__stack+0xfddc0dd0>
 860:	0e 0c 00 00 	l.bnf f8300860 <__stack+0xf7e80864>
 864:	00 00 00 14 	l.j 8b4 <__rom_size-0x19a98>
 868:	00 00 00 00 	l.j 868 <__rom_size-0x19ae4>
 86c:	00 40 c3 90 	l.j 10316ac <__stack+0xbb16b0>
 870:	00 00 00 8c 	l.j aa0 <__rom_size-0x198ac>
 874:	50 0e 04 82 	.word 0x500e0482
 878:	01 00 00 00 	l.j 4000878 <__stack+0x3b8087c>
 87c:	00 00 00 14 	l.j 8cc <__rom_size-0x19a80>
 880:	00 00 00 00 	l.j 880 <__rom_size-0x19acc>
 884:	00 40 c4 1c 	l.j 10318f4 <__stack+0xbb18f8>
 888:	00 00 00 8c 	l.j ab8 <__rom_size-0x19894>
 88c:	44 82 02 50 	l.jr r0
 890:	0e 08 89 01 	l.bnf f8222c94 <__stack+0xf7da2c98>
 894:	00 00 00 14 	l.j 8e4 <__rom_size-0x19a68>
 898:	00 00 00 00 	l.j 898 <__rom_size-0x19ab4>
 89c:	00 40 c4 a8 	l.j 1031b3c <__stack+0xbb1b40>
 8a0:	00 00 00 40 	l.j 9a0 <__rom_size-0x199ac>
 8a4:	48 89 01 82 	l.jalr r0
 8a8:	02 48 0e 08 	l.j f92040c8 <__stack+0xf8d840cc>
 8ac:	00 00 00 14 	l.j 8fc <__rom_size-0x19a50>
 8b0:	00 00 00 00 	l.j 8b0 <__rom_size-0x19a9c>
 8b4:	00 40 c4 e8 	l.j 1031c54 <__stack+0xbb1c58>
 8b8:	00 00 00 40 	l.j 9b8 <__rom_size-0x19994>
 8bc:	48 82 02 58 	l.jalr r0
 8c0:	0e 08 89 01 	l.bnf f8222cc4 <__stack+0xf7da2cc8>
 8c4:	00 00 00 18 	l.j 924 <__rom_size-0x19a28>
 8c8:	00 00 00 00 	l.j 8c8 <__rom_size-0x19a84>
 8cc:	00 40 c5 28 	l.j 1031d6c <__stack+0xbb1d70>
 8d0:	00 00 09 1c 	l.j 2d40 <__rom_size-0x1760c>
 8d4:	44 82 04 54 	l.jr r0
 8d8:	0e 24 90 02 	l.bnf f89248e0 <__stack+0xf84a48e4>
 8dc:	8e 03 89 01 	l.lbz r16,0xffff8901(r3)
 8e0:	00 00 00 14 	l.j 930 <__rom_size-0x19a1c>
 8e4:	00 00 00 00 	l.j 8e4 <__rom_size-0x19a68>
 8e8:	00 40 ce 44 	l.j 10341f8 <__stack+0xbb41fc>
 8ec:	00 00 00 40 	l.j 9ec <__rom_size-0x19960>
 8f0:	54 0e 04 89 	.word 0x540e0489
 8f4:	01 00 00 00 	l.j 40008f4 <__stack+0x3b808f8>
 8f8:	00 00 00 14 	l.j 948 <__rom_size-0x19a04>
 8fc:	00 00 00 00 	l.j 8fc <__rom_size-0x19a50>
 900:	00 40 ce 84 	l.j 1034310 <__stack+0xbb4314>
 904:	00 00 00 6c 	l.j ab4 <__rom_size-0x19898>
 908:	50 0e 04 82 	.word 0x500e0482
 90c:	01 00 00 00 	l.j 400090c <__stack+0x3b80910>
 910:	00 00 00 14 	l.j 960 <__rom_size-0x199ec>
 914:	00 00 00 00 	l.j 914 <__rom_size-0x19a38>
 918:	00 40 ce f0 	l.j 10344d8 <__stack+0xbb44dc>
 91c:	00 00 02 1c 	l.j 118c <__rom_size-0x191c0>
 920:	50 82 01 58 	.word 0x50820158
 924:	0e 04 00 00 	l.bnf f8100924 <__stack+0xf7c80928>
 928:	00 00 00 14 	l.j 978 <__rom_size-0x199d4>
 92c:	00 00 00 00 	l.j 92c <__rom_size-0x19a20>
 930:	00 40 d1 0c 	l.j 1034d60 <__stack+0xbb4d64>
 934:	00 00 00 30 	l.j 9f4 <__rom_size-0x19958>
 938:	54 0e 04 89 	.word 0x540e0489
 93c:	01 00 00 00 	l.j 400093c <__stack+0x3b80940>
 940:	00 00 00 20 	l.j 9c0 <__rom_size-0x1998c>
 944:	00 00 00 00 	l.j 944 <__rom_size-0x19a08>
 948:	00 40 d1 3c 	l.j 1034e38 <__stack+0xbb4e3c>
 94c:	00 00 13 28 	l.j 55ec <__rom_size-0x14d60>
 950:	44 82 07 6c 	l.jr r0
 954:	0e 28 96 02 	l.bnf f8a2615c <__stack+0xf85a6160>
 958:	94 03 92 04 	l.lhz r0,0xffff9204(r3)
 95c:	90 05 8e 06 	l.lbs r0,0xffff8e06(r5)
 960:	89 01 00 00 	l.lws r8,0x0(r1)
 964:	00 00 00 28 	l.j a04 <__rom_size-0x19948>
 968:	00 00 00 00 	l.j 968 <__rom_size-0x199e4>
 96c:	00 40 e4 64 	l.j 1039afc <__stack+0xbb9b00>
 970:	00 00 05 8c 	l.j 1fa0 <__rom_size-0x183ac>
 974:	6c 9e 02 9c 	.word 0x6c9e029c
 978:	03 9a 04 98 	l.j fe681bd8 <__stack+0xfe201bdc>
 97c:	05 96 06 94 	l.jal 65823cc <__stack+0x61023d0>
 980:	07 92 08 90 	l.jal fe482bc0 <__stack+0xfe002bc4>
 984:	09 82 0b 89 	.word 0x09820b89
 988:	01 8e 0a 50 	l.j 63832c8 <__stack+0x5f032cc>
 98c:	0e 30 00 00 	l.bnf f8c0098c <__stack+0xf8780990>
 990:	00 00 00 18 	l.j 9f0 <__rom_size-0x1995c>
 994:	00 00 00 00 	l.j 994 <__rom_size-0x199b8>
 998:	00 40 e9 f0 	l.j 103b158 <__stack+0xbbb15c>
 99c:	00 00 01 44 	l.j eac <__rom_size-0x194a0>
 9a0:	5c 0e 0c 8e 	.word 0x5c0e0c8e
 9a4:	02 89 01 82 	l.j fa240fac <__stack+0xf9dc0fb0>
 9a8:	03 00 00 00 	l.j fc0009a8 <__stack+0xfbb809ac>
 9ac:	00 00 00 14 	l.j 9fc <__rom_size-0x19950>
 9b0:	00 00 00 00 	l.j 9b0 <__rom_size-0x1999c>
 9b4:	00 40 eb 34 	l.j 103b684 <__stack+0xbbb688>
 9b8:	00 00 03 10 	l.j 15f8 <__rom_size-0x18d54>
 9bc:	48 82 02 64 	l.jalr r0
 9c0:	0e 08 89 01 	l.bnf f8222dc4 <__stack+0xf7da2dc8>
 9c4:	00 00 00 20 	l.j a44 <__rom_size-0x19908>
 9c8:	00 00 00 00 	l.j 9c8 <__rom_size-0x19984>
 9cc:	00 40 ee 44 	l.j 103c2dc <__stack+0xbbc2e0>
 9d0:	00 00 04 04 	l.j 19e0 <__rom_size-0x1896c>
 9d4:	5c 92 04 89 	.word 0x5c920489
 9d8:	01 96 02 94 	l.j 6581428 <__stack+0x610142c>
 9dc:	03 90 05 8e 	l.j fe402014 <__stack+0xfdf82018>
 9e0:	06 82 07 48 	l.jal fa082700 <__stack+0xf9c02704>
 9e4:	0e 1c 00 00 	l.bnf f87009e4 <__stack+0xf82809e8>
 9e8:	00 00 00 28 	l.j a88 <__rom_size-0x198c4>
 9ec:	00 00 00 00 	l.j 9ec <__rom_size-0x19960>
 9f0:	00 40 f2 48 	l.j 103d310 <__stack+0xbbd314>
 9f4:	00 00 7a c0 	l.j 1f4f4 <__rom_size+0x51a8>
 9f8:	44 82 0b 02 	l.jr r1
 9fc:	40 0e 3c 9e 	.word 0x400e3c9e
 a00:	02 9c 03 9a 	l.j fa701868 <__stack+0xfa28186c>
 a04:	04 98 05 96 	l.jal 260205c <__stack+0x2182060>
 a08:	06 94 07 92 	l.jal fa502850 <__stack+0xfa082854>
 a0c:	08 90 09 8e 	.word 0x0890098e
 a10:	0a 89 01 00 	.word 0x0a890100

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	00 00 00 00 	l.j 0 <__rom_size-0x1a34c>
       4:	00 00 00 08 	l.j 24 <__rom_size-0x1a328>
       8:	00 01 55 00 	l.j 55408 <__rom_size+0x3b0bc>
	...
      18:	00 00 08 00 	l.j 2018 <__rom_size-0x18334>
      1c:	01 54 00 00 	l.j 550001c <__stack+0x5080020>
	...
      2c:	00 08 00 01 	l.j 200030 <__ram_length+0x180030>
      30:	53 00 00 00 	.word 0x53000000
	...
      3c:	30 00 00 00 	.word 0x30000000
      40:	44 00 01 53 	l.jr r0
      44:	00 00 00 44 	l.j 154 <__rom_size-0x1a1f8>
      48:	00 00 00 4c 	l.j 178 <__rom_size-0x1a1d4>
      4c:	00 04 74 c1 	l.j 11d350 <__ram_length+0x9d350>
      50:	00 9f 00 00 	l.j 27c0050 <__stack+0x2340054>
	...
      5c:	00 4c 00 00 	l.j 130005c <__stack+0xe80060>
      60:	00 50 00 01 	l.j 1400064 <__stack+0xf80068>
      64:	53 00 00 00 	.word 0x53000000
	...
      70:	4c 00 00 00 	l.maci r0,0x0
      74:	50 00 01 54 	.word 0x50000154
	...
      80:	00 00 00 74 	l.j 250 <__rom_size-0x1a0fc>
      84:	00 00 00 78 	l.j 264 <__rom_size-0x1a0e8>
      88:	00 01 53 00 	l.j 54c88 <__rom_size+0x3a93c>
      8c:	00 00 78 00 	l.j 1e08c <__rom_size+0x3d40>
      90:	00 00 94 00 	l.j 25090 <__rom_size+0xad44>
      94:	01 54 00 00 	l.j 5500094 <__stack+0x5080098>
	...
      a0:	00 94 00 00 	l.j 25000a0 <__stack+0x20800a4>
      a4:	00 a0 00 01 	l.j 28000a8 <__stack+0x23800ac>
      a8:	55 00 00 00 	.word 0x55000000
	...
      b4:	94 00 00 00 	l.lhz r0,0x0(r0)
      b8:	a0 00 01 53 	l.addic r0,r0,0x153
	...
      c4:	00 00 00 94 	l.j 314 <__rom_size-0x1a038>
      c8:	00 00 00 a0 	l.j 348 <__rom_size-0x1a004>
      cc:	00 01 54 00 	l.j 550cc <__rom_size+0x3ad80>
	...
      d8:	00 00 ac 00 	l.j 2b0d8 <__rom_size+0x10d8c>
      dc:	00 00 cc 00 	l.j 330dc <__rom_size+0x18d90>
      e0:	01 57 00 00 	l.j 55c00e0 <__stack+0x51400e4>
	...
      ec:	00 94 00 00 	l.j 25000ec <__stack+0x20800f0>
      f0:	00 a0 00 02 	l.j 28000f8 <__stack+0x23800fc>
      f4:	30 9f 00 00 	.word 0x309f0000
      f8:	00 a0 00 00 	l.j 28000f8 <__stack+0x23800fc>
      fc:	00 a8 00 01 	l.j 2a00100 <__stack+0x2580104>
     100:	5b 00 00 00 	.word 0x5b000000
     104:	b0 00 00 00 	l.muli r0,r0,0x0
     108:	d8 00 01 5b 	l.sb 0x15b(r0),r0
     10c:	00 00 00 d8 	l.j 46c <__rom_size-0x19ee0>
     110:	00 00 00 ec 	l.j 4c0 <__rom_size-0x19e8c>
     114:	00 01 5b 00 	l.j 56d14 <__rom_size+0x3c9c8>
	...
     120:	00 00 ec 00 	l.j 3b120 <__rom_size+0x20dd4>
     124:	00 00 f4 00 	l.j 3d124 <__rom_size+0x22dd8>
     128:	02 71 00 00 	l.j f9c40128 <__stack+0xf97c012c>
     12c:	00 00 f4 00 	l.j 3d12c <__rom_size+0x22de0>
     130:	00 01 58 00 	l.j 56130 <__rom_size+0x3bde4>
     134:	02 71 04 00 	l.j f9c41134 <__stack+0xf97c1138>
	...
     140:	00 00 ec 00 	l.j 3b140 <__rom_size+0x20df4>
     144:	00 00 fc 00 	l.j 3f144 <__rom_size+0x24df8>
     148:	01 54 00 00 	l.j 5500148 <__stack+0x508014c>
	...
     154:	00 ec 00 00 	l.j 3b00154 <__stack+0x3680158>
     158:	01 08 00 01 	l.j 420015c <__stack+0x3d80160>
     15c:	55 00 00 01 	.word 0x55000001
     160:	08 00 00 01 	.word 0x08000001
     164:	2c 00 01 55 	.word 0x2c000155
	...
     170:	00 00 00 ec 	l.j 520 <__rom_size-0x19e2c>
     174:	00 00 00 fc 	l.j 564 <__rom_size-0x19de8>
     178:	00 01 53 00 	l.j 54d78 <__rom_size+0x3aa2c>
     17c:	00 00 fc 00 	l.j 3f17c <__rom_size+0x24e30>
     180:	00 01 08 00 	l.j 42180 <__rom_size+0x27e34>
     184:	01 56 00 00 	l.j 5580184 <__stack+0x5100188>
     188:	01 08 00 00 	l.j 4200188 <__stack+0x3d8018c>
     18c:	01 2c 00 01 	l.j 4b00190 <__stack+0x4680194>
     190:	56 00 00 00 	.word 0x56000000
	...
     19c:	ec 00 00 01 	.word 0xec000001
     1a0:	08 00 01 54 	.word 0x08000154
     1a4:	00 00 01 08 	l.j 5c4 <__rom_size-0x19d88>
     1a8:	00 00 01 18 	l.j 608 <__rom_size-0x19d44>
     1ac:	00 03 74 01 	l.j dd1b0 <__ram_length+0x5d1b0>
     1b0:	9f 00 00 01 	l.addi r24,r0,0x1
     1b4:	18 00 00 01 	l.movhi r0,0x1
     1b8:	2c 00 01 54 	.word 0x2c000154
     1bc:	00 00 01 2c 	l.j 66c <__rom_size-0x19ce0>
     1c0:	00 00 01 48 	l.j 6e0 <__rom_size-0x19c6c>
     1c4:	00 03 74 01 	l.j dd1c8 <__ram_length+0x5d1c8>
     1c8:	9f 00 00 00 	l.addi r24,r0,0x0
     1cc:	00 00 00 00 	l.j 1cc <__rom_size-0x1a180>
     1d0:	00 00 00 01 	l.j 1d4 <__rom_size-0x1a178>
     1d4:	08 00 00 01 	.word 0x08000001
     1d8:	18 00 01 57 	l.movhi r0,0x157
     1dc:	00 00 01 2c 	l.j 68c <__rom_size-0x19cc0>
     1e0:	00 00 01 48 	l.j 700 <__rom_size-0x19c4c>
     1e4:	00 01 57 00 	l.j 55de4 <__rom_size+0x3ba98>
	...
     1f0:	00 01 2c 00 	l.j 4b1f0 <__rom_size+0x30ea4>
     1f4:	00 01 3c 00 	l.j 4f1f4 <__rom_size+0x34ea8>
     1f8:	01 56 00 00 	l.j 55801f8 <__stack+0x51001fc>
     1fc:	01 3c 00 00 	l.j 4f001fc <__stack+0x4a80200>
     200:	01 48 00 01 	l.j 5200204 <__stack+0x4d80208>
     204:	56 00 00 00 	.word 0x56000000
     208:	00 00 00 00 	l.j 208 <__rom_size-0x1a144>
     20c:	00 00 00 01 	l.j 210 <__rom_size-0x1a13c>
     210:	58 00 00 01 	.word 0x58000001
     214:	8c 00 02 71 	l.lbz r0,0x271(r0)
     218:	00 00 00 01 	l.j 21c <__rom_size-0x1a130>
     21c:	8c 00 00 0c 	l.lbz r0,0xc(r0)
     220:	a8 00 03 71 	l.ori r0,r0,0x371
     224:	e4 00 00 00 	l.sfeq r0,r0
	...
     230:	01 58 00 00 	l.j 5600230 <__stack+0x5180234>
     234:	01 b4 00 01 	l.j 6d00238 <__stack+0x688023c>
     238:	53 00 00 01 	.word 0x53000001
     23c:	b4 00 00 0c 	l.mfspr r0,r0,0xc
     240:	a8 00 02 91 	l.ori r0,r0,0x291
     244:	48 00 00 00 	l.jalr r0
     248:	00 00 00 00 	l.j 248 <__rom_size-0x1a104>
     24c:	00 00 00 01 	l.j 250 <__rom_size-0x1a0fc>
     250:	58 00 00 01 	.word 0x58000001
     254:	b4 00 01 54 	l.mfspr r0,r0,0x154
     258:	00 00 01 b4 	l.j 928 <__rom_size-0x19a24>
     25c:	00 00 0c a8 	l.j 34fc <__rom_size-0x16e50>
     260:	00 03 91 a4 	l.j e48f0 <__ram_length+0x648f0>
     264:	7f 00 00 00 	l.cust4 
     268:	00 00 00 00 	l.j 268 <__rom_size-0x1a0e4>
     26c:	00 00 00 01 	l.j 270 <__rom_size-0x1a0dc>
     270:	58 00 00 01 	.word 0x58000001
     274:	b4 00 01 55 	l.mfspr r0,r0,0x155
	...
     280:	00 00 01 58 	l.j 7e0 <__rom_size-0x19b6c>
     284:	00 00 01 b4 	l.j 954 <__rom_size-0x199f8>
     288:	00 01 56 00 	l.j 55a88 <__rom_size+0x3b73c>
     28c:	00 01 b4 00 	l.j 6d28c <__rom_size+0x52f40>
     290:	00 02 88 00 	l.j a2290 <__ram_length+0x22290>
     294:	01 52 00 00 	l.j 5480294 <__stack+0x5000298>
     298:	02 88 00 00 	l.j fa200298 <__stack+0xf9d8029c>
     29c:	02 8c 00 03 	l.j fa3002a8 <__stack+0xf9e802ac>
     2a0:	72 04 9f 00 	l.cust1 
     2a4:	00 02 8c 00 	l.j a32a4 <__ram_length+0x232a4>
     2a8:	00 02 f0 00 	l.j bc2a8 <__ram_length+0x3c2a8>
     2ac:	01 52 00 00 	l.j 54802ac <__stack+0x50002b0>
     2b0:	02 f0 00 00 	l.j fbc002b0 <__stack+0xfb7802b4>
     2b4:	03 04 00 01 	l.j fc1002b8 <__stack+0xfbc802bc>
     2b8:	53 00 00 03 	.word 0x53000003
     2bc:	04 00 00 04 	l.jal 2cc <__rom_size-0x1a080>
     2c0:	40 00 01 52 	.word 0x40000152
     2c4:	00 00 04 40 	l.j 13c4 <__rom_size-0x18f88>
     2c8:	00 00 04 44 	l.j 13d8 <__rom_size-0x18f74>
     2cc:	00 03 72 04 	l.j dcadc <__ram_length+0x5cadc>
     2d0:	9f 00 00 04 	l.addi r24,r0,0x4
     2d4:	44 00 00 04 	l.jr r0
     2d8:	8c 00 01 52 	l.lbz r0,0x152(r0)
     2dc:	00 00 04 8c 	l.j 150c <__rom_size-0x18e40>
     2e0:	00 00 04 90 	l.j 1520 <__rom_size-0x18e2c>
     2e4:	00 03 72 04 	l.j dcaf4 <__ram_length+0x5caf4>
     2e8:	9f 00 00 04 	l.addi r24,r0,0x4
     2ec:	98 00 00 04 	l.lhs r0,0x4(r0)
     2f0:	a0 00 03 72 	l.addic r0,r0,0x372
     2f4:	04 9f 00 00 	l.jal 27c02f4 <__stack+0x23402f8>
     2f8:	04 a0 00 00 	l.jal 28002f8 <__stack+0x23802fc>
     2fc:	04 a8 00 03 	l.jal 2a00308 <__stack+0x258030c>
     300:	72 08 9f 00 	l.cust1 
     304:	00 04 b0 00 	l.j 12c304 <__ram_length+0xac304>
     308:	00 04 f4 00 	l.j 13d308 <__ram_length+0xbd308>
     30c:	01 52 00 00 	l.j 548030c <__stack+0x5000310>
     310:	04 f4 00 00 	l.jal 3d00310 <__stack+0x3880314>
     314:	05 00 00 03 	l.jal 4000320 <__stack+0x3b80324>
     318:	72 04 9f 00 	l.cust1 
     31c:	00 05 00 00 	l.j 14031c <__ram_length+0xc031c>
     320:	00 05 08 00 	l.j 142320 <__ram_length+0xc2320>
     324:	03 72 04 9f 	l.j fdc815a0 <__stack+0xfd8015a4>
     328:	00 00 05 08 	l.j 1748 <__rom_size-0x18c04>
     32c:	00 00 05 0c 	l.j 175c <__rom_size-0x18bf0>
     330:	00 03 72 04 	l.j dcb40 <__ram_length+0x5cb40>
     334:	9f 00 00 05 	l.addi r24,r0,0x5
     338:	14 00 00 05 	.word 0x14000005
     33c:	1c 00 03 72 	.word 0x1c000372
     340:	08 9f 00 00 	.word 0x089f0000
     344:	05 1c 00 00 	l.jal 4700344 <__stack+0x4280348>
     348:	09 9c 00 01 	.word 0x099c0001
     34c:	52 00 00 09 	.word 0x52000009
     350:	9c 00 00 09 	l.addi r0,r0,0x9
     354:	ac 00 03 72 	l.xori r0,r0,0x372
     358:	04 9f 00 00 	l.jal 27c0358 <__stack+0x234035c>
     35c:	09 ac 00 00 	.word 0x09ac0000
     360:	09 b8 00 01 	.word 0x09b80001
     364:	52 00 00 09 	.word 0x52000009
     368:	b8 00 00 09 	l.slli r0,r0,0x9
     36c:	d8 00 01 6c 	l.sb 0x16c(r0),r0
     370:	00 00 09 d8 	l.j 2ad0 <__rom_size-0x1787c>
     374:	00 00 0b 74 	l.j 3144 <__rom_size-0x17208>
     378:	00 01 52 00 	l.j 54b78 <__rom_size+0x3a82c>
     37c:	00 0b 74 00 	l.j 2dd37c <__ram_length+0x25d37c>
     380:	00 0b 84 00 	l.j 2e1380 <__ram_length+0x261380>
     384:	03 72 04 9f 	l.j fdc81600 <__stack+0xfd801604>
     388:	00 00 0b 84 	l.j 3198 <__rom_size-0x171b4>
     38c:	00 00 0b 8c 	l.j 31bc <__rom_size-0x17190>
     390:	00 01 52 00 	l.j 54b90 <__rom_size+0x3a844>
     394:	00 0b 8c 00 	l.j 2e3394 <__ram_length+0x263394>
     398:	00 0b 94 00 	l.j 2e5398 <__ram_length+0x265398>
     39c:	03 72 04 9f 	l.j fdc81618 <__stack+0xfd80161c>
     3a0:	00 00 0b 94 	l.j 31f0 <__rom_size-0x1715c>
     3a4:	00 00 0b 9c 	l.j 3214 <__rom_size-0x17138>
     3a8:	00 03 72 04 	l.j dcbb8 <__ram_length+0x5cbb8>
     3ac:	9f 00 00 0b 	l.addi r24,r0,0xb
     3b0:	9c 00 00 0b 	l.addi r0,r0,0xb
     3b4:	a4 00 01 52 	l.andi r0,r0,0x152
     3b8:	00 00 0b a4 	l.j 3248 <__rom_size-0x17104>
     3bc:	00 00 0b ac 	l.j 326c <__rom_size-0x170e0>
     3c0:	00 03 72 04 	l.j dcbd0 <__ram_length+0x5cbd0>
     3c4:	9f 00 00 0b 	l.addi r24,r0,0xb
     3c8:	b8 00 00 0b 	l.slli r0,r0,0xb
     3cc:	c8 00 03 72 	.word 0xc8000372
     3d0:	04 9f 00 00 	l.jal 27c03d0 <__stack+0x23403d4>
     3d4:	0b c8 00 00 	.word 0x0bc80000
     3d8:	0c 1c 00 01 	l.bnf 7003dc <__stack+0x2803e0>
     3dc:	52 00 00 0c 	.word 0x5200000c
     3e0:	1c 00 00 0c 	.word 0x1c00000c
     3e4:	24 00 01 53 	l.rfe 
     3e8:	00 00 0c 24 	l.j 3478 <__rom_size-0x16ed4>
     3ec:	00 00 0c 28 	l.j 348c <__rom_size-0x16ec0>
     3f0:	00 01 52 00 	l.j 54bf0 <__rom_size+0x3a8a4>
     3f4:	00 0c 2c 00 	l.j 30b3f4 <__ram_length+0x28b3f4>
     3f8:	00 0c 6c 00 	l.j 31b3f8 <__ram_length+0x29b3f8>
     3fc:	01 52 00 00 	l.j 54803fc <__stack+0x5000400>
	...
     408:	01 58 00 00 	l.j 5600408 <__stack+0x518040c>
     40c:	01 b4 00 01 	l.j 6d00410 <__stack+0x6880414>
     410:	55 00 00 01 	.word 0x55000001
     414:	b4 00 00 01 	l.mfspr r0,r0,0x1
     418:	c0 00 01 54 	l.mtspr r0,r0,0x154
     41c:	00 00 01 c0 	l.j b1c <__rom_size-0x19830>
     420:	00 00 0c 2c 	l.j 34d0 <__rom_size-0x16e7c>
     424:	00 03 91 bc 	l.j e4b14 <__ram_length+0x64b14>
     428:	7f 00 00 0c 	l.cust4 
     42c:	2c 00 00 0c 	.word 0x2c00000c
     430:	34 00 01 55 	.word 0x34000155
     434:	00 00 0c 34 	l.j 3504 <__rom_size-0x16e48>
     438:	00 00 0c a8 	l.j 36d8 <__rom_size-0x16c74>
     43c:	00 01 54 00 	l.j 5543c <__rom_size+0x3b0f0>
	...
     448:	00 01 b4 00 	l.j 6d448 <__rom_size+0x530fc>
     44c:	00 02 04 00 	l.j 8144c <__ram_length+0x144c>
     450:	01 56 00 00 	l.j 5580450 <__stack+0x5100454>
     454:	02 54 00 00 	l.j f9500454 <__stack+0xf9080458>
     458:	02 9c 00 01 	l.j fa70045c <__stack+0xfa280460>
     45c:	56 00 00 02 	.word 0x56000002
     460:	a4 00 00 05 	l.andi r0,r0,0x5
     464:	38 00 01 56 	.word 0x38000156
     468:	00 00 09 9c 	l.j 2ad8 <__rom_size-0x17874>
     46c:	00 00 09 d7 	l.j 2bc8 <__rom_size-0x17784>
     470:	00 01 56 00 	l.j 55c70 <__rom_size+0x3b924>
     474:	00 0b 38 00 	l.j 2ce474 <__ram_length+0x24e474>
     478:	00 0b b0 00 	l.j 2ec478 <__ram_length+0x26c478>
     47c:	01 56 00 00 	l.j 558047c <__stack+0x5100480>
     480:	0b b8 00 00 	.word 0x0bb80000
     484:	0c 04 00 01 	l.bnf 100488 <__ram_length+0x80488>
     488:	56 00 00 0c 	.word 0x5600000c
     48c:	10 00 00 0c 	l.bf 4bc <__rom_size-0x19e90>
     490:	28 00 01 56 	lv.max.h r0,r0,r0
     494:	00 00 0c 34 	l.j 3564 <__rom_size-0x16de8>
     498:	00 00 0c a8 	l.j 3738 <__rom_size-0x16c14>
     49c:	00 01 56 00 	l.j 55c9c <__rom_size+0x3b950>
	...
     4a8:	00 01 8c 00 	l.j 634a8 <__rom_size+0x4915c>
     4ac:	00 01 b4 00 	l.j 6d4ac <__rom_size+0x53160>
     4b0:	02 91 48 00 	l.j fa4524b0 <__stack+0xf9fd24b4>
     4b4:	00 01 b4 00 	l.j 6d4b4 <__rom_size+0x53168>
     4b8:	00 01 f8 00 	l.j 7e4b8 <__rom_size+0x6416c>
     4bc:	01 66 00 00 	l.j 59804bc <__stack+0x55004c0>
     4c0:	01 f8 00 00 	l.j 7e004c0 <__stack+0x79804c4>
     4c4:	09 94 00 01 	.word 0x09940001
     4c8:	66 00 00 09 	.word 0x66000009
     4cc:	94 00 00 0a 	l.lhz r0,0xa(r0)
     4d0:	64 00 01 66 	.word 0x64000166
     4d4:	00 00 0a 64 	l.j 2e64 <__rom_size-0x174e8>
     4d8:	00 00 0a b8 	l.j 2fb8 <__rom_size-0x17394>
     4dc:	00 01 66 00 	l.j 59cdc <__rom_size+0x3f990>
     4e0:	00 0a b8 00 	l.j 2ae4e0 <__ram_length+0x22e4e0>
     4e4:	00 0b 0c 00 	l.j 2c34e4 <__ram_length+0x2434e4>
     4e8:	01 66 00 00 	l.j 59804e8 <__stack+0x55004ec>
     4ec:	0b 0c 00 00 	.word 0x0b0c0000
     4f0:	0b e4 00 01 	.word 0x0be40001
     4f4:	66 00 00 0b 	.word 0x6600000b
     4f8:	e4 00 00 0c 	l.sfeq r0,r0
     4fc:	2c 00 01 66 	.word 0x2c000166
     500:	00 00 0c 2c 	l.j 35b0 <__rom_size-0x16d9c>
     504:	00 00 0c 94 	l.j 3754 <__rom_size-0x16bf8>
     508:	00 01 66 00 	l.j 59d08 <__rom_size+0x3f9bc>
	...
     514:	00 01 8c 00 	l.j 63514 <__rom_size+0x491c8>
     518:	00 01 b4 00 	l.j 6d518 <__rom_size+0x531cc>
     51c:	02 30 9f 00 	l.j f8c2811c <__stack+0xf87a8120>
     520:	00 01 b4 00 	l.j 6d520 <__rom_size+0x531d4>
     524:	00 01 f8 00 	l.j 7e524 <__rom_size+0x641d8>
     528:	01 62 00 00 	l.j 5880528 <__stack+0x540052c>
     52c:	01 f8 00 00 	l.j 7e0052c <__stack+0x7980530>
     530:	09 94 00 01 	.word 0x09940001
     534:	62 00 00 09 	.word 0x62000009
     538:	94 00 00 0a 	l.lhz r0,0xa(r0)
     53c:	4c 00 01 62 	l.maci r0,0x162
     540:	00 00 0a 4c 	l.j 2e70 <__rom_size-0x174dc>
     544:	00 00 0a 68 	l.j 2ee4 <__rom_size-0x17468>
     548:	00 01 54 00 	l.j 55548 <__rom_size+0x3b1fc>
     54c:	00 0a 68 00 	l.j 29a54c <__ram_length+0x21a54c>
     550:	00 0a 90 00 	l.j 2a4550 <__ram_length+0x224550>
     554:	01 54 00 00 	l.j 5500554 <__stack+0x5080558>
     558:	0a 90 00 00 	.word 0x0a900000
     55c:	0a 9c 00 01 	.word 0x0a9c0001
     560:	62 00 00 0b 	.word 0x6200000b
     564:	10 00 00 0b 	l.bf 590 <__rom_size-0x19dbc>
     568:	38 00 01 54 	.word 0x38000154
     56c:	00 00 0b 38 	l.j 324c <__rom_size-0x17100>
     570:	00 00 0b b0 	l.j 3430 <__rom_size-0x16f1c>
     574:	00 01 62 00 	l.j 58d74 <__rom_size+0x3ea28>
     578:	00 0b b8 00 	l.j 2ee578 <__ram_length+0x26e578>
     57c:	00 0b e4 00 	l.j 2f957c <__ram_length+0x27957c>
     580:	01 62 00 00 	l.j 5880580 <__stack+0x5400584>
     584:	0b e4 00 00 	.word 0x0be40000
     588:	0c 28 00 01 	l.bnf a0058c <__stack+0x580590>
     58c:	62 00 00 0c 	.word 0x6200000c
     590:	2c 00 00 0c 	.word 0x2c00000c
     594:	8c 00 01 62 	l.lbz r0,0x162(r0)
     598:	00 00 0c 8c 	l.j 37c8 <__rom_size-0x16b84>
     59c:	00 00 0c a8 	l.j 383c <__rom_size-0x16b10>
     5a0:	00 01 5b 00 	l.j 571a0 <__rom_size+0x3ce54>
	...
     5ac:	00 01 8c 00 	l.j 635ac <__rom_size+0x49260>
     5b0:	00 01 b4 00 	l.j 6d5b0 <__rom_size+0x53264>
     5b4:	0a 9e 08 00 	.word 0x0a9e0800
	...
     5c8:	00 01 8c 00 	l.j 635c8 <__rom_size+0x4927c>
     5cc:	00 01 b4 00 	l.j 6d5cc <__rom_size+0x53280>
     5d0:	02 30 9f 00 	l.j f8c281d0 <__stack+0xf87a81d4>
     5d4:	00 01 b4 00 	l.j 6d5d4 <__rom_size+0x53288>
     5d8:	00 03 54 00 	l.j d55d8 <__ram_length+0x555d8>
     5dc:	01 60 00 00 	l.j 58005dc <__stack+0x53805e0>
     5e0:	03 5c 00 00 	l.j fd7005e0 <__stack+0xfd2805e4>
     5e4:	03 64 00 01 	l.j fd9005e8 <__stack+0xfd4805ec>
     5e8:	60 00 00 03 	.word 0x60000003
     5ec:	64 00 00 03 	.word 0x64000003
     5f0:	6c 00 01 60 	.word 0x6c000160
     5f4:	00 00 03 6c 	l.j 13a4 <__rom_size-0x18fa8>
     5f8:	00 00 03 80 	l.j 13f8 <__rom_size-0x18f54>
     5fc:	00 01 60 00 	l.j 585fc <__rom_size+0x3e2b0>
     600:	00 03 90 00 	l.j e4600 <__ram_length+0x64600>
     604:	00 0b 84 00 	l.j 2e1604 <__ram_length+0x261604>
     608:	01 60 00 00 	l.j 5800608 <__stack+0x538060c>
     60c:	0b 8c 00 00 	.word 0x0b8c0000
     610:	0b fc 00 01 	.word 0x0bfc0001
     614:	60 00 00 0c 	.word 0x6000000c
     618:	04 00 00 0c 	l.jal 648 <__rom_size-0x19d04>
     61c:	28 00 01 60 	lv.pack.b r0,r0,r0
     620:	00 00 0c 2c 	l.j 36d0 <__rom_size-0x16c7c>
     624:	00 00 0c 88 	l.j 3844 <__rom_size-0x16b08>
     628:	00 01 60 00 	l.j 58628 <__rom_size+0x3e2dc>
	...
     634:	00 01 8c 00 	l.j 63634 <__rom_size+0x492e8>
     638:	00 01 b4 00 	l.j 6d638 <__rom_size+0x532ec>
     63c:	02 30 9f 00 	l.j f8c2823c <__stack+0xf87a8240>
     640:	00 01 b4 00 	l.j 6d640 <__rom_size+0x532f4>
     644:	00 02 70 00 	l.j 9c644 <__ram_length+0x1c644>
     648:	01 64 00 00 	l.j 5900648 <__stack+0x548064c>
     64c:	02 78 00 00 	l.j f9e0064c <__stack+0xf9980650>
     650:	02 8c 00 01 	l.j fa300654 <__stack+0xf9e80658>
     654:	64 00 00 02 	.word 0x64000002
     658:	8c 00 00 02 	l.lbz r0,0x2(r0)
     65c:	9c 00 02 72 	l.addi r0,r0,0x272
     660:	7c 00 00 02 	l.cust4 
     664:	9c 00 00 0a 	l.addi r0,r0,0xa
     668:	4c 00 01 64 	l.maci r0,0x164
     66c:	00 00 0a 4c 	l.j 2f9c <__rom_size-0x173b0>
     670:	00 00 0a 68 	l.j 3010 <__rom_size-0x1733c>
     674:	00 01 55 00 	l.j 55a74 <__rom_size+0x3b728>
     678:	00 0a 68 00 	l.j 29a678 <__ram_length+0x21a678>
     67c:	00 0a 90 00 	l.j 2a467c <__ram_length+0x22467c>
     680:	01 55 00 00 	l.j 5540680 <__stack+0x50c0684>
     684:	0a 90 00 00 	.word 0x0a900000
     688:	0a f4 00 01 	.word 0x0af40001
     68c:	64 00 00 0a 	.word 0x6400000a
     690:	f4 00 00 0b 	l.cust6 
     694:	10 00 01 55 	l.bf be8 <__rom_size-0x19764>
     698:	00 00 0b 10 	l.j 32d8 <__rom_size-0x17074>
     69c:	00 00 0b 38 	l.j 337c <__rom_size-0x16fd0>
     6a0:	00 01 55 00 	l.j 55aa0 <__rom_size+0x3b754>
     6a4:	00 0b 38 00 	l.j 2ce6a4 <__ram_length+0x24e6a4>
     6a8:	00 0b b0 00 	l.j 2ec6a8 <__ram_length+0x26c6a8>
     6ac:	01 64 00 00 	l.j 59006ac <__stack+0x54806b0>
     6b0:	0b b8 00 00 	.word 0x0bb80000
     6b4:	0b fc 00 01 	.word 0x0bfc0001
     6b8:	64 00 00 0c 	.word 0x6400000c
     6bc:	04 00 00 0c 	l.jal 6ec <__rom_size-0x19c60>
     6c0:	28 00 01 64 	lv.packus.b r0,r0,r0
     6c4:	00 00 0c 2c 	l.j 3774 <__rom_size-0x16bd8>
     6c8:	00 00 0c 90 	l.j 3908 <__rom_size-0x16a44>
     6cc:	00 01 64 00 	l.j 596cc <__rom_size+0x3f380>
	...
     6d8:	00 01 8c 00 	l.j 636d8 <__rom_size+0x4938c>
     6dc:	00 01 b4 00 	l.j 6d6dc <__rom_size+0x53390>
     6e0:	03 09 ff 9f 	l.j fc28055c <__stack+0xfbe00560>
     6e4:	00 00 01 b4 	l.j db4 <__rom_size-0x19598>
     6e8:	00 00 02 b0 	l.j 11a8 <__rom_size-0x191a4>
     6ec:	00 01 68 00 	l.j 5a6ec <__rom_size+0x403a0>
     6f0:	00 02 b8 00 	l.j ae6f0 <__ram_length+0x2e6f0>
     6f4:	00 02 d4 00 	l.j b56f4 <__ram_length+0x356f4>
     6f8:	01 68 00 00 	l.j 5a006f8 <__stack+0x55806fc>
     6fc:	02 dc 00 00 	l.j fb7006fc <__stack+0xfb280700>
     700:	02 f0 00 01 	l.j fbc00704 <__stack+0xfb780708>
     704:	68 00 00 02 	.word 0x68000002
     708:	f0 00 00 02 	l.cust5 r0,r0,r0,0x0,0x2
     70c:	f4 00 02 72 	l.cust6 
     710:	00 00 00 02 	l.j 718 <__rom_size-0x19c34>
     714:	f4 00 00 03 	l.cust6 
     718:	04 00 02 73 	l.jal 10e4 <__rom_size-0x19268>
     71c:	7c 00 00 03 	l.cust4 
     720:	04 00 00 04 	l.jal 730 <__rom_size-0x19c1c>
     724:	38 00 01 68 	.word 0x38000168
     728:	00 00 04 38 	l.j 1808 <__rom_size-0x18b44>
     72c:	00 00 04 50 	l.j 186c <__rom_size-0x18ae0>
     730:	00 02 38 9f 	l.j 8e9ac <__ram_length+0xe9ac>
     734:	00 00 04 50 	l.j 1874 <__rom_size-0x18ad8>
     738:	00 00 05 1c 	l.j 1ba8 <__rom_size-0x187a4>
     73c:	00 01 68 00 	l.j 5a73c <__rom_size+0x403f0>
     740:	00 05 1c 00 	l.j 147740 <__ram_length+0xc7740>
     744:	00 0b f8 00 	l.j 2fe744 <__ram_length+0x27e744>
     748:	01 68 00 00 	l.j 5a00748 <__stack+0x558074c>
     74c:	0c 04 00 00 	l.bnf 10074c <__ram_length+0x8074c>
     750:	0c 1c 00 01 	l.bnf 700754 <__stack+0x280758>
     754:	68 00 00 0c 	.word 0x6800000c
     758:	1c 00 00 0c 	.word 0x1c00000c
     75c:	24 00 02 73 	l.rfe 
     760:	7c 00 00 0c 	l.cust4 
     764:	24 00 00 0c 	l.rfe 
     768:	28 00 01 68 	lv.rl.h r0,r0,r0
     76c:	00 00 0c 2c 	l.j 381c <__rom_size-0x16b30>
     770:	00 00 0c 98 	l.j 39d0 <__rom_size-0x1697c>
     774:	00 01 68 00 	l.j 5a774 <__rom_size+0x40428>
	...
     780:	00 04 38 00 	l.j 10e780 <__ram_length+0x8e780>
     784:	00 04 50 00 	l.j 114784 <__ram_length+0x94784>
     788:	02 40 9f 00 	l.j f9028388 <__stack+0xf8ba838c>
     78c:	00 04 50 00 	l.j 11478c <__ram_length+0x9478c>
     790:	00 04 b0 00 	l.j 12c790 <__ram_length+0xac790>
     794:	02 3a 9f 00 	l.j f8ea8394 <__stack+0xf8a28398>
     798:	00 04 b0 00 	l.j 12c798 <__ram_length+0xac798>
     79c:	00 04 b8 00 	l.j 12e79c <__ram_length+0xae79c>
     7a0:	02 3a 9f 00 	l.j f8ea83a0 <__stack+0xf8a283a4>
     7a4:	00 04 bc 00 	l.j 12f7a4 <__ram_length+0xaf7a4>
     7a8:	00 05 1c 00 	l.j 1477a8 <__ram_length+0xc77a8>
     7ac:	01 6a 00 00 	l.j 5a807ac <__stack+0x56007b0>
     7b0:	05 1c 00 00 	l.jal 47007b0 <__stack+0x42807b4>
     7b4:	09 9c 00 01 	.word 0x099c0001
     7b8:	6a 00 00 00 	.word 0x6a000000
     7bc:	00 00 00 00 	l.j 7bc <__rom_size-0x19b90>
     7c0:	00 00 00 01 	l.j 7c4 <__rom_size-0x19b88>
     7c4:	8c 00 00 01 	l.lbz r0,0x1(r0)
     7c8:	b4 00 02 30 	l.mfspr r0,r0,0x230
     7cc:	9f 00 00 01 	l.addi r24,r0,0x1
     7d0:	b4 00 00 02 	l.mfspr r0,r0,0x2
     7d4:	2c 00 01 5e 	.word 0x2c00015e
     7d8:	00 00 02 2c 	l.j 1088 <__rom_size-0x192c4>
     7dc:	00 00 02 34 	l.j 10ac <__rom_size-0x192a0>
     7e0:	00 01 5e 00 	l.j 57fe0 <__rom_size+0x3dc94>
     7e4:	00 02 34 00 	l.j 8d7e4 <__ram_length+0xd7e4>
     7e8:	00 02 3c 00 	l.j 8f7e8 <__ram_length+0xf7e8>
     7ec:	01 5e 00 00 	l.j 57807ec <__stack+0x53007f0>
     7f0:	02 3c 00 00 	l.j f8f007f0 <__stack+0xf8a807f4>
     7f4:	02 44 00 01 	l.j f91007f8 <__stack+0xf8c807fc>
     7f8:	5e 00 00 02 	.word 0x5e000002
     7fc:	44 00 00 02 	l.jr r0
     800:	4c 00 01 5e 	l.maci r0,0x15e
     804:	00 00 02 4c 	l.j 1134 <__rom_size-0x19218>
     808:	00 00 02 9c 	l.j 1278 <__rom_size-0x190d4>
     80c:	00 01 5e 00 	l.j 5800c <__rom_size+0x3dcc0>
     810:	00 02 9c 00 	l.j a7810 <__ram_length+0x27810>
     814:	00 04 38 00 	l.j 10e814 <__ram_length+0x8e814>
     818:	01 5e 00 00 	l.j 5780818 <__stack+0x530081c>
     81c:	04 38 00 00 	l.jal e0081c <__stack+0x980820>
     820:	04 40 00 01 	l.jal 1000824 <__stack+0xb80828>
     824:	5e 00 00 04 	.word 0x5e000004
     828:	40 00 00 04 	.word 0x40000004
     82c:	54 00 01 5e 	.word 0x5400015e
     830:	00 00 04 54 	l.j 1980 <__rom_size-0x189cc>
     834:	00 00 04 b8 	l.j 1b14 <__rom_size-0x18838>
     838:	00 01 5e 00 	l.j 58038 <__rom_size+0x3dcec>
     83c:	00 04 b8 00 	l.j 12e83c <__ram_length+0xae83c>
     840:	00 0b f0 00 	l.j 2fc840 <__ram_length+0x27c840>
     844:	01 5e 00 00 	l.j 5780844 <__stack+0x5300848>
     848:	0c 04 00 00 	l.bnf 100848 <__ram_length+0x80848>
     84c:	0c 28 00 01 	l.bnf a00850 <__stack+0x580854>
     850:	5e 00 00 0c 	.word 0x5e00000c
     854:	2c 00 00 0c 	.word 0x2c00000c
     858:	84 00 01 5e 	l.lwz r0,0x15e(r0)
	...
     864:	00 00 01 8c 	l.j e94 <__rom_size-0x194b8>
     868:	00 00 01 b4 	l.j f38 <__rom_size-0x19414>
     86c:	00 02 30 9f 	l.j 8cae8 <__ram_length+0xcae8>
     870:	00 00 01 b4 	l.j f40 <__rom_size-0x1940c>
     874:	00 00 02 b0 	l.j 1334 <__rom_size-0x19018>
     878:	00 01 57 00 	l.j 56478 <__rom_size+0x3c12c>
     87c:	00 02 b8 00 	l.j ae87c <__ram_length+0x2e87c>
     880:	00 03 74 00 	l.j dd880 <__ram_length+0x5d880>
     884:	01 57 00 00 	l.j 55c0884 <__stack+0x5140888>
     888:	03 74 00 00 	l.j fdd00888 <__stack+0xfd88088c>
     88c:	0b ec 00 02 	.word 0x0bec0002
     890:	30 9f 00 00 	.word 0x309f0000
     894:	0b ec 00 00 	.word 0x0bec0000
     898:	0b f4 00 01 	.word 0x0bf40001
     89c:	57 00 00 0c 	.word 0x5700000c
     8a0:	04 00 00 0c 	l.jal 8d0 <__rom_size-0x19a7c>
     8a4:	08 00 01 57 	.word 0x08000157
     8a8:	00 00 0c 10 	l.j 38e8 <__rom_size-0x16a64>
     8ac:	00 00 0c 14 	l.j 38fc <__rom_size-0x16a50>
     8b0:	00 01 57 00 	l.j 564b0 <__rom_size+0x3c164>
     8b4:	00 0c 1c 00 	l.j 3078b4 <__ram_length+0x2878b4>
     8b8:	00 0c 28 00 	l.j 30a8b8 <__ram_length+0x28a8b8>
     8bc:	01 57 00 00 	l.j 55c08bc <__stack+0x51408c0>
     8c0:	0c 2c 00 00 	l.bnf b008c0 <__stack+0x6808c4>
     8c4:	0c 5c 00 01 	l.bnf 17008c8 <__stack+0x12808cc>
     8c8:	57 00 00 00 	.word 0x57000000
     8cc:	00 00 00 00 	l.j 8cc <__rom_size-0x19a80>
     8d0:	00 00 00 09 	l.j 8f4 <__rom_size-0x19a58>
     8d4:	a8 00 00 09 	l.ori r0,r0,0x9
     8d8:	b4 00 03 91 	l.mfspr r0,r0,0x391
     8dc:	53 9f 00 00 	.word 0x539f0000
     8e0:	09 b8 00 00 	.word 0x09b80000
     8e4:	09 cc 00 02 	.word 0x09cc0002
     8e8:	72 00 00 00 	l.cust1 
     8ec:	09 cc 00 00 	.word 0x09cc0000
     8f0:	0a 9c 00 01 	.word 0x0a9c0001
     8f4:	6a 00 00 00 	.word 0x6a000000
     8f8:	00 00 00 00 	l.j 8f8 <__rom_size-0x19a54>
     8fc:	00 00 00 09 	l.j 920 <__rom_size-0x19a2c>
     900:	a8 00 00 09 	l.ori r0,r0,0x9
     904:	b4 00 02 31 	l.mfspr r0,r0,0x231
     908:	9f 00 00 09 	l.addi r24,r0,0x9
     90c:	d8 00 00 0a 	l.sb 0xa(r0),r0
     910:	14 00 01 5b 	.word 0x1400015b
     914:	00 00 0a 14 	l.j 3164 <__rom_size-0x171e8>
     918:	00 00 0b 2c 	l.j 35c8 <__rom_size-0x16d84>
     91c:	00 01 5b 00 	l.j 5751c <__rom_size+0x3d1d0>
     920:	00 0b 2c 00 	l.j 2cb920 <__ram_length+0x24b920>
     924:	00 0b 38 00 	l.j 2ce924 <__ram_length+0x24e924>
     928:	03 7b 7f 9f 	l.j fdee07a4 <__stack+0xfda607a8>
	...
     934:	00 00 05 40 	l.j 1e34 <__rom_size-0x18518>
     938:	00 00 05 f0 	l.j 20f8 <__rom_size-0x18254>
     93c:	00 01 68 00 	l.j 5a93c <__rom_size+0x405f0>
     940:	00 05 f0 00 	l.j 17c940 <__ram_length+0xfc940>
     944:	00 05 f8 00 	l.j 17e944 <__ram_length+0xfe944>
     948:	01 6e 00 00 	l.j 5b80948 <__stack+0x570094c>
     94c:	05 f8 00 00 	l.jal 7e0094c <__stack+0x7980950>
     950:	05 fc 00 01 	l.jal 7f00954 <__stack+0x7a80958>
     954:	68 00 00 05 	.word 0x68000005
     958:	fc 00 00 06 	l.cust8 
     95c:	10 00 01 6e 	l.bf f14 <__rom_size-0x19438>
	...
     968:	00 00 05 40 	l.j 1e68 <__rom_size-0x184e4>
     96c:	00 00 06 f4 	l.j 253c <__rom_size-0x17e10>
     970:	00 01 64 00 	l.j 59970 <__rom_size+0x3f624>
     974:	00 06 f4 00 	l.j 1bd974 <__ram_length+0x13d974>
     978:	00 07 0c 00 	l.j 1c3978 <__ram_length+0x143978>
     97c:	01 6e 00 00 	l.j 5b8097c <__stack+0x5700980>
     980:	07 0c 00 00 	l.jal fc300980 <__stack+0xfbe80984>
     984:	07 10 00 03 	l.jal fc400990 <__stack+0xfbf80994>
     988:	8e 01 9f 00 	l.lbz r16,0xffff9f00(r1)
     98c:	00 07 10 00 	l.j 1c498c <__ram_length+0x14498c>
     990:	00 07 24 00 	l.j 1c9990 <__ram_length+0x149990>
     994:	01 6e 00 00 	l.j 5b80994 <__stack+0x5700998>
     998:	07 24 00 00 	l.jal fc900998 <__stack+0xfc48099c>
     99c:	07 2c 00 01 	l.jal fcb009a0 <__stack+0xfc6809a4>
     9a0:	64 00 00 07 	.word 0x64000007
     9a4:	2c 00 00 08 	.word 0x2c000008
     9a8:	30 00 01 6e 	.word 0x3000016e
     9ac:	00 00 08 30 	l.j 2a6c <__rom_size-0x178e0>
     9b0:	00 00 09 58 	l.j 2f10 <__rom_size-0x1743c>
     9b4:	00 01 6e 00 	l.j 5c1b4 <__rom_size+0x41e68>
     9b8:	00 09 58 00 	l.j 2569b8 <__ram_length+0x1d69b8>
     9bc:	00 09 5c 00 	l.j 2579bc <__ram_length+0x1d79bc>
     9c0:	03 8e 01 9f 	l.j fe38103c <__stack+0xfdf01040>
     9c4:	00 00 09 5c 	l.j 2f34 <__rom_size-0x17418>
     9c8:	00 00 09 9c 	l.j 3038 <__rom_size-0x17314>
     9cc:	00 01 6e 00 	l.j 5c1cc <__rom_size+0x41e80>
	...
     9d8:	00 05 40 00 	l.j 1509d8 <__ram_length+0xd09d8>
     9dc:	00 09 9c 00 	l.j 2679dc <__ram_length+0x1e79dc>
     9e0:	01 6a 00 00 	l.j 5a809e0 <__stack+0x56009e4>
	...
     9ec:	05 40 00 00 	l.jal 50009ec <__stack+0x4b809f0>
     9f0:	09 9c 00 01 	.word 0x099c0001
     9f4:	5e 00 00 00 	.word 0x5e000000
     9f8:	00 00 00 00 	l.j 9f8 <__rom_size-0x19954>
     9fc:	00 00 00 05 	l.j a10 <__rom_size-0x1993c>
     a00:	40 00 00 05 	.word 0x40000005
     a04:	78 00 01 55 	l.cust3 
     a08:	00 00 05 78 	l.j 1fe8 <__rom_size-0x18364>
     a0c:	00 00 05 80 	l.j 200c <__rom_size-0x18340>
     a10:	00 03 91 b8 	l.j e50f0 <__ram_length+0x650f0>
     a14:	7f 00 00 05 	l.cust4 
     a18:	80 00 00 05 	l.ld r0,0x5(r0)
     a1c:	88 00 01 55 	l.lws r0,0x155(r0)
     a20:	00 00 05 88 	l.j 2040 <__rom_size-0x1830c>
     a24:	00 00 09 18 	l.j 2e84 <__rom_size-0x174c8>
     a28:	00 03 91 b8 	l.j e5108 <__ram_length+0x65108>
     a2c:	7f 00 00 09 	l.cust4 
     a30:	18 00 00 09 	l.movhi r0,0x9
     a34:	9c 00 03 91 	l.addi r0,r0,0x391
     a38:	b8 7f 00 00 	l.slli r3,r31,0x0
	...
     a44:	05 40 00 00 	l.jal 5000a44 <__stack+0x4b80a48>
     a48:	09 9c 00 01 	.word 0x099c0001
     a4c:	6c 00 00 00 	.word 0x6c000000
     a50:	00 00 00 00 	l.j a50 <__rom_size-0x198fc>
     a54:	00 00 00 05 	l.j a68 <__rom_size-0x198e4>
     a58:	40 00 00 06 	.word 0x40000006
     a5c:	f4 00 01 66 	l.cust6 
     a60:	00 00 06 f4 	l.j 2630 <__rom_size-0x17d1c>
     a64:	00 00 07 08 	l.j 2684 <__rom_size-0x17cc8>
     a68:	00 01 55 00 	l.j 55e68 <__rom_size+0x3bb1c>
     a6c:	00 07 08 00 	l.j 1c2a6c <__ram_length+0x142a6c>
     a70:	00 07 24 00 	l.j 1c9a70 <__ram_length+0x149a70>
     a74:	01 55 00 00 	l.j 5540a74 <__stack+0x50c0a78>
     a78:	07 24 00 00 	l.jal fc900a78 <__stack+0xfc480a7c>
     a7c:	07 2c 00 01 	l.jal fcb00a80 <__stack+0xfc680a84>
     a80:	66 00 00 07 	.word 0x66000007
     a84:	2c 00 00 07 	.word 0x2c000007
     a88:	90 00 01 55 	l.lbs r0,0x155(r0)
     a8c:	00 00 07 90 	l.j 28cc <__rom_size-0x17a80>
     a90:	00 00 07 b4 	l.j 2960 <__rom_size-0x179ec>
     a94:	00 01 55 00 	l.j 55e94 <__rom_size+0x3bb48>
     a98:	00 07 b4 00 	l.j 1eda98 <__ram_length+0x16da98>
     a9c:	00 07 dc 00 	l.j 1f7a9c <__ram_length+0x177a9c>
     aa0:	01 55 00 00 	l.j 5540aa0 <__stack+0x50c0aa4>
     aa4:	07 dc 00 00 	l.jal ff700aa4 <__stack+0xff280aa8>
     aa8:	08 28 00 01 	.word 0x08280001
     aac:	55 00 00 08 	.word 0x55000008
     ab0:	28 00 00 08 	.word 0x28000008
     ab4:	4c 00 01 55 	l.maci r0,0x155
     ab8:	00 00 08 58 	l.j 2c18 <__rom_size-0x17734>
     abc:	00 00 08 6c 	l.j 2c6c <__rom_size-0x176e0>
     ac0:	00 01 55 00 	l.j 55ec0 <__rom_size+0x3bb74>
     ac4:	00 08 6c 00 	l.j 21bac4 <__ram_length+0x19bac4>
     ac8:	00 09 30 00 	l.j 24cac8 <__ram_length+0x1ccac8>
     acc:	03 91 a8 7f 	l.j fe46acc8 <__stack+0xfdfeaccc>
     ad0:	00 00 09 30 	l.j 2f90 <__rom_size-0x173bc>
     ad4:	00 00 09 50 	l.j 3014 <__rom_size-0x17338>
     ad8:	00 02 91 40 	l.j a4fd8 <__ram_length+0x24fd8>
     adc:	00 00 09 50 	l.j 301c <__rom_size-0x17330>
     ae0:	00 00 09 60 	l.j 3060 <__rom_size-0x172ec>
     ae4:	00 02 91 40 	l.j a4fe4 <__ram_length+0x24fe4>
     ae8:	00 00 09 60 	l.j 3068 <__rom_size-0x172e4>
     aec:	00 00 09 9c 	l.j 315c <__rom_size-0x171f0>
     af0:	00 02 91 40 	l.j a4ff0 <__ram_length+0x24ff0>
	...
     afc:	00 00 08 5c 	l.j 2c6c <__rom_size-0x176e0>
     b00:	00 00 08 6c 	l.j 2cb0 <__rom_size-0x1769c>
     b04:	00 01 55 00 	l.j 55f04 <__rom_size+0x3bbb8>
     b08:	00 08 6c 00 	l.j 21bb08 <__ram_length+0x19bb08>
     b0c:	00 08 9c 00 	l.j 227b0c <__ram_length+0x1a7b0c>
     b10:	03 91 a8 7f 	l.j fe46ad0c <__stack+0xfdfead10>
     b14:	00 00 08 9c 	l.j 2d84 <__rom_size-0x175c8>
     b18:	00 00 08 b8 	l.j 2df8 <__rom_size-0x17554>
     b1c:	00 01 55 00 	l.j 55f1c <__rom_size+0x3bbd0>
     b20:	00 08 b8 00 	l.j 22eb20 <__ram_length+0x1aeb20>
     b24:	00 08 d8 00 	l.j 236b24 <__ram_length+0x1b6b24>
     b28:	03 91 a8 7f 	l.j fe46ad24 <__stack+0xfdfead28>
     b2c:	00 00 08 d8 	l.j 2e8c <__rom_size-0x174c0>
     b30:	00 00 08 f3 	l.j 2efc <__rom_size-0x17450>
     b34:	00 01 55 00 	l.j 55f34 <__rom_size+0x3bbe8>
     b38:	00 08 f3 00 	l.j 23d738 <__ram_length+0x1bd738>
     b3c:	00 09 9c 00 	l.j 267b3c <__ram_length+0x1e7b3c>
     b40:	03 91 a8 7f 	l.j fe46ad3c <__stack+0xfdfead40>
	...
     b4c:	00 00 05 40 	l.j 204c <__rom_size-0x18300>
     b50:	00 00 06 f4 	l.j 2720 <__rom_size-0x17c2c>
     b54:	00 02 30 9f 	l.j 8cdd0 <__ram_length+0xcdd0>
     b58:	00 00 07 10 	l.j 2798 <__rom_size-0x17bb4>
     b5c:	00 00 07 24 	l.j 27ec <__rom_size-0x17b60>
     b60:	00 01 56 00 	l.j 56360 <__rom_size+0x3c014>
     b64:	00 07 24 00 	l.j 1c9b64 <__ram_length+0x149b64>
     b68:	00 07 2c 00 	l.j 1cbb68 <__ram_length+0x14bb68>
     b6c:	02 30 9f 00 	l.j f8c2876c <__stack+0xf87a8770>
     b70:	00 07 2c 00 	l.j 1cbb70 <__ram_length+0x14bb70>
     b74:	00 07 94 00 	l.j 1e5b74 <__ram_length+0x165b74>
     b78:	01 56 00 00 	l.j 5580b78 <__stack+0x5100b7c>
     b7c:	07 94 00 00 	l.jal fe500b7c <__stack+0xfe080b80>
     b80:	07 b8 00 01 	l.jal fee00b84 <__stack+0xfe980b88>
     b84:	56 00 00 07 	.word 0x56000007
     b88:	b8 00 00 07 	l.slli r0,r0,0x7
     b8c:	e0 00 01 56 	.word 0xe0000156
     b90:	00 00 07 e0 	l.j 2b10 <__rom_size-0x1783c>
     b94:	00 00 08 2c 	l.j 2c44 <__rom_size-0x17708>
     b98:	00 01 56 00 	l.j 56398 <__rom_size+0x3c04c>
     b9c:	00 08 2c 00 	l.j 20bb9c <__ram_length+0x18bb9c>
     ba0:	00 08 50 00 	l.j 214ba0 <__ram_length+0x194ba0>
     ba4:	01 56 00 00 	l.j 5580ba4 <__stack+0x5100ba8>
     ba8:	08 5c 00 00 	.word 0x085c0000
     bac:	08 6c 00 01 	.word 0x086c0001
     bb0:	56 00 00 08 	.word 0x56000008
     bb4:	6c 00 00 09 	.word 0x6c000009
     bb8:	30 00 03 91 	.word 0x30000391
     bbc:	ac 7f 00 00 	l.xori r3,r31,0x0
     bc0:	09 30 00 00 	.word 0x09300000
     bc4:	09 5c 00 03 	.word 0x095c0003
     bc8:	91 b0 7f 00 	l.lbs r13,0x7f00(r16)
     bcc:	00 09 5c 00 	l.j 257bcc <__ram_length+0x1d7bcc>
     bd0:	00 09 60 00 	l.j 258bd0 <__ram_length+0x1d8bd0>
     bd4:	01 55 00 00 	l.j 5540bd4 <__stack+0x50c0bd8>
     bd8:	09 60 00 00 	.word 0x09600000
     bdc:	09 9c 00 03 	.word 0x099c0003
     be0:	91 b0 7f 00 	l.lbs r13,0x7f00(r16)
	...
     bec:	00 08 5c 00 	l.j 217bec <__ram_length+0x197bec>
     bf0:	00 08 6c 00 	l.j 21bbf0 <__ram_length+0x19bbf0>
     bf4:	01 56 00 00 	l.j 5580bf4 <__stack+0x5100bf8>
     bf8:	08 6c 00 00 	.word 0x086c0000
     bfc:	08 a0 00 03 	.word 0x08a00003
     c00:	91 ac 7f 00 	l.lbs r13,0x7f00(r12)
     c04:	00 08 a0 00 	l.j 228c04 <__ram_length+0x1a8c04>
     c08:	00 08 b8 00 	l.j 22ec08 <__ram_length+0x1aec08>
     c0c:	01 56 00 00 	l.j 5580c0c <__stack+0x5100c10>
     c10:	08 b8 00 00 	.word 0x08b80000
     c14:	08 dc 00 03 	.word 0x08dc0003
     c18:	91 ac 7f 00 	l.lbs r13,0x7f00(r12)
     c1c:	00 08 dc 00 	l.j 237c1c <__ram_length+0x1b7c1c>
     c20:	00 08 f3 00 	l.j 23d820 <__ram_length+0x1bd820>
     c24:	01 56 00 00 	l.j 5580c24 <__stack+0x5100c28>
     c28:	08 f3 00 00 	.word 0x08f30000
     c2c:	09 9c 00 03 	.word 0x099c0003
     c30:	91 ac 7f 00 	l.lbs r13,0x7f00(r12)
	...
     c3c:	00 05 5c 00 	l.j 157c3c <__ram_length+0xd7c3c>
     c40:	00 09 9c 00 	l.j 267c40 <__ram_length+0x1e7c40>
     c44:	02 91 44 00 	l.j fa451c44 <__stack+0xf9fd1c48>
	...
     c50:	00 05 90 00 	l.j 164c50 <__ram_length+0xe4c50>
     c54:	00 05 a0 00 	l.j 168c54 <__ram_length+0xe8c54>
     c58:	03 91 b8 7f 	l.j fe46ee54 <__stack+0xfdfeee58>
     c5c:	00 00 05 a0 	l.j 22dc <__rom_size-0x18070>
     c60:	00 00 05 a7 	l.j 22fc <__rom_size-0x18050>
     c64:	00 01 5b 00 	l.j 57864 <__rom_size+0x3d518>
     c68:	00 05 a8 00 	l.j 16ac68 <__ram_length+0xeac68>
     c6c:	00 06 53 00 	l.j 19586c <__ram_length+0x11586c>
     c70:	01 5b 00 00 	l.j 56c0c70 <__stack+0x5240c74>
	...
     c7c:	05 40 00 00 	l.jal 5000c7c <__stack+0x4b80c80>
     c80:	05 78 00 02 	l.jal 5e00c88 <__stack+0x5980c8c>
     c84:	30 9f 00 00 	.word 0x309f0000
     c88:	05 78 00 00 	l.jal 5e00c88 <__stack+0x5980c8c>
     c8c:	05 88 00 02 	l.jal 6200c94 <__stack+0x5d80c98>
     c90:	31 9f 00 00 	.word 0x319f0000
     c94:	05 88 00 00 	l.jal 6200c94 <__stack+0x5d80c98>
     c98:	05 90 00 02 	l.jal 6400ca0 <__stack+0x5f80ca4>
     c9c:	30 9f 00 00 	.word 0x309f0000
     ca0:	05 90 00 00 	l.jal 6400ca0 <__stack+0x5f80ca4>
     ca4:	09 9c 00 03 	.word 0x099c0003
     ca8:	91 a8 7f 00 	l.lbs r13,0x7f00(r8)
	...
     cb4:	00 05 40 00 	l.j 150cb4 <__ram_length+0xd0cb4>
     cb8:	00 05 a0 00 	l.j 168cb8 <__ram_length+0xe8cb8>
     cbc:	02 30 9f 00 	l.j f8c288bc <__stack+0xf87a88c0>
     cc0:	00 05 a0 00 	l.j 168cc0 <__ram_length+0xe8cc0>
     cc4:	00 05 b4 00 	l.j 16dcc4 <__ram_length+0xedcc4>
     cc8:	02 71 00 00 	l.j f9c40cc8 <__stack+0xf97c0ccc>
     ccc:	00 05 b4 00 	l.j 16dccc <__ram_length+0xedccc>
     cd0:	00 06 20 00 	l.j 188cd0 <__ram_length+0x108cd0>
     cd4:	02 71 00 00 	l.j f9c40cd4 <__stack+0xf97c0cd8>
     cd8:	00 06 20 00 	l.j 188cd8 <__ram_length+0x108cd8>
     cdc:	00 06 58 00 	l.j 196cdc <__ram_length+0x116cdc>
     ce0:	01 6e 00 00 	l.j 5b80ce0 <__stack+0x5700ce4>
     ce4:	06 58 00 00 	l.jal f9600ce4 <__stack+0xf9180ce8>
     ce8:	06 5c 00 03 	l.jal f9700cf4 <__stack+0xf9280cf8>
     cec:	91 a0 7f 00 	l.lbs r13,0x7f00(r0)
     cf0:	00 06 5c 00 	l.j 197cf0 <__ram_length+0x117cf0>
     cf4:	00 06 f0 00 	l.j 1bccf4 <__ram_length+0x13ccf4>
     cf8:	01 6e 00 00 	l.j 5b80cf8 <__stack+0x5700cfc>
     cfc:	06 f0 00 00 	l.jal fbc00cfc <__stack+0xfb780d00>
     d00:	08 6c 00 02 	.word 0x086c0002
     d04:	71 00 00 00 	l.cust1 
     d08:	08 6c 00 00 	.word 0x086c0000
     d0c:	08 84 00 01 	.word 0x08840001
     d10:	55 00 00 08 	.word 0x55000008
     d14:	84 00 00 08 	l.lwz r0,0x8(r0)
     d18:	a0 00 02 71 	l.addic r0,r0,0x271
     d1c:	00 00 00 08 	l.j d3c <__rom_size-0x19610>
     d20:	a0 00 00 08 	l.addic r0,r0,0x8
     d24:	b8 00 01 57 	l.srli r0,r0,0x17
     d28:	00 00 08 b8 	l.j 3008 <__rom_size-0x17344>
     d2c:	00 00 08 dc 	l.j 309c <__rom_size-0x172b0>
     d30:	00 02 71 00 	l.j 9d130 <__ram_length+0x1d130>
     d34:	00 00 08 dc 	l.j 30a4 <__rom_size-0x172a8>
     d38:	00 00 08 f3 	l.j 3104 <__rom_size-0x17248>
     d3c:	00 01 57 00 	l.j 5693c <__rom_size+0x3c5f0>
     d40:	00 08 f3 00 	l.j 23d940 <__ram_length+0x1bd940>
     d44:	00 09 9c 00 	l.j 267d44 <__ram_length+0x1e7d44>
     d48:	02 71 00 00 	l.j f9c40d48 <__stack+0xf97c0d4c>
	...
     d54:	00 06 5c 00 	l.j 197d54 <__ram_length+0x117d54>
     d58:	00 06 84 00 	l.j 1a1d58 <__ram_length+0x121d58>
     d5c:	01 6e 00 00 	l.j 5b80d5c <__stack+0x5700d60>
     d60:	06 84 00 00 	l.jal fa100d60 <__stack+0xf9c80d64>
     d64:	06 b8 00 03 	l.jal fae00d70 <__stack+0xfa980d74>
     d68:	91 b4 7f 00 	l.lbs r13,0x7f00(r20)
     d6c:	00 06 b8 00 	l.j 1aed6c <__ram_length+0x12ed6c>
     d70:	00 09 9c 00 	l.j 267d70 <__ram_length+0x1e7d70>
     d74:	03 91 b4 7f 	l.j fe46df70 <__stack+0xfdfedf74>
	...
     d80:	00 00 06 48 	l.j 26a0 <__rom_size-0x17cac>
     d84:	00 00 09 9c 	l.j 33f4 <__rom_size-0x16f58>
     d88:	00 03 91 a0 	l.j e5408 <__ram_length+0x65408>
     d8c:	7f 00 00 00 	l.cust4 
     d90:	00 00 00 00 	l.j d90 <__rom_size-0x195bc>
     d94:	00 00 00 08 	l.j db4 <__rom_size-0x19598>
     d98:	5c 00 00 08 	.word 0x5c000008
     d9c:	6c 00 03 91 	.word 0x6c000391
     da0:	a0 7f 00 00 	l.addic r3,r31,0x0
     da4:	08 6c 00 00 	.word 0x086c0000
     da8:	08 d4 00 08 	.word 0x08d40008
     dac:	91 a0 7f 06 	l.lbs r13,0x7f06(r0)
     db0:	09 ff 22 9f 	.word 0x09ff229f
     db4:	00 00 08 d4 	l.j 3104 <__rom_size-0x17248>
     db8:	00 00 08 ec 	l.j 3168 <__rom_size-0x171e4>
     dbc:	00 01 54 00 	l.j 55dbc <__rom_size+0x3ba70>
     dc0:	00 08 ec 00 	l.j 23bdc0 <__ram_length+0x1bbdc0>
     dc4:	00 09 9c 00 	l.j 267dc4 <__ram_length+0x1e7dc4>
     dc8:	03 91 a0 7f 	l.j fe468fc4 <__stack+0xfdfe8fc8>
	...
     dd4:	00 00 0a a4 	l.j 3864 <__rom_size-0x16ae8>
     dd8:	00 00 0a c0 	l.j 38d8 <__rom_size-0x16a74>
     ddc:	00 01 53 00 	l.j 559dc <__rom_size+0x3b690>
	...
     de8:	00 0a 90 00 	l.j 2a4de8 <__ram_length+0x224de8>
     dec:	00 0a 9c 00 	l.j 2a7dec <__ram_length+0x227dec>
     df0:	01 5b 00 00 	l.j 56c0df0 <__stack+0x5240df4>
     df4:	0a 9c 00 00 	.word 0x0a9c0000
     df8:	0a bc 00 01 	.word 0x0abc0001
     dfc:	54 00 00 0a 	.word 0x5400000a
     e00:	bc 00 00 0a 	l.sfeqi r0,0xa
     e04:	f4 00 01 54 	l.cust6 
     e08:	00 00 0a f4 	l.j 39d8 <__rom_size-0x16974>
     e0c:	00 00 0b 38 	l.j 3aec <__rom_size-0x16860>
     e10:	00 01 57 00 	l.j 56a10 <__rom_size+0x3c6c4>
	...
     e1c:	00 0a 44 00 	l.j 291e1c <__ram_length+0x211e1c>
     e20:	00 0a 80 00 	l.j 2a0e20 <__ram_length+0x220e20>
     e24:	01 53 00 00 	l.j 54c0e24 <__stack+0x5040e28>
	...
     e30:	0c a8 00 00 	l.bnf 2a00e30 <__stack+0x2580e34>
     e34:	0c b8 00 01 	l.bnf 2e00e38 <__stack+0x2980e3c>
     e38:	53 00 00 00 	.word 0x53000000
     e3c:	00 00 00 00 	l.j e3c <__rom_size-0x19510>
     e40:	00 00 00 0c 	l.j e70 <__rom_size-0x194dc>
     e44:	b4 00 00 0c 	l.mfspr r0,r0,0xc
     e48:	b8 00 0a 73 	l.srli r0,r0,0x33
     e4c:	00 40 24 74 	l.j 100a01c <__stack+0xb8a020>
     e50:	00 40 24 22 	l.j 1009ed8 <__stack+0xb89edc>
     e54:	9f 00 00 00 	l.addi r24,r0,0x0
     e58:	00 00 00 00 	l.j e58 <__rom_size-0x194f4>
     e5c:	00 00 00 0c 	l.j e8c <__rom_size-0x194c0>
     e60:	c0 00 00 0c 	l.mtspr r0,r0,0xc
     e64:	cc 00 01 53 	.word 0xcc000153
     e68:	00 00 0c cc 	l.j 4198 <__rom_size-0x161b4>
     e6c:	00 00 0c d0 	l.j 41ac <__rom_size-0x161a0>
     e70:	00 08 73 00 	l.j 21da70 <__ram_length+0x19da70>
     e74:	74 00 40 24 	l.cust2 
     e78:	1c 9f 00 00 	.word 0x1c9f0000
     e7c:	0c d4 00 00 	l.bnf 3500e7c <__stack+0x3080e80>
     e80:	0c dc 00 01 	l.bnf 3700e84 <__stack+0x3280e88>
     e84:	53 00 00 00 	.word 0x53000000
     e88:	00 00 00 00 	l.j e88 <__rom_size-0x194c4>
     e8c:	00 00 00 0c 	l.j ebc <__rom_size-0x19490>
     e90:	cc 00 00 0c 	.word 0xcc00000c
     e94:	d0 00 05 74 	l.sd 0x574(r0),r0
     e98:	00 40 24 9f 	l.j 100a114 <__stack+0xb8a118>
     e9c:	00 00 0c d0 	l.j 41dc <__rom_size-0x16170>
     ea0:	00 00 0c dc 	l.j 4210 <__rom_size-0x1613c>
     ea4:	00 01 54 00 	l.j 55ea4 <__rom_size+0x3bb58>
	...
     eb0:	00 0c dc 00 	l.j 337eb0 <__ram_length+0x2b7eb0>
     eb4:	00 0d 10 00 	l.j 344eb4 <__ram_length+0x2c4eb4>
     eb8:	02 71 00 00 	l.j f9c40eb8 <__stack+0xf97c0ebc>
     ebc:	00 0d 10 00 	l.j 344ebc <__ram_length+0x2c4ebc>
     ec0:	00 16 6c 00 	l.j 59bec0 <__stack+0x11bec4>
     ec4:	03 71 e0 06 	l.j fdc78edc <__stack+0xfd7f8ee0>
	...
     ed0:	00 00 11 0c 	l.j 5300 <__rom_size-0x1504c>
     ed4:	00 00 11 14 	l.j 5324 <__rom_size-0x15028>
     ed8:	00 02 30 9f 	l.j 8d154 <__ram_length+0xd154>
	...
     ee4:	00 00 0d a8 	l.j 4584 <__rom_size-0x15dc8>
     ee8:	00 00 0d ac 	l.j 4598 <__rom_size-0x15db4>
     eec:	00 02 30 9f 	l.j 8d168 <__ram_length+0xd168>
     ef0:	00 00 12 1c 	l.j 5760 <__rom_size-0x14bec>
     ef4:	00 00 12 20 	l.j 5774 <__rom_size-0x14bd8>
     ef8:	00 02 30 9f 	l.j 8d174 <__ram_length+0xd174>
	...
     f04:	00 00 0c dc 	l.j 4274 <__rom_size-0x160d8>
     f08:	00 00 0d ac 	l.j 45b8 <__rom_size-0x15d94>
     f0c:	00 02 30 9f 	l.j 8d188 <__ram_length+0xd188>
     f10:	00 00 0d ac 	l.j 45c0 <__rom_size-0x15d8c>
     f14:	00 00 0e 8b 	l.j 4940 <__rom_size-0x15a0c>
     f18:	00 01 55 00 	l.j 56318 <__rom_size+0x3bfcc>
     f1c:	00 0e dc 00 	l.j 3b7f1c <__ram_length+0x337f1c>
     f20:	00 0e fc 00 	l.j 3bff20 <__ram_length+0x33ff20>
     f24:	01 55 00 00 	l.j 5540f24 <__stack+0x50c0f28>
     f28:	0e fc 00 00 	l.bnf fbf00f28 <__stack+0xfba80f2c>
     f2c:	0f 08 00 01 	l.bnf fc200f30 <__stack+0xfbd80f34>
     f30:	53 00 00 0f 	.word 0x5300000f
     f34:	08 00 00 11 	.word 0x08000011
     f38:	0c 00 01 55 	l.bnf 148c <__rom_size-0x18ec0>
     f3c:	00 00 11 0c 	l.j 536c <__rom_size-0x14fe0>
     f40:	00 00 12 ff 	l.j 5b3c <__rom_size-0x14810>
     f44:	00 01 55 00 	l.j 56344 <__rom_size+0x3bff8>
     f48:	00 13 48 00 	l.j 4d2f48 <__stack+0x52f4c>
     f4c:	00 13 68 00 	l.j 4daf4c <__stack+0x5af50>
     f50:	01 55 00 00 	l.j 5540f50 <__stack+0x50c0f54>
     f54:	13 68 00 00 	l.bf fda00f54 <__stack+0xfd580f58>
     f58:	13 74 00 01 	l.bf fdd00f5c <__stack+0xfd880f60>
     f5c:	53 00 00 13 	.word 0x53000013
     f60:	74 00 00 16 	l.cust2 
     f64:	38 00 01 55 	.word 0x38000155
	...
     f70:	00 00 0d a8 	l.j 4610 <__rom_size-0x15d3c>
     f74:	00 00 0d ac 	l.j 4624 <__rom_size-0x15d28>
     f78:	00 06 0c 00 	l.j 183f78 <__ram_length+0x103f78>
     f7c:	08 14 18 9f 	.word 0x0814189f
     f80:	00 00 0f dc 	l.j 4ef0 <__rom_size-0x1545c>
     f84:	00 00 10 cc 	l.j 52b4 <__rom_size-0x15098>
     f88:	00 03 80 02 	l.j e0f90 <__ram_length+0x60f90>
     f8c:	9f 00 00 11 	l.addi r24,r0,0x11
     f90:	0c 00 00 11 	l.bnf fd4 <__rom_size-0x19378>
     f94:	14 00 01 60 	.word 0x14000160
     f98:	00 00 12 1c 	l.j 5808 <__rom_size-0x14b44>
     f9c:	00 00 12 20 	l.j 581c <__rom_size-0x14b30>
     fa0:	00 06 0c 00 	l.j 183fa0 <__ram_length+0x103fa0>
     fa4:	08 64 18 9f 	.word 0x0864189f
     fa8:	00 00 14 48 	l.j 60c8 <__rom_size-0x14284>
     fac:	00 00 14 60 	l.j 612c <__rom_size-0x14220>
     fb0:	00 03 80 02 	l.j e0fb8 <__ram_length+0x60fb8>
     fb4:	9f 00 00 00 	l.addi r24,r0,0x0
     fb8:	00 00 00 00 	l.j fb8 <__rom_size-0x19394>
     fbc:	00 00 00 0d 	l.j ff0 <__rom_size-0x1935c>
     fc0:	44 00 00 0d 	l.jr r0
     fc4:	78 00 06 0c 	l.cust3 
     fc8:	00 08 14 18 	l.j 206028 <__ram_length+0x186028>
     fcc:	9f 00 00 0d 	l.addi r24,r0,0xd
     fd0:	78 00 00 0d 	l.cust3 
     fd4:	8c 00 04 0a 	l.lbz r0,0x40a(r0)
     fd8:	08 14 9f 00 	.word 0x08149f00
     fdc:	00 0d 8c 00 	l.j 363fdc <__ram_length+0x2e3fdc>
     fe0:	00 0d 98 00 	l.j 366fe0 <__ram_length+0x2e6fe0>
     fe4:	02 38 9f 00 	l.j f8e28be4 <__stack+0xf89a8be8>
     fe8:	00 0d 98 00 	l.j 366fe8 <__ram_length+0x2e6fe8>
     fec:	00 16 38 00 	l.j 58efec <__stack+0x10eff0>
     ff0:	02 30 9f 00 	l.j f8c28bf0 <__stack+0xf87a8bf4>
	...
     ffc:	00 0e 8c 00 	l.j 3a3ffc <__ram_length+0x323ffc>
    1000:	00 0e b4 00 	l.j 3ae000 <__ram_length+0x32e000>
    1004:	01 60 00 00 	l.j 5801004 <__stack+0x5381008>
    1008:	0e b4 00 00 	l.bnf fad01008 <__stack+0xfa88100c>
    100c:	0e b8 00 01 	l.bnf fae01010 <__stack+0xfa981014>
    1010:	53 00 00 0e 	.word 0x5300000e
    1014:	c4 00 00 0e 	.word 0xc400000e
    1018:	c8 00 01 53 	.word 0xc8000153
	...
    1024:	00 00 10 cc 	l.j 5354 <__rom_size-0x14ff8>
    1028:	00 00 10 d4 	l.j 5378 <__rom_size-0x14fd4>
    102c:	00 01 62 00 	l.j 5982c <__rom_size+0x3f4e0>
    1030:	00 10 d4 00 	l.j 436030 <_stack+0x14370>
    1034:	00 10 dc 00 	l.j 438034 <_stack+0x16374>
    1038:	05 82 00 38 	l.jal 6081118 <__stack+0x5c0111c>
    103c:	26 9f 00 00 	l.rfe 
    1040:	10 dc 00 00 	l.bf 3701040 <__stack+0x3281044>
    1044:	10 e8 00 05 	l.bf 3a01058 <__stack+0x358105c>
    1048:	80 00 38 26 	l.ld r0,0x3826(r0)
    104c:	9f 00 00 10 	l.addi r24,r0,0x10
    1050:	e8 00 00 10 	.word 0xe8000010
    1054:	f0 00 02 38 	l.cust5 r0,r0,r0,0x11,0x18
    1058:	9f 00 00 10 	l.addi r24,r0,0x10
    105c:	f0 00 00 11 	l.cust5 r0,r0,r0,0x0,0x11
    1060:	0c 00 02 30 	l.bnf 1920 <__rom_size-0x18a2c>
    1064:	9f 00 00 11 	l.addi r24,r0,0x11
    1068:	14 00 00 16 	.word 0x14000016
    106c:	38 00 02 30 	.word 0x38000230
    1070:	9f 00 00 00 	l.addi r24,r0,0x0
    1074:	00 00 00 00 	l.j 1074 <__rom_size-0x192d8>
    1078:	00 00 00 11 	l.j 10bc <__rom_size-0x19290>
    107c:	dc 00 00 12 	l.sh 0x12(r0),r0
    1080:	00 00 06 0c 	l.j 28b0 <__rom_size-0x17a9c>
    1084:	00 08 64 18 	l.j 21a0e4 <__ram_length+0x19a0e4>
    1088:	9f 00 00 12 	l.addi r24,r0,0x12
    108c:	00 00 00 12 	l.j 10d4 <__rom_size-0x19278>
    1090:	0c 00 04 0a 	l.bnf 20b8 <__rom_size-0x18294>
    1094:	08 64 9f 00 	.word 0x08649f00
    1098:	00 12 0c 00 	l.j 484098 <__stack+0x409c>
    109c:	00 12 14 00 	l.j 48609c <__stack+0x60a0>
    10a0:	02 38 9f 00 	l.j f8e28ca0 <__stack+0xf89a8ca4>
    10a4:	00 12 14 00 	l.j 4860a4 <__stack+0x60a8>
    10a8:	00 16 38 00 	l.j 58f0a8 <__stack+0x10f0ac>
    10ac:	02 30 9f 00 	l.j f8c28cac <__stack+0xf87a8cb0>
	...
    10b8:	00 13 00 00 	l.j 4c10b8 <__stack+0x410bc>
    10bc:	00 13 20 00 	l.j 4c90bc <__stack+0x490c0>
    10c0:	01 60 00 00 	l.j 58010c0 <__stack+0x53810c4>
    10c4:	13 20 00 00 	l.bf fc8010c4 <__stack+0xfc3810c8>
    10c8:	13 24 00 01 	l.bf fc9010cc <__stack+0xfc4810d0>
    10cc:	53 00 00 13 	.word 0x53000013
    10d0:	30 00 00 13 	.word 0x30000013
    10d4:	34 00 01 53 	.word 0x34000153
	...
    10e0:	00 00 14 60 	l.j 6260 <__rom_size-0x140ec>
    10e4:	00 00 15 38 	l.j 65c4 <__rom_size-0x13d88>
    10e8:	00 01 62 00 	l.j 598e8 <__rom_size+0x3f59c>
    10ec:	00 15 38 00 	l.j 54f0ec <__stack+0xcf0f0>
    10f0:	00 15 40 00 	l.j 5510f0 <__stack+0xd10f4>
    10f4:	05 82 00 38 	l.jal 60811d4 <__stack+0x5c011d8>
    10f8:	26 9f 00 00 	l.rfe 
    10fc:	15 40 00 00 	l.nop 0x0
    1100:	15 4c 00 05 	l.nop 0x5
    1104:	80 00 38 26 	l.ld r0,0x3826(r0)
    1108:	9f 00 00 15 	l.addi r24,r0,0x15
    110c:	4c 00 00 15 	l.maci r0,0x15
    1110:	54 00 02 38 	.word 0x54000238
    1114:	9f 00 00 15 	l.addi r24,r0,0x15
    1118:	54 00 00 15 	.word 0x54000015
    111c:	70 00 02 30 	l.cust1 
    1120:	9f 00 00 15 	l.addi r24,r0,0x15
    1124:	70 00 00 16 	l.cust1 
    1128:	38 00 02 30 	.word 0x38000230
    112c:	9f 00 00 00 	l.addi r24,r0,0x0
    1130:	00 00 00 00 	l.j 1130 <__rom_size-0x1921c>
    1134:	00 00 00 16 	l.j 118c <__rom_size-0x191c0>
    1138:	6c 00 00 16 	.word 0x6c000016
    113c:	9c 00 02 71 	l.addi r0,r0,0x271
    1140:	00 00 00 16 	l.j 1198 <__rom_size-0x191b4>
    1144:	9c 00 00 1a 	l.addi r0,r0,0x1a
    1148:	74 00 03 71 	l.cust2 
    114c:	dc 06 00 00 	l.sh 0x0(r6),r0
	...
    1158:	17 38 00 00 	.word 0x17380000
    115c:	17 40 00 02 	.word 0x17400002
    1160:	30 9f 00 00 	.word 0x309f0000
	...
    116c:	16 6c 00 00 	.word 0x166c0000
    1170:	17 40 00 02 	.word 0x17400002
    1174:	30 9f 00 00 	.word 0x309f0000
    1178:	18 68 00 00 	l.movhi r3,0x0
    117c:	18 80 00 01 	l.movhi r4,0x1
    1180:	55 00 00 18 	.word 0x55000018
    1184:	80 00 00 18 	l.ld r0,0x18(r0)
    1188:	90 00 01 53 	l.lbs r0,0x153(r0)
    118c:	00 00 18 90 	l.j 73cc <__rom_size-0x12f80>
    1190:	00 00 18 94 	l.j 73e0 <__rom_size-0x12f6c>
    1194:	00 09 73 00 	l.j 25dd94 <__ram_length+0x1ddd94>
    1198:	03 00 41 a4 	l.j fc011828 <__stack+0xfbb9182c>
    119c:	dc 1c 9f 00 	l.sh 0x700(r28),r19
	...
    11a8:	00 17 38 00 	l.j 5cf1a8 <__stack+0x14f1ac>
    11ac:	00 17 40 00 	l.j 5d11ac <__stack+0x1511b0>
    11b0:	06 0c 00 08 	l.jal f83011d0 <__stack+0xf7e811d4>
    11b4:	a0 00 9f 00 	l.addic r0,r0,0xffff9f00
    11b8:	00 17 40 00 	l.j 5d11b8 <__stack+0x1511bc>
    11bc:	00 18 68 00 	l.j 61b1bc <__stack+0x19b1c0>
    11c0:	01 60 00 00 	l.j 58011c0 <__stack+0x53811c4>
    11c4:	19 5c 00 00 	l.movhi r10,0x0
    11c8:	1a 44 00 03 	l.movhi r18,0x3
    11cc:	80 02 9f 00 	l.ld r0,0xffff9f00(r2)
	...
    11d8:	00 16 d0 00 	l.j 5b51d8 <__stack+0x1351dc>
    11dc:	00 17 04 00 	l.j 5c21dc <__stack+0x1421e0>
    11e0:	06 0c 00 08 	l.jal f8301200 <__stack+0xf7e81204>
    11e4:	a0 00 9f 00 	l.addic r0,r0,0xffff9f00
    11e8:	00 17 04 00 	l.j 5c21e8 <__stack+0x1421ec>
    11ec:	00 17 18 00 	l.j 5c71ec <__stack+0x1471f0>
    11f0:	04 0a 08 a0 	l.jal 283470 <__ram_length+0x203470>
    11f4:	9f 00 00 17 	l.addi r24,r0,0x17
    11f8:	18 00 00 17 	l.movhi r0,0x17
    11fc:	2c 00 02 38 	.word 0x2c000238
    1200:	9f 00 00 17 	l.addi r24,r0,0x17
    1204:	2c 00 00 1a 	.word 0x2c00001a
    1208:	44 00 02 30 	l.jr r0
    120c:	9f 00 00 00 	l.addi r24,r0,0x0
    1210:	00 00 00 00 	l.j 1210 <__rom_size-0x1913c>
    1214:	00 00 00 18 	l.j 1274 <__rom_size-0x190d8>
    1218:	20 00 00 18 	l.sys 0x18
    121c:	40 00 01 60 	.word 0x40000160
    1220:	00 00 18 40 	l.j 7320 <__rom_size-0x1302c>
    1224:	00 00 18 44 	l.j 7334 <__rom_size-0x13018>
    1228:	00 01 53 00 	l.j 55e28 <__rom_size+0x3badc>
    122c:	00 18 44 00 	l.j 61222c <__stack+0x192230>
    1230:	00 18 50 00 	l.j 615230 <__stack+0x195234>
    1234:	05 80 00 38 	l.jal 6001314 <__stack+0x5b81318>
    1238:	26 9f 00 00 	l.rfe 
    123c:	18 50 00 00 	l.movhi r2,0x0
    1240:	18 54 00 01 	l.movhi r2,0x1
    1244:	53 00 00 18 	.word 0x53000018
    1248:	54 00 00 18 	.word 0x54000018
    124c:	5c 00 05 80 	.word 0x5c000580
    1250:	00 40 26 9f 	l.j 100accc <__stack+0xb8acd0>
	...
    125c:	00 00 1a 74 	l.j 7c2c <__rom_size-0x12720>
    1260:	00 00 1a a4 	l.j 7cf0 <__rom_size-0x1265c>
    1264:	00 02 71 00 	l.j 9d664 <__ram_length+0x1d664>
    1268:	00 00 1a a4 	l.j 7cf8 <__rom_size-0x12654>
    126c:	00 00 29 7c 	l.j b85c <__rom_size-0xeaf0>
    1270:	00 03 71 dc 	l.j dd9e0 <__ram_length+0x5d9e0>
    1274:	06 00 00 00 	l.jal f8001274 <__stack+0xf7b81278>
    1278:	00 00 00 00 	l.j 1278 <__rom_size-0x190d4>
    127c:	00 00 00 1b 	l.j 12e8 <__rom_size-0x19064>
    1280:	44 00 00 1b 	l.jr r0
    1284:	4c 00 02 30 	l.maci r0,0x230
    1288:	9f 00 00 00 	l.addi r24,r0,0x0
    128c:	00 00 00 00 	l.j 128c <__rom_size-0x190c0>
    1290:	00 00 00 1a 	l.j 12f8 <__rom_size-0x19054>
    1294:	74 00 00 1b 	l.cust2 
    1298:	4c 00 02 30 	l.maci r0,0x230
    129c:	9f 00 00 1c 	l.addi r24,r0,0x1c
    12a0:	74 00 00 1c 	l.cust2 
    12a4:	8c 00 01 55 	l.lbz r0,0x155(r0)
    12a8:	00 00 1c 8c 	l.j 84d8 <__rom_size-0x11e74>
    12ac:	00 00 1c 9c 	l.j 851c <__rom_size-0x11e30>
    12b0:	00 01 53 00 	l.j 55eb0 <__rom_size+0x3bb64>
    12b4:	00 1c 9c 00 	l.j 7282b4 <__stack+0x2a82b8>
    12b8:	00 1c a0 00 	l.j 7292b8 <__stack+0x2a92bc>
    12bc:	09 73 00 03 	.word 0x09730003
    12c0:	00 41 a4 dc 	l.j 106a630 <__stack+0xbea634>
    12c4:	1c 9f 00 00 	.word 0x1c9f0000
    12c8:	1e 58 00 00 	.word 0x1e580000
    12cc:	29 4c 00 02 	.word 0x294c0002
    12d0:	30 9f 00 00 	.word 0x309f0000
	...
    12dc:	1b 44 00 00 	l.movhi r26,0x0
    12e0:	1b 4c 00 06 	l.movhi r26,0x6
    12e4:	0c 00 08 e6 	l.bnf 367c <__rom_size-0x16cd0>
    12e8:	80 9f 00 00 	l.ld r4,0x0(r31)
    12ec:	1b 4c 00 00 	l.movhi r26,0x0
    12f0:	1c 74 00 01 	.word 0x1c740001
    12f4:	60 00 00 1d 	.word 0x6000001d
    12f8:	68 00 00 1e 	.word 0x6800001e
    12fc:	58 00 03 80 	.word 0x58000380
    1300:	02 9f 00 00 	l.j fa7c1300 <__stack+0xfa341304>
	...
    130c:	1a dc 00 00 	l.movhi r22,0x0
    1310:	1b 10 00 06 	l.movhi r24,0x6
    1314:	0c 00 08 e6 	l.bnf 36ac <__rom_size-0x16ca0>
    1318:	80 9f 00 00 	l.ld r4,0x0(r31)
    131c:	1b 10 00 00 	l.movhi r24,0x0
    1320:	1b 24 00 04 	l.movhi r25,0x4
    1324:	0a 08 e6 9f 	.word 0x0a08e69f
    1328:	00 00 1b 24 	l.j 7fb8 <__rom_size-0x12394>
    132c:	00 00 1b 38 	l.j 800c <__rom_size-0x12340>
    1330:	00 02 38 9f 	l.j 8f5ac <__ram_length+0xf5ac>
    1334:	00 00 1b 38 	l.j 8014 <__rom_size-0x12338>
    1338:	00 00 1e 58 	l.j 8c98 <__rom_size-0x116b4>
    133c:	00 02 30 9f 	l.j 8d5b8 <__ram_length+0xd5b8>
	...
    1348:	00 00 1c 2c 	l.j 83f8 <__rom_size-0x11f54>
    134c:	00 00 1c 4c 	l.j 847c <__rom_size-0x11ed0>
    1350:	00 01 60 00 	l.j 59350 <__rom_size+0x3f004>
    1354:	00 1c 4c 00 	l.j 714354 <__stack+0x294358>
    1358:	00 1c 50 00 	l.j 715358 <__stack+0x29535c>
    135c:	01 53 00 00 	l.j 54c135c <__stack+0x5041360>
    1360:	1c 5c 00 00 	.word 0x1c5c0000
    1364:	1c 60 00 01 	.word 0x1c600001
    1368:	53 00 00 00 	.word 0x53000000
    136c:	00 00 00 00 	l.j 136c <__rom_size-0x18fe0>
    1370:	00 00 00 1e 	l.j 13e8 <__rom_size-0x18f64>
    1374:	58 00 00 1e 	.word 0x5800001e
    1378:	88 00 06 0c 	l.lws r0,0x60c(r0)
    137c:	00 08 e6 80 	l.j 23ad7c <__ram_length+0x1bad7c>
    1380:	9f 00 00 1e 	l.addi r24,r0,0x1e
    1384:	88 00 00 1e 	l.lws r0,0x1e(r0)
    1388:	90 00 04 0a 	l.lbs r0,0x40a(r0)
    138c:	08 e6 9f 00 	.word 0x08e69f00
    1390:	00 1e 90 00 	l.j 7a5390 <__stack+0x325394>
    1394:	00 1e 9c 00 	l.j 7a8394 <__stack+0x328398>
    1398:	02 38 9f 00 	l.j f8e28f98 <__stack+0xf89a8f9c>
    139c:	00 1e 9c 00 	l.j 7a839c <__stack+0x3283a0>
    13a0:	00 29 4c 00 	l.j a543a0 <__stack+0x5d43a4>
    13a4:	02 30 9f 00 	l.j f8c28fa4 <__stack+0xf87a8fa8>
	...
    13b0:	00 29 7c 00 	l.j a603b0 <__stack+0x5e03b4>
    13b4:	00 29 9c 00 	l.j a683b4 <__stack+0x5e83b8>
    13b8:	02 71 00 00 	l.j f9c413b8 <__stack+0xf97c13bc>
    13bc:	00 29 9c 00 	l.j a683bc <__stack+0x5e83c0>
    13c0:	00 29 b8 00 	l.j a6f3c0 <__stack+0x5ef3c4>
    13c4:	02 71 04 00 	l.j f9c423c4 <__stack+0xf97c23c8>
	...
    13d0:	00 29 7c 00 	l.j a603d0 <__stack+0x5e03d4>
    13d4:	00 29 98 00 	l.j a673d4 <__stack+0x5e73d8>
    13d8:	01 53 00 00 	l.j 54c13d8 <__stack+0x50413dc>
	...
    13e4:	29 b8 00 00 	.word 0x29b80000
    13e8:	29 d8 00 02 	.word 0x29d80002
    13ec:	71 00 00 00 	l.cust1 
    13f0:	29 d8 00 00 	.word 0x29d80000
    13f4:	2a 0c 00 02 	.word 0x2a0c0002
    13f8:	71 0c 00 00 	l.cust1 
	...
    1404:	29 b8 00 00 	.word 0x29b80000
    1408:	29 c4 00 01 	.word 0x29c40001
    140c:	53 00 00 00 	.word 0x53000000
    1410:	00 00 00 00 	l.j 1410 <__rom_size-0x18f3c>
    1414:	00 00 00 2a 	l.j 14bc <__rom_size-0x18e90>
    1418:	0c 00 00 2a 	l.bnf 14c0 <__rom_size-0x18e8c>
    141c:	24 00 01 53 	l.rfe 
    1420:	00 00 2a 24 	l.j bcb0 <__rom_size-0xe69c>
    1424:	00 00 2a 30 	l.j bce4 <__rom_size-0xe668>
    1428:	00 03 73 7f 	l.j de224 <__ram_length+0x5e224>
    142c:	9f 00 00 2a 	l.addi r24,r0,0x2a
    1430:	30 00 00 2a 	.word 0x3000002a
    1434:	4c 00 01 53 	l.maci r0,0x153
	...
    1440:	00 00 2a 0c 	l.j bc70 <__rom_size-0xe6dc>
    1444:	00 00 2a 18 	l.j bca4 <__rom_size-0xe6a8>
    1448:	00 02 3b 9f 	l.j 902c4 <__ram_length+0x102c4>
    144c:	00 00 2a 18 	l.j bcac <__rom_size-0xe6a0>
    1450:	00 00 2a 30 	l.j bd10 <__rom_size-0xe63c>
    1454:	00 01 54 00 	l.j 56454 <__rom_size+0x3c108>
    1458:	00 2a 30 00 	l.j a8d458 <__stack+0x60d45c>
    145c:	00 2a 34 00 	l.j a8e45c <__stack+0x60e460>
    1460:	01 54 00 00 	l.j 5501460 <__stack+0x5081464>
    1464:	2a 38 00 00 	.word 0x2a380000
    1468:	2a 4c 00 01 	.word 0x2a4c0001
    146c:	54 00 00 00 	.word 0x54000000
    1470:	00 00 00 00 	l.j 1470 <__rom_size-0x18edc>
    1474:	00 00 00 2a 	l.j 151c <__rom_size-0x18e30>
    1478:	0c 00 00 2a 	l.bnf 1520 <__rom_size-0x18e2c>
    147c:	18 00 02 30 	l.movhi r0,0x230
    1480:	9f 00 00 2a 	l.addi r24,r0,0x2a
    1484:	18 00 00 2a 	l.movhi r0,0x2a
    1488:	20 00 01 5b 	l.sys 0x15b
    148c:	00 00 2a 30 	l.j bd4c <__rom_size-0xe600>
    1490:	00 00 2a 4c 	l.j bdc0 <__rom_size-0xe58c>
    1494:	00 01 5b 00 	l.j 58094 <__rom_size+0x3dd48>
	...
    14a0:	00 2a 4c 00 	l.j a944a0 <__stack+0x6144a4>
    14a4:	00 2a 74 00 	l.j a9e4a4 <__stack+0x61e4a8>
    14a8:	02 71 00 00 	l.j f9c414a8 <__stack+0xf97c14ac>
    14ac:	00 2a 74 00 	l.j a9e4ac <__stack+0x61e4b0>
    14b0:	00 2b a0 00 	l.j ae94b0 <__stack+0x6694b4>
    14b4:	02 71 24 00 	l.j f9c4a4b4 <__stack+0xf97ca4b8>
	...
    14c0:	00 2a 4c 00 	l.j a944c0 <__stack+0x6144c4>
    14c4:	00 2a ec 00 	l.j abc4c4 <__stack+0x63c4c8>
    14c8:	01 53 00 00 	l.j 54c14c8 <__stack+0x50414cc>
	...
    14d4:	2a 4c 00 00 	.word 0x2a4c0000
    14d8:	2a ec 00 01 	.word 0x2aec0001
    14dc:	54 00 00 00 	.word 0x54000000
    14e0:	00 00 00 00 	l.j 14e0 <__rom_size-0x18e6c>
    14e4:	00 00 00 2a 	l.j 158c <__rom_size-0x18dc0>
    14e8:	4c 00 00 2a 	l.maci r0,0x2a
    14ec:	ec 00 01 55 	.word 0xec000155
	...
    14f8:	00 00 2a 4c 	l.j be28 <__rom_size-0xe524>
    14fc:	00 00 2a ec 	l.j c0ac <__rom_size-0xe2a0>
    1500:	00 01 56 00 	l.j 56d00 <__rom_size+0x3c9b4>
	...
    150c:	00 2a c0 00 	l.j ab150c <__stack+0x631510>
    1510:	00 2a c8 00 	l.j ab3510 <__stack+0x633514>
    1514:	01 53 00 00 	l.j 54c1514 <__stack+0x5041518>
    1518:	2a d0 00 00 	.word 0x2ad00000
    151c:	2b 74 00 01 	.word 0x2b740001
    1520:	64 00 00 00 	.word 0x64000000
    1524:	00 00 00 00 	l.j 1524 <__rom_size-0x18e28>
    1528:	00 00 00 2a 	l.j 15d0 <__rom_size-0x18d7c>
    152c:	e4 00 00 2a 	l.sfeq r0,r0
    1530:	e8 00 01 55 	.word 0xe8000155
    1534:	00 00 2a e8 	l.j c0d4 <__rom_size-0xe278>
    1538:	00 00 2b 74 	l.j c308 <__rom_size-0xe044>
    153c:	00 01 66 00 	l.j 5ad3c <__rom_size+0x409f0>
	...
    1548:	00 2a b0 00 	l.j aad548 <__stack+0x62d54c>
    154c:	00 2a c0 00 	l.j ab154c <__stack+0x631550>
    1550:	04 0a 01 04 	l.jal 281960 <__ram_length+0x201960>
    1554:	9f 00 00 2a 	l.addi r24,r0,0x2a
    1558:	c0 00 00 2a 	l.mtspr r0,r0,0x2a
    155c:	c8 00 02 3b 	.word 0xc800023b
    1560:	9f 00 00 2a 	l.addi r24,r0,0x2a
    1564:	c8 00 00 2a 	.word 0xc800002a
    1568:	d0 00 04 0a 	l.sd 0x40a(r0),r0
    156c:	01 04 9f 00 	l.j 412916c <__stack+0x3ca9170>
    1570:	00 2a d0 00 	l.j ab5570 <__stack+0x635574>
    1574:	00 2a e4 00 	l.j aba574 <__stack+0x63a578>
    1578:	01 60 00 00 	l.j 5801578 <__stack+0x538157c>
    157c:	2a e4 00 00 	.word 0x2ae40000
    1580:	2a e8 00 02 	.word 0x2ae80002
    1584:	3b 9f 00 00 	.word 0x3b9f0000
    1588:	2a e8 00 00 	.word 0x2ae80000
    158c:	2b 74 00 01 	.word 0x2b740001
    1590:	60 00 00 00 	.word 0x60000000
    1594:	00 00 00 00 	l.j 1594 <__rom_size-0x18db8>
    1598:	00 00 00 2a 	l.j 1640 <__rom_size-0x18d0c>
    159c:	e8 00 00 2a 	.word 0xe800002a
    15a0:	ec 00 01 60 	.word 0xec000160
	...
    15ac:	00 00 2a e8 	l.j c14c <__rom_size-0xe200>
    15b0:	00 00 2a ec 	l.j c160 <__rom_size-0xe1ec>
    15b4:	00 01 66 00 	l.j 5adb4 <__rom_size+0x40a68>
	...
    15c0:	00 2a e8 00 	l.j abb5c0 <__stack+0x63b5c4>
    15c4:	00 2a ec 00 	l.j abc5c4 <__stack+0x63c5c8>
    15c8:	01 64 00 00 	l.j 59015c8 <__stack+0x54815cc>
	...
    15d4:	2a f4 00 00 	.word 0x2af40000
    15d8:	2b 24 00 01 	.word 0x2b240001
    15dc:	68 00 00 00 	.word 0x68000000
    15e0:	00 00 00 00 	l.j 15e0 <__rom_size-0x18d6c>
    15e4:	00 00 00 2a 	l.j 168c <__rom_size-0x18cc0>
    15e8:	f4 00 00 2a 	l.cust6 
    15ec:	fb 00 05 86 	l.cust7 
    15f0:	00 72 00 22 	l.j 1c81678 <__stack+0x180167c>
	...
    15fc:	00 00 2b 10 	l.j c23c <__rom_size-0xe110>
    1600:	00 00 2b 5c 	l.j c370 <__rom_size-0xdfdc>
    1604:	00 01 5b 00 	l.j 58204 <__rom_size+0x3deb8>
	...
    1610:	00 2b c0 00 	l.j af1610 <__stack+0x671614>
    1614:	00 2b e4 00 	l.j afa614 <__stack+0x67a618>
    1618:	02 71 00 00 	l.j f9c41618 <__stack+0xf97c161c>
    161c:	00 2b e4 00 	l.j afa61c <__stack+0x67a620>
    1620:	00 2c 28 00 	l.j b0b620 <__stack+0x68b624>
    1624:	02 71 04 00 	l.j f9c42624 <__stack+0xf97c2628>
	...
    1630:	00 2b e8 00 	l.j afb630 <__stack+0x67b634>
    1634:	00 2b f0 00 	l.j afd634 <__stack+0x67d638>
    1638:	01 5b 00 00 	l.j 56c1638 <__stack+0x524163c>
	...
    1644:	2c 28 00 00 	.word 0x2c280000
    1648:	2c 50 00 02 	.word 0x2c500002
    164c:	71 00 00 00 	l.cust1 
    1650:	2c 50 00 00 	.word 0x2c500000
    1654:	2d 00 00 02 	.word 0x2d000002
    1658:	71 04 00 00 	l.cust1 
	...
    1664:	2c 28 00 00 	.word 0x2c280000
    1668:	2c 9c 00 01 	.word 0x2c9c0001
    166c:	53 00 00 00 	.word 0x53000000
    1670:	00 00 00 00 	l.j 1670 <__rom_size-0x18cdc>
    1674:	00 00 00 2d 	l.j 1728 <__rom_size-0x18c24>
    1678:	00 00 00 2d 	l.j 172c <__rom_size-0x18c20>
    167c:	28 00 02 71 	lv.sub.b r0,r0,r0
    1680:	00 00 00 2d 	l.j 1734 <__rom_size-0x18c18>
    1684:	28 00 00 2d 	.word 0x2800002d
    1688:	68 00 02 71 	.word 0x68000271
    168c:	04 00 00 00 	l.jal 168c <__rom_size-0x18cc0>
    1690:	00 00 00 00 	l.j 1690 <__rom_size-0x18cbc>
    1694:	00 00 00 2d 	l.j 1748 <__rom_size-0x18c04>
    1698:	00 00 00 2d 	l.j 174c <__rom_size-0x18c00>
    169c:	34 00 01 53 	.word 0x34000153
	...
    16a8:	00 00 2d 68 	l.j cc48 <__rom_size-0xd704>
    16ac:	00 00 2d 94 	l.j ccfc <__rom_size-0xd650>
    16b0:	00 02 71 00 	l.j 9dab0 <__ram_length+0x1dab0>
    16b4:	00 00 2d 94 	l.j cd04 <__rom_size-0xd648>
    16b8:	00 00 2e 18 	l.j cf18 <__rom_size-0xd434>
    16bc:	00 02 71 18 	l.j 9db1c <__ram_length+0x1db1c>
	...
    16c8:	00 00 2d 68 	l.j cc68 <__rom_size-0xd6e4>
    16cc:	00 00 2d 90 	l.j cd0c <__rom_size-0xd640>
    16d0:	00 01 53 00 	l.j 562d0 <__rom_size+0x3bf84>
    16d4:	00 2d 90 00 	l.j b656d4 <__stack+0x6e56d8>
    16d8:	00 2e 04 00 	l.j b826d8 <__stack+0x7026dc>
    16dc:	01 52 00 00 	l.j 54816dc <__stack+0x50016e0>
    16e0:	2e 04 00 00 	.word 0x2e040000
    16e4:	2e 10 00 03 	.word 0x2e100003
    16e8:	84 7c 9f 00 	l.lwz r3,0xffff9f00(r28)
	...
    16f4:	00 2d 88 00 	l.j b636f4 <__stack+0x6e36f8>
    16f8:	00 2e 10 00 	l.j b856f8 <__stack+0x7056fc>
    16fc:	01 64 00 00 	l.j 59016fc <__stack+0x5481700>
	...
    1708:	2d 8c 00 00 	.word 0x2d8c0000
    170c:	2d e8 00 01 	.word 0x2de80001
    1710:	62 00 00 2d 	.word 0x6200002d
    1714:	e8 00 00 2e 	.word 0xe800002e
    1718:	10 00 01 62 	l.bf 1ca0 <__rom_size-0x186ac>
	...
    1724:	00 00 2d a0 	l.j cda4 <__rom_size-0xd5a8>
    1728:	00 00 2d cc 	l.j ce58 <__rom_size-0xd4f4>
    172c:	00 01 53 00 	l.j 5632c <__rom_size+0x3bfe0>
    1730:	00 2d cc 00 	l.j b74730 <__stack+0x6f4734>
    1734:	00 2d d4 00 	l.j b76734 <__stack+0x6f6738>
    1738:	01 60 00 00 	l.j 5801738 <__stack+0x538173c>
    173c:	2d e8 00 00 	.word 0x2de80000
    1740:	2e 0c 00 01 	.word 0x2e0c0001
    1744:	60 00 00 00 	.word 0x60000000
    1748:	00 00 00 00 	l.j 1748 <__rom_size-0x18c04>
    174c:	00 00 00 2d 	l.j 1800 <__rom_size-0x18b4c>
    1750:	98 00 00 2d 	l.lhs r0,0x2d(r0)
    1754:	a8 00 06 0c 	l.ori r0,r0,0x60c
    1758:	00 01 00 00 	l.j 41758 <__rom_size+0x2740c>
    175c:	9f 00 00 2d 	l.addi r24,r0,0x2d
    1760:	a8 00 00 2d 	l.ori r0,r0,0x2d
    1764:	b0 00 01 5e 	l.muli r0,r0,0x15e
    1768:	00 00 2d b0 	l.j ce28 <__rom_size-0xd524>
    176c:	00 00 2d b8 	l.j ce4c <__rom_size-0xd500>
    1770:	00 01 5e 00 	l.j 58f70 <__rom_size+0x3ec24>
    1774:	00 2d b8 00 	l.j b6f774 <__stack+0x6ef778>
    1778:	00 2e 08 00 	l.j b83778 <__stack+0x70377c>
    177c:	01 5e 00 00 	l.j 578177c <__stack+0x5301780>
	...
    1788:	2e 18 00 00 	.word 0x2e180000
    178c:	2e 38 00 02 	.word 0x2e380002
    1790:	71 00 00 00 	l.cust1 
    1794:	2e 38 00 00 	.word 0x2e380000
    1798:	2e bc 00 02 	.word 0x2ebc0002
    179c:	71 04 00 00 	l.cust1 
	...
    17a8:	2e 18 00 00 	.word 0x2e180000
    17ac:	2e b0 00 01 	.word 0x2eb00001
    17b0:	53 00 00 2e 	.word 0x5300002e
    17b4:	b0 00 00 2e 	l.muli r0,r0,0x2e
    17b8:	bc 00 03 73 	l.sfeqi r0,0x373
    17bc:	7c 9f 00 00 	l.cust4 
	...
    17c8:	2e bc 00 00 	.word 0x2ebc0000
    17cc:	2e ec 00 02 	.word 0x2eec0002
    17d0:	71 00 00 00 	l.cust1 
    17d4:	2e ec 00 00 	.word 0x2eec0000
    17d8:	2f 28 00 02 	.word 0x2f280002
    17dc:	71 10 00 00 	l.cust1 
	...
    17e8:	2e bc 00 00 	.word 0x2ebc0000
    17ec:	2e e0 00 01 	.word 0x2ee00001
    17f0:	53 00 00 2e 	.word 0x5300002e
    17f4:	e0 00 00 2e 	l.cmov r0,r0,r0
    17f8:	ff 00 01 54 	l.cust8 
	...
    1804:	00 00 2f 28 	l.j d4a4 <__rom_size-0xcea8>
    1808:	00 00 2f 44 	l.j d518 <__rom_size-0xce34>
    180c:	00 02 71 00 	l.j 9dc0c <__ram_length+0x1dc0c>
    1810:	00 00 2f 44 	l.j d520 <__rom_size-0xce2c>
    1814:	00 00 2f a0 	l.j d694 <__rom_size-0xccb8>
    1818:	00 02 71 0c 	l.j 9dc48 <__ram_length+0x1dc48>
	...
    1824:	00 00 2f 28 	l.j d4c4 <__rom_size-0xce88>
    1828:	00 00 2f 40 	l.j d528 <__rom_size-0xce24>
    182c:	00 01 53 00 	l.j 5642c <__rom_size+0x3c0e0>
    1830:	00 2f 54 00 	l.j bd6830 <__stack+0x756834>
    1834:	00 2f 68 00 	l.j bdb834 <__stack+0x75b838>
    1838:	01 52 00 00 	l.j 5481838 <__stack+0x500183c>
    183c:	2f 68 00 00 	.word 0x2f680000
    1840:	2f a0 00 03 	.word 0x2fa00003
    1844:	76 78 9f 00 	l.cust2 
	...
    1850:	00 2f 3c 00 	l.j bd0850 <__stack+0x750854>
    1854:	00 2f 40 00 	l.j bd1854 <__stack+0x751858>
    1858:	02 73 04 00 	l.j f9cc2858 <__stack+0xf984285c>
    185c:	00 2f 40 00 	l.j bd185c <__stack+0x751860>
    1860:	00 2f 4b 00 	l.j bd4460 <__stack+0x754464>
    1864:	02 72 04 00 	l.j f9c82864 <__stack+0xf9802868>
    1868:	00 2f 4b 00 	l.j bd4468 <__stack+0x75446c>
    186c:	00 2f 98 00 	l.j be786c <__stack+0x767870>
    1870:	01 5e 00 00 	l.j 5781870 <__stack+0x5301874>
	...
    187c:	2f 5c 00 00 	.word 0x2f5c0000
    1880:	2f 68 00 02 	.word 0x2f680002
    1884:	30 9f 00 00 	.word 0x309f0000
    1888:	2f 68 00 00 	.word 0x2f680000
    188c:	2f 70 00 01 	.word 0x2f700001
    1890:	55 00 00 2f 	.word 0x5500002f
    1894:	70 00 00 2f 	l.cust1 
    1898:	74 00 03 75 	l.cust2 
    189c:	7f 9f 00 00 	l.cust4 
    18a0:	2f 74 00 00 	.word 0x2f740000
    18a4:	2f 78 00 01 	.word 0x2f780001
    18a8:	55 00 00 2f 	.word 0x5500002f
    18ac:	78 00 00 2f 	l.cust3 
    18b0:	a0 00 01 55 	l.addic r0,r0,0x155
	...
    18bc:	00 00 2f 3c 	l.j d5ac <__rom_size-0xcda0>
    18c0:	00 00 2f 68 	l.j d660 <__rom_size-0xccec>
    18c4:	00 02 30 9f 	l.j 8db40 <__ram_length+0xdb40>
    18c8:	00 00 2f 68 	l.j d668 <__rom_size-0xcce4>
    18cc:	00 00 2f 74 	l.j d69c <__rom_size-0xccb0>
    18d0:	00 01 54 00 	l.j 568d0 <__rom_size+0x3c584>
    18d4:	00 2f 74 00 	l.j bde8d4 <__stack+0x75e8d8>
    18d8:	00 2f 78 00 	l.j bdf8d8 <__stack+0x75f8dc>
    18dc:	01 54 00 00 	l.j 55018dc <__stack+0x50818e0>
    18e0:	2f 78 00 00 	.word 0x2f780000
    18e4:	2f 88 00 01 	.word 0x2f880001
    18e8:	54 00 00 2f 	.word 0x5400002f
    18ec:	88 00 00 2f 	l.lws r0,0x2f(r0)
    18f0:	a0 00 04 74 	l.addic r0,r0,0x474
    18f4:	00 1f 9f 00 	l.j 7e94f4 <__stack+0x3694f8>
	...
    1900:	00 2f a0 00 	l.j be9900 <__stack+0x769904>
    1904:	00 2f b0 00 	l.j bed904 <__stack+0x76d908>
    1908:	01 53 00 00 	l.j 54c1908 <__stack+0x504190c>
    190c:	2f dc 00 00 	.word 0x2fdc0000
    1910:	2f f0 00 05 	.word 0x2ff00005
    1914:	73 00 31 24 	l.cust1 
    1918:	9f 00 00 2f 	l.addi r24,r0,0x2f
    191c:	f8 00 00 2f 	l.cust7 
    1920:	fc 00 05 73 	l.cust8 
    1924:	00 31 24 9f 	l.j c4aba0 <__stack+0x7caba4>
	...
    1930:	00 00 2f a0 	l.j d7b0 <__rom_size-0xcb9c>
    1934:	00 00 2f b0 	l.j d7f4 <__rom_size-0xcb58>
    1938:	00 02 30 9f 	l.j 8dbb4 <__ram_length+0xdbb4>
    193c:	00 00 2f e4 	l.j d8cc <__rom_size-0xca80>
    1940:	00 00 30 08 	l.j d960 <__rom_size-0xc9ec>
    1944:	00 01 55 00 	l.j 56d44 <__rom_size+0x3c9f8>
	...
    1950:	00 30 08 00 	l.j c03950 <__stack+0x783954>
    1954:	00 30 4c 00 	l.j c14954 <__stack+0x794958>
    1958:	02 71 00 00 	l.j f9c41958 <__stack+0xf97c195c>
    195c:	00 30 4c 00 	l.j c1495c <__stack+0x794960>
    1960:	00 31 34 00 	l.j c4e960 <__stack+0x7ce964>
    1964:	02 71 14 00 	l.j f9c46964 <__stack+0xf97c6968>
	...
    1970:	00 30 08 00 	l.j c03970 <__stack+0x783974>
    1974:	00 30 57 00 	l.j c17574 <__stack+0x797578>
    1978:	01 53 00 00 	l.j 54c1978 <__stack+0x504197c>
	...
    1984:	30 08 00 00 	.word 0x30080000
    1988:	30 44 00 01 	.word 0x30440001
    198c:	54 00 00 30 	.word 0x54000030
    1990:	44 00 00 31 	l.jr r0
    1994:	28 00 01 5e 	lv.nor r0,r0,r0
	...
    19a0:	00 00 30 5c 	l.j db10 <__rom_size-0xc83c>
    19a4:	00 00 30 6b 	l.j db50 <__rom_size-0xc7fc>
    19a8:	00 01 53 00 	l.j 565a8 <__rom_size+0x3c25c>
    19ac:	00 30 74 00 	l.j c1e9ac <__stack+0x79e9b0>
    19b0:	00 30 83 00 	l.j c225b0 <__stack+0x7a25b4>
    19b4:	01 53 00 00 	l.j 54c19b4 <__stack+0x50419b8>
    19b8:	30 8c 00 00 	.word 0x308c0000
    19bc:	30 9b 00 01 	.word 0x309b0001
    19c0:	53 00 00 30 	.word 0x53000030
    19c4:	a0 00 00 30 	l.addic r0,r0,0x30
    19c8:	af 00 01 53 	l.xori r24,r0,0x153
	...
    19d4:	00 00 30 cc 	l.j dd04 <__rom_size-0xc648>
    19d8:	00 00 30 d0 	l.j dd18 <__rom_size-0xc634>
    19dc:	00 03 08 64 	l.j c3b6c <__ram_length+0x43b6c>
    19e0:	9f 00 00 30 	l.addi r24,r0,0x30
    19e4:	d0 00 00 30 	l.sd 0x30(r0),r0
    19e8:	f8 00 01 53 	l.cust7 
    19ec:	00 00 30 f8 	l.j ddcc <__rom_size-0xc580>
    19f0:	00 00 31 00 	l.j ddf0 <__rom_size-0xc55c>
    19f4:	00 03 73 7f 	l.j de7f0 <__ram_length+0x5e7f0>
    19f8:	9f 00 00 31 	l.addi r24,r0,0x31
    19fc:	08 00 00 31 	.word 0x08000031
    1a00:	10 00 03 73 	l.bf 27cc <__rom_size-0x17b80>
    1a04:	7f 9f 00 00 	l.cust4 
	...
    1a10:	31 48 00 00 	.word 0x31480000
    1a14:	31 4c 00 01 	.word 0x314c0001
    1a18:	55 00 00 31 	.word 0x55000031
    1a1c:	4c 00 00 31 	l.maci r0,0x31
    1a20:	68 00 10 03 	.word 0x68001003
    1a24:	00 42 0a 60 	l.j 10843a4 <__stack+0xc043a8>
    1a28:	06 0a c7 5a 	l.jal f82b3790 <__stack+0xf7e33794>
    1a2c:	1a 34 24 75 	l.movhi r17,0x2475
    1a30:	00 27 9f 00 	l.j 9e9630 <__stack+0x569634>
    1a34:	00 31 68 00 	l.j c5ba34 <__stack+0x7dba38>
    1a38:	00 31 70 00 	l.j c5da38 <__stack+0x7dda3c>
    1a3c:	01 5b 00 00 	l.j 56c1a3c <__stack+0x5241a40>
	...
    1a48:	31 70 00 00 	.word 0x31700000
    1a4c:	31 80 00 02 	.word 0x31800002
    1a50:	71 00 00 00 	l.cust1 
    1a54:	31 80 00 00 	.word 0x31800000
    1a58:	33 7c 00 02 	.word 0x337c0002
    1a5c:	71 0c 00 00 	l.cust1 
	...
    1a68:	31 70 00 00 	.word 0x31700000
    1a6c:	31 90 00 01 	.word 0x31900001
    1a70:	53 00 00 00 	.word 0x53000000
    1a74:	00 00 00 00 	l.j 1a74 <__rom_size-0x188d8>
    1a78:	00 00 00 31 	l.j 1b3c <__rom_size-0x18810>
    1a7c:	70 00 00 31 	l.cust1 
    1a80:	88 00 01 54 	l.lws r0,0x154(r0)
    1a84:	00 00 31 88 	l.j e0a4 <__rom_size-0xc2a8>
    1a88:	00 00 33 7c 	l.j e878 <__rom_size-0xbad4>
    1a8c:	00 05 03 00 	l.j 14268c <__ram_length+0xc268c>
    1a90:	42 0a 5c 00 	.word 0x420a5c00
	...
    1a9c:	00 31 84 00 	l.j c62a9c <__stack+0x7e2aa0>
    1aa0:	00 31 90 00 	l.j c65aa0 <__stack+0x7e5aa4>
    1aa4:	02 30 9f 00 	l.j f8c296a4 <__stack+0xf87a96a8>
    1aa8:	00 31 90 00 	l.j c65aa8 <__stack+0x7e5aac>
    1aac:	00 31 94 00 	l.j c66aac <__stack+0x7e6ab0>
    1ab0:	01 55 00 00 	l.j 5541ab0 <__stack+0x50c1ab4>
    1ab4:	31 94 00 00 	.word 0x31940000
    1ab8:	31 e0 00 01 	.word 0x31e00001
    1abc:	55 00 00 31 	.word 0x55000031
    1ac0:	f4 00 00 32 	l.cust6 
    1ac4:	10 00 02 30 	l.bf 2384 <__rom_size-0x17fc8>
    1ac8:	9f 00 00 32 	l.addi r24,r0,0x32
    1acc:	2c 00 00 32 	.word 0x2c000032
    1ad0:	4c 00 01 55 	l.maci r0,0x155
	...
    1adc:	00 00 31 84 	l.j e0ec <__rom_size-0xc260>
    1ae0:	00 00 31 90 	l.j e120 <__rom_size-0xc22c>
    1ae4:	00 02 30 9f 	l.j 8dd60 <__ram_length+0xdd60>
    1ae8:	00 00 32 4c 	l.j e418 <__rom_size-0xbf34>
    1aec:	00 00 32 5c 	l.j e45c <__rom_size-0xbef0>
    1af0:	00 01 53 00 	l.j 566f0 <__rom_size+0x3c3a4>
    1af4:	00 32 5c 00 	l.j c98af4 <__stack+0x818af8>
    1af8:	00 32 60 00 	l.j c99af8 <__stack+0x819afc>
    1afc:	03 73 7f 9f 	l.j fdce1978 <__stack+0xfd86197c>
    1b00:	00 00 32 60 	l.j e480 <__rom_size-0xbecc>
    1b04:	00 00 32 7c 	l.j e4f4 <__rom_size-0xbe58>
    1b08:	00 01 53 00 	l.j 56708 <__rom_size+0x3c3bc>
    1b0c:	00 32 88 00 	l.j ca3b0c <__stack+0x823b10>
    1b10:	00 32 98 00 	l.j ca7b10 <__stack+0x827b14>
    1b14:	01 55 00 00 	l.j 5541b14 <__stack+0x50c1b18>
    1b18:	32 98 00 00 	.word 0x32980000
    1b1c:	32 b4 00 01 	.word 0x32b40001
    1b20:	55 00 00 32 	.word 0x55000032
    1b24:	b4 00 00 32 	l.mfspr r0,r0,0x32
    1b28:	c4 00 01 53 	.word 0xc4000153
    1b2c:	00 00 32 c4 	l.j e63c <__rom_size-0xbd10>
    1b30:	00 00 32 c8 	l.j e650 <__rom_size-0xbcfc>
    1b34:	00 03 73 7f 	l.j de930 <__ram_length+0x5e930>
    1b38:	9f 00 00 32 	l.addi r24,r0,0x32
    1b3c:	c8 00 00 32 	.word 0xc8000032
    1b40:	d8 00 01 53 	l.sb 0x153(r0),r0
    1b44:	00 00 33 64 	l.j e8d4 <__rom_size-0xba78>
    1b48:	00 00 33 7c 	l.j e938 <__rom_size-0xba14>
    1b4c:	00 01 53 00 	l.j 5674c <__rom_size+0x3c400>
	...
    1b58:	00 31 84 00 	l.j c62b58 <__stack+0x7e2b5c>
    1b5c:	00 31 90 00 	l.j c65b5c <__stack+0x7e5b60>
    1b60:	02 30 9f 00 	l.j f8c29760 <__stack+0xf87a9764>
    1b64:	00 31 dc 00 	l.j c78b64 <__stack+0x7f8b68>
    1b68:	00 31 e0 00 	l.j c79b68 <__stack+0x7f9b6c>
    1b6c:	02 30 9f 00 	l.j f8c2976c <__stack+0xf87a9770>
	...
    1b78:	00 31 84 00 	l.j c62b78 <__stack+0x7e2b7c>
    1b7c:	00 31 90 00 	l.j c65b7c <__stack+0x7e5b80>
    1b80:	02 30 9f 00 	l.j f8c29780 <__stack+0xf87a9784>
    1b84:	00 31 90 00 	l.j c65b84 <__stack+0x7e5b88>
    1b88:	00 31 94 00 	l.j c66b88 <__stack+0x7e6b8c>
    1b8c:	01 54 00 00 	l.j 5501b8c <__stack+0x5081b90>
    1b90:	31 94 00 00 	.word 0x31940000
    1b94:	32 04 00 01 	.word 0x32040001
    1b98:	54 00 00 32 	.word 0x54000032
    1b9c:	04 00 00 32 	l.jal 1c64 <__rom_size-0x186e8>
    1ba0:	24 00 01 54 	l.rfe 
    1ba4:	00 00 32 24 	l.j e434 <__rom_size-0xbf18>
    1ba8:	00 00 32 28 	l.j e448 <__rom_size-0xbf04>
    1bac:	00 03 74 7f 	l.j deda8 <__ram_length+0x5eda8>
    1bb0:	9f 00 00 32 	l.addi r24,r0,0x32
    1bb4:	28 00 00 32 	lv.adds.b r0,r0,r0
    1bb8:	74 00 01 54 	l.cust2 
	...
    1bc4:	00 00 32 84 	l.j e5d4 <__rom_size-0xbd78>
    1bc8:	00 00 32 e0 	l.j e748 <__rom_size-0xbc04>
    1bcc:	00 01 54 00 	l.j 56bcc <__rom_size+0x3c880>
	...
    1bd8:	00 31 98 00 	l.j c67bd8 <__stack+0x7e7bdc>
    1bdc:	00 31 d4 00 	l.j c76bdc <__stack+0x7f6be0>
    1be0:	01 56 00 00 	l.j 5581be0 <__stack+0x5101be4>
    1be4:	32 4c 00 00 	.word 0x324c0000
    1be8:	32 90 00 01 	.word 0x32900001
    1bec:	56 00 00 00 	.word 0x56000000
    1bf0:	00 00 00 00 	l.j 1bf0 <__rom_size-0x1875c>
    1bf4:	00 00 00 31 	l.j 1cb8 <__rom_size-0x18694>
    1bf8:	dc 00 00 31 	l.sh 0x31(r0),r0
    1bfc:	e0 00 01 58 	.word 0xe0000158
	...
    1c08:	00 00 31 e8 	l.j e3a8 <__rom_size-0xbfa4>
    1c0c:	00 00 32 20 	l.j e48c <__rom_size-0xbec0>
    1c10:	00 01 57 00 	l.j 57810 <__rom_size+0x3d4c4>
	...
    1c1c:	00 32 ec 00 	l.j cbcc1c <__stack+0x83cc20>
    1c20:	00 33 74 00 	l.j cdec20 <__stack+0x85ec24>
    1c24:	01 51 00 00 	l.j 5441c24 <__stack+0x4fc1c28>
    1c28:	33 74 00 00 	.word 0x33740000
    1c2c:	33 7c 00 01 	.word 0x337c0001
    1c30:	57 00 00 00 	.word 0x57000000
    1c34:	00 00 00 00 	l.j 1c34 <__rom_size-0x18718>
    1c38:	00 00 00 32 	l.j 1d00 <__rom_size-0x1864c>
    1c3c:	fc 00 00 33 	l.cust8 
    1c40:	10 00 01 56 	l.bf 2198 <__rom_size-0x181b4>
    1c44:	00 00 33 10 	l.j e884 <__rom_size-0xbac8>
    1c48:	00 00 33 2c 	l.j e8f8 <__rom_size-0xba54>
    1c4c:	00 01 56 00 	l.j 5744c <__rom_size+0x3d100>
    1c50:	00 33 2c 00 	l.j cccc50 <__stack+0x84cc54>
    1c54:	00 33 38 00 	l.j ccfc54 <__stack+0x84fc58>
    1c58:	02 30 9f 00 	l.j f8c29858 <__stack+0xf87a985c>
    1c5c:	00 33 38 00 	l.j ccfc5c <__stack+0x84fc60>
    1c60:	00 33 7c 00 	l.j ce0c60 <__stack+0x860c64>
    1c64:	01 56 00 00 	l.j 5581c64 <__stack+0x5101c68>
	...
    1c70:	32 ec 00 00 	.word 0x32ec0000
    1c74:	32 f4 00 02 	.word 0x32f40002
    1c78:	30 9f 00 00 	.word 0x309f0000
    1c7c:	33 20 00 00 	.word 0x33200000
    1c80:	33 2c 00 01 	.word 0x332c0001
    1c84:	54 00 00 33 	.word 0x54000033
    1c88:	38 00 00 33 	.word 0x38000033
    1c8c:	40 00 01 54 	.word 0x40000154
	...
    1c98:	00 00 33 10 	l.j e8d8 <__rom_size-0xba74>
    1c9c:	00 00 33 1c 	l.j e90c <__rom_size-0xba40>
    1ca0:	00 01 55 00 	l.j 570a0 <__rom_size+0x3cd54>
    1ca4:	00 33 2c 00 	l.j cccca4 <__stack+0x84cca8>
    1ca8:	00 33 38 00 	l.j ccfca8 <__stack+0x84fcac>
    1cac:	02 30 9f 00 	l.j f8c298ac <__stack+0xf87a98b0>
	...
    1cb8:	00 33 7c 00 	l.j ce0cb8 <__stack+0x860cbc>
    1cbc:	00 33 b0 00 	l.j cedcbc <__stack+0x86dcc0>
    1cc0:	02 71 00 00 	l.j f9c41cc0 <__stack+0xf97c1cc4>
    1cc4:	00 33 b0 00 	l.j cedcc4 <__stack+0x86dcc8>
    1cc8:	00 3b 70 00 	l.j eddcc8 <__stack+0xa5dccc>
    1ccc:	02 71 2c 00 	l.j f9c4cccc <__stack+0xf97cccd0>
	...
    1cd8:	00 33 7c 00 	l.j ce0cd8 <__stack+0x860cdc>
    1cdc:	00 34 88 00 	l.j d23cdc <__stack+0x8a3ce0>
    1ce0:	01 53 00 00 	l.j 54c1ce0 <__stack+0x5041ce4>
    1ce4:	34 88 00 00 	.word 0x34880000
    1ce8:	38 34 00 01 	.word 0x38340001
    1cec:	53 00 00 38 	.word 0x53000038
    1cf0:	38 00 00 38 	.word 0x38000038
    1cf4:	48 00 01 53 	l.jalr r0
    1cf8:	00 00 38 48 	l.j fe18 <__rom_size-0xa534>
    1cfc:	00 00 39 dc 	l.j 1046c <__rom_size-0x9ee0>
    1d00:	00 01 53 00 	l.j 56900 <__rom_size+0x3c5b4>
	...
    1d0c:	00 33 7c 00 	l.j ce0d0c <__stack+0x860d10>
    1d10:	00 34 88 00 	l.j d23d10 <__stack+0x8a3d14>
    1d14:	01 54 00 00 	l.j 5501d14 <__stack+0x5081d18>
    1d18:	34 88 00 00 	.word 0x34880000
    1d1c:	37 c0 00 01 	.word 0x37c00001
    1d20:	54 00 00 37 	.word 0x54000037
    1d24:	c0 00 00 37 	l.mtspr r0,r0,0x37
    1d28:	d0 00 03 74 	l.sd 0x374(r0),r0
    1d2c:	01 9f 00 00 	l.j 67c1d2c <__stack+0x6341d30>
    1d30:	37 d0 00 00 	.word 0x37d00000
    1d34:	37 e0 00 03 	.word 0x37e00003
    1d38:	74 02 9f 00 	l.cust2 
    1d3c:	00 37 e0 00 	l.j df9d3c <__stack+0x979d40>
    1d40:	00 37 fc 00 	l.j e00d40 <__stack+0x980d44>
    1d44:	03 74 03 9f 	l.j fdd02bc0 <__stack+0xfd882bc4>
    1d48:	00 00 37 fc 	l.j fd38 <__rom_size-0xa614>
    1d4c:	00 00 38 00 	l.j fd4c <__rom_size-0xa600>
    1d50:	00 01 54 00 	l.j 56d50 <__rom_size+0x3ca04>
    1d54:	00 38 00 00 	l.j e01d54 <__stack+0x981d58>
    1d58:	00 39 a8 00 	l.j e6bd58 <__stack+0x9ebd5c>
    1d5c:	01 54 00 00 	l.j 5501d5c <__stack+0x5081d60>
	...
    1d68:	33 7c 00 00 	.word 0x337c0000
    1d6c:	34 3c 00 01 	.word 0x343c0001
    1d70:	55 00 00 34 	.word 0x55000034
    1d74:	3c 00 00 3a 	.word 0x3c00003a
    1d78:	14 00 01 55 	.word 0x14000155
	...
    1d84:	00 00 33 7c 	l.j eb74 <__rom_size-0xb7d8>
    1d88:	00 00 33 e8 	l.j ed28 <__rom_size-0xb624>
    1d8c:	00 01 56 00 	l.j 5758c <__rom_size+0x3d240>
    1d90:	00 33 e8 00 	l.j cfbd90 <__stack+0x87bd94>
    1d94:	00 3a 74 00 	l.j e9ed94 <__stack+0xa1ed98>
    1d98:	01 56 00 00 	l.j 5581d98 <__stack+0x5101d9c>
	...
    1da4:	33 7c 00 00 	.word 0x337c0000
    1da8:	3b 0c 00 01 	.word 0x3b0c0001
    1dac:	57 00 00 00 	.word 0x57000000
    1db0:	00 00 00 00 	l.j 1db0 <__rom_size-0x1859c>
    1db4:	00 00 00 34 	l.j 1e84 <__rom_size-0x184c8>
    1db8:	3c 00 00 34 	.word 0x3c000034
    1dbc:	88 00 02 30 	l.lws r0,0x230(r0)
    1dc0:	9f 00 00 34 	l.addi r24,r0,0x34
    1dc4:	88 00 00 36 	l.lws r0,0x36(r0)
    1dc8:	38 00 01 5c 	.word 0x3800015c
    1dcc:	00 00 36 38 	l.j f6ac <__rom_size-0xaca0>
    1dd0:	00 00 36 3c 	l.j f6c0 <__rom_size-0xac8c>
    1dd4:	00 02 81 00 	l.j a21d4 <__ram_length+0x221d4>
    1dd8:	00 00 37 88 	l.j fbf8 <__rom_size-0xa754>
    1ddc:	00 00 37 fc 	l.j fdcc <__rom_size-0xa580>
    1de0:	00 01 5c 00 	l.j 58de0 <__rom_size+0x3ea94>
    1de4:	00 39 9c 00 	l.j e68de4 <__stack+0x9e8de8>
    1de8:	00 39 b0 00 	l.j e6dde8 <__stack+0x9eddec>
    1dec:	01 5c 00 00 	l.j 5701dec <__stack+0x5281df0>
    1df0:	39 b4 00 00 	.word 0x39b40000
    1df4:	39 bc 00 01 	.word 0x39bc0001
    1df8:	5c 00 00 39 	.word 0x5c000039
    1dfc:	c4 00 00 3b 	.word 0xc400003b
    1e00:	30 00 01 5c 	.word 0x3000015c
	...
    1e0c:	00 00 38 00 	l.j fe0c <__rom_size-0xa540>
    1e10:	00 00 38 4c 	l.j ff40 <__rom_size-0xa40c>
    1e14:	00 01 58 00 	l.j 57e14 <__rom_size+0x3dac8>
    1e18:	00 38 8c 00 	l.j e24e18 <__stack+0x9a4e1c>
    1e1c:	00 38 9c 00 	l.j e28e1c <__stack+0x9a8e20>
    1e20:	01 58 00 00 	l.j 5601e20 <__stack+0x5181e24>
	...
    1e2c:	34 b0 00 00 	.word 0x34b00000
    1e30:	34 bc 00 01 	.word 0x34bc0001
    1e34:	5d 00 00 34 	.word 0x5d000034
    1e38:	bc 00 00 35 	l.sfeqi r0,0x35
    1e3c:	0c 00 01 5f 	l.bnf 23b8 <__rom_size-0x17f94>
    1e40:	00 00 35 0c 	l.j f270 <__rom_size-0xb0dc>
    1e44:	00 00 35 38 	l.j f324 <__rom_size-0xb028>
    1e48:	00 01 5f 00 	l.j 59a48 <__rom_size+0x3f6fc>
    1e4c:	00 35 38 00 	l.j d4fe4c <__stack+0x8cfe50>
    1e50:	00 35 64 00 	l.j d5ae50 <__stack+0x8dae54>
    1e54:	01 5f 00 00 	l.j 57c1e54 <__stack+0x5341e58>
    1e58:	35 64 00 00 	.word 0x35640000
    1e5c:	35 88 00 01 	.word 0x35880001
    1e60:	5f 00 00 35 	.word 0x5f000035
    1e64:	88 00 00 35 	l.lws r0,0x35(r0)
    1e68:	bc 00 01 5f 	l.sfeqi r0,0x15f
    1e6c:	00 00 35 bc 	l.j f55c <__rom_size-0xadf0>
    1e70:	00 00 35 c4 	l.j f580 <__rom_size-0xadcc>
    1e74:	00 01 5f 00 	l.j 59a74 <__rom_size+0x3f728>
    1e78:	00 35 c4 00 	l.j d72e78 <__stack+0x8f2e7c>
    1e7c:	00 36 14 00 	l.j d86e7c <__stack+0x906e80>
    1e80:	01 5d 00 00 	l.j 5741e80 <__stack+0x52c1e84>
    1e84:	38 a8 00 00 	.word 0x38a80000
    1e88:	38 bc 00 03 	.word 0x38bc0003
    1e8c:	7d 01 9f 00 	l.cust4 
    1e90:	00 38 bc 00 	l.j e30e90 <__stack+0x9b0e94>
    1e94:	00 38 e0 00 	l.j e39e94 <__stack+0x9b9e98>
    1e98:	03 7d 02 9f 	l.j fdf42914 <__stack+0xfdac2918>
    1e9c:	00 00 38 e0 	l.j 1021c <__rom_size-0xa130>
    1ea0:	00 00 38 f8 	l.j 10280 <__rom_size-0xa0cc>
    1ea4:	00 03 7d 03 	l.j e12b0 <__ram_length+0x612b0>
    1ea8:	9f 00 00 38 	l.addi r24,r0,0x38
    1eac:	f8 00 00 39 	l.cust7 
    1eb0:	1c 00 03 7d 	.word 0x1c00037d
    1eb4:	04 9f 00 00 	l.jal 27c1eb4 <__stack+0x2341eb8>
    1eb8:	39 1c 00 00 	.word 0x391c0000
    1ebc:	39 4c 00 03 	.word 0x394c0003
    1ec0:	7d 05 9f 00 	l.cust4 
    1ec4:	00 39 4c 00 	l.j e54ec4 <__stack+0x9d4ec8>
    1ec8:	00 39 7c 00 	l.j e60ec8 <__stack+0x9e0ecc>
    1ecc:	01 5d 00 00 	l.j 5741ecc <__stack+0x52c1ed0>
    1ed0:	39 7c 00 00 	.word 0x397c0000
    1ed4:	39 9c 00 03 	.word 0x399c0003
    1ed8:	7d 01 9f 00 	l.cust4 
    1edc:	00 39 9c 00 	l.j e68edc <__stack+0x9e8ee0>
    1ee0:	00 39 a8 00 	l.j e6bee0 <__stack+0x9ebee4>
    1ee4:	03 7d 02 9f 	l.j fdf42960 <__stack+0xfdac2964>
    1ee8:	00 00 3a 10 	l.j 10728 <__rom_size-0x9c24>
    1eec:	00 00 3a 70 	l.j 108ac <__rom_size-0x9aa0>
    1ef0:	00 03 74 05 	l.j def04 <__ram_length+0x5ef04>
    1ef4:	9f 00 00 3a 	l.addi r24,r0,0x3a
    1ef8:	70 00 00 3a 	l.cust1 
    1efc:	80 00 01 55 	l.ld r0,0x155(r0)
    1f00:	00 00 3a 80 	l.j 10900 <__rom_size-0x9a4c>
    1f04:	00 00 3a 84 	l.j 10914 <__rom_size-0x9a38>
    1f08:	00 03 75 01 	l.j df30c <__ram_length+0x5f30c>
    1f0c:	9f 00 00 3a 	l.addi r24,r0,0x3a
    1f10:	84 00 00 3a 	l.lwz r0,0x3a(r0)
    1f14:	90 00 03 74 	l.lbs r0,0x374(r0)
    1f18:	07 9f 00 00 	l.jal fe7c1f18 <__stack+0xfe341f1c>
    1f1c:	3a 90 00 00 	.word 0x3a900000
    1f20:	3a b0 00 03 	.word 0x3ab00003
    1f24:	74 61 9f 00 	l.cust2 
    1f28:	00 3a b0 00 	l.j eadf28 <__stack+0xa2df2c>
    1f2c:	00 3a f0 00 	l.j ebdf2c <__stack+0xa3df30>
    1f30:	03 74 65 9f 	l.j fdd1b5ac <__stack+0xfd89b5b0>
    1f34:	00 00 3a f0 	l.j 10af4 <__rom_size-0x9858>
    1f38:	00 00 3b 04 	l.j 10b48 <__rom_size-0x9804>
    1f3c:	00 01 54 00 	l.j 56f3c <__rom_size+0x3cbf0>
    1f40:	00 3b 04 00 	l.j ec2f40 <__stack+0xa42f44>
    1f44:	00 3b 08 00 	l.j ec3f44 <__stack+0xa43f48>
    1f48:	03 74 01 9f 	l.j fdd025c4 <__stack+0xfd8825c8>
	...
    1f54:	00 00 33 7c 	l.j ed44 <__rom_size-0xb608>
    1f58:	00 00 33 e8 	l.j eef8 <__rom_size-0xb454>
    1f5c:	00 03 09 ff 	l.j c4758 <__ram_length+0x44758>
    1f60:	9f 00 00 33 	l.addi r24,r0,0x33
    1f64:	e8 00 00 34 	.word 0xe8000034
    1f68:	88 00 01 65 	l.lws r0,0x165(r0)
    1f6c:	00 00 34 88 	l.j f18c <__rom_size-0xb1c0>
    1f70:	00 00 38 bc 	l.j 10260 <__rom_size-0xa0ec>
    1f74:	00 01 65 00 	l.j 5b374 <__rom_size+0x41028>
    1f78:	00 38 bc 00 	l.j e30f78 <__stack+0x9b0f7c>
    1f7c:	00 38 d8 00 	l.j e37f7c <__stack+0x9b7f80>
    1f80:	01 65 00 00 	l.j 5941f80 <__stack+0x54c1f84>
    1f84:	38 e0 00 00 	.word 0x38e00000
    1f88:	38 f8 00 01 	.word 0x38f80001
    1f8c:	65 00 00 38 	.word 0x65000038
    1f90:	f8 00 00 39 	l.cust7 
    1f94:	14 00 01 65 	.word 0x14000165
    1f98:	00 00 39 1c 	l.j 10408 <__rom_size-0x9f44>
    1f9c:	00 00 39 34 	l.j 1046c <__rom_size-0x9ee0>
    1fa0:	00 01 65 00 	l.j 5b3a0 <__rom_size+0x41054>
    1fa4:	00 39 34 00 	l.j e4efa4 <__stack+0x9cefa8>
    1fa8:	00 39 54 00 	l.j e56fa8 <__stack+0x9d6fac>
    1fac:	01 65 00 00 	l.j 5941fac <__stack+0x54c1fb0>
    1fb0:	39 5c 00 00 	.word 0x395c0000
    1fb4:	39 74 00 01 	.word 0x39740001
    1fb8:	65 00 00 39 	.word 0x65000039
    1fbc:	7c 00 00 39 	l.cust4 
    1fc0:	90 00 01 65 	l.lbs r0,0x165(r0)
    1fc4:	00 00 39 9c 	l.j 10634 <__rom_size-0x9d18>
    1fc8:	00 00 3b 70 	l.j 10d88 <__rom_size-0x95c4>
    1fcc:	00 01 65 00 	l.j 5b3cc <__rom_size+0x41080>
	...
    1fd8:	00 33 7c 00 	l.j ce0fd8 <__stack+0x860fdc>
    1fdc:	00 33 d4 00 	l.j cf6fdc <__stack+0x876fe0>
    1fe0:	04 0a 01 00 	l.jal 2823e0 <__ram_length+0x2023e0>
    1fe4:	9f 00 00 33 	l.addi r24,r0,0x33
    1fe8:	d4 00 00 3b 	l.sw 0x3b(r0),r0
    1fec:	70 00 01 69 	l.cust1 
	...
    1ff8:	00 00 33 b4 	l.j eec8 <__rom_size-0xb484>
    1ffc:	00 00 34 88 	l.j f21c <__rom_size-0xb130>
    2000:	00 05 03 00 	l.j 142c00 <__ram_length+0xc2c00>
    2004:	42 0a 5c 00 	.word 0x420a5c00
    2008:	00 34 88 00 	l.j d24008 <__stack+0x8a400c>
    200c:	00 37 c0 00 	l.j df200c <__stack+0x972010>
    2010:	01 67 00 00 	l.j 59c2010 <__stack+0x5542014>
    2014:	37 c0 00 00 	.word 0x37c00000
    2018:	3b 70 00 01 	.word 0x3b700001
    201c:	67 00 00 00 	.word 0x67000000
    2020:	00 00 00 00 	l.j 2020 <__rom_size-0x1832c>
    2024:	00 00 00 3b 	l.j 2110 <__rom_size-0x1823c>
    2028:	70 00 00 3b 	l.cust1 
    202c:	78 00 02 71 	l.cust3 
    2030:	00 00 00 3b 	l.j 211c <__rom_size-0x18230>
    2034:	78 00 00 3b 	l.cust3 
    2038:	88 00 02 71 	l.lws r0,0x271(r0)
    203c:	04 00 00 00 	l.jal 203c <__rom_size-0x18310>
    2040:	00 00 00 00 	l.j 2040 <__rom_size-0x1830c>
    2044:	00 00 00 3b 	l.j 2130 <__rom_size-0x1821c>
    2048:	88 00 00 3b 	l.lws r0,0x3b(r0)
    204c:	98 00 01 53 	l.lhs r0,0x153(r0)
	...
    2058:	00 00 3b c8 	l.j 10f78 <__rom_size-0x93d4>
    205c:	00 00 3b e4 	l.j 10fec <__rom_size-0x9360>
    2060:	00 02 71 00 	l.j 9e460 <__ram_length+0x1e460>
    2064:	00 00 3b e4 	l.j 10ff4 <__rom_size-0x9358>
    2068:	00 00 3c f4 	l.j 11438 <__rom_size-0x8f14>
    206c:	00 02 71 08 	l.j 9e48c <__ram_length+0x1e48c>
	...
    2078:	00 00 3b c8 	l.j 10f98 <__rom_size-0x93b4>
    207c:	00 00 3b d4 	l.j 10fcc <__rom_size-0x9380>
    2080:	00 01 53 00 	l.j 56c80 <__rom_size+0x3c934>
    2084:	00 3b d4 00 	l.j ef7084 <__stack+0xa77088>
    2088:	00 3c 2c 00 	l.j f0d088 <__stack+0xa8d08c>
    208c:	01 52 00 00 	l.j 548208c <__stack+0x5002090>
    2090:	3c 2c 00 00 	.word 0x3c2c0000
    2094:	3c 33 00 01 	.word 0x3c330001
    2098:	54 00 00 00 	.word 0x54000000
    209c:	00 00 00 00 	l.j 209c <__rom_size-0x182b0>
    20a0:	00 00 00 3c 	l.j 2190 <__rom_size-0x181bc>
    20a4:	f4 00 00 3d 	l.cust6 
    20a8:	1c 00 02 71 	.word 0x1c000271
    20ac:	00 00 00 3d 	l.j 21a0 <__rom_size-0x181ac>
    20b0:	1c 00 00 3d 	.word 0x1c00003d
    20b4:	3c 00 02 71 	.word 0x3c000271
    20b8:	04 00 00 00 	l.jal 20b8 <__rom_size-0x18294>
    20bc:	00 00 00 00 	l.j 20bc <__rom_size-0x18290>
    20c0:	00 00 00 3d 	l.j 21b4 <__rom_size-0x18198>
    20c4:	3c 00 00 3d 	.word 0x3c00003d
    20c8:	4c 00 01 53 	l.maci r0,0x153
	...
    20d4:	00 00 3d 3c 	l.j 115c4 <__rom_size-0x8d88>
    20d8:	00 00 3d 40 	l.j 115d8 <__rom_size-0x8d74>
    20dc:	00 01 54 00 	l.j 570dc <__rom_size+0x3cd90>
	...
    20e8:	00 3d 3c 00 	l.j f510e8 <__stack+0xad10ec>
    20ec:	00 3d 58 00 	l.j f580ec <__stack+0xad80f0>
    20f0:	01 55 00 00 	l.j 55420f0 <__stack+0x50c20f4>
	...
    20fc:	3d 90 00 00 	.word 0x3d900000
    2100:	3d b8 00 01 	.word 0x3db80001
    2104:	53 00 00 00 	.word 0x53000000
    2108:	00 00 00 00 	l.j 2108 <__rom_size-0x18244>
    210c:	00 00 00 3d 	l.j 2200 <__rom_size-0x1814c>
    2110:	c8 00 00 3d 	.word 0xc800003d
    2114:	e4 00 01 53 	l.sfeq r0,r0
	...
    2120:	00 00 3e 04 	l.j 11930 <__rom_size-0x8a1c>
    2124:	00 00 3e 2c 	l.j 119d4 <__rom_size-0x8978>
    2128:	00 01 53 00 	l.j 56d28 <__rom_size+0x3c9dc>
	...
    2134:	00 3e 3c 00 	l.j f91134 <__stack+0xb11138>
    2138:	00 3e 44 00 	l.j f93138 <__stack+0xb1313c>
    213c:	01 53 00 00 	l.j 54c213c <__stack+0x5042140>
	...
    2148:	3e 3c 00 00 	.word 0x3e3c0000
    214c:	3e 58 00 01 	.word 0x3e580001
    2150:	54 00 00 00 	.word 0x54000000
    2154:	00 00 00 00 	l.j 2154 <__rom_size-0x181f8>
    2158:	00 00 00 3e 	l.j 2250 <__rom_size-0x180fc>
    215c:	80 00 00 3e 	l.ld r0,0x3e(r0)
    2160:	c0 00 01 53 	l.mtspr r0,r0,0x153
	...
    216c:	00 00 3e 80 	l.j 11b6c <__rom_size-0x87e0>
    2170:	00 00 3e bc 	l.j 11c60 <__rom_size-0x86ec>
    2174:	00 01 54 00 	l.j 57174 <__rom_size+0x3ce28>
	...
    2180:	00 3e 80 00 	l.j fa2180 <__stack+0xb22184>
    2184:	00 3e b0 00 	l.j fae184 <__stack+0xb2e188>
    2188:	01 55 00 00 	l.j 5542188 <__stack+0x50c218c>
	...
    2194:	3e f0 00 00 	.word 0x3ef00000
    2198:	3f 1c 00 02 	.word 0x3f1c0002
    219c:	71 00 00 00 	l.cust1 
    21a0:	3f 1c 00 00 	.word 0x3f1c0000
    21a4:	40 3c 00 02 	.word 0x403c0002
    21a8:	71 10 00 00 	l.cust1 
	...
    21b4:	3f 30 00 00 	.word 0x3f300000
    21b8:	40 30 00 01 	.word 0x40300001
    21bc:	52 00 00 00 	.word 0x52000000
    21c0:	00 00 00 00 	l.j 21c0 <__rom_size-0x1818c>
    21c4:	00 00 00 3f 	l.j 22c0 <__rom_size-0x1808c>
    21c8:	44 00 00 3f 	l.jr r0
    21cc:	60 00 02 30 	.word 0x60000230
    21d0:	9f 00 00 3f 	l.addi r24,r0,0x3f
    21d4:	60 00 00 3f 	.word 0x6000003f
    21d8:	c4 00 01 5e 	.word 0xc400015e
    21dc:	00 00 3f c4 	l.j 120ec <__rom_size-0x8260>
    21e0:	00 00 40 20 	l.j 12260 <__rom_size-0x80ec>
    21e4:	00 01 5e 00 	l.j 599e4 <__rom_size+0x3f698>
    21e8:	00 40 20 00 	l.j 100a1e8 <__stack+0xb8a1ec>
    21ec:	00 40 34 00 	l.j 100f1ec <__stack+0xb8f1f0>
    21f0:	01 5e 00 00 	l.j 57821f0 <__stack+0x53021f4>
    21f4:	40 34 00 00 	.word 0x40340000
    21f8:	40 3c 00 01 	.word 0x403c0001
    21fc:	5b 00 00 00 	.word 0x5b000000
    2200:	00 00 00 00 	l.j 2200 <__rom_size-0x1814c>
    2204:	00 00 00 40 	l.j 2304 <__rom_size-0x18048>
    2208:	00 00 00 40 	l.j 2308 <__rom_size-0x18044>
    220c:	1c 00 01 52 	.word 0x1c000152
	...
    2218:	00 00 40 3c 	l.j 12308 <__rom_size-0x8044>
    221c:	00 00 40 4c 	l.j 1234c <__rom_size-0x8000>
    2220:	00 02 71 00 	l.j 9e620 <__ram_length+0x1e620>
    2224:	00 00 40 4c 	l.j 12354 <__rom_size-0x7ff8>
    2228:	00 00 40 7c 	l.j 12418 <__rom_size-0x7f34>
    222c:	00 02 71 08 	l.j 9e64c <__ram_length+0x1e64c>
	...
    2238:	00 00 40 7c 	l.j 12428 <__rom_size-0x7f24>
    223c:	00 00 40 9c 	l.j 124ac <__rom_size-0x7ea0>
    2240:	00 01 53 00 	l.j 56e40 <__rom_size+0x3caf4>
    2244:	00 40 9c 00 	l.j 1029244 <__stack+0xba9248>
    2248:	00 40 a4 00 	l.j 102b248 <__stack+0xbab24c>
    224c:	01 53 00 00 	l.j 54c224c <__stack+0x5042250>
    2250:	41 48 00 00 	.word 0x41480000
    2254:	41 54 00 01 	.word 0x41540001
    2258:	53 00 00 00 	.word 0x53000000
    225c:	00 00 00 00 	l.j 225c <__rom_size-0x180f0>
    2260:	00 00 00 40 	l.j 2360 <__rom_size-0x17fec>
    2264:	9c 00 00 41 	l.addi r0,r0,0x41
    2268:	48 00 01 54 	l.jalr r0
	...
    2274:	00 00 40 9c 	l.j 124e4 <__rom_size-0x7e68>
    2278:	00 00 40 d0 	l.j 125b8 <__rom_size-0x7d94>
    227c:	00 01 53 00 	l.j 56e7c <__rom_size+0x3cb30>
    2280:	00 40 d0 00 	l.j 1036280 <__stack+0xbb6284>
    2284:	00 40 d4 00 	l.j 1037284 <__stack+0xbb7288>
    2288:	03 73 7f 9f 	l.j fdce2104 <__stack+0xfd862108>
    228c:	00 00 40 d4 	l.j 125dc <__rom_size-0x7d70>
    2290:	00 00 41 48 	l.j 127b0 <__rom_size-0x7b9c>
    2294:	00 01 53 00 	l.j 56e94 <__rom_size+0x3cb48>
	...
    22a0:	00 40 9c 00 	l.j 10292a0 <__stack+0xba92a4>
    22a4:	00 40 a4 00 	l.j 102b2a4 <__stack+0xbab2a8>
    22a8:	02 30 9f 00 	l.j f8c29ea8 <__stack+0xf87a9eac>
    22ac:	00 40 a4 00 	l.j 102b2ac <__stack+0xbab2b0>
    22b0:	00 40 cc 00 	l.j 10352b0 <__stack+0xbb52b4>
    22b4:	01 56 00 00 	l.j 55822b4 <__stack+0x51022b8>
    22b8:	40 d4 00 00 	.word 0x40d40000
    22bc:	41 48 00 01 	.word 0x41480001
    22c0:	56 00 00 00 	.word 0x56000000
    22c4:	00 00 00 00 	l.j 22c4 <__rom_size-0x18088>
    22c8:	00 00 00 40 	l.j 23c8 <__rom_size-0x17f84>
    22cc:	ac 00 00 40 	l.xori r0,r0,0x40
    22d0:	b4 00 01 55 	l.mfspr r0,r0,0x155
    22d4:	00 00 40 bc 	l.j 125c4 <__rom_size-0x7d88>
    22d8:	00 00 40 c4 	l.j 125e8 <__rom_size-0x7d64>
    22dc:	00 01 55 00 	l.j 576dc <__rom_size+0x3d390>
    22e0:	00 40 c8 00 	l.j 10342e0 <__stack+0xbb42e4>
    22e4:	00 40 d4 00 	l.j 10372e4 <__stack+0xbb72e8>
    22e8:	01 55 00 00 	l.j 55422e8 <__stack+0x50c22ec>
	...
    22f4:	41 48 00 00 	.word 0x41480000
    22f8:	41 58 00 01 	.word 0x41580001
    22fc:	54 00 00 00 	.word 0x54000000
    2300:	00 00 00 00 	l.j 2300 <__rom_size-0x1804c>
    2304:	00 00 00 41 	l.j 2408 <__rom_size-0x17f44>
    2308:	48 00 00 41 	l.jalr r0
    230c:	54 00 01 53 	.word 0x54000153
    2310:	00 00 41 54 	l.j 12860 <__rom_size-0x7aec>
    2314:	00 00 41 58 	l.j 12874 <__rom_size-0x7ad8>
    2318:	00 01 53 00 	l.j 56f18 <__rom_size+0x3cbcc>
    231c:	00 41 60 00 	l.j 105a31c <__stack+0xbda320>
    2320:	00 41 6c 00 	l.j 105d320 <__stack+0xbdd324>
    2324:	01 53 00 00 	l.j 54c2324 <__stack+0x5042328>
    2328:	41 6c 00 00 	.word 0x416c0000
    232c:	41 74 00 03 	.word 0x41740003
    2330:	73 7f 9f 00 	l.cust1 
    2334:	00 41 74 00 	l.j 105f334 <__stack+0xbdf338>
    2338:	00 41 9c 00 	l.j 1069338 <__stack+0xbe933c>
    233c:	01 53 00 00 	l.j 54c233c <__stack+0x5042340>
	...
    2348:	41 48 00 00 	.word 0x41480000
    234c:	41 50 00 02 	.word 0x41500002
    2350:	30 9f 00 00 	.word 0x309f0000
    2354:	41 50 00 00 	.word 0x41500000
    2358:	41 58 00 02 	.word 0x41580002
    235c:	31 9f 00 00 	.word 0x319f0000
    2360:	41 60 00 00 	.word 0x41600000
    2364:	41 74 00 01 	.word 0x41740001
    2368:	56 00 00 41 	.word 0x56000041
    236c:	74 00 00 41 	l.cust2 
    2370:	9c 00 01 56 	l.addi r0,r0,0x156
	...
    237c:	00 00 41 48 	l.j 1289c <__rom_size-0x7ab0>
    2380:	00 00 41 58 	l.j 128e0 <__rom_size-0x7a6c>
    2384:	00 02 30 9f 	l.j 8e600 <__ram_length+0xe600>
    2388:	00 00 41 60 	l.j 12908 <__rom_size-0x7a44>
    238c:	00 00 41 68 	l.j 1292c <__rom_size-0x7a20>
    2390:	00 01 55 00 	l.j 57790 <__rom_size+0x3d444>
    2394:	00 41 74 00 	l.j 105f394 <__stack+0xbdf398>
    2398:	00 41 98 00 	l.j 1068398 <__stack+0xbe839c>
    239c:	01 55 00 00 	l.j 554239c <__stack+0x50c23a0>
	...
    23a8:	41 a4 00 00 	.word 0x41a40000
    23ac:	41 ac 00 01 	.word 0x41ac0001
    23b0:	53 00 00 41 	.word 0x53000041
    23b4:	ac 00 00 41 	l.xori r0,r0,0x41
    23b8:	dc 00 01 53 	l.sh 0x153(r0),r0
    23bc:	00 00 41 dc 	l.j 12b2c <__rom_size-0x7820>
    23c0:	00 00 41 fc 	l.j 12bb0 <__rom_size-0x779c>
    23c4:	00 01 53 00 	l.j 56fc4 <__rom_size+0x3cc78>
	...
    23d0:	00 42 04 00 	l.j 10833d0 <__stack+0xc033d4>
    23d4:	00 42 0c 00 	l.j 10853d4 <__stack+0xc053d8>
    23d8:	02 71 00 00 	l.j f9c423d8 <__stack+0xf97c23dc>
    23dc:	00 42 0c 00 	l.j 10853dc <__stack+0xc053e0>
    23e0:	00 42 2c 00 	l.j 108d3e0 <__stack+0xc0d3e4>
    23e4:	02 71 04 00 	l.j f9c433e4 <__stack+0xf97c33e8>
	...
    23f0:	00 42 04 00 	l.j 10833f0 <__stack+0xc033f4>
    23f4:	00 42 1b 00 	l.j 1088ff4 <__stack+0xc08ff8>
    23f8:	01 53 00 00 	l.j 54c23f8 <__stack+0x50423fc>
	...
    2404:	42 04 00 00 	.word 0x42040000
    2408:	42 14 00 01 	.word 0x42140001
    240c:	54 00 00 42 	.word 0x54000042
    2410:	14 00 00 42 	.word 0x14000042
    2414:	1b 00 01 55 	l.movhi r24,0x155
	...
    2420:	00 00 42 2c 	l.j 12cd0 <__rom_size-0x767c>
    2424:	00 00 42 50 	l.j 12d64 <__rom_size-0x75e8>
    2428:	00 02 71 00 	l.j 9e828 <__ram_length+0x1e828>
    242c:	00 00 42 50 	l.j 12d6c <__rom_size-0x75e0>
    2430:	00 00 43 c0 	l.j 13330 <__rom_size-0x701c>
    2434:	00 02 71 14 	l.j 9e884 <__ram_length+0x1e884>
	...
    2440:	00 00 42 2c 	l.j 12cf0 <__rom_size-0x765c>
    2444:	00 00 42 4c 	l.j 12d74 <__rom_size-0x75d8>
    2448:	00 01 53 00 	l.j 57048 <__rom_size+0x3ccfc>
    244c:	00 42 4c 00 	l.j 109544c <__stack+0xc15450>
    2450:	00 43 a0 00 	l.j 10ea450 <__stack+0xc6a454>
    2454:	01 60 00 00 	l.j 5802454 <__stack+0x5382458>
    2458:	43 a8 00 00 	.word 0x43a80000
    245c:	43 b8 00 01 	.word 0x43b80001
    2460:	60 00 00 00 	.word 0x60000000
    2464:	00 00 00 00 	l.j 2464 <__rom_size-0x17ee8>
    2468:	00 00 00 42 	l.j 2570 <__rom_size-0x17ddc>
    246c:	2c 00 00 42 	.word 0x2c000042
    2470:	80 00 01 54 	l.ld r0,0x154(r0)
    2474:	00 00 43 a8 	l.j 13314 <__rom_size-0x7038>
    2478:	00 00 43 c0 	l.j 13378 <__rom_size-0x6fd4>
    247c:	00 01 54 00 	l.j 5747c <__rom_size+0x3d130>
	...
    2488:	00 43 c0 00 	l.j 10f2488 <__stack+0xc7248c>
    248c:	00 43 c8 00 	l.j 10f448c <__stack+0xc74490>
    2490:	02 71 00 00 	l.j f9c42490 <__stack+0xf97c2494>
    2494:	00 43 c8 00 	l.j 10f4494 <__stack+0xc74498>
    2498:	00 44 14 00 	l.j 1107498 <__stack+0xc8749c>
    249c:	02 71 08 00 	l.j f9c4449c <__stack+0xf97c44a0>
	...
    24a8:	00 43 c0 00 	l.j 10f24a8 <__stack+0xc724ac>
    24ac:	00 43 dc 00 	l.j 10f94ac <__stack+0xc794b0>
    24b0:	01 53 00 00 	l.j 54c24b0 <__stack+0x50424b4>
    24b4:	43 dc 00 00 	.word 0x43dc0000
    24b8:	43 e7 00 02 	.word 0x43e70002
    24bc:	71 00 00 00 	l.cust1 
    24c0:	43 f8 00 00 	.word 0x43f80000
    24c4:	43 fc 00 01 	.word 0x43fc0001
    24c8:	53 00 00 00 	.word 0x53000000
    24cc:	00 00 00 00 	l.j 24cc <__rom_size-0x17e80>
    24d0:	00 00 00 44 	l.j 25e0 <__rom_size-0x17d6c>
    24d4:	14 00 00 44 	.word 0x14000044
    24d8:	24 00 02 71 	l.rfe 
    24dc:	00 00 00 44 	l.j 25ec <__rom_size-0x17d60>
    24e0:	24 00 00 44 	l.rfe 
    24e4:	7c 00 02 71 	l.cust4 
    24e8:	08 00 00 00 	.word 0x08000000
    24ec:	00 00 00 00 	l.j 24ec <__rom_size-0x17e60>
    24f0:	00 00 00 44 	l.j 2600 <__rom_size-0x17d4c>
    24f4:	14 00 00 44 	.word 0x14000044
    24f8:	28 00 01 53 	.word 0x28000153
    24fc:	00 00 44 28 	l.j 1359c <__rom_size-0x6db0>
    2500:	00 00 44 37 	l.j 135dc <__rom_size-0x6d70>
    2504:	00 01 55 00 	l.j 57904 <__rom_size+0x3d5b8>
	...
    2510:	00 44 38 00 	l.j 1110510 <__stack+0xc90514>
    2514:	00 44 48 00 	l.j 1114514 <__stack+0xc94518>
    2518:	02 30 9f 00 	l.j f8c2a118 <__stack+0xf87aa11c>
    251c:	00 44 48 00 	l.j 111451c <__stack+0xc94520>
    2520:	00 44 58 00 	l.j 1118520 <__stack+0xc98524>
    2524:	01 53 00 00 	l.j 54c2524 <__stack+0x5042528>
    2528:	44 58 00 00 	l.jr r0
    252c:	44 60 00 03 	l.jr r0
    2530:	73 7f 9f 00 	l.cust1 
    2534:	00 44 60 00 	l.j 111a534 <__stack+0xc9a538>
    2538:	00 44 7c 00 	l.j 1121538 <__stack+0xca153c>
    253c:	01 53 00 00 	l.j 54c253c <__stack+0x5042540>
	...
    2548:	44 7c 00 00 	l.jr r0
    254c:	44 a0 00 02 	l.jr r0
    2550:	71 00 00 00 	l.cust1 
    2554:	44 a0 00 00 	l.jr r0
    2558:	46 54 00 02 	l.jr r0
    255c:	71 1c 00 00 	l.cust1 
	...
    2568:	44 7c 00 00 	l.jr r0
    256c:	44 88 00 01 	l.jr r0
    2570:	53 00 00 44 	.word 0x53000044
    2574:	88 00 00 44 	l.lws r0,0x44(r0)
    2578:	b4 00 01 52 	l.mfspr r0,r0,0x152
    257c:	00 00 44 b4 	l.j 1384c <__rom_size-0x6b00>
    2580:	00 00 44 f8 	l.j 13960 <__rom_size-0x69ec>
    2584:	00 01 52 00 	l.j 56d84 <__rom_size+0x3ca38>
    2588:	00 44 f8 00 	l.j 1140588 <__stack+0xcc058c>
    258c:	00 44 ff 00 	l.j 114218c <__stack+0xcc2190>
    2590:	02 91 68 00 	l.j fa45c590 <__stack+0xf9fdc594>
    2594:	00 45 0c 00 	l.j 1145594 <__stack+0xcc5598>
    2598:	00 45 88 00 	l.j 1164598 <__stack+0xce459c>
    259c:	01 52 00 00 	l.j 548259c <__stack+0x50025a0>
    25a0:	45 88 00 00 	l.jr r0
    25a4:	45 8f 00 02 	l.jr r0
    25a8:	91 68 00 00 	l.lbs r11,0x0(r8)
    25ac:	45 a4 00 00 	l.jr r0
    25b0:	45 ec 00 01 	l.jr r0
    25b4:	52 00 00 45 	.word 0x52000045
    25b8:	ec 00 00 45 	.word 0xec000045
    25bc:	f3 00 02 71 	l.cust5 r24,r0,r0,0x13,0x11
    25c0:	00 00 00 46 	l.j 26d8 <__rom_size-0x17c74>
    25c4:	04 00 00 46 	l.jal 26dc <__rom_size-0x17c70>
    25c8:	20 00 01 52 	l.sys 0x152
	...
    25d4:	00 00 44 7c 	l.j 137c4 <__rom_size-0x6b88>
    25d8:	00 00 44 c4 	l.j 138e8 <__rom_size-0x6a64>
    25dc:	00 01 54 00 	l.j 575dc <__rom_size+0x3d290>
    25e0:	00 44 c4 00 	l.j 11335e0 <__stack+0xcb35e4>
    25e4:	00 45 24 00 	l.j 114b5e4 <__stack+0xccb5e8>
    25e8:	01 62 00 00 	l.j 58825e8 <__stack+0x54025ec>
	...
    25f4:	45 34 00 00 	l.jr r0
    25f8:	45 8f 00 01 	l.jr r0
    25fc:	5b 00 00 45 	.word 0x5b000045
    2600:	a4 00 00 45 	l.andi r0,r0,0x45
    2604:	f3 00 01 5b 	l.cust5 r24,r0,r0,0xa,0x1b
    2608:	00 00 46 04 	l.j 13e18 <__rom_size-0x6534>
    260c:	00 00 46 2c 	l.j 13ebc <__rom_size-0x6490>
    2610:	00 01 5b 00 	l.j 59210 <__rom_size+0x3eec4>
	...
    261c:	00 46 54 00 	l.j 119761c <__stack+0xd17620>
    2620:	00 46 8c 00 	l.j 11a5620 <__stack+0xd25624>
    2624:	02 71 00 00 	l.j f9c42624 <__stack+0xf97c2628>
    2628:	00 46 8c 00 	l.j 11a5628 <__stack+0xd2562c>
    262c:	00 46 dc 00 	l.j 11b962c <__stack+0xd39630>
    2630:	02 71 10 00 	l.j f9c46630 <__stack+0xf97c6634>
	...
    263c:	00 46 54 00 	l.j 119763c <__stack+0xd17640>
    2640:	00 46 60 00 	l.j 119a640 <__stack+0xd1a644>
    2644:	01 53 00 00 	l.j 54c2644 <__stack+0x5042648>
    2648:	46 60 00 00 	l.jr r0
    264c:	46 d4 00 01 	l.jr r0
    2650:	5e 00 00 00 	.word 0x5e000000
    2654:	00 00 00 00 	l.j 2654 <__rom_size-0x17cf8>
    2658:	00 00 00 46 	l.j 2770 <__rom_size-0x17bdc>
    265c:	54 00 00 46 	.word 0x54000046
    2660:	6c 00 01 54 	.word 0x6c000154
    2664:	00 00 46 6c 	l.j 14014 <__rom_size-0x6338>
    2668:	00 00 46 d0 	l.j 141a8 <__rom_size-0x61a4>
    266c:	00 01 52 00 	l.j 56e6c <__rom_size+0x3cb20>
	...
    2678:	00 46 8c 00 	l.j 11a5678 <__stack+0xd2567c>
    267c:	00 46 93 00 	l.j 11a727c <__stack+0xd27280>
    2680:	16 03 00 41 	.word 0x16030041
    2684:	a8 dc 94 01 	l.ori r6,r28,0x9401
    2688:	48 24 48 25 	l.jalr r9
    268c:	73 00 1e 03 	l.cust1 
    2690:	00 41 dc 8c 	l.j 10798c0 <__stack+0xbf98c4>
    2694:	06 22 9f 00 	l.jal f88aa294 <__stack+0xf842a298>
    2698:	00 46 b4 00 	l.j 11af698 <__stack+0xd2f69c>
    269c:	00 46 bb 00 	l.j 11b129c <__stack+0xd312a0>
    26a0:	06 7b 00 80 	l.jal f9ec28a0 <__stack+0xf9a428a4>
    26a4:	00 22 9f 00 	l.j 8aa2a4 <__stack+0x42a2a8>
	...
    26b0:	00 46 dc 00 	l.j 11b96b0 <__stack+0xd396b4>
    26b4:	00 47 04 00 	l.j 11c36b4 <__stack+0xd436b8>
    26b8:	02 71 00 00 	l.j f9c426b8 <__stack+0xf97c26bc>
    26bc:	00 47 04 00 	l.j 11c36bc <__stack+0xd436c0>
    26c0:	00 49 fc 00 	l.j 12816c0 <__stack+0xe016c4>
    26c4:	02 71 20 00 	l.j f9c4a6c4 <__stack+0xf97ca6c8>
	...
    26d0:	00 46 dc 00 	l.j 11b96d0 <__stack+0xd396d4>
    26d4:	00 46 e8 00 	l.j 11bc6d4 <__stack+0xd3c6d8>
    26d8:	01 53 00 00 	l.j 54c26d8 <__stack+0x50426dc>
    26dc:	46 e8 00 00 	l.jr r0
    26e0:	47 1c 00 01 	l.jr r0
    26e4:	5e 00 00 47 	.word 0x5e000047
    26e8:	1c 00 00 49 	.word 0x1c000049
    26ec:	ec 00 01 5e 	.word 0xec00015e
	...
    26f8:	00 00 46 dc 	l.j 14268 <__rom_size-0x60e4>
    26fc:	00 00 47 2c 	l.j 143ac <__rom_size-0x5fa0>
    2700:	00 01 54 00 	l.j 57700 <__rom_size+0x3d3b4>
    2704:	00 47 2c 00 	l.j 11cd704 <__stack+0xd4d708>
    2708:	00 48 74 00 	l.j 121f708 <__stack+0xd9f70c>
    270c:	01 60 00 00 	l.j 580270c <__stack+0x5382710>
    2710:	48 74 00 00 	l.jalr r0
    2714:	49 f0 00 01 	l.jalr r0
    2718:	60 00 00 00 	.word 0x60000000
    271c:	00 00 00 00 	l.j 271c <__rom_size-0x17c30>
    2720:	00 00 00 46 	l.j 2838 <__rom_size-0x17b14>
    2724:	dc 00 00 47 	l.sh 0x47(r0),r0
    2728:	18 00 01 55 	l.movhi r0,0x155
    272c:	00 00 47 18 	l.j 1438c <__rom_size-0x5fc0>
    2730:	00 00 47 70 	l.j 144f0 <__rom_size-0x5e5c>
    2734:	00 01 52 00 	l.j 56f34 <__rom_size+0x3cbe8>
	...
    2740:	00 48 3c 00 	l.j 1211740 <__stack+0xd91744>
    2744:	00 48 48 00 	l.j 1214744 <__stack+0xd94748>
    2748:	03 77 01 9f 	l.j fddc2dc4 <__stack+0xfd942dc8>
    274c:	00 00 48 48 	l.j 1486c <__rom_size-0x5ae0>
    2750:	00 00 48 54 	l.j 148a0 <__rom_size-0x5aac>
    2754:	00 03 77 02 	l.j e035c <__ram_length+0x6035c>
    2758:	9f 00 00 48 	l.addi r24,r0,0x48
    275c:	54 00 00 48 	.word 0x54000048
    2760:	64 00 03 77 	.word 0x64000377
    2764:	03 9f 00 00 	l.j fe7c2764 <__stack+0xfe342768>
    2768:	48 64 00 00 	l.jalr r0
    276c:	48 74 00 01 	l.jalr r0
    2770:	57 00 00 00 	.word 0x57000000
    2774:	00 00 00 00 	l.j 2774 <__rom_size-0x17bd8>
    2778:	00 00 00 48 	l.j 2898 <__rom_size-0x17ab4>
    277c:	ec 00 00 48 	.word 0xec000048
    2780:	f0 00 03 08 	l.cust5 r0,r0,r0,0x18,0x8
    2784:	64 9f 00 00 	.word 0x649f0000
    2788:	48 f0 00 00 	l.jalr r0
    278c:	49 08 00 01 	l.jalr r0
    2790:	52 00 00 49 	.word 0x52000049
    2794:	08 00 00 49 	.word 0x08000049
    2798:	18 00 03 72 	l.movhi r0,0x372
    279c:	7f 9f 00 00 	l.cust4 
    27a0:	49 30 00 00 	l.jalr r0
    27a4:	49 34 00 01 	l.jalr r0
    27a8:	52 00 00 00 	.word 0x52000000
    27ac:	00 00 00 00 	l.j 27ac <__rom_size-0x17ba0>
    27b0:	00 00 00 49 	l.j 28d4 <__rom_size-0x17a78>
    27b4:	fc 00 00 4a 	l.cust8 
    27b8:	38 00 02 71 	.word 0x38000271
    27bc:	00 00 00 4a 	l.j 28e4 <__rom_size-0x17a68>
    27c0:	38 00 00 4b 	.word 0x3800004b
    27c4:	00 00 02 71 	l.j 3188 <__rom_size-0x171c4>
    27c8:	28 00 00 00 	.word 0x28000000
    27cc:	00 00 00 00 	l.j 27cc <__rom_size-0x17b80>
    27d0:	00 00 00 49 	l.j 28f4 <__rom_size-0x17a58>
    27d4:	fc 00 00 4a 	l.cust8 
    27d8:	50 00 01 53 	.word 0x50000153
    27dc:	00 00 4a 50 	l.j 1511c <__rom_size-0x5230>
    27e0:	00 00 4a e0 	l.j 15360 <__rom_size-0x4fec>
    27e4:	00 01 5e 00 	l.j 59fe4 <__rom_size+0x3fc98>
	...
    27f0:	00 49 fc 00 	l.j 12817f0 <__stack+0xe017f4>
    27f4:	00 4a 50 00 	l.j 12967f4 <__stack+0xe167f8>
    27f8:	01 54 00 00 	l.j 55027f8 <__stack+0x50827fc>
    27fc:	4a 50 00 00 	l.jalr r0
    2800:	4a f8 00 01 	l.jalr r0
    2804:	6a 00 00 00 	.word 0x6a000000
    2808:	00 00 00 00 	l.j 2808 <__rom_size-0x17b44>
    280c:	00 00 00 49 	l.j 2930 <__rom_size-0x17a1c>
    2810:	fc 00 00 4a 	l.cust8 
    2814:	50 00 01 55 	.word 0x50000155
    2818:	00 00 4a 50 	l.j 15158 <__rom_size-0x51f4>
    281c:	00 00 4a c4 	l.j 1532c <__rom_size-0x5020>
    2820:	00 01 52 00 	l.j 57020 <__rom_size+0x3ccd4>
    2824:	00 4a c4 00 	l.j 12b3824 <__stack+0xe33828>
    2828:	00 4a dc 00 	l.j 12b9828 <__stack+0xe3982c>
    282c:	01 52 00 00 	l.j 548282c <__stack+0x5002830>
	...
    2838:	4a 80 00 00 	l.jalr r0
    283c:	4a 9f 00 0a 	l.jalr r0
    2840:	7b 00 03 00 	l.cust3 
    2844:	41 dc 8c 06 	.word 0x41dc8c06
    2848:	22 9f 00 00 	.word 0x229f0000
	...
    2854:	4a 80 00 00 	l.jalr r0
    2858:	4a 90 00 01 	l.jalr r0
    285c:	55 00 00 4a 	.word 0x5500004a
    2860:	90 00 00 4a 	l.lbs r0,0x4a(r0)
    2864:	c4 00 01 60 	.word 0xc4000160
	...
    2870:	00 00 4b 00 	l.j 15470 <__rom_size-0x4edc>
    2874:	00 00 4b 24 	l.j 15504 <__rom_size-0x4e48>
    2878:	00 02 71 00 	l.j 9ec78 <__ram_length+0x1ec78>
    287c:	00 00 4b 24 	l.j 1550c <__rom_size-0x4e40>
    2880:	00 00 4e 4c 	l.j 161b0 <__rom_size-0x419c>
    2884:	00 02 71 30 	l.j 9ed44 <__ram_length+0x1ed44>
	...
    2890:	00 00 4b 00 	l.j 15490 <__rom_size-0x4ebc>
    2894:	00 00 4b 34 	l.j 15564 <__rom_size-0x4de8>
    2898:	00 01 53 00 	l.j 57498 <__rom_size+0x3d14c>
    289c:	00 4b 34 00 	l.j 12cf89c <__stack+0xe4f8a0>
    28a0:	00 4e 34 00 	l.j 138f8a0 <__stack+0xf0f8a4>
    28a4:	01 52 00 00 	l.j 54828a4 <__stack+0x50028a8>
	...
    28b0:	4b 00 00 00 	l.jalr r0
    28b4:	4b 8c 00 02 	l.jalr r0
    28b8:	30 9f 00 00 	.word 0x309f0000
    28bc:	4b 8c 00 00 	l.jalr r0
    28c0:	4b a8 00 06 	l.jalr r0
    28c4:	72 1c 06 39 	l.cust1 
    28c8:	25 9f 00 00 	l.rfe 
    28cc:	4b a8 00 00 	l.jalr r0
    28d0:	4b b8 00 02 	l.jalr r0
    28d4:	30 9f 00 00 	.word 0x309f0000
    28d8:	4b b8 00 00 	l.jalr r0
    28dc:	4b c0 00 01 	l.jalr r0
    28e0:	5e 00 00 4b 	.word 0x5e00004b
    28e4:	c0 00 00 4d 	l.mtspr r0,r0,0x4d
    28e8:	54 00 02 30 	.word 0x54000230
    28ec:	9f 00 00 4d 	l.addi r24,r0,0x4d
    28f0:	5c 00 00 4d 	.word 0x5c00004d
    28f4:	6c 00 02 30 	.word 0x6c000230
    28f8:	9f 00 00 4d 	l.addi r24,r0,0x4d
    28fc:	6c 00 00 4d 	.word 0x6c00004d
    2900:	74 00 02 73 	l.cust2 
    2904:	0c 00 00 4d 	l.bnf 2a38 <__rom_size-0x17914>
    2908:	74 00 00 4d 	l.cust2 
    290c:	78 00 02 30 	l.cust3 
    2910:	9f 00 00 4d 	l.addi r24,r0,0x4d
    2914:	78 00 00 4e 	l.cust3 
    2918:	28 00 01 5e 	lv.nor r0,r0,r0
	...
    2924:	00 00 4d 78 	l.j 15f04 <__rom_size-0x4448>
    2928:	00 00 4d 7c 	l.j 15f18 <__rom_size-0x4434>
    292c:	00 02 30 9f 	l.j 8eba8 <__ram_length+0xeba8>
	...
    2938:	00 00 4d 80 	l.j 15f38 <__rom_size-0x4414>
    293c:	00 00 4d 88 	l.j 15f5c <__rom_size-0x43f0>
    2940:	00 02 34 9f 	l.j 8fbbc <__ram_length+0xfbbc>
    2944:	00 00 4d fc 	l.j 16134 <__rom_size-0x4218>
    2948:	00 00 4e 10 	l.j 16188 <__rom_size-0x41c4>
    294c:	00 01 60 00 	l.j 5a94c <__rom_size+0x40600>
    2950:	00 4e 20 00 	l.j 138a950 <__stack+0xf0a954>
    2954:	00 4e 28 00 	l.j 138c954 <__stack+0xf0c958>
    2958:	01 60 00 00 	l.j 5802958 <__stack+0x538295c>
	...
    2964:	4d 94 00 00 	l.maci r20,0x0
    2968:	4d fc 00 01 	l.maci r28,0x1
    296c:	5b 00 00 4e 	.word 0x5b00004e
    2970:	10 00 00 4e 	l.bf 2aa8 <__rom_size-0x178a4>
    2974:	20 00 01 5b 	l.sys 0x15b
	...
    2980:	00 00 4d 80 	l.j 15f80 <__rom_size-0x43cc>
    2984:	00 00 4d 88 	l.j 15fa4 <__rom_size-0x43a8>
    2988:	00 02 84 00 	l.j a3988 <__ram_length+0x23988>
    298c:	00 00 4d 88 	l.j 15fac <__rom_size-0x43a0>
    2990:	00 00 4e 28 	l.j 16230 <__rom_size-0x411c>
    2994:	00 01 62 00 	l.j 5b194 <__rom_size+0x40e48>
	...
    29a0:	00 4b c0 00 	l.j 12f29a0 <__stack+0xe729a4>
    29a4:	00 4d 04 00 	l.j 13439a4 <__stack+0xec39a8>
    29a8:	02 30 9f 00 	l.j f8c2a5a8 <__stack+0xf87aa5ac>
    29ac:	00 4d 04 00 	l.j 13439ac <__stack+0xec39b0>
    29b0:	00 4d 10 00 	l.j 13469b0 <__stack+0xec69b4>
    29b4:	01 55 00 00 	l.j 55429b4 <__stack+0x50c29b8>
    29b8:	4d 10 00 00 	l.maci r16,0x0
    29bc:	4d 14 00 11 	l.maci r20,0x11
    29c0:	03 00 41 a8 	l.j fc013060 <__stack+0xfbb93064>
    29c4:	f1 94 01 48 	l.cust5 r12,r20,r0,0xa,0x8
    29c8:	24 48 26 3a 	l.rfe 
    29cc:	24 7e 00 21 	l.rfe 
    29d0:	9f 00 00 4d 	l.addi r24,r0,0x4d
    29d4:	14 00 00 4d 	.word 0x1400004d
    29d8:	1c 00 01 5e 	.word 0x1c00015e
    29dc:	00 00 4d 1c 	l.j 15e4c <__rom_size-0x4500>
    29e0:	00 00 4d 38 	l.j 15ec0 <__rom_size-0x448c>
    29e4:	00 02 30 9f 	l.j 8ec60 <__ram_length+0xec60>
    29e8:	00 00 4d 38 	l.j 15ec8 <__rom_size-0x4484>
    29ec:	00 00 4d 48 	l.j 15f0c <__rom_size-0x4440>
    29f0:	00 11 03 00 	l.j 4435f0 <_stack+0x21930>
    29f4:	41 a8 ef 94 	.word 0x41a8ef94
    29f8:	01 48 24 48 	l.j 520bb18 <__stack+0x4d8bb1c>
    29fc:	26 32 24 77 	l.rfe 
    2a00:	00 21 9f 00 	l.j 86a600 <__stack+0x3ea604>
    2a04:	00 4d 48 00 	l.j 1354a04 <__stack+0xed4a08>
    2a08:	00 4d 50 00 	l.j 1356a08 <__stack+0xed6a0c>
    2a0c:	03 7e 01 9f 	l.j fdf83088 <__stack+0xfdb0308c>
    2a10:	00 00 4d 50 	l.j 15f50 <__rom_size-0x43fc>
    2a14:	00 00 4d 54 	l.j 15f64 <__rom_size-0x43e8>
    2a18:	00 01 5e 00 	l.j 5a218 <__rom_size+0x3fecc>
    2a1c:	00 4d 54 00 	l.j 1357a1c <__stack+0xed7a20>
    2a20:	00 4d 5c 00 	l.j 1359a20 <__stack+0xed9a24>
    2a24:	01 5e 00 00 	l.j 5782a24 <__stack+0x5302a28>
	...
    2a30:	4d 48 00 00 	l.maci r8,0x0
    2a34:	4d 4c 00 11 	l.maci r12,0x11
    2a38:	03 00 41 a8 	l.j fc0130d8 <__stack+0xfbb930dc>
    2a3c:	f2 94 01 37 	l.cust5 r20,r20,r0,0x9,0x17
    2a40:	25 48 24 48 	l.rfe 
    2a44:	26 74 00 21 	l.rfe 
    2a48:	9f 00 00 00 	l.addi r24,r0,0x0
    2a4c:	00 00 00 00 	l.j 2a4c <__rom_size-0x17900>
    2a50:	00 00 00 4e 	l.j 2b88 <__rom_size-0x177c4>
    2a54:	4c 00 00 4e 	l.maci r0,0x4e
    2a58:	70 00 02 71 	l.cust1 
    2a5c:	00 00 00 4e 	l.j 2b94 <__rom_size-0x177b8>
    2a60:	70 00 00 50 	l.cust1 
    2a64:	34 00 02 71 	.word 0x34000271
    2a68:	1c 00 00 00 	.word 0x1c000000
    2a6c:	00 00 00 00 	l.j 2a6c <__rom_size-0x178e0>
    2a70:	00 00 00 4e 	l.j 2ba8 <__rom_size-0x177a4>
    2a74:	4c 00 00 4e 	l.maci r0,0x4e
    2a78:	58 00 01 53 	.word 0x58000153
    2a7c:	00 00 4e 58 	l.j 163dc <__rom_size-0x3f70>
    2a80:	00 00 4e 84 	l.j 16490 <__rom_size-0x3ebc>
    2a84:	00 01 52 00 	l.j 57284 <__rom_size+0x3cf38>
    2a88:	00 4e 84 00 	l.j 13a3a88 <__stack+0xf23a8c>
    2a8c:	00 4e c8 00 	l.j 13b4a8c <__stack+0xf34a90>
    2a90:	01 52 00 00 	l.j 5482a90 <__stack+0x5002a94>
    2a94:	4e c8 00 00 	l.maci r8,0x0
    2a98:	4e cf 00 02 	l.maci r15,0x2
    2a9c:	91 68 00 00 	l.lbs r11,0x0(r8)
    2aa0:	4e dc 00 00 	l.maci r28,0x0
    2aa4:	4f 24 00 01 	l.maci r4,0x1
    2aa8:	52 00 00 4f 	.word 0x5200004f
    2aac:	24 00 00 4f 	l.rfe 
    2ab0:	2b 00 02 71 	lv.sub.b r24,r0,r0
    2ab4:	00 00 00 4f 	l.j 2bf0 <__rom_size-0x1775c>
    2ab8:	38 00 00 4f 	.word 0x3800004f
    2abc:	54 00 01 52 	.word 0x54000152
	...
    2ac8:	00 00 4e 4c 	l.j 163f8 <__rom_size-0x3f54>
    2acc:	00 00 4e 94 	l.j 1651c <__rom_size-0x3e30>
    2ad0:	00 01 54 00 	l.j 57ad0 <__rom_size+0x3d784>
    2ad4:	00 4e 94 00 	l.j 13a7ad4 <__stack+0xf27ad8>
    2ad8:	00 50 28 00 	l.j 140cad8 <__stack+0xf8cadc>
    2adc:	01 5e 00 00 	l.j 5782adc <__stack+0x5302ae0>
	...
    2ae8:	4f b8 00 00 	l.maci r24,0x0
    2aec:	4f c4 00 03 	l.maci r4,0x3
    2af0:	74 01 9f 00 	l.cust2 
    2af4:	00 4f c4 00 	l.j 13f3af4 <__stack+0xf73af8>
    2af8:	00 4f d0 00 	l.j 13f6af8 <__stack+0xf76afc>
    2afc:	03 74 02 9f 	l.j fdd03578 <__stack+0xfd88357c>
    2b00:	00 00 4f d0 	l.j 16a40 <__rom_size-0x390c>
    2b04:	00 00 4f e0 	l.j 16a84 <__rom_size-0x38c8>
    2b08:	00 03 74 03 	l.j dfb14 <__ram_length+0x5fb14>
    2b0c:	9f 00 00 4f 	l.addi r24,r0,0x4f
    2b10:	e0 00 00 4f 	l.ff1 r0,r0
    2b14:	ec 00 01 54 	.word 0xec000154
	...
    2b20:	00 00 50 34 	l.j 16bf0 <__rom_size-0x375c>
    2b24:	00 00 50 6c 	l.j 16cd4 <__rom_size-0x3678>
    2b28:	00 02 71 00 	l.j 9ef28 <__ram_length+0x1ef28>
    2b2c:	00 00 50 6c 	l.j 16cdc <__rom_size-0x3670>
    2b30:	00 00 50 bc 	l.j 16e20 <__rom_size-0x352c>
    2b34:	00 02 71 10 	l.j 9ef74 <__ram_length+0x1ef74>
	...
    2b40:	00 00 50 34 	l.j 16c10 <__rom_size-0x373c>
    2b44:	00 00 50 40 	l.j 16c44 <__rom_size-0x3708>
    2b48:	00 01 53 00 	l.j 57748 <__rom_size+0x3d3fc>
    2b4c:	00 50 40 00 	l.j 1412b4c <__stack+0xf92b50>
    2b50:	00 50 b4 00 	l.j 142fb50 <__stack+0xfafb54>
    2b54:	01 5e 00 00 	l.j 5782b54 <__stack+0x5302b58>
	...
    2b60:	50 34 00 00 	.word 0x50340000
    2b64:	50 4c 00 01 	.word 0x504c0001
    2b68:	54 00 00 50 	.word 0x54000050
    2b6c:	4c 00 00 50 	l.maci r0,0x50
    2b70:	b0 00 01 52 	l.muli r0,r0,0x152
	...
    2b7c:	00 00 50 6c 	l.j 16d2c <__rom_size-0x3620>
    2b80:	00 00 50 73 	l.j 16d4c <__rom_size-0x3600>
    2b84:	00 16 03 00 	l.j 583784 <__stack+0x103788>
    2b88:	41 a8 dc 94 	.word 0x41a8dc94
    2b8c:	01 48 24 48 	l.j 520bcac <__stack+0x4d8bcb0>
    2b90:	25 73 00 1e 	l.rfe 
    2b94:	03 00 41 dc 	l.j fc013304 <__stack+0xfbb93308>
    2b98:	8c 06 22 9f 	l.lbz r0,0x229f(r6)
    2b9c:	00 00 50 94 	l.j 16dec <__rom_size-0x3560>
    2ba0:	00 00 50 9b 	l.j 16e0c <__rom_size-0x3540>
    2ba4:	00 06 7b 00 	l.j 1a17a4 <__ram_length+0x1217a4>
    2ba8:	80 00 22 9f 	l.ld r0,0x229f(r0)
	...
    2bb4:	00 00 50 bc 	l.j 16ea4 <__rom_size-0x34a8>
    2bb8:	00 00 50 ec 	l.j 16f68 <__rom_size-0x33e4>
    2bbc:	00 02 71 00 	l.j 9efbc <__ram_length+0x1efbc>
    2bc0:	00 00 50 ec 	l.j 16f70 <__rom_size-0x33dc>
    2bc4:	00 00 52 c8 	l.j 176e4 <__rom_size-0x2c68>
    2bc8:	00 02 71 28 	l.j 9f068 <__ram_length+0x1f068>
	...
    2bd4:	00 00 50 bc 	l.j 16ec4 <__rom_size-0x3488>
    2bd8:	00 00 50 f8 	l.j 16fb8 <__rom_size-0x3394>
    2bdc:	00 01 53 00 	l.j 577dc <__rom_size+0x3d490>
    2be0:	00 50 f8 00 	l.j 1440be0 <__stack+0xfc0be4>
    2be4:	00 52 a4 00 	l.j 14abbe4 <__stack+0x102bbe8>
    2be8:	01 52 00 00 	l.j 5482be8 <__stack+0x5002bec>
	...
    2bf4:	50 bc 00 00 	.word 0x50bc0000
    2bf8:	51 00 00 01 	.word 0x51000001
    2bfc:	54 00 00 51 	.word 0x54000051
    2c00:	00 00 00 52 	l.j 2d48 <__rom_size-0x17604>
    2c04:	a8 00 01 5e 	l.ori r0,r0,0x15e
	...
    2c10:	00 00 50 bc 	l.j 16f00 <__rom_size-0x344c>
    2c14:	00 00 51 4c 	l.j 17144 <__rom_size-0x3208>
    2c18:	00 01 55 00 	l.j 58018 <__rom_size+0x3dccc>
    2c1c:	00 52 50 00 	l.j 1496c1c <__stack+0x1016c20>
    2c20:	00 52 78 00 	l.j 14a0c20 <__stack+0x1020c24>
    2c24:	01 55 00 00 	l.j 5542c24 <__stack+0x50c2c28>
	...
    2c30:	51 60 00 00 	.word 0x51600000
    2c34:	51 68 00 01 	.word 0x51680001
    2c38:	62 00 00 51 	.word 0x62000051
    2c3c:	6c 00 00 52 	.word 0x6c000052
    2c40:	50 00 01 62 	.word 0x50000162
	...
    2c4c:	00 00 51 60 	l.j 171cc <__rom_size-0x3180>
    2c50:	00 00 51 68 	l.j 171f0 <__rom_size-0x315c>
    2c54:	00 01 60 00 	l.j 5ac54 <__rom_size+0x40908>
    2c58:	00 51 70 00 	l.j 145ec58 <__stack+0xfdec5c>
    2c5c:	00 51 b8 00 	l.j 1470c5c <__stack+0xff0c60>
    2c60:	01 60 00 00 	l.j 5802c60 <__stack+0x5382c64>
    2c64:	52 0c 00 00 	.word 0x520c0000
    2c68:	52 10 00 01 	.word 0x52100001
    2c6c:	60 00 00 00 	.word 0x60000000
    2c70:	00 00 00 00 	l.j 2c70 <__rom_size-0x176dc>
    2c74:	00 00 00 51 	l.j 2db8 <__rom_size-0x17594>
    2c78:	c8 00 00 52 	.word 0xc8000052
    2c7c:	0c 00 02 80 	l.bnf 367c <__rom_size-0x16cd0>
	...
    2c88:	00 00 00 52 	l.j 2dd0 <__rom_size-0x1757c>
    2c8c:	1c 00 00 52 	.word 0x1c000052
    2c90:	24 00 01 54 	l.rfe 
	...
    2c9c:	00 00 52 c8 	l.j 177bc <__rom_size-0x2b90>
    2ca0:	00 00 52 fc 	l.j 17890 <__rom_size-0x2abc>
    2ca4:	00 02 71 00 	l.j 9f0a4 <__ram_length+0x1f0a4>
    2ca8:	00 00 52 fc 	l.j 17898 <__rom_size-0x2ab4>
    2cac:	00 00 54 24 	l.j 17d3c <__rom_size-0x2610>
    2cb0:	00 02 71 14 	l.j 9f100 <__ram_length+0x1f100>
	...
    2cbc:	00 00 52 c8 	l.j 177dc <__rom_size-0x2b70>
    2cc0:	00 00 52 f0 	l.j 17880 <__rom_size-0x2acc>
    2cc4:	00 01 53 00 	l.j 578c4 <__rom_size+0x3d578>
    2cc8:	00 52 f0 00 	l.j 14becc8 <__stack+0x103eccc>
    2ccc:	00 54 14 00 	l.j 1507ccc <__stack+0x1087cd0>
    2cd0:	01 52 00 00 	l.j 5482cd0 <__stack+0x5002cd4>
	...
    2cdc:	53 2c 00 00 	.word 0x532c0000
    2ce0:	53 34 00 01 	.word 0x53340001
    2ce4:	60 00 00 53 	.word 0x60000053
    2ce8:	38 00 00 54 	.word 0x38000054
    2cec:	08 00 01 60 	.word 0x08000160
	...
    2cf8:	00 00 53 2c 	l.j 179a8 <__rom_size-0x29a4>
    2cfc:	00 00 53 34 	l.j 179cc <__rom_size-0x2980>
    2d00:	00 01 5e 00 	l.j 5a500 <__rom_size+0x401b4>
    2d04:	00 53 3c 00 	l.j 14d1d04 <__stack+0x1051d08>
    2d08:	00 53 9c 00 	l.j 14e9d08 <__stack+0x1069d0c>
    2d0c:	01 5e 00 00 	l.j 5782d0c <__stack+0x5302d10>
    2d10:	53 e0 00 00 	.word 0x53e00000
    2d14:	53 e4 00 01 	.word 0x53e40001
    2d18:	5e 00 00 00 	.word 0x5e000000
    2d1c:	00 00 00 00 	l.j 2d1c <__rom_size-0x17630>
    2d20:	00 00 00 53 	l.j 2e6c <__rom_size-0x174e0>
    2d24:	ac 00 00 53 	l.xori r0,r0,0x53
    2d28:	e0 00 02 7e 	.word 0xe000027e
	...
    2d34:	00 00 00 53 	l.j 2e80 <__rom_size-0x174cc>
    2d38:	f0 00 00 53 	l.cust5 r0,r0,r0,0x2,0x13
    2d3c:	f8 00 01 54 	l.cust7 
	...
    2d48:	00 00 54 24 	l.j 17dd8 <__rom_size-0x2574>
    2d4c:	00 00 54 4c 	l.j 17e7c <__rom_size-0x24d0>
    2d50:	00 02 71 00 	l.j 9f150 <__ram_length+0x1f150>
    2d54:	00 00 54 4c 	l.j 17e84 <__rom_size-0x24c8>
    2d58:	00 00 55 88 	l.j 18378 <__rom_size-0x1fd4>
    2d5c:	00 02 71 1c 	l.j 9f1cc <__ram_length+0x1f1cc>
	...
    2d68:	00 00 54 24 	l.j 17df8 <__rom_size-0x2554>
    2d6c:	00 00 54 48 	l.j 17e8c <__rom_size-0x24c0>
    2d70:	00 01 53 00 	l.j 57970 <__rom_size+0x3d624>
    2d74:	00 54 48 00 	l.j 1514d74 <__stack+0x1094d78>
    2d78:	00 55 70 00 	l.j 155ed78 <__stack+0x10ded7c>
    2d7c:	01 52 00 00 	l.j 5482d7c <__stack+0x5002d80>
	...
    2d88:	54 24 00 00 	.word 0x54240000
    2d8c:	54 60 00 01 	.word 0x54600001
    2d90:	54 00 00 54 	.word 0x54000054
    2d94:	60 00 00 54 	.word 0x60000054
    2d98:	94 00 01 62 	l.lhz r0,0x162(r0)
    2d9c:	00 00 54 94 	l.j 17fec <__rom_size-0x2360>
    2da0:	00 00 54 c8 	l.j 180c0 <__rom_size-0x228c>
    2da4:	00 01 62 00 	l.j 5b5a4 <__rom_size+0x41258>
    2da8:	00 54 c8 00 	l.j 1534da8 <__stack+0x10b4dac>
    2dac:	00 54 e8 00 	l.j 153cdac <__stack+0x10bcdb0>
    2db0:	01 64 00 00 	l.j 5902db0 <__stack+0x5482db4>
    2db4:	54 e8 00 00 	.word 0x54e80000
    2db8:	54 f0 00 04 	.word 0x54f00004
    2dbc:	84 80 7c 9f 	l.lwz r4,0x7c9f(r0)
    2dc0:	00 00 54 f0 	l.j 18180 <__rom_size-0x21cc>
    2dc4:	00 00 55 18 	l.j 18224 <__rom_size-0x2128>
    2dc8:	00 01 64 00 	l.j 5bdc8 <__rom_size+0x41a7c>
    2dcc:	00 55 30 00 	l.j 154edcc <__stack+0x10cedd0>
    2dd0:	00 55 38 00 	l.j 1550dd0 <__stack+0x10d0dd4>
    2dd4:	01 62 00 00 	l.j 5882dd4 <__stack+0x5402dd8>
	...
    2de0:	54 24 00 00 	.word 0x54240000
    2de4:	54 74 00 01 	.word 0x54740001
    2de8:	55 00 00 54 	.word 0x55000054
    2dec:	74 00 00 54 	l.cust2 
    2df0:	a8 00 01 5e 	l.ori r0,r0,0x15e
    2df4:	00 00 54 b8 	l.j 180d4 <__rom_size-0x2278>
    2df8:	00 00 54 c8 	l.j 18118 <__rom_size-0x2234>
    2dfc:	00 01 5e 00 	l.j 5a5fc <__rom_size+0x402b0>
    2e00:	00 54 c8 00 	l.j 1534e00 <__stack+0x10b4e04>
    2e04:	00 54 cc 00 	l.j 1535e04 <__stack+0x10b5e08>
    2e08:	01 66 00 00 	l.j 5982e08 <__stack+0x5502e0c>
    2e0c:	54 cc 00 00 	.word 0x54cc0000
    2e10:	54 e0 00 04 	.word 0x54e00004
    2e14:	86 80 04 9f 	l.lwz r20,0x49f(r0)
    2e18:	00 00 54 e0 	l.j 18198 <__rom_size-0x21b4>
    2e1c:	00 00 55 80 	l.j 1841c <__rom_size-0x1f30>
    2e20:	00 01 66 00 	l.j 5c620 <__rom_size+0x422d4>
	...
    2e2c:	00 54 24 00 	l.j 150be2c <__stack+0x108be30>
    2e30:	00 54 c8 00 	l.j 1534e30 <__stack+0x10b4e34>
    2e34:	02 31 9f 00 	l.j f8c6aa34 <__stack+0xf87eaa38>
    2e38:	00 54 c8 00 	l.j 1534e38 <__stack+0x10b4e3c>
    2e3c:	00 54 d8 00 	l.j 1538e3c <__stack+0x10b8e40>
    2e40:	01 60 00 00 	l.j 5802e40 <__stack+0x5382e44>
    2e44:	54 d8 00 00 	.word 0x54d80000
    2e48:	54 f0 00 01 	.word 0x54f00001
    2e4c:	60 00 00 54 	.word 0x60000054
    2e50:	f0 00 00 55 	l.cust5 r0,r0,r0,0x2,0x15
    2e54:	28 00 01 60 	lv.pack.b r0,r0,r0
    2e58:	00 00 55 28 	l.j 182f8 <__rom_size-0x2054>
    2e5c:	00 00 55 78 	l.j 1843c <__rom_size-0x1f10>
    2e60:	00 01 60 00 	l.j 5ae60 <__rom_size+0x40b14>
    2e64:	00 55 78 00 	l.j 1560e64 <__stack+0x10e0e68>
    2e68:	00 55 88 00 	l.j 1564e68 <__stack+0x10e4e6c>
    2e6c:	01 5b 00 00 	l.j 56c2e6c <__stack+0x5242e70>
	...
    2e78:	54 50 00 00 	.word 0x54500000
    2e7c:	54 c8 00 01 	.word 0x54c80001
    2e80:	53 00 00 00 	.word 0x53000000
    2e84:	00 00 00 00 	l.j 2e84 <__rom_size-0x174c8>
    2e88:	00 00 00 54 	l.j 2fd8 <__rom_size-0x17374>
    2e8c:	78 00 00 54 	l.cust3 
    2e90:	80 00 01 53 	l.ld r0,0x153(r0)
    2e94:	00 00 54 80 	l.j 18094 <__rom_size-0x22b8>
    2e98:	00 00 54 88 	l.j 180b8 <__rom_size-0x2294>
    2e9c:	00 01 56 00 	l.j 5869c <__rom_size+0x3e350>
    2ea0:	00 54 88 00 	l.j 1524ea0 <__stack+0x10a4ea4>
    2ea4:	00 54 94 00 	l.j 1527ea4 <__stack+0x10a7ea8>
    2ea8:	03 76 7f 9f 	l.j fdda2d24 <__stack+0xfd922d28>
    2eac:	00 00 54 94 	l.j 180fc <__rom_size-0x2250>
    2eb0:	00 00 54 b8 	l.j 18190 <__rom_size-0x21bc>
    2eb4:	00 01 56 00 	l.j 586b4 <__rom_size+0x3e368>
	...
    2ec0:	00 54 60 00 	l.j 151aec0 <__stack+0x109aec4>
    2ec4:	00 54 70 00 	l.j 151eec4 <__stack+0x109eec8>
    2ec8:	01 55 00 00 	l.j 5542ec8 <__stack+0x50c2ecc>
    2ecc:	54 70 00 00 	.word 0x54700000
    2ed0:	54 b8 00 01 	.word 0x54b80001
    2ed4:	54 00 00 00 	.word 0x54000000
    2ed8:	00 00 00 00 	l.j 2ed8 <__rom_size-0x17474>
    2edc:	00 00 00 55 	l.j 3030 <__rom_size-0x1731c>
    2ee0:	30 00 00 55 	.word 0x30000055
    2ee4:	38 00 02 30 	.word 0x38000230
    2ee8:	9f 00 00 55 	l.addi r24,r0,0x55
    2eec:	48 00 00 55 	l.jalr r0
    2ef0:	58 00 01 53 	.word 0x58000153
	...
    2efc:	00 00 55 88 	l.j 1851c <__rom_size-0x1e30>
    2f00:	00 00 55 a8 	l.j 185a0 <__rom_size-0x1dac>
    2f04:	00 02 71 00 	l.j 9f304 <__ram_length+0x1f304>
    2f08:	00 00 55 a8 	l.j 185a8 <__rom_size-0x1da4>
    2f0c:	00 00 56 9c 	l.j 1897c <__rom_size-0x19d0>
    2f10:	00 02 71 10 	l.j 9f350 <__ram_length+0x1f350>
	...
    2f1c:	00 00 55 88 	l.j 1853c <__rom_size-0x1e10>
    2f20:	00 00 55 d0 	l.j 18660 <__rom_size-0x1cec>
    2f24:	00 01 53 00 	l.j 57b24 <__rom_size+0x3d7d8>
	...
    2f30:	00 55 b4 00 	l.j 156ff30 <__stack+0x10eff34>
    2f34:	00 55 bc 00 	l.j 1571f34 <__stack+0x10f1f38>
    2f38:	01 5e 00 00 	l.j 5782f38 <__stack+0x5302f3c>
    2f3c:	55 c0 00 00 	.word 0x55c00000
    2f40:	56 94 00 01 	.word 0x56940001
    2f44:	5e 00 00 00 	.word 0x5e000000
    2f48:	00 00 00 00 	l.j 2f48 <__rom_size-0x17404>
    2f4c:	00 00 00 55 	l.j 30a0 <__rom_size-0x172ac>
    2f50:	b4 00 00 55 	l.mfspr r0,r0,0x55
    2f54:	bc 00 01 52 	l.sfeqi r0,0x152
    2f58:	00 00 55 c4 	l.j 18668 <__rom_size-0x1ce4>
    2f5c:	00 00 56 20 	l.j 187dc <__rom_size-0x1b70>
    2f60:	00 01 52 00 	l.j 57760 <__rom_size+0x3d414>
    2f64:	00 56 64 00 	l.j 159bf64 <__stack+0x111bf68>
    2f68:	00 56 68 00 	l.j 159cf68 <__stack+0x111cf6c>
    2f6c:	01 52 00 00 	l.j 5482f6c <__stack+0x5002f70>
	...
    2f78:	56 30 00 00 	.word 0x56300000
    2f7c:	56 44 00 01 	.word 0x56440001
    2f80:	52 00 00 00 	.word 0x52000000
    2f84:	00 00 00 00 	l.j 2f84 <__rom_size-0x173c8>
    2f88:	00 00 00 56 	l.j 30e0 <__rom_size-0x1726c>
    2f8c:	74 00 00 56 	l.cust2 
    2f90:	7c 00 01 52 	l.cust4 
	...
    2f9c:	00 00 56 9c 	l.j 18a0c <__rom_size-0x1940>
    2fa0:	00 00 56 cc 	l.j 18ad0 <__rom_size-0x187c>
    2fa4:	00 02 71 00 	l.j 9f3a4 <__ram_length+0x1f3a4>
    2fa8:	00 00 56 cc 	l.j 18ad8 <__rom_size-0x1874>
    2fac:	00 00 5b 58 	l.j 19d0c <__rom_size-0x640>
    2fb0:	00 02 71 1c 	l.j 9f420 <__ram_length+0x1f420>
	...
    2fbc:	00 00 57 60 	l.j 18d3c <__rom_size-0x1610>
    2fc0:	00 00 57 64 	l.j 18d50 <__rom_size-0x15fc>
    2fc4:	00 02 30 9f 	l.j 8f240 <__ram_length+0xf240>
	...
    2fd0:	00 00 5b 58 	l.j 19d30 <__rom_size-0x61c>
    2fd4:	00 00 5b 9c 	l.j 19e44 <__rom_size-0x508>
    2fd8:	00 02 71 00 	l.j 9f3d8 <__ram_length+0x1f3d8>
    2fdc:	00 00 5b 9c 	l.j 19e4c <__rom_size-0x500>
    2fe0:	00 00 5e 6c 	l.j 1a990 <__rom_size+0x644>
    2fe4:	00 02 71 34 	l.j 9f4b4 <__ram_length+0x1f4b4>
	...
    2ff0:	00 00 5b 58 	l.j 19d50 <__rom_size-0x5fc>
    2ff4:	00 00 5b 68 	l.j 19d94 <__rom_size-0x5b8>
    2ff8:	00 01 53 00 	l.j 57bf8 <__rom_size+0x3d8ac>
	...
    3004:	00 5d 1c 00 	l.j 174a004 <__stack+0x12ca008>
    3008:	00 5d 23 00 	l.j 174bc08 <__stack+0x12cbc0c>
    300c:	01 5b 00 00 	l.j 56c300c <__stack+0x5243010>
    3010:	5d 23 00 00 	.word 0x5d230000
    3014:	5d 30 00 01 	.word 0x5d300001
    3018:	66 00 00 5d 	.word 0x6600005d
    301c:	30 00 00 5d 	.word 0x3000005d
    3020:	34 00 06 7b 	.word 0x3400067b
    3024:	00 86 00 1c 	l.j 2183094 <__stack+0x1d03098>
    3028:	9f 00 00 5d 	l.addi r24,r0,0x5d
    302c:	34 00 00 5d 	.word 0x3400005d
    3030:	3c 00 01 5b 	.word 0x3c00015b
	...
    303c:	00 00 5e 6c 	l.j 1a9ec <__rom_size+0x6a0>
    3040:	00 00 5e 70 	l.j 1aa00 <__rom_size+0x6b4>
    3044:	00 02 71 00 	l.j 9f444 <__ram_length+0x1f444>
    3048:	00 00 5e 70 	l.j 1aa08 <__rom_size+0x6bc>
    304c:	00 00 5e 94 	l.j 1aa9c <__rom_size+0x750>
    3050:	00 02 71 04 	l.j 9f460 <__ram_length+0x1f460>
	...
    305c:	00 00 5e 6c 	l.j 1aa0c <__rom_size+0x6c0>
    3060:	00 00 5e 77 	l.j 1aa3c <__rom_size+0x6f0>
    3064:	00 01 53 00 	l.j 57c64 <__rom_size+0x3d918>
	...
    3070:	00 5e 94 00 	l.j 17a8070 <__stack+0x1328074>
    3074:	00 5e a0 00 	l.j 17ab074 <__stack+0x132b078>
    3078:	02 71 00 00 	l.j f9c43078 <__stack+0xf97c307c>
    307c:	00 5e a0 00 	l.j 17ab07c <__stack+0x132b080>
    3080:	00 5e d0 00 	l.j 17b7080 <__stack+0x1337084>
    3084:	03 71 cc 00 	l.j fdc76084 <__stack+0xfd7f6088>
	...
    3090:	00 00 5e 94 	l.j 1aae0 <__rom_size+0x794>
    3094:	00 00 5e b0 	l.j 1ab54 <__rom_size+0x808>
    3098:	00 01 53 00 	l.j 57c98 <__rom_size+0x3d94c>
    309c:	00 5e b0 00 	l.j 17af09c <__stack+0x132f0a0>
    30a0:	00 5e b7 00 	l.j 17b0ca0 <__stack+0x1330ca4>
    30a4:	01 55 00 00 	l.j 55430a4 <__stack+0x50c30a8>
	...
    30b0:	5e 94 00 00 	.word 0x5e940000
    30b4:	5e b0 00 01 	.word 0x5eb00001
    30b8:	54 00 00 5e 	.word 0x5400005e
    30bc:	b0 00 00 5e 	l.muli r0,r0,0x5e
    30c0:	b7 00 02 71 	l.mfspr r24,r0,0x271
	...
    30cc:	00 00 00 5e 	l.j 3244 <__rom_size-0x17108>
    30d0:	d0 00 00 5f 	l.sd 0x5f(r0),r0
    30d4:	28 00 02 71 	lv.sub.b r0,r0,r0
    30d8:	00 00 00 5f 	l.j 3254 <__rom_size-0x170f8>
    30dc:	28 00 00 6a 	lv.sll.h r0,r0,r0
    30e0:	e8 00 02 71 	.word 0xe8000271
    30e4:	3c 00 00 00 	.word 0x3c000000
    30e8:	00 00 00 00 	l.j 30e8 <__rom_size-0x17264>
    30ec:	00 00 00 5e 	l.j 3264 <__rom_size-0x170e8>
    30f0:	d0 00 00 5f 	l.sd 0x5f(r0),r0
    30f4:	0c 00 01 53 	l.bnf 3640 <__rom_size-0x16d0c>
    30f8:	00 00 5f 0c 	l.j 1ad28 <__rom_size+0x9dc>
    30fc:	00 00 6a d0 	l.j 1dc3c <__rom_size+0x38f0>
    3100:	00 01 64 00 	l.j 5c100 <__rom_size+0x41db4>
	...
    310c:	00 5f 4c 00 	l.j 17d610c <__stack+0x1356110>
    3110:	00 5f 68 00 	l.j 17dd110 <__stack+0x135d114>
    3114:	02 30 9f 00 	l.j f8c2ad14 <__stack+0xf87aad18>
    3118:	00 5f 68 00 	l.j 17dd118 <__stack+0x135d11c>
    311c:	00 65 78 00 	l.j 196111c <__stack+0x14e1120>
    3120:	01 6a 00 00 	l.j 5a83120 <__stack+0x5603124>
    3124:	65 84 00 00 	.word 0x65840000
    3128:	65 a0 00 01 	.word 0x65a00001
    312c:	6a 00 00 65 	.word 0x6a000065
    3130:	bc 00 00 69 	l.sfeqi r0,0x69
    3134:	e0 00 01 6a 	.word 0xe000016a
    3138:	00 00 69 e8 	l.j 1d8d8 <__rom_size+0x358c>
    313c:	00 00 6a 1c 	l.j 1d9ac <__rom_size+0x3660>
    3140:	00 01 6a 00 	l.j 5d940 <__rom_size+0x435f4>
    3144:	00 6a 24 00 	l.j 1a8c144 <__stack+0x160c148>
    3148:	00 6a 30 00 	l.j 1a8f148 <__stack+0x160f14c>
    314c:	01 6a 00 00 	l.j 5a8314c <__stack+0x5603150>
    3150:	6a 3c 00 00 	.word 0x6a3c0000
    3154:	6a 70 00 01 	.word 0x6a700001
    3158:	6a 00 00 6a 	.word 0x6a00006a
    315c:	70 00 00 6a 	l.cust1 
    3160:	a0 00 01 6a 	l.addic r0,r0,0x16a
    3164:	00 00 6a a0 	l.j 1dbe4 <__rom_size+0x3898>
    3168:	00 00 6a dc 	l.j 1dcd8 <__rom_size+0x398c>
    316c:	00 01 6a 00 	l.j 5d96c <__rom_size+0x43620>
	...
    3178:	00 65 34 00 	l.j 1950178 <__stack+0x14d017c>
    317c:	00 65 4c 00 	l.j 195617c <__stack+0x14d6180>
    3180:	01 55 00 00 	l.j 5543180 <__stack+0x50c3184>
    3184:	6a 6c 00 00 	.word 0x6a6c0000
    3188:	6a 70 00 01 	.word 0x6a700001
    318c:	55 00 00 00 	.word 0x55000000
    3190:	00 00 00 00 	l.j 3190 <__rom_size-0x171bc>
    3194:	00 00 00 65 	l.j 3328 <__rom_size-0x17024>
    3198:	34 00 00 65 	.word 0x34000065
    319c:	4c 00 01 6c 	l.maci r0,0x16c
    31a0:	00 00 65 6c 	l.j 1c750 <__rom_size+0x2404>
    31a4:	00 00 68 64 	l.j 1d334 <__rom_size+0x2fe8>
    31a8:	00 01 6c 00 	l.j 5e1a8 <__rom_size+0x43e5c>
    31ac:	00 6a 10 00 	l.j 1a871ac <__stack+0x16071b0>
    31b0:	00 6a 1c 00 	l.j 1a8a1b0 <__stack+0x160a1b4>
    31b4:	01 6c 00 00 	l.j 5b031b4 <__stack+0x56831b8>
    31b8:	6a 24 00 00 	.word 0x6a240000
    31bc:	6a 30 00 01 	.word 0x6a300001
    31c0:	6c 00 00 6a 	.word 0x6c00006a
    31c4:	6c 00 00 6a 	.word 0x6c00006a
    31c8:	70 00 01 6c 	l.cust1 
	...
    31d4:	00 00 60 c0 	l.j 1b4d4 <__rom_size+0x1188>
    31d8:	00 00 61 78 	l.j 1b7b8 <__rom_size+0x146c>
    31dc:	00 01 5f 00 	l.j 5addc <__rom_size+0x40a90>
    31e0:	00 61 78 00 	l.j 18611e0 <__stack+0x13e11e4>
    31e4:	00 61 80 00 	l.j 18631e4 <__stack+0x13e31e8>
    31e8:	01 5d 00 00 	l.j 57431e8 <__stack+0x52c31ec>
    31ec:	61 80 00 00 	.word 0x61800000
    31f0:	62 14 00 01 	.word 0x62140001
    31f4:	5c 00 00 62 	.word 0x5c000062
    31f8:	14 00 00 62 	.word 0x14000062
    31fc:	20 00 01 58 	l.sys 0x158
    3200:	00 00 62 20 	l.j 1ba80 <__rom_size+0x1734>
    3204:	00 00 62 6c 	l.j 1bbb4 <__rom_size+0x1868>
    3208:	00 01 57 00 	l.j 58e08 <__rom_size+0x3eabc>
    320c:	00 62 6c 00 	l.j 189e20c <__stack+0x141e210>
    3210:	00 62 d7 00 	l.j 18b8e10 <__stack+0x1438e14>
    3214:	01 56 00 00 	l.j 5583214 <__stack+0x5103218>
    3218:	62 e0 00 00 	.word 0x62e00000
    321c:	62 ec 00 01 	.word 0x62ec0001
    3220:	56 00 00 00 	.word 0x56000000
    3224:	00 00 00 00 	l.j 3224 <__rom_size-0x17128>
    3228:	00 00 00 5f 	l.j 33a4 <__rom_size-0x16fa8>
    322c:	80 00 00 5f 	l.ld r0,0x5f(r0)
    3230:	88 00 01 53 	l.lws r0,0x153(r0)
    3234:	00 00 60 00 	l.j 1b234 <__rom_size+0xee8>
    3238:	00 00 60 1c 	l.j 1b2a8 <__rom_size+0xf5c>
    323c:	00 01 54 00 	l.j 5823c <__rom_size+0x3def0>
    3240:	00 60 c0 00 	l.j 1833240 <__stack+0x13b3244>
    3244:	00 62 14 00 	l.j 1888244 <__stack+0x1408248>
    3248:	08 7f 00 08 	.word 0x087f0008
    324c:	55 1a 31 24 	.word 0x551a3124
    3250:	9f 00 00 62 	l.addi r24,r0,0x62
    3254:	14 00 00 62 	.word 0x14000062
    3258:	d7 00 01 61 	l.sw 0xffffc161(r0),r0
    325c:	00 00 62 e0 	l.j 1bddc <__rom_size+0x1a90>
    3260:	00 00 63 e4 	l.j 1c1f0 <__rom_size+0x1ea4>
    3264:	00 01 61 00 	l.j 5b664 <__rom_size+0x41318>
	...
    3270:	00 60 08 00 	l.j 1805270 <__stack+0x1385274>
    3274:	00 60 0c 00 	l.j 1806274 <__stack+0x1386278>
    3278:	01 53 00 00 	l.j 54c3278 <__stack+0x504327c>
    327c:	61 78 00 00 	.word 0x61780000
    3280:	62 14 00 08 	.word 0x62140008
    3284:	7d 00 08 55 	l.cust4 
    3288:	1a 31 24 9f 	.word 0x1a31249f
    328c:	00 00 62 14 	l.j 1badc <__rom_size+0x1790>
    3290:	00 00 62 d7 	l.j 1bdec <__rom_size+0x1aa0>
    3294:	00 01 55 00 	l.j 58694 <__rom_size+0x3e348>
    3298:	00 62 e0 00 	l.j 18bb298 <__stack+0x143b29c>
    329c:	00 63 f0 00 	l.j 18ff29c <__stack+0x147f2a0>
    32a0:	01 55 00 00 	l.j 55432a0 <__stack+0x50c32a4>
	...
    32ac:	5f b8 00 00 	.word 0x5fb80000
    32b0:	60 08 00 01 	.word 0x60080001
    32b4:	53 00 00 61 	.word 0x53000061
    32b8:	80 00 00 62 	l.ld r0,0x62(r0)
    32bc:	28 00 08 7c 	.word 0x2800087c
    32c0:	00 08 55 1a 	l.j 218728 <__ram_length+0x198728>
    32c4:	31 24 9f 00 	.word 0x31249f00
    32c8:	00 62 28 00 	l.j 188d2c8 <__stack+0x140d2cc>
    32cc:	00 64 2c 00 	l.j 190e2cc <__stack+0x148e2d0>
    32d0:	01 6c 00 00 	l.j 5b032d0 <__stack+0x56832d4>
	...
    32dc:	5f bc 00 00 	.word 0x5fbc0000
    32e0:	5f d4 00 01 	.word 0x5fd40001
    32e4:	56 00 00 62 	.word 0x56000062
    32e8:	14 00 00 62 	.word 0x14000062
    32ec:	74 00 08 73 	l.cust2 
    32f0:	00 08 55 1a 	l.j 218758 <__ram_length+0x198758>
    32f4:	31 24 9f 00 	.word 0x31249f00
    32f8:	00 62 74 00 	l.j 18a02f8 <__stack+0x14202fc>
    32fc:	00 62 d7 00 	l.j 18b8efc <__stack+0x1438f00>
    3300:	01 54 00 00 	l.j 5503300 <__stack+0x5083304>
    3304:	62 e0 00 00 	.word 0x62e00000
    3308:	62 f0 00 01 	.word 0x62f00001
    330c:	54 00 00 00 	.word 0x54000000
    3310:	00 00 00 00 	l.j 3310 <__rom_size-0x1703c>
    3314:	00 00 00 67 	l.j 34b0 <__rom_size-0x16e9c>
    3318:	a8 00 00 67 	l.ori r0,r0,0x67
    331c:	b0 00 01 58 	l.muli r0,r0,0x158
    3320:	00 00 67 c4 	l.j 1d230 <__rom_size+0x2ee4>
    3324:	00 00 67 cc 	l.j 1d254 <__rom_size+0x2f08>
    3328:	00 01 58 00 	l.j 59328 <__rom_size+0x3efdc>
    332c:	00 68 10 00 	l.j 1a0732c <__stack+0x1587330>
    3330:	00 68 18 00 	l.j 1a09330 <__stack+0x1589334>
    3334:	01 58 00 00 	l.j 5603334 <__stack+0x5183338>
    3338:	68 2c 00 00 	.word 0x682c0000
    333c:	68 34 00 01 	.word 0x68340001
    3340:	58 00 00 68 	.word 0x58000068
    3344:	a8 00 00 68 	l.ori r0,r0,0x68
    3348:	b0 00 01 5d 	l.muli r0,r0,0x15d
    334c:	00 00 68 d0 	l.j 1d68c <__rom_size+0x3340>
    3350:	00 00 68 d8 	l.j 1d6b0 <__rom_size+0x3364>
    3354:	00 01 5d 00 	l.j 5a754 <__rom_size+0x40408>
    3358:	00 69 28 00 	l.j 1a4d358 <__stack+0x15cd35c>
    335c:	00 69 30 00 	l.j 1a4f35c <__stack+0x15cf360>
    3360:	01 5d 00 00 	l.j 5743360 <__stack+0x52c3364>
    3364:	69 50 00 00 	.word 0x69500000
    3368:	69 58 00 01 	.word 0x69580001
    336c:	5d 00 00 00 	.word 0x5d000000
    3370:	00 00 00 00 	l.j 3370 <__rom_size-0x16fdc>
    3374:	00 00 00 65 	l.j 3508 <__rom_size-0x16e44>
    3378:	e4 00 00 65 	l.sfeq r0,r0
    337c:	ec 00 01 53 	.word 0xec000153
    3380:	00 00 67 0c 	l.j 1cfb0 <__rom_size+0x2c64>
    3384:	00 00 69 e0 	l.j 1db04 <__rom_size+0x37b8>
    3388:	00 01 6b 00 	l.j 5df88 <__rom_size+0x43c3c>
    338c:	00 69 e8 00 	l.j 1a7d38c <__stack+0x15fd390>
    3390:	00 6a 10 00 	l.j 1a87390 <__stack+0x1607394>
    3394:	01 6b 00 00 	l.j 5ac3394 <__stack+0x5643398>
    3398:	6a 3c 00 00 	.word 0x6a3c0000
    339c:	6a 4b 00 01 	.word 0x6a4b0001
    33a0:	6b 00 00 6a 	.word 0x6b00006a
    33a4:	54 00 00 6a 	.word 0x5400006a
    33a8:	63 00 01 6b 	.word 0x6300016b
	...
    33b4:	00 00 66 1c 	l.j 1cc24 <__rom_size+0x28d8>
    33b8:	00 00 66 40 	l.j 1ccb8 <__rom_size+0x296c>
    33bc:	00 01 53 00 	l.j 57fbc <__rom_size+0x3dc70>
	...
    33c8:	00 66 20 00 	l.j 198b3c8 <__stack+0x150b3cc>
    33cc:	00 66 28 00 	l.j 198d3cc <__stack+0x150d3d0>
    33d0:	01 54 00 00 	l.j 55033d0 <__stack+0x50833d4>
	...
    33dc:	67 58 00 00 	.word 0x67580000
    33e0:	67 64 00 03 	.word 0x67640003
    33e4:	09 80 9f 00 	.word 0x09809f00
	...
    33f0:	00 67 58 00 	l.j 19d93f0 <__stack+0x15593f4>
    33f4:	00 67 64 00 	l.j 19dc3f4 <__stack+0x155c3f8>
    33f8:	06 03 00 41 	l.jal f80c34fc <__stack+0xf7c43500>
    33fc:	a4 dc 9f 00 	l.andi r6,r28,0x9f00
    3400:	00 67 64 00 	l.j 19dc400 <__stack+0x155c404>
    3404:	00 67 b8 00 	l.j 19f1404 <__stack+0x1571408>
    3408:	01 54 00 00 	l.j 5503408 <__stack+0x508340c>
    340c:	67 b8 00 00 	.word 0x67b80000
    3410:	67 d4 00 03 	.word 0x67d40003
    3414:	74 01 9f 00 	l.cust2 
    3418:	00 67 d4 00 	l.j 19f8418 <__stack+0x157841c>
    341c:	00 68 20 00 	l.j 1a0b41c <__stack+0x158b420>
    3420:	03 74 02 9f 	l.j fdd03e9c <__stack+0xfd883ea0>
    3424:	00 00 68 20 	l.j 1d4a4 <__rom_size+0x3158>
    3428:	00 00 68 44 	l.j 1d538 <__rom_size+0x31ec>
    342c:	00 03 74 03 	l.j e0438 <__ram_length+0x60438>
    3430:	9f 00 00 68 	l.addi r24,r0,0x68
    3434:	44 00 00 68 	l.jr r0
    3438:	64 00 01 54 	.word 0x64000154
    343c:	00 00 68 64 	l.j 1d5cc <__rom_size+0x3280>
    3440:	00 00 68 b8 	l.j 1d720 <__rom_size+0x33d4>
    3444:	00 01 58 00 	l.j 59444 <__rom_size+0x3f0f8>
    3448:	00 68 b8 00 	l.j 1a31448 <__stack+0x15b144c>
    344c:	00 68 c0 00 	l.j 1a3344c <__stack+0x15b3450>
    3450:	03 78 01 9f 	l.j fde03acc <__stack+0xfd983ad0>
    3454:	00 00 68 c0 	l.j 1d754 <__rom_size+0x3408>
    3458:	00 00 68 e0 	l.j 1d7d8 <__rom_size+0x348c>
    345c:	00 03 78 7d 	l.j e1650 <__ram_length+0x61650>
    3460:	9f 00 00 68 	l.addi r24,r0,0x68
    3464:	e0 00 00 69 	.word 0xe0000069
    3468:	38 00 03 78 	.word 0x38000378
    346c:	7e 9f 00 00 	l.cust4 
    3470:	69 38 00 00 	.word 0x69380000
    3474:	69 54 00 03 	.word 0x69540003
    3478:	78 7f 9f 00 	l.cust3 
    347c:	00 69 54 00 	l.j 1a5847c <__stack+0x15d8480>
    3480:	00 69 e0 00 	l.j 1a7b480 <__stack+0x15fb484>
    3484:	01 58 00 00 	l.j 5603484 <__stack+0x5183488>
    3488:	69 e8 00 00 	.word 0x69e80000
    348c:	6a 10 00 01 	.word 0x6a100001
    3490:	58 00 00 6a 	.word 0x5800006a
    3494:	3c 00 00 6a 	.word 0x3c00006a
    3498:	4b 00 01 58 	l.jalr r0
    349c:	00 00 6a 54 	l.j 1ddec <__rom_size+0x3aa0>
    34a0:	00 00 6a 58 	l.j 1de00 <__rom_size+0x3ab4>
    34a4:	00 01 58 00 	l.j 594a4 <__rom_size+0x3f158>
	...
    34b0:	00 6a e8 00 	l.j 1abd4b0 <__stack+0x163d4b4>
    34b4:	00 6a f8 00 	l.j 1ac14b4 <__stack+0x16414b8>
    34b8:	02 71 00 00 	l.j f9c434b8 <__stack+0xf97c34bc>
    34bc:	00 6a f8 00 	l.j 1ac14bc <__stack+0x16414c0>
    34c0:	00 6c 1c 00 	l.j 1b0a4c0 <__stack+0x168a4c4>
    34c4:	02 71 04 00 	l.j f9c444c4 <__stack+0xf97c44c8>
	...
    34d0:	00 6a e8 00 	l.j 1abd4d0 <__stack+0x163d4d4>
    34d4:	00 6b d0 00 	l.j 1af74d4 <__stack+0x16774d8>
    34d8:	01 53 00 00 	l.j 54c34d8 <__stack+0x50434dc>
    34dc:	6b e4 00 00 	.word 0x6be40000
    34e0:	6c 04 00 01 	.word 0x6c040001
    34e4:	53 00 00 00 	.word 0x53000000
    34e8:	00 00 00 00 	l.j 34e8 <__rom_size-0x16e64>
    34ec:	00 00 00 6b 	l.j 3698 <__rom_size-0x16cb4>
    34f0:	14 00 00 6b 	.word 0x1400006b
    34f4:	1c 00 01 57 	.word 0x1c000157
	...
    3500:	00 00 6b 20 	l.j 1e180 <__rom_size+0x3e34>
    3504:	00 00 6b 30 	l.j 1e1c4 <__rom_size+0x3e78>
    3508:	00 01 55 00 	l.j 58908 <__rom_size+0x3e5bc>
	...
    3514:	00 6b 5c 00 	l.j 1ada514 <__stack+0x165a518>
    3518:	00 6b 80 00 	l.j 1ae3518 <__stack+0x166351c>
    351c:	01 58 00 00 	l.j 560351c <__stack+0x5183520>
    3520:	6b 90 00 00 	.word 0x6b900000
    3524:	6b b4 00 01 	.word 0x6bb40001
    3528:	57 00 00 00 	.word 0x57000000
    352c:	00 00 00 00 	l.j 352c <__rom_size-0x16e20>
    3530:	00 00 00 6b 	l.j 36dc <__rom_size-0x16c70>
    3534:	64 00 00 6b 	.word 0x6400006b
    3538:	80 00 01 57 	l.ld r0,0x157(r0)
    353c:	00 00 6b 98 	l.j 1e39c <__rom_size+0x4050>
    3540:	00 00 6b 9c 	l.j 1e3b0 <__rom_size+0x4064>
    3544:	00 01 58 00 	l.j 59544 <__rom_size+0x3f1f8>
	...
    3550:	00 6b 78 00 	l.j 1ae1550 <__stack+0x1661554>
    3554:	00 6b 80 00 	l.j 1ae3554 <__stack+0x1663558>
    3558:	01 55 00 00 	l.j 5543558 <__stack+0x50c355c>
	...
    3564:	6c 1c 00 00 	.word 0x6c1c0000
    3568:	6c 44 00 02 	.word 0x6c440002
    356c:	71 00 00 00 	l.cust1 
    3570:	6c 44 00 00 	.word 0x6c440000
    3574:	6e 08 00 02 	.word 0x6e080002
    3578:	71 24 00 00 	l.cust1 
	...
    3584:	6c 1c 00 00 	.word 0x6c1c0000
    3588:	6c 4c 00 01 	.word 0x6c4c0001
    358c:	53 00 00 6c 	.word 0x5300006c
    3590:	4c 00 00 6d 	l.maci r0,0x6d
    3594:	60 00 01 52 	.word 0x60000152
    3598:	00 00 6d 88 	l.j 1ebb8 <__rom_size+0x486c>
    359c:	00 00 6d c4 	l.j 1ecac <__rom_size+0x4960>
    35a0:	00 01 52 00 	l.j 57da0 <__rom_size+0x3da54>
	...
    35ac:	00 6c 74 00 	l.j 1b205ac <__stack+0x16a05b0>
    35b0:	00 6c 8c 00 	l.j 1b265b0 <__stack+0x16a65b4>
    35b4:	06 03 00 41 	l.jal f80c36b8 <__stack+0xf7c436bc>
    35b8:	a4 dc 9f 00 	l.andi r6,r28,0x9f00
    35bc:	00 6c 8c 00 	l.j 1b265bc <__stack+0x16a65c0>
    35c0:	00 6d e0 00 	l.j 1b7b5c0 <__stack+0x16fb5c4>
    35c4:	01 5e 00 00 	l.j 57835c4 <__stack+0x53035c8>
	...
    35d0:	6c a8 00 00 	.word 0x6ca80000
    35d4:	6c ef 00 02 	.word 0x6cef0002
    35d8:	7e 1c 00 00 	l.cust4 
	...
    35e4:	6d 20 00 00 	.word 0x6d200000
    35e8:	6d 57 00 02 	.word 0x6d570002
    35ec:	7e 1c 00 00 	l.cust4 
	...
    35f8:	6d 88 00 00 	.word 0x6d880000
    35fc:	6d 9c 00 01 	.word 0x6d9c0001
    3600:	60 00 00 00 	.word 0x60000000
    3604:	00 00 00 00 	l.j 3604 <__rom_size-0x16d48>
    3608:	00 00 00 6e 	l.j 37c0 <__rom_size-0x16b8c>
    360c:	08 00 00 6e 	.word 0x0800006e
    3610:	3c 00 02 71 	.word 0x3c000271
    3614:	00 00 00 6e 	l.j 37cc <__rom_size-0x16b80>
    3618:	3c 00 00 73 	.word 0x3c000073
    361c:	50 00 02 71 	.word 0x50000271
    3620:	34 00 00 00 	.word 0x34000000
    3624:	00 00 00 00 	l.j 3624 <__rom_size-0x16d28>
    3628:	00 00 00 6e 	l.j 37e0 <__rom_size-0x16b6c>
    362c:	08 00 00 6e 	.word 0x0800006e
    3630:	50 00 01 53 	.word 0x50000153
    3634:	00 00 6e 50 	l.j 1ef74 <__rom_size+0x4c28>
    3638:	00 00 6f 40 	l.j 1f338 <__rom_size+0x4fec>
    363c:	00 01 64 00 	l.j 5c63c <__rom_size+0x422f0>
    3640:	00 72 70 00 	l.j 1c9f640 <__stack+0x181f644>
    3644:	00 73 1c 00 	l.j 1cca644 <__stack+0x184a648>
    3648:	01 64 00 00 	l.j 5903648 <__stack+0x548364c>
	...
    3654:	6e 08 00 00 	.word 0x6e080000
    3658:	6e 64 00 01 	.word 0x6e640001
    365c:	54 00 00 6e 	.word 0x5400006e
    3660:	64 00 00 73 	.word 0x64000073
    3664:	30 00 01 60 	.word 0x30000160
	...
    3670:	00 00 6e 08 	l.j 1ee90 <__rom_size+0x4b44>
    3674:	00 00 6e e0 	l.j 1f1f4 <__rom_size+0x4ea8>
    3678:	00 02 30 9f 	l.j 8f8f4 <__ram_length+0xf8f4>
    367c:	00 00 6e e0 	l.j 1f1fc <__rom_size+0x4eb0>
    3680:	00 00 6f 00 	l.j 1f280 <__rom_size+0x4f34>
    3684:	00 01 52 00 	l.j 57e84 <__rom_size+0x3db38>
    3688:	00 6f 0c 00 	l.j 1bc6688 <__stack+0x174668c>
    368c:	00 6f 14 00 	l.j 1bc868c <__stack+0x1748690>
    3690:	06 03 00 41 	l.jal f80c3794 <__stack+0xf7c43798>
    3694:	a4 dc 9f 00 	l.andi r6,r28,0x9f00
    3698:	00 6f 14 00 	l.j 1bc8698 <__stack+0x174869c>
    369c:	00 6f 18 00 	l.j 1bc969c <__stack+0x17496a0>
    36a0:	01 52 00 00 	l.j 54836a0 <__stack+0x50036a4>
    36a4:	6f 18 00 00 	.word 0x6f180000
    36a8:	72 04 00 01 	l.cust1 
    36ac:	52 00 00 72 	.word 0x52000072
    36b0:	40 00 00 72 	.word 0x40000072
    36b4:	68 00 01 52 	.word 0x68000152
    36b8:	00 00 72 70 	l.j 20078 <__rom_size+0x5d2c>
    36bc:	00 00 73 1c 	l.j 2032c <__rom_size+0x5fe0>
    36c0:	00 01 52 00 	l.j 57ec0 <__rom_size+0x3db74>
	...
    36cc:	00 6e 74 00 	l.j 1ba06cc <__stack+0x17206d0>
    36d0:	00 6e 7c 00 	l.j 1ba26d0 <__stack+0x17226d4>
    36d4:	01 55 00 00 	l.j 55436d4 <__stack+0x50c36d8>
    36d8:	6e 94 00 00 	.word 0x6e940000
    36dc:	6e cc 00 05 	.word 0x6ecc0005
    36e0:	03 00 41 dc 	l.j fc013e50 <__stack+0xfbb93e54>
    36e4:	94 00 00 6e 	l.lhz r0,0x6e(r0)
    36e8:	cc 00 00 6f 	.word 0xcc00006f
    36ec:	00 00 01 55 	l.j 3c40 <__rom_size-0x1670c>
    36f0:	00 00 6f 00 	l.j 1f2f0 <__rom_size+0x4fa4>
    36f4:	00 00 6f 14 	l.j 1f344 <__rom_size+0x4ff8>
    36f8:	00 01 62 00 	l.j 5bef8 <__rom_size+0x41bac>
    36fc:	00 6f 14 00 	l.j 1bc86fc <__stack+0x1748700>
    3700:	00 6f 53 00 	l.j 1bd8300 <__stack+0x1758304>
    3704:	01 55 00 00 	l.j 5543704 <__stack+0x50c3708>
    3708:	6f 53 00 00 	.word 0x6f530000
    370c:	72 70 00 03 	l.cust1 
    3710:	86 01 9f 00 	l.lwz r16,0xffff9f00(r1)
    3714:	00 72 70 00 	l.j 1c9f714 <__stack+0x181f718>
    3718:	00 72 9f 00 	l.j 1cab318 <__stack+0x182b31c>
    371c:	01 55 00 00 	l.j 554371c <__stack+0x50c3720>
    3720:	73 00 00 00 	l.cust1 
    3724:	73 08 00 01 	l.cust1 
    3728:	55 00 00 00 	.word 0x55000000
    372c:	00 00 00 00 	l.j 372c <__rom_size-0x16c20>
    3730:	00 00 00 6e 	l.j 38e8 <__rom_size-0x16a64>
    3734:	48 00 00 6e 	l.jalr r0
    3738:	50 00 01 53 	.word 0x50000153
    373c:	00 00 6e 50 	l.j 1f07c <__rom_size+0x4d30>
    3740:	00 00 6e 7c 	l.j 1f130 <__rom_size+0x4de4>
    3744:	00 01 64 00 	l.j 5c744 <__rom_size+0x423f8>
    3748:	00 6e 88 00 	l.j 1ba5748 <__stack+0x172574c>
    374c:	00 6e cc 00 	l.j 1bb674c <__stack+0x1736750>
    3750:	05 03 00 41 	l.jal 40c3854 <__stack+0x3c43858>
    3754:	dc 90 00 00 	l.sh 0x2000(r16),r0
    3758:	6e cc 00 00 	.word 0x6ecc0000
    375c:	6f 4c 00 01 	.word 0x6f4c0001
    3760:	5e 00 00 72 	.word 0x5e000072
    3764:	70 00 00 72 	l.cust1 
    3768:	a4 00 01 5e 	l.andi r0,r0,0x15e
    376c:	00 00 72 a4 	l.j 201fc <__rom_size+0x5eb0>
    3770:	00 00 72 fb 	l.j 2035c <__rom_size+0x6010>
    3774:	00 01 5b 00 	l.j 5a374 <__rom_size+0x40028>
    3778:	00 72 fb 00 	l.j 1cc2378 <__stack+0x184237c>
    377c:	00 73 1c 00 	l.j 1cca77c <__stack+0x184a780>
    3780:	01 5e 00 00 	l.j 5783780 <__stack+0x5303784>
	...
    378c:	6e e0 00 00 	.word 0x6ee00000
    3790:	6e e8 00 02 	.word 0x6ee80002
    3794:	30 9f 00 00 	.word 0x309f0000
    3798:	6e e8 00 00 	.word 0x6ee80000
    379c:	6f 34 00 01 	.word 0x6f340001
    37a0:	66 00 00 72 	.word 0x66000072
    37a4:	70 00 00 73 	l.cust1 
    37a8:	1c 00 01 66 	.word 0x1c000166
	...
    37b4:	00 00 6e 74 	l.j 1f184 <__rom_size+0x4e38>
    37b8:	00 00 6e 7c 	l.j 1f1a8 <__rom_size+0x4e5c>
    37bc:	00 01 6a 00 	l.j 5dfbc <__rom_size+0x43c70>
    37c0:	00 6e e0 00 	l.j 1bbb7c0 <__stack+0x173b7c4>
    37c4:	00 6f 64 00 	l.j 1bdc7c4 <__stack+0x175c7c8>
    37c8:	01 6a 00 00 	l.j 5a837c8 <__stack+0x56037cc>
    37cc:	72 70 00 00 	l.cust1 
    37d0:	73 1c 00 01 	l.cust1 
    37d4:	6a 00 00 00 	.word 0x6a000000
    37d8:	00 00 00 00 	l.j 37d8 <__rom_size-0x16b74>
    37dc:	00 00 00 6f 	l.j 3998 <__rom_size-0x169b4>
    37e0:	54 00 00 6f 	.word 0x5400006f
    37e4:	64 00 02 30 	.word 0x64000230
    37e8:	9f 00 00 6f 	l.addi r24,r0,0x6f
    37ec:	64 00 00 72 	.word 0x64000072
    37f0:	54 00 01 62 	.word 0x54000162
    37f4:	00 00 72 54 	l.j 20144 <__rom_size+0x5df8>
    37f8:	00 00 72 58 	l.j 20158 <__rom_size+0x5e0c>
    37fc:	00 01 62 00 	l.j 5bffc <__rom_size+0x41cb0>
    3800:	00 72 58 00 	l.j 1c99800 <__stack+0x1819804>
    3804:	00 72 70 00 	l.j 1c9f804 <__stack+0x181f808>
    3808:	01 62 00 00 	l.j 5883808 <__stack+0x540380c>
	...
    3814:	6f 54 00 00 	.word 0x6f540000
    3818:	6f 64 00 02 	.word 0x6f640002
    381c:	32 9f 00 00 	.word 0x329f0000
    3820:	6f 64 00 00 	.word 0x6f640000
    3824:	70 5c 00 01 	l.cust1 
    3828:	5e 00 00 70 	.word 0x5e000070
    382c:	70 00 00 70 	l.cust1 
    3830:	78 00 01 5e 	l.cust3 
    3834:	00 00 72 40 	l.j 20134 <__rom_size+0x5de8>
    3838:	00 00 72 44 	l.j 20148 <__rom_size+0x5dfc>
    383c:	00 01 5e 00 	l.j 5b03c <__rom_size+0x40cf0>
    3840:	00 72 44 00 	l.j 1c94840 <__stack+0x1814844>
    3844:	00 72 50 00 	l.j 1c97844 <__stack+0x1817848>
    3848:	01 5e 00 00 	l.j 5783848 <__stack+0x530384c>
    384c:	72 50 00 00 	l.cust1 
    3850:	72 58 00 02 	l.cust1 
    3854:	30 9f 00 00 	.word 0x309f0000
    3858:	72 58 00 00 	l.cust1 
    385c:	72 68 00 01 	l.cust1 
    3860:	5e 00 00 00 	.word 0x5e000000
    3864:	00 00 00 00 	l.j 3864 <__rom_size-0x16ae8>
    3868:	00 00 00 6f 	l.j 3a24 <__rom_size-0x16928>
    386c:	c4 00 00 70 	.word 0xc4000070
    3870:	3b 00 01 57 	.word 0x3b000157
    3874:	00 00 72 40 	l.j 20174 <__rom_size+0x5e28>
    3878:	00 00 72 58 	l.j 201d8 <__rom_size+0x5e8c>
    387c:	00 01 57 00 	l.j 5947c <__rom_size+0x3f130>
	...
    3888:	00 70 30 00 	l.j 1c0f888 <__stack+0x178f88c>
    388c:	00 72 40 00 	l.j 1c9388c <__stack+0x1813890>
    3890:	01 64 00 00 	l.j 5903890 <__stack+0x5483894>
	...
    389c:	70 d0 00 00 	l.cust1 
    38a0:	71 1c 00 01 	l.cust1 
    38a4:	5e 00 00 71 	.word 0x5e000071
    38a8:	1c 00 00 72 	.word 0x1c000072
    38ac:	40 00 01 5e 	.word 0x4000015e
	...
    38b8:	00 00 71 34 	l.j 1fd88 <__rom_size+0x5a3c>
    38bc:	00 00 71 3c 	l.j 1fdac <__rom_size+0x5a60>
    38c0:	00 03 08 20 	l.j c5940 <__ram_length+0x45940>
    38c4:	9f 00 00 00 	l.addi r24,r0,0x0
    38c8:	00 00 00 00 	l.j 38c8 <__rom_size-0x16a84>
    38cc:	00 00 00 71 	l.j 3a90 <__rom_size-0x168bc>
    38d0:	34 00 00 72 	.word 0x34000072
    38d4:	40 00 02 30 	.word 0x40000230
    38d8:	9f 00 00 00 	l.addi r24,r0,0x0
    38dc:	00 00 00 00 	l.j 38dc <__rom_size-0x16a70>
    38e0:	00 00 00 71 	l.j 3aa4 <__rom_size-0x168a8>
    38e4:	34 00 00 72 	.word 0x34000072
    38e8:	04 00 01 52 	l.jal 3e30 <__rom_size-0x1651c>
	...
    38f4:	00 00 71 34 	l.j 1fdc4 <__rom_size+0x5a78>
    38f8:	00 00 71 3c 	l.j 1fde8 <__rom_size+0x5a9c>
    38fc:	00 01 52 00 	l.j 580fc <__rom_size+0x3ddb0>
    3900:	00 71 3c 00 	l.j 1c52900 <__stack+0x17d2904>
    3904:	00 71 44 00 	l.j 1c54904 <__stack+0x17d4908>
    3908:	01 54 00 00 	l.j 5503908 <__stack+0x508390c>
    390c:	71 44 00 00 	l.cust1 
    3910:	71 58 00 01 	l.cust1 
    3914:	54 00 00 00 	.word 0x54000000
    3918:	00 00 00 00 	l.j 3918 <__rom_size-0x16a34>
    391c:	00 00 00 71 	l.j 3ae0 <__rom_size-0x1686c>
    3920:	9c 00 00 72 	l.addi r0,r0,0x72
    3924:	40 00 01 64 	.word 0x40000164
	...
    3930:	00 00 71 b0 	l.j 1fff0 <__rom_size+0x5ca4>
    3934:	00 00 71 b8 	l.j 20014 <__rom_size+0x5cc8>
    3938:	00 01 54 00 	l.j 58938 <__rom_size+0x3e5ec>
	...
    3944:	00 71 cc 00 	l.j 1c76944 <__stack+0x17f6948>
    3948:	00 72 03 00 	l.j 1c84548 <__stack+0x180454c>
    394c:	02 80 18 00 	l.j fa00994c <__stack+0xf9b89950>
	...
    3958:	00 73 50 00 	l.j 1cd7958 <__stack+0x185795c>
    395c:	00 73 8c 00 	l.j 1ce695c <__stack+0x1866960>
    3960:	02 71 00 00 	l.j f9c43960 <__stack+0xf97c3964>
    3964:	00 73 8c 00 	l.j 1ce6964 <__stack+0x1866968>
    3968:	00 8f 94 00 	l.j 23e8968 <__stack+0x1f6896c>
    396c:	03 71 e4 00 	l.j fdc7c96c <__stack+0xfd7fc970>
	...
    3978:	00 00 73 50 	l.j 206b8 <__rom_size+0x636c>
    397c:	00 00 73 90 	l.j 207bc <__rom_size+0x6470>
    3980:	00 01 53 00 	l.j 58580 <__rom_size+0x3e234>
    3984:	00 73 90 00 	l.j 1ce7984 <__stack+0x1867988>
    3988:	00 75 ec 00 	l.j 1d7e988 <__stack+0x18fe98c>
    398c:	01 6e 00 00 	l.j 5b8398c <__stack+0x5703990>
    3990:	75 ec 00 00 	l.cust2 
    3994:	8f 58 00 06 	l.lbz r26,0x6(r24)
    3998:	91 40 06 23 	l.lbs r10,0x623(r0)
    399c:	41 9f 00 00 	.word 0x419f0000
	...
    39a8:	73 50 00 00 	l.cust1 
    39ac:	73 b8 00 01 	l.cust1 
    39b0:	54 00 00 73 	.word 0x54000073
    39b4:	b8 00 00 8f 	l.srai r0,r0,0xf
    39b8:	94 00 03 91 	l.lhz r0,0x391(r0)
    39bc:	bc 7f 00 00 	l.sfgeui r31,0x0
	...
    39c8:	73 50 00 00 	l.cust1 
    39cc:	73 c0 00 01 	l.cust1 
    39d0:	55 00 00 74 	.word 0x55000074
    39d4:	0c 00 00 74 	l.bnf 3ba4 <__rom_size-0x167a8>
    39d8:	2c 00 01 55 	.word 0x2c000155
    39dc:	00 00 74 5c 	l.j 20b4c <__rom_size+0x6800>
    39e0:	00 00 74 70 	l.j 20ba0 <__rom_size+0x6854>
    39e4:	00 01 55 00 	l.j 58de4 <__rom_size+0x3ea98>
    39e8:	00 74 8c 00 	l.j 1d269e8 <__stack+0x18a69ec>
    39ec:	00 74 98 00 	l.j 1d299ec <__stack+0x18a99f0>
    39f0:	01 55 00 00 	l.j 55439f0 <__stack+0x50c39f4>
    39f4:	74 e0 00 00 	l.cust2 
    39f8:	74 f4 00 01 	l.cust2 
    39fc:	55 00 00 00 	.word 0x55000000
    3a00:	00 00 00 00 	l.j 3a00 <__rom_size-0x1694c>
    3a04:	00 00 00 73 	l.j 3bd0 <__rom_size-0x1677c>
    3a08:	50 00 00 75 	.word 0x50000075
    3a0c:	ec 00 02 30 	.word 0xec000230
    3a10:	9f 00 00 75 	l.addi r24,r0,0x75
    3a14:	ec 00 00 76 	.word 0xec000076
    3a18:	18 00 01 6a 	l.movhi r0,0x16a
    3a1c:	00 00 76 30 	l.j 212dc <__rom_size+0x6f90>
    3a20:	00 00 76 3c 	l.j 21310 <__rom_size+0x6fc4>
    3a24:	00 06 03 00 	l.j 184624 <__ram_length+0x104624>
    3a28:	41 a4 dc 9f 	.word 0x41a4dc9f
    3a2c:	00 00 76 c4 	l.j 2153c <__rom_size+0x71f0>
    3a30:	00 00 76 c8 	l.j 21550 <__rom_size+0x7204>
    3a34:	00 01 6a 00 	l.j 5e234 <__rom_size+0x43ee8>
    3a38:	00 76 c8 00 	l.j 1db5a38 <__stack+0x1935a3c>
    3a3c:	00 8f 58 00 	l.j 23d9a3c <__stack+0x1f59a40>
    3a40:	01 6a 00 00 	l.j 5a83a40 <__stack+0x5603a44>
	...
    3a4c:	75 58 00 00 	l.cust2 
    3a50:	75 60 00 01 	l.cust2 
    3a54:	52 00 00 75 	.word 0x52000075
    3a58:	74 00 00 75 	l.cust2 
    3a5c:	a4 00 05 03 	l.andi r0,r0,0x503
    3a60:	00 41 dc 94 	l.j 107acb0 <__stack+0xbfacb4>
    3a64:	00 00 75 a4 	l.j 210f4 <__rom_size+0x6da8>
    3a68:	00 00 76 28 	l.j 21308 <__rom_size+0x6fbc>
    3a6c:	00 01 52 00 	l.j 5826c <__rom_size+0x3df20>
    3a70:	00 76 28 00 	l.j 1d8da70 <__stack+0x190da74>
    3a74:	00 76 2f 00 	l.j 1d8f674 <__stack+0x190f678>
    3a78:	01 55 00 00 	l.j 5543a78 <__stack+0x50c3a7c>
    3a7c:	76 2f 00 00 	l.cust2 
    3a80:	76 c4 00 03 	l.cust2 
    3a84:	91 b8 7f 00 	l.lbs r13,0x7f00(r24)
    3a88:	00 76 c4 00 	l.j 1db4a88 <__stack+0x1934a8c>
    3a8c:	00 76 c8 00 	l.j 1db5a8c <__stack+0x1935a90>
    3a90:	01 52 00 00 	l.j 5483a90 <__stack+0x5003a94>
    3a94:	76 c8 00 00 	l.cust2 
    3a98:	8a bc 00 03 	l.lws r21,0x3(r28)
    3a9c:	91 b8 7f 00 	l.lbs r13,0x7f00(r24)
    3aa0:	00 8a bc 00 	l.j 22b2aa0 <__stack+0x1e32aa4>
    3aa4:	00 8a f0 00 	l.j 22bfaa4 <__stack+0x1e3faa8>
    3aa8:	01 52 00 00 	l.j 5483aa8 <__stack+0x5003aac>
    3aac:	8b 7c 00 00 	l.lws r27,0x0(r28)
    3ab0:	8b 84 00 01 	l.lws r28,0x1(r4)
    3ab4:	52 00 00 00 	.word 0x52000000
    3ab8:	00 00 00 00 	l.j 3ab8 <__rom_size-0x16894>
    3abc:	00 00 00 75 	l.j 3c90 <__rom_size-0x166bc>
    3ac0:	34 00 00 75 	.word 0x34000075
    3ac4:	4b 00 05 03 	l.jalr r0
    3ac8:	00 41 a3 54 	l.j 106c818 <__stack+0xbec81c>
    3acc:	00 00 75 4b 	l.j 20ff8 <__rom_size+0x6cac>
    3ad0:	00 00 75 60 	l.j 21050 <__rom_size+0x6d04>
    3ad4:	00 01 68 00 	l.j 5dad4 <__rom_size+0x43788>
    3ad8:	00 75 68 00 	l.j 1d5dad8 <__stack+0x18ddadc>
    3adc:	00 75 a4 00 	l.j 1d6cadc <__stack+0x18ecae0>
    3ae0:	05 03 00 41 	l.jal 40c3be4 <__stack+0x3c43be8>
    3ae4:	dc 90 00 00 	l.sh 0x2000(r16),r0
    3ae8:	75 a4 00 00 	l.cust2 
    3aec:	75 f8 00 01 	l.cust2 
    3af0:	68 00 00 75 	.word 0x68000075
    3af4:	f8 00 00 8b 	l.cust7 
    3af8:	10 00 02 91 	l.bf 453c <__rom_size-0x15e10>
    3afc:	50 00 00 8b 	.word 0x5000008b
    3b00:	10 00 00 8b 	l.bf 3d2c <__rom_size-0x16620>
    3b04:	6f 00 01 5b 	.word 0x6f00015b
    3b08:	00 00 8b 6f 	l.j 268c4 <__rom_size+0xc578>
    3b0c:	00 00 8b 84 	l.j 2691c <__rom_size+0xc5d0>
    3b10:	00 01 68 00 	l.j 5db10 <__rom_size+0x437c4>
	...
    3b1c:	00 75 ec 00 	l.j 1d7eb1c <__stack+0x18feb20>
    3b20:	00 76 00 00 	l.j 1d83b20 <__stack+0x1903b24>
    3b24:	02 30 9f 00 	l.j f8c2b724 <__stack+0xf87ab728>
    3b28:	00 76 00 00 	l.j 1d83b28 <__stack+0x1903b2c>
    3b2c:	00 76 2f 00 	l.j 1d8f72c <__stack+0x190f730>
    3b30:	01 56 00 00 	l.j 5583b30 <__stack+0x5103b34>
    3b34:	76 2f 00 00 	l.cust2 
    3b38:	8a bc 00 03 	l.lws r21,0x3(r28)
    3b3c:	91 a4 7f 00 	l.lbs r13,0x7f00(r4)
    3b40:	00 8a bc 00 	l.j 22b2b40 <__stack+0x1e32b44>
    3b44:	00 8f 58 00 	l.j 23d9b44 <__stack+0x1f59b48>
    3b48:	03 91 a4 7f 	l.j fe46cd44 <__stack+0xfdfecd48>
	...
    3b54:	00 00 75 ec 	l.j 21304 <__rom_size+0x6fb8>
    3b58:	00 00 8f 58 	l.j 278b8 <__rom_size+0xd56c>
    3b5c:	00 03 91 b4 	l.j e822c <__ram_length+0x6822c>
    3b60:	7f 00 00 00 	l.cust4 
    3b64:	00 00 00 00 	l.j 3b64 <__rom_size-0x167e8>
    3b68:	00 00 00 73 	l.j 3d34 <__rom_size-0x16618>
    3b6c:	c4 00 00 73 	.word 0xc4000073
    3b70:	ec 00 02 30 	.word 0xec000230
    3b74:	9f 00 00 73 	l.addi r24,r0,0x73
    3b78:	ec 00 00 73 	.word 0xec000073
    3b7c:	f0 00 02 33 	l.cust5 r0,r0,r0,0x11,0x13
    3b80:	9f 00 00 73 	l.addi r24,r0,0x73
    3b84:	f0 00 00 73 	l.cust5 r0,r0,r0,0x3,0x13
    3b88:	f4 00 02 34 	l.cust6 
    3b8c:	9f 00 00 73 	l.addi r24,r0,0x73
    3b90:	f4 00 00 73 	l.cust6 
    3b94:	f8 00 02 35 	l.cust7 
    3b98:	9f 00 00 73 	l.addi r24,r0,0x73
    3b9c:	f8 00 00 73 	l.cust7 
    3ba0:	fc 00 02 36 	l.cust8 
    3ba4:	9f 00 00 73 	l.addi r24,r0,0x73
    3ba8:	fc 00 00 74 	l.cust8 
    3bac:	00 00 02 37 	l.j 4488 <__rom_size-0x15ec4>
    3bb0:	9f 00 00 74 	l.addi r24,r0,0x74
    3bb4:	00 00 00 74 	l.j 3d84 <__rom_size-0x165c8>
    3bb8:	0c 00 02 38 	l.bnf 4498 <__rom_size-0x15eb4>
    3bbc:	9f 00 00 76 	l.addi r24,r0,0x76
    3bc0:	30 00 00 76 	.word 0x30000076
    3bc4:	3c 00 02 30 	.word 0x3c000230
    3bc8:	9f 00 00 7a 	l.addi r24,r0,0x7a
    3bcc:	20 00 00 7a 	l.sys 0x7a
    3bd0:	30 00 01 52 	.word 0x30000152
    3bd4:	00 00 7a 30 	l.j 22494 <__rom_size+0x8148>
    3bd8:	00 00 7a 94 	l.j 22628 <__rom_size+0x82dc>
    3bdc:	00 01 62 00 	l.j 5c3dc <__rom_size+0x42090>
    3be0:	00 7a a4 00 	l.j 1eacbe0 <__stack+0x1a2cbe4>
    3be4:	00 7a b8 00 	l.j 1eb1be4 <__stack+0x1a31be8>
    3be8:	01 62 00 00 	l.j 5883be8 <__stack+0x5403bec>
    3bec:	7b 1c 00 00 	l.cust3 
    3bf0:	7b 20 00 02 	l.cust3 
    3bf4:	31 9f 00 00 	.word 0x319f0000
    3bf8:	7b 20 00 00 	l.cust3 
    3bfc:	7b 24 00 02 	l.cust3 
    3c00:	32 9f 00 00 	.word 0x329f0000
    3c04:	7b 24 00 00 	l.cust3 
    3c08:	7b 28 00 02 	l.cust3 
    3c0c:	33 9f 00 00 	.word 0x339f0000
    3c10:	7b 28 00 00 	l.cust3 
    3c14:	7b 40 00 02 	l.cust3 
    3c18:	34 9f 00 00 	.word 0x349f0000
    3c1c:	7b 40 00 00 	l.cust3 
    3c20:	7b 44 00 02 	l.cust3 
    3c24:	35 9f 00 00 	.word 0x359f0000
    3c28:	7b 44 00 00 	l.cust3 
    3c2c:	7b 48 00 02 	l.cust3 
    3c30:	36 9f 00 00 	.word 0x369f0000
    3c34:	7b 48 00 00 	l.cust3 
    3c38:	7b 4c 00 02 	l.cust3 
    3c3c:	37 9f 00 00 	.word 0x379f0000
    3c40:	7b 4c 00 00 	l.cust3 
    3c44:	7b c4 00 02 	l.cust3 
    3c48:	38 9f 00 00 	.word 0x389f0000
    3c4c:	7d a0 00 00 	l.cust4 
    3c50:	7d b0 00 01 	l.cust4 
    3c54:	52 00 00 7d 	.word 0x5200007d
    3c58:	b0 00 00 7e 	l.muli r0,r0,0x7e
    3c5c:	14 00 01 62 	.word 0x14000162
    3c60:	00 00 7e 24 	l.j 234f0 <__rom_size+0x91a4>
    3c64:	00 00 7e 38 	l.j 23544 <__rom_size+0x91f8>
    3c68:	00 01 62 00 	l.j 5c468 <__rom_size+0x4211c>
    3c6c:	00 7f 20 00 	l.j 1fcbc6c <__stack+0x1b4bc70>
    3c70:	00 7f 28 00 	l.j 1fcdc70 <__stack+0x1b4dc74>
    3c74:	02 30 9f 00 	l.j f8c2b874 <__stack+0xf87ab878>
    3c78:	00 81 10 00 	l.j 2047c78 <__stack+0x1bc7c7c>
    3c7c:	00 81 18 00 	l.j 2049c7c <__stack+0x1bc9c80>
    3c80:	02 37 9f 00 	l.j f8deb880 <__stack+0xf896b884>
    3c84:	00 84 24 00 	l.j 210cc84 <__stack+0x1c8cc88>
    3c88:	00 84 3c 00 	l.j 2112c88 <__stack+0x1c92c8c>
    3c8c:	01 52 00 00 	l.j 5483c8c <__stack+0x5003c90>
    3c90:	84 3c 00 00 	l.lwz r1,0x0(r28)
    3c94:	84 a0 00 01 	l.lwz r5,0x1(r0)
    3c98:	62 00 00 84 	.word 0x62000084
    3c9c:	b0 00 00 84 	l.muli r0,r0,0x84
    3ca0:	c4 00 01 62 	l.msb r0,r0
    3ca4:	00 00 86 ac 	l.j 25754 <__rom_size+0xb408>
    3ca8:	00 00 86 c4 	l.j 257b8 <__rom_size+0xb46c>
    3cac:	00 01 52 00 	l.j 584ac <__rom_size+0x3e160>
    3cb0:	00 86 c4 00 	l.j 21b4cb0 <__stack+0x1d34cb4>
    3cb4:	00 87 28 00 	l.j 21cdcb4 <__stack+0x1d4dcb8>
    3cb8:	01 62 00 00 	l.j 5883cb8 <__stack+0x5403cbc>
    3cbc:	87 38 00 00 	l.lwz r25,0x0(r24)
    3cc0:	87 4c 00 01 	l.lwz r26,0x1(r12)
    3cc4:	62 00 00 89 	.word 0x62000089
    3cc8:	e8 00 00 8a 	.word 0xe800008a
    3ccc:	00 00 01 52 	l.j 4214 <__rom_size-0x16138>
    3cd0:	00 00 8a 00 	l.j 264d0 <__rom_size+0xc184>
    3cd4:	00 00 8a 64 	l.j 26664 <__rom_size+0xc318>
    3cd8:	00 01 62 00 	l.j 5c4d8 <__rom_size+0x4218c>
    3cdc:	00 8a 74 00 	l.j 22a0cdc <__stack+0x1e20ce0>
    3ce0:	00 8a 80 00 	l.j 22a3ce0 <__stack+0x1e23ce4>
    3ce4:	01 62 00 00 	l.j 5883ce4 <__stack+0x5403ce8>
    3ce8:	8b b0 00 00 	l.lws r29,0x0(r16)
    3cec:	8b bc 00 02 	l.lws r29,0x2(r28)
    3cf0:	30 9f 00 00 	.word 0x309f0000
    3cf4:	8c a4 00 00 	l.lbz r5,0x0(r4)
    3cf8:	8c b0 00 02 	l.lbz r5,0x2(r16)
    3cfc:	37 9f 00 00 	.word 0x379f0000
	...
    3d08:	7a 90 00 00 	l.cust3 
    3d0c:	7a a4 00 01 	l.cust3 
    3d10:	60 00 00 7e 	.word 0x6000007e
    3d14:	10 00 00 7e 	l.bf 3f0c <__rom_size-0x16440>
    3d18:	24 00 01 60 	l.rfe 
    3d1c:	00 00 7f 20 	l.j 2399c <__rom_size+0x9650>
    3d20:	00 00 7f 54 	l.j 23a70 <__rom_size+0x9724>
    3d24:	00 01 60 00 	l.j 5bd24 <__rom_size+0x419d8>
    3d28:	00 81 10 00 	l.j 2047d28 <__stack+0x1bc7d2c>
    3d2c:	00 81 3c 00 	l.j 2052d2c <__stack+0x1bd2d30>
    3d30:	01 5e 00 00 	l.j 5783d30 <__stack+0x5303d34>
    3d34:	84 9c 00 00 	l.lwz r4,0x0(r28)
    3d38:	84 b0 00 01 	l.lwz r5,0x1(r16)
    3d3c:	60 00 00 87 	.word 0x60000087
    3d40:	24 00 00 87 	l.rfe 
    3d44:	38 00 01 60 	.word 0x38000160
    3d48:	00 00 88 0c 	l.j 25d78 <__rom_size+0xba2c>
    3d4c:	00 00 88 14 	l.j 25d9c <__rom_size+0xba50>
    3d50:	00 01 5b 00 	l.j 5a950 <__rom_size+0x40604>
    3d54:	00 88 74 00 	l.j 2220d54 <__stack+0x1da0d58>
    3d58:	00 88 ab 00 	l.j 222e958 <__stack+0x1dae95c>
    3d5c:	01 5b 00 00 	l.j 56c3d5c <__stack+0x5243d60>
    3d60:	89 24 00 00 	l.lws r9,0x0(r4)
    3d64:	89 6f 00 01 	l.lws r11,0x1(r15)
    3d68:	5b 00 00 8a 	.word 0x5b00008a
    3d6c:	60 00 00 8a 	.word 0x6000008a
    3d70:	74 00 01 60 	l.cust2 
    3d74:	00 00 8b c4 	l.j 26c84 <__rom_size+0xc938>
    3d78:	00 00 8b d4 	l.j 26cc8 <__rom_size+0xc97c>
    3d7c:	00 01 55 00 	l.j 5917c <__rom_size+0x3ee30>
    3d80:	00 8c b8 00 	l.j 2331d80 <__stack+0x1eb1d84>
    3d84:	00 8c cc 00 	l.j 2336d84 <__stack+0x1eb6d88>
    3d88:	01 55 00 00 	l.j 5543d88 <__stack+0x50c3d8c>
    3d8c:	8e 14 00 00 	l.lbz r16,0x0(r20)
    3d90:	8e 2c 00 02 	l.lbz r17,0x2(r12)
    3d94:	31 9f 00 00 	.word 0x319f0000
    3d98:	8e 2c 00 00 	l.lbz r17,0x0(r12)
    3d9c:	8e 34 00 01 	l.lbz r17,0x1(r20)
    3da0:	53 00 00 8e 	.word 0x5300008e
    3da4:	34 00 00 8e 	.word 0x3400008e
    3da8:	90 00 02 31 	l.lbs r0,0x231(r0)
    3dac:	9f 00 00 8e 	l.addi r24,r0,0x8e
    3db0:	90 00 00 8e 	l.lbs r0,0x8e(r0)
    3db4:	a8 00 01 53 	l.ori r0,r0,0x153
	...
    3dc0:	00 00 73 50 	l.j 20b00 <__rom_size+0x67b4>
    3dc4:	00 00 75 ec 	l.j 21574 <__rom_size+0x7228>
    3dc8:	00 02 30 9f 	l.j 90044 <__ram_length+0x10044>
    3dcc:	00 00 75 ec 	l.j 2157c <__rom_size+0x7230>
    3dd0:	00 00 7e a0 	l.j 23850 <__rom_size+0x9504>
    3dd4:	00 01 6c 00 	l.j 5edd4 <__rom_size+0x44a88>
    3dd8:	00 7e a0 00 	l.j 1fabdd8 <__stack+0x1b2bddc>
    3ddc:	00 7f 54 00 	l.j 1fd8ddc <__stack+0x1b58de0>
    3de0:	02 31 9f 00 	l.j f8c6b9e0 <__stack+0xf87eb9e4>
    3de4:	00 7f 54 00 	l.j 1fd8de4 <__stack+0x1b58de8>
    3de8:	00 80 70 00 	l.j 201fde8 <__stack+0x1b9fdec>
    3dec:	01 6c 00 00 	l.j 5b03dec <__stack+0x5683df0>
    3df0:	80 70 00 00 	l.ld r3,0x0(r16)
    3df4:	81 44 00 02 	l.ld r10,0x2(r4)
    3df8:	31 9f 00 00 	.word 0x319f0000
    3dfc:	81 44 00 00 	l.ld r10,0x0(r4)
    3e00:	83 58 00 01 	l.ld r26,0x1(r24)
    3e04:	6c 00 00 83 	.word 0x6c000083
    3e08:	58 00 00 84 	.word 0x58000084
    3e0c:	0c 00 01 6c 	l.bnf 43bc <__rom_size-0x15f90>
    3e10:	00 00 84 0c 	l.j 24e40 <__rom_size+0xaaf4>
    3e14:	00 00 85 d8 	l.j 25574 <__rom_size+0xb228>
    3e18:	00 01 6c 00 	l.j 5ee18 <__rom_size+0x44acc>
    3e1c:	00 85 d8 00 	l.j 2179e1c <__stack+0x1cf9e20>
    3e20:	00 86 94 00 	l.j 21a8e20 <__stack+0x1d28e24>
    3e24:	01 6c 00 00 	l.j 5b03e24 <__stack+0x5683e28>
    3e28:	86 94 00 00 	l.lwz r20,0x0(r20)
    3e2c:	89 1c 00 01 	l.lws r8,0x1(r28)
    3e30:	6c 00 00 89 	.word 0x6c000089
    3e34:	1c 00 00 89 	.word 0x1c000089
    3e38:	d0 00 01 6c 	l.sd 0x16c(r0),r0
    3e3c:	00 00 89 d0 	l.j 2657c <__rom_size+0xc230>
    3e40:	00 00 8a 80 	l.j 26840 <__rom_size+0xc4f4>
    3e44:	00 01 6c 00 	l.j 5ee44 <__rom_size+0x44af8>
    3e48:	00 8a 8c 00 	l.j 22a6e48 <__stack+0x1e26e4c>
    3e4c:	00 8a ac 00 	l.j 22aee4c <__stack+0x1e2ee50>
    3e50:	01 6c 00 00 	l.j 5b03e50 <__stack+0x5683e54>
    3e54:	8a ac 00 00 	l.lws r21,0x0(r12)
    3e58:	8a bc 00 01 	l.lws r21,0x1(r28)
    3e5c:	6c 00 00 8a 	.word 0x6c00008a
    3e60:	bc 00 00 8f 	l.sfeqi r0,0x8f
    3e64:	58 00 01 6c 	.word 0x5800016c
	...
    3e70:	00 00 73 50 	l.j 20bb0 <__rom_size+0x6864>
    3e74:	00 00 75 ec 	l.j 21624 <__rom_size+0x72d8>
    3e78:	00 02 30 9f 	l.j 900f4 <__ram_length+0x100f4>
    3e7c:	00 00 75 ec 	l.j 2162c <__rom_size+0x72e0>
    3e80:	00 00 8f 58 	l.j 27be0 <__rom_size+0xd894>
    3e84:	00 03 91 9f 	l.j e8500 <__ram_length+0x68500>
    3e88:	7f 00 00 00 	l.cust4 
    3e8c:	00 00 00 00 	l.j 3e8c <__rom_size-0x164c0>
    3e90:	00 00 00 73 	l.j 405c <__rom_size-0x162f0>
    3e94:	50 00 00 75 	.word 0x50000075
    3e98:	18 00 02 30 	l.movhi r0,0x230
    3e9c:	9f 00 00 75 	l.addi r24,r0,0x75
    3ea0:	18 00 00 75 	l.movhi r0,0x75
    3ea4:	1c 00 03 91 	.word 0x1c000391
    3ea8:	b3 7f 00 00 	l.muli r27,r31,0x0
    3eac:	75 1c 00 00 	l.cust2 
    3eb0:	8f 58 00 03 	l.lbz r26,0x3(r24)
    3eb4:	91 b3 7f 00 	l.lbs r13,0x7f00(r19)
	...
    3ec0:	00 73 50 00 	l.j 1cd7ec0 <__stack+0x1857ec4>
    3ec4:	00 75 1c 00 	l.j 1d4aec4 <__stack+0x18caec8>
    3ec8:	02 30 9f 00 	l.j f8c2bac8 <__stack+0xf87abacc>
    3ecc:	00 75 1c 00 	l.j 1d4aecc <__stack+0x18caed0>
    3ed0:	00 8f 58 00 	l.j 23d9ed0 <__stack+0x1f59ed4>
    3ed4:	03 91 ab 7f 	l.j fe46ecd0 <__stack+0xfdfeecd4>
	...
    3ee0:	00 00 73 50 	l.j 20c20 <__rom_size+0x68d4>
    3ee4:	00 00 75 ec 	l.j 21694 <__rom_size+0x7348>
    3ee8:	00 02 30 9f 	l.j 90164 <__ram_length+0x10164>
    3eec:	00 00 78 28 	l.j 21f8c <__rom_size+0x7c40>
    3ef0:	00 00 7a 24 	l.j 22780 <__rom_size+0x8434>
    3ef4:	00 06 80 00 	l.j 1a3ef4 <__ram_length+0x123ef4>
    3ef8:	20 40 1a 9f 	.word 0x20401a9f
    3efc:	00 00 7a b8 	l.j 229dc <__rom_size+0x8690>
    3f00:	00 00 7d a4 	l.j 23590 <__rom_size+0x9244>
    3f04:	00 06 80 00 	l.j 1a3f04 <__ram_length+0x123f04>
    3f08:	20 40 1a 9f 	.word 0x20401a9f
    3f0c:	00 00 7e 38 	l.j 237ec <__rom_size+0x94a0>
    3f10:	00 00 7e b0 	l.j 239d0 <__rom_size+0x9684>
    3f14:	00 06 80 00 	l.j 1a3f14 <__ram_length+0x123f14>
    3f18:	20 40 1a 9f 	.word 0x20401a9f
    3f1c:	00 00 7f 54 	l.j 23c6c <__rom_size+0x9920>
    3f20:	00 00 7f 90 	l.j 23d60 <__rom_size+0x9a14>
    3f24:	00 06 80 00 	l.j 1a3f24 <__ram_length+0x123f24>
    3f28:	20 40 1a 9f 	.word 0x20401a9f
    3f2c:	00 00 80 08 	l.j 23f4c <__rom_size+0x9c00>
    3f30:	00 00 81 3c 	l.j 24420 <__rom_size+0xa0d4>
    3f34:	00 06 80 00 	l.j 1a3f34 <__ram_length+0x123f34>
    3f38:	20 40 1a 9f 	.word 0x20401a9f
    3f3c:	00 00 81 44 	l.j 2444c <__rom_size+0xa100>
    3f40:	00 00 81 80 	l.j 24540 <__rom_size+0xa1f4>
    3f44:	00 06 80 00 	l.j 1a3f44 <__ram_length+0x123f44>
    3f48:	20 40 1a 9f 	.word 0x20401a9f
    3f4c:	00 00 82 48 	l.j 2486c <__rom_size+0xa520>
    3f50:	00 00 84 30 	l.j 25010 <__rom_size+0xacc4>
    3f54:	00 06 80 00 	l.j 1a3f54 <__ram_length+0x123f54>
    3f58:	20 40 1a 9f 	.word 0x20401a9f
    3f5c:	00 00 84 c4 	l.j 2526c <__rom_size+0xaf20>
    3f60:	00 00 86 14 	l.j 257b0 <__rom_size+0xb464>
    3f64:	00 06 80 00 	l.j 1a3f64 <__ram_length+0x123f64>
    3f68:	20 40 1a 9f 	.word 0x20401a9f
    3f6c:	00 00 87 4c 	l.j 25c9c <__rom_size+0xb950>
    3f70:	00 00 87 98 	l.j 25dd0 <__rom_size+0xba84>
    3f74:	00 06 80 00 	l.j 1a3f74 <__ram_length+0x123f74>
    3f78:	20 40 1a 9f 	.word 0x20401a9f
	...
    3f84:	00 00 73 50 	l.j 20cc4 <__rom_size+0x6978>
    3f88:	00 00 75 ec 	l.j 21738 <__rom_size+0x73ec>
    3f8c:	00 02 30 9f 	l.j 90208 <__ram_length+0x10208>
    3f90:	00 00 77 04 	l.j 21ba0 <__rom_size+0x7854>
    3f94:	00 00 78 28 	l.j 22034 <__rom_size+0x7ce8>
    3f98:	00 01 5e 00 	l.j 5b798 <__rom_size+0x4144c>
    3f9c:	00 8a a0 00 	l.j 22abf9c <__stack+0x1e2bfa0>
    3fa0:	00 8a ac 00 	l.j 22aefa0 <__stack+0x1e2efa4>
    3fa4:	01 5e 00 00 	l.j 5783fa4 <__stack+0x5303fa8>
	...
    3fb0:	73 50 00 00 	l.cust1 
    3fb4:	75 ec 00 02 	l.cust2 
    3fb8:	30 9f 00 00 	.word 0x309f0000
    3fbc:	75 ec 00 00 	l.cust2 
    3fc0:	77 08 00 01 	l.cust2 
    3fc4:	66 00 00 77 	.word 0x66000077
    3fc8:	08 00 00 8a 	.word 0x0800008a
    3fcc:	ac 00 01 66 	l.xori r0,r0,0x166
    3fd0:	00 00 8a ac 	l.j 26a80 <__rom_size+0xc734>
    3fd4:	00 00 8a bc 	l.j 26ac4 <__rom_size+0xc778>
    3fd8:	00 01 66 00 	l.j 5d7d8 <__rom_size+0x4348c>
    3fdc:	00 8a bc 00 	l.j 22b2fdc <__stack+0x1e32fe0>
    3fe0:	00 8f 58 00 	l.j 23d9fe0 <__stack+0x1f59fe4>
    3fe4:	01 66 00 00 	l.j 5983fe4 <__stack+0x5503fe8>
	...
    3ff0:	73 50 00 00 	l.cust1 
    3ff4:	75 ec 00 02 	l.cust2 
    3ff8:	30 9f 00 00 	.word 0x309f0000
    3ffc:	75 ec 00 00 	l.cust2 
    4000:	77 4c 00 01 	l.cust2 
    4004:	64 00 00 77 	.word 0x64000077
    4008:	4c 00 00 77 	l.maci r0,0x77
    400c:	5c 00 01 5e 	.word 0x5c00015e
    4010:	00 00 78 28 	l.j 220b0 <__rom_size+0x7d64>
    4014:	00 00 7a 28 	l.j 228b4 <__rom_size+0x8568>
    4018:	00 01 64 00 	l.j 5d018 <__rom_size+0x42ccc>
    401c:	00 7a 28 00 	l.j 1e8e01c <__stack+0x1a0e020>
    4020:	00 7a b8 00 	l.j 1eb2020 <__stack+0x1a32024>
    4024:	01 68 00 00 	l.j 5a04024 <__stack+0x5584028>
    4028:	7a b8 00 00 	l.cust3 
    402c:	7d a8 00 01 	l.cust4 
    4030:	64 00 00 7d 	.word 0x6400007d
    4034:	a8 00 00 7e 	l.ori r0,r0,0x7e
    4038:	38 00 01 68 	.word 0x38000168
    403c:	00 00 7e 38 	l.j 2391c <__rom_size+0x95d0>
    4040:	00 00 84 34 	l.j 25110 <__rom_size+0xadc4>
    4044:	00 01 64 00 	l.j 5d044 <__rom_size+0x42cf8>
    4048:	00 84 34 00 	l.j 2111048 <__stack+0x1c9104c>
    404c:	00 84 c4 00 	l.j 213504c <__stack+0x1cb5050>
    4050:	01 68 00 00 	l.j 5a04050 <__stack+0x5584054>
    4054:	84 c4 00 00 	l.lwz r6,0x0(r4)
    4058:	86 bc 00 01 	l.lwz r21,0x1(r28)
    405c:	64 00 00 86 	.word 0x64000086
    4060:	bc 00 00 87 	l.sfeqi r0,0x87
    4064:	4c 00 01 68 	l.maci r0,0x168
    4068:	00 00 87 4c 	l.j 25d98 <__rom_size+0xba4c>
    406c:	00 00 89 f8 	l.j 2684c <__rom_size+0xc500>
    4070:	00 01 64 00 	l.j 5d070 <__rom_size+0x42d24>
    4074:	00 89 f8 00 	l.j 2282074 <__stack+0x1e02078>
    4078:	00 8a 88 00 	l.j 22a6078 <__stack+0x1e2607c>
    407c:	01 68 00 00 	l.j 5a0407c <__stack+0x5584080>
    4080:	8a 88 00 00 	l.lws r20,0x0(r8)
    4084:	8a a0 00 01 	l.lws r21,0x1(r0)
    4088:	64 00 00 8a 	.word 0x6400008a
    408c:	ac 00 00 8a 	l.xori r0,r0,0x8a
    4090:	bc 00 01 64 	l.sfeqi r0,0x164
    4094:	00 00 8a bc 	l.j 26b84 <__rom_size+0xc838>
    4098:	00 00 8f 58 	l.j 27df8 <__rom_size+0xdaac>
    409c:	00 01 64 00 	l.j 5d09c <__rom_size+0x42d50>
	...
    40a8:	00 73 50 00 	l.j 1cd80a8 <__stack+0x18580ac>
    40ac:	00 75 ec 00 	l.j 1d7f0ac <__stack+0x18ff0b0>
    40b0:	02 30 9f 00 	l.j f8c2bcb0 <__stack+0xf87abcb4>
    40b4:	00 75 ec 00 	l.j 1d7f0b4 <__stack+0x18ff0b8>
    40b8:	00 76 00 00 	l.j 1d840b8 <__stack+0x19040bc>
    40bc:	01 62 00 00 	l.j 58840bc <__stack+0x54040c0>
    40c0:	76 00 00 00 	l.cust2 
    40c4:	77 4c 00 01 	l.cust2 
    40c8:	68 00 00 77 	.word 0x68000077
    40cc:	4c 00 00 77 	l.maci r0,0x77
    40d0:	5c 00 01 66 	.word 0x5c000166
    40d4:	00 00 78 28 	l.j 22174 <__rom_size+0x7e28>
    40d8:	00 00 7a 1c 	l.j 22948 <__rom_size+0x85fc>
    40dc:	00 01 68 00 	l.j 5e0dc <__rom_size+0x43d90>
    40e0:	00 7a 1c 00 	l.j 1e8b0e0 <__stack+0x1a0b0e4>
    40e4:	00 7a b8 00 	l.j 1eb20e4 <__stack+0x1a320e8>
    40e8:	01 6e 00 00 	l.j 5b840e8 <__stack+0x57040ec>
    40ec:	7a b8 00 00 	l.cust3 
    40f0:	7d 9c 00 01 	l.cust4 
    40f4:	68 00 00 7d 	.word 0x6800007d
    40f8:	9c 00 00 7e 	l.addi r0,r0,0x7e
    40fc:	38 00 01 6e 	.word 0x3800016e
    4100:	00 00 7e 38 	l.j 239e0 <__rom_size+0x9694>
    4104:	00 00 84 2c 	l.j 251b4 <__rom_size+0xae68>
    4108:	00 01 68 00 	l.j 5e108 <__rom_size+0x43dbc>
    410c:	00 84 2c 00 	l.j 210f10c <__stack+0x1c8f110>
    4110:	00 84 c4 00 	l.j 2135110 <__stack+0x1cb5114>
    4114:	01 6e 00 00 	l.j 5b84114 <__stack+0x5704118>
    4118:	84 c4 00 00 	l.lwz r6,0x0(r4)
    411c:	86 b4 00 01 	l.lwz r21,0x1(r20)
    4120:	68 00 00 86 	.word 0x68000086
    4124:	b4 00 00 87 	l.mfspr r0,r0,0x87
    4128:	4c 00 01 6e 	l.maci r0,0x16e
    412c:	00 00 87 4c 	l.j 25e5c <__rom_size+0xbb10>
    4130:	00 00 89 f0 	l.j 268f0 <__rom_size+0xc5a4>
    4134:	00 01 68 00 	l.j 5e134 <__rom_size+0x43de8>
    4138:	00 89 f0 00 	l.j 2280138 <__stack+0x1e0013c>
    413c:	00 8a 8c 00 	l.j 22a713c <__stack+0x1e27140>
    4140:	01 6e 00 00 	l.j 5b84140 <__stack+0x5704144>
    4144:	8a 8c 00 00 	l.lws r20,0x0(r12)
    4148:	8a a0 00 01 	l.lws r21,0x1(r0)
    414c:	68 00 00 8a 	.word 0x6800008a
    4150:	ac 00 00 8a 	l.xori r0,r0,0x8a
    4154:	bc 00 01 68 	l.sfeqi r0,0x168
    4158:	00 00 8a bc 	l.j 26c48 <__rom_size+0xc8fc>
    415c:	00 00 8a dc 	l.j 26ccc <__rom_size+0xc980>
    4160:	00 01 68 00 	l.j 5e160 <__rom_size+0x43e14>
    4164:	00 8a dc 00 	l.j 22bb164 <__stack+0x1e3b168>
    4168:	00 8b a0 00 	l.j 22ec168 <__stack+0x1e6c16c>
    416c:	01 62 00 00 	l.j 588416c <__stack+0x5404170>
    4170:	8c 84 00 00 	l.lbz r4,0x0(r4)
    4174:	8c 94 00 01 	l.lbz r4,0x1(r20)
    4178:	62 00 00 8d 	.word 0x6200008d
    417c:	a0 00 00 8f 	l.addic r0,r0,0x8f
    4180:	58 00 01 62 	.word 0x58000162
	...
    418c:	00 00 77 08 	l.j 21dac <__rom_size+0x7a60>
    4190:	00 00 77 60 	l.j 21f10 <__rom_size+0x7bc4>
    4194:	00 0b 75 7f 	l.j 2e1790 <__ram_length+0x261790>
    4198:	3d 1e 03 00 	.word 0x3d1e0300
    419c:	42 0b b8 22 	.word 0x420bb822
    41a0:	9f 00 00 77 	l.addi r24,r0,0x77
    41a4:	60 00 00 77 	.word 0x60000077
    41a8:	80 00 0b 75 	l.ld r0,0xb75(r0)
    41ac:	00 3d 1e 03 	l.j f4b9b8 <__stack+0xacb9bc>
    41b0:	00 42 0b b8 	l.j 1087090 <__stack+0xc07094>
    41b4:	22 9f 00 00 	.word 0x229f0000
    41b8:	77 84 00 00 	l.cust2 
    41bc:	77 e4 00 03 	l.cust2 
    41c0:	72 0b 9f 00 	l.cust1 
    41c4:	00 77 e4 00 	l.j 1dfd1c4 <__stack+0x197d1c8>
    41c8:	00 77 e8 00 	l.j 1dfe1c8 <__stack+0x197e1cc>
    41cc:	01 52 00 00 	l.j 54841cc <__stack+0x50041d0>
    41d0:	77 e8 00 00 	l.cust2 
    41d4:	77 fc 00 03 	l.cust2 
    41d8:	72 01 9f 00 	l.cust1 
    41dc:	00 77 fc 00 	l.j 1e031dc <__stack+0x19831e0>
    41e0:	00 78 0c 00 	l.j 1e071e0 <__stack+0x19871e4>
    41e4:	03 72 02 9f 	l.j fdc84c60 <__stack+0xfd804c64>
    41e8:	00 00 78 0c 	l.j 22218 <__rom_size+0x7ecc>
    41ec:	00 00 78 1b 	l.j 22258 <__rom_size+0x7f0c>
    41f0:	00 0b 75 7f 	l.j 2e17ec <__ram_length+0x2617ec>
    41f4:	3d 1e 03 00 	.word 0x3d1e0300
    41f8:	42 0b b8 22 	.word 0x420bb822
    41fc:	9f 00 00 8a 	l.addi r24,r0,0x8a
    4200:	a0 00 00 8a 	l.addic r0,r0,0x8a
    4204:	ac 00 03 72 	l.xori r0,r0,0x372
    4208:	01 9f 00 00 	l.j 67c4208 <__stack+0x634420c>
	...
    4214:	73 50 00 00 	l.cust1 
    4218:	75 ec 00 02 	l.cust2 
    421c:	31 9f 00 00 	.word 0x319f0000
    4220:	75 ec 00 00 	l.cust2 
    4224:	8f 58 00 03 	l.lbz r26,0x3(r24)
    4228:	91 af 7f 00 	l.lbs r13,0x7f00(r15)
	...
    4234:	00 76 50 00 	l.j 1d98234 <__stack+0x1918238>
    4238:	00 76 58 00 	l.j 1d9a238 <__stack+0x191a23c>
    423c:	01 52 00 00 	l.j 548423c <__stack+0x5004240>
	...
    4248:	76 64 00 00 	l.cust2 
    424c:	76 6c 00 01 	l.cust2 
    4250:	52 00 00 00 	.word 0x52000000
    4254:	00 00 00 00 	l.j 4254 <__rom_size-0x160f8>
    4258:	00 00 00 76 	l.j 4430 <__rom_size-0x15f1c>
    425c:	78 00 00 76 	l.cust3 
    4260:	a0 00 02 7b 	l.addic r0,r0,0x27b
	...
    426c:	00 00 00 8b 	l.j 4498 <__rom_size-0x15eb4>
    4270:	b0 00 00 8b 	l.muli r0,r0,0x8b
    4274:	ec 00 01 62 	.word 0xec000162
	...
    4280:	00 00 8c a4 	l.j 27510 <__rom_size+0xd1c4>
    4284:	00 00 8c e4 	l.j 27614 <__rom_size+0xd2c8>
    4288:	00 01 62 00 	l.j 5ca88 <__rom_size+0x4273c>
	...
    4294:	00 8f 94 00 	l.j 23e9294 <__stack+0x1f69298>
    4298:	00 8f b8 00 	l.j 23f2298 <__stack+0x1f7229c>
    429c:	02 71 00 00 	l.j f9c4429c <__stack+0xf97c42a0>
    42a0:	00 8f b8 00 	l.j 23f22a0 <__stack+0x1f722a4>
    42a4:	00 90 50 00 	l.j 24182a4 <__stack+0x1f982a8>
    42a8:	02 71 14 00 	l.j f9c492a8 <__stack+0xf97c92ac>
	...
    42b4:	00 8f 94 00 	l.j 23e92b4 <__stack+0x1f692b8>
    42b8:	00 8f cf 00 	l.j 23f7eb8 <__stack+0x1f77ebc>
    42bc:	01 53 00 00 	l.j 54c42bc <__stack+0x50442c0>
    42c0:	8f cf 00 00 	l.lbz r30,0x0(r15)
    42c4:	90 44 00 01 	l.lbs r2,0x1(r4)
    42c8:	5e 00 00 90 	.word 0x5e000090
    42cc:	44 00 00 90 	l.jr r0
    42d0:	50 00 05 03 	.word 0x50000503
    42d4:	00 41 a3 94 	l.j 106d124 <__stack+0xbed128>
	...
    42e0:	00 00 8f 94 	l.j 28130 <__rom_size+0xdde4>
    42e4:	00 00 8f a0 	l.j 28164 <__rom_size+0xde18>
    42e8:	00 01 54 00 	l.j 592e8 <__rom_size+0x3ef9c>
	...
    42f4:	00 8f 94 00 	l.j 23e92f4 <__stack+0x1f692f8>
    42f8:	00 8f c4 00 	l.j 23f52f8 <__stack+0x1f752fc>
    42fc:	01 55 00 00 	l.j 55442fc <__stack+0x50c4300>
	...
    4308:	8f 94 00 00 	l.lbz r28,0x0(r20)
    430c:	8f cf 00 01 	l.lbz r30,0x1(r15)
    4310:	56 00 00 00 	.word 0x56000000
    4314:	00 00 00 00 	l.j 4314 <__rom_size-0x16038>
    4318:	00 00 00 90 	l.j 4558 <__rom_size-0x15df4>
    431c:	50 00 00 90 	.word 0x50000090
    4320:	88 00 02 71 	l.lws r0,0x271(r0)
    4324:	00 00 00 90 	l.j 4564 <__rom_size-0x15de8>
    4328:	88 00 00 93 	l.lws r0,0x93(r0)
    432c:	24 00 02 71 	l.rfe 
    4330:	34 00 00 00 	.word 0x34000000
    4334:	00 00 00 00 	l.j 4334 <__rom_size-0x16018>
    4338:	00 00 00 90 	l.j 4578 <__rom_size-0x15dd4>
    433c:	50 00 00 90 	.word 0x50000090
    4340:	e8 00 01 53 	.word 0xe8000153
    4344:	00 00 90 e8 	l.j 286e4 <__rom_size+0xe398>
    4348:	00 00 92 d8 	l.j 28ea8 <__rom_size+0xeb5c>
    434c:	00 01 5e 00 	l.j 5bb4c <__rom_size+0x41800>
    4350:	00 92 d8 00 	l.j 24ba350 <__stack+0x203a354>
    4354:	00 92 f0 00 	l.j 24c0354 <__stack+0x2040358>
    4358:	04 72 d4 7d 	l.jal 1cb954c <__stack+0x1839550>
    435c:	9f 00 00 00 	l.addi r24,r0,0x0
    4360:	00 00 00 00 	l.j 4360 <__rom_size-0x15fec>
    4364:	00 00 00 90 	l.j 45a4 <__rom_size-0x15da8>
    4368:	50 00 00 90 	.word 0x50000090
    436c:	e8 00 01 54 	.word 0xe8000154
    4370:	00 00 90 e8 	l.j 28710 <__rom_size+0xe3c4>
    4374:	00 00 93 10 	l.j 28fb4 <__rom_size+0xec68>
    4378:	00 01 66 00 	l.j 5db78 <__rom_size+0x4382c>
	...
    4384:	00 90 50 00 	l.j 2418384 <__stack+0x1f98388>
    4388:	00 90 e8 00 	l.j 243e388 <__stack+0x1fbe38c>
    438c:	02 30 9f 00 	l.j f8c2bf8c <__stack+0xf87abf90>
    4390:	00 90 e8 00 	l.j 243e390 <__stack+0x1fbe394>
    4394:	00 91 00 00 	l.j 2444394 <__stack+0x1fc4398>
    4398:	01 52 00 00 	l.j 5484398 <__stack+0x500439c>
    439c:	91 18 00 00 	l.lbs r8,0x0(r24)
    43a0:	91 20 00 06 	l.lbs r9,0x6(r0)
    43a4:	03 00 41 a4 	l.j fc014a34 <__stack+0xfbb94a38>
    43a8:	dc 9f 00 00 	l.sh 0x2000(r31),r0
    43ac:	91 20 00 00 	l.lbs r9,0x0(r0)
    43b0:	91 24 00 01 	l.lbs r9,0x1(r4)
    43b4:	52 00 00 91 	.word 0x52000091
    43b8:	24 00 00 91 	l.rfe 
    43bc:	e0 00 01 52 	.word 0xe0000152
    43c0:	00 00 92 2c 	l.j 28c70 <__rom_size+0xe924>
    43c4:	00 00 92 c8 	l.j 28ee4 <__rom_size+0xeb98>
    43c8:	00 01 52 00 	l.j 58bc8 <__rom_size+0x3e87c>
	...
    43d4:	00 90 9c 00 	l.j 242b3d4 <__stack+0x1fab3d8>
    43d8:	00 90 e8 00 	l.j 243e3d8 <__stack+0x1fbe3dc>
    43dc:	05 03 00 41 	l.jal 40c44e0 <__stack+0x3c444e4>
    43e0:	dc 94 00 00 	l.sh 0x2000(r20),r0
    43e4:	90 e8 00 00 	l.lbs r7,0x0(r8)
    43e8:	91 04 00 01 	l.lbs r8,0x1(r4)
    43ec:	60 00 00 91 	.word 0x60000091
    43f0:	04 00 00 91 	l.jal 4634 <__rom_size-0x15d18>
    43f4:	0c 00 01 52 	l.bnf 493c <__rom_size-0x15a10>
    43f8:	00 00 91 0c 	l.j 28828 <__rom_size+0xe4dc>
    43fc:	00 00 91 20 	l.j 2887c <__rom_size+0xe530>
    4400:	00 02 91 50 	l.j a8940 <__ram_length+0x28940>
    4404:	00 00 91 20 	l.j 28884 <__rom_size+0xe538>
    4408:	00 00 91 24 	l.j 28898 <__rom_size+0xe54c>
    440c:	00 01 60 00 	l.j 5c40c <__rom_size+0x420c0>
    4410:	00 91 24 00 	l.j 244d410 <__stack+0x1fcd414>
    4414:	00 92 08 00 	l.j 2486414 <__stack+0x2006418>
    4418:	01 60 00 00 	l.j 5804418 <__stack+0x538441c>
    441c:	92 08 00 00 	l.lbs r16,0x0(r8)
    4420:	92 2c 00 03 	l.lbs r17,0x3(r12)
    4424:	80 01 9f 00 	l.ld r0,0xffff9f00(r1)
    4428:	00 92 2c 00 	l.j 248f428 <__stack+0x200f42c>
    442c:	00 92 b4 00 	l.j 24b142c <__stack+0x2031430>
    4430:	01 60 00 00 	l.j 5804430 <__stack+0x5384434>
    4434:	92 b4 00 00 	l.lbs r21,0x0(r20)
    4438:	92 f0 00 01 	l.lbs r23,0x1(r16)
    443c:	60 00 00 00 	.word 0x60000000
    4440:	00 00 00 00 	l.j 4440 <__rom_size-0x15f0c>
    4444:	00 00 00 90 	l.j 4684 <__rom_size-0x15cc8>
    4448:	8c 00 00 90 	l.lbz r0,0x90(r0)
    444c:	e8 00 05 03 	.word 0xe8000503
    4450:	00 41 dc 90 	l.j 107b690 <__stack+0xbfb694>
    4454:	00 00 90 e8 	l.j 287f4 <__rom_size+0xe4a8>
    4458:	00 00 92 58 	l.j 28db8 <__rom_size+0xea6c>
    445c:	00 01 62 00 	l.j 5cc5c <__rom_size+0x42910>
    4460:	00 92 58 00 	l.j 249a460 <__stack+0x201a464>
    4464:	00 92 af 00 	l.j 24b0064 <__stack+0x2030068>
    4468:	01 5b 00 00 	l.j 56c4468 <__stack+0x524446c>
    446c:	92 af 00 00 	l.lbs r21,0x0(r15)
    4470:	93 08 00 01 	l.lbs r24,0x1(r8)
    4474:	62 00 00 00 	.word 0x62000000
    4478:	00 00 00 00 	l.j 4478 <__rom_size-0x15ed4>
    447c:	00 00 00 90 	l.j 46bc <__rom_size-0x15c90>
    4480:	e8 00 00 90 	.word 0xe8000090
    4484:	f0 00 02 30 	l.cust5 r0,r0,r0,0x11,0x10
    4488:	9f 00 00 90 	l.addi r24,r0,0x90
    448c:	f0 00 00 92 	l.cust5 r0,r0,r0,0x4,0x12
    4490:	30 00 01 64 	.word 0x30000164
    4494:	00 00 92 30 	l.j 28d54 <__rom_size+0xea08>
    4498:	00 00 93 0c 	l.j 290c8 <__rom_size+0xed7c>
    449c:	00 01 64 00 	l.j 5d49c <__rom_size+0x43150>
	...
    44a8:	00 90 dc 00 	l.j 243b4a8 <__stack+0x1fbb4ac>
    44ac:	00 93 1c 00 	l.j 24cb4ac <__stack+0x204b4b0>
    44b0:	01 6e 00 00 	l.j 5b844b0 <__stack+0x57044b4>
	...
    44bc:	91 88 00 00 	l.lbs r12,0x0(r8)
    44c0:	91 e0 00 02 	l.lbs r15,0x2(r0)
    44c4:	72 1c 00 00 	l.cust1 
	...
    44d0:	91 b4 00 00 	l.lbs r13,0x0(r20)
    44d4:	91 bc 00 01 	l.lbs r13,0x1(r28)
    44d8:	54 00 00 00 	.word 0x54000000
    44dc:	00 00 00 00 	l.j 44dc <__rom_size-0x15e70>
    44e0:	00 00 00 91 	l.j 4724 <__rom_size-0x15c28>
    44e4:	e0 00 00 91 	l.addc r0,r0,r0
    44e8:	e8 00 01 52 	.word 0xe8000152
	...
    44f4:	00 00 92 d0 	l.j 29034 <__rom_size+0xece8>
    44f8:	00 00 92 d8 	l.j 29058 <__rom_size+0xed0c>
    44fc:	00 04 0a 01 	l.j 106d00 <__ram_length+0x86d00>
    4500:	2c 9f 00 00 	.word 0x2c9f0000
	...
    450c:	92 d0 00 00 	l.lbs r22,0x0(r16)
    4510:	92 f0 00 02 	l.lbs r23,0x2(r16)
    4514:	30 9f 00 00 	.word 0x309f0000
	...
    4520:	92 d0 00 00 	l.lbs r22,0x0(r16)
    4524:	92 d8 00 01 	l.lbs r22,0x1(r24)
    4528:	5e 00 00 92 	.word 0x5e000092
    452c:	d8 00 00 92 	l.sb 0x92(r0),r0
    4530:	f0 00 04 72 	l.cust5 r0,r0,r0,0x23,0x12
    4534:	d4 7d 9f 00 	l.sw 0x1f00(r29),r19
	...
    4540:	00 92 d0 00 	l.j 24b8540 <__stack+0x2038544>
    4544:	00 92 e0 00 	l.j 24bc544 <__stack+0x203c548>
    4548:	01 5e 00 00 	l.j 5784548 <__stack+0x530454c>
    454c:	92 e0 00 00 	l.lbs r23,0x0(r0)
    4550:	92 f0 00 01 	l.lbs r23,0x1(r16)
    4554:	5e 00 00 00 	.word 0x5e000000
    4558:	00 00 00 00 	l.j 4558 <__rom_size-0x15df4>
    455c:	00 00 00 93 	l.j 47a8 <__rom_size-0x15ba4>
    4560:	24 00 00 93 	l.rfe 
    4564:	34 00 02 71 	.word 0x34000271
    4568:	00 00 00 93 	l.j 47b4 <__rom_size-0x15b98>
    456c:	34 00 00 93 	.word 0x34000093
    4570:	68 00 02 71 	.word 0x68000271
    4574:	08 00 00 00 	.word 0x08000000
    4578:	00 00 00 00 	l.j 4578 <__rom_size-0x15dd4>
    457c:	00 00 00 93 	l.j 47c8 <__rom_size-0x15b84>
    4580:	24 00 00 93 	l.rfe 
    4584:	40 00 01 53 	.word 0x40000153
    4588:	00 00 93 40 	l.j 29288 <__rom_size+0xef3c>
    458c:	00 00 93 60 	l.j 2930c <__rom_size+0xefc0>
    4590:	00 01 52 00 	l.j 58d90 <__rom_size+0x3ea44>
	...
    459c:	00 93 24 00 	l.j 24cd59c <__stack+0x204d5a0>
    45a0:	00 93 47 00 	l.j 24d61a0 <__stack+0x20561a4>
    45a4:	01 54 00 00 	l.j 55045a4 <__stack+0x50845a8>
	...
    45b0:	93 24 00 00 	l.lbs r25,0x0(r4)
    45b4:	93 48 00 02 	l.lbs r26,0x2(r8)
    45b8:	31 9f 00 00 	.word 0x319f0000
    45bc:	93 48 00 00 	l.lbs r26,0x0(r8)
    45c0:	93 58 00 01 	l.lbs r26,0x1(r24)
    45c4:	5b 00 00 00 	.word 0x5b000000
    45c8:	00 00 00 00 	l.j 45c8 <__rom_size-0x15d84>
    45cc:	00 00 00 93 	l.j 4818 <__rom_size-0x15b34>
    45d0:	68 00 00 93 	.word 0x68000093
    45d4:	94 00 02 71 	l.lhz r0,0x271(r0)
    45d8:	00 00 00 93 	l.j 4824 <__rom_size-0x15b28>
    45dc:	94 00 00 9a 	l.lhz r0,0x9a(r0)
    45e0:	f8 00 02 71 	l.cust7 
    45e4:	18 00 00 00 	l.movhi r0,0x0
    45e8:	00 00 00 00 	l.j 45e8 <__rom_size-0x15d64>
    45ec:	00 00 00 94 	l.j 483c <__rom_size-0x15b10>
    45f0:	40 00 00 95 	.word 0x40000095
    45f4:	fc 00 06 03 	l.cust8 
    45f8:	00 41 a4 dc 	l.j 106d968 <__stack+0xbed96c>
    45fc:	9f 00 00 00 	l.addi r24,r0,0x0
    4600:	00 00 00 00 	l.j 4600 <__rom_size-0x15d4c>
    4604:	00 00 00 95 	l.j 4858 <__rom_size-0x15af4>
    4608:	64 00 00 95 	.word 0x64000095
    460c:	70 00 02 30 	l.cust1 
    4610:	9f 00 00 95 	l.addi r24,r0,0x95
    4614:	70 00 00 95 	l.cust1 
    4618:	88 00 01 52 	l.lws r0,0x152(r0)
    461c:	00 00 95 88 	l.j 29c3c <__rom_size+0xf8f0>
    4620:	00 00 95 b0 	l.j 29ce0 <__rom_size+0xf994>
    4624:	00 03 72 7f 	l.j e1020 <__ram_length+0x61020>
    4628:	9f 00 00 95 	l.addi r24,r0,0x95
    462c:	b0 00 00 95 	l.muli r0,r0,0x95
    4630:	c4 00 01 52 	l.msb r0,r0
	...
    463c:	00 00 9a f8 	l.j 2b21c <__rom_size+0x10ed0>
    4640:	00 00 9b 28 	l.j 2b2e0 <__rom_size+0x10f94>
    4644:	00 02 71 00 	l.j a0a44 <__ram_length+0x20a44>
    4648:	00 00 9b 28 	l.j 2b2e8 <__rom_size+0x10f9c>
    464c:	00 00 a3 30 	l.j 2d30c <__rom_size+0x12fc0>
    4650:	00 02 71 3c 	l.j a0b40 <__ram_length+0x20b40>
	...
    465c:	00 00 9a f8 	l.j 2b23c <__rom_size+0x10ef0>
    4660:	00 00 9b 34 	l.j 2b330 <__rom_size+0x10fe4>
    4664:	00 01 53 00 	l.j 59264 <__rom_size+0x3ef18>
    4668:	00 9b 34 00 	l.j 26d1668 <__stack+0x225166c>
    466c:	00 9b 3b 00 	l.j 26d326c <__stack+0x2253270>
    4670:	01 54 00 00 	l.j 5504670 <__stack+0x5084674>
	...
    467c:	9a f8 00 00 	l.lhs r23,0x0(r24)
    4680:	9b 7c 00 02 	l.lhs r27,0x2(r28)
    4684:	30 9f 00 00 	.word 0x309f0000
    4688:	9b 7c 00 00 	l.lhs r27,0x0(r28)
    468c:	9b 90 00 05 	l.lhs r28,0x5(r16)
    4690:	03 00 41 cb 	l.j fc014dbc <__stack+0xfbb94dc0>
    4694:	98 00 00 9b 	l.lhs r0,0x9b(r0)
    4698:	90 00 00 9b 	l.lbs r0,0x9b(r0)
    469c:	d8 00 01 5e 	l.sb 0x15e(r0),r0
	...
    46a8:	00 00 9b 90 	l.j 2b4e8 <__rom_size+0x1119c>
    46ac:	00 00 9b a0 	l.j 2b52c <__rom_size+0x111e0>
    46b0:	00 01 52 00 	l.j 58eb0 <__rom_size+0x3eb64>
    46b4:	00 9b a0 00 	l.j 26ec6b4 <__stack+0x226c6b8>
    46b8:	00 9b a8 00 	l.j 26ee6b8 <__stack+0x226e6bc>
    46bc:	04 72 80 7c 	l.jal 1ca48ac <__stack+0x18248b0>
    46c0:	9f 00 00 9b 	l.addi r24,r0,0x9b
    46c4:	a8 00 00 9b 	l.ori r0,r0,0x9b
    46c8:	b4 00 01 52 	l.mfspr r0,r0,0x152
    46cc:	00 00 9b b4 	l.j 2b59c <__rom_size+0x11250>
    46d0:	00 00 9b cc 	l.j 2b600 <__rom_size+0x112b4>
    46d4:	00 01 52 00 	l.j 58ed4 <__rom_size+0x3eb88>
	...
    46e0:	00 9c 54 00 	l.j 27196e0 <__stack+0x22996e4>
    46e4:	00 9c 68 00 	l.j 271e6e4 <__stack+0x229e6e8>
    46e8:	02 30 9f 00 	l.j f8c2c2e8 <__stack+0xf87ac2ec>
    46ec:	00 9c 68 00 	l.j 271e6ec <__stack+0x229e6f0>
    46f0:	00 a2 b4 00 	l.j 28b16f0 <__stack+0x24316f4>
    46f4:	01 62 00 00 	l.j 58846f4 <__stack+0x54046f8>
    46f8:	a2 b4 00 00 	l.addic r21,r20,0x0
    46fc:	a2 b8 00 01 	l.addic r21,r24,0x1
    4700:	62 00 00 a2 	.word 0x620000a2
    4704:	b8 00 00 a2 	l.srai r0,r0,0x22
    4708:	d4 00 01 62 	l.sw 0x162(r0),r0
	...
    4714:	00 00 9f 2c 	l.j 2c3c4 <__rom_size+0x12078>
    4718:	00 00 9f 38 	l.j 2c3f8 <__rom_size+0x120ac>
    471c:	00 02 30 9f 	l.j 90998 <__ram_length+0x10998>
    4720:	00 00 a2 a0 	l.j 2d1a0 <__rom_size+0x12e54>
    4724:	00 00 a2 b8 	l.j 2d204 <__rom_size+0x12eb8>
    4728:	00 01 54 00 	l.j 59728 <__rom_size+0x3f3dc>
	...
    4734:	00 9d 64 00 	l.j 275d734 <__stack+0x22dd738>
    4738:	00 9d 80 00 	l.j 2764738 <__stack+0x22e473c>
    473c:	01 53 00 00 	l.j 54c473c <__stack+0x5044740>
    4740:	9d 80 00 00 	l.addi r12,r0,0x0
    4744:	9d 84 00 01 	l.addi r12,r4,0x1
    4748:	54 00 00 9e 	.word 0x5400009e
    474c:	3c 00 00 9e 	.word 0x3c00009e
    4750:	50 00 01 54 	.word 0x50000154
	...
    475c:	00 00 9c 30 	l.j 2b81c <__rom_size+0x114d0>
    4760:	00 00 a2 d4 	l.j 2d2b0 <__rom_size+0x12f64>
    4764:	00 01 68 00 	l.j 5e764 <__rom_size+0x44418>
	...
    4770:	00 9c 0c 00 	l.j 2707770 <__stack+0x2287774>
    4774:	00 a2 d4 00 	l.j 28b9774 <__stack+0x2439778>
    4778:	06 0c 00 18 	l.jal f83047d8 <__stack+0xf7e847dc>
    477c:	00 00 9f 00 	l.j 2c37c <__rom_size+0x12030>
	...
    4788:	00 9c 0c 00 	l.j 2707788 <__stack+0x228778c>
    478c:	00 a2 d4 00 	l.j 28b978c <__stack+0x2439790>
    4790:	06 0c 00 c0 	l.jal f8304a90 <__stack+0xf7e84a94>
    4794:	00 00 9f 00 	l.j 2c394 <__rom_size+0x12048>
	...
    47a0:	00 a2 84 00 	l.j 28a57a0 <__stack+0x24257a4>
    47a4:	00 a2 88 00 	l.j 28a67a4 <__stack+0x24267a8>
    47a8:	02 76 00 00 	l.j f9d847a8 <__stack+0xf99047ac>
    47ac:	00 a2 88 00 	l.j 28a67ac <__stack+0x24267b0>
    47b0:	00 a2 b8 00 	l.j 28b27b0 <__stack+0x24327b4>
    47b4:	01 57 00 00 	l.j 55c47b4 <__stack+0x51447b8>
	...
    47c0:	a3 30 00 00 	l.addic r25,r16,0x0
    47c4:	a3 40 00 02 	l.addic r26,r0,0x2
    47c8:	71 00 00 00 	l.cust1 
    47cc:	a3 40 00 00 	l.addic r26,r0,0x0
    47d0:	a6 28 00 02 	l.andi r17,r8,0x2
    47d4:	71 0c 00 00 	l.cust1 
	...
    47e0:	a3 30 00 00 	l.addic r25,r16,0x0
    47e4:	a3 47 00 01 	l.addic r26,r7,0x1
    47e8:	53 00 00 a3 	.word 0x530000a3
    47ec:	47 00 00 a6 	l.jr r0
    47f0:	08 00 01 52 	.word 0x08000152
	...
    47fc:	00 00 a3 ec 	l.j 2d7ac <__rom_size+0x13460>
    4800:	00 00 a3 fc 	l.j 2d7f0 <__rom_size+0x134a4>
    4804:	00 02 30 9f 	l.j 90a80 <__ram_length+0x10a80>
    4808:	00 00 a3 fc 	l.j 2d7f8 <__rom_size+0x134ac>
    480c:	00 00 a4 5c 	l.j 2d97c <__rom_size+0x13630>
    4810:	00 01 58 00 	l.j 5a810 <__rom_size+0x404c4>
    4814:	00 a5 24 00 	l.j 294d814 <__stack+0x24cd818>
    4818:	00 a6 28 00 	l.j 298e818 <__stack+0x250e81c>
    481c:	01 58 00 00 	l.j 560481c <__stack+0x5184820>
	...
    4828:	a3 7c 00 00 	l.addic r27,r28,0x0
    482c:	a3 a4 00 02 	l.addic r29,r4,0x2
    4830:	30 9f 00 00 	.word 0x309f0000
	...
    483c:	a3 a4 00 00 	l.addic r29,r4,0x0
    4840:	a3 c4 00 01 	l.addic r30,r4,0x1
    4844:	57 00 00 a3 	.word 0x570000a3
    4848:	c4 00 00 a3 	.word 0xc40000a3
    484c:	c8 00 01 53 	.word 0xc8000153
    4850:	00 00 a3 d4 	l.j 2d7a0 <__rom_size+0x13454>
    4854:	00 00 a3 d8 	l.j 2d7b4 <__rom_size+0x13468>
    4858:	00 01 53 00 	l.j 59458 <__rom_size+0x3f10c>
	...
    4864:	00 a6 28 00 	l.j 298e864 <__stack+0x250e868>
    4868:	00 a6 34 00 	l.j 2991868 <__stack+0x251186c>
    486c:	02 71 00 00 	l.j f9c4486c <__stack+0xf97c4870>
    4870:	00 a6 34 00 	l.j 2991870 <__stack+0x2511874>
    4874:	00 a6 b4 00 	l.j 29b1874 <__stack+0x2531878>
    4878:	02 71 0c 00 	l.j f9c47878 <__stack+0xf97c787c>
	...
    4884:	00 a6 28 00 	l.j 298e884 <__stack+0x250e888>
    4888:	00 a6 44 00 	l.j 2995888 <__stack+0x251588c>
    488c:	01 53 00 00 	l.j 54c488c <__stack+0x5044890>
    4890:	a6 44 00 00 	l.andi r18,r4,0x0
    4894:	a6 b4 00 01 	l.andi r21,r20,0x1
    4898:	52 00 00 00 	.word 0x52000000
    489c:	00 00 00 00 	l.j 489c <__rom_size-0x15ab0>
    48a0:	00 00 00 a6 	l.j 4b38 <__rom_size-0x15814>
    48a4:	b4 00 00 a6 	l.mfspr r0,r0,0xa6
    48a8:	e4 00 02 71 	l.sfeq r0,r0
    48ac:	00 00 00 a6 	l.j 4b44 <__rom_size-0x15808>
    48b0:	e4 00 00 a7 	l.sfeq r0,r0
    48b4:	18 00 02 71 	l.movhi r0,0x271
    48b8:	04 00 00 00 	l.jal 48b8 <__rom_size-0x15a94>
    48bc:	00 00 00 00 	l.j 48bc <__rom_size-0x15a90>
    48c0:	00 00 00 a7 	l.j 4b5c <__rom_size-0x157f0>
    48c4:	18 00 00 a7 	l.movhi r0,0xa7
    48c8:	4c 00 02 71 	l.maci r0,0x271
    48cc:	00 00 00 a7 	l.j 4b68 <__rom_size-0x157e4>
    48d0:	4c 00 00 bf 	l.maci r0,0xbf
    48d4:	84 00 03 71 	l.lwz r0,0x371(r0)
    48d8:	bc 04 00 00 	l.sfeqi r4,0x0
	...
    48e4:	a7 18 00 00 	l.andi r24,r24,0x0
    48e8:	a7 48 00 01 	l.andi r26,r8,0x1
    48ec:	53 00 00 00 	.word 0x53000000
    48f0:	00 00 00 00 	l.j 48f0 <__rom_size-0x15a5c>
    48f4:	00 00 00 a7 	l.j 4b90 <__rom_size-0x157bc>
    48f8:	a8 00 00 a7 	l.ori r0,r0,0xa7
    48fc:	b0 00 02 30 	l.muli r0,r0,0x230
    4900:	9f 00 00 ab 	l.addi r24,r0,0xab
    4904:	98 00 00 ab 	l.lhs r0,0xab(r0)
    4908:	9c 00 02 30 	l.addi r0,r0,0x230
    490c:	9f 00 00 ba 	l.addi r24,r0,0xba
    4910:	00 00 00 ba 	l.j 4bf8 <__rom_size-0x15754>
    4914:	08 00 02 30 	.word 0x08000230
    4918:	9f 00 00 bd 	l.addi r24,r0,0xbd
    491c:	2c 00 00 bd 	.word 0x2c0000bd
    4920:	34 00 02 30 	.word 0x34000230
    4924:	9f 00 00 00 	l.addi r24,r0,0x0
    4928:	00 00 00 00 	l.j 4928 <__rom_size-0x15a24>
    492c:	00 00 00 ac 	l.j 4bdc <__rom_size-0x15770>
    4930:	8c 00 00 ac 	l.lbz r0,0xac(r0)
    4934:	e4 00 01 64 	l.sfeq r0,r0
    4938:	00 00 ac e4 	l.j 2fcc8 <__rom_size+0x1597c>
    493c:	00 00 ad ec 	l.j 300ec <__rom_size+0x15da0>
    4940:	00 01 68 00 	l.j 5e940 <__rom_size+0x445f4>
    4944:	00 ae 30 00 	l.j 2b90944 <__stack+0x2710948>
    4948:	00 ae 58 00 	l.j 2b9a948 <__stack+0x271a94c>
    494c:	02 31 9f 00 	l.j f8c6c54c <__stack+0xf87ec550>
    4950:	00 ae 5c 00 	l.j 2b9b950 <__stack+0x271b954>
    4954:	00 b2 74 00 	l.j 2ca1954 <__stack+0x2821958>
    4958:	01 68 00 00 	l.j 5a04958 <__stack+0x558495c>
    495c:	b2 74 00 00 	l.muli r19,r20,0x0
    4960:	b2 88 00 01 	l.muli r20,r8,0x1
    4964:	64 00 00 b2 	.word 0x640000b2
    4968:	bc 00 00 b2 	l.sfeqi r0,0xb2
    496c:	e0 00 01 68 	.word 0xe0000168
    4970:	00 00 b3 18 	l.j 315d0 <__rom_size+0x17284>
    4974:	00 00 b3 40 	l.j 31674 <__rom_size+0x17328>
    4978:	00 02 31 9f 	l.j 90ff4 <__ram_length+0x10ff4>
    497c:	00 00 b3 44 	l.j 3168c <__rom_size+0x17340>
    4980:	00 00 b3 a4 	l.j 31810 <__rom_size+0x174c4>
    4984:	00 01 68 00 	l.j 5e984 <__rom_size+0x44638>
    4988:	00 b4 54 00 	l.j 2d19988 <__stack+0x289998c>
    498c:	00 b4 a8 00 	l.j 2d2e98c <__stack+0x28ae990>
    4990:	01 6a 00 00 	l.j 5a84990 <__stack+0x5604994>
    4994:	b4 a8 00 00 	l.mfspr r5,r8,0x0
    4998:	b5 54 00 01 	l.mfspr r10,r20,0x1
    499c:	64 00 00 b5 	.word 0x640000b5
    49a0:	f0 00 00 b6 	l.cust5 r0,r0,r0,0x5,0x16
    49a4:	1c 00 01 64 	.word 0x1c000164
    49a8:	00 00 b6 1c 	l.j 32218 <__rom_size+0x17ecc>
    49ac:	00 00 b6 44 	l.j 322bc <__rom_size+0x17f70>
    49b0:	00 02 31 9f 	l.j 9102c <__ram_length+0x1102c>
    49b4:	00 00 b6 48 	l.j 322d4 <__rom_size+0x17f88>
    49b8:	00 00 b6 58 	l.j 32318 <__rom_size+0x17fcc>
    49bc:	00 01 64 00 	l.j 5d9bc <__rom_size+0x43670>
    49c0:	00 b6 58 00 	l.j 2d9a9c0 <__stack+0x291a9c4>
    49c4:	00 b6 9c 00 	l.j 2dab9c4 <__stack+0x292b9c8>
    49c8:	01 64 00 00 	l.j 59049c8 <__stack+0x54849cc>
    49cc:	b6 9c 00 00 	l.mfspr r20,r28,0x0
    49d0:	b6 b4 00 01 	l.mfspr r21,r20,0x1
    49d4:	6a 00 00 b6 	.word 0x6a0000b6
    49d8:	cc 00 00 b7 	.word 0xcc0000b7
    49dc:	00 00 01 64 	l.j 4f6c <__rom_size-0x153e0>
    49e0:	00 00 b7 78 	l.j 327c0 <__rom_size+0x18474>
    49e4:	00 00 b7 a4 	l.j 32874 <__rom_size+0x18528>
    49e8:	00 01 64 00 	l.j 5d9e8 <__rom_size+0x4369c>
    49ec:	00 b7 a4 00 	l.j 2ded9ec <__stack+0x296d9f0>
    49f0:	00 b7 cc 00 	l.j 2df79f0 <__stack+0x29779f4>
    49f4:	02 31 9f 00 	l.j f8c6c5f4 <__stack+0xf87ec5f8>
    49f8:	00 b7 d0 00 	l.j 2df89f8 <__stack+0x29789fc>
    49fc:	00 b7 e0 00 	l.j 2dfc9fc <__stack+0x297ca00>
    4a00:	01 64 00 00 	l.j 5904a00 <__stack+0x5484a04>
    4a04:	b7 e0 00 00 	l.mfspr r31,r0,0x0
    4a08:	b8 28 00 01 	l.slli r1,r8,0x1
    4a0c:	64 00 00 b8 	.word 0x640000b8
    4a10:	54 00 00 b8 	.word 0x540000b8
    4a14:	6c 00 01 62 	.word 0x6c000162
    4a18:	00 00 b8 6c 	l.j 32bc8 <__rom_size+0x1887c>
    4a1c:	00 00 b9 18 	l.j 32e7c <__rom_size+0x18b30>
    4a20:	00 01 66 00 	l.j 5e220 <__rom_size+0x43ed4>
    4a24:	00 b9 6c 00 	l.j 2e5fa24 <__stack+0x29dfa28>
    4a28:	00 b9 94 00 	l.j 2e69a28 <__stack+0x29e9a2c>
    4a2c:	02 31 9f 00 	l.j f8c6c62c <__stack+0xf87ec630>
    4a30:	00 b9 98 00 	l.j 2e6aa30 <__stack+0x29eaa34>
    4a34:	00 bb 38 00 	l.j 2ed2a34 <__stack+0x2a52a38>
    4a38:	01 66 00 00 	l.j 5984a38 <__stack+0x5504a3c>
    4a3c:	bb 64 00 00 	l.slli r27,r4,0x0
    4a40:	bb 8c 00 01 	l.slli r28,r12,0x1
    4a44:	64 00 00 bb 	.word 0x640000bb
    4a48:	b8 00 00 bc 	l.srai r0,r0,0x3c
    4a4c:	28 00 01 66 	lv.perm.n r0,r0,r0
    4a50:	00 00 bc 70 	l.j 33c10 <__rom_size+0x198c4>
    4a54:	00 00 bc b4 	l.j 33d24 <__rom_size+0x199d8>
    4a58:	00 01 66 00 	l.j 5e258 <__rom_size+0x43f0c>
    4a5c:	00 bc b4 00 	l.j 2f31a5c <__stack+0x2ab1a60>
    4a60:	00 bc dc 00 	l.j 2f3ba60 <__stack+0x2abba64>
    4a64:	02 31 9f 00 	l.j f8c6c664 <__stack+0xf87ec668>
    4a68:	00 bc e0 00 	l.j 2f3ca68 <__stack+0x2abca6c>
    4a6c:	00 be 80 00 	l.j 2fa4a6c <__stack+0x2b24a70>
    4a70:	01 66 00 00 	l.j 5984a70 <__stack+0x5504a74>
    4a74:	be 80 00 00 	.word 0xbe800000
    4a78:	be d8 00 01 	.word 0xbed80001
    4a7c:	66 00 00 00 	.word 0x66000000
    4a80:	00 00 00 00 	l.j 4a80 <__rom_size-0x158cc>
    4a84:	00 00 00 ac 	l.j 4d34 <__rom_size-0x15618>
    4a88:	90 00 00 ad 	l.lbs r0,0xad(r0)
    4a8c:	ec 00 01 66 	.word 0xec000166
    4a90:	00 00 ae 50 	l.j 303d0 <__rom_size+0x16084>
    4a94:	00 00 ae 58 	l.j 303f4 <__rom_size+0x160a8>
    4a98:	00 01 66 00 	l.j 5e298 <__rom_size+0x43f4c>
    4a9c:	00 ae 5c 00 	l.j 2b9ba9c <__stack+0x271baa0>
    4aa0:	00 b2 e0 00 	l.j 2cbcaa0 <__stack+0x283caa4>
    4aa4:	01 66 00 00 	l.j 5984aa4 <__stack+0x5504aa8>
    4aa8:	b3 38 00 00 	l.muli r25,r24,0x0
    4aac:	b3 40 00 01 	l.muli r26,r0,0x1
    4ab0:	66 00 00 b3 	.word 0x660000b3
    4ab4:	44 00 00 b3 	l.jr r0
    4ab8:	a4 00 01 66 	l.andi r0,r0,0x166
    4abc:	00 00 b4 5c 	l.j 31c2c <__rom_size+0x178e0>
    4ac0:	00 00 b5 54 	l.j 32010 <__rom_size+0x17cc4>
    4ac4:	00 01 66 00 	l.j 5e2c4 <__rom_size+0x43f78>
    4ac8:	00 b5 f0 00 	l.j 2d80ac8 <__stack+0x2900acc>
    4acc:	00 b6 38 00 	l.j 2d92acc <__stack+0x2912ad0>
    4ad0:	01 66 00 00 	l.j 5984ad0 <__stack+0x5504ad4>
    4ad4:	b6 3c 00 00 	l.mfspr r17,r28,0x0
    4ad8:	b6 48 00 01 	l.mfspr r18,r8,0x1
    4adc:	66 00 00 b6 	.word 0x660000b6
    4ae0:	48 00 00 b6 	l.jalr r0
    4ae4:	58 00 01 66 	.word 0x58000166
    4ae8:	00 00 b6 58 	l.j 32448 <__rom_size+0x180fc>
    4aec:	00 00 b7 00 	l.j 326ec <__rom_size+0x183a0>
    4af0:	00 01 66 00 	l.j 5e2f0 <__rom_size+0x43fa4>
    4af4:	00 b7 78 00 	l.j 2de2af4 <__stack+0x2962af8>
    4af8:	00 b7 c0 00 	l.j 2df4af8 <__stack+0x2974afc>
    4afc:	01 66 00 00 	l.j 5984afc <__stack+0x5504b00>
    4b00:	b7 c4 00 00 	l.mfspr r30,r4,0x0
    4b04:	b7 d0 00 01 	l.mfspr r30,r16,0x1
    4b08:	66 00 00 b7 	.word 0x660000b7
    4b0c:	d0 00 00 b7 	l.sd 0xb7(r0),r0
    4b10:	e0 00 01 66 	.word 0xe0000166
    4b14:	00 00 b7 e0 	l.j 32a94 <__rom_size+0x18748>
    4b18:	00 00 b8 28 	l.j 32bb8 <__rom_size+0x1886c>
    4b1c:	00 01 66 00 	l.j 5e31c <__rom_size+0x43fd0>
    4b20:	00 b8 54 00 	l.j 2e19b20 <__stack+0x2999b24>
    4b24:	00 b9 18 00 	l.j 2e4ab24 <__stack+0x29cab28>
    4b28:	01 68 00 00 	l.j 5a04b28 <__stack+0x5584b2c>
    4b2c:	b9 8c 00 00 	l.slli r12,r12,0x0
    4b30:	b9 94 00 01 	l.slli r12,r20,0x1
    4b34:	68 00 00 b9 	.word 0x680000b9
    4b38:	98 00 00 bb 	l.lhs r0,0xbb(r0)
    4b3c:	38 00 01 68 	.word 0x38000168
    4b40:	00 00 bb 64 	l.j 338d0 <__rom_size+0x19584>
    4b44:	00 00 bc 28 	l.j 33be4 <__rom_size+0x19898>
    4b48:	00 01 68 00 	l.j 5eb48 <__rom_size+0x447fc>
    4b4c:	00 bc 70 00 	l.j 2f20b4c <__stack+0x2aa0b50>
    4b50:	00 bc d0 00 	l.j 2f38b50 <__stack+0x2ab8b54>
    4b54:	01 68 00 00 	l.j 5a04b54 <__stack+0x5584b58>
    4b58:	bc d4 00 00 	.word 0xbcd40000
    4b5c:	bc e0 00 01 	.word 0xbce00001
    4b60:	68 00 00 bc 	.word 0x680000bc
    4b64:	e0 00 00 be 	l.cmov r0,r0,r0
    4b68:	80 00 01 68 	l.ld r0,0x168(r0)
    4b6c:	00 00 be 80 	l.j 3456c <__rom_size+0x1a220>
    4b70:	00 00 be d8 	l.j 346d0 <__rom_size+0x1a384>
    4b74:	00 01 68 00 	l.j 5eb74 <__rom_size+0x44828>
	...
    4b80:	00 ac 94 00 	l.j 2b29b80 <__stack+0x26a9b84>
    4b84:	00 ad ec 00 	l.j 2b7fb84 <__stack+0x26ffb88>
    4b88:	01 62 00 00 	l.j 5884b88 <__stack+0x5404b8c>
    4b8c:	ae 3c 00 00 	l.xori r17,r28,0x0
    4b90:	ae 48 00 01 	l.xori r18,r8,0x1
    4b94:	62 00 00 ae 	.word 0x620000ae
    4b98:	48 00 00 ae 	l.jalr r0
    4b9c:	58 00 02 30 	.word 0x58000230
    4ba0:	9f 00 00 ae 	l.addi r24,r0,0xae
    4ba4:	5c 00 00 b2 	.word 0x5c0000b2
    4ba8:	e0 00 01 62 	.word 0xe0000162
    4bac:	00 00 b3 24 	l.j 3183c <__rom_size+0x174f0>
    4bb0:	00 00 b3 30 	l.j 31870 <__rom_size+0x17524>
    4bb4:	00 01 62 00 	l.j 5d3b4 <__rom_size+0x43068>
    4bb8:	00 b3 30 00 	l.j 2cd0bb8 <__stack+0x2850bbc>
    4bbc:	00 b3 40 00 	l.j 2cd4bbc <__stack+0x2854bc0>
    4bc0:	02 30 9f 00 	l.j f8c2c7c0 <__stack+0xf87ac7c4>
    4bc4:	00 b3 44 00 	l.j 2cd5bc4 <__stack+0x2855bc8>
    4bc8:	00 b3 a4 00 	l.j 2cedbc8 <__stack+0x286dbcc>
    4bcc:	01 62 00 00 	l.j 5884bcc <__stack+0x5404bd0>
    4bd0:	b4 5c 00 00 	l.mfspr r2,r28,0x0
    4bd4:	b5 54 00 01 	l.mfspr r10,r20,0x1
    4bd8:	62 00 00 b5 	.word 0x620000b5
    4bdc:	f0 00 00 b6 	l.cust5 r0,r0,r0,0x5,0x16
    4be0:	20 00 01 62 	l.sys 0x162
    4be4:	00 00 b6 28 	l.j 32484 <__rom_size+0x18138>
    4be8:	00 00 b6 34 	l.j 324b8 <__rom_size+0x1816c>
    4bec:	00 01 62 00 	l.j 5d3ec <__rom_size+0x430a0>
    4bf0:	00 b6 34 00 	l.j 2d91bf0 <__stack+0x2911bf4>
    4bf4:	00 b6 44 00 	l.j 2d95bf4 <__stack+0x2915bf8>
    4bf8:	02 30 9f 00 	l.j f8c2c7f8 <__stack+0xf87ac7fc>
    4bfc:	00 b6 44 00 	l.j 2d95bfc <__stack+0x2915c00>
    4c00:	00 b6 48 00 	l.j 2d96c00 <__stack+0x2916c04>
    4c04:	01 62 00 00 	l.j 5884c04 <__stack+0x5404c08>
    4c08:	b6 48 00 00 	l.mfspr r18,r8,0x0
    4c0c:	b6 58 00 01 	l.mfspr r18,r24,0x1
    4c10:	62 00 00 b6 	.word 0x620000b6
    4c14:	58 00 00 b7 	.word 0x580000b7
    4c18:	00 00 01 62 	l.j 51a0 <__rom_size-0x151ac>
    4c1c:	00 00 b7 78 	l.j 329fc <__rom_size+0x186b0>
    4c20:	00 00 b7 a8 	l.j 32ac0 <__rom_size+0x18774>
    4c24:	00 01 62 00 	l.j 5d424 <__rom_size+0x430d8>
    4c28:	00 b7 b0 00 	l.j 2df0c28 <__stack+0x2970c2c>
    4c2c:	00 b7 bc 00 	l.j 2df3c2c <__stack+0x2973c30>
    4c30:	01 62 00 00 	l.j 5884c30 <__stack+0x5404c34>
    4c34:	b7 bc 00 00 	l.mfspr r29,r28,0x0
    4c38:	b7 cc 00 02 	l.mfspr r30,r12,0x2
    4c3c:	30 9f 00 00 	.word 0x309f0000
    4c40:	b7 cc 00 00 	l.mfspr r30,r12,0x0
    4c44:	b7 d0 00 01 	l.mfspr r30,r16,0x1
    4c48:	62 00 00 b7 	.word 0x620000b7
    4c4c:	d0 00 00 b7 	l.sd 0xb7(r0),r0
    4c50:	e0 00 01 62 	.word 0xe0000162
    4c54:	00 00 b7 e0 	l.j 32bd4 <__rom_size+0x18888>
    4c58:	00 00 b8 28 	l.j 32cf8 <__rom_size+0x189ac>
    4c5c:	00 01 62 00 	l.j 5d45c <__rom_size+0x43110>
    4c60:	00 b8 54 00 	l.j 2e19c60 <__stack+0x2999c64>
    4c64:	00 b9 18 00 	l.j 2e4ac64 <__stack+0x29cac68>
    4c68:	01 60 00 00 	l.j 5804c68 <__stack+0x5384c6c>
    4c6c:	b9 78 00 00 	l.slli r11,r24,0x0
    4c70:	b9 84 00 01 	l.slli r12,r4,0x1
    4c74:	60 00 00 b9 	.word 0x600000b9
    4c78:	84 00 00 b9 	l.lwz r0,0xb9(r0)
    4c7c:	94 00 02 30 	l.lhz r0,0x230(r0)
    4c80:	9f 00 00 b9 	l.addi r24,r0,0xb9
    4c84:	98 00 00 bb 	l.lhs r0,0xbb(r0)
    4c88:	38 00 01 60 	.word 0x38000160
    4c8c:	00 00 bb 64 	l.j 33a1c <__rom_size+0x196d0>
    4c90:	00 00 bc 28 	l.j 33d30 <__rom_size+0x199e4>
    4c94:	00 01 60 00 	l.j 5cc94 <__rom_size+0x42948>
    4c98:	00 bc 70 00 	l.j 2f20c98 <__stack+0x2aa0c9c>
    4c9c:	00 bc b8 00 	l.j 2f32c9c <__stack+0x2ab2ca0>
    4ca0:	01 60 00 00 	l.j 5804ca0 <__stack+0x5384ca4>
    4ca4:	bc c0 00 00 	.word 0xbcc00000
    4ca8:	bc cc 00 01 	.word 0xbccc0001
    4cac:	60 00 00 bc 	.word 0x600000bc
    4cb0:	cc 00 00 bc 	.word 0xcc0000bc
    4cb4:	dc 00 02 30 	l.sh 0x230(r0),r0
    4cb8:	9f 00 00 bc 	l.addi r24,r0,0xbc
    4cbc:	dc 00 00 bc 	l.sh 0xbc(r0),r0
    4cc0:	e0 00 01 60 	.word 0xe0000160
    4cc4:	00 00 bc e0 	l.j 34044 <__rom_size+0x19cf8>
    4cc8:	00 00 be 80 	l.j 346c8 <__rom_size+0x1a37c>
    4ccc:	00 01 60 00 	l.j 5cccc <__rom_size+0x42980>
    4cd0:	00 be 80 00 	l.j 2fa4cd0 <__stack+0x2b24cd4>
    4cd4:	00 be d8 00 	l.j 2fbacd4 <__stack+0x2b3acd8>
    4cd8:	01 60 00 00 	l.j 5804cd8 <__stack+0x5384cdc>
	...
    4ce4:	a7 f4 00 00 	l.andi r31,r20,0x0
    4ce8:	ab dc 00 07 	l.ori r30,r28,0x7
    4cec:	80 00 40 1a 	l.ld r0,0x401a(r0)
    4cf0:	30 2e 9f 00 	.word 0x302e9f00
    4cf4:	00 ab e4 00 	l.j 2afdcf4 <__stack+0x267dcf8>
    4cf8:	00 ad f4 00 	l.j 2b81cf8 <__stack+0x2701cfc>
    4cfc:	07 80 00 40 	l.jal fe004dfc <__stack+0xfdb84e00>
    4d00:	1a 30 2e 9f 	l.movhi r17,0x2e9f
    4d04:	00 00 b2 74 	l.j 316d4 <__rom_size+0x17388>
    4d08:	00 00 b2 e8 	l.j 318a8 <__rom_size+0x1755c>
    4d0c:	00 07 80 00 	l.j 1e4d0c <__ram_length+0x164d0c>
    4d10:	40 1a 30 2e 	.word 0x401a302e
    4d14:	9f 00 00 b3 	l.addi r24,r0,0xb3
    4d18:	a4 00 00 b5 	l.andi r0,r0,0xb5
    4d1c:	5c 00 07 80 	.word 0x5c000780
    4d20:	00 40 1a 30 	l.j 100b5e0 <__stack+0xb8b5e4>
    4d24:	2e 9f 00 00 	.word 0x2e9f0000
    4d28:	b6 9c 00 00 	l.mfspr r20,r28,0x0
    4d2c:	b7 0c 00 07 	l.mfspr r24,r12,0x7
    4d30:	80 00 40 1a 	l.ld r0,0x401a(r0)
    4d34:	30 2e 9f 00 	.word 0x302e9f00
    4d38:	00 b8 28 00 	l.j 2e0ed38 <__stack+0x298ed3c>
    4d3c:	00 b8 34 00 	l.j 2e11d3c <__stack+0x2991d40>
    4d40:	07 80 00 40 	l.jal fe004e40 <__stack+0xfdb84e44>
    4d44:	1a 30 2e 9f 	l.movhi r17,0x2e9f
    4d48:	00 00 bb 38 	l.j 33a28 <__rom_size+0x196dc>
    4d4c:	00 00 bb 44 	l.j 33a5c <__rom_size+0x19710>
    4d50:	00 07 80 00 	l.j 1e4d50 <__ram_length+0x164d50>
    4d54:	40 1a 30 2e 	.word 0x401a302e
    4d58:	9f 00 00 be 	l.addi r24,r0,0xbe
    4d5c:	d8 00 00 bf 	l.sb 0xbf(r0),r0
    4d60:	48 00 07 80 	l.jalr r0
    4d64:	00 40 1a 30 	l.j 100b624 <__stack+0xb8b628>
    4d68:	2e 9f 00 00 	.word 0x2e9f0000
	...
    4d74:	ac 94 00 00 	l.xori r4,r20,0x0
    4d78:	ac a4 00 01 	l.xori r5,r4,0x1
    4d7c:	6e 00 00 ac 	.word 0x6e0000ac
    4d80:	a4 00 00 ad 	l.andi r0,r0,0xad
    4d84:	ec 00 01 6a 	.word 0xec00016a
    4d88:	00 00 b2 60 	l.j 31708 <__rom_size+0x173bc>
    4d8c:	00 00 b2 e0 	l.j 3190c <__rom_size+0x175c0>
    4d90:	00 01 6a 00 	l.j 5f590 <__rom_size+0x45244>
    4d94:	00 b3 90 00 	l.j 2ce8d94 <__stack+0x2868d98>
    4d98:	00 b3 a4 00 	l.j 2cedd98 <__stack+0x286dd9c>
    4d9c:	01 6a 00 00 	l.j 5a84d9c <__stack+0x5604da0>
    4da0:	b4 5c 00 00 	l.mfspr r2,r28,0x0
    4da4:	b4 68 00 01 	l.mfspr r3,r8,0x1
    4da8:	68 00 00 b4 	.word 0x680000b4
    4dac:	68 00 00 b5 	.word 0x680000b5
    4db0:	54 00 01 52 	.word 0x54000152
    4db4:	00 00 b5 f0 	l.j 32574 <__rom_size+0x18228>
    4db8:	00 00 b6 4c 	l.j 326e8 <__rom_size+0x1839c>
    4dbc:	00 01 6e 00 	l.j 605bc <__rom_size+0x46270>
    4dc0:	00 b6 54 00 	l.j 2d99dc0 <__stack+0x2919dc4>
    4dc4:	00 b6 58 00 	l.j 2d9adc4 <__stack+0x291adc8>
    4dc8:	01 6e 00 00 	l.j 5b84dc8 <__stack+0x5704dcc>
    4dcc:	b6 58 00 00 	l.mfspr r18,r24,0x0
    4dd0:	b6 88 00 01 	l.mfspr r20,r8,0x1
    4dd4:	6e 00 00 b6 	.word 0x6e0000b6
    4dd8:	88 00 00 b7 	l.lws r0,0xb7(r0)
    4ddc:	00 00 01 52 	l.j 5324 <__rom_size-0x15028>
    4de0:	00 00 b7 78 	l.j 32bc0 <__rom_size+0x18874>
    4de4:	00 00 b7 d4 	l.j 32d34 <__rom_size+0x189e8>
    4de8:	00 01 60 00 	l.j 5cde8 <__rom_size+0x42a9c>
    4dec:	00 b7 dc 00 	l.j 2dfbdec <__stack+0x297bdf0>
    4df0:	00 b7 e0 00 	l.j 2dfcdf0 <__stack+0x297cdf4>
    4df4:	01 60 00 00 	l.j 5804df4 <__stack+0x5384df8>
    4df8:	b7 e0 00 00 	l.mfspr r31,r0,0x0
    4dfc:	b8 14 00 01 	l.slli r0,r20,0x1
    4e00:	60 00 00 b8 	.word 0x600000b8
    4e04:	14 00 00 b8 	.word 0x140000b8
    4e08:	28 00 01 52 	.word 0x28000152
    4e0c:	00 00 b8 64 	l.j 32f9c <__rom_size+0x18c50>
    4e10:	00 00 b9 18 	l.j 33270 <__rom_size+0x18f24>
    4e14:	00 01 64 00 	l.j 5de14 <__rom_size+0x43ac8>
    4e18:	00 ba 40 00 	l.j 2e94e18 <__stack+0x2a14e1c>
    4e1c:	00 bb 38 00 	l.j 2ed2e1c <__stack+0x2a52e20>
    4e20:	01 64 00 00 	l.j 5904e20 <__stack+0x5484e24>
    4e24:	bb 74 00 00 	l.slli r27,r20,0x0
    4e28:	bc 28 00 01 	l.sfnei r8,0x1
    4e2c:	62 00 00 bc 	.word 0x620000bc
    4e30:	70 00 00 be 	l.cust1 
    4e34:	78 00 01 6c 	l.cust3 
    4e38:	00 00 be 80 	l.j 34838 <__rom_size+0x1a4ec>
    4e3c:	00 00 be d0 	l.j 3497c <__rom_size+0x1a630>
    4e40:	00 01 6c 00 	l.j 5fe40 <__rom_size+0x45af4>
    4e44:	00 be d0 00 	l.j 2fb8e44 <__stack+0x2b38e48>
    4e48:	00 be d8 00 	l.j 2fbae48 <__stack+0x2b3ae4c>
    4e4c:	01 62 00 00 	l.j 5884e4c <__stack+0x5404e50>
	...
    4e58:	b5 74 00 00 	l.mfspr r11,r20,0x0
    4e5c:	b5 a4 00 01 	l.mfspr r13,r4,0x1
    4e60:	52 00 00 b7 	.word 0x520000b7
    4e64:	24 00 00 b7 	l.rfe 
    4e68:	54 00 01 52 	.word 0x54000152
    4e6c:	00 00 bc 30 	l.j 33f2c <__rom_size+0x19be0>
    4e70:	00 00 bc 70 	l.j 34030 <__rom_size+0x19ce4>
    4e74:	00 01 62 00 	l.j 5d674 <__rom_size+0x43328>
    4e78:	00 bc 70 00 	l.j 2f20e78 <__stack+0x2aa0e7c>
    4e7c:	00 be 74 00 	l.j 2fa1e7c <__stack+0x2b21e80>
    4e80:	01 6a 00 00 	l.j 5a84e80 <__stack+0x5604e84>
    4e84:	be 7c 00 00 	.word 0xbe7c0000
    4e88:	be 80 00 01 	.word 0xbe800001
    4e8c:	6a 00 00 be 	.word 0x6a0000be
    4e90:	80 00 00 be 	l.ld r0,0xbe(r0)
    4e94:	d8 00 01 6a 	l.sb 0x16a(r0),r0
	...
    4ea0:	00 00 a8 48 	l.j 2efc0 <__rom_size+0x14c74>
    4ea4:	00 00 ab dc 	l.j 2fe14 <__rom_size+0x15ac8>
    4ea8:	00 07 80 00 	l.j 1e4ea8 <__ram_length+0x164ea8>
    4eac:	40 1a 30 2e 	.word 0x401a302e
    4eb0:	9f 00 00 00 	l.addi r24,r0,0x0
    4eb4:	00 00 00 00 	l.j 4eb4 <__rom_size-0x15498>
    4eb8:	00 00 00 a8 	l.j 5158 <__rom_size-0x151f4>
    4ebc:	48 00 00 ab 	l.jalr r0
    4ec0:	dc 00 04 91 	l.sh 0x491(r0),r0
    4ec4:	cc 7b 9f 00 	.word 0xcc7b9f00
	...
    4ed0:	00 a9 48 00 	l.j 2a56ed0 <__stack+0x25d6ed4>
    4ed4:	00 a9 6c 00 	l.j 2a5fed4 <__stack+0x25dfed8>
    4ed8:	04 91 82 7c 	l.jal 24658c8 <__stack+0x1fe58cc>
    4edc:	9f 00 00 a9 	l.addi r24,r0,0xa9
    4ee0:	6c 00 00 a9 	.word 0x6c0000a9
    4ee4:	80 00 04 91 	l.ld r0,0x491(r0)
    4ee8:	8a 7c 9f 00 	l.lws r19,0xffff9f00(r28)
    4eec:	00 a9 80 00 	l.j 2a64eec <__stack+0x25e4ef0>
    4ef0:	00 a9 94 00 	l.j 2a69ef0 <__stack+0x25e9ef4>
    4ef4:	04 91 82 7c 	l.jal 24658e4 <__stack+0x1fe58e8>
    4ef8:	9f 00 00 a9 	l.addi r24,r0,0xa9
    4efc:	94 00 00 a9 	l.lhz r0,0xa9(r0)
    4f00:	9c 00 04 91 	l.addi r0,r0,0x491
    4f04:	8a 7c 9f 00 	l.lws r19,0xffff9f00(r28)
    4f08:	00 a9 9c 00 	l.j 2a6bf08 <__stack+0x25ebf0c>
    4f0c:	00 a9 cc 00 	l.j 2a77f0c <__stack+0x25f7f10>
    4f10:	01 53 00 00 	l.j 54c4f10 <__stack+0x5044f14>
    4f14:	a9 cc 00 00 	l.ori r14,r12,0x0
    4f18:	a9 f4 00 04 	l.ori r15,r20,0x4
    4f1c:	91 8a 7c 9f 	l.lbs r12,0x7c9f(r10)
    4f20:	00 00 a9 f4 	l.j 2f6f0 <__rom_size+0x153a4>
    4f24:	00 00 aa 08 	l.j 2f744 <__rom_size+0x153f8>
    4f28:	00 01 53 00 	l.j 59b28 <__rom_size+0x3f7dc>
    4f2c:	00 aa 74 00 	l.j 2aa1f2c <__stack+0x2621f30>
    4f30:	00 aa 7c 00 	l.j 2aa3f30 <__stack+0x2623f34>
    4f34:	04 91 82 7c 	l.jal 2465924 <__stack+0x1fe5928>
    4f38:	9f 00 00 aa 	l.addi r24,r0,0xaa
    4f3c:	7c 00 00 aa 	l.cust4 
    4f40:	87 00 01 53 	l.lwz r24,0x153(r0)
    4f44:	00 00 aa 87 	l.j 2f960 <__rom_size+0x15614>
    4f48:	00 00 aa 88 	l.j 2f968 <__rom_size+0x1561c>
    4f4c:	00 04 91 82 	l.j 129554 <__ram_length+0xa9554>
    4f50:	7c 9f 00 00 	l.cust4 
    4f54:	aa 88 00 00 	l.ori r20,r8,0x0
    4f58:	aa 90 00 04 	l.ori r20,r16,0x4
    4f5c:	91 8a 7c 9f 	l.lbs r12,0x7c9f(r10)
    4f60:	00 00 aa 90 	l.j 2f9a0 <__rom_size+0x15654>
    4f64:	00 00 aa a4 	l.j 2f9f4 <__rom_size+0x156a8>
    4f68:	00 01 53 00 	l.j 59b68 <__rom_size+0x3f81c>
    4f6c:	00 aa b4 00 	l.j 2ab1f6c <__stack+0x2631f70>
    4f70:	00 aa c3 00 	l.j 2ab5b70 <__stack+0x2635b74>
    4f74:	01 53 00 00 	l.j 54c4f74 <__stack+0x5044f78>
    4f78:	aa c3 00 00 	l.ori r22,r3,0x0
    4f7c:	aa d8 00 04 	l.ori r22,r24,0x4
    4f80:	91 8a 7c 9f 	l.lbs r12,0x7c9f(r10)
	...
    4f8c:	00 00 a9 cc 	l.j 2f6bc <__rom_size+0x15370>
    4f90:	00 00 a9 d4 	l.j 2f6e0 <__rom_size+0x15394>
    4f94:	00 01 52 00 	l.j 59794 <__rom_size+0x3f448>
    4f98:	00 a9 d8 00 	l.j 2a7af98 <__stack+0x25faf9c>
    4f9c:	00 a9 f4 00 	l.j 2a81f9c <__stack+0x2601fa0>
    4fa0:	01 52 00 00 	l.j 5484fa0 <__stack+0x5004fa4>
	...
    4fac:	a8 84 00 00 	l.ori r4,r4,0x0
    4fb0:	a8 ab 00 01 	l.ori r5,r11,0x1
    4fb4:	5b 00 00 a8 	.word 0x5b0000a8
    4fb8:	ab 00 00 ab 	l.ori r24,r0,0xab
    4fbc:	28 00 01 62 	lv.packs.b r0,r0,r0
	...
    4fc8:	00 00 a8 84 	l.j 2f1d8 <__rom_size+0x14e8c>
    4fcc:	00 00 a8 8c 	l.j 2f1fc <__rom_size+0x14eb0>
    4fd0:	00 04 0a 02 	l.j 1077d8 <__ram_length+0x877d8>
    4fd4:	00 9f 00 00 	l.j 27c4fd4 <__stack+0x2344fd8>
	...
    4fe0:	a8 84 00 00 	l.ori r4,r4,0x0
    4fe4:	ab dc 00 02 	l.ori r30,r28,0x2
    4fe8:	30 9f 00 00 	.word 0x309f0000
	...
    4ff4:	a8 84 00 00 	l.ori r4,r4,0x0
    4ff8:	ab dc 00 04 	l.ori r30,r28,0x4
    4ffc:	91 cc 7b 9f 	l.lbs r14,0x7b9f(r12)
	...
    5008:	00 00 a8 84 	l.j 2f218 <__rom_size+0x14ecc>
    500c:	00 00 a8 8c 	l.j 2f23c <__rom_size+0x14ef0>
    5010:	00 04 91 cc 	l.j 129740 <__ram_length+0xa9740>
    5014:	7b 9f 00 00 	l.cust3 
    5018:	a8 8c 00 00 	l.ori r4,r12,0x0
    501c:	a8 94 00 01 	l.ori r4,r20,0x1
    5020:	52 00 00 a8 	.word 0x520000a8
    5024:	94 00 00 a8 	l.lhz r0,0xa8(r0)
    5028:	b8 00 01 52 	l.srli r0,r0,0x12
	...
    5034:	00 00 ad 18 	l.j 30494 <__rom_size+0x16148>
    5038:	00 00 ae 00 	l.j 30838 <__rom_size+0x164ec>
    503c:	00 01 64 00 	l.j 5e03c <__rom_size+0x43cf0>
    5040:	00 b2 58 00 	l.j 2c9b040 <__stack+0x281b044>
    5044:	00 b2 6c 00 	l.j 2ca0044 <__stack+0x2820048>
    5048:	03 84 01 9f 	l.j fe1056c4 <__stack+0xfdc856c8>
    504c:	00 00 b2 6c 	l.j 319fc <__rom_size+0x176b0>
    5050:	00 00 b2 74 	l.j 31a20 <__rom_size+0x176d4>
    5054:	00 01 64 00 	l.j 5e054 <__rom_size+0x43d08>
    5058:	00 b2 b0 00 	l.j 2cb1058 <__stack+0x283105c>
    505c:	00 b2 e8 00 	l.j 2cbf05c <__stack+0x283f060>
    5060:	01 52 00 00 	l.j 5485060 <__stack+0x5005064>
    5064:	b3 90 00 00 	l.muli r28,r16,0x0
    5068:	b3 9c 00 03 	l.muli r28,r28,0x3
    506c:	72 01 9f 00 	l.cust1 
    5070:	00 b3 9c 00 	l.j 2cec070 <__stack+0x286c074>
    5074:	00 b3 a4 00 	l.j 2cee074 <__stack+0x286e078>
    5078:	01 52 00 00 	l.j 5485078 <__stack+0x500507c>
	...
    5084:	ac e0 00 00 	l.xori r7,r0,0x0
    5088:	ad f4 00 07 	l.xori r15,r20,0x7
    508c:	80 00 40 1a 	l.ld r0,0x401a(r0)
    5090:	30 2e 9f 00 	.word 0x302e9f00
	...
    509c:	00 ac e0 00 	l.j 2b3d09c <__stack+0x26bd0a0>
    50a0:	00 ac e4 00 	l.j 2b3e0a0 <__stack+0x26be0a4>
    50a4:	01 64 00 00 	l.j 59050a4 <__stack+0x54850a8>
    50a8:	ac e4 00 00 	l.xori r7,r4,0x0
    50ac:	ae 00 00 01 	l.xori r16,r0,0x1
    50b0:	68 00 00 00 	.word 0x68000000
    50b4:	00 00 00 00 	l.j 50b4 <__rom_size-0x15298>
    50b8:	00 00 00 ac 	l.j 5368 <__rom_size-0x14fe4>
    50bc:	e0 00 00 ae 	l.cmov r0,r0,r0
    50c0:	00 00 01 62 	l.j 5648 <__rom_size-0x14d04>
	...
    50cc:	00 00 ac e0 	l.j 3044c <__rom_size+0x16100>
    50d0:	00 00 ae 00 	l.j 308d0 <__rom_size+0x16584>
    50d4:	00 01 66 00 	l.j 5e8d4 <__rom_size+0x44588>
	...
    50e0:	00 ae bc 00 	l.j 2bb40e0 <__stack+0x27340e4>
    50e4:	00 b1 c0 00 	l.j 2c750e4 <__stack+0x27f50e8>
    50e8:	01 64 00 00 	l.j 59050e8 <__stack+0x54850ec>
	...
    50f4:	ae bc 00 00 	l.xori r21,r28,0x0
    50f8:	b1 c0 00 01 	l.muli r14,r0,0x1
    50fc:	5e 00 00 00 	.word 0x5e000000
    5100:	00 00 00 00 	l.j 5100 <__rom_size-0x1524c>
    5104:	00 00 00 ae 	l.j 53bc <__rom_size-0x14f90>
    5108:	c8 00 00 ae 	.word 0xc80000ae
    510c:	d8 00 02 30 	l.sb 0x230(r0),r0
    5110:	9f 00 00 00 	l.addi r24,r0,0x0
    5114:	00 00 00 00 	l.j 5114 <__rom_size-0x15238>
    5118:	00 00 00 af 	l.j 53d4 <__rom_size-0x14f78>
    511c:	10 00 00 b0 	l.bf 53dc <__rom_size-0x14f70>
    5120:	0c 00 06 03 	l.bnf 692c <__rom_size-0x13a20>
    5124:	00 41 a4 dc 	l.j 106e494 <__stack+0xbee498>
    5128:	9f 00 00 00 	l.addi r24,r0,0x0
    512c:	00 00 00 00 	l.j 512c <__rom_size-0x15220>
    5130:	00 00 00 b0 	l.j 53f0 <__rom_size-0x14f5c>
    5134:	0c 00 00 b0 	l.bnf 53f4 <__rom_size-0x14f58>
    5138:	e0 00 06 03 	.word 0xe0000603
    513c:	00 41 a4 dc 	l.j 106e4ac <__stack+0xbee4b0>
    5140:	9f 00 00 00 	l.addi r24,r0,0x0
    5144:	00 00 00 00 	l.j 5144 <__rom_size-0x15208>
    5148:	00 00 00 b2 	l.j 5410 <__rom_size-0x14f3c>
    514c:	80 00 00 b2 	l.ld r0,0xb2(r0)
    5150:	e8 00 07 80 	.word 0xe8000780
    5154:	00 40 1a 30 	l.j 100ba14 <__stack+0xb8ba18>
    5158:	2e 9f 00 00 	.word 0x2e9f0000
	...
    5164:	b2 80 00 00 	l.muli r20,r0,0x0
    5168:	b2 e8 00 01 	l.muli r23,r8,0x1
    516c:	62 00 00 00 	.word 0x62000000
    5170:	00 00 00 00 	l.j 5170 <__rom_size-0x151dc>
    5174:	00 00 00 b2 	l.j 543c <__rom_size-0x14f10>
    5178:	80 00 00 b2 	l.ld r0,0xb2(r0)
    517c:	e8 00 01 66 	.word 0xe8000166
	...
    5188:	00 00 b4 dc 	l.j 324f8 <__rom_size+0x181ac>
    518c:	00 00 b5 44 	l.j 3269c <__rom_size+0x18350>
    5190:	00 01 6a 00 	l.j 5f990 <__rom_size+0x45644>
	...
    519c:	00 b4 a4 00 	l.j 2d2e19c <__stack+0x28ae1a0>
    51a0:	00 b5 5c 00 	l.j 2d5c1a0 <__stack+0x28dc1a4>
    51a4:	07 80 00 40 	l.jal fe0052a4 <__stack+0xfdb852a8>
    51a8:	1a 30 2e 9f 	l.movhi r17,0x2e9f
	...
    51b4:	00 00 b4 a4 	l.j 32444 <__rom_size+0x180f8>
    51b8:	00 00 b4 a8 	l.j 32458 <__rom_size+0x1810c>
    51bc:	00 01 6a 00 	l.j 5f9bc <__rom_size+0x45670>
    51c0:	00 b4 a8 00 	l.j 2d2f1c0 <__stack+0x28af1c4>
    51c4:	00 b5 5c 00 	l.j 2d5c1c4 <__stack+0x28dc1c8>
    51c8:	01 64 00 00 	l.j 59051c8 <__stack+0x54851cc>
	...
    51d4:	b4 a4 00 00 	l.mfspr r5,r4,0x0
    51d8:	b5 5c 00 01 	l.mfspr r10,r28,0x1
    51dc:	62 00 00 00 	.word 0x62000000
    51e0:	00 00 00 00 	l.j 51e0 <__rom_size-0x1516c>
    51e4:	00 00 00 b4 	l.j 54b4 <__rom_size-0x14e98>
    51e8:	a4 00 00 b5 	l.andi r0,r0,0xb5
    51ec:	5c 00 01 66 	.word 0x5c000166
	...
    51f8:	00 00 b6 d0 	l.j 32d38 <__rom_size+0x189ec>
    51fc:	00 00 b7 0c 	l.j 32e2c <__rom_size+0x18ae0>
    5200:	00 01 6a 00 	l.j 5fa00 <__rom_size+0x456b4>
	...
    520c:	00 b6 9c 00 	l.j 2dac20c <__stack+0x292c210>
    5210:	00 b7 0c 00 	l.j 2dc8210 <__stack+0x2948214>
    5214:	07 80 00 40 	l.jal fe005314 <__stack+0xfdb85318>
    5218:	1a 30 2e 9f 	l.movhi r17,0x2e9f
	...
    5224:	00 00 b6 9c 	l.j 32c94 <__rom_size+0x18948>
    5228:	00 00 b6 b4 	l.j 32cf8 <__rom_size+0x189ac>
    522c:	00 01 6a 00 	l.j 5fa2c <__rom_size+0x456e0>
    5230:	00 b6 dc 00 	l.j 2dbc230 <__stack+0x293c234>
    5234:	00 b7 0c 00 	l.j 2dc8234 <__stack+0x2948238>
    5238:	01 64 00 00 	l.j 5905238 <__stack+0x548523c>
	...
    5244:	b6 9c 00 00 	l.mfspr r20,r28,0x0
    5248:	b7 0c 00 01 	l.mfspr r24,r12,0x1
    524c:	62 00 00 00 	.word 0x62000000
    5250:	00 00 00 00 	l.j 5250 <__rom_size-0x150fc>
    5254:	00 00 00 b6 	l.j 552c <__rom_size-0x14e20>
    5258:	9c 00 00 b7 	l.addi r0,r0,0xb7
    525c:	0c 00 01 66 	l.bnf 57f4 <__rom_size-0x14b58>
	...
    5268:	00 00 b8 a8 	l.j 33508 <__rom_size+0x191bc>
    526c:	00 00 b8 f8 	l.j 3364c <__rom_size+0x19300>
    5270:	00 01 62 00 	l.j 5da70 <__rom_size+0x43724>
    5274:	00 b8 f8 00 	l.j 2e43274 <__stack+0x29c3278>
    5278:	00 bb 24 00 	l.j 2ece278 <__stack+0x2a4e27c>
    527c:	01 62 00 00 	l.j 588527c <__stack+0x5405280>
    5280:	bb 24 00 00 	l.slli r25,r4,0x0
    5284:	bb 38 00 01 	l.slli r25,r24,0x1
    5288:	62 00 00 00 	.word 0x62000000
    528c:	00 00 00 00 	l.j 528c <__rom_size-0x150c0>
    5290:	00 00 00 b8 	l.j 5570 <__rom_size-0x14ddc>
    5294:	64 00 00 b8 	.word 0x640000b8
    5298:	6c 00 01 62 	.word 0x6c000162
    529c:	00 00 b8 6c 	l.j 3344c <__rom_size+0x19100>
    52a0:	00 00 b9 28 	l.j 33740 <__rom_size+0x193f4>
    52a4:	00 01 66 00 	l.j 5eaa4 <__rom_size+0x44758>
	...
    52b0:	00 b8 64 00 	l.j 2e1e2b0 <__stack+0x299e2b4>
    52b4:	00 b9 28 00 	l.j 2e4f2b4 <__stack+0x29cf2b8>
    52b8:	01 60 00 00 	l.j 58052b8 <__stack+0x53852bc>
	...
    52c4:	b8 64 00 00 	l.slli r3,r4,0x0
    52c8:	b9 28 00 01 	l.slli r9,r8,0x1
    52cc:	68 00 00 00 	.word 0x68000000
    52d0:	00 00 00 00 	l.j 52d0 <__rom_size-0x1507c>
    52d4:	00 00 00 bb 	l.j 55c0 <__rom_size-0x14d8c>
    52d8:	b8 00 00 bc 	l.srai r0,r0,0x3c
    52dc:	08 00 01 64 	.word 0x08000164
    52e0:	00 00 bc 08 	l.j 34300 <__rom_size+0x19fb4>
    52e4:	00 00 be 70 	l.j 34ca4 <__rom_size+0x1a958>
    52e8:	00 01 64 00 	l.j 5e2e8 <__rom_size+0x43f9c>
    52ec:	00 be 70 00 	l.j 2fa12ec <__stack+0x2b212f0>
    52f0:	00 be d8 00 	l.j 2fbb2f0 <__stack+0x2b3b2f4>
    52f4:	01 64 00 00 	l.j 59052f4 <__stack+0x54852f8>
	...
    5300:	bb 74 00 00 	l.slli r27,r20,0x0
    5304:	bb 8c 00 01 	l.slli r28,r12,0x1
    5308:	64 00 00 bb 	.word 0x640000bb
    530c:	c4 00 00 bc 	.word 0xc40000bc
    5310:	30 00 01 66 	.word 0x30000166
	...
    531c:	00 00 bb 74 	l.j 340ec <__rom_size+0x19da0>
    5320:	00 00 bc 30 	l.j 343e0 <__rom_size+0x1a094>
    5324:	00 01 60 00 	l.j 5d324 <__rom_size+0x42fd8>
	...
    5330:	00 bb 74 00 	l.j 2ee2330 <__stack+0x2a62334>
    5334:	00 bc 30 00 	l.j 2f11334 <__stack+0x2a91338>
    5338:	01 68 00 00 	l.j 5a05338 <__stack+0x558533c>
	...
    5344:	bf 84 00 00 	.word 0xbf840000
    5348:	bf b0 00 02 	.word 0xbfb00002
    534c:	71 00 00 00 	l.cust1 
    5350:	bf b0 00 00 	.word 0xbfb00000
    5354:	c1 10 00 02 	l.mtspr r16,r0,0x4002
    5358:	71 0c 00 00 	l.cust1 
	...
    5364:	bf e0 00 00 	.word 0xbfe00000
    5368:	c0 98 00 01 	l.mtspr r24,r0,0x2001
    536c:	52 00 00 c0 	.word 0x520000c0
    5370:	98 00 00 c0 	l.lhs r0,0xc0(r0)
    5374:	9f 00 01 53 	l.addi r24,r0,0x153
	...
    5380:	00 00 bf ec 	l.j 35330 <__rom_size+0x1afe4>
    5384:	00 00 c1 08 	l.j 357a4 <__rom_size+0x1b458>
    5388:	00 01 5e 00 	l.j 5cb88 <__rom_size+0x4283c>
	...
    5394:	00 c0 1c 00 	l.j 300c394 <__stack+0x2b8c398>
    5398:	00 c1 08 00 	l.j 3047398 <__stack+0x2bc739c>
    539c:	01 5e 00 00 	l.j 578539c <__stack+0x53053a0>
	...
    53a8:	c0 1c 00 00 	l.mtspr r28,r0,0x0
    53ac:	c0 98 00 01 	l.mtspr r24,r0,0x2001
    53b0:	52 00 00 c0 	.word 0x520000c0
    53b4:	98 00 00 c0 	l.lhs r0,0xc0(r0)
    53b8:	9f 00 01 53 	l.addi r24,r0,0x153
	...
    53c4:	00 00 c1 10 	l.j 35804 <__rom_size+0x1b4b8>
    53c8:	00 00 c1 20 	l.j 35848 <__rom_size+0x1b4fc>
    53cc:	00 02 71 00 	l.j a17cc <__ram_length+0x217cc>
    53d0:	00 00 c1 20 	l.j 35850 <__rom_size+0x1b504>
    53d4:	00 00 c1 9c 	l.j 35a44 <__rom_size+0x1b6f8>
    53d8:	00 02 71 04 	l.j a17e8 <__ram_length+0x217e8>
	...
    53e4:	00 00 c1 10 	l.j 35824 <__rom_size+0x1b4d8>
    53e8:	00 00 c1 90 	l.j 35a28 <__rom_size+0x1b6dc>
    53ec:	00 02 30 9f 	l.j 91668 <__ram_length+0x11668>
    53f0:	00 00 c1 90 	l.j 35a30 <__rom_size+0x1b6e4>
    53f4:	00 00 c1 9c 	l.j 35a64 <__rom_size+0x1b718>
    53f8:	00 01 5b 00 	l.j 5bff8 <__rom_size+0x41cac>
	...
    5404:	00 c1 9c 00 	l.j 306c404 <__stack+0x2bec408>
    5408:	00 c1 b0 00 	l.j 3071408 <__stack+0x2bf140c>
    540c:	02 71 00 00 	l.j f9c4540c <__stack+0xf97c5410>
    5410:	00 c1 b0 00 	l.j 3071410 <__stack+0x2bf1414>
    5414:	00 c2 28 00 	l.j 308f414 <__stack+0x2c0f418>
    5418:	02 71 08 00 	l.j f9c47418 <__stack+0xf97c741c>
	...
    5424:	00 c1 9c 00 	l.j 306c424 <__stack+0x2bec428>
    5428:	00 c2 13 00 	l.j 308a028 <__stack+0x2c0a02c>
    542c:	01 53 00 00 	l.j 54c542c <__stack+0x5045430>
	...
    5438:	c1 9c 00 00 	l.mtspr r28,r0,0x6000
    543c:	c2 0c 00 02 	l.mtspr r12,r0,0x8002
    5440:	30 9f 00 00 	.word 0x309f0000
    5444:	c2 0c 00 00 	l.mtspr r12,r0,0x8000
    5448:	c2 20 00 01 	l.mtspr r0,r0,0x8801
    544c:	52 00 00 c2 	.word 0x520000c2
    5450:	20 00 00 c2 	l.sys 0xc2
    5454:	28 00 01 5b 	lv.msubs.h r0,r0,r0
	...
    5460:	00 00 c2 28 	l.j 35d00 <__rom_size+0x1b9b4>
    5464:	00 00 c2 38 	l.j 35d44 <__rom_size+0x1b9f8>
    5468:	00 02 71 00 	l.j a1868 <__ram_length+0x21868>
    546c:	00 00 c2 38 	l.j 35d4c <__rom_size+0x1ba00>
    5470:	00 00 c2 68 	l.j 35e10 <__rom_size+0x1bac4>
    5474:	00 02 71 08 	l.j a1894 <__ram_length+0x21894>
	...
    5480:	00 00 c2 28 	l.j 35d20 <__rom_size+0x1b9d4>
    5484:	00 00 c2 40 	l.j 35d84 <__rom_size+0x1ba38>
    5488:	00 01 53 00 	l.j 5a088 <__rom_size+0x3fd3c>
	...
    5494:	00 c2 40 00 	l.j 3095494 <__stack+0x2c15498>
    5498:	00 c2 48 00 	l.j 3097498 <__stack+0x2c1749c>
    549c:	01 52 00 00 	l.j 548549c <__stack+0x50054a0>
    54a0:	c2 48 00 00 	l.mtspr r8,r0,0x9000
    54a4:	c2 60 00 01 	l.mtspr r0,r0,0x9801
    54a8:	52 00 00 00 	.word 0x52000000
    54ac:	00 00 00 00 	l.j 54ac <__rom_size-0x14ea0>
    54b0:	00 00 00 c2 	l.j 57b8 <__rom_size-0x14b94>
    54b4:	28 00 00 c2 	lv.cust1 
    54b8:	40 00 02 30 	.word 0x40000230
    54bc:	9f 00 00 c2 	l.addi r24,r0,0xc2
    54c0:	40 00 00 c2 	.word 0x400000c2
    54c4:	47 00 01 5b 	l.jr r0
    54c8:	00 00 c2 48 	l.j 35de8 <__rom_size+0x1ba9c>
    54cc:	00 00 c2 68 	l.j 35e6c <__rom_size+0x1bb20>
    54d0:	00 01 5b 00 	l.j 5c0d0 <__rom_size+0x41d84>
	...
    54dc:	00 c2 68 00 	l.j 309f4dc <__stack+0x2c1f4e0>
    54e0:	00 c2 88 00 	l.j 30a74e0 <__stack+0x2c274e4>
    54e4:	02 71 00 00 	l.j f9c454e4 <__stack+0xf97c54e8>
    54e8:	00 c2 88 00 	l.j 30a74e8 <__stack+0x2c274ec>
    54ec:	00 c2 a8 00 	l.j 30af4ec <__stack+0x2c2f4f0>
    54f0:	02 71 08 00 	l.j f9c474f0 <__stack+0xf97c74f4>
	...
    54fc:	00 c2 a8 00 	l.j 30af4fc <__stack+0x2c2f500>
    5500:	00 c2 c0 00 	l.j 30b5500 <__stack+0x2c35504>
    5504:	02 71 00 00 	l.j f9c45504 <__stack+0xf97c5508>
    5508:	00 c2 c0 00 	l.j 30b5508 <__stack+0x2c3550c>
    550c:	00 cb c4 00 	l.j 32f650c <__stack+0x2e76510>
    5510:	02 71 24 00 	l.j f9c4e510 <__stack+0xf97ce514>
	...
    551c:	00 c2 a8 00 	l.j 30af51c <__stack+0x2c2f520>
    5520:	00 c3 88 00 	l.j 30e7520 <__stack+0x2c67524>
    5524:	02 30 9f 00 	l.j f8c2d124 <__stack+0xf87ad128>
    5528:	00 c3 dc 00 	l.j 30fc528 <__stack+0x2c7c52c>
    552c:	00 c4 18 00 	l.j 310b52c <__stack+0x2c8b530>
    5530:	02 30 9f 00 	l.j f8c2d130 <__stack+0xf87ad134>
    5534:	00 c4 2c 00 	l.j 3110534 <__stack+0x2c90538>
    5538:	00 c4 60 00 	l.j 311d538 <__stack+0x2c9d53c>
    553c:	02 30 9f 00 	l.j f8c2d13c <__stack+0xf87ad140>
    5540:	00 c9 ec 00 	l.j 3280540 <__stack+0x2e00544>
    5544:	00 cb ac 00 	l.j 32f0544 <__stack+0x2e70548>
    5548:	02 30 9f 00 	l.j f8c2d148 <__stack+0xf87ad14c>
	...
    5554:	00 ca 18 00 	l.j 328b554 <__stack+0x2e0b558>
    5558:	00 ca 48 00 	l.j 3297558 <__stack+0x2e1755c>
    555c:	01 52 00 00 	l.j 548555c <__stack+0x5005560>
    5560:	ca 60 00 00 	lf.add.s r19,r0,r0
    5564:	ca 68 00 01 	lf.sub.s r19,r8,r0
    5568:	52 00 00 ca 	.word 0x520000ca
    556c:	84 00 00 ca 	l.lwz r0,0xca(r0)
    5570:	8c 00 01 52 	l.lbz r0,0x152(r0)
    5574:	00 00 ca a8 	l.j 38014 <__rom_size+0x1dcc8>
    5578:	00 00 ca c4 	l.j 38088 <__rom_size+0x1dd3c>
    557c:	00 01 52 00 	l.j 59d7c <__rom_size+0x3fa30>
    5580:	00 ca e4 00 	l.j 32be580 <__stack+0x2e3e584>
    5584:	00 ca fc 00 	l.j 32c4584 <__stack+0x2e44588>
    5588:	01 52 00 00 	l.j 5485588 <__stack+0x500558c>
	...
    5594:	c2 fc 00 00 	l.mtspr r28,r0,0xb800
    5598:	c3 28 00 01 	l.mtspr r8,r0,0xc801
    559c:	52 00 00 c3 	.word 0x520000c3
    55a0:	28 00 00 c3 	lv.cust1 
    55a4:	2f 00 01 53 	.word 0x2f000153
    55a8:	00 00 c3 dc 	l.j 36518 <__rom_size+0x1c1cc>
    55ac:	00 00 c4 0c 	l.j 365dc <__rom_size+0x1c290>
    55b0:	00 01 52 00 	l.j 59db0 <__rom_size+0x3fa64>
    55b4:	00 c4 2c 00 	l.j 31105b4 <__stack+0x2c905b8>
    55b8:	00 c4 60 00 	l.j 311d5b8 <__stack+0x2c9d5bc>
    55bc:	01 52 00 00 	l.j 54855bc <__stack+0x50055c0>
	...
    55c8:	c2 d8 00 00 	l.mtspr r24,r0,0xb000
    55cc:	c3 88 00 02 	l.mtspr r8,r0,0xe002
    55d0:	30 9f 00 00 	.word 0x309f0000
    55d4:	c3 88 00 00 	l.mtspr r8,r0,0xe000
    55d8:	c3 dc 00 02 	l.mtspr r28,r0,0xf002
    55dc:	31 9f 00 00 	.word 0x319f0000
    55e0:	c3 dc 00 00 	l.mtspr r28,r0,0xf000
    55e4:	c4 18 00 02 	l.msb r24,r0
    55e8:	30 9f 00 00 	.word 0x309f0000
    55ec:	c4 2c 00 00 	.word 0xc42c0000
    55f0:	c4 60 00 02 	l.msb r0,r0
    55f4:	30 9f 00 00 	.word 0x309f0000
    55f8:	c4 60 00 00 	.word 0xc4600000
    55fc:	c9 ec 00 02 	lf.mul.s r15,r12,r0
    5600:	31 9f 00 00 	.word 0x319f0000
	...
    560c:	c6 2c 00 00 	.word 0xc62c0000
    5610:	c6 43 00 01 	l.mac r3,r0
    5614:	5b 00 00 c6 	.word 0x5b0000c6
    5618:	43 00 00 c6 	.word 0x430000c6
    561c:	5c 00 01 52 	.word 0x5c000152
    5620:	00 00 c6 5c 	l.j 36f90 <__rom_size+0x1cc44>
    5624:	00 00 c6 6f 	l.j 36fe0 <__rom_size+0x1cc94>
    5628:	00 01 5b 00 	l.j 5c228 <__rom_size+0x41edc>
    562c:	00 c6 94 00 	l.j 31aa62c <__stack+0x2d2a630>
    5630:	00 c6 a7 00 	l.j 31af230 <__stack+0x2d2f234>
    5634:	01 5b 00 00 	l.j 56c5634 <__stack+0x5245638>
    5638:	c7 0c 00 00 	.word 0xc70c0000
    563c:	c7 23 00 01 	l.mac r3,r0
    5640:	5b 00 00 c7 	.word 0x5b0000c7
    5644:	23 00 00 c7 	.word 0x230000c7
    5648:	3c 00 01 52 	.word 0x3c000152
    564c:	00 00 c7 3c 	l.j 3733c <__rom_size+0x1cff0>
    5650:	00 00 c7 4f 	l.j 3738c <__rom_size+0x1d040>
    5654:	00 01 5b 00 	l.j 5c254 <__rom_size+0x41f08>
    5658:	00 c9 bc 00 	l.j 3274658 <__stack+0x2df465c>
    565c:	00 c9 c8 00 	l.j 327765c <__stack+0x2df7660>
    5660:	01 5b 00 00 	l.j 56c5660 <__stack+0x5245664>
    5664:	c9 d8 00 00 	lf.add.s r14,r24,r0
    5668:	c9 df 00 01 	lf.sub.s r14,r31,r0
    566c:	5b 00 00 00 	.word 0x5b000000
    5670:	00 00 00 00 	l.j 5670 <__rom_size-0x14cdc>
    5674:	00 00 00 c6 	l.j 598c <__rom_size-0x149c0>
    5678:	44 00 00 c6 	l.jr r0
    567c:	84 00 02 91 	l.lwz r0,0x291(r0)
    5680:	6c 00 00 c6 	.word 0x6c0000c6
    5684:	ac 00 00 c6 	l.xori r0,r0,0xc6
    5688:	f4 00 02 91 	l.cust6 
    568c:	6c 00 00 c7 	.word 0x6c0000c7
    5690:	24 00 00 c9 	l.rfe 
    5694:	98 00 02 91 	l.lhs r0,0x291(r0)
    5698:	6c 00 00 c9 	.word 0x6c0000c9
    569c:	c8 00 00 c9 	.word 0xc80000c9
    56a0:	d8 00 02 91 	l.sb 0x291(r0),r0
    56a4:	6c 00 00 c9 	.word 0x6c0000c9
    56a8:	e0 00 00 c9 	.word 0xe00000c9
    56ac:	ec 00 02 91 	.word 0xec000291
    56b0:	6c 00 00 cb 	.word 0x6c0000cb
    56b4:	ac 00 00 cb 	l.xori r0,r0,0xcb
    56b8:	c4 00 02 91 	l.mac r0,r0
    56bc:	6c 00 00 00 	.word 0x6c000000
    56c0:	00 00 00 00 	l.j 56c0 <__rom_size-0x14c8c>
    56c4:	00 00 00 c6 	l.j 59dc <__rom_size-0x14970>
    56c8:	70 00 00 c6 	l.cust1 
    56cc:	84 00 02 91 	l.lwz r0,0x291(r0)
    56d0:	68 00 00 c6 	.word 0x680000c6
    56d4:	cc 00 00 c6 	.word 0xcc0000c6
    56d8:	f4 00 02 91 	l.cust6 
    56dc:	68 00 00 c9 	.word 0x680000c9
    56e0:	8c 00 00 c9 	l.lbz r0,0xc9(r0)
    56e4:	98 00 02 91 	l.lhs r0,0x291(r0)
    56e8:	68 00 00 c9 	.word 0x680000c9
    56ec:	e0 00 00 c9 	.word 0xe00000c9
    56f0:	ec 00 02 91 	.word 0xec000291
    56f4:	68 00 00 cb 	.word 0x680000cb
    56f8:	ac 00 00 cb 	l.xori r0,r0,0xcb
    56fc:	c4 00 02 91 	l.mac r0,r0
    5700:	68 00 00 00 	.word 0x68000000
    5704:	00 00 00 00 	l.j 5704 <__rom_size-0x14c48>
    5708:	00 00 00 c7 	l.j 5a24 <__rom_size-0x14928>
    570c:	90 00 00 c7 	l.lbs r0,0xc7(r0)
    5710:	ac 00 02 91 	l.xori r0,r0,0x291
    5714:	6c 00 00 c7 	.word 0x6c0000c7
    5718:	ac 00 00 c7 	l.xori r0,r0,0xc7
    571c:	b0 00 01 5c 	l.muli r0,r0,0x15c
    5720:	00 00 c7 bc 	l.j 37610 <__rom_size+0x1d2c4>
    5724:	00 00 c7 c4 	l.j 37634 <__rom_size+0x1d2e8>
    5728:	00 01 5c 00 	l.j 5c728 <__rom_size+0x423dc>
	...
    5734:	00 cb c4 00 	l.j 32f6734 <__stack+0x2e76738>
    5738:	00 cb d8 00 	l.j 32fb738 <__stack+0x2e7b73c>
    573c:	02 71 00 00 	l.j f9c4573c <__stack+0xf97c5740>
    5740:	00 cb d8 00 	l.j 32fb740 <__stack+0x2e7b744>
    5744:	00 cc 04 00 	l.j 3306744 <__stack+0x2e86748>
    5748:	02 71 04 00 	l.j f9c46748 <__stack+0xf97c674c>
	...
    5754:	00 cb c4 00 	l.j 32f6754 <__stack+0x2e76758>
    5758:	00 cb cc 00 	l.j 32f8758 <__stack+0x2e7875c>
    575c:	01 53 00 00 	l.j 54c575c <__stack+0x5045760>
    5760:	cb cc 00 00 	lf.add.s r30,r12,r0
    5764:	cb ef 00 01 	lf.sub.s r31,r15,r0
    5768:	54 00 00 00 	.word 0x54000000
    576c:	00 00 00 00 	l.j 576c <__rom_size-0x14be0>
    5770:	00 00 00 cb 	l.j 5a9c <__rom_size-0x148b0>
    5774:	c4 00 00 cb 	.word 0xc40000cb
    5778:	d8 00 06 03 	l.sb 0x603(r0),r0
    577c:	00 41 cd 18 	l.j 1078bdc <__stack+0xbf8be0>
    5780:	9f 00 00 cb 	l.addi r24,r0,0xcb
    5784:	d8 00 00 cb 	l.sb 0xcb(r0),r0
    5788:	ef 00 01 53 	.word 0xef000153
	...
    5794:	00 00 cc 04 	l.j 387a4 <__rom_size+0x1e458>
    5798:	00 00 cc 14 	l.j 387e8 <__rom_size+0x1e49c>
    579c:	00 02 71 00 	l.j a1b9c <__ram_length+0x21b9c>
    57a0:	00 00 cc 14 	l.j 387f0 <__rom_size+0x1e4a4>
    57a4:	00 00 cc 70 	l.j 38964 <__rom_size+0x1e618>
    57a8:	00 02 71 04 	l.j a1bb8 <__ram_length+0x21bb8>
	...
    57b4:	00 00 cc 04 	l.j 387c4 <__rom_size+0x1e478>
    57b8:	00 00 cc 30 	l.j 38878 <__rom_size+0x1e52c>
    57bc:	00 01 54 00 	l.j 5a7bc <__rom_size+0x40470>
	...
    57c8:	00 cc 30 00 	l.j 33117c8 <__stack+0x2e917cc>
    57cc:	00 cc 3c 00 	l.j 33147cc <__stack+0x2e947d0>
    57d0:	01 55 00 00 	l.j 55457d0 <__stack+0x50c57d4>
    57d4:	cc 3c 00 00 	.word 0xcc3c0000
    57d8:	cc 4c 00 03 	.word 0xcc4c0003
    57dc:	75 01 9f 00 	l.cust2 
    57e0:	00 cc 4c 00 	l.j 33187e0 <__stack+0x2e987e4>
    57e4:	00 cc 5c 00 	l.j 331c7e4 <__stack+0x2e9c7e8>
    57e8:	01 55 00 00 	l.j 55457e8 <__stack+0x50c57ec>
	...
    57f4:	cc 3c 00 00 	.word 0xcc3c0000
    57f8:	cc 4c 00 01 	.word 0xcc4c0001
    57fc:	57 00 00 00 	.word 0x57000000
    5800:	00 00 00 00 	l.j 5800 <__rom_size-0x14b4c>
    5804:	00 00 00 cc 	l.j 5b34 <__rom_size-0x14818>
    5808:	14 00 00 cc 	.word 0x140000cc
    580c:	30 00 01 55 	.word 0x30000155
	...
    5818:	00 00 cc 70 	l.j 389d8 <__rom_size+0x1e68c>
    581c:	00 00 cc 98 	l.j 38a7c <__rom_size+0x1e730>
    5820:	00 02 71 00 	l.j a1c20 <__ram_length+0x21c20>
    5824:	00 00 cc 98 	l.j 38a84 <__rom_size+0x1e738>
    5828:	00 00 ce 8c 	l.j 39258 <__rom_size+0x1ef0c>
    582c:	00 02 71 04 	l.j a1c3c <__ram_length+0x21c3c>
	...
    5838:	00 00 cc c4 	l.j 38b48 <__rom_size+0x1e7fc>
    583c:	00 00 cc c8 	l.j 38b5c <__rom_size+0x1e810>
    5840:	00 02 30 9f 	l.j 91abc <__ram_length+0x11abc>
    5844:	00 00 cc d0 	l.j 38b84 <__rom_size+0x1e838>
    5848:	00 00 cd b8 	l.j 38f28 <__rom_size+0x1ebdc>
    584c:	00 01 55 00 	l.j 5ac4c <__rom_size+0x40900>
	...
    5858:	00 cc 70 00 	l.j 3321858 <__stack+0x2ea185c>
    585c:	00 cc a8 00 	l.j 332f85c <__stack+0x2eaf860>
    5860:	06 0c 00 08 	l.jal f8305880 <__stack+0xf7e85884>
    5864:	00 00 9f 00 	l.j 2d464 <__rom_size+0x13118>
    5868:	00 cc a8 00 	l.j 332f868 <__stack+0x2eaf86c>
    586c:	00 cc b0 00 	l.j 333186c <__stack+0x2eb1870>
    5870:	04 0a 08 00 	l.jal 287870 <__ram_length+0x207870>
    5874:	9f 00 00 cc 	l.addi r24,r0,0xcc
    5878:	b0 00 00 cc 	l.muli r0,r0,0xcc
    587c:	bc 00 02 38 	l.sfeqi r0,0x238
    5880:	9f 00 00 cc 	l.addi r24,r0,0xcc
    5884:	bc 00 00 ce 	l.sfeqi r0,0xce
    5888:	8c 00 02 30 	l.lbz r0,0x230(r0)
    588c:	9f 00 00 00 	l.addi r24,r0,0x0
    5890:	00 00 00 00 	l.j 5890 <__rom_size-0x14abc>
    5894:	00 00 00 ce 	l.j 5bcc <__rom_size-0x14780>
    5898:	8c 00 00 ce 	l.lbz r0,0xce(r0)
    589c:	a0 00 02 71 	l.addic r0,r0,0x271
    58a0:	00 00 00 ce 	l.j 5bd8 <__rom_size-0x14774>
    58a4:	a0 00 00 ce 	l.addic r0,r0,0xce
    58a8:	bc 00 02 71 	l.sfeqi r0,0x271
    58ac:	04 00 00 00 	l.jal 58ac <__rom_size-0x14aa0>
    58b0:	00 00 00 00 	l.j 58b0 <__rom_size-0x14a9c>
    58b4:	00 00 00 ce 	l.j 5bec <__rom_size-0x14760>
    58b8:	bc 00 00 ce 	l.sfeqi r0,0xce
    58bc:	ec 00 02 71 	.word 0xec000271
    58c0:	00 00 00 ce 	l.j 5bf8 <__rom_size-0x14754>
    58c4:	ec 00 00 e1 	.word 0xec0000e1
    58c8:	e4 00 02 71 	l.sfeq r0,r0
    58cc:	28 00 00 00 	.word 0x28000000
    58d0:	00 00 00 00 	l.j 58d0 <__rom_size-0x14a7c>
    58d4:	00 00 00 ce 	l.j 5c0c <__rom_size-0x14740>
    58d8:	bc 00 00 cf 	l.sfeqi r0,0xcf
    58dc:	9c 00 02 30 	l.addi r0,r0,0x230
    58e0:	9f 00 00 cf 	l.addi r24,r0,0xcf
    58e4:	9c 00 00 cf 	l.addi r0,r0,0xcf
    58e8:	bc 00 01 5e 	l.sfeqi r0,0x15e
    58ec:	00 00 cf bc 	l.j 397dc <__rom_size+0x1f490>
    58f0:	00 00 d0 e4 	l.j 39c80 <__rom_size+0x1f934>
    58f4:	00 02 30 9f 	l.j 91b70 <__ram_length+0x11b70>
    58f8:	00 00 d0 e4 	l.j 39c88 <__rom_size+0x1f93c>
    58fc:	00 00 d0 ec 	l.j 39cac <__rom_size+0x1f960>
    5900:	00 03 09 ff 	l.j c80fc <__ram_length+0x480fc>
    5904:	9f 00 00 d0 	l.addi r24,r0,0xd0
    5908:	ec 00 00 d7 	.word 0xec0000d7
    590c:	c8 00 01 5e 	.word 0xc800015e
    5910:	00 00 df d4 	l.j 3d860 <__rom_size+0x23514>
    5914:	00 00 e0 f4 	l.j 3dce4 <__rom_size+0x23998>
    5918:	00 01 5e 00 	l.j 5d118 <__rom_size+0x42dcc>
	...
    5924:	00 ce bc 00 	l.j 33b4924 <__stack+0x2f34928>
    5928:	00 cf b4 00 	l.j 33f2928 <__stack+0x2f7292c>
    592c:	02 30 9f 00 	l.j f8c2d52c <__stack+0xf87ad530>
    5930:	00 cf b4 00 	l.j 33f2930 <__stack+0x2f72934>
    5934:	00 cf bc 00 	l.j 33f4934 <__stack+0x2f74938>
    5938:	02 31 9f 00 	l.j f8c6d538 <__stack+0xf87ed53c>
    593c:	00 cf bc 00 	l.j 33f493c <__stack+0x2f74940>
    5940:	00 d0 ec 00 	l.j 3440940 <__stack+0x2fc0944>
    5944:	02 30 9f 00 	l.j f8c2d544 <__stack+0xf87ad548>
	...
    5950:	00 d0 f4 00 	l.j 3442950 <__stack+0x2fc2954>
    5954:	00 d1 3f 00 	l.j 3455554 <__stack+0x2fd5558>
    5958:	01 5b 00 00 	l.j 56c5958 <__stack+0x524595c>
	...
    5964:	cf 48 00 00 	.word 0xcf480000
    5968:	cf dc 00 06 	.word 0xcfdc0006
    596c:	03 00 41 a4 	l.j fc015ffc <__stack+0xfbb96000>
    5970:	dc 9f 00 00 	l.sh 0x2000(r31),r0
	...
    597c:	d0 14 00 00 	l.sd 0x0(r20),r0
    5980:	d0 1c 00 03 	l.sd 0x3(r28),r0
    5984:	08 6c 9f 00 	.word 0x086c9f00
	...
    5990:	00 d0 14 00 	l.j 340a990 <__stack+0x2f8a994>
    5994:	00 d0 ec 00 	l.j 3440994 <__stack+0x2fc0998>
    5998:	02 30 9f 00 	l.j f8c2d598 <__stack+0xf87ad59c>
	...
    59a4:	00 d0 14 00 	l.j 340a9a4 <__stack+0x2f8a9a8>
    59a8:	00 d0 ec 00 	l.j 34409a8 <__stack+0x2fc09ac>
    59ac:	06 03 00 41 	l.jal f80c5ab0 <__stack+0xf7c45ab4>
    59b0:	cc ac 9f 00 	.word 0xccac9f00
	...
    59bc:	00 d0 14 00 	l.j 340a9bc <__stack+0x2f8a9c0>
    59c0:	00 d0 1c 00 	l.j 340c9c0 <__stack+0x2f8c9c4>
    59c4:	06 03 00 41 	l.jal f80c5ac8 <__stack+0xf7c45acc>
    59c8:	cc ac 9f 00 	.word 0xccac9f00
    59cc:	00 d0 1c 00 	l.j 340c9cc <__stack+0x2f8c9d0>
    59d0:	00 d0 28 00 	l.j 340f9d0 <__stack+0x2f8f9d4>
    59d4:	01 52 00 00 	l.j 54859d4 <__stack+0x50059d8>
    59d8:	d0 28 00 00 	l.sd 0x800(r8),r0
    59dc:	d0 64 00 01 	l.sd 0x1801(r4),r0
    59e0:	52 00 00 d0 	.word 0x520000d0
    59e4:	64 00 00 d0 	.word 0x640000d0
    59e8:	6b 00 04 73 	.word 0x6b000473
    59ec:	e0 00 9f 00 	.word 0xe0009f00
	...
    59f8:	00 d1 30 00 	l.j 34519f8 <__stack+0x2fd19fc>
    59fc:	00 d7 c8 00 	l.j 35f79fc <__stack+0x3177a00>
    5a00:	01 5e 00 00 	l.j 5785a00 <__stack+0x5305a04>
    5a04:	df d4 00 00 	l.sh 0xfffff000(r20),r0
    5a08:	e0 f4 00 01 	l.addc r7,r20,r0
    5a0c:	5e 00 00 00 	.word 0x5e000000
    5a10:	00 00 00 00 	l.j 5a10 <__rom_size-0x1493c>
    5a14:	00 00 00 d7 	l.j 5d70 <__rom_size-0x145dc>
    5a18:	e0 00 00 d7 	.word 0xe00000d7
    5a1c:	e8 00 02 30 	.word 0xe8000230
    5a20:	9f 00 00 d7 	l.addi r24,r0,0xd7
    5a24:	e8 00 00 d8 	.word 0xe80000d8
    5a28:	7c 00 01 5e 	l.cust4 
    5a2c:	00 00 d8 7c 	l.j 3bc1c <__rom_size+0x218d0>
    5a30:	00 00 d8 80 	l.j 3bc30 <__rom_size+0x218e4>
    5a34:	00 01 5e 00 	l.j 5d234 <__rom_size+0x42ee8>
    5a38:	00 d8 80 00 	l.j 3625a38 <__stack+0x31a5a3c>
    5a3c:	00 d9 70 00 	l.j 3661a3c <__stack+0x31e1a40>
    5a40:	01 5e 00 00 	l.j 5785a40 <__stack+0x5305a44>
	...
    5a4c:	d8 6c 00 00 	l.sb 0x1800(r12),r0
    5a50:	d8 80 00 01 	l.sb 0x2001(r0),r0
    5a54:	60 00 00 00 	.word 0x60000000
    5a58:	00 00 00 00 	l.j 5a58 <__rom_size-0x148f4>
    5a5c:	00 00 00 d8 	l.j 5dbc <__rom_size-0x14590>
    5a60:	20 00 00 d8 	l.sys 0xd8
    5a64:	7c 00 0a 7e 	l.cust4 
    5a68:	00 39 24 23 	l.j e4eaf4 <__stack+0x9ceaf8>
    5a6c:	80 80 c0 06 	l.ld r4,0xffffc006(r0)
    5a70:	9f 00 00 d8 	l.addi r24,r0,0xd8
    5a74:	7c 00 00 d8 	l.cust4 
    5a78:	80 00 0a 7e 	l.ld r0,0xa7e(r0)
    5a7c:	7f 39 24 23 	l.cust4 
    5a80:	80 80 c0 06 	l.ld r4,0xffffc006(r0)
    5a84:	9f 00 00 00 	l.addi r24,r0,0x0
    5a88:	00 00 00 00 	l.j 5a88 <__rom_size-0x148c4>
    5a8c:	00 00 00 d7 	l.j 5de8 <__rom_size-0x14564>
    5a90:	cc 00 00 dd 	.word 0xcc0000dd
    5a94:	30 00 01 66 	.word 0x30000166
	...
    5aa0:	00 00 d8 38 	l.j 3bb80 <__rom_size+0x21834>
    5aa4:	00 00 d8 58 	l.j 3bc04 <__rom_size+0x218b8>
    5aa8:	00 01 53 00 	l.j 5a6a8 <__rom_size+0x4035c>
    5aac:	00 d8 58 00 	l.j 361baac <__stack+0x319bab0>
    5ab0:	00 d8 67 00 	l.j 361f6b0 <__stack+0x319f6b4>
    5ab4:	02 91 5c 00 	l.j fa45cab4 <__stack+0xf9fdcab8>
	...
    5ac0:	00 d7 8c 00 	l.j 35e8ac0 <__stack+0x3168ac4>
    5ac4:	00 df d4 00 	l.j 37faac4 <__stack+0x337aac8>
    5ac8:	06 0c 00 10 	l.jal f8305b08 <__stack+0xf7e85b0c>
    5acc:	00 00 9f 00 	l.j 2d6cc <__rom_size+0x13380>
	...
    5ad8:	00 d7 8c 00 	l.j 35e8ad8 <__stack+0x3168adc>
    5adc:	00 df d4 00 	l.j 37faadc <__stack+0x337aae0>
    5ae0:	06 0c 00 c0 	l.jal f8305de0 <__stack+0xf7e85de4>
    5ae4:	00 00 9f 00 	l.j 2d6e4 <__rom_size+0x13398>
	...
    5af0:	00 d8 98 00 	l.j 362baf0 <__stack+0x31abaf4>
    5af4:	00 dd 30 00 	l.j 3751af4 <__stack+0x32d1af8>
    5af8:	06 0c 00 d0 	l.jal f8305e38 <__stack+0xf7e85e3c>
    5afc:	00 00 9f 00 	l.j 2d6fc <__rom_size+0x133b0>
	...
    5b08:	00 d9 60 00 	l.j 365db08 <__stack+0x31ddb0c>
    5b0c:	00 d9 70 00 	l.j 3661b0c <__stack+0x31e1b10>
    5b10:	01 52 00 00 	l.j 5485b10 <__stack+0x5005b14>
    5b14:	d9 98 00 00 	l.sb 0x6000(r24),r0
    5b18:	dd 30 00 01 	l.sh 0x4801(r16),r0
    5b1c:	5e 00 00 00 	.word 0x5e000000
    5b20:	00 00 00 00 	l.j 5b20 <__rom_size-0x1482c>
    5b24:	00 00 00 d9 	l.j 5e88 <__rom_size-0x144c4>
    5b28:	30 00 00 dd 	.word 0x300000dd
    5b2c:	30 00 06 0c 	.word 0x3000060c
    5b30:	00 d0 00 00 	l.j 3405b30 <__stack+0x2f85b34>
    5b34:	9f 00 00 00 	l.addi r24,r0,0x0
    5b38:	00 00 00 00 	l.j 5b38 <__rom_size-0x14814>
    5b3c:	00 00 00 e1 	l.j 5ec0 <__rom_size-0x1448c>
    5b40:	e4 00 00 e2 	l.sfeq r0,r0
    5b44:	20 00 02 71 	l.sys 0x271
    5b48:	00 00 00 e2 	l.j 5ed0 <__rom_size-0x1447c>
    5b4c:	20 00 00 e7 	l.sys 0xe7
    5b50:	70 00 02 71 	l.cust1 
    5b54:	30 00 00 00 	.word 0x30000000
    5b58:	00 00 00 00 	l.j 5b58 <__rom_size-0x147f4>
    5b5c:	00 00 00 e1 	l.j 5ee0 <__rom_size-0x1446c>
    5b60:	e4 00 00 e2 	l.sfeq r0,r0
    5b64:	1c 00 01 53 	.word 0x1c000153
    5b68:	00 00 e2 1c 	l.j 3e3d8 <__rom_size+0x2408c>
    5b6c:	00 00 e7 4c 	l.j 3f89c <__rom_size+0x25550>
    5b70:	00 01 5e 00 	l.j 5d370 <__rom_size+0x43024>
	...
    5b7c:	00 e2 80 00 	l.j 38a5b7c <__stack+0x3425b80>
    5b80:	00 e2 ac 00 	l.j 38b0b80 <__stack+0x3430b84>
    5b84:	02 30 9f 00 	l.j f8c2d784 <__stack+0xf87ad788>
    5b88:	00 e2 c0 00 	l.j 38b5b88 <__stack+0x3435b8c>
    5b8c:	00 e2 d0 00 	l.j 38b9b8c <__stack+0x3439b90>
    5b90:	01 62 00 00 	l.j 5885b90 <__stack+0x5405b94>
    5b94:	e2 d0 00 00 	l.add r22,r16,r0
    5b98:	e3 40 00 01 	l.addc r26,r0,r0
    5b9c:	62 00 00 e3 	.word 0x620000e3
    5ba0:	40 00 00 e6 	.word 0x400000e6
    5ba4:	e0 00 01 62 	.word 0xe0000162
    5ba8:	00 00 e6 e4 	l.j 3f738 <__rom_size+0x253ec>
    5bac:	00 00 e7 04 	l.j 3f7bc <__rom_size+0x25470>
    5bb0:	00 01 62 00 	l.j 5e3b0 <__rom_size+0x44064>
    5bb4:	00 e7 04 00 	l.j 39c6bb4 <__stack+0x3546bb8>
    5bb8:	00 e7 2c 00 	l.j 39d0bb8 <__stack+0x3550bbc>
    5bbc:	02 30 9f 00 	l.j f8c2d7bc <__stack+0xf87ad7c0>
    5bc0:	00 e7 2c 00 	l.j 39d0bc0 <__stack+0x3550bc4>
    5bc4:	00 e7 54 00 	l.j 39dabc4 <__stack+0x355abc8>
    5bc8:	01 62 00 00 	l.j 5885bc8 <__stack+0x5405bcc>
	...
    5bd4:	e3 6c 00 00 	l.add r27,r12,r0
    5bd8:	e6 d4 00 01 	.word 0xe6d40001
    5bdc:	5b 00 00 00 	.word 0x5b000000
    5be0:	00 00 00 00 	l.j 5be0 <__rom_size-0x1476c>
    5be4:	00 00 00 e3 	l.j 5f70 <__rom_size-0x143dc>
    5be8:	78 00 00 e3 	l.cust3 
    5bec:	b8 00 01 53 	l.srli r0,r0,0x13
    5bf0:	00 00 e3 bc 	l.j 3eae0 <__rom_size+0x24794>
    5bf4:	00 00 e6 f4 	l.j 3f7c4 <__rom_size+0x25478>
    5bf8:	00 01 53 00 	l.j 5a7f8 <__rom_size+0x404ac>
    5bfc:	00 e7 04 00 	l.j 39c6bfc <__stack+0x3546c00>
    5c00:	00 e7 28 00 	l.j 39cfc00 <__stack+0x354fc04>
    5c04:	01 53 00 00 	l.j 54c5c04 <__stack+0x5045c08>
    5c08:	e7 3c 00 00 	.word 0xe73c0000
    5c0c:	e7 70 00 01 	.word 0xe7700001
    5c10:	53 00 00 00 	.word 0x53000000
    5c14:	00 00 00 00 	l.j 5c14 <__rom_size-0x14738>
    5c18:	00 00 00 e3 	l.j 5fa4 <__rom_size-0x143a8>
    5c1c:	7c 00 00 e3 	l.cust4 
    5c20:	84 00 05 74 	l.lwz r0,0x574(r0)
    5c24:	00 38 24 9f 	l.j e0eea0 <__stack+0x98eea4>
    5c28:	00 00 e3 a0 	l.j 3eaa8 <__rom_size+0x2475c>
    5c2c:	00 00 e3 f0 	l.j 3ebec <__rom_size+0x248a0>
    5c30:	00 01 54 00 	l.j 5ac30 <__rom_size+0x408e4>
    5c34:	00 e3 f0 00 	l.j 3901c34 <__stack+0x3481c38>
    5c38:	00 e4 54 00 	l.j 391ac38 <__stack+0x349ac3c>
    5c3c:	01 54 00 00 	l.j 5505c3c <__stack+0x5085c40>
	...
    5c48:	e4 0c 00 00 	l.sfeq r12,r0
    5c4c:	e4 54 00 01 	l.sfgtu r20,r0
    5c50:	54 00 00 00 	.word 0x54000000
    5c54:	00 00 00 00 	l.j 5c54 <__rom_size-0x146f8>
    5c58:	00 00 00 e4 	l.j 5fe8 <__rom_size-0x14364>
    5c5c:	0c 00 00 e6 	l.bnf 5ff4 <__rom_size-0x14358>
    5c60:	c0 00 01 53 	l.mtspr r0,r0,0x153
	...
    5c6c:	00 00 e4 0c 	l.j 3ec9c <__rom_size+0x24950>
    5c70:	00 00 e6 c0 	l.j 3f770 <__rom_size+0x25424>
    5c74:	00 01 62 00 	l.j 5e474 <__rom_size+0x44128>
	...
    5c80:	00 e4 cc 00 	l.j 3938c80 <__stack+0x34b8c84>
    5c84:	00 e4 d4 00 	l.j 393ac84 <__stack+0x34bac88>
    5c88:	03 08 20 9f 	l.j fc20df04 <__stack+0xfbd8df08>
    5c8c:	00 00 e5 48 	l.j 3f1ac <__rom_size+0x24e60>
    5c90:	00 00 e5 54 	l.j 3f1e0 <__rom_size+0x24e94>
    5c94:	00 03 08 80 	l.j c7e94 <__ram_length+0x47e94>
    5c98:	9f 00 00 e6 	l.addi r24,r0,0xe6
    5c9c:	24 00 00 e6 	l.rfe 
    5ca0:	30 00 04 0a 	.word 0x3000040a
    5ca4:	02 00 9f 00 	l.j f802d8a4 <__stack+0xf7bad8a8>
	...
    5cb0:	00 e4 6c 00 	l.j 3920cb0 <__stack+0x34a0cb4>
    5cb4:	00 e4 80 00 	l.j 3925cb4 <__stack+0x34a5cb8>
    5cb8:	01 5c 00 00 	l.j 5705cb8 <__stack+0x5285cbc>
    5cbc:	e4 80 00 00 	l.sfltu r0,r0
    5cc0:	e4 9c 00 01 	l.sfltu r28,r0
    5cc4:	57 00 00 e4 	.word 0x570000e4
    5cc8:	9c 00 00 e4 	l.addi r0,r0,0xe4
    5ccc:	b0 00 01 58 	l.muli r0,r0,0x158
    5cd0:	00 00 e4 b0 	l.j 3ef90 <__rom_size+0x24c44>
    5cd4:	00 00 e4 bc 	l.j 3efc4 <__rom_size+0x24c78>
    5cd8:	00 01 58 00 	l.j 5bcd8 <__rom_size+0x4198c>
    5cdc:	00 e4 bc 00 	l.j 3934cdc <__stack+0x34b4ce0>
    5ce0:	00 e5 1c 00 	l.j 394cce0 <__stack+0x34ccce4>
    5ce4:	01 56 00 00 	l.j 5585ce4 <__stack+0x5105ce8>
    5ce8:	e5 1c 00 00 	.word 0xe51c0000
    5cec:	e5 54 00 02 	l.sfgts r20,r0
    5cf0:	72 00 00 00 	l.cust1 
    5cf4:	e5 58 00 00 	l.sfgts r24,r0
    5cf8:	e5 60 00 01 	l.sfges r0,r0
    5cfc:	5c 00 00 e5 	.word 0x5c0000e5
    5d00:	70 00 00 e5 	l.cust1 
    5d04:	74 00 01 5c 	l.cust2 
    5d08:	00 00 e5 84 	l.j 3f318 <__rom_size+0x24fcc>
    5d0c:	00 00 e5 88 	l.j 3f32c <__rom_size+0x24fe0>
    5d10:	00 01 5c 00 	l.j 5cd10 <__rom_size+0x429c4>
    5d14:	00 e5 98 00 	l.j 396bd14 <__stack+0x34ebd18>
    5d18:	00 e5 a0 00 	l.j 396dd18 <__stack+0x34edd1c>
    5d1c:	01 5c 00 00 	l.j 5705d1c <__stack+0x5285d20>
	...
    5d28:	e5 48 00 00 	l.sfgts r8,r0
    5d2c:	e5 54 00 06 	l.sfgts r20,r0
    5d30:	03 00 41 a4 	l.j fc0163c0 <__stack+0xfbb963c4>
    5d34:	dc 9f 00 00 	l.sh 0x2000(r31),r0
    5d38:	e5 54 00 00 	l.sfgts r20,r0
    5d3c:	e5 58 00 01 	l.sfgts r24,r0
    5d40:	54 00 00 e5 	.word 0x540000e5
    5d44:	58 00 00 e5 	.word 0x580000e5
    5d48:	70 00 03 74 	l.cust1 
    5d4c:	01 9f 00 00 	l.j 67c5d4c <__stack+0x6345d50>
    5d50:	e5 70 00 00 	l.sfges r16,r0
    5d54:	e5 84 00 03 	l.sflts r4,r0
    5d58:	74 02 9f 00 	l.cust2 
    5d5c:	00 e5 84 00 	l.j 3966d5c <__stack+0x34e6d60>
    5d60:	00 e5 9c 00 	l.j 396cd60 <__stack+0x34ecd64>
    5d64:	03 74 03 9f 	l.j fdd06be0 <__stack+0xfd886be4>
    5d68:	00 00 e5 9c 	l.j 3f3d8 <__rom_size+0x2508c>
    5d6c:	00 00 e5 a8 	l.j 3f40c <__rom_size+0x250c0>
    5d70:	00 01 54 00 	l.j 5ad70 <__rom_size+0x40a24>
    5d74:	00 e5 a8 00 	l.j 396fd74 <__stack+0x34efd78>
    5d78:	00 e5 c8 00 	l.j 3977d78 <__stack+0x34f7d7c>
    5d7c:	01 54 00 00 	l.j 5505d7c <__stack+0x5085d80>
    5d80:	e6 24 00 00 	.word 0xe6240000
    5d84:	e6 30 00 06 	.word 0xe6300006
    5d88:	03 00 41 a4 	l.j fc016418 <__stack+0xfbb9641c>
    5d8c:	dc 9f 00 00 	l.sh 0x2000(r31),r0
    5d90:	e6 30 00 00 	.word 0xe6300000
    5d94:	e6 3c 00 01 	.word 0xe63c0001
    5d98:	54 00 00 e6 	.word 0x540000e6
    5d9c:	3c 00 00 e6 	.word 0x3c0000e6
    5da0:	48 00 01 54 	l.jalr r0
    5da4:	00 00 e6 48 	l.j 3f6c4 <__rom_size+0x25378>
    5da8:	00 00 e6 60 	l.j 3f728 <__rom_size+0x253dc>
    5dac:	00 01 54 00 	l.j 5adac <__rom_size+0x40a60>
    5db0:	00 e6 68 00 	l.j 399fdb0 <__stack+0x351fdb4>
    5db4:	00 e6 74 00 	l.j 39a2db4 <__stack+0x3522db8>
    5db8:	01 54 00 00 	l.j 5505db8 <__stack+0x5085dbc>
    5dbc:	e6 74 00 00 	.word 0xe6740000
    5dc0:	e6 7c 00 01 	.word 0xe67c0001
    5dc4:	54 00 00 e6 	.word 0x540000e6
    5dc8:	7c 00 00 e6 	l.cust4 
    5dcc:	90 00 01 54 	l.lbs r0,0x154(r0)
	...
    5dd8:	00 00 e4 0c 	l.j 3ee08 <__rom_size+0x24abc>
    5ddc:	00 00 e6 c0 	l.j 3f8dc <__rom_size+0x25590>
    5de0:	00 06 03 00 	l.j 1869e0 <__ram_length+0x1069e0>
    5de4:	41 a4 dc 9f 	.word 0x41a4dc9f
	...
    5df0:	00 00 e6 a0 	l.j 3f870 <__rom_size+0x25524>
    5df4:	00 00 e6 a8 	l.j 3f894 <__rom_size+0x25548>
    5df8:	00 01 54 00 	l.j 5adf8 <__rom_size+0x40aac>
    5dfc:	00 e6 a8 00 	l.j 39afdfc <__stack+0x352fe00>
    5e00:	00 e6 ac 00 	l.j 39b0e00 <__stack+0x3530e04>
    5e04:	01 54 00 00 	l.j 5505e04 <__stack+0x5085e08>
    5e08:	e6 b4 00 00 	.word 0xe6b40000
    5e0c:	e6 c0 00 01 	.word 0xe6c00001
    5e10:	54 00 00 00 	.word 0x54000000
    5e14:	00 00 00 00 	l.j 5e14 <__rom_size-0x14538>
    5e18:	00 00 00 e7 	l.j 61b4 <__rom_size-0x14198>
    5e1c:	70 00 00 e7 	l.cust1 
    5e20:	8c 00 02 71 	l.lbz r0,0x271(r0)
    5e24:	00 00 00 e7 	l.j 61c0 <__rom_size-0x1418c>
    5e28:	8c 00 00 e8 	l.lbz r0,0xe8(r0)
    5e2c:	b4 00 02 71 	l.mfspr r0,r0,0x271
    5e30:	0c 00 00 00 	l.bnf 5e30 <__rom_size-0x1451c>
    5e34:	00 00 00 00 	l.j 5e34 <__rom_size-0x14518>
    5e38:	00 00 00 e8 	l.j 61d8 <__rom_size-0x14174>
    5e3c:	7c 00 00 e8 	l.cust4 
    5e40:	90 00 01 5e 	l.lbs r0,0x15e(r0)
	...
    5e4c:	00 00 e8 b4 	l.j 4011c <__rom_size+0x25dd0>
    5e50:	00 00 e8 e0 	l.j 401d0 <__rom_size+0x25e84>
    5e54:	00 02 71 00 	l.j a2254 <__ram_length+0x22254>
    5e58:	00 00 e8 e0 	l.j 401d8 <__rom_size+0x25e8c>
    5e5c:	00 00 eb c4 	l.j 40d6c <__rom_size+0x26a20>
    5e60:	00 02 71 08 	l.j a2280 <__ram_length+0x22280>
	...
    5e6c:	00 00 e8 b4 	l.j 4013c <__rom_size+0x25df0>
    5e70:	00 00 e8 c8 	l.j 40190 <__rom_size+0x25e44>
    5e74:	00 01 53 00 	l.j 5aa74 <__rom_size+0x40728>
	...
    5e80:	00 e8 b4 00 	l.j 3a32e80 <__stack+0x35b2e84>
    5e84:	00 e8 cc 00 	l.j 3a38e84 <__stack+0x35b8e88>
    5e88:	01 54 00 00 	l.j 5505e88 <__stack+0x5085e8c>
	...
    5e94:	e9 38 00 00 	.word 0xe9380000
    5e98:	e9 94 00 02 	.word 0xe9940002
    5e9c:	30 9f 00 00 	.word 0x309f0000
    5ea0:	eb 10 00 00 	.word 0xeb100000
    5ea4:	eb 18 00 02 	.word 0xeb180002
    5ea8:	46 9f 00 00 	l.jr r0
    5eac:	eb 18 00 00 	.word 0xeb180000
    5eb0:	eb 24 00 01 	.word 0xeb240001
    5eb4:	55 00 00 eb 	.word 0x550000eb
    5eb8:	60 00 00 eb 	.word 0x600000eb
    5ebc:	80 00 01 55 	l.ld r0,0x155(r0)
    5ec0:	00 00 eb 8c 	l.j 40cf0 <__rom_size+0x269a4>
    5ec4:	00 00 eb 94 	l.j 40d14 <__rom_size+0x269c8>
    5ec8:	00 01 55 00 	l.j 5b2c8 <__rom_size+0x40f7c>
    5ecc:	00 eb 9c 00 	l.j 3aececc <__stack+0x366ced0>
    5ed0:	00 eb c4 00 	l.j 3af6ed0 <__stack+0x3676ed4>
    5ed4:	01 55 00 00 	l.j 5545ed4 <__stack+0x50c5ed8>
	...
    5ee0:	e9 fc 00 00 	.word 0xe9fc0000
    5ee4:	ea 24 00 03 	.word 0xea240003
    5ee8:	89 01 9f 00 	l.lws r8,0xffff9f00(r1)
    5eec:	00 ea 24 00 	l.j 3a8eeec <__stack+0x360eef0>
    5ef0:	00 ea 4c 00 	l.j 3a98ef0 <__stack+0x3618ef4>
    5ef4:	03 87 01 9f 	l.j fe1c6570 <__stack+0xfdd46574>
    5ef8:	00 00 ea 4c 	l.j 40828 <__rom_size+0x264dc>
    5efc:	00 00 ea 74 	l.j 408cc <__rom_size+0x26580>
    5f00:	00 03 85 01 	l.j e7304 <__ram_length+0x67304>
    5f04:	9f 00 00 ea 	l.addi r24,r0,0xea
    5f08:	74 00 00 ea 	l.cust2 
    5f0c:	9c 00 03 83 	l.addi r0,r0,0x383
    5f10:	01 9f 00 00 	l.j 67c5f10 <__stack+0x6345f14>
    5f14:	ea 9c 00 00 	.word 0xea9c0000
    5f18:	ea c4 00 03 	.word 0xeac40003
    5f1c:	81 01 9f 00 	l.ld r8,0xffff9f00(r1)
    5f20:	00 ea c4 00 	l.j 3ab6f20 <__stack+0x3636f24>
    5f24:	00 ea ec 00 	l.j 3ac0f24 <__stack+0x3640f28>
    5f28:	03 7f 01 9f 	l.j fdfc65a4 <__stack+0xfdb465a8>
    5f2c:	00 00 ea ec 	l.j 40adc <__rom_size+0x26790>
    5f30:	00 00 eb 18 	l.j 40b90 <__rom_size+0x26844>
    5f34:	00 03 7f 02 	l.j e5b3c <__ram_length+0x65b3c>
    5f38:	9f 00 00 00 	l.addi r24,r0,0x0
    5f3c:	00 00 00 00 	l.j 5f3c <__rom_size-0x14410>
    5f40:	00 00 00 e9 	l.j 62e4 <__rom_size-0x14068>
    5f44:	1c 00 00 e9 	.word 0x1c0000e9
    5f48:	2b 00 0c 73 	lv.subs.b r24,r0,r1
    5f4c:	00 08 e3 1e 	l.j 23ebc4 <__ram_length+0x1bebc4>
    5f50:	03 00 41 6f 	l.j fc01650c <__stack+0xfbb96510>
    5f54:	14 22 9f 00 	.word 0x14229f00
    5f58:	00 e9 38 00 	l.j 3a53f58 <__stack+0x35d3f5c>
    5f5c:	00 eb 3c 00 	l.j 3ad4f5c <__stack+0x3654f60>
    5f60:	01 5b 00 00 	l.j 56c5f60 <__stack+0x5245f64>
    5f64:	eb 3c 00 00 	.word 0xeb3c0000
    5f68:	eb c4 00 01 	.word 0xebc40001
    5f6c:	5b 00 00 00 	.word 0x5b000000
    5f70:	00 00 00 00 	l.j 5f70 <__rom_size-0x143dc>
    5f74:	00 00 00 e9 	l.j 6318 <__rom_size-0x14034>
    5f78:	1c 00 00 e9 	.word 0x1c0000e9
    5f7c:	94 00 03 08 	l.lhz r0,0x308(r0)
    5f80:	e3 9f 00 00 	l.add r28,r31,r0
    5f84:	eb 5c 00 00 	.word 0xeb5c0000
    5f88:	eb 78 00 01 	.word 0xeb780001
    5f8c:	5d 00 00 00 	.word 0x5d000000
    5f90:	00 00 00 00 	l.j 5f90 <__rom_size-0x143bc>
    5f94:	00 00 00 e9 	l.j 6338 <__rom_size-0x14014>
    5f98:	5c 00 00 e9 	.word 0x5c0000e9
    5f9c:	94 00 01 58 	l.lhz r0,0x158(r0)
    5fa0:	00 00 eb 5c 	l.j 40d10 <__rom_size+0x269c4>
    5fa4:	00 00 eb 64 	l.j 40d34 <__rom_size+0x269e8>
    5fa8:	00 01 5c 00 	l.j 5cfa8 <__rom_size+0x42c5c>
    5fac:	00 eb 64 00 	l.j 3adefac <__stack+0x365efb0>
    5fb0:	00 eb 88 00 	l.j 3ae7fb0 <__stack+0x3667fb4>
    5fb4:	01 56 00 00 	l.j 5585fb4 <__stack+0x5105fb8>
    5fb8:	eb 88 00 00 	.word 0xeb880000
    5fbc:	eb 94 00 01 	.word 0xeb940001
    5fc0:	56 00 00 eb 	.word 0x560000eb
    5fc4:	9c 00 00 eb 	l.addi r0,r0,0xeb
    5fc8:	c4 00 01 56 	.word 0xc4000156
	...
    5fd4:	00 00 eb c4 	l.j 40ee4 <__rom_size+0x26b98>
    5fd8:	00 00 eb e8 	l.j 40f78 <__rom_size+0x26c2c>
    5fdc:	00 02 71 00 	l.j a23dc <__ram_length+0x223dc>
    5fe0:	00 00 eb e8 	l.j 40f80 <__rom_size+0x26c34>
    5fe4:	00 00 ef c8 	l.j 41f04 <__rom_size+0x27bb8>
    5fe8:	00 02 71 1c 	l.j a2458 <__ram_length+0x22458>
	...
    5ff4:	00 00 eb c4 	l.j 40f04 <__rom_size+0x26bb8>
    5ff8:	00 00 ec 14 	l.j 41048 <__rom_size+0x26cfc>
    5ffc:	00 01 53 00 	l.j 5abfc <__rom_size+0x408b0>
	...
    6008:	00 eb c4 00 	l.j 3af7008 <__stack+0x367700c>
    600c:	00 ec 2b 00 	l.j 3b10c0c <__stack+0x3690c10>
    6010:	01 54 00 00 	l.j 5506010 <__stack+0x5086014>
    6014:	ec 2b 00 00 	.word 0xec2b0000
    6018:	ef b8 00 01 	.word 0xefb80001
    601c:	60 00 00 00 	.word 0x60000000
    6020:	00 00 00 00 	l.j 6020 <__rom_size-0x1432c>
    6024:	00 00 00 eb 	l.j 63d0 <__rom_size-0x13f7c>
    6028:	c4 00 00 ec 	.word 0xc40000ec
    602c:	2b 00 01 55 	lv.max.b r24,r0,r0
    6030:	00 00 ec 2b 	l.j 410dc <__rom_size+0x26d90>
    6034:	00 00 ec 98 	l.j 41294 <__rom_size+0x26f48>
    6038:	00 01 5e 00 	l.j 5d838 <__rom_size+0x434ec>
    603c:	00 ec 98 00 	l.j 3b2c03c <__stack+0x36ac040>
    6040:	00 ec d4 00 	l.j 3b3b040 <__stack+0x36bb044>
    6044:	01 5e 00 00 	l.j 5786044 <__stack+0x5306048>
    6048:	ec e4 00 00 	.word 0xece40000
    604c:	ef b4 00 01 	.word 0xefb40001
    6050:	5e 00 00 00 	.word 0x5e000000
    6054:	00 00 00 00 	l.j 6054 <__rom_size-0x142f8>
    6058:	00 00 00 eb 	l.j 6404 <__rom_size-0x13f48>
    605c:	c4 00 00 ec 	.word 0xc40000ec
    6060:	00 00 01 56 	l.j 65b8 <__rom_size-0x13d94>
    6064:	00 00 ec 00 	l.j 41064 <__rom_size+0x26d18>
    6068:	00 00 ec 04 	l.j 41078 <__rom_size+0x26d2c>
    606c:	00 01 52 00 	l.j 5a86c <__rom_size+0x40520>
    6070:	00 ec 04 00 	l.j 3b07070 <__stack+0x3687074>
    6074:	00 ed 38 00 	l.j 3b54074 <__stack+0x36d4078>
    6078:	01 52 00 00 	l.j 5486078 <__stack+0x500607c>
    607c:	ed 38 00 00 	.word 0xed380000
    6080:	ed 50 00 03 	.word 0xed500003
    6084:	76 01 9f 00 	l.cust2 
	...
    6090:	00 eb c4 00 	l.j 3af7090 <__stack+0x3677094>
    6094:	00 ec 2b 00 	l.j 3b10c94 <__stack+0x3690c98>
    6098:	01 57 00 00 	l.j 55c6098 <__stack+0x514609c>
	...
    60a4:	ec d0 00 00 	.word 0xecd00000
    60a8:	ec f4 00 01 	.word 0xecf40001
    60ac:	54 00 00 00 	.word 0x54000000
    60b0:	00 00 00 00 	l.j 60b0 <__rom_size-0x1429c>
    60b4:	00 00 00 ec 	l.j 6464 <__rom_size-0x13ee8>
    60b8:	58 00 00 ec 	.word 0x580000ec
    60bc:	64 00 03 08 	.word 0x64000308
    60c0:	20 9f 00 00 	.word 0x209f0000
	...
    60cc:	ec 58 00 00 	.word 0xec580000
    60d0:	ef a4 00 03 	.word 0xefa40003
    60d4:	08 20 9f 00 	.word 0x08209f00
	...
    60e0:	00 ec 58 00 	l.j 3b1c0e0 <__stack+0x369c0e4>
    60e4:	00 ef a4 00 	l.j 3bef0e4 <__stack+0x376f0e8>
    60e8:	06 03 00 41 	l.jal f80c61ec <__stack+0xf7c461f0>
    60ec:	cd 18 9f 00 	.word 0xcd189f00
	...
    60f8:	00 ec 58 00 	l.j 3b1c0f8 <__stack+0x369c0fc>
    60fc:	00 ec 64 00 	l.j 3b1f0fc <__stack+0x369f100>
    6100:	06 03 00 41 	l.jal f80c6204 <__stack+0xf7c46208>
    6104:	cd 18 9f 00 	.word 0xcd189f00
    6108:	00 ec 64 00 	l.j 3b1f108 <__stack+0x369f10c>
    610c:	00 ec 6c 00 	l.j 3b2110c <__stack+0x36a1110>
    6110:	01 54 00 00 	l.j 5506110 <__stack+0x5086114>
    6114:	ec 6c 00 00 	.word 0xec6c0000
    6118:	ec 93 00 01 	.word 0xec930001
    611c:	54 00 00 00 	.word 0x54000000
    6120:	00 00 00 00 	l.j 6120 <__rom_size-0x1422c>
    6124:	00 00 00 ed 	l.j 64d8 <__rom_size-0x13e74>
    6128:	5c 00 00 ed 	.word 0x5c0000ed
    612c:	98 00 01 64 	l.lhs r0,0x164(r0)
    6130:	00 00 ed 98 	l.j 41790 <__rom_size+0x27444>
    6134:	00 00 ef a4 	l.j 41fc4 <__rom_size+0x27c78>
    6138:	00 01 57 00 	l.j 5bd38 <__rom_size+0x419ec>
	...
    6144:	00 ed 5c 00 	l.j 3b5d144 <__stack+0x36dd148>
    6148:	00 ee 60 00 	l.j 3b9e148 <__stack+0x371e14c>
    614c:	01 55 00 00 	l.j 554614c <__stack+0x50c6150>
	...
    6158:	ed 5c 00 00 	.word 0xed5c0000
    615c:	ee 4c 00 01 	.word 0xee4c0001
    6160:	56 00 00 ee 	.word 0x560000ee
    6164:	4c 00 00 ee 	l.maci r0,0xee
    6168:	ac 00 01 56 	l.xori r0,r0,0x156
    616c:	00 00 ee ac 	l.j 41c1c <__rom_size+0x278d0>
    6170:	00 00 ef 2c 	l.j 41e20 <__rom_size+0x27ad4>
    6174:	00 03 76 08 	l.j e3994 <__ram_length+0x63994>
    6178:	9f 00 00 ef 	l.addi r24,r0,0xef
    617c:	2c 00 00 ef 	.word 0x2c0000ef
    6180:	68 00 01 56 	.word 0x68000156
	...
    618c:	00 00 ed 5c 	l.j 416fc <__rom_size+0x273b0>
    6190:	00 00 ed a4 	l.j 41820 <__rom_size+0x274d4>
    6194:	00 01 53 00 	l.j 5ad94 <__rom_size+0x40a48>
    6198:	00 ed b4 00 	l.j 3b73198 <__stack+0x36f319c>
    619c:	00 ed b8 00 	l.j 3b7419c <__stack+0x36f41a0>
    61a0:	05 73 00 08 	l.jal 5cc61c0 <__stack+0x58461c4>
    61a4:	24 21 00 00 	l.rfe 
    61a8:	ef 3c 00 00 	.word 0xef3c0000
    61ac:	ef 40 00 05 	.word 0xef400005
    61b0:	73 00 08 24 	l.cust1 
    61b4:	21 00 00 ef 	l.trap 0xef
    61b8:	6c 00 00 ef 	.word 0x6c0000ef
    61bc:	70 00 05 73 	l.cust1 
    61c0:	00 08 24 21 	l.j 20f244 <__ram_length+0x18f244>
    61c4:	00 00 ef 98 	l.j 42024 <__rom_size+0x27cd8>
    61c8:	00 00 ef a0 	l.j 42048 <__rom_size+0x27cfc>
    61cc:	00 05 72 00 	l.j 1629cc <__ram_length+0xe29cc>
    61d0:	08 24 21 00 	.word 0x08242100
	...
    61dc:	00 ed b0 00 	l.j 3b721dc <__stack+0x36f21e0>
    61e0:	00 ed f4 00 	l.j 3b831e0 <__stack+0x37031e4>
    61e4:	01 52 00 00 	l.j 54861e4 <__stack+0x50061e8>
    61e8:	ed f4 00 00 	.word 0xedf40000
    61ec:	ee 0c 00 01 	.word 0xee0c0001
    61f0:	52 00 00 ee 	.word 0x520000ee
    61f4:	5c 00 00 ee 	.word 0x5c0000ee
    61f8:	60 00 01 54 	.word 0x60000154
    61fc:	00 00 ee a8 	l.j 41c9c <__rom_size+0x27950>
    6200:	00 00 ef 08 	l.j 41e20 <__rom_size+0x27ad4>
    6204:	00 03 72 05 	l.j e2a18 <__ram_length+0x62a18>
    6208:	9f 00 00 ef 	l.addi r24,r0,0xef
    620c:	08 00 00 ef 	.word 0x080000ef
    6210:	1c 00 01 52 	.word 0x1c000152
    6214:	00 00 ef 1c 	l.j 41e84 <__rom_size+0x27b38>
    6218:	00 00 ef 20 	l.j 41e98 <__rom_size+0x27b4c>
    621c:	00 03 72 01 	l.j e2a20 <__ram_length+0x62a20>
    6220:	9f 00 00 ef 	l.addi r24,r0,0xef
    6224:	68 00 00 ef 	.word 0x680000ef
    6228:	84 00 01 52 	l.lwz r0,0x152(r0)
    622c:	00 00 ef 84 	l.j 4203c <__rom_size+0x27cf0>
    6230:	00 00 ef 94 	l.j 42080 <__rom_size+0x27d34>
    6234:	00 01 52 00 	l.j 5aa34 <__rom_size+0x406e8>
	...
    6240:	00 ed c8 00 	l.j 3b78240 <__stack+0x36f8244>
    6244:	00 ef a4 00 	l.j 3bef244 <__stack+0x376f248>
    6248:	02 40 9f 00 	l.j f902de48 <__stack+0xf8bade4c>
	...
    6254:	00 ed c8 00 	l.j 3b78254 <__stack+0x36f8258>
    6258:	00 ed cc 00 	l.j 3b79258 <__stack+0x36f925c>
    625c:	02 30 9f 00 	l.j f8c2de5c <__stack+0xf87ade60>
    6260:	00 ed f4 00 	l.j 3b83260 <__stack+0x3703264>
    6264:	00 ee 14 00 	l.j 3b8b264 <__stack+0x370b268>
    6268:	01 54 00 00 	l.j 5506268 <__stack+0x508626c>
	...
    6274:	ed 5c 00 00 	.word 0xed5c0000
    6278:	ed c8 00 02 	.word 0xedc80002
    627c:	46 9f 00 00 	l.jr r0
    6280:	ed c8 00 00 	.word 0xedc80000
    6284:	ee 08 00 02 	.word 0xee080002
    6288:	44 9f 00 00 	l.jr r0
    628c:	ee 08 00 00 	.word 0xee080000
    6290:	ee 20 00 02 	.word 0xee200002
    6294:	34 9f 00 00 	.word 0x349f0000
    6298:	ee 20 00 00 	.word 0xee200000
    629c:	ee 28 00 02 	.word 0xee280002
    62a0:	31 9f 00 00 	.word 0x319f0000
    62a4:	ee 28 00 00 	.word 0xee280000
    62a8:	ee 34 00 02 	.word 0xee340002
    62ac:	30 9f 00 00 	.word 0x309f0000
    62b0:	ee 34 00 00 	.word 0xee340000
    62b4:	ef a4 00 03 	.word 0xefa40003
    62b8:	09 ff 9f 00 	.word 0x09ff9f00
	...
    62c4:	00 ed 5c 00 	l.j 3b5d2c4 <__stack+0x36dd2c8>
    62c8:	00 ee 5c 00 	l.j 3b9d2c8 <__stack+0x371d2cc>
    62cc:	06 03 00 41 	l.jal f80c63d0 <__stack+0xf7c463d4>
    62d0:	cd 18 9f 00 	.word 0xcd189f00
    62d4:	00 ee 5c 00 	l.j 3b9d2d4 <__stack+0x371d2d8>
    62d8:	00 ee 94 00 	l.j 3bab2d8 <__stack+0x372b2dc>
    62dc:	06 03 00 41 	l.jal f80c63e0 <__stack+0xf7c463e4>
    62e0:	cd 19 9f 00 	.word 0xcd199f00
    62e4:	00 ee 94 00 	l.j 3bab2e4 <__stack+0x372b2e8>
    62e8:	00 ee a4 00 	l.j 3baf2e8 <__stack+0x372f2ec>
    62ec:	01 54 00 00 	l.j 55062ec <__stack+0x50862f0>
    62f0:	ee a4 00 00 	.word 0xeea40000
    62f4:	ee a8 00 03 	.word 0xeea80003
    62f8:	74 7f 9f 00 	l.cust2 
    62fc:	00 ee a8 00 	l.j 3bb02fc <__stack+0x3730300>
    6300:	00 ef 38 00 	l.j 3bd4300 <__stack+0x3754304>
    6304:	01 54 00 00 	l.j 5506304 <__stack+0x5086308>
    6308:	ef 40 00 00 	.word 0xef400000
    630c:	ef 68 00 01 	.word 0xef680001
    6310:	54 00 00 00 	.word 0x54000000
    6314:	00 00 00 00 	l.j 6314 <__rom_size-0x14038>
    6318:	00 00 00 ef 	l.j 66d4 <__rom_size-0x13c78>
    631c:	c8 00 00 f0 	.word 0xc80000f0
    6320:	0c 00 02 71 	l.bnf 6ce4 <__rom_size-0x13668>
    6324:	00 00 00 f0 	l.j 66e4 <__rom_size-0x13c68>
    6328:	0c 00 01 6a 	l.bnf 68d0 <__rom_size-0x13a7c>
    632c:	88 00 02 71 	l.lws r0,0x271(r0)
    6330:	3c 00 00 00 	.word 0x3c000000
    6334:	00 00 00 00 	l.j 6334 <__rom_size-0x14018>
    6338:	00 00 01 1a 	l.j 67a0 <__rom_size-0x13bac>
    633c:	a8 00 01 1a 	l.ori r0,r0,0x11a
    6340:	af 00 01 5b 	l.xori r24,r0,0x15b
    6344:	00 01 1a af 	l.j 4ce00 <__rom_size+0x32ab4>
    6348:	00 01 1a ec 	l.j 4cef8 <__rom_size+0x32bac>
    634c:	00 01 52 00 	l.j 5ab4c <__rom_size+0x40800>
	...
    6358:	00 f3 a0 00 	l.j 3cee358 <__stack+0x386e35c>
    635c:	00 f3 c8 00 	l.j 3cf835c <__stack+0x3878360>
    6360:	06 0c 00 df 	l.jal f83066dc <__stack+0xf7e866e0>
    6364:	f1 fc 9f 00 	l.cust5 r15,r28,r19,0x38,0x0
    6368:	00 f3 c8 00 	l.j 3cf8368 <__stack+0x387836c>
    636c:	00 f3 d4 00 	l.j 3cfb36c <__stack+0x387b370>
    6370:	04 0a df f1 	l.jal 2be334 <__ram_length+0x23e334>
    6374:	9f 00 00 f3 	l.addi r24,r0,0xf3
    6378:	d4 00 00 f3 	l.sw 0xf3(r0),r0
    637c:	e4 00 03 08 	l.sfeq r0,r0
    6380:	df 9f 00 00 	l.sh 0xffffe000(r31),r0
    6384:	f3 e4 00 01 	l.cust5 r31,r4,r0,0x0,0x1
    6388:	6a 88 00 02 	.word 0x6a880002
    638c:	30 9f 00 00 	.word 0x309f0000
	...
    6398:	f5 84 00 00 	l.cust6 
    639c:	f5 9c 00 06 	l.cust6 
    63a0:	0c 00 df f0 	l.bnf 3e360 <__rom_size+0x24014>
    63a4:	2e 9f 00 00 	.word 0x2e9f0000
    63a8:	f5 9c 00 00 	l.cust6 
    63ac:	f5 a8 00 04 	l.cust6 
    63b0:	0a df f0 9f 	.word 0x0adff09f
    63b4:	00 00 f5 a8 	l.j 43a54 <__rom_size+0x29708>
    63b8:	00 00 f5 b0 	l.j 43a78 <__rom_size+0x2972c>
    63bc:	00 03 08 df 	l.j c8738 <__ram_length+0x48738>
    63c0:	9f 00 00 f5 	l.addi r24,r0,0xf5
    63c4:	b0 00 01 6a 	l.muli r0,r0,0x16a
    63c8:	88 00 02 30 	l.lws r0,0x230(r0)
    63cc:	9f 00 00 00 	l.addi r24,r0,0x0
    63d0:	00 00 00 00 	l.j 63d0 <__rom_size-0x13f7c>
    63d4:	00 00 00 f7 	l.j 67b0 <__rom_size-0x13b9c>
    63d8:	50 00 00 f7 	.word 0x500000f7
    63dc:	64 00 06 0c 	.word 0x6400060c
    63e0:	00 df f0 80 	l.j 38025e0 <__stack+0x33825e4>
    63e4:	9f 00 00 f7 	l.addi r24,r0,0xf7
    63e8:	64 00 00 f7 	.word 0x640000f7
    63ec:	6c 00 04 0a 	.word 0x6c00040a
    63f0:	df f0 9f 00 	l.sh 0xffffff00(r16),r19
    63f4:	00 f7 6c 00 	l.j 3de13f4 <__stack+0x39613f8>
    63f8:	00 f7 74 00 	l.j 3de33f8 <__stack+0x39633fc>
    63fc:	03 08 df 9f 	l.j fc23e278 <__stack+0xfbdbe27c>
    6400:	00 00 f7 74 	l.j 441d0 <__rom_size+0x29e84>
    6404:	00 01 6a 88 	l.j 60e24 <__rom_size+0x46ad8>
    6408:	00 02 30 9f 	l.j 92684 <__ram_length+0x12684>
	...
    6414:	00 00 fb 90 	l.j 45254 <__rom_size+0x2af08>
    6418:	00 00 fb a8 	l.j 452b8 <__rom_size+0x2af6c>
    641c:	00 06 0c 00 	l.j 18941c <__ram_length+0x10941c>
    6420:	df f0 8e 9f 	l.sh 0xfffffe9f(r16),r17
    6424:	00 00 fb a8 	l.j 452c4 <__rom_size+0x2af78>
    6428:	00 00 fb b0 	l.j 452e8 <__rom_size+0x2af9c>
    642c:	00 04 0a df 	l.j 108fa8 <__ram_length+0x88fa8>
    6430:	f0 9f 00 00 	l.cust5 r4,r31,r0,0x0,0x0
    6434:	fb b0 00 00 	l.cust7 
    6438:	fb b8 00 03 	l.cust7 
    643c:	08 df 9f 00 	.word 0x08df9f00
    6440:	00 fb b8 00 	l.j 3ef4440 <__stack+0x3a74444>
    6444:	01 6a 88 00 	l.j 5aa8444 <__stack+0x5628448>
    6448:	02 30 9f 00 	l.j f8c2e048 <__stack+0xf87ae04c>
	...
    6454:	01 03 2c 00 	l.j 40d1454 <__stack+0x3c51458>
    6458:	01 03 44 00 	l.j 40d7458 <__stack+0x3c5745c>
    645c:	06 0c 00 df 	l.jal f83067d8 <__stack+0xf7e867dc>
    6460:	f0 e0 9f 00 	l.cust5 r7,r0,r19,0x38,0x0
    6464:	01 03 44 00 	l.j 40d7464 <__stack+0x3c57468>
    6468:	01 03 4c 00 	l.j 40d9468 <__stack+0x3c5946c>
    646c:	04 0a df f0 	l.jal 2be42c <__ram_length+0x23e42c>
    6470:	9f 00 01 03 	l.addi r24,r0,0x103
    6474:	4c 00 01 03 	l.maci r0,0x103
    6478:	54 00 03 08 	.word 0x54000308
    647c:	df 9f 00 01 	l.sh 0xffffe001(r31),r0
    6480:	03 54 00 01 	l.j fd506484 <__stack+0xfd086488>
    6484:	6a 88 00 02 	.word 0x6a880002
    6488:	30 9f 00 00 	.word 0x309f0000
    648c:	00 00 00 00 	l.j 648c <__rom_size-0x13ec0>
    6490:	00 00 00 01 	l.j 6494 <__rom_size-0x13eb8>
    6494:	07 68 00 01 	l.jal fda06498 <__stack+0xfd58649c>
    6498:	07 7c 00 06 	l.jal fdf064b0 <__stack+0xfda864b4>
    649c:	0c 00 df f1 	l.bnf 3e460 <__rom_size+0x24114>
    64a0:	00 9f 00 01 	l.j 27c64a4 <__stack+0x23464a8>
    64a4:	07 7c 00 01 	l.jal fdf064a8 <__stack+0xfda864ac>
    64a8:	07 84 00 04 	l.jal fe1064b8 <__stack+0xfdc864bc>
    64ac:	0a df f1 9f 	.word 0x0adff19f
    64b0:	00 01 07 84 	l.j 482c0 <__rom_size+0x2df74>
    64b4:	00 01 07 8c 	l.j 482e4 <__rom_size+0x2df98>
    64b8:	00 03 08 df 	l.j c8834 <__ram_length+0x48834>
    64bc:	9f 00 01 07 	l.addi r24,r0,0x107
    64c0:	8c 00 01 6a 	l.lbz r0,0x16a(r0)
    64c4:	88 00 02 30 	l.lws r0,0x230(r0)
    64c8:	9f 00 00 00 	l.addi r24,r0,0x0
    64cc:	00 00 00 00 	l.j 64cc <__rom_size-0x13e80>
    64d0:	00 00 01 0d 	l.j 6904 <__rom_size-0x13a48>
    64d4:	3c 00 01 0d 	.word 0x3c00010d
    64d8:	50 00 06 0c 	.word 0x5000060c
    64dc:	00 df f0 40 	l.j 38025dc <__stack+0x33825e0>
    64e0:	9f 00 01 0d 	l.addi r24,r0,0x10d
    64e4:	50 00 01 0d 	.word 0x5000010d
    64e8:	58 00 04 0a 	.word 0x5800040a
    64ec:	df f0 9f 00 	l.sh 0xffffff00(r16),r19
    64f0:	01 0d 58 00 	l.j 435c4f0 <__stack+0x3edc4f4>
    64f4:	01 0d 60 00 	l.j 435e4f4 <__stack+0x3ede4f8>
    64f8:	03 08 df 9f 	l.j fc23e374 <__stack+0xfbdbe378>
    64fc:	00 01 0d 60 	l.j 49a7c <__rom_size+0x2f730>
    6500:	00 01 6a 88 	l.j 60f20 <__rom_size+0x46bd4>
    6504:	00 02 30 9f 	l.j 92780 <__ram_length+0x12780>
	...
    6510:	00 01 11 70 	l.j 4aad0 <__rom_size+0x30784>
    6514:	00 01 11 88 	l.j 4ab34 <__rom_size+0x307e8>
    6518:	00 06 0c 00 	l.j 189518 <__ram_length+0x109518>
    651c:	df f0 64 9f 	l.sh 0xfffffc9f(r16),r12
    6520:	00 01 11 88 	l.j 4ab40 <__rom_size+0x307f4>
    6524:	00 01 11 90 	l.j 4ab64 <__rom_size+0x30818>
    6528:	00 04 0a df 	l.j 1090a4 <__ram_length+0x890a4>
    652c:	f0 9f 00 01 	l.cust5 r4,r31,r0,0x0,0x1
    6530:	11 90 00 01 	l.bf 6406534 <__stack+0x5f86538>
    6534:	11 98 00 03 	l.bf 6606540 <__stack+0x6186544>
    6538:	08 df 9f 00 	.word 0x08df9f00
    653c:	01 11 98 00 	l.j 446c53c <__stack+0x3fec540>
    6540:	01 6a 88 00 	l.j 5aa8540 <__stack+0x5628544>
    6544:	02 30 9f 00 	l.j f8c2e144 <__stack+0xf87ae148>
	...
    6550:	01 14 04 00 	l.j 4507550 <__stack+0x4087554>
    6554:	01 14 18 00 	l.j 450c554 <__stack+0x408c558>
    6558:	06 0c 00 df 	l.jal f83068d4 <__stack+0xf7e868d8>
    655c:	f1 80 9f 00 	l.cust5 r12,r0,r19,0x38,0x0
    6560:	01 14 18 00 	l.j 450c560 <__stack+0x408c564>
    6564:	01 14 20 00 	l.j 450e564 <__stack+0x408e568>
    6568:	04 0a df f1 	l.jal 2be52c <__ram_length+0x23e52c>
    656c:	9f 00 01 14 	l.addi r24,r0,0x114
    6570:	20 00 01 14 	l.sys 0x114
    6574:	28 00 03 08 	.word 0x28000308
    6578:	df 9f 00 01 	l.sh 0xffffe001(r31),r0
    657c:	14 28 00 01 	.word 0x14280001
    6580:	6a 88 00 02 	.word 0x6a880002
    6584:	30 9f 00 00 	.word 0x309f0000
    6588:	00 00 00 00 	l.j 6588 <__rom_size-0x13dc4>
    658c:	00 00 00 01 	l.j 6590 <__rom_size-0x13dbc>
    6590:	18 3c 00 01 	l.movhi r1,0x1
    6594:	18 54 00 06 	l.movhi r2,0x6
    6598:	0c 00 df f0 	l.bnf 3e558 <__rom_size+0x2420c>
    659c:	88 9f 00 01 	l.lws r4,0x1(r31)
    65a0:	18 54 00 01 	l.movhi r2,0x1
    65a4:	18 5c 00 04 	l.movhi r2,0x4
    65a8:	0a df f0 9f 	.word 0x0adff09f
    65ac:	00 01 18 5c 	l.j 4c71c <__rom_size+0x323d0>
    65b0:	00 01 18 64 	l.j 4c740 <__rom_size+0x323f4>
    65b4:	00 03 08 df 	l.j c8930 <__ram_length+0x48930>
    65b8:	9f 00 01 18 	l.addi r24,r0,0x118
    65bc:	64 00 01 6a 	.word 0x6400016a
    65c0:	88 00 02 30 	l.lws r0,0x230(r0)
    65c4:	9f 00 00 00 	l.addi r24,r0,0x0
    65c8:	00 00 00 00 	l.j 65c8 <__rom_size-0x13d84>
    65cc:	00 00 01 24 	l.j 6a5c <__rom_size-0x138f0>
    65d0:	68 00 01 24 	.word 0x68000124
    65d4:	80 00 02 30 	l.ld r0,0x230(r0)
    65d8:	9f 00 01 28 	l.addi r24,r0,0x128
    65dc:	f4 00 01 29 	l.cust6 
    65e0:	18 00 01 60 	l.movhi r0,0x160
	...
    65ec:	00 01 1b 60 	l.j 4d36c <__rom_size+0x33020>
    65f0:	00 01 1c d7 	l.j 4d94c <__rom_size+0x33600>
    65f4:	00 01 5b 00 	l.j 5d1f4 <__rom_size+0x42ea8>
    65f8:	01 1c d7 00 	l.j 473c1f8 <__stack+0x42bc1fc>
    65fc:	01 24 64 00 	l.j 491f5fc <__stack+0x449f600>
    6600:	01 6c 00 01 	l.j 5b06604 <__stack+0x5686608>
    6604:	26 e8 00 01 	l.rfe 
    6608:	38 54 00 01 	.word 0x38540001
    660c:	6c 00 01 3c 	.word 0x6c00013c
    6610:	70 00 01 3f 	l.cust1 
    6614:	74 00 01 6c 	l.cust2 
    6618:	00 01 43 a4 	l.j 574a8 <__rom_size+0x3d15c>
    661c:	00 01 66 f4 	l.j 601ec <__rom_size+0x45ea0>
    6620:	00 01 6c 00 	l.j 61620 <__rom_size+0x472d4>
    6624:	01 69 ac 00 	l.j 5a71624 <__stack+0x55f1628>
    6628:	01 69 cc 00 	l.j 5a79628 <__stack+0x55f962c>
    662c:	01 6c 00 01 	l.j 5b06630 <__stack+0x5686634>
    6630:	69 f8 00 01 	.word 0x69f80001
    6634:	6a 58 00 01 	.word 0x6a580001
    6638:	6c 00 00 00 	.word 0x6c000000
    663c:	00 00 00 00 	l.j 663c <__rom_size-0x13d10>
    6640:	00 00 01 1b 	l.j 6aac <__rom_size-0x138a0>
    6644:	60 00 01 1f 	.word 0x6000011f
    6648:	28 00 02 30 	lv.add.b r0,r0,r0
    664c:	9f 00 01 1f 	l.addi r24,r0,0x11f
    6650:	28 00 01 1f 	.word 0x2800011f
    6654:	4c 00 03 09 	l.maci r0,0x309
    6658:	ff 9f 00 01 	l.cust8 
    665c:	1f 4c 00 01 	.word 0x1f4c0001
    6660:	1f d8 00 02 	.word 0x1fd80002
    6664:	30 9f 00 01 	.word 0x309f0001
    6668:	1f d8 00 01 	.word 0x1fd80001
    666c:	24 80 00 01 	l.rfe 
    6670:	6a 00 01 26 	.word 0x6a000126
    6674:	e8 00 01 38 	.word 0xe8000138
    6678:	70 00 01 6a 	l.cust1 
    667c:	00 01 3c 70 	l.j 5583c <__rom_size+0x3b4f0>
    6680:	00 01 66 d8 	l.j 601e0 <__rom_size+0x45e94>
    6684:	00 01 6a 00 	l.j 60e84 <__rom_size+0x46b38>
    6688:	01 69 ac 00 	l.j 5a71688 <__stack+0x55f168c>
    668c:	01 69 cc 00 	l.j 5a7968c <__stack+0x55f9690>
    6690:	01 6a 00 01 	l.j 5a86694 <__stack+0x5606698>
    6694:	69 f8 00 01 	.word 0x69f80001
    6698:	6a 58 00 01 	.word 0x6a580001
    669c:	6a 00 00 00 	.word 0x6a000000
    66a0:	00 00 00 00 	l.j 66a0 <__rom_size-0x13cac>
    66a4:	00 00 01 1b 	l.j 6b10 <__rom_size-0x1383c>
    66a8:	60 00 01 1f 	.word 0x6000011f
    66ac:	4c 00 02 30 	l.maci r0,0x230
    66b0:	9f 00 01 1f 	l.addi r24,r0,0x11f
    66b4:	4c 00 01 1f 	l.maci r0,0x11f
    66b8:	68 00 03 09 	.word 0x68000309
    66bc:	ff 9f 00 01 	l.cust8 
    66c0:	1f 68 00 01 	.word 0x1f680001
    66c4:	1f d4 00 02 	.word 0x1fd40002
    66c8:	30 9f 00 01 	.word 0x309f0001
    66cc:	1f d8 00 01 	.word 0x1fd80001
    66d0:	24 70 00 01 	l.rfe 
    66d4:	64 00 01 26 	.word 0x64000126
    66d8:	e8 00 01 29 	.word 0xe8000129
    66dc:	9c 00 01 64 	l.addi r0,r0,0x164
    66e0:	00 01 2c ac 	l.j 51990 <__rom_size+0x37644>
    66e4:	00 01 33 68 	l.j 53484 <__rom_size+0x39138>
    66e8:	00 01 64 00 	l.j 5f6e8 <__rom_size+0x4539c>
    66ec:	01 34 d8 00 	l.j 4d3c6ec <__stack+0x48bc6f0>
    66f0:	01 38 70 00 	l.j 4e226f0 <__stack+0x49a26f4>
    66f4:	01 64 00 01 	l.j 59066f8 <__stack+0x54866fc>
    66f8:	3c 70 00 01 	.word 0x3c700001
    66fc:	3f f0 00 01 	.word 0x3ff00001
    6700:	64 00 01 3f 	.word 0x6400013f
    6704:	fc 00 01 40 	l.cust8 
    6708:	04 00 01 64 	l.jal 6c98 <__rom_size-0x136b4>
    670c:	00 01 40 34 	l.j 567dc <__rom_size+0x3c490>
    6710:	00 01 40 48 	l.j 56830 <__rom_size+0x3c4e4>
    6714:	00 01 64 00 	l.j 5f714 <__rom_size+0x453c8>
    6718:	01 40 54 00 	l.j 501b718 <__stack+0x4b9b71c>
    671c:	01 40 5c 00 	l.j 501d71c <__stack+0x4b9d720>
    6720:	01 64 00 01 	l.j 5906724 <__stack+0x5486728>
    6724:	43 a4 00 01 	.word 0x43a40001
    6728:	66 98 00 01 	.word 0x66980001
    672c:	64 00 01 69 	.word 0x64000169
    6730:	f8 00 01 6a 	l.cust7 
    6734:	58 00 01 64 	.word 0x58000164
	...
    6740:	00 01 1b 60 	l.j 4d4c0 <__rom_size+0x33174>
    6744:	00 01 1f d8 	l.j 4e6a4 <__rom_size+0x34358>
    6748:	00 02 30 9f 	l.j 929c4 <__ram_length+0x129c4>
    674c:	00 01 1f d8 	l.j 4e6ac <__rom_size+0x34360>
    6750:	00 01 23 1c 	l.j 4f3c0 <__rom_size+0x35074>
    6754:	00 01 60 00 	l.j 5e754 <__rom_size+0x44408>
    6758:	01 24 28 00 	l.j 4910758 <__stack+0x449075c>
    675c:	01 24 5c 00 	l.j 491d75c <__stack+0x449d760>
    6760:	01 60 00 01 	l.j 5806764 <__stack+0x5386768>
    6764:	26 e8 00 01 	l.rfe 
    6768:	28 d4 00 01 	.word 0x28d40001
    676c:	60 00 01 29 	.word 0x60000129
    6770:	18 00 01 29 	l.movhi r0,0x129
    6774:	ac 00 01 60 	l.xori r0,r0,0x160
    6778:	00 01 2c ac 	l.j 51a28 <__rom_size+0x376dc>
    677c:	00 01 2e 30 	l.j 5203c <__rom_size+0x37cf0>
    6780:	00 01 60 00 	l.j 5e780 <__rom_size+0x44434>
    6784:	01 2f 0c 00 	l.j 4bc9784 <__stack+0x4749788>
    6788:	01 33 64 00 	l.j 4cdf788 <__stack+0x485f78c>
    678c:	01 60 00 01 	l.j 5806790 <__stack+0x5386794>
    6790:	34 d8 00 01 	.word 0x34d80001
    6794:	35 ec 00 01 	.word 0x35ec0001
    6798:	60 00 01 37 	.word 0x60000137
    679c:	64 00 01 37 	.word 0x64000137
    67a0:	b8 00 01 60 	l.srli r0,r0,0x20
    67a4:	00 01 38 1c 	l.j 54814 <__rom_size+0x3a4c8>
    67a8:	00 01 38 70 	l.j 54968 <__rom_size+0x3a61c>
    67ac:	00 01 60 00 	l.j 5e7ac <__rom_size+0x44460>
    67b0:	01 3c 70 00 	l.j 4f227b0 <__stack+0x4aa27b4>
    67b4:	01 42 40 00 	l.j 50967b4 <__stack+0x4c167b8>
    67b8:	01 60 00 01 	l.j 58067bc <__stack+0x53867c0>
    67bc:	43 a4 00 01 	.word 0x43a40001
    67c0:	65 6c 00 01 	.word 0x656c0001
    67c4:	60 00 01 66 	.word 0x60000166
    67c8:	80 00 01 66 	l.ld r0,0x166(r0)
    67cc:	d8 00 01 60 	l.sb 0x160(r0),r0
    67d0:	00 01 69 ac 	l.j 60e80 <__rom_size+0x46b34>
    67d4:	00 01 69 cc 	l.j 60f04 <__rom_size+0x46bb8>
    67d8:	00 01 60 00 	l.j 5e7d8 <__rom_size+0x4448c>
    67dc:	01 69 f8 00 	l.j 5a847dc <__stack+0x56047e0>
    67e0:	01 6a 58 00 	l.j 5a9c7e0 <__stack+0x561c7e4>
    67e4:	01 60 00 00 	l.j 58067e4 <__stack+0x53867e8>
    67e8:	00 00 00 00 	l.j 67e8 <__rom_size-0x13b64>
    67ec:	00 00 00 01 	l.j 67f0 <__rom_size-0x13b5c>
    67f0:	1b 60 00 01 	l.movhi r27,0x1
    67f4:	1f d8 00 02 	.word 0x1fd80002
    67f8:	30 9f 00 01 	.word 0x309f0001
    67fc:	1f d8 00 01 	.word 0x1fd80001
    6800:	24 80 00 01 	l.rfe 
    6804:	5e 00 01 26 	.word 0x5e000126
    6808:	e8 00 01 29 	.word 0xe8000129
    680c:	74 00 01 5e 	l.cust2 
    6810:	00 01 2c ac 	l.j 51ac0 <__rom_size+0x37774>
    6814:	00 01 31 bc 	l.j 52f04 <__rom_size+0x38bb8>
    6818:	00 01 5e 00 	l.j 5e018 <__rom_size+0x43ccc>
    681c:	01 33 00 00 	l.j 4cc681c <__stack+0x4846820>
    6820:	01 33 60 00 	l.j 4cde820 <__stack+0x485e824>
    6824:	01 5e 00 01 	l.j 5786828 <__stack+0x530682c>
    6828:	34 d8 00 01 	.word 0x34d80001
    682c:	36 44 00 01 	.word 0x36440001
    6830:	5e 00 01 37 	.word 0x5e000137
    6834:	64 00 01 38 	.word 0x64000138
    6838:	54 00 01 5e 	.word 0x5400015e
    683c:	00 01 3c 70 	l.j 559fc <__rom_size+0x3b6b0>
    6840:	00 01 43 c8 	l.j 57760 <__rom_size+0x3d414>
    6844:	00 01 5e 00 	l.j 5e044 <__rom_size+0x43cf8>
    6848:	01 44 d0 00 	l.j 513a848 <__stack+0x4cba84c>
    684c:	01 45 74 00 	l.j 516384c <__stack+0x4ce3850>
    6850:	01 5e 00 01 	l.j 5786854 <__stack+0x5306858>
    6854:	46 7c 00 01 	l.jr r0
    6858:	4b 50 00 01 	l.jalr r0
    685c:	5e 00 01 4d 	.word 0x5e00014d
    6860:	00 00 01 4f 	l.j 6d9c <__rom_size-0x135b0>
    6864:	a0 00 01 5e 	l.addic r0,r0,0x15e
    6868:	00 01 51 dc 	l.j 5afd8 <__rom_size+0x40c8c>
    686c:	00 01 54 9c 	l.j 5badc <__rom_size+0x41790>
    6870:	00 01 5e 00 	l.j 5e070 <__rom_size+0x43d24>
    6874:	01 58 54 00 	l.j 561b874 <__stack+0x519b878>
    6878:	01 61 fc 00 	l.j 5885878 <__stack+0x540587c>
    687c:	01 5e 00 01 	l.j 5786880 <__stack+0x5306884>
    6880:	63 c4 00 01 	.word 0x63c40001
    6884:	65 f8 00 01 	.word 0x65f80001
    6888:	5e 00 01 66 	.word 0x5e000166
    688c:	80 00 01 6a 	l.ld r0,0x16a(r0)
    6890:	58 00 01 5e 	.word 0x5800015e
	...
    689c:	00 01 1b 60 	l.j 4d61c <__rom_size+0x332d0>
    68a0:	00 01 1f 74 	l.j 4e670 <__rom_size+0x34324>
    68a4:	00 02 30 9f 	l.j 92b20 <__ram_length+0x12b20>
    68a8:	00 01 1f 74 	l.j 4e678 <__rom_size+0x3432c>
    68ac:	00 01 1f 88 	l.j 4e6cc <__rom_size+0x34380>
    68b0:	00 03 09 ff 	l.j c90ac <__ram_length+0x490ac>
    68b4:	9f 00 01 1f 	l.addi r24,r0,0x11f
    68b8:	88 00 01 1f 	l.lws r0,0x11f(r0)
    68bc:	b4 00 02 30 	l.mfspr r0,r0,0x230
    68c0:	9f 00 01 1f 	l.addi r24,r0,0x11f
    68c4:	bc 00 01 1f 	l.sfeqi r0,0x11f
    68c8:	cc 00 02 30 	.word 0xcc000230
    68cc:	9f 00 01 1f 	l.addi r24,r0,0x11f
    68d0:	d8 00 01 24 	l.sb 0x124(r0),r0
    68d4:	2c 00 01 66 	.word 0x2c000166
    68d8:	00 01 26 e8 	l.j 50478 <__rom_size+0x3612c>
    68dc:	00 01 29 6c 	l.j 50e8c <__rom_size+0x36b40>
    68e0:	00 01 66 00 	l.j 600e0 <__rom_size+0x45d94>
    68e4:	01 2c ac 00 	l.j 4b318e4 <__stack+0x46b18e8>
    68e8:	01 33 58 00 	l.j 4cdc8e8 <__stack+0x485c8ec>
    68ec:	01 66 00 01 	l.j 59868f0 <__stack+0x55068f4>
    68f0:	34 d8 00 01 	.word 0x34d80001
    68f4:	38 70 00 01 	.word 0x38700001
    68f8:	66 00 01 3c 	.word 0x6600013c
    68fc:	70 00 01 3c 	l.cust1 
    6900:	98 00 01 66 	l.lhs r0,0x166(r0)
    6904:	00 01 43 a4 	l.j 57794 <__rom_size+0x3d448>
    6908:	00 01 67 04 	l.j 60518 <__rom_size+0x461cc>
    690c:	00 01 66 00 	l.j 6010c <__rom_size+0x45dc0>
    6910:	01 69 ac 00 	l.j 5a71910 <__stack+0x55f1914>
    6914:	01 69 cc 00 	l.j 5a79914 <__stack+0x55f9918>
    6918:	01 66 00 01 	l.j 598691c <__stack+0x5506920>
    691c:	69 f8 00 01 	.word 0x69f80001
    6920:	6a 58 00 01 	.word 0x6a580001
    6924:	66 00 00 00 	.word 0x66000000
    6928:	00 00 00 00 	l.j 6928 <__rom_size-0x13a24>
    692c:	00 00 01 1b 	l.j 6d98 <__rom_size-0x135b4>
    6930:	60 00 01 1f 	.word 0x6000011f
    6934:	68 00 02 30 	.word 0x68000230
    6938:	9f 00 01 1f 	l.addi r24,r0,0x11f
    693c:	68 00 01 1f 	.word 0x6800011f
    6940:	74 00 03 09 	l.cust2 
    6944:	ff 9f 00 01 	l.cust8 
    6948:	1f 74 00 01 	.word 0x1f740001
    694c:	1f b0 00 02 	.word 0x1fb00002
    6950:	30 9f 00 01 	.word 0x309f0001
    6954:	1f bc 00 01 	.word 0x1fbc0001
    6958:	1f cc 00 02 	.word 0x1fcc0002
    695c:	30 9f 00 01 	.word 0x309f0001
    6960:	1f d8 00 01 	.word 0x1fd80001
    6964:	24 80 00 01 	l.rfe 
    6968:	68 00 01 26 	.word 0x68000126
    696c:	e8 00 01 33 	.word 0xe8000133
    6970:	50 00 01 68 	.word 0x50000168
    6974:	00 01 34 d8 	l.j 53cd4 <__rom_size+0x39988>
    6978:	00 01 38 4c 	l.j 54aa8 <__rom_size+0x3a75c>
    697c:	00 01 68 00 	l.j 6097c <__rom_size+0x46630>
    6980:	01 3c 70 00 	l.j 4f22980 <__stack+0x4aa2984>
    6984:	01 3c ac 00 	l.j 4f31984 <__stack+0x4ab1988>
    6988:	01 68 00 01 	l.j 5a0698c <__stack+0x5586990>
    698c:	43 a4 00 01 	.word 0x43a40001
    6990:	66 e0 00 01 	.word 0x66e00001
    6994:	68 00 01 69 	.word 0x68000169
    6998:	ac 00 01 69 	l.xori r0,r0,0x169
    699c:	cc 00 01 68 	.word 0xcc000168
    69a0:	00 01 69 f8 	l.j 61180 <__rom_size+0x46e34>
    69a4:	00 01 6a 58 	l.j 61304 <__rom_size+0x46fb8>
    69a8:	00 01 68 00 	l.j 609a8 <__rom_size+0x4665c>
	...
    69b4:	01 1b 60 00 	l.j 46de9b4 <__stack+0x425e9b8>
    69b8:	01 1f d8 00 	l.j 47fc9b8 <__stack+0x437c9bc>
    69bc:	02 30 9f 00 	l.j f8c2e5bc <__stack+0xf87ae5c0>
    69c0:	01 1f d8 00 	l.j 47fc9c0 <__stack+0x437c9c4>
    69c4:	01 24 60 00 	l.j 491e9c4 <__stack+0x449e9c8>
    69c8:	01 62 00 01 	l.j 58869cc <__stack+0x54069d0>
    69cc:	26 e8 00 01 	l.rfe 
    69d0:	29 c0 00 01 	.word 0x29c00001
    69d4:	62 00 01 2c 	.word 0x6200012c
    69d8:	ac 00 01 33 	l.xori r0,r0,0x133
    69dc:	5c 00 01 62 	.word 0x5c000162
    69e0:	00 01 34 d8 	l.j 53d40 <__rom_size+0x399f4>
    69e4:	00 01 38 64 	l.j 54b74 <__rom_size+0x3a828>
    69e8:	00 01 62 00 	l.j 5f1e8 <__rom_size+0x44e9c>
    69ec:	01 3c 70 00 	l.j 4f229ec <__stack+0x4aa29f0>
    69f0:	01 3c b8 00 	l.j 4f349f0 <__stack+0x4ab49f4>
    69f4:	01 62 00 01 	l.j 58869f8 <__stack+0x54069fc>
    69f8:	43 a4 00 01 	.word 0x43a40001
    69fc:	66 b8 00 01 	.word 0x66b80001
    6a00:	62 00 01 69 	.word 0x62000169
    6a04:	ac 00 01 69 	l.xori r0,r0,0x169
    6a08:	cc 00 01 62 	.word 0xcc000162
    6a0c:	00 01 69 f8 	l.j 611ec <__rom_size+0x46ea0>
    6a10:	00 01 6a 58 	l.j 61370 <__rom_size+0x47024>
    6a14:	00 01 62 00 	l.j 5f214 <__rom_size+0x44ec8>
	...
    6a20:	01 1b 60 00 	l.j 46dea20 <__stack+0x425ea24>
    6a24:	01 1f d8 00 	l.j 47fca24 <__stack+0x437ca28>
    6a28:	02 30 9f 00 	l.j f8c2e628 <__stack+0xf87ae62c>
    6a2c:	01 1f d8 00 	l.j 47fca2c <__stack+0x437ca30>
    6a30:	01 22 a8 00 	l.j 48b0a30 <__stack+0x4430a34>
    6a34:	01 52 00 01 	l.j 5486a38 <__stack+0x5006a3c>
    6a38:	23 00 00 01 	.word 0x23000001
    6a3c:	23 04 00 01 	.word 0x23040001
    6a40:	52 00 01 24 	.word 0x52000124
    6a44:	28 00 01 24 	lv.any_gt.b r0,r0,r0
    6a48:	30 00 01 52 	.word 0x30000152
    6a4c:	00 01 26 e8 	l.j 505ec <__rom_size+0x362a0>
    6a50:	00 01 26 f8 	l.j 50630 <__rom_size+0x362e4>
    6a54:	00 01 52 00 	l.j 5b254 <__rom_size+0x40f08>
    6a58:	01 27 08 00 	l.j 49c8a58 <__stack+0x4548a5c>
    6a5c:	01 27 30 00 	l.j 49d2a5c <__stack+0x4552a60>
    6a60:	01 52 00 01 	l.j 5486a64 <__stack+0x5006a68>
    6a64:	27 50 00 01 	l.rfe 
    6a68:	27 5c 00 01 	l.rfe 
    6a6c:	52 00 01 29 	.word 0x52000129
    6a70:	3c 00 01 29 	.word 0x3c000129
    6a74:	40 00 01 52 	.word 0x40000152
    6a78:	00 01 2c ac 	l.j 51d28 <__rom_size+0x379dc>
    6a7c:	00 01 2c b4 	l.j 51d4c <__rom_size+0x37a00>
    6a80:	00 01 52 00 	l.j 5b280 <__rom_size+0x40f34>
    6a84:	01 2e 04 00 	l.j 4b87a84 <__stack+0x4707a88>
    6a88:	01 2e 14 00 	l.j 4b8ba88 <__stack+0x470ba8c>
    6a8c:	01 52 00 01 	l.j 5486a90 <__stack+0x5006a94>
    6a90:	2e 24 00 01 	.word 0x2e240001
    6a94:	2e 38 00 01 	.word 0x2e380001
    6a98:	52 00 01 2f 	.word 0x5200012f
    6a9c:	0c 00 01 2f 	l.bnf 6f58 <__rom_size-0x133f4>
    6aa0:	18 00 01 52 	l.movhi r0,0x152
    6aa4:	00 01 2f 34 	l.j 52774 <__rom_size+0x38428>
    6aa8:	00 01 2f 40 	l.j 527a8 <__rom_size+0x3845c>
    6aac:	00 01 52 00 	l.j 5b2ac <__rom_size+0x40f60>
    6ab0:	01 2f 58 00 	l.j 4bdcab0 <__stack+0x475cab4>
    6ab4:	01 2f 60 00 	l.j 4bdeab4 <__stack+0x475eab8>
    6ab8:	01 52 00 01 	l.j 5486abc <__stack+0x5006ac0>
    6abc:	30 98 00 01 	.word 0x30980001
    6ac0:	30 a8 00 01 	.word 0x30a80001
    6ac4:	52 00 01 31 	.word 0x52000131
    6ac8:	9c 00 01 31 	l.addi r0,r0,0x131
    6acc:	a0 00 01 52 	l.addic r0,r0,0x152
    6ad0:	00 01 33 30 	l.j 53790 <__rom_size+0x39444>
    6ad4:	00 01 33 34 	l.j 537a4 <__rom_size+0x39458>
    6ad8:	00 01 52 00 	l.j 5b2d8 <__rom_size+0x40f8c>
    6adc:	01 34 d8 00 	l.j 4d3cadc <__stack+0x48bcae0>
    6ae0:	01 34 dc 00 	l.j 4d3dae0 <__stack+0x48bdae4>
    6ae4:	01 52 00 01 	l.j 5486ae8 <__stack+0x5006aec>
    6ae8:	37 64 00 01 	.word 0x37640001
    6aec:	37 74 00 01 	.word 0x37740001
    6af0:	52 00 01 37 	.word 0x52000137
    6af4:	a0 00 01 37 	l.addic r0,r0,0x137
    6af8:	b0 00 01 52 	l.muli r0,r0,0x152
    6afc:	00 01 38 1c 	l.j 54b6c <__rom_size+0x3a820>
    6b00:	00 01 38 20 	l.j 54b80 <__rom_size+0x3a834>
    6b04:	00 01 52 00 	l.j 5b304 <__rom_size+0x40fb8>
    6b08:	01 3c 70 00 	l.j 4f22b08 <__stack+0x4aa2b0c>
    6b0c:	01 3c 74 00 	l.j 4f23b0c <__stack+0x4aa3b10>
    6b10:	01 52 00 01 	l.j 5486b14 <__stack+0x5006b18>
    6b14:	43 a4 00 01 	.word 0x43a40001
    6b18:	43 a8 00 01 	.word 0x43a80001
    6b1c:	52 00 01 44 	.word 0x52000144
    6b20:	d0 00 01 44 	l.sd 0x144(r0),r0
    6b24:	e0 00 01 52 	.word 0xe0000152
    6b28:	00 01 45 54 	l.j 58078 <__rom_size+0x3dd2c>
    6b2c:	00 01 45 58 	l.j 5808c <__rom_size+0x3dd40>
    6b30:	00 01 52 00 	l.j 5b330 <__rom_size+0x40fe4>
    6b34:	01 46 7c 00 	l.j 51a5b34 <__stack+0x4d25b38>
    6b38:	01 46 8c 00 	l.j 51a9b38 <__stack+0x4d29b3c>
    6b3c:	01 52 00 01 	l.j 5486b40 <__stack+0x5006b44>
    6b40:	47 38 00 01 	l.jr r0
    6b44:	47 3c 00 01 	l.jr r0
    6b48:	52 00 01 48 	.word 0x52000148
    6b4c:	84 00 01 48 	l.lwz r0,0x148(r0)
    6b50:	94 00 01 52 	l.lhz r0,0x152(r0)
    6b54:	00 01 48 b4 	l.j 58e24 <__rom_size+0x3ead8>
    6b58:	00 01 48 c0 	l.j 58e58 <__rom_size+0x3eb0c>
    6b5c:	00 01 52 00 	l.j 5b35c <__rom_size+0x41010>
    6b60:	01 48 ec 00 	l.j 5241b60 <__stack+0x4dc1b64>
    6b64:	01 48 f8 00 	l.j 5244b64 <__stack+0x4dc4b68>
    6b68:	01 52 00 01 	l.j 5486b6c <__stack+0x5006b70>
    6b6c:	49 24 00 01 	l.jalr r0
    6b70:	49 30 00 01 	l.jalr r0
    6b74:	52 00 01 4b 	.word 0x5200014b
    6b78:	20 00 01 4b 	l.sys 0x14b
    6b7c:	28 00 01 52 	.word 0x28000152
    6b80:	00 01 4d 00 	l.j 59f80 <__rom_size+0x3fc34>
    6b84:	00 01 4d 10 	l.j 59fc4 <__rom_size+0x3fc78>
    6b88:	00 01 52 00 	l.j 5b388 <__rom_size+0x4103c>
    6b8c:	01 4f 60 00 	l.j 53deb8c <__stack+0x4f5eb90>
    6b90:	01 4f 68 00 	l.j 53e0b90 <__stack+0x4f60b94>
    6b94:	01 52 00 01 	l.j 5486b98 <__stack+0x5006b9c>
    6b98:	51 dc 00 01 	.word 0x51dc0001
    6b9c:	51 f4 00 01 	.word 0x51f40001
    6ba0:	52 00 01 53 	.word 0x52000153
    6ba4:	ec 00 01 53 	.word 0xec000153
    6ba8:	f4 00 01 52 	l.cust6 
    6bac:	00 01 58 54 	l.j 5ccfc <__rom_size+0x429b0>
    6bb0:	00 01 58 64 	l.j 5cd40 <__rom_size+0x429f4>
    6bb4:	00 01 52 00 	l.j 5b3b4 <__rom_size+0x41068>
    6bb8:	01 59 f0 00 	l.j 5682bb8 <__stack+0x5202bbc>
    6bbc:	01 59 f4 00 	l.j 5683bbc <__stack+0x5203bc0>
    6bc0:	01 52 00 01 	l.j 5486bc4 <__stack+0x5006bc8>
    6bc4:	5c 2c 00 01 	.word 0x5c2c0001
    6bc8:	5c 30 00 01 	.word 0x5c300001
    6bcc:	52 00 01 5c 	.word 0x5200015c
    6bd0:	b8 00 01 5c 	l.srli r0,r0,0x1c
    6bd4:	c0 00 01 52 	l.mtspr r0,r0,0x152
    6bd8:	00 01 5d d4 	l.j 5e328 <__rom_size+0x43fdc>
    6bdc:	00 01 5d e4 	l.j 5e36c <__rom_size+0x44020>
    6be0:	00 01 52 00 	l.j 5b3e0 <__rom_size+0x41094>
    6be4:	01 5f 78 00 	l.j 57e4be4 <__stack+0x5364be8>
    6be8:	01 5f 80 00 	l.j 57e6be8 <__stack+0x5366bec>
    6bec:	01 52 00 01 	l.j 5486bf0 <__stack+0x5006bf4>
    6bf0:	60 8c 00 01 	.word 0x608c0001
    6bf4:	60 94 00 01 	.word 0x60940001
    6bf8:	52 00 01 61 	.word 0x52000161
    6bfc:	a0 00 01 61 	l.addic r0,r0,0x161
    6c00:	b4 00 01 52 	l.mfspr r0,r0,0x152
    6c04:	00 01 61 d8 	l.j 5f364 <__rom_size+0x45018>
    6c08:	00 01 61 dc 	l.j 5f378 <__rom_size+0x4502c>
    6c0c:	00 01 52 00 	l.j 5b40c <__rom_size+0x410c0>
    6c10:	01 63 c4 00 	l.j 58f7c10 <__stack+0x5477c14>
    6c14:	01 63 dc 00 	l.j 58fdc14 <__stack+0x547dc18>
    6c18:	01 52 00 01 	l.j 5486c1c <__stack+0x5006c20>
    6c1c:	65 44 00 01 	.word 0x65440001
    6c20:	65 48 00 01 	.word 0x65480001
    6c24:	52 00 01 66 	.word 0x52000166
    6c28:	80 00 01 66 	l.ld r0,0x166(r0)
    6c2c:	90 00 01 52 	l.lbs r0,0x152(r0)
    6c30:	00 01 69 f8 	l.j 61410 <__rom_size+0x470c4>
    6c34:	00 01 6a 08 	l.j 61454 <__rom_size+0x47108>
    6c38:	00 01 52 00 	l.j 5b438 <__rom_size+0x410ec>
    6c3c:	01 6a 14 00 	l.j 5a8bc3c <__stack+0x560bc40>
    6c40:	01 6a 20 00 	l.j 5a8ec40 <__stack+0x560ec44>
    6c44:	01 52 00 01 	l.j 5486c48 <__stack+0x5006c4c>
    6c48:	6a 30 00 01 	.word 0x6a300001
    6c4c:	6a 34 00 01 	.word 0x6a340001
    6c50:	52 00 00 00 	.word 0x52000000
    6c54:	00 00 00 00 	l.j 6c54 <__rom_size-0x136f8>
    6c58:	00 00 01 42 	l.j 7160 <__rom_size-0x131ec>
    6c5c:	40 00 01 42 	.word 0x40000142
    6c60:	74 00 01 5b 	l.cust2 
    6c64:	00 01 42 74 	l.j 57634 <__rom_size+0x3d2e8>
    6c68:	00 01 42 84 	l.j 57678 <__rom_size+0x3d32c>
    6c6c:	00 01 60 00 	l.j 5ec6c <__rom_size+0x44920>
    6c70:	01 42 84 00 	l.j 50a7c70 <__stack+0x4c27c74>
    6c74:	01 43 80 00 	l.j 50e6c74 <__stack+0x4c66c78>
    6c78:	01 60 00 00 	l.j 5806c78 <__stack+0x5386c7c>
    6c7c:	00 00 00 00 	l.j 6c7c <__rom_size-0x136d0>
    6c80:	00 00 00 01 	l.j 6c84 <__rom_size-0x136c8>
    6c84:	56 0c 00 01 	.word 0x560c0001
    6c88:	56 40 00 01 	.word 0x56400001
    6c8c:	52 00 01 57 	.word 0x52000157
    6c90:	a4 00 01 57 	l.andi r0,r0,0x157
    6c94:	e4 00 01 52 	l.sfeq r0,r0
	...
    6ca0:	00 01 5c 2c 	l.j 5dd50 <__rom_size+0x43a04>
    6ca4:	00 01 5c 40 	l.j 5dda4 <__rom_size+0x43a58>
    6ca8:	00 03 08 38 	l.j c8d88 <__ram_length+0x48d88>
    6cac:	9f 00 00 00 	l.addi r24,r0,0x0
    6cb0:	00 00 00 00 	l.j 6cb0 <__rom_size-0x1369c>
    6cb4:	00 00 01 5c 	l.j 7224 <__rom_size-0x13128>
    6cb8:	2c 00 01 5c 	.word 0x2c00015c
    6cbc:	b8 00 06 03 	l.slli r0,r0,0x3
    6cc0:	00 42 0b 80 	l.j 1089ac0 <__stack+0xc09ac4>
    6cc4:	9f 00 00 00 	l.addi r24,r0,0x0
    6cc8:	00 00 00 00 	l.j 6cc8 <__rom_size-0x13684>
    6ccc:	00 00 01 5c 	l.j 723c <__rom_size-0x13110>
    6cd0:	2c 00 01 5c 	.word 0x2c00015c
    6cd4:	b8 00 06 03 	l.slli r0,r0,0x3
    6cd8:	00 41 cc dc 	l.j 107a048 <__stack+0xbfa04c>
    6cdc:	9f 00 00 00 	l.addi r24,r0,0x0
    6ce0:	00 00 00 00 	l.j 6ce0 <__rom_size-0x1366c>
    6ce4:	00 00 01 5c 	l.j 7254 <__rom_size-0x130f8>
    6ce8:	38 00 01 5c 	.word 0x3800015c
    6cec:	40 00 06 03 	.word 0x40000603
    6cf0:	00 41 cc dc 	l.j 107a060 <__stack+0xbfa064>
    6cf4:	9f 00 01 5c 	l.addi r24,r0,0x15c
    6cf8:	40 00 01 5c 	.word 0x4000015c
    6cfc:	58 00 03 72 	.word 0x58000372
    6d00:	01 9f 00 01 	l.j 67c6d04 <__stack+0x6346d08>
    6d04:	5c 58 00 01 	.word 0x5c580001
    6d08:	5c 74 00 01 	.word 0x5c740001
    6d0c:	52 00 01 5c 	.word 0x5200015c
    6d10:	74 00 01 5c 	l.cust2 
    6d14:	78 00 03 72 	l.cust3 
    6d18:	01 9f 00 00 	l.j 67c6d18 <__stack+0x6346d1c>
    6d1c:	00 00 00 00 	l.j 6d1c <__rom_size-0x13630>
    6d20:	00 00 00 01 	l.j 6d24 <__rom_size-0x13628>
    6d24:	5c 38 00 01 	.word 0x5c380001
    6d28:	5c 40 00 06 	.word 0x5c400006
    6d2c:	03 00 42 0b 	l.j fc017558 <__stack+0xfbb9755c>
    6d30:	80 9f 00 01 	l.ld r4,0x1(r31)
    6d34:	5c 40 00 01 	.word 0x5c400001
    6d38:	5c 58 00 03 	.word 0x5c580003
    6d3c:	73 01 9f 00 	l.cust1 
    6d40:	01 5c 58 00 	l.j 571cd40 <__stack+0x529cd44>
    6d44:	01 5c 74 00 	l.j 5723d44 <__stack+0x52a3d48>
    6d48:	01 53 00 01 	l.j 54c6d4c <__stack+0x5046d50>
    6d4c:	5c 74 00 01 	.word 0x5c740001
    6d50:	5c 98 00 03 	.word 0x5c980003
    6d54:	73 01 9f 00 	l.cust1 
    6d58:	01 5c 98 00 	l.j 572cd58 <__stack+0x52acd5c>
    6d5c:	01 5c a4 00 	l.j 572fd5c <__stack+0x52afd60>
    6d60:	01 53 00 00 	l.j 54c6d60 <__stack+0x5046d64>
    6d64:	00 00 00 00 	l.j 6d64 <__rom_size-0x135e8>
    6d68:	00 00 00 01 	l.j 6d6c <__rom_size-0x135e0>
    6d6c:	5c 38 00 01 	.word 0x5c380001
    6d70:	5c 40 00 02 	.word 0x5c400002
    6d74:	30 9f 00 01 	.word 0x309f0001
    6d78:	5c 40 00 01 	.word 0x5c400001
    6d7c:	5c 58 00 12 	.word 0x5c580012
    6d80:	72 00 94 01 	l.cust1 
    6d84:	48 24 48 26 	l.jalr r9
    6d88:	73 00 94 01 	l.cust1 
    6d8c:	48 24 48 26 	l.jalr r9
    6d90:	1c 9f 00 01 	.word 0x1c9f0001
    6d94:	5c 58 00 01 	.word 0x5c580001
    6d98:	5c 74 00 02 	.word 0x5c740002
    6d9c:	30 9f 00 01 	.word 0x309f0001
    6da0:	5c 74 00 01 	.word 0x5c740001
    6da4:	5c 78 00 12 	.word 0x5c780012
    6da8:	72 00 94 01 	l.cust1 
    6dac:	48 24 48 26 	l.jalr r9
    6db0:	73 00 94 01 	l.cust1 
    6db4:	48 24 48 26 	l.jalr r9
    6db8:	1c 9f 00 01 	.word 0x1c9f0001
    6dbc:	5c 98 00 01 	.word 0x5c980001
    6dc0:	5c b8 00 02 	.word 0x5cb80002
    6dc4:	30 9f 00 00 	.word 0x309f0000
    6dc8:	00 00 00 00 	l.j 6dc8 <__rom_size-0x13584>
    6dcc:	00 00 00 01 	l.j 6dd0 <__rom_size-0x1357c>
    6dd0:	4d b4 00 01 	l.maci r20,0x1
    6dd4:	4d b8 00 01 	l.maci r24,0x1
    6dd8:	52 00 01 4d 	.word 0x5200014d
    6ddc:	b8 00 01 4d 	l.srli r0,r0,0xd
    6de0:	c8 00 01 52 	.word 0xc8000152
    6de4:	00 01 4d c8 	l.j 5a504 <__rom_size+0x401b8>
    6de8:	00 01 4d cc 	l.j 5a518 <__rom_size+0x401cc>
    6dec:	00 01 52 00 	l.j 5b5ec <__rom_size+0x412a0>
	...
    6df8:	01 49 4c 00 	l.j 5259df8 <__stack+0x4dd9dfc>
    6dfc:	01 4b 08 00 	l.j 52c8dfc <__stack+0x4e48e00>
    6e00:	06 03 00 41 	l.jal f80c6f04 <__stack+0xf7c46f08>
    6e04:	cd 40 9f 00 	.word 0xcd409f00
	...
    6e10:	01 49 a8 00 	l.j 5270e10 <__stack+0x4df0e14>
    6e14:	01 49 b4 00 	l.j 5273e14 <__stack+0x4df3e18>
    6e18:	04 0a 04 00 	l.jal 287e18 <__ram_length+0x207e18>
    6e1c:	9f 00 00 00 	l.addi r24,r0,0x0
    6e20:	00 00 00 00 	l.j 6e20 <__rom_size-0x1352c>
    6e24:	00 00 01 49 	l.j 7348 <__rom_size-0x13004>
    6e28:	a8 00 01 4a 	l.ori r0,r0,0x14a
    6e2c:	04 00 02 30 	l.jal 76ec <__rom_size-0x12c60>
    6e30:	9f 00 00 00 	l.addi r24,r0,0x0
    6e34:	00 00 00 00 	l.j 6e34 <__rom_size-0x13518>
    6e38:	00 00 01 49 	l.j 735c <__rom_size-0x12ff0>
    6e3c:	a8 00 01 4a 	l.ori r0,r0,0x14a
    6e40:	04 00 06 03 	l.jal 864c <__rom_size-0x11d00>
    6e44:	00 41 a4 dc 	l.j 10701b4 <__stack+0xbf01b8>
    6e48:	9f 00 00 00 	l.addi r24,r0,0x0
    6e4c:	00 00 00 00 	l.j 6e4c <__rom_size-0x13500>
    6e50:	00 00 01 49 	l.j 7374 <__rom_size-0x12fd8>
    6e54:	ac 00 01 49 	l.xori r0,r0,0x149
    6e58:	b4 00 06 03 	l.mfspr r0,r0,0x603
    6e5c:	00 41 a4 dc 	l.j 10701cc <__stack+0xbf01d0>
    6e60:	9f 00 01 49 	l.addi r24,r0,0x149
    6e64:	b4 00 01 49 	l.mfspr r0,r0,0x149
    6e68:	bc 00 01 52 	l.sfeqi r0,0x152
    6e6c:	00 01 49 bc 	l.j 5955c <__rom_size+0x3f210>
    6e70:	00 01 4a 04 	l.j 59680 <__rom_size+0x3f334>
    6e74:	00 01 52 00 	l.j 5b674 <__rom_size+0x41328>
	...
    6e80:	01 4a 70 00 	l.j 52a2e80 <__stack+0x4e22e84>
    6e84:	01 4a 78 00 	l.j 52a4e84 <__stack+0x4e24e88>
    6e88:	04 0a 04 00 	l.jal 287e88 <__ram_length+0x207e88>
    6e8c:	9f 00 00 00 	l.addi r24,r0,0x0
    6e90:	00 00 00 00 	l.j 6e90 <__rom_size-0x134bc>
    6e94:	00 00 01 4a 	l.j 73bc <__rom_size-0x12f90>
    6e98:	70 00 01 4a 	l.cust1 
    6e9c:	e4 00 02 30 	l.sfeq r0,r0
    6ea0:	9f 00 00 00 	l.addi r24,r0,0x0
    6ea4:	00 00 00 00 	l.j 6ea4 <__rom_size-0x134a8>
    6ea8:	00 00 01 4a 	l.j 73d0 <__rom_size-0x12f7c>
    6eac:	70 00 01 4a 	l.cust1 
    6eb0:	e4 00 06 03 	l.sfeq r0,r0
    6eb4:	00 41 a4 dc 	l.j 1070224 <__stack+0xbf0228>
    6eb8:	9f 00 00 00 	l.addi r24,r0,0x0
    6ebc:	00 00 00 00 	l.j 6ebc <__rom_size-0x13490>
    6ec0:	00 00 01 4a 	l.j 73e8 <__rom_size-0x12f64>
    6ec4:	70 00 01 4a 	l.cust1 
    6ec8:	78 00 06 03 	l.cust3 
    6ecc:	00 41 a4 dc 	l.j 107023c <__stack+0xbf0240>
    6ed0:	9f 00 01 4a 	l.addi r24,r0,0x14a
    6ed4:	78 00 01 4a 	l.cust3 
    6ed8:	84 00 01 52 	l.lwz r0,0x152(r0)
    6edc:	00 01 4a 84 	l.j 598ec <__rom_size+0x3f5a0>
    6ee0:	00 01 4a e4 	l.j 59a70 <__rom_size+0x3f724>
    6ee4:	00 01 52 00 	l.j 5b6e4 <__rom_size+0x41398>
	...
    6ef0:	01 42 a4 00 	l.j 50afef0 <__stack+0x4c2fef4>
    6ef4:	01 42 b0 00 	l.j 50b2ef4 <__stack+0x4c32ef8>
    6ef8:	04 0a 01 05 	l.jal 28730c <__ram_length+0x20730c>
    6efc:	9f 00 00 00 	l.addi r24,r0,0x0
    6f00:	00 00 00 00 	l.j 6f00 <__rom_size-0x1344c>
    6f04:	00 00 01 42 	l.j 740c <__rom_size-0x12f40>
    6f08:	a4 00 01 43 	l.andi r0,r0,0x143
    6f0c:	80 00 06 03 	l.ld r0,0x603(r0)
    6f10:	00 41 cb a4 	l.j 1079da0 <__stack+0xbf9da4>
    6f14:	9f 00 00 00 	l.addi r24,r0,0x0
    6f18:	00 00 00 00 	l.j 6f18 <__rom_size-0x13434>
    6f1c:	00 00 01 42 	l.j 7424 <__rom_size-0x12f28>
    6f20:	a4 00 01 43 	l.andi r0,r0,0x143
    6f24:	80 00 02 30 	l.ld r0,0x230(r0)
    6f28:	9f 00 00 00 	l.addi r24,r0,0x0
    6f2c:	00 00 00 00 	l.j 6f2c <__rom_size-0x13420>
    6f30:	00 00 01 42 	l.j 7438 <__rom_size-0x12f14>
    6f34:	a4 00 01 42 	l.andi r0,r0,0x142
    6f38:	b0 00 06 03 	l.muli r0,r0,0x603
    6f3c:	00 41 cb a4 	l.j 1079dcc <__stack+0xbf9dd0>
    6f40:	9f 00 01 42 	l.addi r24,r0,0x142
    6f44:	b0 00 01 42 	l.muli r0,r0,0x142
    6f48:	b8 00 01 55 	l.srli r0,r0,0x15
    6f4c:	00 01 42 b8 	l.j 57a2c <__rom_size+0x3d6e0>
    6f50:	00 01 42 d8 	l.j 57ab0 <__rom_size+0x3d764>
    6f54:	00 01 55 00 	l.j 5c354 <__rom_size+0x42008>
    6f58:	01 42 d8 00 	l.j 50bcf58 <__stack+0x4c3cf5c>
    6f5c:	01 42 df 00 	l.j 50beb5c <__stack+0x4c3eb60>
    6f60:	04 73 85 02 	l.jal 1ce8368 <__stack+0x186836c>
    6f64:	9f 00 00 00 	l.addi r24,r0,0x0
    6f68:	00 00 00 00 	l.j 6f68 <__rom_size-0x133e4>
    6f6c:	00 00 01 3f 	l.j 7468 <__rom_size-0x12ee4>
    6f70:	60 00 01 3f 	.word 0x6000013f
    6f74:	74 00 01 6c 	l.cust2 
	...
    6f80:	00 01 3d 0c 	l.j 563b0 <__rom_size+0x3c064>
    6f84:	00 01 3d 34 	l.j 56454 <__rom_size+0x3c108>
    6f88:	00 02 4e 9f 	l.j 9aa04 <__ram_length+0x1aa04>
    6f8c:	00 01 3d 34 	l.j 5645c <__rom_size+0x3c110>
    6f90:	00 01 3d 53 	l.j 564dc <__rom_size+0x3c190>
    6f94:	00 01 56 00 	l.j 5c794 <__rom_size+0x42448>
	...
    6fa0:	01 38 5c 00 	l.j 4e1dfa0 <__stack+0x499dfa4>
    6fa4:	01 38 70 00 	l.j 4e22fa4 <__stack+0x49a2fa8>
    6fa8:	02 30 9f 00 	l.j f8c2eba8 <__stack+0xf87aebac>
	...
    6fb4:	01 38 bc 00 	l.j 4e35fb4 <__stack+0x49b5fb8>
    6fb8:	01 3b c8 00 	l.j 4ef8fb8 <__stack+0x4a78fbc>
    6fbc:	01 64 00 01 	l.j 5906fc0 <__stack+0x5486fc4>
    6fc0:	6a 68 00 01 	.word 0x6a680001
    6fc4:	6a 88 00 01 	.word 0x6a880001
    6fc8:	64 00 00 00 	.word 0x64000000
    6fcc:	00 00 00 00 	l.j 6fcc <__rom_size-0x13380>
    6fd0:	00 00 01 38 	l.j 74b0 <__rom_size-0x12e9c>
    6fd4:	f4 00 01 39 	l.cust6 
    6fd8:	38 00 01 5b 	.word 0x3800015b
    6fdc:	00 01 39 38 	l.j 554bc <__rom_size+0x3b170>
    6fe0:	00 01 3a a8 	l.j 55a80 <__rom_size+0x3b734>
    6fe4:	00 01 60 00 	l.j 5efe4 <__rom_size+0x44c98>
    6fe8:	01 6a 68 00 	l.j 5aa0fe8 <__stack+0x5620fec>
    6fec:	01 6a 88 00 	l.j 5aa8fec <__stack+0x5628ff0>
    6ff0:	01 60 00 00 	l.j 5806ff0 <__stack+0x5386ff4>
    6ff4:	00 00 00 00 	l.j 6ff4 <__rom_size-0x13358>
    6ff8:	00 00 00 01 	l.j 6ffc <__rom_size-0x13350>
    6ffc:	38 d8 00 01 	.word 0x38d80001
    7000:	3b 24 00 01 	.word 0x3b240001
    7004:	52 00 01 6a 	.word 0x5200016a
    7008:	68 00 01 6a 	.word 0x6800016a
    700c:	88 00 01 52 	l.lws r0,0x152(r0)
	...
    7018:	00 01 38 f4 	l.j 553e8 <__rom_size+0x3b09c>
    701c:	00 01 3a a4 	l.j 55aac <__rom_size+0x3b760>
    7020:	00 02 30 9f 	l.j 9329c <__ram_length+0x1329c>
    7024:	00 01 3a a8 	l.j 55ac4 <__rom_size+0x3b778>
    7028:	00 01 3b 10 	l.j 55c68 <__rom_size+0x3b91c>
    702c:	00 01 66 00 	l.j 6082c <__rom_size+0x464e0>
	...
    7038:	01 3b 54 00 	l.j 4edc038 <__stack+0x4a5c03c>
    703c:	01 3b 5c 00 	l.j 4ede03c <__stack+0x4a5e040>
    7040:	01 54 00 01 	l.j 5507044 <__stack+0x5087048>
    7044:	3b 5c 00 01 	.word 0x3b5c0001
    7048:	3b 8c 00 01 	.word 0x3b8c0001
    704c:	54 00 00 00 	.word 0x54000000
    7050:	00 00 00 00 	l.j 7050 <__rom_size-0x132fc>
    7054:	00 00 01 3b 	l.j 7540 <__rom_size-0x12e0c>
    7058:	54 00 01 3b 	.word 0x5400013b
    705c:	58 00 02 38 	.word 0x58000238
    7060:	9f 00 01 3b 	l.addi r24,r0,0x13b
    7064:	58 00 01 3b 	.word 0x5800013b
    7068:	6c 00 01 52 	.word 0x6c000152
    706c:	00 01 3b 70 	l.j 55e2c <__rom_size+0x3bae0>
    7070:	00 01 3b 7c 	l.j 55e60 <__rom_size+0x3bb14>
    7074:	00 01 52 00 	l.j 5b874 <__rom_size+0x41528>
    7078:	01 3b 7c 00 	l.j 4ee6078 <__stack+0x4a6607c>
    707c:	01 3b 98 00 	l.j 4eed07c <__stack+0x4a6d080>
    7080:	01 52 00 01 	l.j 5487084 <__stack+0x5007088>
    7084:	3b 98 00 01 	.word 0x3b980001
    7088:	3b b8 00 03 	.word 0x3bb80003
    708c:	72 01 9f 00 	l.cust1 
	...
    7098:	01 38 70 00 	l.j 4e23098 <__stack+0x49a309c>
    709c:	01 38 78 00 	l.j 4e2509c <__stack+0x49a50a0>
    70a0:	01 55 00 01 	l.j 55470a4 <__stack+0x50c70a8>
    70a4:	38 78 00 01 	.word 0x38780001
    70a8:	38 ef 00 01 	.word 0x38ef0001
    70ac:	55 00 01 3b 	.word 0x5500013b
    70b0:	10 00 01 3b 	l.bf 759c <__rom_size-0x12db0>
    70b4:	20 00 01 55 	l.sys 0x155
    70b8:	00 01 3b 20 	l.j 55d38 <__rom_size+0x3b9ec>
    70bc:	00 01 3b 2b 	l.j 55d68 <__rom_size+0x3ba1c>
    70c0:	00 03 73 1f 	l.j e3d3c <__ram_length+0x63d3c>
    70c4:	9f 00 01 3b 	l.addi r24,r0,0x13b
    70c8:	f4 00 01 3c 	l.cust6 
    70cc:	10 00 01 55 	l.bf 7620 <__rom_size-0x12d2c>
	...
    70d8:	00 01 39 38 	l.j 555b8 <__rom_size+0x3b26c>
    70dc:	00 01 3a a8 	l.j 55b7c <__rom_size+0x3b830>
    70e0:	00 01 60 00 	l.j 5f0e0 <__rom_size+0x44d94>
    70e4:	01 6a 68 00 	l.j 5aa10e4 <__stack+0x56210e8>
    70e8:	01 6a 88 00 	l.j 5aa90e8 <__stack+0x56290ec>
    70ec:	01 60 00 00 	l.j 58070ec <__stack+0x53870f0>
    70f0:	00 00 00 00 	l.j 70f0 <__rom_size-0x1325c>
    70f4:	00 00 00 01 	l.j 70f8 <__rom_size-0x13254>
    70f8:	39 38 00 01 	.word 0x39380001
    70fc:	3a a8 00 01 	.word 0x3aa80001
    7100:	52 00 01 6a 	.word 0x5200016a
    7104:	68 00 01 6a 	.word 0x6800016a
    7108:	88 00 01 52 	l.lws r0,0x152(r0)
	...
    7114:	00 01 39 44 	l.j 55624 <__rom_size+0x3b2d8>
    7118:	00 01 39 74 	l.j 556e8 <__rom_size+0x3b39c>
    711c:	00 03 80 7b 	l.j e7308 <__ram_length+0x67308>
    7120:	9f 00 00 00 	l.addi r24,r0,0x0
    7124:	00 00 00 00 	l.j 7124 <__rom_size-0x13228>
    7128:	00 00 01 39 	l.j 760c <__rom_size-0x12d40>
    712c:	78 00 01 39 	l.cust3 
    7130:	80 00 02 30 	l.ld r0,0x230(r0)
    7134:	9f 00 01 39 	l.addi r24,r0,0x139
    7138:	b4 00 01 39 	l.mfspr r0,r0,0x139
    713c:	d0 00 01 57 	l.sd 0x157(r0),r0
    7140:	00 01 39 d8 	l.j 558a0 <__rom_size+0x3b554>
    7144:	00 01 39 e8 	l.j 558e4 <__rom_size+0x3b598>
    7148:	00 01 57 00 	l.j 5cd48 <__rom_size+0x429fc>
    714c:	01 3a 10 00 	l.j 4e8b14c <__stack+0x4a0b150>
    7150:	01 3a 48 00 	l.j 4e99150 <__stack+0x4a19154>
    7154:	01 57 00 01 	l.j 55c7158 <__stack+0x514715c>
    7158:	3a 48 00 01 	.word 0x3a480001
    715c:	3a 58 00 01 	.word 0x3a580001
    7160:	53 00 01 3a 	.word 0x5300013a
    7164:	78 00 01 3a 	l.cust3 
    7168:	7c 00 01 57 	l.cust4 
	...
    7174:	00 01 39 78 	l.j 55754 <__rom_size+0x3b408>
    7178:	00 01 39 80 	l.j 55778 <__rom_size+0x3b42c>
    717c:	00 01 56 00 	l.j 5c97c <__rom_size+0x42630>
    7180:	01 39 80 00 	l.j 4e67180 <__stack+0x49e7184>
    7184:	01 39 94 00 	l.j 4e6c184 <__stack+0x49ec188>
    7188:	03 77 01 9f 	l.j fddc7804 <__stack+0xfd947808>
    718c:	00 01 39 94 	l.j 557dc <__rom_size+0x3b490>
    7190:	00 01 39 b0 	l.j 55850 <__rom_size+0x3b504>
    7194:	00 01 57 00 	l.j 5cd94 <__rom_size+0x42a48>
	...
    71a0:	01 39 78 00 	l.j 4e651a0 <__stack+0x49e51a4>
    71a4:	01 39 80 00 	l.j 4e671a4 <__stack+0x49e71a8>
    71a8:	06 03 00 41 	l.jal f80c72ac <__stack+0xf7c472b0>
    71ac:	a3 3c 9f 00 	l.addic r25,r28,0xffff9f00
    71b0:	01 39 80 00 	l.j 4e671b0 <__stack+0x49e71b4>
    71b4:	01 39 98 00 	l.j 4e6d1b4 <__stack+0x49ed1b8>
    71b8:	03 73 01 9f 	l.j fdcc7834 <__stack+0xfd847838>
    71bc:	00 01 39 98 	l.j 5581c <__rom_size+0x3b4d0>
    71c0:	00 01 39 b8 	l.j 558a0 <__rom_size+0x3b554>
    71c4:	00 01 53 00 	l.j 5bdc4 <__rom_size+0x41a78>
	...
    71d0:	01 39 bc 00 	l.j 4e761d0 <__stack+0x49f61d4>
    71d4:	01 39 ec 00 	l.j 4e821d4 <__stack+0x4a021d8>
    71d8:	01 53 00 01 	l.j 54c71dc <__stack+0x50471e0>
    71dc:	39 ec 00 01 	.word 0x39ec0001
    71e0:	3a 04 00 01 	.word 0x3a040001
    71e4:	54 00 01 3a 	.word 0x5400013a
    71e8:	18 00 01 3a 	l.movhi r0,0x13a
    71ec:	5c 00 01 58 	.word 0x5c000158
    71f0:	00 01 3a 5c 	l.j 55b60 <__rom_size+0x3b814>
    71f4:	00 01 3a 78 	l.j 55bd4 <__rom_size+0x3b888>
    71f8:	00 01 53 00 	l.j 5bdf8 <__rom_size+0x41aac>
    71fc:	01 3a 78 00 	l.j 4ea51fc <__stack+0x4a25200>
    7200:	01 3a 7c 00 	l.j 4ea6200 <__stack+0x4a26204>
    7204:	01 58 00 00 	l.j 5607204 <__stack+0x5187208>
    7208:	00 00 00 00 	l.j 7208 <__rom_size-0x13144>
    720c:	00 00 00 01 	l.j 7210 <__rom_size-0x1313c>
    7210:	39 78 00 01 	.word 0x39780001
    7214:	39 80 00 02 	.word 0x39800002
    7218:	30 9f 00 01 	.word 0x309f0001
    721c:	39 80 00 01 	.word 0x39800001
    7220:	39 94 00 0a 	.word 0x3994000a
    7224:	73 00 94 01 	l.cust1 
    7228:	77 00 94 01 	l.cust2 
    722c:	27 9f 00 01 	l.rfe 
    7230:	39 98 00 01 	.word 0x39980001
    7234:	3a 7c 00 02 	.word 0x3a7c0002
    7238:	30 9f 00 01 	.word 0x309f0001
    723c:	6a 68 00 01 	.word 0x6a680001
    7240:	6a 88 00 02 	.word 0x6a880002
    7244:	30 9f 00 00 	.word 0x309f0000
    7248:	00 00 00 00 	l.j 7248 <__rom_size-0x13104>
    724c:	00 00 00 01 	l.j 7250 <__rom_size-0x130fc>
    7250:	33 1c 00 01 	.word 0x331c0001
    7254:	33 30 00 01 	.word 0x33300001
    7258:	52 00 00 00 	.word 0x52000000
    725c:	00 00 00 00 	l.j 725c <__rom_size-0x130f0>
    7260:	00 00 01 33 	l.j 772c <__rom_size-0x12c20>
    7264:	08 00 01 33 	.word 0x08000133
    7268:	30 00 01 53 	.word 0x30000153
    726c:	00 01 33 34 	l.j 53f3c <__rom_size+0x39bf0>
    7270:	00 01 33 4c 	l.j 53fa0 <__rom_size+0x39c54>
    7274:	00 02 30 9f 	l.j 934f0 <__ram_length+0x134f0>
    7278:	00 01 33 4c 	l.j 53fa8 <__rom_size+0x39c5c>
    727c:	00 01 33 68 	l.j 5401c <__rom_size+0x39cd0>
    7280:	00 01 53 00 	l.j 5be80 <__rom_size+0x41b34>
	...
    728c:	01 33 f0 00 	l.j 4d0328c <__stack+0x4883290>
    7290:	01 34 04 00 	l.j 4d08290 <__stack+0x4888294>
    7294:	01 54 00 00 	l.j 5507294 <__stack+0x5087298>
    7298:	00 00 00 00 	l.j 7298 <__rom_size-0x130b4>
    729c:	00 00 00 01 	l.j 72a0 <__rom_size-0x130ac>
    72a0:	33 f0 00 01 	.word 0x33f00001
    72a4:	34 24 00 01 	.word 0x34240001
    72a8:	55 00 00 00 	.word 0x55000000
	...
    72b8:	00 00 01 29 	l.j 775c <__rom_size-0x12bf0>
    72bc:	6c 00 01 2c 	.word 0x6c00012c
    72c0:	ac 00 01 66 	l.xori r0,r0,0x166
	...
    72cc:	00 01 29 b8 	l.j 519ac <__rom_size+0x37660>
    72d0:	00 01 29 c0 	l.j 519d0 <__rom_size+0x37684>
    72d4:	00 02 30 9f 	l.j 93550 <__ram_length+0x13550>
    72d8:	00 01 29 c0 	l.j 519d8 <__rom_size+0x3768c>
    72dc:	00 01 29 fc 	l.j 51acc <__rom_size+0x37780>
    72e0:	00 01 60 00 	l.j 5f2e0 <__rom_size+0x44f94>
    72e4:	01 2a 00 00 	l.j 4a872e4 <__stack+0x46072e8>
    72e8:	01 2c ac 00 	l.j 4b322e8 <__stack+0x46b22ec>
    72ec:	01 60 00 00 	l.j 58072ec <__stack+0x53872f0>
    72f0:	00 00 00 00 	l.j 72f0 <__rom_size-0x1305c>
    72f4:	00 00 00 01 	l.j 72f8 <__rom_size-0x13054>
    72f8:	29 ec 00 01 	.word 0x29ec0001
    72fc:	2a 00 00 01 	.word 0x2a000001
    7300:	62 00 00 00 	.word 0x62000000
    7304:	00 00 00 00 	l.j 7304 <__rom_size-0x13048>
    7308:	00 00 01 29 	l.j 77ac <__rom_size-0x12ba0>
    730c:	74 00 01 29 	l.cust2 
    7310:	93 00 01 5b 	l.lbs r24,0x15b(r0)
    7314:	00 01 29 94 	l.j 51964 <__rom_size+0x37618>
    7318:	00 01 2a bc 	l.j 51e08 <__rom_size+0x37abc>
    731c:	00 01 5e 00 	l.j 5eb1c <__rom_size+0x447d0>
	...
    7328:	01 2a 38 00 	l.j 4a95328 <__stack+0x461532c>
    732c:	01 2a 40 00 	l.j 4a9732c <__stack+0x4617330>
    7330:	02 46 9f 00 	l.j f91aef30 <__stack+0xf8d2ef34>
    7334:	01 2a 40 00 	l.j 4a97334 <__stack+0x4617338>
    7338:	01 2a 50 00 	l.j 4a9b338 <__stack+0x461b33c>
    733c:	01 53 00 01 	l.j 54c7340 <__stack+0x5047344>
    7340:	2a 50 00 01 	.word 0x2a500001
    7344:	2a 7c 00 01 	.word 0x2a7c0001
    7348:	53 00 00 00 	.word 0x53000000
    734c:	00 00 00 00 	l.j 734c <__rom_size-0x13000>
    7350:	00 00 01 2a 	l.j 77f8 <__rom_size-0x12b54>
    7354:	38 00 01 2a 	.word 0x3800012a
    7358:	40 00 06 03 	.word 0x40000603
    735c:	00 41 cb a4 	l.j 107a1ec <__stack+0xbfa1f0>
    7360:	9f 00 01 2a 	l.addi r24,r0,0x12a
    7364:	40 00 01 2a 	.word 0x4000012a
    7368:	48 00 01 62 	l.jalr r0
    736c:	00 01 2a 48 	l.j 51c8c <__rom_size+0x37940>
    7370:	00 01 2a 4c 	l.j 51ca0 <__rom_size+0x37954>
    7374:	00 03 82 7f 	l.j e7d70 <__ram_length+0x67d70>
    7378:	9f 00 01 2a 	l.addi r24,r0,0x12a
    737c:	4c 00 01 2a 	l.maci r0,0x12a
    7380:	50 00 01 62 	.word 0x50000162
    7384:	00 01 2a 50 	l.j 51cc4 <__rom_size+0x37978>
    7388:	00 01 2a 9c 	l.j 51df8 <__rom_size+0x37aac>
    738c:	00 01 62 00 	l.j 5fb8c <__rom_size+0x45840>
	...
    7398:	01 2a 38 00 	l.j 4a95398 <__stack+0x461539c>
    739c:	01 2a 4c 00 	l.j 4a9a39c <__stack+0x461a3a0>
    73a0:	01 5b 00 01 	l.j 56c73a4 <__stack+0x52473a8>
    73a4:	2a 4c 00 01 	.word 0x2a4c0001
    73a8:	2a 88 00 01 	.word 0x2a880001
    73ac:	5b 00 01 2a 	.word 0x5b00012a
    73b0:	88 00 01 2a 	l.lws r0,0x12a(r0)
    73b4:	9c 00 01 5b 	l.addi r0,r0,0x15b
	...
    73c0:	00 01 2a c8 	l.j 51ee0 <__rom_size+0x37b94>
    73c4:	00 01 2a d4 	l.j 51f14 <__rom_size+0x37bc8>
    73c8:	00 02 3e 9f 	l.j 96e44 <__ram_length+0x16e44>
	...
    73d4:	00 01 2a c8 	l.j 51ef4 <__rom_size+0x37ba8>
    73d8:	00 01 2a e8 	l.j 51f78 <__rom_size+0x37c2c>
    73dc:	00 03 08 20 	l.j c945c <__ram_length+0x4945c>
    73e0:	9f 00 00 00 	l.addi r24,r0,0x0
    73e4:	00 00 00 00 	l.j 73e4 <__rom_size-0x12f68>
    73e8:	00 00 01 2a 	l.j 7890 <__rom_size-0x12abc>
    73ec:	cc 00 01 2a 	.word 0xcc00012a
    73f0:	dc 00 01 53 	l.sh 0x153(r0),r0
    73f4:	00 01 2a dc 	l.j 51f64 <__rom_size+0x37c18>
    73f8:	00 01 2a e8 	l.j 51f98 <__rom_size+0x37c4c>
    73fc:	00 01 53 00 	l.j 5bffc <__rom_size+0x41cb0>
	...
    7408:	01 23 e0 00 	l.j 48ff408 <__stack+0x447f40c>
    740c:	01 23 e4 00 	l.j 490040c <__stack+0x4480410>
    7410:	02 30 9f 00 	l.j f8c2f010 <__stack+0xf87af014>
    7414:	01 23 f4 00 	l.j 4904414 <__stack+0x4484418>
    7418:	01 24 14 00 	l.j 490c418 <__stack+0x448c41c>
    741c:	01 53 00 00 	l.j 54c741c <__stack+0x5047420>
    7420:	00 00 00 00 	l.j 7420 <__rom_size-0x12f2c>
    7424:	00 00 00 01 	l.j 7428 <__rom_size-0x12f24>
    7428:	23 6c 00 01 	.word 0x236c0001
    742c:	23 78 00 01 	.word 0x23780001
    7430:	52 00 00 00 	.word 0x52000000
    7434:	00 00 00 00 	l.j 7434 <__rom_size-0x12f18>
    7438:	00 00 01 23 	l.j 78c4 <__rom_size-0x12a88>
    743c:	24 00 01 23 	l.rfe 
    7440:	64 00 11 03 	.word 0x64001103
    7444:	00 42 0a 64 	l.j 1089dd4 <__stack+0xc09dd8>
    7448:	94 01 48 24 	l.lhz r0,0x4824(r1)
    744c:	48 26 72 00 	l.jalr r14
    7450:	22 37 1a 9f 	.word 0x22371a9f
    7454:	00 01 23 64 	l.j 501e4 <__rom_size+0x35e98>
    7458:	00 01 23 6b 	l.j 50204 <__rom_size+0x35eb8>
    745c:	00 11 03 00 	l.j 44805c <_stack+0x2639c>
    7460:	42 0a 64 94 	.word 0x420a6494
    7464:	01 48 24 48 	l.j 5210584 <__stack+0x4d90588>
    7468:	26 73 00 22 	l.rfe 
    746c:	37 1a 9f 00 	.word 0x371a9f00
	...
    7478:	01 1e 64 00 	l.j 47a0478 <__stack+0x432047c>
    747c:	01 1e 80 00 	l.j 47a747c <__stack+0x4327480>
    7480:	01 53 00 00 	l.j 54c7480 <__stack+0x5047484>
    7484:	00 00 00 00 	l.j 7484 <__rom_size-0x12ec8>
	...

Disassembly of section .debug_pubnames:

00000000 <.debug_pubnames>:
   0:	00 00 00 17 	l.j 5c <__rom_size-0x1a2f0>
   4:	00 02 00 00 	l.j 80004 <__ram_length+0x4>
   8:	00 00 00 00 	l.j 8 <__rom_size-0x1a344>
   c:	78 4e 00 00 	l.cust3 
  10:	5f da 6d 61 	.word 0x5fda6d61
  14:	69 6e 00 00 	.word 0x696e0000
  18:	Address 0x00000018 is out of bounds.


Disassembly of section .debug_pubtypes:

00000000 <.debug_pubtypes>:
   0:	00 00 06 35 	l.j 18d4 <__rom_size-0x18a78>
   4:	00 02 00 00 	l.j 80004 <__ram_length+0x4>
   8:	00 00 00 00 	l.j 8 <__rom_size-0x1a344>
   c:	78 4e 00 00 	l.cust3 
  10:	00 bb 73 69 	l.j 2edcdb4 <__stack+0x2a5cdb8>
  14:	7a 65 5f 74 	l.cust3 
  18:	00 00 00 00 	l.j 18 <__rom_size-0x1a334>
  1c:	c6 73 69 7a 	.word 0xc673697a
  20:	65 5f 74 00 	.word 0x655f7400
  24:	00 00 00 d1 	l.j 368 <__rom_size-0x19fe4>
  28:	73 69 7a 65 	l.cust1 
  2c:	5f 74 00 00 	.word 0x5f740000
  30:	00 00 dc 5f 	l.j 371ac <__rom_size+0x1ce60>
  34:	5f 67 6e 75 	.word 0x5f676e75
  38:	63 5f 76 61 	.word 0x635f7661
  3c:	5f 6c 69 73 	.word 0x5f6c6973
  40:	74 00 00 00 	l.cust2 
  44:	00 ed 76 61 	l.j 3b5d9c8 <__stack+0x36dd9cc>
  48:	5f 6c 69 73 	.word 0x5f6c6973
  4c:	74 00 00 00 	l.cust2 
  50:	00 f8 75 69 	l.j 3e1d5f4 <__stack+0x399d5f8>
  54:	6e 74 33 32 	.word 0x6e743332
  58:	5f 74 00 00 	.word 0x5f740000
  5c:	00 01 03 73 	l.j 40e28 <__rom_size+0x26adc>
  60:	69 7a 65 5f 	.word 0x697a655f
  64:	74 00 00 00 	l.cust2 
  68:	01 0e 5f 5f 	l.j 4397de4 <__stack+0x3f17de8>
  6c:	67 6e 75 63 	.word 0x676e7563
  70:	5f 76 61 5f 	.word 0x5f76615f
  74:	6c 69 73 74 	.word 0x6c697374
  78:	00 00 00 01 	l.j 7c <__rom_size-0x1a2d0>
  7c:	19 76 61 5f 	l.movhi r11,0x615f
  80:	6c 69 73 74 	.word 0x6c697374
  84:	00 00 00 01 	l.j 88 <__rom_size-0x1a2c4>
  88:	24 73 69 7a 	l.rfe 
  8c:	65 5f 74 00 	.word 0x655f7400
  90:	00 00 01 2f 	l.j 54c <__rom_size-0x19e00>
  94:	73 69 7a 65 	l.cust1 
  98:	5f 74 00 00 	.word 0x5f740000
  9c:	00 01 3a 73 	l.j 4ea68 <__rom_size+0x3471c>
  a0:	69 7a 65 5f 	.word 0x697a655f
  a4:	74 00 00 00 	l.cust2 
  a8:	01 45 5f 5f 	l.j 5157e24 <__stack+0x4cd7e28>
  ac:	67 6e 75 63 	.word 0x676e7563
  b0:	5f 76 61 5f 	.word 0x5f76615f
  b4:	6c 69 73 74 	.word 0x6c697374
  b8:	00 00 00 01 	l.j bc <__rom_size-0x1a290>
  bc:	50 76 61 5f 	.word 0x5076615f
  c0:	6c 69 73 74 	.word 0x6c697374
  c4:	00 00 00 01 	l.j c8 <__rom_size-0x1a284>
  c8:	5b 73 69 7a 	.word 0x5b73697a
  cc:	65 5f 74 00 	.word 0x655f7400
  d0:	00 00 01 66 	l.j 668 <__rom_size-0x19ce4>
  d4:	75 69 6e 74 	l.cust2 
  d8:	70 74 72 5f 	l.cust1 
  dc:	74 00 00 00 	l.cust2 
  e0:	01 71 69 6e 	l.j 5c5a698 <__stack+0x57da69c>
  e4:	74 6d 61 78 	l.cust2 
  e8:	5f 74 00 00 	.word 0x5f740000
  ec:	00 01 7c 75 	l.j 5f2c0 <__rom_size+0x44f74>
  f0:	69 6e 74 6d 	.word 0x696e746d
  f4:	61 78 5f 74 	.word 0x61785f74
  f8:	00 00 00 01 	l.j fc <__rom_size-0x1a250>
  fc:	87 66 6c 61 	l.lwz r27,0x6c61(r6)
 100:	67 73 00 00 	.word 0x67730000
 104:	00 01 c6 72 	l.j 71acc <__rom_size+0x57780>
 108:	61 6e 6b 73 	.word 0x616e6b73
 10c:	00 00 00 01 	l.j 110 <__rom_size-0x1a23c>
 110:	f1 75 69 6e 	l.cust5 r11,r21,r13,0xb,0xe
 114:	74 33 32 5f 	l.cust2 
 118:	74 00 00 00 	l.cust2 
 11c:	01 fc 75 69 	l.j 7f1d6c0 <__stack+0x7a9d6c4>
 120:	6e 74 33 32 	.word 0x6e743332
 124:	5f 74 00 00 	.word 0x5f740000
 128:	00 02 2c 65 	l.j 8b2bc <__ram_length+0xb2bc>
 12c:	6e 74 72 79 	.word 0x6e747279
 130:	54 59 50 45 	.word 0x54595045
 134:	00 00 00 02 	l.j 13c <__rom_size-0x1a210>
 138:	d2 66 69 6c 	l.sd 0xffff996c(r6),r13
 13c:	65 54 59 50 	.word 0x65545950
 140:	45 00 00 00 	l.jr r0
 144:	03 74 52 41 	l.j fdd14a48 <__stack+0xfd894a4c>
 148:	46 69 6c 65 	l.jr r13
 14c:	00 00 00 03 	l.j 158 <__rom_size-0x1a1f4>
 150:	7f 75 69 6e 	l.cust4 
 154:	74 38 5f 74 	l.cust2 
 158:	00 00 00 03 	l.j 164 <__rom_size-0x1a1e8>
 15c:	8a 75 69 6e 	l.lws r19,0x696e(r21)
 160:	74 31 36 5f 	l.cust2 
 164:	74 00 00 00 	l.cust2 
 168:	03 95 75 69 	l.j fe55d70c <__stack+0xfe0dd710>
 16c:	6e 74 33 32 	.word 0x6e743332
 170:	5f 74 00 00 	.word 0x5f740000
 174:	00 03 c5 65 	l.j f1708 <__ram_length+0x71708>
 178:	6e 74 72 79 	.word 0x6e747279
 17c:	54 59 50 45 	.word 0x54595045
 180:	00 00 00 04 	l.j 190 <__rom_size-0x1a1bc>
 184:	4a 66 69 6c 	l.jalr r13
 188:	65 54 59 50 	.word 0x65545950
 18c:	45 00 00 00 	l.jr r0
 190:	04 9a 52 41 	l.jal 2694a94 <__stack+0x2214a98>
 194:	46 69 6c 65 	l.jr r13
 198:	00 00 00 05 	l.j 1ac <__rom_size-0x1a1a0>
 19c:	74 68 64 66 	l.cust2 
 1a0:	54 59 50 45 	.word 0x54595045
 1a4:	00 00 00 05 	l.j 1b8 <__rom_size-0x1a194>
 1a8:	b4 6b 69 63 	l.mfspr r3,r11,0x6963
 1ac:	6b 73 74 61 	.word 0x6b737461
 1b0:	72 74 54 59 	l.cust1 
 1b4:	50 45 00 00 	.word 0x50450000
 1b8:	00 05 e4 66 	l.j 179350 <__ram_length+0xf9350>
 1bc:	69 6c 74 65 	.word 0x696c7465
 1c0:	72 54 59 50 	l.cust1 
 1c4:	45 00 00 00 	l.jr r0
 1c8:	06 14 66 6c 	l.jal f8519b78 <__stack+0xf8099b7c>
 1cc:	6f 70 70 79 	.word 0x6f707079
 1d0:	54 59 50 45 	.word 0x54595045
 1d4:	00 00 00 06 	l.j 1ec <__rom_size-0x1a160>
 1d8:	60 68 61 72 	.word 0x60686172
 1dc:	64 66 69 6c 	.word 0x6466696c
 1e0:	65 54 59 50 	.word 0x65545950
 1e4:	45 00 00 00 	l.jr r0
 1e8:	07 47 63 6f 	l.jal fd1d8fa4 <__stack+0xfcd58fa8>
 1ec:	6e 66 69 67 	.word 0x6e666967
 1f0:	54 59 50 45 	.word 0x54595045
 1f4:	00 00 00 09 	l.j 218 <__rom_size-0x1a134>
 1f8:	59 68 72 74 	.word 0x59687274
 1fc:	6d 6f 6e 5f 	.word 0x6d6f6e5f
 200:	63 66 67 5f 	.word 0x6366675f
 204:	74 00 00 00 	l.cust2 
 208:	09 64 73 69 	.word 0x09647369
 20c:	7a 65 5f 74 	l.cust3 
 210:	00 00 00 09 	l.j 234 <__rom_size-0x1a118>
 214:	94 65 6e 74 	l.lhz r3,0x6e74(r5)
 218:	72 79 54 59 	l.cust1 
 21c:	50 45 00 00 	.word 0x50450000
 220:	00 0a 19 66 	l.j 2867b8 <__ram_length+0x2067b8>
 224:	69 6c 65 54 	.word 0x696c6554
 228:	59 50 45 00 	.word 0x59504500
 22c:	00 00 0a 24 	l.j 2abc <__rom_size-0x17890>
 230:	50 61 72 74 	.word 0x50617274
 234:	69 74 69 6f 	.word 0x6974696f
 238:	6e 45 6e 74 	.word 0x6e456e74
 23c:	72 79 00 00 	l.cust1 
 240:	00 0a 5b 4d 	l.j 296f74 <__ram_length+0x216f74>
 244:	61 73 74 65 	.word 0x61737465
 248:	72 42 6f 6f 	l.cust1 
 24c:	74 52 65 63 	l.cust2 
 250:	6f 72 64 00 	.word 0x6f726400
 254:	00 00 0b 64 	l.j 2fe4 <__rom_size-0x17368>
 258:	44 49 52 45 	l.jr r10
 25c:	4e 54 52 59 	l.maci r20,0x5259
 260:	00 00 00 0b 	l.j 28c <__rom_size-0x1a0c0>
 264:	8f 46 41 54 	l.lbz r26,0x4154(r6)
 268:	42 55 46 46 	.word 0x42554646
 26c:	45 52 00 00 	l.jr r0
 270:	00 0b 9a 75 	l.j 2e6c44 <__ram_length+0x266c44>
 274:	69 6e 74 33 	.word 0x696e7433
 278:	32 5f 74 00 	.word 0x325f7400
 27c:	00 00 0b a5 	l.j 3110 <__rom_size-0x1723c>
 280:	75 69 6e 74 	l.cust2 
 284:	33 32 5f 74 	.word 0x33325f74
 288:	00 00 00 0b 	l.j 2b4 <__rom_size-0x1a098>
 28c:	d5 65 6e 74 	l.sw 0x5e74(r5),r13
 290:	72 79 54 59 	l.cust1 
 294:	50 45 00 00 	.word 0x50450000
 298:	00 0c 5a 66 	l.j 316c30 <__ram_length+0x296c30>
 29c:	69 6c 65 54 	.word 0x696c6554
 2a0:	59 50 45 00 	.word 0x59504500
 2a4:	00 00 0c 65 	l.j 3438 <__rom_size-0x16f14>
 2a8:	50 61 72 74 	.word 0x50617274
 2ac:	69 74 69 6f 	.word 0x6974696f
 2b0:	6e 45 6e 74 	.word 0x6e456e74
 2b4:	72 79 00 00 	l.cust1 
 2b8:	00 0d 2b 61 	l.j 34b03c <__ram_length+0x2cb03c>
 2bc:	64 66 54 59 	.word 0x64665459
 2c0:	50 45 00 00 	.word 0x50450000
 2c4:	00 0d 5b 6b 	l.j 357070 <__ram_length+0x2d7070>
 2c8:	69 63 6b 73 	.word 0x69636b73
 2cc:	74 61 72 74 	l.cust2 
 2d0:	54 59 50 45 	.word 0x54595045
 2d4:	00 00 00 0d 	l.j 308 <__rom_size-0x1a044>
 2d8:	8b 66 69 6c 	l.lws r27,0x696c(r6)
 2dc:	74 65 72 54 	l.cust2 
 2e0:	59 50 45 00 	.word 0x59504500
 2e4:	00 00 0d bb 	l.j 39d0 <__rom_size-0x1697c>
 2e8:	66 6c 6f 70 	.word 0x666c6f70
 2ec:	70 79 54 59 	l.cust1 
 2f0:	50 45 00 00 	.word 0x50450000
 2f4:	00 0e 07 68 	l.j 382094 <__ram_length+0x302094>
 2f8:	61 72 64 66 	.word 0x61726466
 2fc:	69 6c 65 54 	.word 0x696c6554
 300:	59 50 45 00 	.word 0x59504500
 304:	00 00 0e ee 	l.j 3ebc <__rom_size-0x16490>
 308:	63 6f 6e 66 	.word 0x636f6e66
 30c:	69 67 54 59 	.word 0x69675459
 310:	50 45 00 00 	.word 0x50450000
 314:	00 0e f9 75 	l.j 3be8e8 <__ram_length+0x33e8e8>
 318:	69 6e 74 33 	.word 0x696e7433
 31c:	32 5f 74 00 	.word 0x325f7400
 320:	00 00 0f 29 	l.j 3fc4 <__rom_size-0x16388>
 324:	65 6e 74 72 	.word 0x656e7472
 328:	79 54 59 50 	l.cust3 
 32c:	45 00 00 00 	l.jr r0
 330:	0f ae 66 69 	l.bnf feb99cd4 <__stack+0xfe719cd8>
 334:	6c 65 54 59 	.word 0x6c655459
 338:	50 45 00 00 	.word 0x50450000
 33c:	00 0f b9 50 	l.j 3ee87c <__ram_length+0x36e87c>
 340:	61 72 74 69 	.word 0x61727469
 344:	74 69 6f 6e 	l.cust2 
 348:	45 6e 74 72 	l.jr r14
 34c:	79 00 00 00 	l.cust3 
 350:	10 00 75 69 	l.bf 1d8f4 <__rom_size+0x35a8>
 354:	6e 74 33 32 	.word 0x6e743332
 358:	5f 74 00 00 	.word 0x5f740000
 35c:	00 10 30 65 	l.j 40c4f0 <mon_illcmd.50060+0x8>
 360:	6e 74 72 79 	.word 0x6e747279
 364:	54 59 50 45 	.word 0x54595045
 368:	00 00 00 10 	l.j 3a8 <__rom_size-0x19fa4>
 36c:	b5 66 69 6c 	l.mfspr r11,r6,0x696c
 370:	65 54 59 50 	.word 0x65545950
 374:	45 00 00 00 	l.jr r0
 378:	10 c0 50 61 	l.bf 30144fc <__stack+0x2b94500>
 37c:	72 74 69 74 	l.cust1 
 380:	69 6f 6e 45 	.word 0x696f6e45
 384:	6e 74 72 79 	.word 0x6e747279
 388:	00 00 00 11 	l.j 3cc <__rom_size-0x19f80>
 38c:	a5 68 64 66 	l.andi r11,r8,0x6466
 390:	54 59 50 45 	.word 0x54595045
 394:	00 00 00 11 	l.j 3d8 <__rom_size-0x19f74>
 398:	b0 52 69 67 	l.muli r2,r18,0x6967
 39c:	69 64 44 69 	.word 0x69644469
 3a0:	73 6b 42 6c 	l.cust1 
 3a4:	6f 63 6b 00 	.word 0x6f636b00
 3a8:	00 00 14 15 	l.j 53fc <__rom_size-0x14f50>
 3ac:	44 6f 73 45 	l.jr r14
 3b0:	6e 76 65 63 	.word 0x6e766563
 3b4:	00 00 00 15 	l.j 408 <__rom_size-0x19f44>
 3b8:	3a 50 61 72 	.word 0x3a506172
 3bc:	74 69 74 69 	l.cust2 
 3c0:	6f 6e 42 6c 	.word 0x6f6e426c
 3c4:	6f 63 6b 00 	.word 0x6f636b00
 3c8:	00 00 16 57 	l.j 5d24 <__rom_size-0x14628>
 3cc:	6b 69 63 6b 	.word 0x6b69636b
 3d0:	73 74 61 72 	l.cust1 
 3d4:	74 54 59 50 	l.cust2 
 3d8:	45 00 00 00 	l.jr r0
 3dc:	16 87 66 69 	.word 0x16876669
 3e0:	6c 74 65 72 	.word 0x6c746572
 3e4:	54 59 50 45 	.word 0x54595045
 3e8:	00 00 00 16 	l.j 440 <__rom_size-0x19f0c>
 3ec:	b7 66 6c 6f 	l.mfspr r27,r6,0x6c6f
 3f0:	70 70 79 54 	l.cust1 
 3f4:	59 50 45 00 	.word 0x59504500
 3f8:	00 00 17 03 	l.j 6004 <__rom_size-0x14348>
 3fc:	68 61 72 64 	.word 0x68617264
 400:	66 69 6c 65 	.word 0x66696c65
 404:	54 59 50 45 	.word 0x54595045
 408:	00 00 00 17 	l.j 464 <__rom_size-0x19ee8>
 40c:	ea 63 6f 6e 	.word 0xea636f6e
 410:	66 69 67 54 	.word 0x66696754
 414:	59 50 45 00 	.word 0x59504500
 418:	00 00 17 f5 	l.j 63ec <__rom_size-0x13f60>
 41c:	75 69 6e 74 	l.cust2 
 420:	31 36 5f 74 	.word 0x31365f74
 424:	00 00 00 18 	l.j 484 <__rom_size-0x19ec8>
 428:	00 75 69 6e 	l.j 1d5a9e0 <__stack+0x18da9e4>
 42c:	74 33 32 5f 	l.cust2 
 430:	74 00 00 00 	l.cust2 
 434:	18 30 65 6e 	l.movhi r1,0x656e
 438:	74 72 79 54 	l.cust2 
 43c:	59 50 45 00 	.word 0x59504500
 440:	00 00 18 b5 	l.j 6714 <__rom_size-0x13c38>
 444:	66 69 6c 65 	.word 0x66696c65
 448:	54 59 50 45 	.word 0x54595045
 44c:	00 00 00 18 	l.j 4ac <__rom_size-0x19ea0>
 450:	c0 50 61 72 	l.mtspr r16,r12,0x1172
 454:	74 69 74 69 	l.cust2 
 458:	6f 6e 45 6e 	.word 0x6f6e456e
 45c:	74 72 79 00 	l.cust2 
 460:	00 00 19 86 	l.j 6a78 <__rom_size-0x138d4>
 464:	61 64 66 54 	.word 0x61646654
 468:	59 50 45 00 	.word 0x59504500
 46c:	00 00 1a 2f 	l.j 6d28 <__rom_size-0x13624>
 470:	68 64 66 54 	.word 0x68646654
 474:	59 50 45 00 	.word 0x59504500
 478:	00 00 1a 5f 	l.j 6df4 <__rom_size-0x13558>
 47c:	6b 69 63 6b 	.word 0x6b69636b
 480:	73 74 61 72 	l.cust1 
 484:	74 54 59 50 	l.cust2 
 488:	45 00 00 00 	l.jr r0
 48c:	1a 8f 66 69 	.word 0x1a8f6669
 490:	6c 74 65 72 	.word 0x6c746572
 494:	54 59 50 45 	.word 0x54595045
 498:	00 00 00 1a 	l.j 500 <__rom_size-0x19e4c>
 49c:	bf 66 6c 6f 	.word 0xbf666c6f
 4a0:	70 70 79 54 	l.cust1 
 4a4:	59 50 45 00 	.word 0x59504500
 4a8:	00 00 1b 0b 	l.j 70d4 <__rom_size-0x13278>
 4ac:	68 61 72 64 	.word 0x68617264
 4b0:	66 69 6c 65 	.word 0x66696c65
 4b4:	54 59 50 45 	.word 0x54595045
 4b8:	00 00 00 1b 	l.j 524 <__rom_size-0x19e28>
 4bc:	f2 63 6f 6e 	l.cust5 r19,r3,r13,0x3b,0xe
 4c0:	66 69 67 54 	.word 0x66696754
 4c4:	59 50 45 00 	.word 0x59504500
 4c8:	00 00 1b fd 	l.j 74bc <__rom_size-0x12e90>
 4cc:	73 69 7a 65 	l.cust1 
 4d0:	5f 74 00 00 	.word 0x5f740000
 4d4:	00 1c 2d 65 	l.j 70ba68 <__stack+0x28ba6c>
 4d8:	6e 74 72 79 	.word 0x6e747279
 4dc:	54 59 50 45 	.word 0x54595045
 4e0:	00 00 00 1c 	l.j 550 <__rom_size-0x19dfc>
 4e4:	b2 66 69 6c 	l.muli r19,r6,0x696c
 4e8:	65 54 59 50 	.word 0x65545950
 4ec:	45 00 00 00 	l.jr r0
 4f0:	1c bd 50 61 	.word 0x1cbd5061
 4f4:	72 74 69 74 	l.cust1 
 4f8:	69 6f 6e 45 	.word 0x696f6e45
 4fc:	6e 74 72 79 	.word 0x6e747279
 500:	00 00 00 1d 	l.j 574 <__rom_size-0x19dd8>
 504:	c3 44 49 52 	l.mtspr r4,r9,0xd152
 508:	45 4e 54 52 	l.jr r10
 50c:	59 00 00 00 	.word 0x59000000
 510:	1e 4d 61 64 	.word 0x1e4d6164
 514:	66 54 59 50 	.word 0x66545950
 518:	45 00 00 00 	l.jr r0
 51c:	1e f6 68 64 	.word 0x1ef66864
 520:	66 54 59 50 	.word 0x66545950
 524:	45 00 00 00 	l.jr r0
 528:	1f 01 75 69 	.word 0x1f017569
 52c:	6e 74 33 32 	.word 0x6e743332
 530:	5f 74 00 00 	.word 0x5f740000
 534:	00 1f 31 6b 	l.j 7ccae0 <__stack+0x34cae4>
 538:	69 63 6b 73 	.word 0x69636b73
 53c:	74 61 72 74 	l.cust2 
 540:	54 59 50 45 	.word 0x54595045
 544:	00 00 00 1f 	l.j 5c0 <__rom_size-0x19d8c>
 548:	61 66 69 6c 	.word 0x6166696c
 54c:	74 65 72 54 	l.cust2 
 550:	59 50 45 00 	.word 0x59504500
 554:	00 00 1f 91 	l.j 8398 <__rom_size-0x11fb4>
 558:	66 6c 6f 70 	.word 0x666c6f70
 55c:	70 79 54 59 	l.cust1 
 560:	50 45 00 00 	.word 0x50450000
 564:	00 1f dd 68 	l.j 7f7b04 <__stack+0x377b08>
 568:	61 72 64 66 	.word 0x61726466
 56c:	69 6c 65 54 	.word 0x696c6554
 570:	59 50 45 00 	.word 0x59504500
 574:	00 00 20 c4 	l.j 8884 <__rom_size-0x11ac8>
 578:	63 6f 6e 66 	.word 0x636f6e66
 57c:	69 67 54 59 	.word 0x69675459
 580:	50 45 00 00 	.word 0x50450000
 584:	00 20 cf 4d 	l.j 8342b8 <__stack+0x3b42bc>
 588:	45 4e 55 00 	l.jr r10
 58c:	00 00 22 50 	l.j 8ecc <__rom_size-0x11480>
 590:	48 65 6c 70 	l.jalr r13
 594:	54 65 78 74 	.word 0x54657874
 598:	5f 4d 65 73 	.word 0x5f4d6573
 59c:	73 61 67 65 	l.cust1 
 5a0:	00 00 00 22 	l.j 628 <__rom_size-0x19d24>
 5a4:	81 75 69 6e 	l.ld r11,0x696e(r21)
 5a8:	74 33 32 5f 	l.cust2 
 5ac:	74 00 00 00 	l.cust2 
 5b0:	22 8c 50 61 	.word 0x228c5061
 5b4:	72 74 69 74 	l.cust1 
 5b8:	69 6f 6e 45 	.word 0x696f6e45
 5bc:	6e 74 72 79 	.word 0x6e747279
 5c0:	00 00 00 22 	l.j 648 <__rom_size-0x19d04>
 5c4:	d3 75 69 6e 	l.sd 0xffffd96e(r21),r13
 5c8:	74 33 32 5f 	l.cust2 
 5cc:	74 00 00 00 	l.cust2 
 5d0:	22 de 73 74 	.word 0x22de7374
 5d4:	61 72 00 00 	.word 0x61720000
 5d8:	00 23 42 65 	l.j 8d0f6c <__stack+0x450f70>
 5dc:	6e 74 72 79 	.word 0x6e747279
 5e0:	54 59 50 45 	.word 0x54595045
 5e4:	00 00 00 23 	l.j 670 <__rom_size-0x19cdc>
 5e8:	c7 66 69 6c 	.word 0xc766696c
 5ec:	65 54 59 50 	.word 0x65545950
 5f0:	45 00 00 00 	l.jr r0
 5f4:	23 d2 50 61 	.word 0x23d25061
 5f8:	72 74 69 74 	l.cust1 
 5fc:	69 6f 6e 45 	.word 0x696f6e45
 600:	6e 74 72 79 	.word 0x6e747279
 604:	00 00 00 24 	l.j 694 <__rom_size-0x19cb8>
 608:	5e 52 41 46 	.word 0x5e524146
 60c:	69 6c 65 00 	.word 0x696c6500
 610:	00 00 24 69 	l.j 97b4 <__rom_size-0x10b98>
 614:	75 69 6e 74 	l.cust2 
 618:	33 32 5f 74 	.word 0x33325f74
 61c:	00 00 00 24 	l.j 6ac <__rom_size-0x19ca0>
 620:	74 73 69 7a 	l.cust2 
 624:	65 5f 74 00 	.word 0x655f7400
 628:	00 00 24 7f 	l.j 9824 <__rom_size-0x10b28>
 62c:	75 69 6e 74 	l.cust2 
 630:	33 32 5f 74 	.word 0x33325f74
 634:	00 00 00 00 	l.j 634 <__rom_size-0x19d18>
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00 00 00 1c 	l.j 70 <__rom_size-0x1a2dc>
   4:	00 02 00 00 	l.j 80004 <__ram_length+0x4>
   8:	00 00 04 00 	l.j 1008 <__rom_size-0x19344>
   c:	00 00 00 00 	l.j c <__rom_size-0x1a340>
  10:	00 40 02 80 	l.j 1000a10 <__stack+0xb80a14>
  14:	00 01 6a 88 	l.j 5aa34 <__rom_size+0x406e8>
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	00 00 05 30 	l.j 14c0 <__rom_size-0x18e8c>
   4:	00 00 05 3c 	l.j 14f4 <__rom_size-0x18e58>
   8:	00 00 05 40 	l.j 1508 <__rom_size-0x18e44>
   c:	00 00 09 8c 	l.j 263c <__rom_size-0x17d10>
	...
  18:	00 00 05 30 	l.j 14d8 <__rom_size-0x18e74>
  1c:	00 00 05 3c 	l.j 150c <__rom_size-0x18e40>
  20:	00 00 05 40 	l.j 1520 <__rom_size-0x18e2c>
  24:	00 00 09 8c 	l.j 2654 <__rom_size-0x17cf8>
	...
  30:	00 00 0d 44 	l.j 3540 <__rom_size-0x16e0c>
  34:	00 00 0d 90 	l.j 3674 <__rom_size-0x16cd8>
  38:	00 00 0d a0 	l.j 36b8 <__rom_size-0x16c94>
  3c:	00 00 0d ac 	l.j 36ec <__rom_size-0x16c60>
  40:	00 00 0d 94 	l.j 3690 <__rom_size-0x16cbc>
  44:	00 00 0d 9c 	l.j 36b4 <__rom_size-0x16c98>
	...
  50:	00 00 0f e8 	l.j 3ff0 <__rom_size-0x1635c>
  54:	00 00 0f ec 	l.j 4004 <__rom_size-0x16348>
  58:	00 00 10 cc 	l.j 4388 <__rom_size-0x15fc4>
  5c:	00 00 10 f8 	l.j 443c <__rom_size-0x15f10>
  60:	00 00 10 b4 	l.j 4330 <__rom_size-0x1601c>
  64:	00 00 10 c8 	l.j 4384 <__rom_size-0x15fc8>
  68:	00 00 0f f0 	l.j 4028 <__rom_size-0x16324>
  6c:	00 00 0f f4 	l.j 403c <__rom_size-0x16310>
	...
  78:	00 00 11 18 	l.j 44d8 <__rom_size-0x15e74>
  7c:	00 00 11 1c 	l.j 44ec <__rom_size-0x15e60>
  80:	00 00 11 fc 	l.j 4870 <__rom_size-0x15adc>
  84:	00 00 12 20 	l.j 4904 <__rom_size-0x15a48>
  88:	00 00 11 dc 	l.j 47f8 <__rom_size-0x15b54>
  8c:	00 00 11 f8 	l.j 486c <__rom_size-0x15ae0>
	...
  98:	00 00 14 54 	l.j 51e8 <__rom_size-0x15164>
  9c:	00 00 14 58 	l.j 51fc <__rom_size-0x15150>
  a0:	00 00 15 20 	l.j 5520 <__rom_size-0x14e2c>
  a4:	00 00 15 5c 	l.j 5614 <__rom_size-0x14d38>
	...
  b0:	00 00 16 d0 	l.j 5bf0 <__rom_size-0x1475c>
  b4:	00 00 17 08 	l.j 5cd4 <__rom_size-0x14678>
  b8:	00 00 17 28 	l.j 5d58 <__rom_size-0x145f4>
  bc:	00 00 17 40 	l.j 5dbc <__rom_size-0x14590>
  c0:	00 00 17 20 	l.j 5d40 <__rom_size-0x1460c>
  c4:	00 00 17 24 	l.j 5d54 <__rom_size-0x145f8>
  c8:	00 00 17 14 	l.j 5d18 <__rom_size-0x14634>
  cc:	00 00 17 1c 	l.j 5d3c <__rom_size-0x14610>
  d0:	00 00 17 0c 	l.j 5d00 <__rom_size-0x1464c>
  d4:	00 00 17 10 	l.j 5d14 <__rom_size-0x14638>
	...
  e0:	00 00 17 1c 	l.j 5d50 <__rom_size-0x145fc>
  e4:	00 00 17 20 	l.j 5d64 <__rom_size-0x145e8>
  e8:	00 00 18 20 	l.j 6168 <__rom_size-0x141e4>
  ec:	00 00 18 68 	l.j 628c <__rom_size-0x140c0>
  f0:	00 00 17 24 	l.j 5d80 <__rom_size-0x145cc>
  f4:	00 00 17 28 	l.j 5d94 <__rom_size-0x145b8>
	...
 100:	00 00 1a dc 	l.j 6c70 <__rom_size-0x136dc>
 104:	00 00 1b 14 	l.j 6d54 <__rom_size-0x135f8>
 108:	00 00 1b 34 	l.j 6dd8 <__rom_size-0x13574>
 10c:	00 00 1b 4c 	l.j 6e3c <__rom_size-0x13510>
 110:	00 00 1b 2c 	l.j 6dc0 <__rom_size-0x1358c>
 114:	00 00 1b 30 	l.j 6dd4 <__rom_size-0x13578>
 118:	00 00 1b 20 	l.j 6d98 <__rom_size-0x135b4>
 11c:	00 00 1b 28 	l.j 6dbc <__rom_size-0x13590>
 120:	00 00 1b 18 	l.j 6d80 <__rom_size-0x135cc>
 124:	00 00 1b 1c 	l.j 6d94 <__rom_size-0x135b8>
	...
 130:	00 00 1b 28 	l.j 6dd0 <__rom_size-0x1357c>
 134:	00 00 1b 2c 	l.j 6de4 <__rom_size-0x13568>
 138:	00 00 1c 2c 	l.j 71e8 <__rom_size-0x13164>
 13c:	00 00 1c 74 	l.j 730c <__rom_size-0x13040>
 140:	00 00 1b 30 	l.j 6e00 <__rom_size-0x1354c>
 144:	00 00 1b 34 	l.j 6e14 <__rom_size-0x13538>
	...
 150:	00 00 1e 58 	l.j 7ab0 <__rom_size-0x1289c>
 154:	00 00 1e 74 	l.j 7b24 <__rom_size-0x12828>
 158:	00 00 1e 78 	l.j 7b38 <__rom_size-0x12814>
 15c:	00 00 1e a4 	l.j 7bec <__rom_size-0x12760>
	...
 168:	00 00 32 d8 	l.j ccc8 <__rom_size-0xd684>
 16c:	00 00 33 2c 	l.j ce1c <__rom_size-0xd530>
 170:	00 00 33 38 	l.j ce50 <__rom_size-0xd4fc>
 174:	00 00 33 60 	l.j cef4 <__rom_size-0xd458>
	...
 180:	00 00 32 d8 	l.j cce0 <__rom_size-0xd66c>
 184:	00 00 32 e0 	l.j cd04 <__rom_size-0xd648>
 188:	00 00 33 38 	l.j ce68 <__rom_size-0xd4e4>
 18c:	00 00 33 48 	l.j ceac <__rom_size-0xd4a0>
 190:	00 00 32 f4 	l.j cd60 <__rom_size-0xd5ec>
 194:	00 00 33 2c 	l.j ce44 <__rom_size-0xd508>
	...
 1a0:	00 00 32 d8 	l.j cd00 <__rom_size-0xd64c>
 1a4:	00 00 32 e0 	l.j cd24 <__rom_size-0xd628>
 1a8:	00 00 33 38 	l.j ce88 <__rom_size-0xd4c4>
 1ac:	00 00 33 48 	l.j cecc <__rom_size-0xd480>
 1b0:	00 00 32 f4 	l.j cd80 <__rom_size-0xd5cc>
 1b4:	00 00 33 2c 	l.j ce64 <__rom_size-0xd4e8>
	...
 1c0:	00 00 48 98 	l.j 12420 <__rom_size-0x7f2c>
 1c4:	00 00 48 9c 	l.j 12434 <__rom_size-0x7f18>
 1c8:	00 00 48 a4 	l.j 12458 <__rom_size-0x7ef4>
 1cc:	00 00 49 c8 	l.j 128ec <__rom_size-0x7a60>
	...
 1d8:	00 00 48 98 	l.j 12438 <__rom_size-0x7f14>
 1dc:	00 00 48 9c 	l.j 1244c <__rom_size-0x7f00>
 1e0:	00 00 48 a4 	l.j 12470 <__rom_size-0x7edc>
 1e4:	00 00 49 c8 	l.j 12904 <__rom_size-0x7a48>
	...
 1f0:	00 00 5f 1c 	l.j 17e60 <__rom_size-0x24ec>
 1f4:	00 00 5f 20 	l.j 17e74 <__rom_size-0x24d8>
 1f8:	00 00 65 4c 	l.j 19728 <__rom_size-0xc24>
 1fc:	00 00 65 6c 	l.j 197ac <__rom_size-0xba0>
 200:	00 00 5f 54 	l.j 17f50 <__rom_size-0x23fc>
 204:	00 00 65 34 	l.j 196d4 <__rom_size-0xc78>
 208:	00 00 5f 4c 	l.j 17f38 <__rom_size-0x2414>
 20c:	00 00 5f 50 	l.j 17f4c <__rom_size-0x2400>
 210:	00 00 5f 44 	l.j 17f20 <__rom_size-0x242c>
 214:	00 00 5f 48 	l.j 17f34 <__rom_size-0x2418>
 218:	00 00 5f 3c 	l.j 17f08 <__rom_size-0x2444>
 21c:	00 00 5f 40 	l.j 17f1c <__rom_size-0x2430>
	...
 228:	00 00 5f 1c 	l.j 17e98 <__rom_size-0x24b4>
 22c:	00 00 5f 20 	l.j 17eac <__rom_size-0x24a0>
 230:	00 00 65 4c 	l.j 19760 <__rom_size-0xbec>
 234:	00 00 65 6c 	l.j 197e4 <__rom_size-0xb68>
 238:	00 00 5f 54 	l.j 17f88 <__rom_size-0x23c4>
 23c:	00 00 65 34 	l.j 1970c <__rom_size-0xc40>
 240:	00 00 5f 4c 	l.j 17f70 <__rom_size-0x23dc>
 244:	00 00 5f 50 	l.j 17f84 <__rom_size-0x23c8>
 248:	00 00 5f 44 	l.j 17f58 <__rom_size-0x23f4>
 24c:	00 00 5f 48 	l.j 17f6c <__rom_size-0x23e0>
 250:	00 00 5f 3c 	l.j 17f40 <__rom_size-0x240c>
 254:	00 00 5f 40 	l.j 17f54 <__rom_size-0x23f8>
	...
 260:	00 00 65 c8 	l.j 19980 <__rom_size-0x9cc>
 264:	00 00 67 44 	l.j 19f74 <__rom_size-0x3d8>
 268:	00 00 6a 10 	l.j 1aaa8 <__rom_size+0x75c>
 26c:	00 00 6a 3c 	l.j 1ab5c <__rom_size+0x810>
 270:	00 00 67 64 	l.j 1a000 <__rom_size-0x34c>
 274:	00 00 69 f4 	l.j 1aa44 <__rom_size+0x6f8>
 278:	00 00 67 54 	l.j 19fc8 <__rom_size-0x384>
 27c:	00 00 67 58 	l.j 19fdc <__rom_size-0x370>
 280:	00 00 67 48 	l.j 19fa0 <__rom_size-0x3ac>
 284:	00 00 67 50 	l.j 19fc4 <__rom_size-0x388>
	...
 290:	00 00 65 c8 	l.j 199b0 <__rom_size-0x99c>
 294:	00 00 67 44 	l.j 19fa4 <__rom_size-0x3a8>
 298:	00 00 6a 10 	l.j 1aad8 <__rom_size+0x78c>
 29c:	00 00 6a 3c 	l.j 1ab8c <__rom_size+0x840>
 2a0:	00 00 67 64 	l.j 1a030 <__rom_size-0x31c>
 2a4:	00 00 69 f4 	l.j 1aa74 <__rom_size+0x728>
 2a8:	00 00 67 54 	l.j 19ff8 <__rom_size-0x354>
 2ac:	00 00 67 58 	l.j 1a00c <__rom_size-0x340>
 2b0:	00 00 67 48 	l.j 19fd0 <__rom_size-0x37c>
 2b4:	00 00 67 50 	l.j 19ff4 <__rom_size-0x358>
	...
 2c0:	00 00 6c a4 	l.j 1b550 <__rom_size+0x1204>
 2c4:	00 00 6c b4 	l.j 1b594 <__rom_size+0x1248>
 2c8:	00 00 6c dc 	l.j 1b638 <__rom_size+0x12ec>
 2cc:	00 00 6c e0 	l.j 1b64c <__rom_size+0x1300>
 2d0:	00 00 6c d0 	l.j 1b610 <__rom_size+0x12c4>
 2d4:	00 00 6c d8 	l.j 1b634 <__rom_size+0x12e8>
 2d8:	00 00 6c bc 	l.j 1b5c8 <__rom_size+0x127c>
 2dc:	00 00 6c cc 	l.j 1b60c <__rom_size+0x12c0>
	...
 2e8:	00 00 6d 88 	l.j 1b908 <__rom_size+0x15bc>
 2ec:	00 00 6d a8 	l.j 1b98c <__rom_size+0x1640>
 2f0:	00 00 6d ac 	l.j 1b9a0 <__rom_size+0x1654>
 2f4:	00 00 6d b0 	l.j 1b9b4 <__rom_size+0x1668>
	...
 300:	00 00 6f 3c 	l.j 1bff0 <__rom_size+0x1ca4>
 304:	00 00 6f 44 	l.j 1c014 <__rom_size+0x1cc8>
 308:	00 00 6f 64 	l.j 1c098 <__rom_size+0x1d4c>
 30c:	00 00 72 58 	l.j 1cc6c <__rom_size+0x2920>
 310:	00 00 6f 58 	l.j 1c070 <__rom_size+0x1d24>
 314:	00 00 6f 5c 	l.j 1c084 <__rom_size+0x1d38>
	...
 320:	00 00 71 6c 	l.j 1c8d0 <__rom_size+0x2584>
 324:	00 00 71 70 	l.j 1c8e4 <__rom_size+0x2598>
 328:	00 00 71 88 	l.j 1c948 <__rom_size+0x25fc>
 32c:	00 00 71 8c 	l.j 1c95c <__rom_size+0x2610>
 330:	00 00 71 7c 	l.j 1c920 <__rom_size+0x25d4>
 334:	00 00 71 84 	l.j 1c944 <__rom_size+0x25f8>
	...
 340:	00 00 a3 70 	l.j 29100 <__rom_size+0xedb4>
 344:	00 00 a3 74 	l.j 29114 <__rom_size+0xedc8>
 348:	00 00 a3 b0 	l.j 29208 <__rom_size+0xeebc>
 34c:	00 00 a3 ec 	l.j 292fc <__rom_size+0xefb0>
 350:	00 00 a3 a4 	l.j 291e0 <__rom_size+0xee94>
 354:	00 00 a3 ac 	l.j 29204 <__rom_size+0xeeb8>
 358:	00 00 a3 94 	l.j 291a8 <__rom_size+0xee5c>
 35c:	00 00 a3 98 	l.j 291bc <__rom_size+0xee70>
 360:	00 00 a3 80 	l.j 29160 <__rom_size+0xee14>
 364:	00 00 a3 8c 	l.j 29194 <__rom_size+0xee48>
	...
 370:	00 00 a8 3c 	l.j 2a460 <__rom_size+0x10114>
 374:	00 00 a8 40 	l.j 2a474 <__rom_size+0x10128>
 378:	00 00 ab 38 	l.j 2b058 <__rom_size+0x10d0c>
 37c:	00 00 ab 3c 	l.j 2b06c <__rom_size+0x10d20>
 380:	00 00 ab 2c 	l.j 2b030 <__rom_size+0x10ce4>
 384:	00 00 ab 30 	l.j 2b044 <__rom_size+0x10cf8>
 388:	00 00 ab 14 	l.j 2afd8 <__rom_size+0x10c8c>
 38c:	00 00 ab 28 	l.j 2b02c <__rom_size+0x10ce0>
 390:	00 00 ab 0c 	l.j 2afc0 <__rom_size+0x10c74>
 394:	00 00 ab 10 	l.j 2afd4 <__rom_size+0x10c88>
 398:	00 00 ab 04 	l.j 2afa8 <__rom_size+0x10c5c>
 39c:	00 00 ab 08 	l.j 2afbc <__rom_size+0x10c70>
 3a0:	00 00 a8 48 	l.j 2a4c0 <__rom_size+0x10174>
 3a4:	00 00 ab 00 	l.j 2afa4 <__rom_size+0x10c58>
	...
 3b0:	00 00 a8 3c 	l.j 2a4a0 <__rom_size+0x10154>
 3b4:	00 00 a8 40 	l.j 2a4b4 <__rom_size+0x10168>
 3b8:	00 00 ab 38 	l.j 2b098 <__rom_size+0x10d4c>
 3bc:	00 00 ab 3c 	l.j 2b0ac <__rom_size+0x10d60>
 3c0:	00 00 ab 2c 	l.j 2b070 <__rom_size+0x10d24>
 3c4:	00 00 ab 30 	l.j 2b084 <__rom_size+0x10d38>
 3c8:	00 00 ab 14 	l.j 2b018 <__rom_size+0x10ccc>
 3cc:	00 00 ab 28 	l.j 2b06c <__rom_size+0x10d20>
 3d0:	00 00 ab 0c 	l.j 2b000 <__rom_size+0x10cb4>
 3d4:	00 00 ab 10 	l.j 2b014 <__rom_size+0x10cc8>
 3d8:	00 00 ab 04 	l.j 2afe8 <__rom_size+0x10c9c>
 3dc:	00 00 ab 08 	l.j 2affc <__rom_size+0x10cb0>
 3e0:	00 00 a8 48 	l.j 2a500 <__rom_size+0x101b4>
 3e4:	00 00 ab 00 	l.j 2afe4 <__rom_size+0x10c98>
	...
 3f0:	00 00 a8 3c 	l.j 2a4e0 <__rom_size+0x10194>
 3f4:	00 00 a8 40 	l.j 2a4f4 <__rom_size+0x101a8>
 3f8:	00 00 a8 80 	l.j 2a5f8 <__rom_size+0x102ac>
 3fc:	00 00 a8 a0 	l.j 2a67c <__rom_size+0x10330>
	...
 408:	00 00 a8 3c 	l.j 2a4f8 <__rom_size+0x101ac>
 40c:	00 00 a8 40 	l.j 2a50c <__rom_size+0x101c0>
 410:	00 00 a8 80 	l.j 2a610 <__rom_size+0x102c4>
 414:	00 00 a8 a0 	l.j 2a694 <__rom_size+0x10348>
	...
 420:	00 00 ad ec 	l.j 2bbd0 <__rom_size+0x11884>
 424:	00 00 ad f0 	l.j 2bbe4 <__rom_size+0x11898>
 428:	00 00 ae d8 	l.j 2bf88 <__rom_size+0x11c3c>
 42c:	00 00 b0 ec 	l.j 2c7dc <__rom_size+0x12490>
 430:	00 00 ae bc 	l.j 2bf20 <__rom_size+0x11bd4>
 434:	00 00 ae d4 	l.j 2bf84 <__rom_size+0x11c38>
 438:	00 00 ad f8 	l.j 2bc18 <__rom_size+0x118cc>
 43c:	00 00 ad fc 	l.j 2bc2c <__rom_size+0x118e0>
	...
 448:	00 00 ad ec 	l.j 2bbf8 <__rom_size+0x118ac>
 44c:	00 00 ad f0 	l.j 2bc0c <__rom_size+0x118c0>
 450:	00 00 ae d8 	l.j 2bfb0 <__rom_size+0x11c64>
 454:	00 00 b0 ec 	l.j 2c804 <__rom_size+0x124b8>
 458:	00 00 ae bc 	l.j 2bf48 <__rom_size+0x11bfc>
 45c:	00 00 ae d4 	l.j 2bfac <__rom_size+0x11c60>
 460:	00 00 ad f8 	l.j 2bc40 <__rom_size+0x118f4>
 464:	00 00 ad fc 	l.j 2bc54 <__rom_size+0x11908>
	...
 470:	00 00 b2 80 	l.j 2ce70 <__rom_size+0x12b24>
 474:	00 00 b2 9c 	l.j 2cee4 <__rom_size+0x12b98>
 478:	00 00 b2 a0 	l.j 2cef8 <__rom_size+0x12bac>
 47c:	00 00 b2 a4 	l.j 2cf0c <__rom_size+0x12bc0>
	...
 488:	00 00 b6 9c 	l.j 2def8 <__rom_size+0x13bac>
 48c:	00 00 b6 bc 	l.j 2df7c <__rom_size+0x13c30>
 490:	00 00 b6 c0 	l.j 2df90 <__rom_size+0x13c44>
 494:	00 00 b6 c4 	l.j 2dfa4 <__rom_size+0x13c58>
	...
 4a0:	00 00 b8 64 	l.j 2e630 <__rom_size+0x142e4>
 4a4:	00 00 b8 94 	l.j 2e6f4 <__rom_size+0x143a8>
 4a8:	00 00 b8 98 	l.j 2e708 <__rom_size+0x143bc>
 4ac:	00 00 b8 a4 	l.j 2e73c <__rom_size+0x143f0>
	...
 4b8:	00 00 bb 74 	l.j 2f288 <__rom_size+0x14f3c>
 4bc:	00 00 bb a4 	l.j 2f34c <__rom_size+0x15000>
 4c0:	00 00 bb a8 	l.j 2f360 <__rom_size+0x15014>
 4c4:	00 00 bb b4 	l.j 2f394 <__rom_size+0x15048>
	...
 4d0:	00 00 c2 d8 	l.j 31030 <__rom_size+0x16ce4>
 4d4:	00 00 c3 88 	l.j 312f4 <__rom_size+0x16fa8>
 4d8:	00 00 c3 dc 	l.j 31448 <__rom_size+0x170fc>
 4dc:	00 00 c4 60 	l.j 3165c <__rom_size+0x17310>
	...
 4e8:	00 00 c2 d8 	l.j 31048 <__rom_size+0x16cfc>
 4ec:	00 00 c3 88 	l.j 3130c <__rom_size+0x16fc0>
 4f0:	00 00 c3 dc 	l.j 31460 <__rom_size+0x17114>
 4f4:	00 00 c4 60 	l.j 31674 <__rom_size+0x17328>
	...
 500:	00 00 c3 88 	l.j 31320 <__rom_size+0x16fd4>
 504:	00 00 c3 dc 	l.j 31474 <__rom_size+0x17128>
 508:	00 00 c4 60 	l.j 31688 <__rom_size+0x1733c>
 50c:	00 00 c9 ec 	l.j 32cbc <__rom_size+0x18970>
	...
 518:	00 00 c3 88 	l.j 31338 <__rom_size+0x16fec>
 51c:	00 00 c3 dc 	l.j 3148c <__rom_size+0x17140>
 520:	00 00 c4 60 	l.j 316a0 <__rom_size+0x17354>
 524:	00 00 c9 ec 	l.j 32cd4 <__rom_size+0x18988>
	...
 530:	00 00 c7 78 	l.j 32310 <__rom_size+0x17fc4>
 534:	00 00 c7 7c 	l.j 32324 <__rom_size+0x17fd8>
 538:	00 00 c7 8c 	l.j 32368 <__rom_size+0x1801c>
 53c:	00 00 c7 d4 	l.j 3248c <__rom_size+0x18140>
	...
 548:	00 00 cc 70 	l.j 33708 <__rom_size+0x193bc>
 54c:	00 00 cc 7c 	l.j 3373c <__rom_size+0x193f0>
 550:	00 00 cc a4 	l.j 337e0 <__rom_size+0x19494>
 554:	00 00 cc c8 	l.j 33874 <__rom_size+0x19528>
 558:	00 00 cc 98 	l.j 337b8 <__rom_size+0x1946c>
 55c:	00 00 cc a0 	l.j 337dc <__rom_size+0x19490>
 560:	00 00 cc 80 	l.j 33760 <__rom_size+0x19414>
 564:	00 00 cc 94 	l.j 337b4 <__rom_size+0x19468>
	...
 570:	00 00 cf 30 	l.j 34230 <__rom_size+0x19ee4>
 574:	00 00 cf dc 	l.j 344e4 <__rom_size+0x1a198>
 578:	00 00 cf f8 	l.j 34558 <__rom_size+0x1a20c>
 57c:	00 00 cf fc 	l.j 3456c <__rom_size+0x1a220>
	...
 588:	00 00 d1 30 	l.j 34a48 <__rom_size+0x1a6fc>
 58c:	00 00 e0 fc 	l.j 3897c <__rom_size+0x1e630>
 590:	00 00 e1 00 	l.j 38990 <__rom_size+0x1e644>
 594:	00 00 e1 c0 	l.j 38c94 <__rom_size+0x1e948>
	...
 5a0:	00 00 d9 20 	l.j 36a20 <__rom_size+0x1c6d4>
 5a4:	00 00 d9 24 	l.j 36a34 <__rom_size+0x1c6e8>
 5a8:	00 00 d9 30 	l.j 36a68 <__rom_size+0x1c71c>
 5ac:	00 00 dd 30 	l.j 37a6c <__rom_size+0x1d720>
	...
 5b8:	00 00 d9 20 	l.j 36a38 <__rom_size+0x1c6ec>
 5bc:	00 00 d9 24 	l.j 36a4c <__rom_size+0x1c700>
 5c0:	00 00 d9 30 	l.j 36a80 <__rom_size+0x1c734>
 5c4:	00 00 dd 30 	l.j 37a84 <__rom_size+0x1d738>
	...
 5d0:	00 00 e3 1c 	l.j 39240 <__rom_size+0x1eef4>
 5d4:	00 00 e3 20 	l.j 39254 <__rom_size+0x1ef08>
 5d8:	00 00 e4 0c 	l.j 39608 <__rom_size+0x1f2bc>
 5dc:	00 00 e6 90 	l.j 3a01c <__rom_size+0x1fcd0>
 5e0:	00 00 e3 34 	l.j 392b0 <__rom_size+0x1ef64>
 5e4:	00 00 e3 38 	l.j 392c4 <__rom_size+0x1ef78>
 5e8:	00 00 e3 28 	l.j 39288 <__rom_size+0x1ef3c>
 5ec:	00 00 e3 2c 	l.j 3929c <__rom_size+0x1ef50>
	...
 5f8:	00 00 e3 1c 	l.j 39268 <__rom_size+0x1ef1c>
 5fc:	00 00 e3 20 	l.j 3927c <__rom_size+0x1ef30>
 600:	00 00 e4 0c 	l.j 39630 <__rom_size+0x1f2e4>
 604:	00 00 e6 90 	l.j 3a044 <__rom_size+0x1fcf8>
 608:	00 00 e3 34 	l.j 392d8 <__rom_size+0x1ef8c>
 60c:	00 00 e3 38 	l.j 392ec <__rom_size+0x1efa0>
 610:	00 00 e3 28 	l.j 392b0 <__rom_size+0x1ef64>
 614:	00 00 e3 2c 	l.j 392c4 <__rom_size+0x1ef78>
	...
 620:	00 00 e9 38 	l.j 3ab00 <__rom_size+0x207b4>
 624:	00 00 e9 84 	l.j 3ac34 <__rom_size+0x208e8>
 628:	00 00 e9 8c 	l.j 3ac58 <__rom_size+0x2090c>
 62c:	00 00 eb a8 	l.j 3b4cc <__rom_size+0x21180>
	...
 638:	00 00 ed 28 	l.j 3bad8 <__rom_size+0x2178c>
 63c:	00 00 ed 2c 	l.j 3baec <__rom_size+0x217a0>
 640:	00 00 ed 5c 	l.j 3bbb0 <__rom_size+0x21864>
 644:	00 00 ef a4 	l.j 3c4d4 <__rom_size+0x22188>
 648:	00 00 ed 50 	l.j 3bb88 <__rom_size+0x2183c>
 64c:	00 00 ed 58 	l.j 3bbac <__rom_size+0x21860>
 650:	00 00 ed 48 	l.j 3bb70 <__rom_size+0x21824>
 654:	00 00 ed 4c 	l.j 3bb84 <__rom_size+0x21838>
 658:	00 00 ed 30 	l.j 3bb18 <__rom_size+0x217cc>
 65c:	00 00 ed 44 	l.j 3bb6c <__rom_size+0x21820>
	...
 668:	00 00 ed 28 	l.j 3bb08 <__rom_size+0x217bc>
 66c:	00 00 ed 2c 	l.j 3bb1c <__rom_size+0x217d0>
 670:	00 00 ed 5c 	l.j 3bbe0 <__rom_size+0x21894>
 674:	00 00 ef a4 	l.j 3c504 <__rom_size+0x221b8>
 678:	00 00 ed 50 	l.j 3bbb8 <__rom_size+0x2186c>
 67c:	00 00 ed 58 	l.j 3bbdc <__rom_size+0x21890>
 680:	00 00 ed 48 	l.j 3bba0 <__rom_size+0x21854>
 684:	00 00 ed 4c 	l.j 3bbb4 <__rom_size+0x21868>
 688:	00 00 ed 30 	l.j 3bb48 <__rom_size+0x217fc>
 68c:	00 00 ed 44 	l.j 3bb9c <__rom_size+0x21850>
	...
 698:	00 00 f2 80 	l.j 3d098 <__rom_size+0x22d4c>
 69c:	00 00 f2 88 	l.j 3d0bc <__rom_size+0x22d70>
 6a0:	00 00 f2 c0 	l.j 3d1a0 <__rom_size+0x22e54>
 6a4:	00 01 1a 00 	l.j 46ea4 <__rom_size+0x2cb58>
 6a8:	00 00 f2 98 	l.j 3d108 <__rom_size+0x22dbc>
 6ac:	00 00 f2 bc 	l.j 3d19c <__rom_size+0x22e50>
 6b0:	00 00 f2 8c 	l.j 3d0e0 <__rom_size+0x22d94>
 6b4:	00 00 f2 90 	l.j 3d0f4 <__rom_size+0x22da8>
	...
 6c0:	00 00 f2 80 	l.j 3d0c0 <__rom_size+0x22d74>
 6c4:	00 00 f2 88 	l.j 3d0e4 <__rom_size+0x22d98>
 6c8:	00 00 f2 c0 	l.j 3d1c8 <__rom_size+0x22e7c>
 6cc:	00 00 f3 80 	l.j 3d4cc <__rom_size+0x23180>
 6d0:	00 00 f2 98 	l.j 3d130 <__rom_size+0x22de4>
 6d4:	00 00 f2 bc 	l.j 3d1c4 <__rom_size+0x22e78>
 6d8:	00 00 f2 8c 	l.j 3d108 <__rom_size+0x22dbc>
 6dc:	00 00 f2 90 	l.j 3d11c <__rom_size+0x22dd0>
	...
 6e8:	00 00 f3 a0 	l.j 3d568 <__rom_size+0x2321c>
 6ec:	00 00 f3 b8 	l.j 3d5cc <__rom_size+0x23280>
 6f0:	00 00 f3 dc 	l.j 3d660 <__rom_size+0x23314>
 6f4:	00 00 f3 f0 	l.j 3d6b4 <__rom_size+0x23368>
 6f8:	00 00 f3 d0 	l.j 3d638 <__rom_size+0x232ec>
 6fc:	00 00 f3 d8 	l.j 3d65c <__rom_size+0x23310>
 700:	00 00 f3 c4 	l.j 3d610 <__rom_size+0x232c4>
 704:	00 00 f3 cc 	l.j 3d634 <__rom_size+0x232e8>
 708:	00 00 f3 bc 	l.j 3d5f8 <__rom_size+0x232ac>
 70c:	00 00 f3 c0 	l.j 3d60c <__rom_size+0x232c0>
	...
 718:	00 00 f3 c0 	l.j 3d618 <__rom_size+0x232cc>
 71c:	00 00 f3 c4 	l.j 3d62c <__rom_size+0x232e0>
 720:	00 00 f5 84 	l.j 3dd30 <__rom_size+0x239e4>
 724:	00 00 f5 b8 	l.j 3de04 <__rom_size+0x23ab8>
	...
 730:	00 00 f3 cc 	l.j 3d660 <__rom_size+0x23314>
 734:	00 00 f3 d0 	l.j 3d674 <__rom_size+0x23328>
 738:	00 00 f7 50 	l.j 3e478 <__rom_size+0x2412c>
 73c:	00 00 f7 7c 	l.j 3e52c <__rom_size+0x241e0>
	...
 748:	00 01 1b 58 	l.j 474a8 <__rom_size+0x2d15c>
 74c:	00 01 6a 58 	l.j 5b0ac <__rom_size+0x40d60>
 750:	00 01 6a 68 	l.j 5b0f0 <__rom_size+0x40da4>
 754:	00 01 6a 88 	l.j 5b174 <__rom_size+0x40e28>
	...
 760:	00 01 1b 58 	l.j 474c0 <__rom_size+0x2d174>
 764:	00 01 6a 58 	l.j 5b0c4 <__rom_size+0x40d78>
 768:	00 01 6a 68 	l.j 5b108 <__rom_size+0x40dbc>
 76c:	00 01 6a 88 	l.j 5b18c <__rom_size+0x40e40>
	...
 778:	00 01 4a 54 	l.j 530c8 <__rom_size+0x38d7c>
 77c:	00 01 4a 58 	l.j 530dc <__rom_size+0x38d90>
 780:	00 01 4a 78 	l.j 53160 <__rom_size+0x38e14>
 784:	00 01 4a 94 	l.j 531d4 <__rom_size+0x38e88>
	...
 790:	00 01 4a 54 	l.j 530e0 <__rom_size+0x38d94>
 794:	00 01 4a 58 	l.j 530f4 <__rom_size+0x38da8>
 798:	00 01 4a 78 	l.j 53178 <__rom_size+0x38e2c>
 79c:	00 01 4a 94 	l.j 531ec <__rom_size+0x38ea0>
	...
 7a8:	00 01 3c 7c 	l.j 4f998 <__rom_size+0x3564c>
 7ac:	00 01 3c 80 	l.j 4f9ac <__rom_size+0x35660>
 7b0:	00 01 3c 84 	l.j 4f9c0 <__rom_size+0x35674>
 7b4:	00 01 3d 54 	l.j 4fd04 <__rom_size+0x359b8>
	...
 7c0:	00 01 3c 7c 	l.j 4f9b0 <__rom_size+0x35664>
 7c4:	00 01 3c 80 	l.j 4f9c4 <__rom_size+0x35678>
 7c8:	00 01 3c 84 	l.j 4f9d8 <__rom_size+0x3568c>
 7cc:	00 01 3d 54 	l.j 4fd1c <__rom_size+0x359d0>
	...
 7d8:	00 01 38 34 	l.j 4e8a8 <__rom_size+0x3455c>
 7dc:	00 01 38 38 	l.j 4e8bc <__rom_size+0x34570>
 7e0:	00 01 6a 68 	l.j 5b180 <__rom_size+0x40e34>
 7e4:	00 01 6a 88 	l.j 5b204 <__rom_size+0x40eb8>
 7e8:	00 01 3c 50 	l.j 4f928 <__rom_size+0x355dc>
 7ec:	00 01 3c 5c 	l.j 4f95c <__rom_size+0x35610>
 7f0:	00 01 38 44 	l.j 4e900 <__rom_size+0x345b4>
 7f4:	00 01 3c 4c 	l.j 4f924 <__rom_size+0x355d8>
	...
 800:	00 01 38 34 	l.j 4e8d0 <__rom_size+0x34584>
 804:	00 01 38 38 	l.j 4e8e4 <__rom_size+0x34598>
 808:	00 01 6a 68 	l.j 5b1a8 <__rom_size+0x40e5c>
 80c:	00 01 6a 88 	l.j 5b22c <__rom_size+0x40ee0>
 810:	00 01 3c 50 	l.j 4f950 <__rom_size+0x35604>
 814:	00 01 3c 5c 	l.j 4f984 <__rom_size+0x35638>
 818:	00 01 38 44 	l.j 4e928 <__rom_size+0x345dc>
 81c:	00 01 3c 4c 	l.j 4f94c <__rom_size+0x35600>
	...
 828:	00 01 33 00 	l.j 4d428 <__rom_size+0x330dc>
 82c:	00 01 33 30 	l.j 4d4ec <__rom_size+0x331a0>
 830:	00 01 33 34 	l.j 4d500 <__rom_size+0x331b4>
 834:	00 01 34 44 	l.j 4d944 <__rom_size+0x335f8>
	...
 840:	00 01 33 00 	l.j 4d440 <__rom_size+0x330f4>
 844:	00 01 33 30 	l.j 4d504 <__rom_size+0x331b8>
 848:	00 01 33 34 	l.j 4d518 <__rom_size+0x331cc>
 84c:	00 01 34 44 	l.j 4d95c <__rom_size+0x33610>
	...
 858:	00 01 33 00 	l.j 4d458 <__rom_size+0x3310c>
 85c:	00 01 33 30 	l.j 4d51c <__rom_size+0x331d0>
 860:	00 01 33 58 	l.j 4d5c0 <__rom_size+0x33274>
 864:	00 01 33 64 	l.j 4d5f4 <__rom_size+0x332a8>
 868:	00 01 33 50 	l.j 4d5a8 <__rom_size+0x3325c>
 86c:	00 01 33 54 	l.j 4d5bc <__rom_size+0x33270>
 870:	00 01 33 34 	l.j 4d540 <__rom_size+0x331f4>
 874:	00 01 33 4c 	l.j 4d5a4 <__rom_size+0x33258>
	...
 880:	00 01 33 00 	l.j 4d480 <__rom_size+0x33134>
 884:	00 01 33 30 	l.j 4d544 <__rom_size+0x331f8>
 888:	00 01 33 58 	l.j 4d5e8 <__rom_size+0x3329c>
 88c:	00 01 33 64 	l.j 4d61c <__rom_size+0x332d0>
 890:	00 01 33 50 	l.j 4d5d0 <__rom_size+0x33284>
 894:	00 01 33 54 	l.j 4d5e4 <__rom_size+0x33298>
 898:	00 01 33 34 	l.j 4d568 <__rom_size+0x3321c>
 89c:	00 01 33 4c 	l.j 4d5cc <__rom_size+0x33280>
	...
 8a8:	00 01 33 64 	l.j 4d638 <__rom_size+0x332ec>
 8ac:	00 01 33 68 	l.j 4d64c <__rom_size+0x33300>
 8b0:	00 01 34 30 	l.j 4d970 <__rom_size+0x33624>
 8b4:	00 01 34 3c 	l.j 4d9a4 <__rom_size+0x33658>
 8b8:	00 01 34 10 	l.j 4d8f8 <__rom_size+0x335ac>
 8bc:	00 01 34 2c 	l.j 4d96c <__rom_size+0x33620>
 8c0:	00 01 33 f4 	l.j 4d890 <__rom_size+0x33544>
 8c4:	00 01 34 0c 	l.j 4d8f4 <__rom_size+0x335a8>
 8c8:	00 01 33 e8 	l.j 4d868 <__rom_size+0x3351c>
 8cc:	00 01 33 ec 	l.j 4d87c <__rom_size+0x33530>
	...
 8d8:	00 01 31 b8 	l.j 4cfb8 <__rom_size+0x32c6c>
 8dc:	00 01 31 bc 	l.j 4cfcc <__rom_size+0x32c80>
 8e0:	00 01 32 74 	l.j 4d2b0 <__rom_size+0x32f64>
 8e4:	00 01 32 d8 	l.j 4d444 <__rom_size+0x330f8>
	...
 8f0:	00 01 31 b8 	l.j 4cfd0 <__rom_size+0x32c84>
 8f4:	00 01 31 bc 	l.j 4cfe4 <__rom_size+0x32c98>
 8f8:	00 01 32 74 	l.j 4d2c8 <__rom_size+0x32f7c>
 8fc:	00 01 32 d8 	l.j 4d45c <__rom_size+0x33110>
	...
 908:	00 01 29 54 	l.j 4ae58 <__rom_size+0x30b0c>
 90c:	00 01 29 58 	l.j 4ae6c <__rom_size+0x30b20>
 910:	00 01 29 64 	l.j 4aea0 <__rom_size+0x30b54>
 914:	00 01 2c 68 	l.j 4bab4 <__rom_size+0x31768>
 918:	00 01 29 5c 	l.j 4ae88 <__rom_size+0x30b3c>
 91c:	00 01 29 60 	l.j 4ae9c <__rom_size+0x30b50>
	...
 928:	00 01 29 54 	l.j 4ae78 <__rom_size+0x30b2c>
 92c:	00 01 29 58 	l.j 4ae8c <__rom_size+0x30b40>
 930:	00 01 29 64 	l.j 4aec0 <__rom_size+0x30b74>
 934:	00 01 2c 68 	l.j 4bad4 <__rom_size+0x31788>
 938:	00 01 29 5c 	l.j 4aea8 <__rom_size+0x30b5c>
 93c:	00 01 29 60 	l.j 4aebc <__rom_size+0x30b70>
	...
 948:	00 01 23 94 	l.j 49798 <__rom_size+0x2f44c>
 94c:	00 01 23 98 	l.j 497ac <__rom_size+0x2f460>
 950:	00 01 24 14 	l.j 499a0 <__rom_size+0x2f654>
 954:	00 01 24 18 	l.j 499b4 <__rom_size+0x2f668>
 958:	00 01 23 a4 	l.j 497e8 <__rom_size+0x2f49c>
 95c:	00 01 24 10 	l.j 4999c <__rom_size+0x2f650>
 960:	00 01 23 9c 	l.j 497d0 <__rom_size+0x2f484>
 964:	00 01 23 a0 	l.j 497e4 <__rom_size+0x2f498>
	...
 970:	00 01 23 94 	l.j 497c0 <__rom_size+0x2f474>
 974:	00 01 23 98 	l.j 497d4 <__rom_size+0x2f488>
 978:	00 01 24 14 	l.j 499c8 <__rom_size+0x2f67c>
 97c:	00 01 24 18 	l.j 499dc <__rom_size+0x2f690>
 980:	00 01 23 a4 	l.j 49810 <__rom_size+0x2f4c4>
 984:	00 01 24 10 	l.j 499c4 <__rom_size+0x2f678>
 988:	00 01 23 9c 	l.j 497f8 <__rom_size+0x2f4ac>
 98c:	00 01 23 a0 	l.j 4980c <__rom_size+0x2f4c0>
	...
 998:	00 01 23 18 	l.j 495f8 <__rom_size+0x2f2ac>
 99c:	00 01 23 1c 	l.j 4960c <__rom_size+0x2f2c0>
 9a0:	00 01 23 20 	l.j 49620 <__rom_size+0x2f2d4>
 9a4:	00 01 23 78 	l.j 49784 <__rom_size+0x2f438>
	...
 9b0:	00 01 23 18 	l.j 49610 <__rom_size+0x2f2c4>
 9b4:	00 01 23 1c 	l.j 49624 <__rom_size+0x2f2d8>
 9b8:	00 01 23 20 	l.j 49638 <__rom_size+0x2f2ec>
 9bc:	00 01 23 78 	l.j 4979c <__rom_size+0x2f450>
	...
 9c8:	00 01 23 18 	l.j 49628 <__rom_size+0x2f2dc>
 9cc:	00 01 23 1c 	l.j 4963c <__rom_size+0x2f2f0>
 9d0:	00 01 23 20 	l.j 49650 <__rom_size+0x2f304>
 9d4:	00 01 23 6c 	l.j 49784 <__rom_size+0x2f438>
	...
 9e0:	00 01 1e 40 	l.j 482e0 <__rom_size+0x2df94>
 9e4:	00 01 1e 44 	l.j 482f4 <__rom_size+0x2dfa8>
 9e8:	00 01 1e 90 	l.j 48428 <__rom_size+0x2e0dc>
 9ec:	00 01 1e 94 	l.j 4843c <__rom_size+0x2e0f0>
 9f0:	00 01 1e 80 	l.j 483f0 <__rom_size+0x2e0a4>
 9f4:	00 01 1e 8c 	l.j 48424 <__rom_size+0x2e0d8>
 9f8:	00 01 1e 64 	l.j 48388 <__rom_size+0x2e03c>
 9fc:	00 01 1e 7c 	l.j 483ec <__rom_size+0x2e0a0>
 a00:	00 01 1e 48 	l.j 48320 <__rom_size+0x2dfd4>
 a04:	00 01 1e 4c 	l.j 48334 <__rom_size+0x2dfe8>
	...

Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	70 62 5f 45 	l.cust1 
       4:	52 65 73 65 	.word 0x52657365
       8:	72 76 65 64 	l.cust1 
       c:	00 48 45 4c 	l.j 121153c <__stack+0xd91540>
      10:	50 54 45 58 	.word 0x50544558
      14:	54 5f 56 49 	.word 0x545f5649
      18:	44 45 4f 00 	l.jr r9
      1c:	70 45 6e 74 	l.cust1 
      20:	72 79 00 63 	l.cust1 
      24:	6f 6e 66 69 	.word 0x6f6e6669
      28:	67 5f 66 69 	.word 0x675f6669
      2c:	6c 74 65 72 	.word 0x6c746572
      30:	5f 6d 73 67 	.word 0x5f6d7367
      34:	00 72 65 73 	l.j 1c99600 <__stack+0x1819604>
      38:	70 6f 6e 73 	l.cust1 
      3c:	65 00 73 69 	.word 0x65007369
      40:	7a 65 5f 74 	l.cust3 
      44:	00 73 64 5f 	l.j 1cd91c0 <__stack+0x18591c4>
      48:	62 6f 6f 74 	.word 0x626f6f74
      4c:	5f 66 69 6c 	.word 0x5f66696c
      50:	65 00 77 68 	.word 0x65007768
      54:	64 5f 65 78 	.word 0x645f6578
      58:	70 73 74 72 	l.cust1 
      5c:	74 00 64 65 	l.cust2 
      60:	5f 4e 75 6d 	.word 0x5f4e756d
      64:	42 75 66 66 	.word 0x42756666
      68:	65 72 73 00 	.word 0x65727300
      6c:	71 75 69 63 	l.cust1 
      70:	6b 72 61 6e 	.word 0x6b72616e
      74:	64 00 6c 66 	.word 0x64006c66
      78:	6e 5f 63 68 	.word 0x6e5f6368
      7c:	65 63 6b 73 	.word 0x65636b73
      80:	75 6d 00 70 	l.cust2 
      84:	62 5f 4e 65 	.word 0x625f4e65
      88:	78 74 00 6e 	l.cust3 
      8c:	65 78 74 5f 	.word 0x6578745f
      90:	77 6f 72 64 	l.cust2 
      94:	00 6e 65 77 	l.j 1b99670 <__stack+0x1719674>
      98:	69 64 00 66 	.word 0x69640066
      9c:	69 72 6d 77 	.word 0x69726d77
      a0:	61 72 65 00 	.word 0x61726500
      a4:	73 74 5f 66 	l.cust1 
      a8:	6c 61 67 73 	.word 0x6c616773
      ac:	00 74 5f 68 	l.j 1d17e4c <__stack+0x1897e50>
      b0:	61 72 64 66 	.word 0x61726466
      b4:	69 6c 65 00 	.word 0x696c6500
      b8:	72 65 70 65 	l.cust1 
      bc:	61 74 00 72 	.word 0x61740072
      c0:	64 62 5f 42 	.word 0x64625f42
      c4:	61 64 42 6c 	.word 0x6164426c
      c8:	6f 63 6b 4c 	.word 0x6f636b4c
      cc:	69 73 74 00 	.word 0x69737400
      d0:	4d 45 4e 55 	l.maci r5,0x4e55
      d4:	5f 52 45 53 	.word 0x5f524553
      d8:	45 54 32 00 	l.jr r6
      dc:	46 61 74 61 	l.jr r14
      e0:	6c 45 72 72 	.word 0x6c457272
      e4:	6f 72 00 30 	.word 0x6f720030
      e8:	31 32 33 34 	.word 0x31323334
      ec:	35 36 37 38 	.word 0x35363738
      f0:	39 61 62 63 	.word 0x39616263
      f4:	64 65 66 00 	.word 0x64656600
      f8:	74 6f 74 61 	l.cust2 
      fc:	6c 5f 73 65 	.word 0x6c5f7365
     100:	63 74 6f 72 	.word 0x63746f72
     104:	73 00 4d 4d 	l.cust1 
     108:	43 5f 52 65 	.word 0x435f5265
     10c:	61 64 00 43 	.word 0x61640043
     110:	72 65 61 74 	l.cust1 
     114:	65 54 69 6d 	.word 0x6554696d
     118:	65 00 67 65 	.word 0x65006765
     11c:	6f 6d 65 74 	.word 0x6f6d6574
     120:	72 79 00 48 	l.cust1 
     124:	45 4c 50 54 	l.jr r10
     128:	45 58 54 5f 	l.jr r10
     12c:	48 41 52 44 	l.jalr r10
     130:	46 49 4c 45 	l.jr r9
     134:	00 68 64 66 	l.j 1a192cc <__stack+0x15992d0>
     138:	54 59 50 45 	.word 0x54595045
     13c:	00 72 64 62 	l.j 1c992c4 <__stack+0x18192c8>
     140:	5f 48 69 43 	.word 0x5f486943
     144:	79 6c 69 6e 	l.cust3 
     148:	64 65 72 00 	.word 0x64657200
     14c:	69 45 6e 74 	.word 0x69456e74
     150:	72 79 00 4f 	l.cust1 
     154:	70 65 6e 48 	l.cust1 
     158:	61 72 64 66 	.word 0x61726466
     15c:	69 6c 65 00 	.word 0x696c6500
     160:	63 6f 6e 66 	.word 0x636f6e66
     164:	69 67 5f 63 	.word 0x69675f63
     168:	68 69 70 73 	.word 0x68697073
     16c:	65 74 5f 6d 	.word 0x65745f6d
     170:	73 67 00 63 	l.cust1 
     174:	6f 6e 66 69 	.word 0x6f6e6669
     178:	67 5f 73 63 	.word 0x675f7363
     17c:	61 6e 6c 69 	.word 0x616e6c69
     180:	6e 65 73 5f 	.word 0x6e65735f
     184:	6d 73 67 00 	.word 0x6d736700
     188:	72 78 72 70 	l.cust1 
     18c:	00 4f 73 64 	l.j 13dcf1c <__stack+0xf5cf20>
     190:	52 65 63 6f 	.word 0x5265636f
     194:	6e 66 69 67 	.word 0x6e666967
     198:	00 64 65 5f 	l.j 1919714 <__stack+0x1499718>
     19c:	52 65 73 65 	.word 0x52657365
     1a0:	72 76 65 64 	l.cust1 
     1a4:	00 5f 73 68 	l.j 17dcf44 <__stack+0x135cf48>
     1a8:	6f 77 64 65 	.word 0x6f776465
     1ac:	62 75 67 6d 	.word 0x6275676d
     1b0:	65 73 73 61 	.word 0x65737361
     1b4:	67 65 73 00 	.word 0x67657300
     1b8:	66 73 5f 4d 	.word 0x66735f4d
     1bc:	65 6e 75 43 	.word 0x656e7543
     1c0:	61 6e 63 65 	.word 0x616e6365
     1c4:	6c 00 46 69 	.word 0x6c004669
     1c8:	6e 64 53 79 	.word 0x6e645379
     1cc:	6e 63 00 4d 	.word 0x6e63004d
     1d0:	45 4e 55 5f 	l.jr r10
     1d4:	53 59 4e 54 	.word 0x53594e54
     1d8:	48 52 44 42 	l.jalr r8
     1dc:	32 5f 31 00 	.word 0x325f3100
     1e0:	4d 45 4e 55 	l.maci r5,0x4e55
     1e4:	5f 53 59 4e 	.word 0x5f53594e
     1e8:	54 48 52 44 	.word 0x54485244
     1ec:	42 32 5f 32 	.word 0x42325f32
     1f0:	00 73 69 67 	l.j 1cda78c <__stack+0x185a790>
     1f4:	6e 00 70 53 	.word 0x6e007053
     1f8:	74 72 31 00 	l.cust2 
     1fc:	48 65 6c 70 	l.jalr r13
     200:	54 65 78 74 	.word 0x54657874
     204:	5f 4d 65 73 	.word 0x5f4d6573
     208:	73 61 67 65 	l.cust1 
     20c:	00 4d 45 4e 	l.j 1351744 <__stack+0xed1748>
     210:	55 5f 41 42 	.word 0x555f4142
     214:	4f 55 54 31 	l.maci r21,0x5431
     218:	00 4d 45 4e 	l.j 1351750 <__stack+0xed1754>
     21c:	55 5f 41 42 	.word 0x555f4142
     220:	4f 55 54 32 	l.maci r21,0x5432
     224:	00 73 74 61 	l.j 1cdd3a8 <__stack+0x185d3ac>
     228:	72 74 5f 63 	l.cust1 
     22c:	6c 75 73 74 	.word 0x6c757374
     230:	65 72 00 66 	.word 0x65720066
     234:	61 74 5f 6e 	.word 0x61745f6e
     238:	75 6d 62 65 	l.cust2 
     23c:	72 00 66 72 	l.cust1 
     240:	61 6d 65 62 	.word 0x616d6562
     244:	75 66 66 65 	l.cust2 
     248:	72 5f 63 6c 	l.cust1 
     24c:	65 61 72 00 	.word 0x65617200
     250:	53 65 6e 64 	.word 0x53656e64
     254:	47 61 70 00 	l.jr r14
     258:	73 65 63 74 	l.cust1 
     25c:	6f 72 5f 62 	.word 0x6f725f62
     260:	75 66 66 65 	l.cust2 
     264:	72 00 42 6f 	l.cust1 
     268:	6f 74 43 75 	.word 0x6f744375
     26c:	73 74 6f 6d 	l.cust1 
     270:	49 6e 69 74 	l.jalr r13
     274:	00 6d 6f 6e 	l.j 1b5c02c <__stack+0x16dc030>
     278:	5f 64 65 63 	.word 0x5f646563
     27c:	6f 64 65 63 	.word 0x6f646563
     280:	6d 64 00 69 	.word 0x6d640069
     284:	44 69 72 65 	l.jr r14
     288:	63 74 6f 72 	.word 0x63746f72
     28c:	79 00 57 72 	l.cust3 
     290:	69 74 65 53 	.word 0x69746553
     294:	74 61 74 75 	l.cust2 
     298:	73 00 43 53 	l.cust1 
     29c:	44 44 61 74 	l.jr r12
     2a0:	61 00 73 74 	.word 0x61007374
     2a4:	61 72 00 53 	.word 0x61720053
     2a8:	65 6c 65 63 	.word 0x656c6563
     2ac:	74 46 69 6c 	l.cust2 
     2b0:	65 00 48 45 	.word 0x65004845
     2b4:	4c 50 54 45 	l.maci r16,0x5445
     2b8:	58 54 5f 4e 	.word 0x58545f4e
     2bc:	4f 4e 45 00 	l.maci r14,0x4500
     2c0:	74 5f 73 6f 	l.cust2 
     2c4:	72 74 5f 74 	l.cust1 
     2c8:	61 62 6c 65 	.word 0x61626c65
     2cc:	00 6d 6f 6e 	l.j 1b5c084 <__stack+0x16dc088>
     2d0:	5f 76 65 72 	.word 0x5f766572
     2d4:	73 69 6f 6e 	l.cust1 
     2d8:	00 64 69 73 	l.j 191a8a4 <__stack+0x149a8a8>
     2dc:	61 62 6c 65 	.word 0x61626c65
     2e0:	5f 61 72 33 	.word 0x5f617233
     2e4:	00 64 65 6c 	l.j 1919894 <__stack+0x1499898>
     2e8:	61 79 00 66 	.word 0x61790066
     2ec:	72 61 6d 65 	l.cust1 
     2f0:	62 75 66 66 	.word 0x62756666
     2f4:	65 72 00 66 	.word 0x65720066
     2f8:	6c 6f 70 70 	.word 0x6c6f7070
     2fc:	79 54 59 50 	l.cust3 
     300:	45 00 72 6f 	l.jr r14
     304:	6f 74 5f 64 	.word 0x6f745f64
     308:	69 72 65 63 	.word 0x69726563
     30c:	74 6f 72 79 	l.cust2 
     310:	5f 73 69 7a 	.word 0x5f73697a
     314:	65 00 72 78 	.word 0x65007278
     318:	77 70 00 5f 	l.cust2 
     31c:	68 65 61 70 	.word 0x68656170
     320:	5f 65 6e 64 	.word 0x5f656e64
     324:	00 70 61 72 	l.j 1c188ec <__stack+0x17988f0>
     328:	74 69 74 69 	l.cust2 
     32c:	6f 6e 63 6f 	.word 0x6f6e636f
     330:	75 6e 74 00 	l.cust2 
     334:	4d 45 4e 55 	l.maci r5,0x4e55
     338:	5f 53 45 54 	.word 0x5f534554
     33c:	54 49 4e 47 	.word 0x54494e47
     340:	53 5f 43 48 	.word 0x535f4348
     344:	49 50 53 45 	l.jalr r10
     348:	54 31 00 72 	.word 0x54310072
     34c:	64 62 5f 52 	.word 0x64625f52
     350:	65 73 65 72 	.word 0x65736572
     354:	76 65 64 31 	l.cust2 
     358:	00 72 64 62 	l.j 1c994e0 <__stack+0x18194e4>
     35c:	5f 52 65 73 	.word 0x5f526573
     360:	65 72 76 65 	.word 0x65727665
     364:	64 32 00 72 	.word 0x64320072
     368:	64 62 5f 52 	.word 0x64625f52
     36c:	65 73 65 72 	.word 0x65736572
     370:	76 65 64 33 	l.cust2 
     374:	00 72 64 62 	l.j 1c994fc <__stack+0x1819500>
     378:	5f 52 65 73 	.word 0x5f526573
     37c:	65 72 76 65 	.word 0x65727665
     380:	64 34 00 72 	.word 0x64340072
     384:	64 62 5f 52 	.word 0x64625f52
     388:	65 73 65 72 	.word 0x65736572
     38c:	76 65 64 35 	l.cust2 
     390:	00 48 45 4c 	l.j 12118c0 <__stack+0xd918c4>
     394:	50 54 45 58 	.word 0x50544558
     398:	54 5f 4d 45 	.word 0x545f4d45
     39c:	4d 4f 52 59 	l.maci r15,0x5259
     3a0:	00 41 70 70 	l.j 105c560 <__stack+0xbdc564>
     3a4:	6c 79 43 6f 	.word 0x6c79436f
     3a8:	6e 66 69 67 	.word 0x6e666967
     3ac:	75 72 61 74 	l.cust2 
     3b0:	69 6f 6e 00 	.word 0x696f6e00
     3b4:	62 63 75 72 	.word 0x62637572
     3b8:	78 00 62 63 	l.cust3 
     3bc:	75 72 79 00 	l.cust2 
     3c0:	72 65 73 75 	l.cust1 
     3c4:	6c 74 00 64 	.word 0x6c740064
     3c8:	65 62 75 67 	.word 0x65627567
     3cc:	6d 73 67 32 	.word 0x6d736732
     3d0:	00 48 61 6e 	l.j 1218988 <__stack+0xd9898c>
     3d4:	64 6c 65 55 	.word 0x646c6555
     3d8:	49 00 53 61 	l.jalr r10
     3dc:	76 65 43 6f 	l.cust2 
     3e0:	6e 66 69 67 	.word 0x6e666967
     3e4:	75 72 61 74 	l.cust2 
     3e8:	69 6f 6e 00 	.word 0x696f6e00
     3ec:	46 69 6c 65 	l.jr r13
     3f0:	52 65 61 64 	.word 0x52656164
     3f4:	00 66 72 61 	l.j 199cd78 <__stack+0x151cd7c>
     3f8:	6d 65 62 75 	.word 0x6d656275
     3fc:	66 66 65 72 	.word 0x66666572
     400:	5f 70 6c 6f 	.word 0x5f706c6f
     404:	74 00 74 78 	l.cust2 
     408:	62 75 66 5f 	.word 0x6275665f
     40c:	70 75 74 73 	l.cust1 
     410:	00 63 6f 6e 	l.j 18dc1c8 <__stack+0x145c1cc>
     414:	66 69 67 5f 	.word 0x6669675f
     418:	68 64 66 5f 	.word 0x6864665f
     41c:	6d 73 67 00 	.word 0x6d736700
     420:	53 65 6e 64 	.word 0x53656e64
     424:	53 65 63 74 	.word 0x53656374
     428:	6f 72 00 6d 	.word 0x6f72006d
     42c:	65 6e 75 00 	.word 0x656e7500
     430:	4d 45 4e 55 	l.maci r5,0x4e55
     434:	5f 46 49 52 	.word 0x5f464952
     438:	4d 57 41 52 	l.maci r23,0x4152
     43c:	45 5f 4f 50 	l.jr r9
     440:	54 49 4f 4e 	.word 0x54494f4e
     444:	53 5f 45 4e 	.word 0x535f454e
     448:	41 42 4c 45 	.word 0x41424c45
     44c:	31 00 4d 45 	.word 0x31004d45
     450:	4e 55 5f 46 	l.maci r21,0x5f46
     454:	49 52 4d 57 	l.jalr r9
     458:	41 52 45 5f 	.word 0x4152455f
     45c:	4f 50 54 49 	l.maci r16,0x5449
     460:	4f 4e 53 5f 	l.maci r14,0x535f
     464:	45 4e 41 42 	l.jr r8
     468:	4c 45 32 00 	l.maci r5,0x3200
     46c:	43 6f 6d 70 	.word 0x436f6d70
     470:	61 72 65 44 	.word 0x61726544
     474:	69 72 45 6e 	.word 0x6972456e
     478:	74 72 69 65 	l.cust2 
     47c:	73 00 63 79 	l.cust1 
     480:	6c 69 6e 64 	.word 0x6c696e64
     484:	65 72 00 43 	.word 0x65720043
     488:	6f 6e 66 69 	.word 0x6f6e6669
     48c:	67 43 50 55 	.word 0x67435055
     490:	00 75 6e 69 	l.j 1d5be34 <__stack+0x18dbe38>
     494:	74 00 4d 45 	l.cust2 
     498:	4e 55 5f 46 	l.maci r21,0x5f46
     49c:	49 52 4d 57 	l.jalr r9
     4a0:	41 52 45 31 	.word 0x41524531
     4a4:	00 4d 45 4e 	l.j 13519dc <__stack+0xed19e0>
     4a8:	55 5f 46 49 	.word 0x555f4649
     4ac:	52 4d 57 41 	.word 0x524d5741
     4b0:	52 45 32 00 	.word 0x52453200
     4b4:	47 65 74 54 	l.jr r14
     4b8:	69 6d 65 72 	.word 0x696d6572
     4bc:	00 43 68 65 	l.j 10da650 <__stack+0xc5a654>
     4c0:	63 6b 42 75 	.word 0x636b4275
     4c4:	74 74 6f 6e 	l.cust2 
     4c8:	00 46 69 6c 	l.j 119aa78 <__stack+0xd1aa7c>
     4cc:	65 52 65 61 	.word 0x65526561
     4d0:	64 45 78 00 	.word 0x64457800
     4d4:	6d 61 69 6e 	.word 0x6d61696e
     4d8:	00 50 61 72 	l.j 1418aa0 <__stack+0xf98aa4>
     4dc:	74 69 74 69 	l.cust2 
     4e0:	6f 6e 00 50 	.word 0x6f6e0050
     4e4:	61 72 74 69 	.word 0x61727469
     4e8:	74 69 6f 6e 	l.cust2 
     4ec:	42 6c 6f 63 	.word 0x426c6f63
     4f0:	6b 00 74 78 	.word 0x6b007478
     4f4:	62 75 66 00 	.word 0x62756600
     4f8:	4d 45 4e 55 	l.maci r5,0x4e55
     4fc:	5f 53 45 54 	.word 0x5f534554
     500:	54 49 4e 47 	.word 0x54494e47
     504:	53 5f 48 41 	.word 0x535f4841
     508:	52 44 46 49 	.word 0x52444649
     50c:	4c 45 31 00 	l.maci r5,0x3100
     510:	4d 45 4e 55 	l.maci r5,0x4e55
     514:	5f 53 45 54 	.word 0x5f534554
     518:	54 49 4e 47 	.word 0x54494e47
     51c:	53 5f 48 41 	.word 0x535f4841
     520:	52 44 46 49 	.word 0x52444649
     524:	4c 45 32 00 	l.maci r5,0x3200
     528:	74 6f 6c 6f 	l.cust2 
     52c:	77 65 72 00 	l.cust2 
     530:	77 68 64 5f 	l.cust2 
     534:	72 65 76 69 	l.cust1 
     538:	73 69 6f 6e 	l.cust1 
     53c:	00 62 6f 6f 	l.j 189c2f8 <__stack+0x141c2fc>
     540:	74 5f 73 65 	l.cust2 
     544:	63 74 6f 72 	.word 0x63746f72
     548:	00 72 61 6e 	l.j 1c98b00 <__stack+0x1818b04>
     54c:	6b 00 63 6c 	.word 0x6b00636c
     550:	75 73 74 65 	l.cust2 
     554:	72 5f 73 69 	l.cust1 
     558:	7a 65 00 65 	l.cust3 
     55c:	6e 74 65 72 	.word 0x6e746572
     560:	65 64 00 73 	.word 0x65640073
     564:	63 72 65 65 	.word 0x63726565
     568:	6e 6d 6f 64 	.word 0x6e6d6f64
     56c:	65 00 4d 45 	.word 0x65004d45
     570:	4e 55 5f 4d 	l.maci r21,0x5f4d
     574:	41 49 4e 31 	.word 0x41494e31
     578:	00 4d 45 4e 	l.j 1351ab0 <__stack+0xed1ab4>
     57c:	55 5f 4d 41 	.word 0x555f4d41
     580:	49 4e 32 00 	l.jalr r6
     584:	42 6f 6f 74 	.word 0x426f6f74
     588:	55 70 6c 6f 	.word 0x55706c6f
     58c:	61 64 4c 6f 	.word 0x61644c6f
     590:	67 6f 00 72 	.word 0x676f0072
     594:	6f 6d 66 69 	.word 0x6f6d6669
     598:	6c 65 00 72 	.word 0x6c650072
     59c:	64 62 5f 57 	.word 0x64625f57
     5a0:	72 69 74 65 	l.cust1 
     5a4:	50 72 65 43 	.word 0x50726543
     5a8:	6f 6d 70 00 	.word 0x6f6d7000
     5ac:	43 61 72 64 	.word 0x43617264
     5b0:	54 79 70 65 	.word 0x54797065
     5b4:	00 73 63 72 	l.j 1cd937c <__stack+0x1859380>
     5b8:	6f 6c 6c 5f 	.word 0x6f6c6c5f
     5bc:	6f 66 66 73 	.word 0x6f666673
     5c0:	65 74 00 69 	.word 0x65740069
     5c4:	6e 73 65 72 	.word 0x6e736572
     5c8:	74 00 4f 73 	l.cust2 
     5cc:	64 47 65 74 	.word 0x64476574
     5d0:	43 74 72 6c 	.word 0x4374726c
     5d4:	00 72 64 62 	l.j 1c9975c <__stack+0x1819760>
     5d8:	5f 42 6c 6f 	.word 0x5f426c6f
     5dc:	63 6b 42 79 	.word 0x636b4279
     5e0:	74 65 73 00 	l.cust2 
     5e4:	69 53 74 61 	.word 0x69537461
     5e8:	72 74 43 6c 	l.cust1 
     5ec:	75 73 74 65 	l.cust2 
     5f0:	72 00 4d 61 	l.cust1 
     5f4:	73 74 65 72 	l.cust1 
     5f8:	42 6f 6f 74 	.word 0x426f6f74
     5fc:	52 65 63 6f 	.word 0x5265636f
     600:	72 64 00 43 	l.cust1 
     604:	68 65 63 6b 	.word 0x6865636b
     608:	54 69 6d 65 	.word 0x54696d65
     60c:	72 00 75 69 	l.cust1 
     610:	6e 74 38 5f 	.word 0x6e74385f
     614:	74 00 4d 45 	l.cust2 
     618:	4e 55 5f 46 	l.maci r21,0x5f46
     61c:	49 52 4d 57 	l.jalr r9
     620:	41 52 45 5f 	.word 0x4152455f
     624:	55 50 44 41 	.word 0x55504441
     628:	54 45 31 00 	.word 0x54453100
     62c:	4d 45 4e 55 	l.maci r5,0x4e55
     630:	5f 46 49 52 	.word 0x5f464952
     634:	4d 57 41 52 	l.maci r23,0x4152
     638:	45 5f 55 50 	l.jr r10
     63c:	44 41 54 45 	l.jr r10
     640:	32 00 64 65 	.word 0x32006465
     644:	5f 43 6f 6e 	.word 0x5f436f6e
     648:	74 72 6f 6c 	l.cust2 
     64c:	00 4f 73 64 	l.j 13dd3dc <__stack+0xf5d3e0>
     650:	43 6c 65 61 	.word 0x436c6561
     654:	72 00 63 68 	l.cust1 
     658:	69 70 73 65 	.word 0x69707365
     65c:	74 00 4d 45 	l.cust2 
     660:	4e 55 5f 48 	l.maci r21,0x5f48
     664:	41 52 44 46 	.word 0x41524446
     668:	49 4c 45 5f 	l.jalr r8
     66c:	43 48 41 4e 	.word 0x4348414e
     670:	47 45 44 31 	l.jr r8
     674:	00 4d 45 4e 	l.j 1351bac <__stack+0xed1bb0>
     678:	55 5f 48 41 	.word 0x555f4841
     67c:	52 44 46 49 	.word 0x52444649
     680:	4c 45 5f 43 	l.maci r5,0x5f43
     684:	48 41 4e 47 	l.jalr r9
     688:	45 44 32 00 	l.jr r6
     68c:	62 6c 6f 63 	.word 0x626c6f63
     690:	6b 6f 66 66 	.word 0x6b6f6666
     694:	73 65 74 00 	l.cust1 
     698:	70 52 65 61 	l.cust1 
     69c:	64 42 75 66 	.word 0x64427566
     6a0:	66 65 72 00 	.word 0x66657200
     6a4:	50 61 72 74 	.word 0x50617274
     6a8:	69 74 69 6f 	.word 0x6974696f
     6ac:	6e 45 6e 74 	.word 0x6e456e74
     6b0:	72 79 00 42 	l.cust1 
     6b4:	6f 6f 74 49 	.word 0x6f6f7449
     6b8:	6e 69 74 00 	.word 0x6e697400
     6bc:	74 5f 44 69 	l.cust2 
     6c0:	72 45 6e 74 	l.cust1 
     6c4:	72 79 4c 46 	l.cust1 
     6c8:	4e 00 75 6e 	l.maci r0,0x756e
     6cc:	73 69 67 6e 	l.cust1 
     6d0:	65 64 20 63 	.word 0x65642063
     6d4:	68 61 72 00 	.word 0x68617200
     6d8:	6d 6f 6e 5f 	.word 0x6d6f6e5f
     6dc:	70 61 72 73 	l.cust1 
     6e0:	65 63 6d 64 	.word 0x65636d64
     6e4:	00 4d 4d 43 	l.j 1353bf0 <__stack+0xed3bf4>
     6e8:	5f 43 52 43 	.word 0x5f435243
     6ec:	00 41 74 74 	l.j 105d8bc <__stack+0xbdd8c0>
     6f0:	72 69 62 75 	l.cust1 
     6f4:	74 65 73 00 	l.cust2 
     6f8:	77 68 64 5f 	l.cust2 
     6fc:	76 65 72 73 	l.cust2 
     700:	69 6f 6e 00 	.word 0x696f6e00
     704:	6d 65 6e 75 	.word 0x6d656e75
     708:	6d 61 73 6b 	.word 0x6d61736b
     70c:	00 4f 73 64 	l.j 13dd49c <__stack+0xf5d4a0>
     710:	53 65 74 54 	.word 0x53657454
     714:	69 74 6c 65 	.word 0x69746c65
     718:	00 70 62 5f 	l.j 1c19094 <__stack+0x1799098>
     71c:	52 65 73 65 	.word 0x52657365
     720:	72 76 65 64 	l.cust1 
     724:	31 00 70 62 	.word 0x31007062
     728:	5f 52 65 73 	.word 0x5f526573
     72c:	65 72 76 65 	.word 0x65727665
     730:	64 32 00 66 	.word 0x64320066
     734:	6f 72 6d 61 	.word 0x6f726d61
     738:	74 5f 69 6e 	l.cust2 
     73c:	74 00 64 65 	l.cust2 
     740:	5f 42 6f 6f 	.word 0x5f426f6f
     744:	74 50 72 69 	l.cust2 
     748:	00 6d 6f 6e 	l.j 1b5c500 <__stack+0x16dc504>
     74c:	5f 65 6e 00 	.word 0x5f656e00
     750:	70 61 72 74 	l.cust1 
     754:	69 74 69 6f 	.word 0x6974696f
     758:	6e 00 5f 5f 	.word 0x6e005f5f
     75c:	62 75 69 6c 	.word 0x6275696c
     760:	74 69 6e 5f 	l.cust2 
     764:	76 61 5f 6c 	l.cust2 
     768:	69 73 74 00 	.word 0x69737400
     76c:	4f 73 64 44 	l.maci r19,0x6444
     770:	69 73 61 62 	.word 0x69736162
     774:	6c 65 00 64 	.word 0x6c650064
     778:	65 5f 49 6e 	.word 0x655f496e
     77c:	74 65 72 6c 	l.cust2 
     780:	65 61 76 65 	.word 0x65617665
     784:	00 6c 6f 72 	l.j 1b1c54c <__stack+0x169c550>
     788:	65 73 00 73 	.word 0x65730073
     78c:	74 72 6e 63 	l.cust2 
     790:	61 74 00 5f 	.word 0x6174005f
     794:	5f 67 6e 75 	.word 0x5f676e75
     798:	63 5f 76 61 	.word 0x635f7661
     79c:	5f 6c 69 73 	.word 0x5f6c6973
     7a0:	74 00 62 79 	l.cust2 
     7a4:	74 65 73 00 	l.cust2 
     7a8:	4d 45 4e 55 	l.maci r5,0x4e55
     7ac:	5f 53 41 56 	.word 0x5f534156
     7b0:	45 43 4f 4e 	l.jr r9
     7b4:	46 49 47 5f 	l.jr r8
     7b8:	31 00 4d 45 	.word 0x31004d45
     7bc:	4e 55 5f 53 	l.maci r21,0x5f53
     7c0:	41 56 45 43 	.word 0x41564543
     7c4:	4f 4e 46 49 	l.maci r14,0x4649
     7c8:	47 5f 32 00 	l.jr r6
     7cc:	70 61 72 65 	l.cust1 
     7d0:	6e 74 73 74 	.word 0x6e747374
     7d4:	61 74 65 00 	.word 0x61746500
     7d8:	72 64 62 5f 	l.cust1 
     7dc:	53 75 6d 6d 	.word 0x53756d6d
     7e0:	65 64 6c 6f 	.word 0x65646c6f
     7e4:	6e 67 73 00 	.word 0x6e677300
     7e8:	75 63 64 69 	l.cust2 
     7ec:	67 69 74 73 	.word 0x67697473
     7f0:	00 6e 42 6c 	l.j 1b911a0 <__stack+0x17111a4>
     7f4:	6f 63 6b 43 	.word 0x6f636b43
     7f8:	6f 75 6e 74 	.word 0x6f756e74
     7fc:	00 55 70 64 	l.j 155c98c <__stack+0x10dc990>
     800:	61 74 65 44 	.word 0x61746544
     804:	72 69 76 65 	l.cust1 
     808:	53 74 61 74 	.word 0x53746174
     80c:	75 73 00 43 	l.cust2 
     810:	6f 6e 66 69 	.word 0x6f6e6669
     814:	67 75 72 61 	.word 0x67757261
     818:	74 69 6f 6e 	l.cust2 
     81c:	45 78 69 73 	l.jr r13
     820:	74 73 00 42 	l.cust2 
     824:	6f 6f 74 55 	.word 0x6f6f7455
     828:	70 6c 6f 61 	l.cust1 
     82c:	64 43 6f 70 	.word 0x64436f70
     830:	70 65 72 00 	l.cust1 
     834:	63 6f 6e 66 	.word 0x636f6e66
     838:	69 67 5f 6d 	.word 0x69675f6d
     83c:	65 6d 6f 72 	.word 0x656d6f72
     840:	79 5f 73 6c 	l.cust3 
     844:	6f 77 5f 6d 	.word 0x6f775f6d
     848:	73 67 00 4d 	l.cust1 
     84c:	45 4e 55 5f 	l.jr r10
     850:	53 45 54 54 	.word 0x53455454
     854:	49 4e 47 53 	l.jalr r8
     858:	5f 56 49 44 	.word 0x5f564944
     85c:	45 4f 31 00 	l.jr r6
     860:	4d 45 4e 55 	l.maci r5,0x4e55
     864:	5f 53 45 54 	.word 0x5f534554
     868:	54 49 4e 47 	.word 0x54494e47
     86c:	53 5f 56 49 	.word 0x535f5649
     870:	44 45 4f 32 	l.jr r9
     874:	00 47 4e 55 	l.j 11d41c8 <__stack+0xd541cc>
     878:	20 43 20 34 	.word 0x20432034
     87c:	2e 35 2e 31 	.word 0x2e352e31
     880:	2d 6f 72 33 	.word 0x2d6f7233
     884:	32 2d 31 2e 	.word 0x322d312e
     888:	30 72 63 34 	.word 0x30726334
     88c:	00 69 73 5f 	l.j 1a5d608 <__stack+0x15dd60c>
     890:	69 6e 74 65 	.word 0x696e7465
     894:	67 65 72 00 	.word 0x67657200
     898:	43 68 61 6e 	.word 0x4368616e
     89c:	67 65 44 69 	.word 0x67654469
     8a0:	72 65 63 74 	l.cust1 
     8a4:	6f 72 79 00 	.word 0x6f727900
     8a8:	4f 73 64 57 	l.maci r19,0x6457
     8ac:	72 69 74 65 	l.cust1 
     8b0:	00 48 61 6e 	l.j 1218e68 <__stack+0xd98e6c>
     8b4:	64 6c 65 48 	.word 0x646c6548
     8b8:	44 44 00 4d 	l.jr r0
     8bc:	45 4e 55 5f 	l.jr r10
     8c0:	46 49 4c 45 	l.jr r9
     8c4:	5f 53 45 4c 	.word 0x5f53454c
     8c8:	45 43 54 45 	l.jr r10
     8cc:	44 00 69 73 	l.jr r13
     8d0:	5f 66 69 6c 	.word 0x5f66696c
     8d4:	65 00 4d 4d 	.word 0x65004d4d
     8d8:	43 5f 43 4d 	.word 0x435f434d
     8dc:	44 31 32 00 	l.jr r6
     8e0:	64 65 5f 4c 	.word 0x64655f4c
     8e4:	6f 77 43 79 	.word 0x6f774379
     8e8:	6c 00 43 6f 	.word 0x6c00436f
     8ec:	6e 66 69 67 	.word 0x6e666967
     8f0:	43 68 69 70 	.word 0x43686970
     8f4:	73 65 74 00 	l.cust1 
     8f8:	73 63 61 6e 	l.cust1 
     8fc:	64 00 73 63 	.word 0x64007363
     900:	61 6e 68 00 	.word 0x616e6800
     904:	73 63 61 6e 	l.cust1 
     908:	69 00 70 62 	.word 0x69007062
     90c:	5f 49 44 00 	.word 0x5f494400
     910:	64 65 5f 42 	.word 0x64655f42
     914:	61 75 64 00 	.word 0x61756400
     918:	70 4c 46 4e 	l.cust1 
     91c:	31 00 70 4c 	.word 0x3100704c
     920:	46 4e 32 00 	l.jr r6
     924:	74 5f 44 69 	l.cust2 
     928:	72 45 6e 74 	l.cust1 
     92c:	72 79 00 72 	l.cust1 
     930:	64 62 5f 44 	.word 0x64625f44
     934:	69 73 6b 50 	.word 0x69736b50
     938:	72 6f 64 75 	l.cust1 
     93c:	63 74 00 70 	.word 0x63740070
     940:	6c 75 73 00 	.word 0x6c757300
     944:	75 70 64 61 	l.cust2 
     948:	74 65 6b 69 	l.cust2 
     94c:	63 6b 73 74 	.word 0x636b7374
     950:	61 72 74 00 	.word 0x61727400
     954:	2f 68 6f 6d 	.word 0x2f686f6d
     958:	65 2f 75 73 	.word 0x652f7573
     95c:	65 72 2f 44 	.word 0x65722f44
     960:	65 73 63 61 	.word 0x65736361
     964:	72 67 61 73 	l.cust1 
     968:	2f 6d 69 6e 	.word 0x2f6d696e
     96c:	69 6d 69 67 	.word 0x696d6967
     970:	2d 64 65 31 	.word 0x2d646531
     974:	2f 66 77 2f 	.word 0x2f66772f
     978:	63 74 72 6c 	.word 0x6374726c
     97c:	00 69 44 69 	l.j 1a51b20 <__stack+0x15d1b24>
     980:	72 65 63 74 	l.cust1 
     984:	6f 72 79 53 	.word 0x6f727953
     988:	65 63 74 6f 	.word 0x6563746f
     98c:	72 00 72 73 	l.cust1 
     990:	74 76 61 6c 	l.cust2 
     994:	00 72 65 70 	l.j 1c99f54 <__stack+0x1819f58>
     998:	65 61 74 32 	.word 0x65617432
     99c:	00 4f 73 64 	l.j 13dd72c <__stack+0xf5d730>
     9a0:	52 65 73 65 	.word 0x52657365
     9a4:	74 00 6a 6d 	l.cust2 
     9a8:	70 73 00 72 	l.cust1 
     9ac:	6f 6d 6b 65 	.word 0x6f6d6b65
     9b0:	79 00 45 78 	l.cust3 
     9b4:	74 65 6e 73 	l.cust2 
     9b8:	69 6f 6e 00 	.word 0x696f6e00
     9bc:	63 6c 75 73 	.word 0x636c7573
     9c0:	74 65 72 5f 	l.cust2 
     9c4:	6d 61 73 6b 	.word 0x6d61736b
     9c8:	00 63 79 6c 	l.j 18def78 <__stack+0x145ef7c>
     9cc:	69 6e 64 65 	.word 0x696e6465
     9d0:	72 5f 68 69 	l.cust1 
     9d4:	67 68 00 6c 	.word 0x6768006c
     9d8:	69 6e 65 6c 	.word 0x696e656c
     9dc:	69 6d 69 74 	.word 0x696d6974
     9e0:	00 64 65 5f 	l.j 1919f5c <__stack+0x1499f60>
     9e4:	42 6f 6f 74 	.word 0x426f6f74
     9e8:	42 6c 6f 63 	.word 0x426c6f63
     9ec:	6b 73 00 65 	.word 0x6b730065
     9f0:	6e 61 62 6c 	.word 0x6e61626c
     9f4:	65 5f 69 64 	.word 0x655f6964
     9f8:	65 00 64 65 	.word 0x65006465
     9fc:	5f 53 75 72 	.word 0x5f537572
     a00:	66 61 63 65 	.word 0x66616365
     a04:	73 00 62 75 	l.cust1 
     a08:	66 66 65 72 	.word 0x66666572
     a0c:	65 64 5f 66 	.word 0x65645f66
     a10:	61 74 5f 69 	.word 0x61745f69
     a14:	6e 64 65 78 	.word 0x6e646578
     a18:	00 68 65 6c 	l.j 1a19fc8 <__stack+0x1599fcc>
     a1c:	70 74 65 78 	l.cust1 
     a20:	74 5f 74 69 	l.cust2 
     a24:	6d 65 72 00 	.word 0x6d657200
     a28:	46 69 6c 65 	l.jr r13
     a2c:	43 72 65 61 	.word 0x43726561
     a30:	74 65 00 73 	l.cust2 
     a34:	65 63 74 6f 	.word 0x6563746f
     a38:	72 5f 6f 66 	l.cust1 
     a3c:	66 73 65 74 	.word 0x66736574
     a40:	00 5f 73 74 	l.j 17dd810 <__stack+0x135d814>
     a44:	72 6e 63 70 	l.cust1 
     a48:	79 00 49 6e 	l.cust3 
     a4c:	73 65 72 74 	l.cust1 
     a50:	46 6c 6f 70 	l.jr r13
     a54:	70 79 00 46 	l.cust1 
     a58:	69 6e 64 44 	.word 0x696e6444
     a5c:	72 69 76 65 	l.cust1 
     a60:	00 73 63 61 	l.j 1cd97e4 <__stack+0x18597e8>
     a64:	6e 6c 69 6e 	.word 0x6e6c696e
     a68:	65 73 00 4d 	.word 0x6573004d
     a6c:	45 4e 55 5f 	l.jr r10
     a70:	53 45 54 54 	.word 0x53455454
     a74:	49 4e 47 53 	l.jalr r8
     a78:	5f 43 48 49 	.word 0x5f434849
     a7c:	50 53 45 54 	.word 0x50534554
     a80:	32 00 64 72 	.word 0x32006472
     a84:	69 76 65 5f 	.word 0x6976655f
     a88:	68 65 61 64 	.word 0x68656164
     a8c:	00 53 74 61 	l.j 14ddc10 <__stack+0x105dc14>
     a90:	72 73 55 70 	l.cust1 
     a94:	64 61 74 65 	.word 0x64617465
     a98:	00 6e 43 6f 	l.j 1b91854 <__stack+0x1711858>
     a9c:	75 6e 74 00 	l.cust2 
     aa0:	72 61 6e 6b 	l.cust1 
     aa4:	5f 6c 6f 6e 	.word 0x5f6c6f6e
     aa8:	67 00 66 73 	.word 0x67006673
     aac:	5f 70 46 69 	.word 0x5f704669
     ab0:	6c 65 45 78 	.word 0x6c654578
     ab4:	74 00 6d 6f 	l.cust2 
     ab8:	6e 5f 73 69 	.word 0x6e5f7369
     abc:	7a 65 00 62 	l.cust3 
     ac0:	70 72 69 6e 	l.cust1 
     ac4:	74 66 6c 00 	l.cust2 
     ac8:	5f 73 74 72 	.word 0x5f737472
     acc:	6e 69 63 6d 	.word 0x6e69636d
     ad0:	70 00 52 41 	l.cust1 
     ad4:	4f 70 65 6e 	l.maci r16,0x656e
     ad8:	00 4d 4d 43 	l.j 1353fe4 <__stack+0xed3fe8>
     adc:	5f 47 65 74 	.word 0x5f476574
     ae0:	43 61 70 61 	.word 0x43617061
     ae4:	63 69 74 79 	.word 0x63697479
     ae8:	00 4f 73 64 	l.j 13dd878 <__stack+0xf5d87c>
     aec:	45 6e 61 62 	l.jr r12
     af0:	6c 65 00 4d 	.word 0x6c65004d
     af4:	45 4e 55 5f 	l.jr r10
     af8:	53 45 54 54 	.word 0x53455454
     afc:	49 4e 47 53 	l.jalr r8
     b00:	5f 44 52 49 	.word 0x5f445249
     b04:	56 45 53 31 	.word 0x56455331
     b08:	00 4d 45 4e 	l.j 1352040 <__stack+0xed2044>
     b0c:	55 5f 53 45 	.word 0x555f5345
     b10:	54 54 49 4e 	.word 0x5454494e
     b14:	47 53 5f 44 	l.jr r11
     b18:	52 49 56 45 	.word 0x52495645
     b1c:	53 32 00 74 	.word 0x53320074
     b20:	72 61 63 6b 	l.cust1 
     b24:	00 5f 63 6f 	l.j 17d98e0 <__stack+0x13598e4>
     b28:	6e 66 69 67 	.word 0x6e666967
     b2c:	5f 63 70 75 	.word 0x5f637075
     b30:	00 73 70 69 	l.j 1cdccd4 <__stack+0x185ccd8>
     b34:	63 6c 6b 00 	.word 0x636c6b00
     b38:	70 74 72 32 	l.cust1 
     b3c:	00 66 73 5f 	l.j 199d8b8 <__stack+0x151d8bc>
     b40:	4f 70 74 69 	l.maci r16,0x7469
     b44:	6f 6e 73 00 	.word 0x6f6e7300
     b48:	68 65 61 64 	.word 0x68656164
     b4c:	73 00 6d 65 	l.cust1 
     b50:	6d 6f 72 79 	.word 0x6d6f7279
     b54:	00 73 70 65 	l.j 1cdcce8 <__stack+0x185ccec>
     b58:	65 64 00 74 	.word 0x65640074
     b5c:	78 72 70 00 	l.cust3 
     b60:	72 64 62 5f 	l.cust1 
     b64:	44 69 73 6b 	l.jr r14
     b68:	56 65 6e 64 	.word 0x56656e64
     b6c:	6f 72 00 70 	.word 0x6f720070
     b70:	42 75 66 66 	.word 0x42756666
     b74:	65 72 00 65 	.word 0x65720065
     b78:	6e 74 72 79 	.word 0x6e747279
     b7c:	54 59 50 45 	.word 0x54595045
     b80:	00 70 54 72 	l.j 1c15d48 <__stack+0x1795d4c>
     b84:	61 63 6b 00 	.word 0x61636b00
     b88:	6c 65 66 74 	.word 0x6c656674
     b8c:	00 63 6f 6c 	l.j 18dc93c <__stack+0x145c940>
     b90:	30 68 00 72 	.word 0x30680072
     b94:	61 6e 6b 5f 	.word 0x616e6b5f
     b98:	6c 6f 6e 67 	.word 0x6c6f6e67
     b9c:	6c 6f 6e 67 	.word 0x6c6f6e67
     ba0:	00 62 75 66 	l.j 189e138 <__stack+0x141e13c>
     ba4:	66 65 72 5f 	.word 0x6665725f
     ba8:	73 69 7a 65 	l.cust1 
     bac:	00 64 65 5f 	l.j 191a128 <__stack+0x149a12c>
     bb0:	50 72 65 41 	.word 0x50726541
     bb4:	6c 6c 6f 63 	.word 0x6c6c6f63
     bb8:	00 62 75 66 	l.j 189e150 <__stack+0x141e154>
     bbc:	66 65 72 5f 	.word 0x6665725f
     bc0:	69 6e 64 65 	.word 0x696e6465
     bc4:	78 00 65 78 	l.cust3 
     bc8:	74 65 6e 73 	l.cust2 
     bcc:	69 6f 6e 00 	.word 0x696f6e00
     bd0:	53 74 61 72 	.word 0x53746172
     bd4:	73 49 6e 69 	l.cust1 
     bd8:	74 00 53 63 	l.cust2 
     bdc:	61 6e 44 69 	.word 0x616e4469
     be0:	72 65 63 74 	l.cust1 
     be4:	6f 72 79 00 	.word 0x6f727900
     be8:	68 65 78 6d 	.word 0x6865786d
     bec:	6f 64 65 00 	.word 0x6f646500
     bf0:	63 79 6c 69 	.word 0x63796c69
     bf4:	6e 64 65 72 	.word 0x6e646572
     bf8:	5f 6c 6f 77 	.word 0x5f6c6f77
     bfc:	00 72 64 62 	l.j 1c99d84 <__stack+0x1819d88>
     c00:	5f 43 68 6b 	.word 0x5f43686b
     c04:	53 75 6d 00 	.word 0x53756d00
     c08:	63 61 72 67 	.word 0x63617267
     c0c:	00 65 6e 61 	l.j 195c590 <__stack+0x14dc594>
     c10:	62 6c 65 64 	.word 0x626c6564
     c14:	00 4d 45 4e 	l.j 135214c <__stack+0xed2150>
     c18:	55 5f 4d 41 	.word 0x555f4d41
     c1c:	49 4e 32 5f 	l.jalr r6
     c20:	31 00 4d 45 	.word 0x31004d45
     c24:	4e 55 5f 4d 	l.maci r21,0x5f4d
     c28:	41 49 4e 32 	.word 0x41494e32
     c2c:	5f 32 00 53 	.word 0x5f320053
     c30:	65 74 43 6f 	.word 0x6574436f
     c34:	6e 66 69 67 	.word 0x6e666967
     c38:	75 72 61 74 	l.cust2 
     c3c:	69 6f 6e 46 	.word 0x696f6e46
     c40:	69 6c 65 6e 	.word 0x696c656e
     c44:	61 6d 65 00 	.word 0x616d6500
     c48:	53 77 61 70 	.word 0x53776170
     c4c:	45 6e 64 69 	l.jr r12
     c50:	61 6e 4c 00 	.word 0x616e4c00
     c54:	57 72 69 74 	.word 0x57726974
     c58:	65 54 72 61 	.word 0x65547261
     c5c:	63 6b 00 66 	.word 0x636b0066
     c60:	6f 72 6d 61 	.word 0x6f726d61
     c64:	74 00 6b 65 	l.cust2 
     c68:	79 63 6f 64 	l.cust3 
     c6c:	65 5f 74 61 	.word 0x655f7461
     c70:	62 6c 65 00 	.word 0x626c6500
     c74:	73 74 72 63 	l.cust1 
     c78:	70 79 00 73 	l.cust1 
     c7c:	63 72 6f 6c 	.word 0x63726f6c
     c80:	6c 5f 74 69 	.word 0x6c5f7469
     c84:	6d 65 72 00 	.word 0x6d657200
     c88:	73 74 62 75 	l.cust1 
     c8c:	66 00 6d 61 	.word 0x66006d61
     c90:	78 5f 6c 65 	l.cust3 
     c94:	6e 00 4d 45 	.word 0x6e004d45
     c98:	4e 55 5f 46 	l.maci r21,0x5f46
     c9c:	49 52 4d 57 	l.jalr r9
     ca0:	41 52 45 5f 	.word 0x4152455f
     ca4:	55 50 44 41 	.word 0x55504441
     ca8:	54 49 4e 47 	.word 0x54494e47
     cac:	31 00 4d 45 	.word 0x31004d45
     cb0:	4e 55 5f 46 	l.maci r21,0x5f46
     cb4:	49 52 4d 57 	l.jalr r9
     cb8:	41 52 45 5f 	.word 0x4152455f
     cbc:	55 50 44 41 	.word 0x55504441
     cc0:	54 49 4e 47 	.word 0x54494e47
     cc4:	32 00 4d 4d 	.word 0x32004d4d
     cc8:	43 5f 52 65 	.word 0x435f5265
     ccc:	61 64 4d 75 	.word 0x61644d75
     cd0:	6c 74 69 70 	.word 0x6c746970
     cd4:	6c 65 00 66 	.word 0x6c650066
     cd8:	61 74 5f 62 	.word 0x61745f62
     cdc:	75 66 66 65 	l.cust2 
     ce0:	72 00 4d 45 	l.cust1 
     ce4:	4e 55 5f 48 	l.maci r21,0x5f48
     ce8:	41 52 44 46 	.word 0x41524446
     cec:	49 4c 45 5f 	l.jalr r8
     cf0:	45 58 49 54 	l.jr r9
     cf4:	00 6c 69 6e 	l.j 1b1b2ac <__stack+0x169b2b0>
     cf8:	65 00 57 72 	.word 0x65005772
     cfc:	69 74 65 54 	.word 0x69746554
     d00:	61 73 6b 46 	.word 0x61736b46
     d04:	69 6c 65 00 	.word 0x696c6500
     d08:	73 74 5f 6e 	l.cust1 
     d0c:	6f 72 6d 61 	.word 0x6f726d61
     d10:	6c 00 74 6d 	.word 0x6c00746d
     d14:	70 76 61 6c 	l.cust1 
     d18:	00 6d 6f 6e 	l.j 1b5cad0 <__stack+0x16dcad4>
     d1c:	5f 75 73 61 	.word 0x5f757361
     d20:	67 65 00 64 	.word 0x67650064
     d24:	65 5f 4d 61 	.word 0x655f4d61
     d28:	78 54 72 61 	l.cust3 
     d2c:	6e 73 66 65 	.word 0x6e736665
     d30:	72 00 75 69 	l.cust1 
     d34:	6e 74 70 74 	.word 0x6e747074
     d38:	72 5f 74 00 	l.cust1 
     d3c:	73 70 72 69 	l.cust1 
     d40:	6e 74 66 00 	.word 0x6e746600
     d44:	64 65 62 75 	.word 0x64656275
     d48:	67 6d 73 67 	.word 0x676d7367
     d4c:	00 49 6e 66 	l.j 125c6e4 <__stack+0xddc6e8>
     d50:	6f 4d 65 73 	.word 0x6f4d6573
     d54:	73 61 67 65 	l.cust1 
     d58:	00 62 6c 6f 	l.j 189bf14 <__stack+0x141bf18>
     d5c:	63 6b 5f 63 	.word 0x636b5f63
     d60:	6f 75 6e 74 	.word 0x6f756e74
     d64:	00 4d 45 4e 	l.j 135229c <__stack+0xed22a0>
     d68:	55 00 42 6f 	.word 0x5500426f
     d6c:	6f 74 50 72 	.word 0x6f745072
     d70:	69 6e 74 45 	.word 0x696e7445
     d74:	78 00 4d 45 	l.cust3 
     d78:	4e 55 5f 52 	l.maci r21,0x5f52
     d7c:	4f 4d 46 49 	l.maci r13,0x4649
     d80:	4c 45 5f 53 	l.maci r5,0x5f53
     d84:	45 4c 45 43 	l.jr r8
     d88:	54 45 44 31 	.word 0x54454431
     d8c:	00 4d 45 4e 	l.j 13522c4 <__stack+0xed22c8>
     d90:	55 5f 52 4f 	.word 0x555f524f
     d94:	4d 46 49 4c 	l.maci r6,0x494c
     d98:	45 5f 53 45 	l.jr r10
     d9c:	4c 45 43 54 	l.maci r5,0x4354
     da0:	45 44 32 00 	l.jr r6
     da4:	69 6e 76 65 	.word 0x696e7665
     da8:	72 74 00 66 	l.cust1 
     dac:	6c 6f 70 70 	.word 0x6c6f7070
     db0:	79 00 44 6f 	l.cust3 
     db4:	73 45 6e 76 	l.cust1 
     db8:	65 63 00 63 	.word 0x65630063
     dbc:	6d 75 6c 74 	.word 0x6d756c74
     dc0:	00 72 61 6e 	l.j 1c99378 <__stack+0x181937c>
     dc4:	6b 5f 69 6e 	.word 0x6b5f696e
     dc8:	74 00 46 69 	l.cust2 
     dcc:	6c 65 4e 65 	.word 0x6c654e65
     dd0:	78 74 53 65 	l.cust3 
     dd4:	63 74 6f 72 	.word 0x63746f72
     dd8:	00 42 6f 6f 	l.j 109cb94 <__stack+0xc1cb98>
     ddc:	74 55 70 6c 	l.cust2 
     de0:	6f 61 64 42 	.word 0x6f616442
     de4:	61 6c 6c 00 	.word 0x616c6c00
     de8:	64 69 72 5f 	.word 0x6469725f
     dec:	65 6e 74 72 	.word 0x656e7472
     df0:	69 65 73 00 	.word 0x69657300
     df4:	47 65 74 48 	l.jr r14
     df8:	61 72 64 66 	.word 0x61726466
     dfc:	69 6c 65 47 	.word 0x696c6547
     e00:	65 6f 6d 65 	.word 0x656f6d65
     e04:	74 72 79 00 	l.cust2 
     e08:	63 6f 6e 66 	.word 0x636f6e66
     e0c:	69 67 5f 61 	.word 0x69675f61
     e10:	75 74 6f 66 	l.cust2 
     e14:	69 72 65 5f 	.word 0x6972655f
     e18:	6d 73 67 00 	.word 0x6d736700
     e1c:	43 6f 6e 66 	.word 0x436f6e66
     e20:	69 67 46 6c 	.word 0x6967466c
     e24:	6f 70 70 79 	.word 0x6f707079
     e28:	00 48 45 4c 	l.j 1212358 <__stack+0xd9235c>
     e2c:	50 54 45 58 	.word 0x50544558
     e30:	54 5f 43 48 	.word 0x545f4348
     e34:	49 50 53 45 	l.jalr r10
     e38:	54 00 61 72 	.word 0x54006172
     e3c:	72 6f 77 6d 	l.cust1 
     e40:	61 73 6b 00 	.word 0x61736b00
     e44:	4d 45 4e 55 	l.maci r5,0x4e55
     e48:	5f 53 45 54 	.word 0x5f534554
     e4c:	54 49 4e 47 	.word 0x54494e47
     e50:	53 5f 4d 45 	.word 0x535f4d45
     e54:	4d 4f 52 59 	l.maci r15,0x5259
     e58:	31 00 4d 45 	.word 0x31004d45
     e5c:	4e 55 5f 53 	l.maci r21,0x5f53
     e60:	45 54 54 49 	l.jr r10
     e64:	4e 47 53 5f 	l.maci r7,0x535f
     e68:	4d 45 4d 4f 	l.maci r5,0x4d4f
     e6c:	52 59 32 00 	.word 0x52593200
     e70:	46 4c 5f 5a 	l.jr r11
     e74:	45 52 4f 00 	l.jr r9
     e78:	70 61 64 31 	l.cust1 
     e7c:	00 70 61 64 	l.j 1c1940c <__stack+0x1799410>
     e80:	32 00 70 62 	.word 0x32007062
     e84:	5f 53 75 6d 	.word 0x5f53756d
     e88:	6d 65 64 6c 	.word 0x6d65646c
     e8c:	6f 6e 67 73 	.word 0x6f6e6773
     e90:	00 73 65 63 	l.j 1cda41c <__stack+0x185a420>
     e94:	74 6f 72 5f 	l.cust2 
     e98:	6e 75 6d 62 	.word 0x6e756d62
     e9c:	65 72 00 72 	.word 0x65720072
     ea0:	69 67 68 74 	.word 0x69676874
     ea4:	00 6c 6f 6e 	l.j 1b1cc5c <__stack+0x169cc60>
     ea8:	67 20 6c 6f 	.word 0x67206c6f
     eac:	6e 67 20 69 	.word 0x6e672069
     eb0:	6e 74 00 66 	.word 0x6e740066
     eb4:	73 5f 4d 65 	l.cust1 
     eb8:	6e 75 53 65 	.word 0x6e755365
     ebc:	6c 65 63 74 	.word 0x6c656374
     ec0:	00 72 61 6e 	l.j 1c99478 <__stack+0x181947c>
     ec4:	6b 5f 73 68 	.word 0x6b5f7368
     ec8:	6f 72 74 00 	.word 0x6f727400
     ecc:	66 61 74 74 	.word 0x66617474
     ed0:	79 70 65 00 	l.cust3 
     ed4:	42 75 69 6c 	.word 0x4275696c
     ed8:	64 48 61 72 	.word 0x64486172
     edc:	64 66 69 6c 	.word 0x6466696c
     ee0:	65 49 6e 64 	.word 0x65496e64
     ee4:	65 78 00 70 	.word 0x65780070
     ee8:	62 5f 48 6f 	.word 0x625f486f
     eec:	73 74 49 44 	l.cust1 
     ef0:	00 64 73 6b 	l.j 191dc9c <__stack+0x149dca0>
     ef4:	73 79 6e 63 	l.cust1 
     ef8:	6c 00 52 41 	.word 0x6c005241
     efc:	52 65 61 64 	.word 0x52656164
     f00:	00 66 6e 61 	l.j 199c884 <__stack+0x151c888>
     f04:	6d 65 00 65 	.word 0x6d650065
     f08:	6e 61 62 6c 	.word 0x6e61626c
     f0c:	65 00 6b 65 	.word 0x65006b65
     f10:	79 73 69 7a 	l.cust3 
     f14:	65 00 72 64 	.word 0x65007264
     f18:	62 66 69 6c 	.word 0x6266696c
     f1c:	65 00 6d 65 	.word 0x65006d65
     f20:	6d 63 70 79 	.word 0x6d637079
     f24:	00 6c 66 6e 	l.j 1b1a8dc <__stack+0x169a8e0>
     f28:	5f 65 72 72 	.word 0x5f657272
     f2c:	6f 72 00 65 	.word 0x6f720065
     f30:	6e 74 72 69 	.word 0x6e747269
     f34:	65 73 5f 70 	.word 0x65735f70
     f38:	65 72 5f 63 	.word 0x65725f63
     f3c:	6c 75 73 74 	.word 0x6c757374
     f40:	65 72 00 5f 	.word 0x6572005f
     f44:	5f 68 65 61 	.word 0x5f686561
     f48:	70 5f 63 75 	l.cust1 
     f4c:	72 00 73 79 	l.cust1 
     f50:	73 74 69 6d 	l.cust1 
     f54:	65 72 00 4d 	.word 0x6572004d
     f58:	45 4e 55 5f 	l.jr r10
     f5c:	53 45 54 54 	.word 0x53455454
     f60:	49 4e 47 53 	l.jalr r8
     f64:	31 00 4d 45 	.word 0x31004d45
     f68:	4e 55 5f 53 	l.maci r21,0x5f53
     f6c:	45 54 54 49 	l.jr r10
     f70:	4e 47 53 32 	l.maci r7,0x5332
     f74:	00 68 65 6c 	l.j 1a1a524 <__stack+0x159a528>
     f78:	70 74 65 78 	l.cust1 
     f7c:	74 73 00 70 	l.cust2 
     f80:	61 72 74 69 	.word 0x61727469
     f84:	74 69 6f 6e 	l.cust2 
     f88:	73 00 61 64 	l.cust1 
     f8c:	66 54 59 50 	.word 0x66545950
     f90:	45 00 75 69 	l.jr r14
     f94:	6e 74 6d 61 	.word 0x6e746d61
     f98:	78 5f 74 00 	l.cust3 
     f9c:	4d 6f 64 69 	l.maci r15,0x6469
     fa0:	66 79 44 61 	.word 0x66794461
     fa4:	74 65 00 65 	l.cust2 
     fa8:	72 72 6f 72 	l.cust1 
     fac:	5f 70 63 00 	.word 0x5f706300
     fb0:	46 61 6b 65 	l.jr r13
     fb4:	52 44 42 00 	.word 0x52444200
     fb8:	70 64 66 78 	l.cust1 
     fbc:	00 4f 53 44 	l.j 13d5ccc <__stack+0xf55cd0>
     fc0:	5f 50 72 69 	.word 0x5f507269
     fc4:	6e 74 54 65 	.word 0x6e745465
     fc8:	78 74 00 64 	l.cust3 
     fcc:	65 5f 54 61 	.word 0x655f5461
     fd0:	62 6c 65 53 	.word 0x626c6553
     fd4:	69 7a 65 00 	.word 0x697a6500
     fd8:	6d 6f 6e 5f 	.word 0x6d6f6e5f
     fdc:	69 6c 6c 63 	.word 0x696c6c63
     fe0:	6d 64 00 74 	.word 0x6d640074
     fe4:	69 6d 65 6f 	.word 0x696d656f
     fe8:	75 74 00 63 	l.cust2 
     fec:	6f 6e 66 69 	.word 0x6f6e6669
     ff0:	67 5f 6d 65 	.word 0x675f6d65
     ff4:	6d 6f 72 79 	.word 0x6d6f7279
     ff8:	5f 63 68 69 	.word 0x5f636869
     ffc:	70 5f 6d 73 	l.cust1 
    1000:	67 00 4d 45 	.word 0x67004d45
    1004:	4e 55 5f 4d 	l.maci r21,0x5f4d
    1008:	49 53 43 32 	l.jalr r8
    100c:	00 6b 65 79 	l.j 1ada5f0 <__stack+0x165a5f4>
    1010:	63 6f 64 65 	.word 0x636f6465
    1014:	00 4d 4e 4d 	l.j 1354948 <__stack+0xed494c>
    1018:	47 43 46 47 	l.jr r8
    101c:	30 00 4f 73 	.word 0x30004f73
    1020:	64 44 72 61 	.word 0x64447261
    1024:	77 4c 6f 67 	l.cust2 
    1028:	6f 00 68 72 	.word 0x6f006872
    102c:	74 6d 6f 6e 	l.cust2 
    1030:	5f 63 66 67 	.word 0x5f636667
    1034:	5f 74 00 63 	.word 0x5f740063
    1038:	6f 6e 66 69 	.word 0x6f6e6669
    103c:	67 5f 61 75 	.word 0x675f6175
    1040:	74 6f 66 69 	l.cust2 
    1044:	72 65 00 52 	l.cust1 
    1048:	65 61 64 54 	.word 0x65616454
    104c:	72 61 63 6b 	l.cust1 
    1050:	00 72 64 62 	l.j 1c9a1d8 <__stack+0x181a1dc>
    1054:	5f 52 65 64 	.word 0x5f526564
    1058:	75 63 65 64 	l.cust2 
    105c:	57 72 69 74 	.word 0x57726974
    1060:	65 00 4d 4d 	.word 0x65004d4d
    1064:	43 5f 57 72 	.word 0x435f5772
    1068:	69 74 65 00 	.word 0x69746500
    106c:	46 4c 5f 4d 	l.jr r11
    1070:	49 4e 55 53 	l.jalr r10
    1074:	00 6b 6c 69 	l.j 1adc218 <__stack+0x165c21c>
    1078:	62 63 2f 6d 	.word 0x62632f6d
    107c:	65 6d 63 6d 	.word 0x656d636d
    1080:	70 2e 63 00 	l.cust1 
    1084:	74 65 6d 70 	l.cust2 
    1088:	6c 61 74 65 	.word 0x6c617465
    108c:	00 72 64 62 	l.j 1c9a214 <__stack+0x181a218>
    1090:	5f 48 69 67 	.word 0x5f486967
    1094:	68 52 44 53 	.word 0x68524453
    1098:	4b 42 6c 6f 	l.jalr r13
    109c:	63 6b 00 70 	.word 0x636b0070
    10a0:	53 65 63 74 	.word 0x53656374
    10a4:	6f 72 00 43 	.word 0x6f720043
    10a8:	72 65 61 74 	l.cust1 
    10ac:	65 44 61 74 	.word 0x65446174
    10b0:	65 00 69 50 	.word 0x65006950
    10b4:	72 65 76 69 	l.cust1 
    10b8:	6f 75 73 44 	.word 0x6f757344
    10bc:	69 72 65 63 	.word 0x69726563
    10c0:	74 6f 72 79 	l.cust2 
    10c4:	00 6f 75 74 	l.j 1bde694 <__stack+0x175e698>
    10c8:	70 00 4d 4d 	l.cust1 
    10cc:	43 5f 49 6e 	.word 0x435f496e
    10d0:	69 74 00 42 	.word 0x69740042
    10d4:	6f 6f 74 43 	.word 0x6f6f7443
    10d8:	6c 65 61 72 	.word 0x6c656172
    10dc:	53 63 72 65 	.word 0x53637265
    10e0:	65 6e 00 72 	.word 0x656e0072
    10e4:	64 62 5f 41 	.word 0x64625f41
    10e8:	75 74 6f 50 	l.cust2 
    10ec:	61 72 6b 53 	.word 0x61726b53
    10f0:	65 63 6f 6e 	.word 0x65636f6e
    10f4:	64 73 00 72 	.word 0x64730072
    10f8:	65 6c 6f 61 	.word 0x656c6f61
    10fc:	64 6b 69 63 	.word 0x646b6963
    1100:	6b 73 74 61 	.word 0x6b737461
    1104:	72 74 00 74 	l.cust1 
    1108:	72 61 63 6b 	l.cust1 
    110c:	5f 70 72 65 	.word 0x5f707265
    1110:	76 00 76 73 	l.cust2 
    1114:	6e 70 72 69 	.word 0x6e707269
    1118:	6e 74 66 00 	.word 0x6e746600
    111c:	64 65 5f 42 	.word 0x64655f42
    1120:	75 66 4d 65 	l.cust2 
    1124:	6d 54 79 70 	.word 0x6d547970
    1128:	65 00 67 61 	.word 0x65006761
    112c:	79 6c 65 00 	l.cust3 
    1130:	63 68 73 32 	.word 0x63687332
    1134:	6c 62 61 00 	.word 0x6c626100
    1138:	46 41 54 42 	l.jr r10
    113c:	55 46 46 45 	.word 0x55464645
    1140:	52 00 6d 61 	.word 0x52006d61
    1144:	73 74 65 72 	l.cust1 
    1148:	00 50 72 69 	l.j 141daec <__stack+0xf9daf0>
    114c:	6e 74 44 69 	.word 0x6e744469
    1150:	72 65 63 74 	l.cust1 
    1154:	6f 72 79 00 	.word 0x6f727900
    1158:	74 72 61 63 	l.cust2 
    115c:	6b 73 00 72 	.word 0x6b730072
    1160:	64 62 5f 44 	.word 0x64625f44
    1164:	69 73 6b 52 	.word 0x69736b52
    1168:	65 76 69 73 	.word 0x65766973
    116c:	69 6f 6e 00 	.word 0x696f6e00
    1170:	74 6f 74 61 	l.cust2 
    1174:	6c 00 4c 6f 	.word 0x6c004c6f
    1178:	77 65 72 43 	l.cust2 
    117c:	61 73 65 00 	.word 0x61736500
    1180:	4d 45 4e 55 	l.maci r5,0x4e55
    1184:	5f 46 49 52 	.word 0x5f464952
    1188:	4d 57 41 52 	l.maci r23,0x4152
    118c:	45 5f 4f 50 	l.jr r9
    1190:	54 49 4f 4e 	.word 0x54494f4e
    1194:	53 5f 45 4e 	.word 0x535f454e
    1198:	41 42 4c 45 	.word 0x41424c45
    119c:	44 31 00 48 	l.jr r0
    11a0:	45 4c 50 54 	l.jr r10
    11a4:	45 58 54 5f 	l.jr r10
    11a8:	4d 41 49 4e 	l.maci r1,0x494e
    11ac:	00 73 6c 65 	l.j 1cdc340 <__stack+0x185c344>
    11b0:	6e 00 6d 61 	.word 0x6e006d61
    11b4:	78 5f 63 68 	l.cust3 
    11b8:	69 70 00 4d 	.word 0x6970004d
    11bc:	45 4e 55 5f 	l.jr r10
    11c0:	53 59 4e 54 	.word 0x53594e54
    11c4:	48 52 44 42 	l.jalr r8
    11c8:	32 00 74 78 	.word 0x32007478
    11cc:	62 75 66 5f 	.word 0x6275665f
    11d0:	65 6d 69 74 	.word 0x656d6974
    11d4:	00 42 6f 6f 	l.j 109cf90 <__stack+0xc1cf94>
    11d8:	74 45 6e 61 	l.cust2 
    11dc:	62 6c 65 4d 	.word 0x626c654d
    11e0:	65 6d 00 52 	.word 0x656d0052
    11e4:	41 46 69 6c 	.word 0x4146696c
    11e8:	65 00 68 65 	.word 0x65006865
    11ec:	6c 70 73 74 	.word 0x6c707374
    11f0:	61 74 65 00 	.word 0x61746500
    11f4:	4d 45 4e 55 	l.maci r5,0x4e55
    11f8:	5f 53 59 4e 	.word 0x5f53594e
    11fc:	54 48 52 44 	.word 0x54485244
    1200:	42 31 00 63 	.word 0x42310063
    1204:	6c 75 73 74 	.word 0x6c757374
    1208:	65 72 5f 6f 	.word 0x65725f6f
    120c:	66 66 73 65 	.word 0x66667365
    1210:	74 00 74 6d 	l.cust2 
    1214:	70 63 6f 6e 	l.cust1 
    1218:	66 00 46 4c 	.word 0x6600464c
    121c:	5f 48 41 53 	.word 0x5f484153
    1220:	48 00 44 65 	l.jalr r8
    1224:	62 75 67 4d 	.word 0x6275674d
    1228:	6f 64 65 00 	.word 0x6f646500
    122c:	74 69 74 6c 	l.cust2 
    1230:	65 62 75 66 	.word 0x65627566
    1234:	66 65 72 00 	.word 0x66657200
    1238:	6b 65 79 62 	.word 0x6b657962
    123c:	6f 61 72 64 	.word 0x6f617264
    1240:	00 64 65 62 	l.j 191a7c8 <__stack+0x149a7cc>
    1244:	75 67 6c 69 	l.cust2 
    1248:	6e 65 73 00 	.word 0x6e657300
    124c:	66 77 5f 63 	.word 0x66775f63
    1250:	6f 70 79 5f 	.word 0x6f70795f
    1254:	72 6f 75 74 	l.cust1 
    1258:	69 6e 65 00 	.word 0x696e6500
    125c:	73 74 69 70 	l.cust1 
    1260:	70 6c 65 00 	l.cust1 
    1264:	62 6f 6f 74 	.word 0x626f6f74
    1268:	00 64 73 6b 	l.j 191e014 <__stack+0x149e018>
    126c:	6c 65 6e 00 	.word 0x6c656e00
    1270:	70 62 5f 43 	l.cust1 
    1274:	68 6b 53 75 	.word 0x686b5375
    1278:	6d 00 69 53 	.word 0x6d006953
    127c:	65 6c 65 63 	.word 0x656c6563
    1280:	74 65 64 45 	l.cust2 
    1284:	6e 74 72 79 	.word 0x6e747279
    1288:	00 65 72 72 	l.j 195dc50 <__stack+0x14ddc54>
    128c:	6f 72 5f 73 	.word 0x6f725f73
    1290:	72 00 63 61 	l.cust1 
    1294:	63 68 65 00 	.word 0x63686500
    1298:	72 6f 6f 74 	l.cust1 
    129c:	5f 64 69 72 	.word 0x5f646972
    12a0:	65 63 74 6f 	.word 0x6563746f
    12a4:	72 79 5f 73 	l.cust1 
    12a8:	74 61 72 74 	l.cust2 
    12ac:	00 73 74 72 	l.j 1cde474 <__stack+0x185e478>
    12b0:	6e 63 6d 70 	.word 0x6e636d70
    12b4:	00 6e 6f 76 	l.j 1b9d08c <__stack+0x171d090>
    12b8:	62 72 00 72 	.word 0x62720072
    12bc:	64 62 5f 43 	.word 0x64625f43
    12c0:	6f 6e 74 72 	.word 0x6f6e7472
    12c4:	6f 6c 6c 65 	.word 0x6f6c6c65
    12c8:	72 56 65 6e 	l.cust1 
    12cc:	64 6f 72 00 	.word 0x646f7200
    12d0:	70 62 5f 44 	l.cust1 
    12d4:	72 69 76 65 	l.cust1 
    12d8:	4e 61 6d 65 	l.maci r1,0x6d65
    12dc:	00 72 78 62 	l.j 1c9f464 <__stack+0x181f468>
    12e0:	75 66 00 72 	l.cust2 
    12e4:	64 62 5f 4c 	.word 0x64625f4c
    12e8:	6f 43 79 6c 	.word 0x6f43796c
    12ec:	69 6e 64 65 	.word 0x696e6465
    12f0:	72 00 4d 45 	l.cust1 
    12f4:	4e 55 5f 49 	l.maci r21,0x5f49
    12f8:	4e 46 4f 00 	l.maci r6,0x4f00
    12fc:	70 44 69 72 	l.cust1 
    1300:	45 6e 74 72 	l.jr r14
    1304:	79 31 00 70 	l.cust3 
    1308:	44 69 72 45 	l.jr r14
    130c:	6e 74 72 79 	.word 0x6e747279
    1310:	32 00 53 63 	.word 0x32005363
    1314:	72 6f 6c 6c 	l.cust1 
    1318:	4c 6f 6e 67 	l.maci r15,0x6e67
    131c:	4e 61 6d 65 	l.maci r1,0x6d65
    1320:	00 68 72 74 	l.j 1a1dcf0 <__stack+0x159dcf4>
    1324:	63 66 67 00 	.word 0x63666700
    1328:	44 65 62 75 	l.jr r12
    132c:	67 4d 65 73 	.word 0x674d6573
    1330:	73 61 67 65 	l.cust1 
    1334:	00 46 69 6c 	l.j 119b8e4 <__stack+0xd1b8e8>
    1338:	65 4f 70 65 	.word 0x654f7065
    133c:	6e 00 47 65 	.word 0x6e004765
    1340:	74 48 44 46 	l.cust2 
    1344:	46 69 6c 65 	l.jr r13
    1348:	54 79 70 65 	.word 0x54797065
    134c:	00 65 6e 74 	l.j 195cd1c <__stack+0x14dcd20>
    1350:	72 79 00 6e 	l.cust1 
    1354:	53 69 7a 65 	.word 0x53697a65
    1358:	00 72 64 62 	l.j 1c9a4e0 <__stack+0x181a4e4>
    135c:	5f 48 6f 73 	.word 0x5f486f73
    1360:	74 49 44 00 	l.cust2 
    1364:	69 6e 66 6f 	.word 0x696e666f
    1368:	00 4d 45 4e 	l.j 13528a0 <__stack+0xed28a4>
    136c:	55 5f 48 41 	.word 0x555f4841
    1370:	52 44 46 49 	.word 0x52444649
    1374:	4c 45 5f 53 	l.maci r5,0x5f53
    1378:	45 4c 45 43 	l.jr r8
    137c:	54 31 00 4d 	.word 0x5431004d
    1380:	45 4e 55 5f 	l.jr r10
    1384:	48 41 52 44 	l.jalr r10
    1388:	46 49 4c 45 	l.jr r9
    138c:	5f 53 45 4c 	.word 0x5f53454c
    1390:	45 43 54 32 	l.jr r10
    1394:	00 70 53 74 	l.j 1c16164 <__stack+0x1796168>
    1398:	72 32 00 7a 	l.cust1 
    139c:	65 72 6f 73 	.word 0x65726f73
    13a0:	00 63 79 6c 	l.j 18df950 <__stack+0x145f954>
    13a4:	69 6e 64 65 	.word 0x696e6465
    13a8:	72 73 00 63 	l.cust1 
    13ac:	6f 6e 66 69 	.word 0x6f6e6669
    13b0:	67 54 59 50 	.word 0x67545950
    13b4:	45 00 47 65 	l.jr r8
    13b8:	74 46 41 54 	l.cust2 
    13bc:	4c 69 6e 6b 	l.maci r9,0x6e6b
    13c0:	00 48 61 6e 	l.j 1219978 <__stack+0xd9997c>
    13c4:	64 6c 65 53 	.word 0x646c6553
    13c8:	65 72 69 61 	.word 0x65726961
    13cc:	6c 00 73 65 	.word 0x6c007365
    13d0:	6c 65 63 74 	.word 0x6c656374
    13d4:	00 6c 6f 6e 	l.j 1b1d18c <__stack+0x169d190>
    13d8:	67 20 6c 6f 	.word 0x67206c6f
    13dc:	6e 67 20 75 	.word 0x6e672075
    13e0:	6e 73 69 67 	.word 0x6e736967
    13e4:	6e 65 64 20 	.word 0x6e656420
    13e8:	69 6e 74 00 	.word 0x696e7400
    13ec:	63 6f 6c 30 	.word 0x636f6c30
    13f0:	6c 00 49 64 	.word 0x6c004964
    13f4:	65 6e 74 69 	.word 0x656e7469
    13f8:	66 79 44 65 	.word 0x66794465
    13fc:	76 69 63 65 	l.cust2 
    1400:	00 69 44 69 	l.j 1a525a4 <__stack+0x15d25a8>
    1404:	72 65 63 74 	l.cust1 
    1408:	6f 72 79 43 	.word 0x6f727943
    140c:	6c 75 73 74 	.word 0x6c757374
    1410:	65 72 00 43 	.word 0x65720043
    1414:	6f 6e 66 69 	.word 0x6f6e6669
    1418:	67 4d 65 6d 	.word 0x674d656d
    141c:	6f 72 79 00 	.word 0x6f727900
    1420:	69 6e 64 65 	.word 0x696e6465
    1424:	78 5f 73 69 	l.cust3 
    1428:	7a 65 00 72 	l.cust3 
    142c:	64 62 5f 43 	.word 0x64625f43
    1430:	6f 6e 74 72 	.word 0x6f6e7472
    1434:	6f 6c 6c 65 	.word 0x6f6c6c65
    1438:	72 50 72 6f 	l.cust1 
    143c:	64 75 63 74 	.word 0x64756374
    1440:	00 75 69 6e 	l.j 1d5b9f8 <__stack+0x18db9fc>
    1444:	74 31 36 5f 	l.cust2 
    1448:	74 00 72 64 	l.cust2 
    144c:	62 5f 52 44 	.word 0x625f5244
    1450:	42 42 6c 6f 	.word 0x42426c6f
    1454:	63 6b 73 48 	.word 0x636b7348
    1458:	69 00 74 78 	.word 0x69007478
    145c:	62 75 66 5f 	.word 0x6275665f
    1460:	70 75 74 00 	l.cust1 
    1464:	4d 45 4e 55 	l.maci r5,0x4e55
    1468:	5f 52 45 43 	.word 0x5f524543
    146c:	4f 4e 46 31 	l.maci r14,0x4631
    1470:	00 4d 45 4e 	l.j 13529a8 <__stack+0xed29ac>
    1474:	55 5f 52 45 	.word 0x555f5245
    1478:	43 4f 4e 46 	.word 0x434f4e46
    147c:	32 00 6d 65 	.word 0x32006d65
    1480:	6e 75 73 74 	.word 0x6e757374
    1484:	61 74 65 00 	.word 0x61746500
    1488:	63 6f 6e 66 	.word 0x636f6e66
    148c:	69 67 5f 69 	.word 0x69675f69
    1490:	64 00 64 73 	.word 0x64006473
    1494:	6b 73 79 6e 	.word 0x6b73796e
    1498:	63 00 53 63 	.word 0x63005363
    149c:	72 6f 6c 6c 	l.cust1 
    14a0:	54 65 78 74 	.word 0x54657874
    14a4:	00 72 64 62 	l.j 1c9a62c <__stack+0x181a630>
    14a8:	5f 50 61 72 	.word 0x5f506172
    14ac:	74 69 74 69 	l.cust2 
    14b0:	6f 6e 4c 69 	.word 0x6f6e4c69
    14b4:	73 74 00 72 	l.cust1 
    14b8:	64 62 5f 53 	.word 0x64625f53
    14bc:	65 63 74 6f 	.word 0x6563746f
    14c0:	72 73 00 30 	l.cust1 
    14c4:	31 32 33 34 	.word 0x31323334
    14c8:	35 36 37 38 	.word 0x35363738
    14cc:	39 41 42 43 	.word 0x39414243
    14d0:	44 45 46 00 	l.jr r8
    14d4:	44 49 52 45 	l.jr r10
    14d8:	4e 54 52 59 	l.maci r20,0x5259
    14dc:	00 63 6f 6c 	l.j 18dd28c <__stack+0x145d290>
    14e0:	31 68 00 6d 	.word 0x3168006d
    14e4:	65 6e 75 73 	.word 0x656e7573
    14e8:	75 62 00 63 	l.cust2 
    14ec:	6f 6c 31 6c 	.word 0x6f6c316c
    14f0:	00 63 6f 6e 	l.j 18dd2a8 <__stack+0x145d2ac>
    14f4:	66 69 67 66 	.word 0x66696766
    14f8:	69 6c 65 6e 	.word 0x696c656e
    14fc:	61 6d 65 00 	.word 0x616d6500
    1500:	72 64 62 5f 	l.cust1 
    1504:	49 6e 74 65 	l.jalr r14
    1508:	72 6c 65 61 	l.cust1 
    150c:	76 65 00 70 	l.cust2 
    1510:	48 44 46 00 	l.jalr r8
    1514:	52 44 42 43 	.word 0x52444243
    1518:	68 65 63 6b 	.word 0x6865636b
    151c:	73 75 6d 00 	l.cust1 
    1520:	43 6f 6e 66 	.word 0x436f6e66
    1524:	69 67 56 69 	.word 0x69675669
    1528:	64 65 6f 00 	.word 0x64656f00
    152c:	72 64 62 5f 	l.cust1 
    1530:	50 61 72 6b 	.word 0x5061726b
    1534:	00 76 44 45 	l.j 1d92648 <__stack+0x191264c>
    1538:	42 55 47 00 	.word 0x42554700
    153c:	46 4c 5f 55 	l.jr r11
    1540:	50 50 45 52 	.word 0x50504552
    1544:	00 74 69 63 	l.j 1d1bad0 <__stack+0x189bad4>
    1548:	6b 73 6b 69 	.word 0x6b736b69
    154c:	70 00 6d 65 	l.cust1 
    1550:	6e 75 5f 74 	.word 0x6e755f74
    1554:	69 6d 65 72 	.word 0x696d6572
    1558:	00 6d 65 6d 	l.j 1b5ab0c <__stack+0x16dab10>
    155c:	73 65 74 00 	l.cust1 
    1560:	48 61 72 64 	l.jalr r14
    1564:	46 69 6c 65 	l.jr r13
    1568:	53 65 65 6b 	.word 0x5365656b
    156c:	00 48 69 67 	l.j 121bb08 <__stack+0xd9bb0c>
    1570:	68 43 6c 75 	.word 0x68436c75
    1574:	73 74 65 72 	l.cust1 
    1578:	00 4d 45 4e 	l.j 1352ab0 <__stack+0xed2ab4>
    157c:	55 5f 46 49 	.word 0x555f4649
    1580:	52 4d 57 41 	.word 0x524d5741
    1584:	52 45 5f 4f 	.word 0x52455f4f
    1588:	50 54 49 4f 	.word 0x5054494f
    158c:	4e 53 5f 45 	l.maci r19,0x5f45
    1590:	4e 41 42 4c 	l.maci r1,0x424c
    1594:	45 44 32 00 	l.jr r6
    1598:	64 72 69 76 	.word 0x64726976
    159c:	65 00 66 69 	.word 0x65006669
    15a0:	6e 64 5f 64 	.word 0x6e645f64
    15a4:	69 72 00 4d 	.word 0x6972004d
    15a8:	45 4e 55 5f 	l.jr r10
    15ac:	48 41 52 44 	l.jalr r10
    15b0:	46 49 4c 45 	l.jr r9
    15b4:	5f 53 45 4c 	.word 0x5f53454c
    15b8:	45 43 54 45 	l.jr r10
    15bc:	44 00 72 78 	l.jr r14
    15c0:	6c 6e 00 66 	.word 0x6c6e0066
    15c4:	69 6c 74 65 	.word 0x696c7465
    15c8:	72 54 59 50 	l.cust1 
    15cc:	45 00 41 63 	l.jr r8
    15d0:	63 65 73 73 	.word 0x63657373
    15d4:	44 61 74 65 	l.jr r14
    15d8:	00 64 65 5f 	l.j 191ab54 <__stack+0x149ab58>
    15dc:	44 6f 73 54 	l.jr r14
    15e0:	79 70 65 00 	l.cust3 
    15e4:	74 78 6c 6e 	l.cust2 
    15e8:	00 6c 61 6c 	l.j 1b19b98 <__stack+0x1699b9c>
    15ec:	74 00 74 69 	l.cust2 
    15f0:	6d 65 00 46 	.word 0x6d650046
    15f4:	4c 5f 54 49 	l.maci r31,0x5449
    15f8:	43 4b 00 66 	.word 0x434b0066
    15fc:	61 74 31 36 	.word 0x61743136
    1600:	00 6e 44 69 	l.j 1b927a4 <__stack+0x17127a8>
    1604:	72 45 6e 74 	l.cust1 
    1608:	72 69 65 73 	l.cust1 
    160c:	00 43 72 65 	l.j 10ddfa0 <__stack+0xc5dfa4>
    1610:	61 74 65 48 	.word 0x61746548
    1614:	75 6e 64 72 	l.cust2 
    1618:	65 64 74 68 	.word 0x65647468
    161c:	00 62 6c 6f 	l.j 189c7d8 <__stack+0x141c7dc>
    1620:	63 6b 73 69 	.word 0x636b7369
    1624:	7a 65 00 6d 	l.cust3 
    1628:	65 6d 63 6d 	.word 0x656d636d
    162c:	70 00 4d 45 	l.cust1 
    1630:	4e 55 5f 4c 	l.maci r21,0x5f4c
    1634:	4f 41 44 43 	l.maci r1,0x4443
    1638:	4f 4e 46 49 	l.maci r14,0x4649
    163c:	47 5f 31 00 	l.jr r6
    1640:	4d 45 4e 55 	l.maci r5,0x4e55
    1644:	5f 4c 4f 41 	.word 0x5f4c4f41
    1648:	44 43 4f 4e 	l.jr r9
    164c:	46 49 47 5f 	l.jr r8
    1650:	32 00 70 74 	.word 0x32007074
    1654:	72 31 00 64 	l.cust1 
    1658:	75 6d 6d 79 	l.cust2 
    165c:	00 62 6f 6f 	l.j 189d418 <__stack+0x141d41c>
    1660:	74 63 6f 64 	l.cust2 
    1664:	65 00 73 74 	.word 0x65007374
    1668:	72 63 68 72 	l.cust1 
    166c:	00 68 72 74 	l.j 1a1e03c <__stack+0x159e040>
    1670:	63 66 67 5f 	.word 0x6366675f
    1674:	70 72 69 6e 	l.cust1 
    1678:	74 00 72 6f 	l.cust2 
    167c:	74 61 74 65 	l.cust2 
    1680:	63 68 61 72 	.word 0x63686172
    1684:	00 6d 69 6e 	l.j 1b5bc3c <__stack+0x16dbc40>
    1688:	75 73 00 68 	l.cust2 
    168c:	65 6c 70 74 	.word 0x656c7074
    1690:	65 78 74 00 	.word 0x65787400
    1694:	53 69 67 6e 	.word 0x5369676e
    1698:	61 74 75 72 	.word 0x61747572
    169c:	65 00 64 65 	.word 0x65006465
    16a0:	5f 4d 61 73 	.word 0x5f4d6173
    16a4:	6b 00 6e 45 	.word 0x6b006e45
    16a8:	6e 74 72 69 	.word 0x6e747269
    16ac:	65 73 00 70 	.word 0x65730070
    16b0:	72 65 76 5f 	l.cust1 
    16b4:	73 65 71 75 	l.cust1 
    16b8:	65 6e 63 65 	.word 0x656e6365
    16bc:	5f 6e 75 6d 	.word 0x5f6e756d
    16c0:	62 65 72 00 	.word 0x62657200
    16c4:	70 4e 61 6d 	l.cust1 
    16c8:	65 00 72 64 	.word 0x65007264
    16cc:	62 5f 46 6c 	.word 0x625f466c
    16d0:	61 67 73 00 	.word 0x61677300
    16d4:	47 65 74 44 	l.jr r14
    16d8:	69 73 6b 49 	.word 0x69736b49
    16dc:	6e 66 6f 00 	.word 0x6e666f00
    16e0:	77 68 64 5f 	l.cust2 
    16e4:	62 61 73 65 	.word 0x62617365
    16e8:	00 64 72 69 	l.j 191e08c <__stack+0x149e090>
    16ec:	76 65 73 00 	l.cust2 
    16f0:	61 72 72 6f 	.word 0x6172726f
    16f4:	77 00 44 69 	l.cust2 
    16f8:	72 45 6e 74 	l.cust1 
    16fc:	72 79 49 6e 	l.cust1 
    1700:	66 6f 00 64 	.word 0x666f0064
    1704:	65 5f 53 69 	.word 0x655f5369
    1708:	7a 65 42 6c 	l.cust3 
    170c:	6f 63 6b 00 	.word 0x6f636b00
    1710:	73 74 61 72 	l.cust1 
    1714:	74 6c 62 61 	l.cust2 
    1718:	00 6e 4e 65 	l.j 1b950ac <__stack+0x17150b0>
    171c:	77 45 6e 74 	l.cust2 
    1720:	72 69 65 73 	l.cust1 
    1724:	00 4f 73 64 	l.j 13de4b4 <__stack+0xf5e4b8>
    1728:	57 61 69 74 	.word 0x57616974
    172c:	56 42 4c 00 	.word 0x56424c00
    1730:	4d 4d 43 5f 	l.maci r13,0x435f
    1734:	43 6f 6d 6d 	.word 0x436f6d6d
    1738:	61 6e 64 00 	.word 0x616e6400
    173c:	52 69 67 69 	.word 0x52696769
    1740:	64 44 69 73 	.word 0x64446973
    1744:	6b 42 6c 6f 	.word 0x6b426c6f
    1748:	63 6b 00 43 	.word 0x636b0043
    174c:	6f 6e 66 69 	.word 0x6f6e6669
    1750:	67 41 75 74 	.word 0x67417574
    1754:	6f 66 69 72 	.word 0x6f666972
    1758:	65 00 4d 45 	.word 0x65004d45
    175c:	4e 55 5f 4e 	l.maci r21,0x5f4e
    1760:	4f 4e 45 31 	l.maci r14,0x4531
    1764:	00 4d 45 4e 	l.j 1352c9c <__stack+0xed2ca0>
    1768:	55 5f 4e 4f 	.word 0x555f4e4f
    176c:	4e 45 32 00 	l.maci r5,0x3200
    1770:	4d 45 4e 55 	l.maci r5,0x4e55
    1774:	5f 52 45 53 	.word 0x5f524553
    1778:	45 54 31 00 	l.jr r6
    177c:	61 74 74 72 	.word 0x61747472
    1780:	69 62 75 74 	.word 0x69627574
    1784:	65 73 00 73 	.word 0x65730073
    1788:	68 6f 72 74 	.word 0x686f7274
    178c:	20 69 6e 74 	.word 0x20696e74
    1790:	00 48 61 6e 	l.j 1219d48 <__stack+0xd99d4c>
    1794:	64 6c 65 46 	.word 0x646c6546
    1798:	70 67 61 00 	l.cust1 
    179c:	4d 45 4e 55 	l.maci r5,0x4e55
    17a0:	5f 46 49 52 	.word 0x5f464952
    17a4:	4d 57 41 52 	l.maci r23,0x4152
    17a8:	45 5f 4f 50 	l.jr r9
    17ac:	54 49 4f 4e 	.word 0x54494f4e
    17b0:	53 31 00 4d 	.word 0x5331004d
    17b4:	45 4e 55 5f 	l.jr r10
    17b8:	46 49 52 4d 	l.jr r10
    17bc:	57 41 52 45 	.word 0x57415245
    17c0:	5f 4f 50 54 	.word 0x5f4f5054
    17c4:	49 4f 4e 53 	l.jalr r9
    17c8:	32 00 72 64 	.word 0x32007264
    17cc:	62 5f 44 72 	.word 0x625f4472
    17d0:	69 76 65 49 	.word 0x69766549
    17d4:	6e 69 74 00 	.word 0x6e697400
    17d8:	5f 68 65 61 	.word 0x5f686561
    17dc:	70 5f 73 74 	l.cust1 
    17e0:	61 72 74 00 	.word 0x61727400
    17e4:	66 69 6e 64 	.word 0x66696e64
    17e8:	5f 66 69 6c 	.word 0x5f66696c
    17ec:	65 00 72 64 	.word 0x65007264
    17f0:	62 5f 52 44 	.word 0x625f5244
    17f4:	42 42 6c 6f 	.word 0x42426c6f
    17f8:	63 6b 73 4c 	.word 0x636b734c
    17fc:	6f 00 73 74 	.word 0x6f007374
    1800:	61 72 73 00 	.word 0x61727300
    1804:	46 69 6c 65 	l.jr r13
    1808:	57 72 69 74 	.word 0x57726974
    180c:	65 00 64 65 	.word 0x65006465
    1810:	5f 42 6c 6f 	.word 0x5f426c6f
    1814:	63 6b 73 50 	.word 0x636b7350
    1818:	65 72 54 72 	.word 0x65725472
    181c:	61 63 6b 00 	.word 0x61636b00
    1820:	66 61 74 33 	.word 0x66617433
    1824:	32 00 47 65 	.word 0x32004765
    1828:	74 46 50 47 	l.cust2 
    182c:	41 53 74 61 	.word 0x41537461
    1830:	74 75 73 00 	l.cust2 
    1834:	69 73 5f 73 	.word 0x69735f73
    1838:	74 72 69 6e 	l.cust2 
    183c:	67 00 68 69 	.word 0x67006869
    1840:	72 65 73 00 	l.cust1 
    1844:	74 78 77 70 	l.cust2 
    1848:	00 73 6c 61 	l.j 1cdc9cc <__stack+0x185c9d0>
    184c:	76 65 00 72 	l.cust2 
    1850:	64 62 5f 48 	.word 0x64625f48
    1854:	65 61 64 73 	.word 0x65616473
    1858:	00 6c 63 64 	l.j 1b1a5e8 <__stack+0x169a5ec>
    185c:	69 67 69 74 	.word 0x69676974
    1860:	73 00 4f 73 	l.cust1 
    1864:	64 57 72 69 	.word 0x64577269
    1868:	74 65 4f 66 	l.cust2 
    186c:	66 73 65 74 	.word 0x66736574
    1870:	00 70 62 5f 	l.j 1c1a1ec <__stack+0x179a1f0>
    1874:	46 6c 61 67 	l.jr r12
    1878:	73 00 64 65 	l.cust1 
    187c:	62 75 67 70 	.word 0x62756770
    1880:	74 72 00 66 	l.cust2 
    1884:	69 6c 74 65 	.word 0x696c7465
    1888:	72 00 46 4c 	l.cust1 
    188c:	5f 53 49 47 	.word 0x5f534947
    1890:	4e 45 44 00 	l.maci r5,0x4400
    1894:	66 61 74 5f 	.word 0x6661745f
    1898:	73 74 61 72 	l.cust1 
    189c:	74 00 72 6f 	l.cust2 
    18a0:	6f 74 5f 64 	.word 0x6f745f64
    18a4:	69 72 65 63 	.word 0x69726563
    18a8:	74 6f 72 79 	l.cust2 
    18ac:	5f 63 6c 75 	.word 0x5f636c75
    18b0:	73 74 65 72 	l.cust1 
    18b4:	00 73 65 63 	l.j 1cdae40 <__stack+0x185ae44>
    18b8:	74 6f 72 73 	l.cust2 
    18bc:	5f 70 65 72 	.word 0x5f706572
    18c0:	5f 62 6c 6f 	.word 0x5f626c6f
    18c4:	63 6b 00 73 	.word 0x636b0073
    18c8:	74 72 6c 65 	l.cust2 
    18cc:	6e 00 55 70 	.word 0x6e005570
    18d0:	6c 6f 61 64 	.word 0x6c6f6164
    18d4:	41 63 74 69 	.word 0x41637469
    18d8:	6f 6e 52 65 	.word 0x6f6e5265
    18dc:	70 6c 61 79 	l.cust1 
    18e0:	00 6d 6f 6e 	l.j 1b5d698 <__stack+0x16dd69c>
    18e4:	5f 73 74 65 	.word 0x5f737465
    18e8:	70 00 4d 45 	l.cust1 
    18ec:	4e 55 5f 45 	l.maci r21,0x5f45
    18f0:	52 52 4f 52 	.word 0x52524f52
    18f4:	00 55 70 64 	l.j 155da84 <__stack+0x10dda88>
    18f8:	61 74 65 45 	.word 0x61746545
    18fc:	6e 74 72 79 	.word 0x6e747279
    1900:	00 6c 6f 67 	l.j 1b1d69c <__stack+0x169d6a0>
    1904:	6f 64 61 74 	.word 0x6f646174
    1908:	61 00 64 65 	.word 0x61006465
    190c:	5f 53 65 63 	.word 0x5f536563
    1910:	4f 72 67 00 	l.maci r18,0x6700
    1914:	48 61 6e 64 	l.jalr r13
    1918:	6c 65 46 44 	.word 0x6c654644
    191c:	44 00 4d 45 	l.jr r9
    1920:	4e 55 5f 4d 	l.maci r21,0x5f4d
    1924:	49 53 43 31 	l.jalr r8
    1928:	00 70 62 5f 	l.j 1c1a2a4 <__stack+0x179a2a8>
    192c:	45 6e 76 69 	l.jr r14
    1930:	72 6f 6e 6d 	l.cust1 
    1934:	65 6e 74 00 	.word 0x656e7400
    1938:	66 61 74 5f 	.word 0x6661745f
    193c:	73 69 7a 65 	l.cust1 
    1940:	00 70 62 5f 	l.j 1c1a2bc <__stack+0x179a2c0>
    1944:	44 65 76 46 	l.jr r14
    1948:	6c 61 67 73 	.word 0x6c616773
    194c:	00 6d 6f 6e 	l.j 1b5d704 <__stack+0x16dd708>
    1950:	5f 72 65 76 	.word 0x5f726576
    1954:	69 73 69 6f 	.word 0x6973696f
    1958:	6e 00 47 65 	.word 0x6e004765
    195c:	74 48 65 61 	l.cust2 
    1960:	64 65 72 00 	.word 0x64657200
    1964:	62 6f 6f 74 	.word 0x626f6f74
    1968:	5f 66 6f 6e 	.word 0x5f666f6e
    196c:	74 00 4d 45 	l.cust2 
    1970:	4e 55 5f 46 	l.maci r21,0x5f46
    1974:	49 52 4d 57 	l.jalr r9
    1978:	41 52 45 5f 	.word 0x4152455f
    197c:	55 50 44 41 	.word 0x55504441
    1980:	54 45 5f 45 	.word 0x54455f45
    1984:	52 52 4f 52 	.word 0x52524f52
    1988:	31 00 4d 45 	.word 0x31004d45
    198c:	4e 55 5f 46 	l.maci r21,0x5f46
    1990:	49 52 4d 57 	l.jalr r9
    1994:	41 52 45 5f 	.word 0x4152455f
    1998:	55 50 44 41 	.word 0x55504441
    199c:	54 45 5f 45 	.word 0x54455f45
    19a0:	52 52 4f 52 	.word 0x52524f52
    19a4:	32 00 6b 69 	.word 0x32006b69
    19a8:	63 6b 73 74 	.word 0x636b7374
    19ac:	61 72 74 54 	.word 0x61727454
    19b0:	59 50 45 00 	.word 0x59504500
    19b4:	72 64 62 5f 	l.cust1 
    19b8:	53 74 65 70 	.word 0x53746570
    19bc:	52 61 74 65 	.word 0x52617465
    19c0:	00 63 6f 6e 	l.j 18dd778 <__stack+0x145d77c>
    19c4:	66 69 67 5f 	.word 0x6669675f
    19c8:	6d 65 6d 6f 	.word 0x6d656d6f
    19cc:	72 79 5f 66 	l.cust1 
    19d0:	61 73 74 5f 	.word 0x6173745f
    19d4:	6d 73 67 00 	.word 0x6d736700
    19d8:	4d 45 4e 55 	l.maci r5,0x4e55
    19dc:	5f 46 49 4c 	.word 0x5f46494c
    19e0:	45 5f 53 45 	l.jr r10
    19e4:	4c 45 43 54 	l.maci r5,0x4354
    19e8:	31 00 4d 45 	.word 0x31004d45
    19ec:	4e 55 5f 46 	l.maci r21,0x5f46
    19f0:	49 4c 45 5f 	l.jalr r8
    19f4:	53 45 4c 45 	.word 0x53454c45
    19f8:	43 54 32 00 	.word 0x43543200
    19fc:	73 74 5f 77 	l.cust1 
    1a00:	69 64 74 68 	.word 0x69647468
    1a04:	00 75 69 6e 	l.j 1d5bfbc <__stack+0x18dbfc0>
    1a08:	74 33 32 5f 	l.cust2 
    1a0c:	74 00 64 6f 	l.cust2 
    1a10:	77 6e 00 6e 	l.cust2 
    1a14:	64 69 67 69 	.word 0x64696769
    1a18:	74 73 00 68 	l.cust2 
    1a1c:	61 72 64 66 	.word 0x61726466
    1a20:	69 6c 65 54 	.word 0x696c6554
    1a24:	59 50 45 00 	.word 0x59504500
    1a28:	64 61 74 61 	.word 0x64617461
    1a2c:	5f 73 74 61 	.word 0x5f737461
    1a30:	72 74 00 73 	l.cust1 
    1a34:	70 74 74 00 	l.cust1 
    1a38:	45 72 72 6f 	l.jr r14
    1a3c:	72 4d 65 73 	l.cust1 
    1a40:	73 61 67 65 	l.cust1 
    1a44:	00 77 68 64 	l.j 1ddbbd4 <__stack+0x195bbd8>
    1a48:	5f 65 78 70 	.word 0x5f657870
    1a4c:	73 74 6f 70 	l.cust1 
    1a50:	00 73 74 69 	l.j 1cdebf4 <__stack+0x185ebf8>
    1a54:	70 70 6c 65 	l.cust1 
    1a58:	6d 61 73 6b 	.word 0x6d61736b
    1a5c:	00 63 64 33 	l.j 18dab28 <__stack+0x145ab2c>
    1a60:	32 00 70 72 	.word 0x32007072
    1a64:	65 73 65 6e 	.word 0x6573656e
    1a68:	74 00 4d 4d 	l.cust2 
    1a6c:	43 5f 47 65 	.word 0x435f4765
    1a70:	74 43 53 44 	l.cust2 
    1a74:	00 47 65 74 	l.j 11db044 <__stack+0xd5b048>
    1a78:	44 61 74 61 	l.jr r14
    1a7c:	00 77 61 69 	l.j 1dda020 <__stack+0x195a024>
    1a80:	74 00 73 74 	l.cust2 
    1a84:	72 63 61 74 	l.cust1 
    1a88:	00 73 68 6f 	l.j 1cdbc44 <__stack+0x185bc48>
    1a8c:	72 74 20 75 	l.cust1 
    1a90:	6e 73 69 67 	.word 0x6e736967
    1a94:	6e 65 64 20 	.word 0x6e656420
    1a98:	69 6e 74 00 	.word 0x696e7400
    1a9c:	6c 6f 6e 67 	.word 0x6c6f6e67
    1aa0:	5f 6e 61 6d 	.word 0x5f6e616d
    1aa4:	65 00 70 72 	.word 0x65007072
    1aa8:	65 76 5f 6e 	.word 0x65765f6e
    1aac:	61 6d 65 5f 	.word 0x616d655f
    1ab0:	63 68 65 63 	.word 0x63686563
    1ab4:	6b 73 75 6d 	.word 0x6b73756d
    1ab8:	00 5f 61 64 	l.j 17da048 <__stack+0x135a04c>
    1abc:	72 00 72 64 	l.cust1 
    1ac0:	62 5f 46 69 	.word 0x625f4669
    1ac4:	6c 65 53 79 	.word 0x6c655379
    1ac8:	73 48 65 61 	l.cust1 
    1acc:	64 65 72 4c 	.word 0x6465724c
    1ad0:	69 73 74 00 	.word 0x69737400
    1ad4:	6d 65 73 73 	.word 0x6d657373
    1ad8:	61 67 65 00 	.word 0x61676500
    1adc:	47 65 74 41 	l.jr r14
    1ae0:	53 43 49 49 	.word 0x53434949
    1ae4:	4b 65 79 00 	l.jalr r15
    1ae8:	6e 63 68 61 	.word 0x6e636861
    1aec:	72 73 00 72 	l.cust1 
    1af0:	64 62 5f 43 	.word 0x64625f43
    1af4:	6f 6e 74 72 	.word 0x6f6e7472
    1af8:	6f 6c 6c 65 	.word 0x6f6c6c65
    1afc:	72 52 65 76 	l.cust1 
    1b00:	69 73 69 6f 	.word 0x6973696f
    1b04:	6e 00 72 64 	.word 0x6e007264
    1b08:	62 5f 49 44 	.word 0x625f4944
    1b0c:	00 73 65 63 	l.j 1cdb098 <__stack+0x185b09c>
    1b10:	74 6f 72 5f 	l.cust2 
    1b14:	63 6f 75 6e 	.word 0x636f756e
    1b18:	74 00 46 4c 	l.cust2 
    1b1c:	5f 50 4c 55 	.word 0x5f504c55
    1b20:	53 00 73 74 	.word 0x53007374
    1b24:	5f 70 72 65 	.word 0x5f707265
    1b28:	63 00 73 74 	.word 0x63007374
    1b2c:	5f 6d 6f 64 	.word 0x5f6d6f64
    1b30:	69 66 69 65 	.word 0x69666965
    1b34:	72 73 00 53 	l.cust1 
    1b38:	63 72 6f 6c 	.word 0x63726f6c
    1b3c:	6c 52 65 73 	.word 0x6c526573
    1b40:	65 74 00 73 	.word 0x65740073
    1b44:	61 72 67 00 	.word 0x61726700
    1b48:	4c 6f 61 64 	l.maci r15,0x6164
    1b4c:	43 6f 6e 66 	.word 0x436f6e66
    1b50:	69 67 75 72 	.word 0x69677572
    1b54:	61 74 69 6f 	.word 0x6174696f
    1b58:	6e 00 46 4c 	.word 0x6e00464c
    1b5c:	5f 53 50 41 	.word 0x5f535041
    1b60:	43 45 00 64 	.word 0x43450064
    1b64:	65 5f 53 65 	.word 0x655f5365
    1b68:	63 74 6f 72 	.word 0x63746f72
    1b6c:	50 65 72 42 	.word 0x50657242
    1b70:	6c 6f 63 6b 	.word 0x6c6f636b
    1b74:	00 6f 70 74 	l.j 1bddd44 <__stack+0x175dd48>
    1b78:	69 6f 6e 73 	.word 0x696f6e73
    1b7c:	00 46 69 6c 	l.j 119c12c <__stack+0xd1c130>
    1b80:	65 53 69 7a 	.word 0x6553697a
    1b84:	65 00 72 64 	.word 0x65007264
    1b88:	62 5f 43 79 	.word 0x625f4379
    1b8c:	6c 69 6e 64 	.word 0x6c696e64
    1b90:	65 72 73 00 	.word 0x65727300
    1b94:	72 61 6e 6b 	l.cust1 
    1b98:	5f 63 68 61 	.word 0x5f636861
    1b9c:	72 00 43 6f 	l.cust1 
    1ba0:	6e 66 69 67 	.word 0x6e666967
    1ba4:	49 44 45 00 	l.jalr r8
    1ba8:	72 61 6e 6b 	l.cust1 
    1bac:	73 00 61 31 	l.cust1 
    1bb0:	32 30 30 00 	.word 0x32303000
    1bb4:	4d 45 4e 55 	l.maci r5,0x4e55
    1bb8:	5f 52 4f 4d 	.word 0x5f524f4d
    1bbc:	46 49 4c 45 	l.jr r9
    1bc0:	5f 53 45 4c 	.word 0x5f53454c
    1bc4:	45 43 54 45 	l.jr r10
    1bc8:	44 00 70 57 	l.jr r14
    1bcc:	72 69 74 65 	l.cust1 
    1bd0:	42 75 66 66 	.word 0x42756666
    1bd4:	65 72 00 70 	.word 0x65720070
    1bd8:	44 61 74 61 	l.jr r14
    1bdc:	00 6f 72 69 	l.j 1bde580 <__stack+0x175e584>
    1be0:	67 69 6e 00 	.word 0x67696e00
    1be4:	72 64 62 5f 	l.cust1 
    1be8:	43 79 6c 42 	.word 0x43796c42
    1bec:	6c 6f 63 6b 	.word 0x6c6f636b
    1bf0:	73 00 55 70 	l.cust1 
    1bf4:	6c 6f 61 64 	.word 0x6c6f6164
    1bf8:	4b 69 63 6b 	l.jalr r12
    1bfc:	73 74 61 72 	l.cust1 
    1c00:	74 00 6c 76 	l.cust2 
    1c04:	69 65 77 00 	.word 0x69657700
    1c08:	53 77 61 70 	.word 0x53776170
    1c0c:	50 61 72 74 	.word 0x50617274
    1c10:	69 74 69 6f 	.word 0x6974696f
    1c14:	6e 42 79 74 	.word 0x6e427974
    1c18:	65 73 00 64 	.word 0x65730064
    1c1c:	73 6b 73 79 	l.cust1 
    1c20:	6e 63 68 00 	.word 0x6e636800
    1c24:	65 72 72 6f 	.word 0x6572726f
    1c28:	72 5f 73 74 	l.cust1 
    1c2c:	61 74 75 73 	.word 0x61747573
    1c30:	00 73 75 70 	l.j 1cdf1f0 <__stack+0x185f1f4>
    1c34:	65 72 69 6d 	.word 0x6572696d
    1c38:	70 6f 73 65 	l.cust1 
    1c3c:	00 69 73 5f 	l.j 1a5e9b8 <__stack+0x15de9bc>
    1c40:	75 6e 73 69 	l.cust2 
    1c44:	67 6e 65 64 	.word 0x676e6564
    1c48:	00 62 34 74 	l.j 188ee18 <__stack+0x140ee1c>
    1c4c:	69 63 6b 00 	.word 0x69636b00
    1c50:	42 6f 6f 74 	.word 0x426f6f74
    1c54:	50 72 69 6e 	.word 0x5072696e
    1c58:	74 00 63 68 	l.cust2 
    1c5c:	61 72 66 6f 	.word 0x6172666f
    1c60:	6e 74 00 69 	.word 0x6e740069
    1c64:	43 75 72 72 	.word 0x43757272
    1c68:	65 6e 74 44 	.word 0x656e7444
    1c6c:	69 72 65 63 	.word 0x69726563
    1c70:	74 6f 72 79 	l.cust2 
    1c74:	00 64 65 5f 	l.j 191b1f0 <__stack+0x149b1f4>
    1c78:	48 69 67 68 	l.jalr r12
    1c7c:	43 79 6c 00 	.word 0x43796c00
    1c80:	4d 6f 64 69 	l.maci r15,0x6469
    1c84:	66 79 54 69 	.word 0x66795469
    1c88:	6d 65 00 63 	.word 0x6d650063
    1c8c:	6f 6e 66 69 	.word 0x6f6e6669
    1c90:	67 5f 63 70 	.word 0x675f6370
    1c94:	75 5f 6d 73 	l.cust2 
    1c98:	Address 0x00001c98 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	47 43 43 3a 	l.jr r8
   4:	20 28 4f 70 	.word 0x20284f70
   8:	65 6e 52 49 	.word 0x656e5249
   c:	53 43 20 33 	.word 0x53432033
  10:	32 2d 62 69 	.word 0x322d6269
  14:	74 20 74 6f 	l.cust2 
  18:	6f 6c 63 68 	.word 0x6f6c6368
  1c:	61 69 6e 20 	.word 0x61696e20
  20:	66 6f 72 20 	.word 0x666f7220
  24:	6f 72 33 32 	.word 0x6f723332
  28:	2d 65 6c 66 	.word 0x2d656c66
  2c:	20 28 62 75 	.word 0x20286275
  30:	69 6c 74 20 	.word 0x696c7420
  34:	32 30 31 31 	.word 0x32303131
  38:	30 34 31 30 	.word 0x30343130
  3c:	29 29 20 34 	lv.addu.b r9,r9,r4
  40:	2e 35 2e 31 	.word 0x2e352e31
  44:	2d 6f 72 33 	.word 0x2d6f7233
  48:	32 2d 31 2e 	.word 0x322d312e
  4c:	30 72 63 34 	.word 0x30726334
	...
